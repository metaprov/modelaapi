/**
*
* Copyright (C) 2017 modeld authors
* For license information, see LICENSE.txt
 */
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/metaprov/modeldapi/pkg/apis/data/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FeaturesetLister helps list Featuresets.
// All objects returned here must be treated as read-only.
type FeaturesetLister interface {
	// List lists all Featuresets in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Featureset, err error)
	// Featuresets returns an object that can list and get Featuresets.
	Featuresets(namespace string) FeaturesetNamespaceLister
	FeaturesetListerExpansion
}

// featuresetLister implements the FeaturesetLister interface.
type featuresetLister struct {
	indexer cache.Indexer
}

// NewFeaturesetLister returns a new FeaturesetLister.
func NewFeaturesetLister(indexer cache.Indexer) FeaturesetLister {
	return &featuresetLister{indexer: indexer}
}

// List lists all Featuresets in the indexer.
func (s *featuresetLister) List(selector labels.Selector) (ret []*v1alpha1.Featureset, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Featureset))
	})
	return ret, err
}

// Featuresets returns an object that can list and get Featuresets.
func (s *featuresetLister) Featuresets(namespace string) FeaturesetNamespaceLister {
	return featuresetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FeaturesetNamespaceLister helps list and get Featuresets.
// All objects returned here must be treated as read-only.
type FeaturesetNamespaceLister interface {
	// List lists all Featuresets in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Featureset, err error)
	// Get retrieves the Featureset from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Featureset, error)
	FeaturesetNamespaceListerExpansion
}

// featuresetNamespaceLister implements the FeaturesetNamespaceLister
// interface.
type featuresetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Featuresets in the indexer for a given namespace.
func (s featuresetNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Featureset, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Featureset))
	})
	return ret, err
}

// Get retrieves the Featureset from the indexer for a given namespace and name.
func (s featuresetNamespaceLister) Get(name string) (*v1alpha1.Featureset, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("featureset"), name)
	}
	return obj.(*v1alpha1.Featureset), nil
}
