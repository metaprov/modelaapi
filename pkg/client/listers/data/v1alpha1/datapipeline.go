/**
*
* Copyright (C) 2017 modeld authors
* For license information, see LICENSE.txt
 */
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/metaprov/modeldapi/pkg/apis/data/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DataPipelineLister helps list DataPipelines.
// All objects returned here must be treated as read-only.
type DataPipelineLister interface {
	// List lists all DataPipelines in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.DataPipeline, err error)
	// DataPipelines returns an object that can list and get DataPipelines.
	DataPipelines(namespace string) DataPipelineNamespaceLister
	DataPipelineListerExpansion
}

// dataPipelineLister implements the DataPipelineLister interface.
type dataPipelineLister struct {
	indexer cache.Indexer
}

// NewDataPipelineLister returns a new DataPipelineLister.
func NewDataPipelineLister(indexer cache.Indexer) DataPipelineLister {
	return &dataPipelineLister{indexer: indexer}
}

// List lists all DataPipelines in the indexer.
func (s *dataPipelineLister) List(selector labels.Selector) (ret []*v1alpha1.DataPipeline, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DataPipeline))
	})
	return ret, err
}

// DataPipelines returns an object that can list and get DataPipelines.
func (s *dataPipelineLister) DataPipelines(namespace string) DataPipelineNamespaceLister {
	return dataPipelineNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DataPipelineNamespaceLister helps list and get DataPipelines.
// All objects returned here must be treated as read-only.
type DataPipelineNamespaceLister interface {
	// List lists all DataPipelines in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.DataPipeline, err error)
	// Get retrieves the DataPipeline from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.DataPipeline, error)
	DataPipelineNamespaceListerExpansion
}

// dataPipelineNamespaceLister implements the DataPipelineNamespaceLister
// interface.
type dataPipelineNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DataPipelines in the indexer for a given namespace.
func (s dataPipelineNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DataPipeline, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DataPipeline))
	})
	return ret, err
}

// Get retrieves the DataPipeline from the indexer for a given namespace and name.
func (s dataPipelineNamespaceLister) Get(name string) (*v1alpha1.DataPipeline, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("datapipeline"), name)
	}
	return obj.(*v1alpha1.DataPipeline), nil
}
