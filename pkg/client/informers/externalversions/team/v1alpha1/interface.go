/**
*
* Copyright (C) 2017 modeld authors
* For license information, see LICENSE.txt
 */
// Code generated by informer-gen. DO NOT EDIT.

package v1alpha1

import (
	internalinterfaces "github.com/metaprov/modeldapi/pkg/client/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// Conversations returns a ConversationInformer.
	Conversations() ConversationInformer
	// PostMortems returns a PostMortemInformer.
	PostMortems() PostMortemInformer
	// RunBooks returns a RunBookInformer.
	RunBooks() RunBookInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// Conversations returns a ConversationInformer.
func (v *version) Conversations() ConversationInformer {
	return &conversationInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// PostMortems returns a PostMortemInformer.
func (v *version) PostMortems() PostMortemInformer {
	return &postMortemInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// RunBooks returns a RunBookInformer.
func (v *version) RunBooks() RunBookInformer {
	return &runBookInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
