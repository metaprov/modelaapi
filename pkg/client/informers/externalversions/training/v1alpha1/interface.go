/**
*
* Copyright (C) 2017 modeld authors
* For license information, see LICENSE.txt
 */
// Code generated by informer-gen. DO NOT EDIT.

package v1alpha1

import (
	internalinterfaces "github.com/metaprov/modeldapi/pkg/client/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// Models returns a ModelInformer.
	Models() ModelInformer
	// ModelAutobuilders returns a ModelAutobuilderInformer.
	ModelAutobuilders() ModelAutobuilderInformer
	// ModelPipelines returns a ModelPipelineInformer.
	ModelPipelines() ModelPipelineInformer
	// ModelPipelineRuns returns a ModelPipelineRunInformer.
	ModelPipelineRuns() ModelPipelineRunInformer
	// Notebooks returns a NotebookInformer.
	Notebooks() NotebookInformer
	// NotebookRuns returns a NotebookRunInformer.
	NotebookRuns() NotebookRunInformer
	// Reports returns a ReportInformer.
	Reports() ReportInformer
	// Studies returns a StudyInformer.
	Studies() StudyInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// Models returns a ModelInformer.
func (v *version) Models() ModelInformer {
	return &modelInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// ModelAutobuilders returns a ModelAutobuilderInformer.
func (v *version) ModelAutobuilders() ModelAutobuilderInformer {
	return &modelAutobuilderInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// ModelPipelines returns a ModelPipelineInformer.
func (v *version) ModelPipelines() ModelPipelineInformer {
	return &modelPipelineInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// ModelPipelineRuns returns a ModelPipelineRunInformer.
func (v *version) ModelPipelineRuns() ModelPipelineRunInformer {
	return &modelPipelineRunInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Notebooks returns a NotebookInformer.
func (v *version) Notebooks() NotebookInformer {
	return &notebookInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// NotebookRuns returns a NotebookRunInformer.
func (v *version) NotebookRuns() NotebookRunInformer {
	return &notebookRunInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Reports returns a ReportInformer.
func (v *version) Reports() ReportInformer {
	return &reportInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Studies returns a StudyInformer.
func (v *version) Studies() StudyInformer {
	return &studyInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
