/**
*
* Copyright (C) 2017 modeld authors
* For license information, see LICENSE.txt
 */
// Code generated by informer-gen. DO NOT EDIT.

package v1alpha1

import (
	internalinterfaces "github.com/metaprov/modeldapi/pkg/client/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// Curtains returns a CurtainInformer.
	Curtains() CurtainInformer
	// PredictionPipelines returns a PredictionPipelineInformer.
	PredictionPipelines() PredictionPipelineInformer
	// PredictionPipelineRuns returns a PredictionPipelineRunInformer.
	PredictionPipelineRuns() PredictionPipelineRunInformer
	// Predictors returns a PredictorInformer.
	Predictors() PredictorInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// Curtains returns a CurtainInformer.
func (v *version) Curtains() CurtainInformer {
	return &curtainInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// PredictionPipelines returns a PredictionPipelineInformer.
func (v *version) PredictionPipelines() PredictionPipelineInformer {
	return &predictionPipelineInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// PredictionPipelineRuns returns a PredictionPipelineRunInformer.
func (v *version) PredictionPipelineRuns() PredictionPipelineRunInformer {
	return &predictionPipelineRunInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Predictors returns a PredictorInformer.
func (v *version) Predictors() PredictorInformer {
	return &predictorInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
