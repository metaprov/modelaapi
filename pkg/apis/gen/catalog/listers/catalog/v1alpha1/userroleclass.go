/**
*
* Copyright (C) 2017 modeld authors
* For license information, see LICENSE.txt
 */
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/metaprov/modeldapi/pkg/apis/catalog/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// UserRoleClassLister helps list UserRoleClasses.
type UserRoleClassLister interface {
	// List lists all UserRoleClasses in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.UserRoleClass, err error)
	// UserRoleClasses returns an object that can list and get UserRoleClasses.
	UserRoleClasses(namespace string) UserRoleClassNamespaceLister
	UserRoleClassListerExpansion
}

// userRoleClassLister implements the UserRoleClassLister interface.
type userRoleClassLister struct {
	indexer cache.Indexer
}

// NewUserRoleClassLister returns a new UserRoleClassLister.
func NewUserRoleClassLister(indexer cache.Indexer) UserRoleClassLister {
	return &userRoleClassLister{indexer: indexer}
}

// List lists all UserRoleClasses in the indexer.
func (s *userRoleClassLister) List(selector labels.Selector) (ret []*v1alpha1.UserRoleClass, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.UserRoleClass))
	})
	return ret, err
}

// UserRoleClasses returns an object that can list and get UserRoleClasses.
func (s *userRoleClassLister) UserRoleClasses(namespace string) UserRoleClassNamespaceLister {
	return userRoleClassNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// UserRoleClassNamespaceLister helps list and get UserRoleClasses.
type UserRoleClassNamespaceLister interface {
	// List lists all UserRoleClasses in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.UserRoleClass, err error)
	// Get retrieves the UserRoleClass from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.UserRoleClass, error)
	UserRoleClassNamespaceListerExpansion
}

// userRoleClassNamespaceLister implements the UserRoleClassNamespaceLister
// interface.
type userRoleClassNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all UserRoleClasses in the indexer for a given namespace.
func (s userRoleClassNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.UserRoleClass, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.UserRoleClass))
	})
	return ret, err
}

// Get retrieves the UserRoleClass from the indexer for a given namespace and name.
func (s userRoleClassNamespaceLister) Get(name string) (*v1alpha1.UserRoleClass, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("userroleclass"), name)
	}
	return obj.(*v1alpha1.UserRoleClass), nil
}
