/**
*
* Copyright (C) 2017 modeld authors
* For license information, see LICENSE.txt
 */
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/metaprov/modeld-api/pkg/apis/catalog/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PretrainedModelLister helps list PretrainedModels.
type PretrainedModelLister interface {
	// List lists all PretrainedModels in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.PretrainedModel, err error)
	// PretrainedModels returns an object that can list and get PretrainedModels.
	PretrainedModels(namespace string) PretrainedModelNamespaceLister
	PretrainedModelListerExpansion
}

// pretrainedModelLister implements the PretrainedModelLister interface.
type pretrainedModelLister struct {
	indexer cache.Indexer
}

// NewPretrainedModelLister returns a new PretrainedModelLister.
func NewPretrainedModelLister(indexer cache.Indexer) PretrainedModelLister {
	return &pretrainedModelLister{indexer: indexer}
}

// List lists all PretrainedModels in the indexer.
func (s *pretrainedModelLister) List(selector labels.Selector) (ret []*v1alpha1.PretrainedModel, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PretrainedModel))
	})
	return ret, err
}

// PretrainedModels returns an object that can list and get PretrainedModels.
func (s *pretrainedModelLister) PretrainedModels(namespace string) PretrainedModelNamespaceLister {
	return pretrainedModelNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PretrainedModelNamespaceLister helps list and get PretrainedModels.
type PretrainedModelNamespaceLister interface {
	// List lists all PretrainedModels in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.PretrainedModel, err error)
	// Get retrieves the PretrainedModel from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.PretrainedModel, error)
	PretrainedModelNamespaceListerExpansion
}

// pretrainedModelNamespaceLister implements the PretrainedModelNamespaceLister
// interface.
type pretrainedModelNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PretrainedModels in the indexer for a given namespace.
func (s pretrainedModelNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.PretrainedModel, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PretrainedModel))
	})
	return ret, err
}

// Get retrieves the PretrainedModel from the indexer for a given namespace and name.
func (s pretrainedModelNamespaceLister) Get(name string) (*v1alpha1.PretrainedModel, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("pretrainedmodel"), name)
	}
	return obj.(*v1alpha1.PretrainedModel), nil
}
