/**
*
* Copyright (C) 2017 modeld authors
* For license information, see LICENSE.txt
 */
// Code generated by informer-gen. DO NOT EDIT.

package v1alpha1

import (
	internalinterfaces "github.com/metaprov/modeldapi/pkg/apis/gen/infra/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// Accounts returns a AccountInformer.
	Accounts() AccountInformer
	// Connections returns a ConnectionInformer.
	Connections() ConnectionInformer
	// Labs returns a LabInformer.
	Labs() LabInformer
	// Licenses returns a LicenseInformer.
	Licenses() LicenseInformer
	// MachineImages returns a MachineImageInformer.
	MachineImages() MachineImageInformer
	// Notifiers returns a NotifierInformer.
	Notifiers() NotifierInformer
	// ServingSites returns a ServingSiteInformer.
	ServingSites() ServingSiteInformer
	// Tenants returns a TenantInformer.
	Tenants() TenantInformer
	// VirtualBuckets returns a VirtualBucketInformer.
	VirtualBuckets() VirtualBucketInformer
	// VirtualClusters returns a VirtualClusterInformer.
	VirtualClusters() VirtualClusterInformer
	// VirtualVolumes returns a VirtualVolumeInformer.
	VirtualVolumes() VirtualVolumeInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// Accounts returns a AccountInformer.
func (v *version) Accounts() AccountInformer {
	return &accountInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Connections returns a ConnectionInformer.
func (v *version) Connections() ConnectionInformer {
	return &connectionInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Labs returns a LabInformer.
func (v *version) Labs() LabInformer {
	return &labInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Licenses returns a LicenseInformer.
func (v *version) Licenses() LicenseInformer {
	return &licenseInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// MachineImages returns a MachineImageInformer.
func (v *version) MachineImages() MachineImageInformer {
	return &machineImageInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Notifiers returns a NotifierInformer.
func (v *version) Notifiers() NotifierInformer {
	return &notifierInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// ServingSites returns a ServingSiteInformer.
func (v *version) ServingSites() ServingSiteInformer {
	return &servingSiteInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Tenants returns a TenantInformer.
func (v *version) Tenants() TenantInformer {
	return &tenantInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// VirtualBuckets returns a VirtualBucketInformer.
func (v *version) VirtualBuckets() VirtualBucketInformer {
	return &virtualBucketInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// VirtualClusters returns a VirtualClusterInformer.
func (v *version) VirtualClusters() VirtualClusterInformer {
	return &virtualClusterInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// VirtualVolumes returns a VirtualVolumeInformer.
func (v *version) VirtualVolumes() VirtualVolumeInformer {
	return &virtualVolumeInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
