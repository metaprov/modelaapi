/**
*
* Copyright (C) 2017 modeld authors
* For license information, see LICENSE.txt
 */
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/metaprov/modeldapi/pkg/apis/infra/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// VirtualVolumeLister helps list VirtualVolumes.
type VirtualVolumeLister interface {
	// List lists all VirtualVolumes in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.VirtualVolume, err error)
	// VirtualVolumes returns an object that can list and get VirtualVolumes.
	VirtualVolumes(namespace string) VirtualVolumeNamespaceLister
	VirtualVolumeListerExpansion
}

// virtualVolumeLister implements the VirtualVolumeLister interface.
type virtualVolumeLister struct {
	indexer cache.Indexer
}

// NewVirtualVolumeLister returns a new VirtualVolumeLister.
func NewVirtualVolumeLister(indexer cache.Indexer) VirtualVolumeLister {
	return &virtualVolumeLister{indexer: indexer}
}

// List lists all VirtualVolumes in the indexer.
func (s *virtualVolumeLister) List(selector labels.Selector) (ret []*v1alpha1.VirtualVolume, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VirtualVolume))
	})
	return ret, err
}

// VirtualVolumes returns an object that can list and get VirtualVolumes.
func (s *virtualVolumeLister) VirtualVolumes(namespace string) VirtualVolumeNamespaceLister {
	return virtualVolumeNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// VirtualVolumeNamespaceLister helps list and get VirtualVolumes.
type VirtualVolumeNamespaceLister interface {
	// List lists all VirtualVolumes in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.VirtualVolume, err error)
	// Get retrieves the VirtualVolume from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.VirtualVolume, error)
	VirtualVolumeNamespaceListerExpansion
}

// virtualVolumeNamespaceLister implements the VirtualVolumeNamespaceLister
// interface.
type virtualVolumeNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all VirtualVolumes in the indexer for a given namespace.
func (s virtualVolumeNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.VirtualVolume, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VirtualVolume))
	})
	return ret, err
}

// Get retrieves the VirtualVolume from the indexer for a given namespace and name.
func (s virtualVolumeNamespaceLister) Get(name string) (*v1alpha1.VirtualVolume, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("virtualvolume"), name)
	}
	return obj.(*v1alpha1.VirtualVolume), nil
}
