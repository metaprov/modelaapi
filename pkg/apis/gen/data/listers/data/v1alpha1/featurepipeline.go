/**
*
* Copyright (C) 2017 modeld authors
* For license information, see LICENSE.txt
 */
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/metaprov/modeldapi/pkg/apis/data/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FeaturePipelineLister helps list FeaturePipelines.
type FeaturePipelineLister interface {
	// List lists all FeaturePipelines in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.FeaturePipeline, err error)
	// FeaturePipelines returns an object that can list and get FeaturePipelines.
	FeaturePipelines(namespace string) FeaturePipelineNamespaceLister
	FeaturePipelineListerExpansion
}

// featurePipelineLister implements the FeaturePipelineLister interface.
type featurePipelineLister struct {
	indexer cache.Indexer
}

// NewFeaturePipelineLister returns a new FeaturePipelineLister.
func NewFeaturePipelineLister(indexer cache.Indexer) FeaturePipelineLister {
	return &featurePipelineLister{indexer: indexer}
}

// List lists all FeaturePipelines in the indexer.
func (s *featurePipelineLister) List(selector labels.Selector) (ret []*v1alpha1.FeaturePipeline, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FeaturePipeline))
	})
	return ret, err
}

// FeaturePipelines returns an object that can list and get FeaturePipelines.
func (s *featurePipelineLister) FeaturePipelines(namespace string) FeaturePipelineNamespaceLister {
	return featurePipelineNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FeaturePipelineNamespaceLister helps list and get FeaturePipelines.
type FeaturePipelineNamespaceLister interface {
	// List lists all FeaturePipelines in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.FeaturePipeline, err error)
	// Get retrieves the FeaturePipeline from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.FeaturePipeline, error)
	FeaturePipelineNamespaceListerExpansion
}

// featurePipelineNamespaceLister implements the FeaturePipelineNamespaceLister
// interface.
type featurePipelineNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FeaturePipelines in the indexer for a given namespace.
func (s featurePipelineNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.FeaturePipeline, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FeaturePipeline))
	})
	return ret, err
}

// Get retrieves the FeaturePipeline from the indexer for a given namespace and name.
func (s featurePipelineNamespaceLister) Get(name string) (*v1alpha1.FeaturePipeline, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("featurepipeline"), name)
	}
	return obj.(*v1alpha1.FeaturePipeline), nil
}
