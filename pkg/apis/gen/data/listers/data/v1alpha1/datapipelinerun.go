/**
*
* Copyright (C) 2017 modeld authors
* For license information, see LICENSE.txt
 */
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/metaprov/modeldapi/pkg/apis/data/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DataPipelineRunLister helps list DataPipelineRuns.
type DataPipelineRunLister interface {
	// List lists all DataPipelineRuns in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.DataPipelineRun, err error)
	// DataPipelineRuns returns an object that can list and get DataPipelineRuns.
	DataPipelineRuns(namespace string) DataPipelineRunNamespaceLister
	DataPipelineRunListerExpansion
}

// dataPipelineRunLister implements the DataPipelineRunLister interface.
type dataPipelineRunLister struct {
	indexer cache.Indexer
}

// NewDataPipelineRunLister returns a new DataPipelineRunLister.
func NewDataPipelineRunLister(indexer cache.Indexer) DataPipelineRunLister {
	return &dataPipelineRunLister{indexer: indexer}
}

// List lists all DataPipelineRuns in the indexer.
func (s *dataPipelineRunLister) List(selector labels.Selector) (ret []*v1alpha1.DataPipelineRun, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DataPipelineRun))
	})
	return ret, err
}

// DataPipelineRuns returns an object that can list and get DataPipelineRuns.
func (s *dataPipelineRunLister) DataPipelineRuns(namespace string) DataPipelineRunNamespaceLister {
	return dataPipelineRunNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DataPipelineRunNamespaceLister helps list and get DataPipelineRuns.
type DataPipelineRunNamespaceLister interface {
	// List lists all DataPipelineRuns in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.DataPipelineRun, err error)
	// Get retrieves the DataPipelineRun from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.DataPipelineRun, error)
	DataPipelineRunNamespaceListerExpansion
}

// dataPipelineRunNamespaceLister implements the DataPipelineRunNamespaceLister
// interface.
type dataPipelineRunNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DataPipelineRuns in the indexer for a given namespace.
func (s dataPipelineRunNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DataPipelineRun, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DataPipelineRun))
	})
	return ret, err
}

// Get retrieves the DataPipelineRun from the indexer for a given namespace and name.
func (s dataPipelineRunNamespaceLister) Get(name string) (*v1alpha1.DataPipelineRun, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("datapipelinerun"), name)
	}
	return obj.(*v1alpha1.DataPipelineRun), nil
}
