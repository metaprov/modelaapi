/**
*
* Copyright (C) 2017 modeld authors
* For license information, see LICENSE.txt
 */
// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/metaprov/modeldapi/pkg/apis/gen/data/clientset/versioned/typed/data/v1alpha1"
	rest "k8s.io/client-go/rest"
	testing "k8s.io/client-go/testing"
)

type FakeDataV1alpha1 struct {
	*testing.Fake
}

func (c *FakeDataV1alpha1) DataPipelines(namespace string) v1alpha1.DataPipelineInterface {
	return &FakeDataPipelines{c, namespace}
}

func (c *FakeDataV1alpha1) DataPipelineRuns(namespace string) v1alpha1.DataPipelineRunInterface {
	return &FakeDataPipelineRuns{c, namespace}
}

func (c *FakeDataV1alpha1) DataProducts(namespace string) v1alpha1.DataProductInterface {
	return &FakeDataProducts{c, namespace}
}

func (c *FakeDataV1alpha1) DataProductVersions(namespace string) v1alpha1.DataProductVersionInterface {
	return &FakeDataProductVersions{c, namespace}
}

func (c *FakeDataV1alpha1) DataSources(namespace string) v1alpha1.DataSourceInterface {
	return &FakeDataSources{c, namespace}
}

func (c *FakeDataV1alpha1) Datasets(namespace string) v1alpha1.DatasetInterface {
	return &FakeDatasets{c, namespace}
}

func (c *FakeDataV1alpha1) Entities(namespace string) v1alpha1.EntityInterface {
	return &FakeEntities{c, namespace}
}

func (c *FakeDataV1alpha1) Features(namespace string) v1alpha1.FeatureInterface {
	return &FakeFeatures{c, namespace}
}

func (c *FakeDataV1alpha1) FeaturePipelines(namespace string) v1alpha1.FeaturePipelineInterface {
	return &FakeFeaturePipelines{c, namespace}
}

func (c *FakeDataV1alpha1) FeaturePipelineRuns(namespace string) v1alpha1.FeaturePipelineRunInterface {
	return &FakeFeaturePipelineRuns{c, namespace}
}

func (c *FakeDataV1alpha1) Featuresets(namespace string) v1alpha1.FeaturesetInterface {
	return &FakeFeaturesets{c, namespace}
}

func (c *FakeDataV1alpha1) LabelingPipelines(namespace string) v1alpha1.LabelingPipelineInterface {
	return &FakeLabelingPipelines{c, namespace}
}

func (c *FakeDataV1alpha1) LabelingPipelineRuns(namespace string) v1alpha1.LabelingPipelineRunInterface {
	return &FakeLabelingPipelineRuns{c, namespace}
}

func (c *FakeDataV1alpha1) Recipes(namespace string) v1alpha1.RecipeInterface {
	return &FakeRecipes{c, namespace}
}

func (c *FakeDataV1alpha1) RecipeRuns(namespace string) v1alpha1.RecipeRunInterface {
	return &FakeRecipeRuns{c, namespace}
}

// RESTClient returns a RESTClient that is used to communicate
// with API server by this client implementation.
func (c *FakeDataV1alpha1) RESTClient() rest.Interface {
	var ret *rest.RESTClient
	return ret
}
