/**
*
* Copyright (C) 2017 modeld authors
* For license information, see LICENSE.txt
 */
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/metaprov/modeldapi/pkg/apis/training/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ModelAutobuilderLister helps list ModelAutobuilders.
type ModelAutobuilderLister interface {
	// List lists all ModelAutobuilders in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ModelAutobuilder, err error)
	// ModelAutobuilders returns an object that can list and get ModelAutobuilders.
	ModelAutobuilders(namespace string) ModelAutobuilderNamespaceLister
	ModelAutobuilderListerExpansion
}

// modelAutobuilderLister implements the ModelAutobuilderLister interface.
type modelAutobuilderLister struct {
	indexer cache.Indexer
}

// NewModelAutobuilderLister returns a new ModelAutobuilderLister.
func NewModelAutobuilderLister(indexer cache.Indexer) ModelAutobuilderLister {
	return &modelAutobuilderLister{indexer: indexer}
}

// List lists all ModelAutobuilders in the indexer.
func (s *modelAutobuilderLister) List(selector labels.Selector) (ret []*v1alpha1.ModelAutobuilder, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ModelAutobuilder))
	})
	return ret, err
}

// ModelAutobuilders returns an object that can list and get ModelAutobuilders.
func (s *modelAutobuilderLister) ModelAutobuilders(namespace string) ModelAutobuilderNamespaceLister {
	return modelAutobuilderNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ModelAutobuilderNamespaceLister helps list and get ModelAutobuilders.
type ModelAutobuilderNamespaceLister interface {
	// List lists all ModelAutobuilders in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ModelAutobuilder, err error)
	// Get retrieves the ModelAutobuilder from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ModelAutobuilder, error)
	ModelAutobuilderNamespaceListerExpansion
}

// modelAutobuilderNamespaceLister implements the ModelAutobuilderNamespaceLister
// interface.
type modelAutobuilderNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ModelAutobuilders in the indexer for a given namespace.
func (s modelAutobuilderNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ModelAutobuilder, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ModelAutobuilder))
	})
	return ret, err
}

// Get retrieves the ModelAutobuilder from the indexer for a given namespace and name.
func (s modelAutobuilderNamespaceLister) Get(name string) (*v1alpha1.ModelAutobuilder, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("modelautobuilder"), name)
	}
	return obj.(*v1alpha1.ModelAutobuilder), nil
}
