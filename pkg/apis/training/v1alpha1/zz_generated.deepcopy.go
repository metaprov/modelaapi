// +build !ignore_autogenerated

/**
*
* Copyright (C) 2017 modeld authors
* For license information, see LICENSE.txt
 */

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	catalogv1alpha1 "github.com/metaprov/modeldapi/pkg/apis/catalog/v1alpha1"
	datav1alpha1 "github.com/metaprov/modeldapi/pkg/apis/data/v1alpha1"
	inferencev1alpha1 "github.com/metaprov/modeldapi/pkg/apis/inference/v1alpha1"
	"k8s.io/api/core/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AudioPipelineSpec) DeepCopyInto(out *AudioPipelineSpec) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Featurizer != nil {
		in, out := &in.Featurizer, &out.Featurizer
		*out = new(catalogv1alpha1.AudioFeaturizer)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AudioPipelineSpec.
func (in *AudioPipelineSpec) DeepCopy() *AudioPipelineSpec {
	if in == nil {
		return nil
	}
	out := new(AudioPipelineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BacktestSpec) DeepCopyInto(out *BacktestSpec) {
	*out = *in
	if in.Initial != nil {
		in, out := &in.Initial, &out.Initial
		*out = new(int32)
		**out = **in
	}
	if in.Windows != nil {
		in, out := &in.Windows, &out.Windows
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BacktestSpec.
func (in *BacktestSpec) DeepCopy() *BacktestSpec {
	if in == nil {
		return nil
	}
	out := new(BacktestSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityStageSpec) DeepCopyInto(out *CapacityStageSpec) {
	*out = *in
	if in.ServingSiteName != nil {
		in, out := &in.ServingSiteName, &out.ServingSiteName
		*out = new(string)
		**out = **in
	}
	if in.PredictorName != nil {
		in, out := &in.PredictorName, &out.PredictorName
		*out = new(string)
		**out = **in
	}
	if in.Tests != nil {
		in, out := &in.Tests, &out.Tests
		*out = make([]ModelTestSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Auto != nil {
		in, out := &in.Auto, &out.Auto
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityStageSpec.
func (in *CapacityStageSpec) DeepCopy() *CapacityStageSpec {
	if in == nil {
		return nil
	}
	out := new(CapacityStageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoricalPipelineSpec) DeepCopyInto(out *CategoricalPipelineSpec) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Imputer != nil {
		in, out := &in.Imputer, &out.Imputer
		*out = new(catalogv1alpha1.Imputator)
		**out = **in
	}
	if in.Encoder != nil {
		in, out := &in.Encoder, &out.Encoder
		*out = new(catalogv1alpha1.CatEncoder)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoricalPipelineSpec.
func (in *CategoricalPipelineSpec) DeepCopy() *CategoricalPipelineSpec {
	if in == nil {
		return nil
	}
	out := new(CategoricalPipelineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassicalEstimatorSpec) DeepCopyInto(out *ClassicalEstimatorSpec) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]HyperParameterValue, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassicalEstimatorSpec.
func (in *ClassicalEstimatorSpec) DeepCopy() *ClassicalEstimatorSpec {
	if in == nil {
		return nil
	}
	out := new(ClassicalEstimatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSplit) DeepCopyInto(out *DataSplit) {
	*out = *in
	if in.Auto != nil {
		in, out := &in.Auto, &out.Auto
		*out = new(bool)
		**out = **in
	}
	if in.Train != nil {
		in, out := &in.Train, &out.Train
		*out = new(int32)
		**out = **in
	}
	if in.Validation != nil {
		in, out := &in.Validation, &out.Validation
		*out = new(int32)
		**out = **in
	}
	if in.Test != nil {
		in, out := &in.Test, &out.Test
		*out = new(int32)
		**out = **in
	}
	if in.SplitPolicy != nil {
		in, out := &in.SplitPolicy, &out.SplitPolicy
		*out = new(SplitType)
		**out = **in
	}
	if in.SplitColumn != nil {
		in, out := &in.SplitColumn, &out.SplitColumn
		*out = new(string)
		**out = **in
	}
	if in.Seed != nil {
		in, out := &in.Seed, &out.Seed
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSplit.
func (in *DataSplit) DeepCopy() *DataSplit {
	if in == nil {
		return nil
	}
	out := new(DataSplit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataStageSpec) DeepCopyInto(out *DataStageSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataStageSpec.
func (in *DataStageSpec) DeepCopy() *DataStageSpec {
	if in == nil {
		return nil
	}
	out := new(DataStageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateTimePipelineSpec) DeepCopyInto(out *DateTimePipelineSpec) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Imputer != nil {
		in, out := &in.Imputer, &out.Imputer
		*out = new(catalogv1alpha1.Imputator)
		**out = **in
	}
	if in.Expand != nil {
		in, out := &in.Expand, &out.Expand
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateTimePipelineSpec.
func (in *DateTimePipelineSpec) DeepCopy() *DateTimePipelineSpec {
	if in == nil {
		return nil
	}
	out := new(DateTimePipelineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeepEstimatorLayer) DeepCopyInto(out *DeepEstimatorLayer) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*NNLayerParameter, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(NNLayerParameter)
				**out = **in
			}
		}
	}
	if in.InputLayers != nil {
		in, out := &in.InputLayers, &out.InputLayers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeepEstimatorLayer.
func (in *DeepEstimatorLayer) DeepCopy() *DeepEstimatorLayer {
	if in == nil {
		return nil
	}
	out := new(DeepEstimatorLayer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeepEstimatorSpec) DeepCopyInto(out *DeepEstimatorSpec) {
	*out = *in
	if in.Architecture != nil {
		in, out := &in.Architecture, &out.Architecture
		*out = make([]DeepEstimatorLayer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(int32)
		**out = **in
	}
	if in.Epochs != nil {
		in, out := &in.Epochs, &out.Epochs
		*out = new(int32)
		**out = **in
	}
	if in.ValidationSplit != nil {
		in, out := &in.ValidationSplit, &out.ValidationSplit
		*out = new(int32)
		**out = **in
	}
	if in.IsSeq != nil {
		in, out := &in.IsSeq, &out.IsSeq
		*out = new(bool)
		**out = **in
	}
	if in.Gpus != nil {
		in, out := &in.Gpus, &out.Gpus
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeepEstimatorSpec.
func (in *DeepEstimatorSpec) DeepCopy() *DeepEstimatorSpec {
	if in == nil {
		return nil
	}
	out := new(DeepEstimatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DimensionValue) DeepCopyInto(out *DimensionValue) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DimensionValue.
func (in *DimensionValue) DeepCopy() *DimensionValue {
	if in == nil {
		return nil
	}
	out := new(DimensionValue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnsembleRules) DeepCopyInto(out *EnsembleRules) {
	*out = *in
	if in.byAlg != nil {
		in, out := &in.byAlg, &out.byAlg
		*out = make(map[string]float64, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.byModel != nil {
		in, out := &in.byModel, &out.byModel
		*out = make(map[string]Model, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnsembleRules.
func (in *EnsembleRules) DeepCopy() *EnsembleRules {
	if in == nil {
		return nil
	}
	out := new(EnsembleRules)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnsembleSpec) DeepCopyInto(out *EnsembleSpec) {
	*out = *in
	if in.Base != nil {
		in, out := &in.Base, &out.Base
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnsembleSpec.
func (in *EnsembleSpec) DeepCopy() *EnsembleSpec {
	if in == nil {
		return nil
	}
	out := new(EnsembleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForecastObj) DeepCopyInto(out *ForecastObj) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForecastObj.
func (in *ForecastObj) DeepCopy() *ForecastObj {
	if in == nil {
		return nil
	}
	out := new(ForecastObj)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForecastingSpec) DeepCopyInto(out *ForecastingSpec) {
	*out = *in
	if in.TimeColumn != nil {
		in, out := &in.TimeColumn, &out.TimeColumn
		*out = new(string)
		**out = **in
	}
	if in.TargetColumn != nil {
		in, out := &in.TargetColumn, &out.TargetColumn
		*out = new(string)
		**out = **in
	}
	if in.DateTimeFormat != nil {
		in, out := &in.DateTimeFormat, &out.DateTimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Dimensions != nil {
		in, out := &in.Dimensions, &out.Dimensions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Repressors != nil {
		in, out := &in.Repressors, &out.Repressors
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FreqSpec != nil {
		in, out := &in.FreqSpec, &out.FreqSpec
		*out = new(FreqSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Horizon != nil {
		in, out := &in.Horizon, &out.Horizon
		*out = new(int32)
		**out = **in
	}
	if in.ConfidenceInterval != nil {
		in, out := &in.ConfidenceInterval, &out.ConfidenceInterval
		*out = new(int32)
		**out = **in
	}
	if in.CountryForHoliday != nil {
		in, out := &in.CountryForHoliday, &out.CountryForHoliday
		*out = new(catalogv1alpha1.HolidayCountry)
		**out = **in
	}
	if in.DimensionValues != nil {
		in, out := &in.DimensionValues, &out.DimensionValues
		*out = make([]DimensionValue, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Backtest != nil {
		in, out := &in.Backtest, &out.Backtest
		*out = new(BacktestSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.ForecastConnectionName != nil {
		in, out := &in.ForecastConnectionName, &out.ForecastConnectionName
		*out = new(string)
		**out = **in
	}
	if in.Forecast != nil {
		in, out := &in.Forecast, &out.Forecast
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForecastingSpec.
func (in *ForecastingSpec) DeepCopy() *ForecastingSpec {
	if in == nil {
		return nil
	}
	out := new(ForecastingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FreqSpec) DeepCopyInto(out *FreqSpec) {
	*out = *in
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(int32)
		**out = **in
	}
	if in.Units != nil {
		in, out := &in.Units, &out.Units
		*out = new(catalogv1alpha1.Freq)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FreqSpec.
func (in *FreqSpec) DeepCopy() *FreqSpec {
	if in == nil {
		return nil
	}
	out := new(FreqSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Hierarchy) DeepCopyInto(out *Hierarchy) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.GroupLevels != nil {
		in, out := &in.GroupLevels, &out.GroupLevels
		*out = make([]Level, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ItemLevel != nil {
		in, out := &in.ItemLevel, &out.ItemLevel
		*out = new(Level)
		(*in).DeepCopyInto(*out)
	}
	if in.NotifierName != nil {
		in, out := &in.NotifierName, &out.NotifierName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Hierarchy.
func (in *Hierarchy) DeepCopy() *Hierarchy {
	if in == nil {
		return nil
	}
	out := new(Hierarchy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HyperParameterValue) DeepCopyInto(out *HyperParameterValue) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HyperParameterValue.
func (in *HyperParameterValue) DeepCopy() *HyperParameterValue {
	if in == nil {
		return nil
	}
	out := new(HyperParameterValue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImagePipelineSpec) DeepCopyInto(out *ImagePipelineSpec) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Featurizer != nil {
		in, out := &in.Featurizer, &out.Featurizer
		*out = new(catalogv1alpha1.ImageFeaturizer)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImagePipelineSpec.
func (in *ImagePipelineSpec) DeepCopy() *ImagePipelineSpec {
	if in == nil {
		return nil
	}
	out := new(ImagePipelineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Level) DeepCopyInto(out *Level) {
	*out = *in
	if in.Freq != nil {
		in, out := &in.Freq, &out.Freq
		*out = new(catalogv1alpha1.Freq)
		**out = **in
	}
	if in.Aggregate != nil {
		in, out := &in.Aggregate, &out.Aggregate
		*out = new(catalogv1alpha1.Aggregate)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Level.
func (in *Level) DeepCopy() *Level {
	if in == nil {
		return nil
	}
	out := new(Level)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Measurement) DeepCopyInto(out *Measurement) {
	*out = *in
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(catalogv1alpha1.Metric)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Measurement.
func (in *Measurement) DeepCopy() *Measurement {
	if in == nil {
		return nil
	}
	out := new(Measurement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Model) DeepCopyInto(out *Model) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Model.
func (in *Model) DeepCopy() *Model {
	if in == nil {
		return nil
	}
	out := new(Model)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Model) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelAutobuilder) DeepCopyInto(out *ModelAutobuilder) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelAutobuilder.
func (in *ModelAutobuilder) DeepCopy() *ModelAutobuilder {
	if in == nil {
		return nil
	}
	out := new(ModelAutobuilder)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ModelAutobuilder) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelAutobuilderCondition) DeepCopyInto(out *ModelAutobuilderCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelAutobuilderCondition.
func (in *ModelAutobuilderCondition) DeepCopy() *ModelAutobuilderCondition {
	if in == nil {
		return nil
	}
	out := new(ModelAutobuilderCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelAutobuilderList) DeepCopyInto(out *ModelAutobuilderList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ModelAutobuilder, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelAutobuilderList.
func (in *ModelAutobuilderList) DeepCopy() *ModelAutobuilderList {
	if in == nil {
		return nil
	}
	out := new(ModelAutobuilderList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ModelAutobuilderList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelAutobuilderSpec) DeepCopyInto(out *ModelAutobuilderSpec) {
	*out = *in
	if in.DataProductName != nil {
		in, out := &in.DataProductName, &out.DataProductName
		*out = new(string)
		**out = **in
	}
	if in.DataProductVersionName != nil {
		in, out := &in.DataProductVersionName, &out.DataProductVersionName
		*out = new(string)
		**out = **in
	}
	if in.DataSourceName != nil {
		in, out := &in.DataSourceName, &out.DataSourceName
		*out = new(string)
		**out = **in
	}
	if in.DatasetName != nil {
		in, out := &in.DatasetName, &out.DatasetName
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(datav1alpha1.DataLocation)
		**out = **in
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = new(catalogv1alpha1.MLTask)
		**out = **in
	}
	if in.Objective != nil {
		in, out := &in.Objective, &out.Objective
		*out = new(catalogv1alpha1.Metric)
		**out = **in
	}
	if in.TargetColumn != nil {
		in, out := &in.TargetColumn, &out.TargetColumn
		*out = new(string)
		**out = **in
	}
	if in.MaxTime != nil {
		in, out := &in.MaxTime, &out.MaxTime
		*out = new(int32)
		**out = **in
	}
	if in.MaxModels != nil {
		in, out := &in.MaxModels, &out.MaxModels
		*out = new(int32)
		**out = **in
	}
	if in.AccessMethod != nil {
		in, out := &in.AccessMethod, &out.AccessMethod
		*out = new(inferencev1alpha1.AccessType)
		**out = **in
	}
	if in.AutoScale != nil {
		in, out := &in.AutoScale, &out.AutoScale
		*out = new(bool)
		**out = **in
	}
	if in.DataSourceSpec != nil {
		in, out := &in.DataSourceSpec, &out.DataSourceSpec
		*out = new(datav1alpha1.DataSourceSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Trainers != nil {
		in, out := &in.Trainers, &out.Trainers
		*out = new(int32)
		**out = **in
	}
	if in.SearchMethod != nil {
		in, out := &in.SearchMethod, &out.SearchMethod
		*out = new(SearchMethodName)
		**out = **in
	}
	if in.Aborted != nil {
		in, out := &in.Aborted, &out.Aborted
		*out = new(bool)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.WorkloadClassName != nil {
		in, out := &in.WorkloadClassName, &out.WorkloadClassName
		*out = new(string)
		**out = **in
	}
	if in.LabRef != nil {
		in, out := &in.LabRef, &out.LabRef
		*out = new(v1.ObjectReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelAutobuilderSpec.
func (in *ModelAutobuilderSpec) DeepCopy() *ModelAutobuilderSpec {
	if in == nil {
		return nil
	}
	out := new(ModelAutobuilderSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelAutobuilderStatus) DeepCopyInto(out *ModelAutobuilderStatus) {
	*out = *in
	if in.Estimator != nil {
		in, out := &in.Estimator, &out.Estimator
		*out = new(ClassicalEstimatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.CompletionTime != nil {
		in, out := &in.CompletionTime, &out.CompletionTime
		*out = (*in).DeepCopy()
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ModelAutobuilderCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelAutobuilderStatus.
func (in *ModelAutobuilderStatus) DeepCopy() *ModelAutobuilderStatus {
	if in == nil {
		return nil
	}
	out := new(ModelAutobuilderStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelCondition) DeepCopyInto(out *ModelCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelCondition.
func (in *ModelCondition) DeepCopy() *ModelCondition {
	if in == nil {
		return nil
	}
	out := new(ModelCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelList) DeepCopyInto(out *ModelList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Model, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelList.
func (in *ModelList) DeepCopy() *ModelList {
	if in == nil {
		return nil
	}
	out := new(ModelList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ModelList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelPipeline) DeepCopyInto(out *ModelPipeline) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelPipeline.
func (in *ModelPipeline) DeepCopy() *ModelPipeline {
	if in == nil {
		return nil
	}
	out := new(ModelPipeline)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ModelPipeline) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelPipelineCondition) DeepCopyInto(out *ModelPipelineCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelPipelineCondition.
func (in *ModelPipelineCondition) DeepCopy() *ModelPipelineCondition {
	if in == nil {
		return nil
	}
	out := new(ModelPipelineCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelPipelineList) DeepCopyInto(out *ModelPipelineList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ModelPipeline, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelPipelineList.
func (in *ModelPipelineList) DeepCopy() *ModelPipelineList {
	if in == nil {
		return nil
	}
	out := new(ModelPipelineList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ModelPipelineList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelPipelineRun) DeepCopyInto(out *ModelPipelineRun) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelPipelineRun.
func (in *ModelPipelineRun) DeepCopy() *ModelPipelineRun {
	if in == nil {
		return nil
	}
	out := new(ModelPipelineRun)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ModelPipelineRun) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelPipelineRunCondition) DeepCopyInto(out *ModelPipelineRunCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelPipelineRunCondition.
func (in *ModelPipelineRunCondition) DeepCopy() *ModelPipelineRunCondition {
	if in == nil {
		return nil
	}
	out := new(ModelPipelineRunCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelPipelineRunList) DeepCopyInto(out *ModelPipelineRunList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ModelPipelineRun, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelPipelineRunList.
func (in *ModelPipelineRunList) DeepCopy() *ModelPipelineRunList {
	if in == nil {
		return nil
	}
	out := new(ModelPipelineRunList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ModelPipelineRunList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelPipelineRunSpec) DeepCopyInto(out *ModelPipelineRunSpec) {
	*out = *in
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.TriggerName != nil {
		in, out := &in.TriggerName, &out.TriggerName
		*out = new(string)
		**out = **in
	}
	if in.PipelineName != nil {
		in, out := &in.PipelineName, &out.PipelineName
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelPipelineRunSpec.
func (in *ModelPipelineRunSpec) DeepCopy() *ModelPipelineRunSpec {
	if in == nil {
		return nil
	}
	out := new(ModelPipelineRunSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelPipelineRunStageStatus) DeepCopyInto(out *ModelPipelineRunStageStatus) {
	*out = *in
	if in.ApprovedAt != nil {
		in, out := &in.ApprovedAt, &out.ApprovedAt
		*out = (*in).DeepCopy()
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = (*in).DeepCopy()
	}
	if in.Results != nil {
		in, out := &in.Results, &out.Results
		*out = make([]ModelTestResult, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelPipelineRunStageStatus.
func (in *ModelPipelineRunStageStatus) DeepCopy() *ModelPipelineRunStageStatus {
	if in == nil {
		return nil
	}
	out := new(ModelPipelineRunStageStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelPipelineRunStatus) DeepCopyInto(out *ModelPipelineRunStatus) {
	*out = *in
	in.DataStatus.DeepCopyInto(&out.DataStatus)
	in.TrainingStatus.DeepCopyInto(&out.TrainingStatus)
	in.UATStatus.DeepCopyInto(&out.UATStatus)
	in.CapacityStatus.DeepCopyInto(&out.CapacityStatus)
	in.ReleaseStatus.DeepCopyInto(&out.ReleaseStatus)
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.CompletionTime != nil {
		in, out := &in.CompletionTime, &out.CompletionTime
		*out = (*in).DeepCopy()
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ModelPipelineRunCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelPipelineRunStatus.
func (in *ModelPipelineRunStatus) DeepCopy() *ModelPipelineRunStatus {
	if in == nil {
		return nil
	}
	out := new(ModelPipelineRunStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelPipelineSpec) DeepCopyInto(out *ModelPipelineSpec) {
	*out = *in
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
	if in.DefaultServingSiteName != nil {
		in, out := &in.DefaultServingSiteName, &out.DefaultServingSiteName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DataStage != nil {
		in, out := &in.DataStage, &out.DataStage
		*out = new(DataStageSpec)
		**out = **in
	}
	if in.TrainingStage != nil {
		in, out := &in.TrainingStage, &out.TrainingStage
		*out = new(TrainingStageSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.UATStage != nil {
		in, out := &in.UATStage, &out.UATStage
		*out = new(UATStageSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.CapacityStage != nil {
		in, out := &in.CapacityStage, &out.CapacityStage
		*out = new(CapacityStageSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.ReleaseStage != nil {
		in, out := &in.ReleaseStage, &out.ReleaseStage
		*out = new(ReleaseStageSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(datav1alpha1.DataLocation)
		**out = **in
	}
	in.Schedule.DeepCopyInto(&out.Schedule)
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.ApproverAccountName != nil {
		in, out := &in.ApproverAccountName, &out.ApproverAccountName
		*out = new(string)
		**out = **in
	}
	if in.NotifierName != nil {
		in, out := &in.NotifierName, &out.NotifierName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelPipelineSpec.
func (in *ModelPipelineSpec) DeepCopy() *ModelPipelineSpec {
	if in == nil {
		return nil
	}
	out := new(ModelPipelineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelPipelineStatus) DeepCopyInto(out *ModelPipelineStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ModelPipelineCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelPipelineStatus.
func (in *ModelPipelineStatus) DeepCopy() *ModelPipelineStatus {
	if in == nil {
		return nil
	}
	out := new(ModelPipelineStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelResult) DeepCopyInto(out *ModelResult) {
	*out = *in
	if in.Score != nil {
		in, out := &in.Score, &out.Score
		*out = new(float64)
		**out = **in
	}
	if in.Error != nil {
		in, out := &in.Error, &out.Error
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelResult.
func (in *ModelResult) DeepCopy() *ModelResult {
	if in == nil {
		return nil
	}
	out := new(ModelResult)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelSearchSpec) DeepCopyInto(out *ModelSearchSpec) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(SearchMethodName)
		**out = **in
	}
	if in.MaxCost != nil {
		in, out := &in.MaxCost, &out.MaxCost
		*out = new(int32)
		**out = **in
	}
	if in.MaxTime != nil {
		in, out := &in.MaxTime, &out.MaxTime
		*out = new(int32)
		**out = **in
	}
	if in.MaxModels != nil {
		in, out := &in.MaxModels, &out.MaxModels
		*out = new(int32)
		**out = **in
	}
	if in.MinScore != nil {
		in, out := &in.MinScore, &out.MinScore
		*out = new(float64)
		**out = **in
	}
	if in.Trainers != nil {
		in, out := &in.Trainers, &out.Trainers
		*out = new(int32)
		**out = **in
	}
	if in.SHOptions != nil {
		in, out := &in.SHOptions, &out.SHOptions
		*out = new(SuccessiveHalvingOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.Test != nil {
		in, out := &in.Test, &out.Test
		*out = new(int32)
		**out = **in
	}
	if in.RetainTop != nil {
		in, out := &in.RetainTop, &out.RetainTop
		*out = new(int32)
		**out = **in
	}
	if in.RetainFor != nil {
		in, out := &in.RetainFor, &out.RetainFor
		*out = new(int32)
		**out = **in
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(TrainingResourceRequest)
		**out = **in
	}
	if in.AllowList != nil {
		in, out := &in.AllowList, &out.AllowList
		*out = make([]catalogv1alpha1.ClassicEstimatorName, len(*in))
		copy(*out, *in)
	}
	if in.VotingEnsemble != nil {
		in, out := &in.VotingEnsemble, &out.VotingEnsemble
		*out = new(bool)
		**out = **in
	}
	if in.StackingEnsemble != nil {
		in, out := &in.StackingEnsemble, &out.StackingEnsemble
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelSearchSpec.
func (in *ModelSearchSpec) DeepCopy() *ModelSearchSpec {
	if in == nil {
		return nil
	}
	out := new(ModelSearchSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelSpec) DeepCopyInto(out *ModelSpec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
	if in.StudyName != nil {
		in, out := &in.StudyName, &out.StudyName
		*out = new(string)
		**out = **in
	}
	if in.DatasetName != nil {
		in, out := &in.DatasetName, &out.DatasetName
		*out = new(string)
		**out = **in
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = new(catalogv1alpha1.MLTask)
		**out = **in
	}
	if in.Objective != nil {
		in, out := &in.Objective, &out.Objective
		*out = new(catalogv1alpha1.Metric)
		**out = **in
	}
	if in.Preprocessing != nil {
		in, out := &in.Preprocessing, &out.Preprocessing
		*out = new(PreprocessingSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Estimator != nil {
		in, out := &in.Estimator, &out.Estimator
		*out = new(ClassicalEstimatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Dnn != nil {
		in, out := &in.Dnn, &out.Dnn
		*out = new(DeepEstimatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Ensemble != nil {
		in, out := &in.Ensemble, &out.Ensemble
		*out = new(EnsembleSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Training != nil {
		in, out := &in.Training, &out.Training
		*out = new(TrainingSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Tested != nil {
		in, out := &in.Tested, &out.Tested
		*out = new(bool)
		**out = **in
	}
	if in.Aborted != nil {
		in, out := &in.Aborted, &out.Aborted
		*out = new(bool)
		**out = **in
	}
	if in.Published != nil {
		in, out := &in.Published, &out.Published
		*out = new(bool)
		**out = **in
	}
	if in.Pushed != nil {
		in, out := &in.Pushed, &out.Pushed
		*out = new(bool)
		**out = **in
	}
	if in.Reported != nil {
		in, out := &in.Reported, &out.Reported
		*out = new(bool)
		**out = **in
	}
	if in.Paused != nil {
		in, out := &in.Paused, &out.Paused
		*out = new(bool)
		**out = **in
	}
	if in.Profiled != nil {
		in, out := &in.Profiled, &out.Profiled
		*out = new(bool)
		**out = **in
	}
	if in.Archived != nil {
		in, out := &in.Archived, &out.Archived
		*out = new(bool)
		**out = **in
	}
	if in.Forecasted != nil {
		in, out := &in.Forecasted, &out.Forecasted
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(datav1alpha1.DataLocation)
		**out = **in
	}
	if in.Forecasting != nil {
		in, out := &in.Forecasting, &out.Forecasting
		*out = new(ForecastingSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelSpec.
func (in *ModelSpec) DeepCopy() *ModelSpec {
	if in == nil {
		return nil
	}
	out := new(ModelSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelStatus) DeepCopyInto(out *ModelStatus) {
	*out = *in
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.TrainStartTime != nil {
		in, out := &in.TrainStartTime, &out.TrainStartTime
		*out = (*in).DeepCopy()
	}
	if in.TrainCompletionTime != nil {
		in, out := &in.TrainCompletionTime, &out.TrainCompletionTime
		*out = (*in).DeepCopy()
	}
	if in.TestStartTime != nil {
		in, out := &in.TestStartTime, &out.TestStartTime
		*out = (*in).DeepCopy()
	}
	if in.TestCompletionTime != nil {
		in, out := &in.TestCompletionTime, &out.TestCompletionTime
		*out = (*in).DeepCopy()
	}
	if in.CompletionTime != nil {
		in, out := &in.CompletionTime, &out.CompletionTime
		*out = (*in).DeepCopy()
	}
	if in.TrainResult != nil {
		in, out := &in.TrainResult, &out.TrainResult
		*out = make([]Measurement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TestResult != nil {
		in, out := &in.TestResult, &out.TestResult
		*out = make([]Measurement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ModelCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelStatus.
func (in *ModelStatus) DeepCopy() *ModelStatus {
	if in == nil {
		return nil
	}
	out := new(ModelStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelTestResult) DeepCopyInto(out *ModelTestResult) {
	*out = *in
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = (*in).DeepCopy()
	}
	if in.Results != nil {
		in, out := &in.Results, &out.Results
		*out = make([]TestScore, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Error != nil {
		in, out := &in.Error, &out.Error
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelTestResult.
func (in *ModelTestResult) DeepCopy() *ModelTestResult {
	if in == nil {
		return nil
	}
	out := new(ModelTestResult)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelTestSpec) DeepCopyInto(out *ModelTestSpec) {
	*out = *in
	if in.DatasetName != nil {
		in, out := &in.DatasetName, &out.DatasetName
		*out = new(string)
		**out = **in
	}
	if in.MinScores != nil {
		in, out := &in.MinScores, &out.MinScores
		*out = make([]TestScore, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxTime != nil {
		in, out := &in.MaxTime, &out.MaxTime
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelTestSpec.
func (in *ModelTestSpec) DeepCopy() *ModelTestSpec {
	if in == nil {
		return nil
	}
	out := new(ModelTestSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NNLayerParameter) DeepCopyInto(out *NNLayerParameter) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NNLayerParameter.
func (in *NNLayerParameter) DeepCopy() *NNLayerParameter {
	if in == nil {
		return nil
	}
	out := new(NNLayerParameter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Notebook) DeepCopyInto(out *Notebook) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Notebook.
func (in *Notebook) DeepCopy() *Notebook {
	if in == nil {
		return nil
	}
	out := new(Notebook)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Notebook) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookCondition) DeepCopyInto(out *NotebookCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookCondition.
func (in *NotebookCondition) DeepCopy() *NotebookCondition {
	if in == nil {
		return nil
	}
	out := new(NotebookCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookList) DeepCopyInto(out *NotebookList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Notebook, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookList.
func (in *NotebookList) DeepCopy() *NotebookList {
	if in == nil {
		return nil
	}
	out := new(NotebookList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NotebookList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookRun) DeepCopyInto(out *NotebookRun) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookRun.
func (in *NotebookRun) DeepCopy() *NotebookRun {
	if in == nil {
		return nil
	}
	out := new(NotebookRun)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NotebookRun) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookRunCondition) DeepCopyInto(out *NotebookRunCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookRunCondition.
func (in *NotebookRunCondition) DeepCopy() *NotebookRunCondition {
	if in == nil {
		return nil
	}
	out := new(NotebookRunCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookRunList) DeepCopyInto(out *NotebookRunList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NotebookRun, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookRunList.
func (in *NotebookRunList) DeepCopy() *NotebookRunList {
	if in == nil {
		return nil
	}
	out := new(NotebookRunList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NotebookRunList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookRunSpec) DeepCopyInto(out *NotebookRunSpec) {
	*out = *in
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
	if in.NotebookName != nil {
		in, out := &in.NotebookName, &out.NotebookName
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]NotebookVarValue, len(*in))
		copy(*out, *in)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.WorkloadClassName != nil {
		in, out := &in.WorkloadClassName, &out.WorkloadClassName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookRunSpec.
func (in *NotebookRunSpec) DeepCopy() *NotebookRunSpec {
	if in == nil {
		return nil
	}
	out := new(NotebookRunSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookRunStatus) DeepCopyInto(out *NotebookRunStatus) {
	*out = *in
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.CompletionTime != nil {
		in, out := &in.CompletionTime, &out.CompletionTime
		*out = (*in).DeepCopy()
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]NotebookRunCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookRunStatus.
func (in *NotebookRunStatus) DeepCopy() *NotebookRunStatus {
	if in == nil {
		return nil
	}
	out := new(NotebookRunStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookSpec) DeepCopyInto(out *NotebookSpec) {
	*out = *in
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.SchemaRef != nil {
		in, out := &in.SchemaRef, &out.SchemaRef
		*out = new(v1.ObjectReference)
		**out = **in
	}
	if in.ImageName != nil {
		in, out := &in.ImageName, &out.ImageName
		*out = new(string)
		**out = **in
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(string)
		**out = **in
	}
	if in.DebPackages != nil {
		in, out := &in.DebPackages, &out.DebPackages
		*out = new(string)
		**out = **in
	}
	if in.Vars != nil {
		in, out := &in.Vars, &out.Vars
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(datav1alpha1.DataLocation)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.WorkloadClassName != nil {
		in, out := &in.WorkloadClassName, &out.WorkloadClassName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookSpec.
func (in *NotebookSpec) DeepCopy() *NotebookSpec {
	if in == nil {
		return nil
	}
	out := new(NotebookSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookStatus) DeepCopyInto(out *NotebookStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]NotebookCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookStatus.
func (in *NotebookStatus) DeepCopy() *NotebookStatus {
	if in == nil {
		return nil
	}
	out := new(NotebookStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookVarValue) DeepCopyInto(out *NotebookVarValue) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookVarValue.
func (in *NotebookVarValue) DeepCopy() *NotebookVarValue {
	if in == nil {
		return nil
	}
	out := new(NotebookVarValue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NumericPipelineSpec) DeepCopyInto(out *NumericPipelineSpec) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Imputer != nil {
		in, out := &in.Imputer, &out.Imputer
		*out = new(catalogv1alpha1.Imputator)
		**out = **in
	}
	if in.Scaler != nil {
		in, out := &in.Scaler, &out.Scaler
		*out = new(catalogv1alpha1.Scaler)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NumericPipelineSpec.
func (in *NumericPipelineSpec) DeepCopy() *NumericPipelineSpec {
	if in == nil {
		return nil
	}
	out := new(NumericPipelineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineTrigger) DeepCopyInto(out *PipelineTrigger) {
	*out = *in
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(catalogv1alpha1.RunSchedule)
		(*in).DeepCopyInto(*out)
	}
	if in.GithubEvents != nil {
		in, out := &in.GithubEvents, &out.GithubEvents
		*out = new(catalogv1alpha1.GithubEvents)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineTrigger.
func (in *PipelineTrigger) DeepCopy() *PipelineTrigger {
	if in == nil {
		return nil
	}
	out := new(PipelineTrigger)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreprocessingSpec) DeepCopyInto(out *PreprocessingSpec) {
	*out = *in
	if in.Categorical != nil {
		in, out := &in.Categorical, &out.Categorical
		*out = new(CategoricalPipelineSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Numeric != nil {
		in, out := &in.Numeric, &out.Numeric
		*out = new(NumericPipelineSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Text != nil {
		in, out := &in.Text, &out.Text
		*out = new(TextPipelineSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(ImagePipelineSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Audio != nil {
		in, out := &in.Audio, &out.Audio
		*out = new(AudioPipelineSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Video != nil {
		in, out := &in.Video, &out.Video
		*out = new(VideoPipelineSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.DataTime != nil {
		in, out := &in.DataTime, &out.DataTime
		*out = new(DateTimePipelineSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(catalogv1alpha1.FeatureSelector)
		**out = **in
	}
	if in.Reducer != nil {
		in, out := &in.Reducer, &out.Reducer
		*out = new(catalogv1alpha1.DimReducer)
		**out = **in
	}
	if in.Imbalanced != nil {
		in, out := &in.Imbalanced, &out.Imbalanced
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreprocessingSpec.
func (in *PreprocessingSpec) DeepCopy() *PreprocessingSpec {
	if in == nil {
		return nil
	}
	out := new(PreprocessingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReleaseStageSpec) DeepCopyInto(out *ReleaseStageSpec) {
	*out = *in
	if in.ServingSiteName != nil {
		in, out := &in.ServingSiteName, &out.ServingSiteName
		*out = new(string)
		**out = **in
	}
	if in.PredictorName != nil {
		in, out := &in.PredictorName, &out.PredictorName
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
	if in.Auto != nil {
		in, out := &in.Auto, &out.Auto
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReleaseStageSpec.
func (in *ReleaseStageSpec) DeepCopy() *ReleaseStageSpec {
	if in == nil {
		return nil
	}
	out := new(ReleaseStageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Report) DeepCopyInto(out *Report) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Report.
func (in *Report) DeepCopy() *Report {
	if in == nil {
		return nil
	}
	out := new(Report)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Report) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReportCondition) DeepCopyInto(out *ReportCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReportCondition.
func (in *ReportCondition) DeepCopy() *ReportCondition {
	if in == nil {
		return nil
	}
	out := new(ReportCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReportList) DeepCopyInto(out *ReportList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Report, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReportList.
func (in *ReportList) DeepCopy() *ReportList {
	if in == nil {
		return nil
	}
	out := new(ReportList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ReportList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReportSpec) DeepCopyInto(out *ReportSpec) {
	*out = *in
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
	out.EntityRef = in.EntityRef
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(datav1alpha1.DataLocation)
		**out = **in
	}
	if in.ReportType != nil {
		in, out := &in.ReportType, &out.ReportType
		*out = new(ReportType)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(ReportFormat)
		**out = **in
	}
	if in.NotifierRef != nil {
		in, out := &in.NotifierRef, &out.NotifierRef
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.WorkloadClassName != nil {
		in, out := &in.WorkloadClassName, &out.WorkloadClassName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReportSpec.
func (in *ReportSpec) DeepCopy() *ReportSpec {
	if in == nil {
		return nil
	}
	out := new(ReportSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReportStatus) DeepCopyInto(out *ReportStatus) {
	*out = *in
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.CompletionTime != nil {
		in, out := &in.CompletionTime, &out.CompletionTime
		*out = (*in).DeepCopy()
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ReportCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReportStatus.
func (in *ReportStatus) DeepCopy() *ReportStatus {
	if in == nil {
		return nil
	}
	out := new(ReportStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Study) DeepCopyInto(out *Study) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Study.
func (in *Study) DeepCopy() *Study {
	if in == nil {
		return nil
	}
	out := new(Study)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Study) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StudyCondition) DeepCopyInto(out *StudyCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StudyCondition.
func (in *StudyCondition) DeepCopy() *StudyCondition {
	if in == nil {
		return nil
	}
	out := new(StudyCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StudyList) DeepCopyInto(out *StudyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Study, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StudyList.
func (in *StudyList) DeepCopy() *StudyList {
	if in == nil {
		return nil
	}
	out := new(StudyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StudyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StudySpec) DeepCopyInto(out *StudySpec) {
	*out = *in
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.LabRef != nil {
		in, out := &in.LabRef, &out.LabRef
		*out = new(v1.ObjectReference)
		**out = **in
	}
	if in.DatasetName != nil {
		in, out := &in.DatasetName, &out.DatasetName
		*out = new(string)
		**out = **in
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = new(catalogv1alpha1.MLTask)
		**out = **in
	}
	if in.Objective != nil {
		in, out := &in.Objective, &out.Objective
		*out = new(catalogv1alpha1.Metric)
		**out = **in
	}
	if in.Search != nil {
		in, out := &in.Search, &out.Search
		*out = new(ModelSearchSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Preprocessing != nil {
		in, out := &in.Preprocessing, &out.Preprocessing
		*out = new(PreprocessingSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Training != nil {
		in, out := &in.Training, &out.Training
		*out = new(TrainingSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Split != nil {
		in, out := &in.Split, &out.Split
		*out = new(DataSplit)
		(*in).DeepCopyInto(*out)
	}
	if in.Aborted != nil {
		in, out := &in.Aborted, &out.Aborted
		*out = new(bool)
		**out = **in
	}
	if in.Reported != nil {
		in, out := &in.Reported, &out.Reported
		*out = new(bool)
		**out = **in
	}
	if in.Paused != nil {
		in, out := &in.Paused, &out.Paused
		*out = new(bool)
		**out = **in
	}
	if in.Profiled != nil {
		in, out := &in.Profiled, &out.Profiled
		*out = new(bool)
		**out = **in
	}
	if in.ModelPublished != nil {
		in, out := &in.ModelPublished, &out.ModelPublished
		*out = new(bool)
		**out = **in
	}
	if in.ModelImagePushed != nil {
		in, out := &in.ModelImagePushed, &out.ModelImagePushed
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(datav1alpha1.DataLocation)
		**out = **in
	}
	if in.Hierarchy != nil {
		in, out := &in.Hierarchy, &out.Hierarchy
		*out = new(Hierarchy)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StudySpec.
func (in *StudySpec) DeepCopy() *StudySpec {
	if in == nil {
		return nil
	}
	out := new(StudySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StudyStatus) DeepCopyInto(out *StudyStatus) {
	*out = *in
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.TrainingStartTime != nil {
		in, out := &in.TrainingStartTime, &out.TrainingStartTime
		*out = (*in).DeepCopy()
	}
	if in.TrainingCompletionTime != nil {
		in, out := &in.TrainingCompletionTime, &out.TrainingCompletionTime
		*out = (*in).DeepCopy()
	}
	if in.TestingStartTime != nil {
		in, out := &in.TestingStartTime, &out.TestingStartTime
		*out = (*in).DeepCopy()
	}
	if in.TestingCompletionTime != nil {
		in, out := &in.TestingCompletionTime, &out.TestingCompletionTime
		*out = (*in).DeepCopy()
	}
	if in.CompletionTime != nil {
		in, out := &in.CompletionTime, &out.CompletionTime
		*out = (*in).DeepCopy()
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]StudyCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StudyStatus.
func (in *StudyStatus) DeepCopy() *StudyStatus {
	if in == nil {
		return nil
	}
	out := new(StudyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SuccessiveHalvingOptions) DeepCopyInto(out *SuccessiveHalvingOptions) {
	*out = *in
	if in.MaxBudget != nil {
		in, out := &in.MaxBudget, &out.MaxBudget
		*out = new(int32)
		**out = **in
	}
	if in.EliminationRate != nil {
		in, out := &in.EliminationRate, &out.EliminationRate
		*out = new(int32)
		**out = **in
	}
	if in.Modality != nil {
		in, out := &in.Modality, &out.Modality
		*out = new(ModalityType)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SuccessiveHalvingOptions.
func (in *SuccessiveHalvingOptions) DeepCopy() *SuccessiveHalvingOptions {
	if in == nil {
		return nil
	}
	out := new(SuccessiveHalvingOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SuccessiveHalvingSpec) DeepCopyInto(out *SuccessiveHalvingSpec) {
	*out = *in
	if in.Budget != nil {
		in, out := &in.Budget, &out.Budget
		*out = new(int32)
		**out = **in
	}
	if in.Bracket != nil {
		in, out := &in.Bracket, &out.Bracket
		*out = new(int32)
		**out = **in
	}
	if in.Rung != nil {
		in, out := &in.Rung, &out.Rung
		*out = new(int32)
		**out = **in
	}
	if in.ConfID != nil {
		in, out := &in.ConfID, &out.ConfID
		*out = new(int32)
		**out = **in
	}
	if in.Modality != nil {
		in, out := &in.Modality, &out.Modality
		*out = new(ModalityType)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SuccessiveHalvingSpec.
func (in *SuccessiveHalvingSpec) DeepCopy() *SuccessiveHalvingSpec {
	if in == nil {
		return nil
	}
	out := new(SuccessiveHalvingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestScore) DeepCopyInto(out *TestScore) {
	*out = *in
	if in.Score != nil {
		in, out := &in.Score, &out.Score
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestScore.
func (in *TestScore) DeepCopy() *TestScore {
	if in == nil {
		return nil
	}
	out := new(TestScore)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TextPipelineSpec) DeepCopyInto(out *TextPipelineSpec) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Encoder != nil {
		in, out := &in.Encoder, &out.Encoder
		*out = new(catalogv1alpha1.TextTransformer)
		**out = **in
	}
	if in.Tokenizer != nil {
		in, out := &in.Tokenizer, &out.Tokenizer
		*out = new(string)
		**out = **in
	}
	if in.StopWords != nil {
		in, out := &in.StopWords, &out.StopWords
		*out = new(bool)
		**out = **in
	}
	if in.Pos != nil {
		in, out := &in.Pos, &out.Pos
		*out = new(bool)
		**out = **in
	}
	if in.Lemma != nil {
		in, out := &in.Lemma, &out.Lemma
		*out = new(bool)
		**out = **in
	}
	if in.Stem != nil {
		in, out := &in.Stem, &out.Stem
		*out = new(bool)
		**out = **in
	}
	if in.Embedding != nil {
		in, out := &in.Embedding, &out.Embedding
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TextPipelineSpec.
func (in *TextPipelineSpec) DeepCopy() *TextPipelineSpec {
	if in == nil {
		return nil
	}
	out := new(TextPipelineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrainingResourceRequest) DeepCopyInto(out *TrainingResourceRequest) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrainingResourceRequest.
func (in *TrainingResourceRequest) DeepCopy() *TrainingResourceRequest {
	if in == nil {
		return nil
	}
	out := new(TrainingResourceRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrainingSpec) DeepCopyInto(out *TrainingSpec) {
	*out = *in
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int32)
		**out = **in
	}
	if in.CvType != nil {
		in, out := &in.CvType, &out.CvType
		*out = new(catalogv1alpha1.CvType)
		**out = **in
	}
	if in.CV != nil {
		in, out := &in.CV, &out.CV
		*out = new(bool)
		**out = **in
	}
	if in.Folds != nil {
		in, out := &in.Folds, &out.Folds
		*out = new(int32)
		**out = **in
	}
	if in.Retry != nil {
		in, out := &in.Retry, &out.Retry
		*out = new(int32)
		**out = **in
	}
	if in.EvalMetrics != nil {
		in, out := &in.EvalMetrics, &out.EvalMetrics
		*out = make([]catalogv1alpha1.Metric, len(*in))
		copy(*out, *in)
	}
	if in.EarlyStop != nil {
		in, out := &in.EarlyStop, &out.EarlyStop
		*out = new(bool)
		**out = **in
	}
	if in.CheckpointInterval != nil {
		in, out := &in.CheckpointInterval, &out.CheckpointInterval
		*out = new(int32)
		**out = **in
	}
	if in.Forecast != nil {
		in, out := &in.Forecast, &out.Forecast
		*out = new(ForecastingSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.SH != nil {
		in, out := &in.SH, &out.SH
		*out = new(SuccessiveHalvingSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Seed != nil {
		in, out := &in.Seed, &out.Seed
		*out = new(float64)
		**out = **in
	}
	if in.WorkloadClassName != nil {
		in, out := &in.WorkloadClassName, &out.WorkloadClassName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrainingSpec.
func (in *TrainingSpec) DeepCopy() *TrainingSpec {
	if in == nil {
		return nil
	}
	out := new(TrainingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrainingStageSpec) DeepCopyInto(out *TrainingStageSpec) {
	*out = *in
	if in.NotebookName != nil {
		in, out := &in.NotebookName, &out.NotebookName
		*out = new(string)
		**out = **in
	}
	if in.LabName != nil {
		in, out := &in.LabName, &out.LabName
		*out = new(string)
		**out = **in
	}
	if in.StudyName != nil {
		in, out := &in.StudyName, &out.StudyName
		*out = new(string)
		**out = **in
	}
	if in.MinScore != nil {
		in, out := &in.MinScore, &out.MinScore
		*out = new(float64)
		**out = **in
	}
	if in.Auto != nil {
		in, out := &in.Auto, &out.Auto
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrainingStageSpec.
func (in *TrainingStageSpec) DeepCopy() *TrainingStageSpec {
	if in == nil {
		return nil
	}
	out := new(TrainingStageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UATStageSpec) DeepCopyInto(out *UATStageSpec) {
	*out = *in
	if in.ServingSiteName != nil {
		in, out := &in.ServingSiteName, &out.ServingSiteName
		*out = new(string)
		**out = **in
	}
	if in.PredictorName != nil {
		in, out := &in.PredictorName, &out.PredictorName
		*out = new(string)
		**out = **in
	}
	if in.Tests != nil {
		in, out := &in.Tests, &out.Tests
		*out = make([]ModelTestSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Auto != nil {
		in, out := &in.Auto, &out.Auto
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UATStageSpec.
func (in *UATStageSpec) DeepCopy() *UATStageSpec {
	if in == nil {
		return nil
	}
	out := new(UATStageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VideoPipelineSpec) DeepCopyInto(out *VideoPipelineSpec) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Featurizer != nil {
		in, out := &in.Featurizer, &out.Featurizer
		*out = new(catalogv1alpha1.VideoFeaturizer)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VideoPipelineSpec.
func (in *VideoPipelineSpec) DeepCopy() *VideoPipelineSpec {
	if in == nil {
		return nil
	}
	out := new(VideoPipelineSpec)
	in.DeepCopyInto(out)
	return out
}
