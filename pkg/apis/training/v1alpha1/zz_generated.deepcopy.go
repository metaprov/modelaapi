//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/**
*
* Copyright (C) 2017 modela authors
* For license information, see LICENSE.txt
 */

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	catalogv1alpha1 "github.com/metaprov/modelaapi/pkg/apis/catalog/v1alpha1"
	datav1alpha1 "github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1"
	"k8s.io/api/core/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlgorithmParameterRange) DeepCopyInto(out *AlgorithmParameterRange) {
	*out = *in
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]catalogv1alpha1.ParameterRange, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlgorithmParameterRange.
func (in *AlgorithmParameterRange) DeepCopy() *AlgorithmParameterRange {
	if in == nil {
		return nil
	}
	out := new(AlgorithmParameterRange)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlgorithmSearchSpaceSpec) DeepCopyInto(out *AlgorithmSearchSpaceSpec) {
	*out = *in
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]catalogv1alpha1.ClassicEstimatorName, len(*in))
		copy(*out, *in)
	}
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]catalogv1alpha1.ClassicEstimatorName, len(*in))
		copy(*out, *in)
	}
	if in.Custom != nil {
		in, out := &in.Custom, &out.Custom
		*out = make([]AlgorithmParameterRange, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlgorithmSearchSpaceSpec.
func (in *AlgorithmSearchSpaceSpec) DeepCopy() *AlgorithmSearchSpaceSpec {
	if in == nil {
		return nil
	}
	out := new(AlgorithmSearchSpaceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Anomaly) DeepCopyInto(out *Anomaly) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Anomaly.
func (in *Anomaly) DeepCopy() *Anomaly {
	if in == nil {
		return nil
	}
	out := new(Anomaly)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AudioPipelineSpec) DeepCopyInto(out *AudioPipelineSpec) {
	*out = *in
	if in.Featurizer != nil {
		in, out := &in.Featurizer, &out.Featurizer
		*out = new(catalogv1alpha1.AudioFeaturizer)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AudioPipelineSpec.
func (in *AudioPipelineSpec) DeepCopy() *AudioPipelineSpec {
	if in == nil {
		return nil
	}
	out := new(AudioPipelineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BacktestSpec) DeepCopyInto(out *BacktestSpec) {
	*out = *in
	if in.Sliding != nil {
		in, out := &in.Sliding, &out.Sliding
		*out = new(bool)
		**out = **in
	}
	if in.Splits != nil {
		in, out := &in.Splits, &out.Splits
		*out = new(int32)
		**out = **in
	}
	if in.Initial != nil {
		in, out := &in.Initial, &out.Initial
		*out = new(int32)
		**out = **in
	}
	if in.Gap != nil {
		in, out := &in.Gap, &out.Gap
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BacktestSpec.
func (in *BacktestSpec) DeepCopy() *BacktestSpec {
	if in == nil {
		return nil
	}
	out := new(BacktestSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaselineSpec) DeepCopyInto(out *BaselineSpec) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Baselines != nil {
		in, out := &in.Baselines, &out.Baselines
		*out = make([]catalogv1alpha1.ClassicEstimatorName, len(*in))
		copy(*out, *in)
	}
	if in.All != nil {
		in, out := &in.All, &out.All
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaselineSpec.
func (in *BaselineSpec) DeepCopy() *BaselineSpec {
	if in == nil {
		return nil
	}
	out := new(BaselineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChangePoint) DeepCopyInto(out *ChangePoint) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChangePoint.
func (in *ChangePoint) DeepCopy() *ChangePoint {
	if in == nil {
		return nil
	}
	out := new(ChangePoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChatbotEstimatorSpec) DeepCopyInto(out *ChatbotEstimatorSpec) {
	*out = *in
	if in.Base != nil {
		in, out := &in.Base, &out.Base
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChatbotEstimatorSpec.
func (in *ChatbotEstimatorSpec) DeepCopy() *ChatbotEstimatorSpec {
	if in == nil {
		return nil
	}
	out := new(ChatbotEstimatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CheckpointSpec) DeepCopyInto(out *CheckpointSpec) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.CheckpointInterval != nil {
		in, out := &in.CheckpointInterval, &out.CheckpointInterval
		*out = new(int32)
		**out = **in
	}
	in.Location.DeepCopyInto(&out.Location)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CheckpointSpec.
func (in *CheckpointSpec) DeepCopy() *CheckpointSpec {
	if in == nil {
		return nil
	}
	out := new(CheckpointSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassicalEstimatorSpec) DeepCopyInto(out *ClassicalEstimatorSpec) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]HyperParameterValue, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassicalEstimatorSpec.
func (in *ClassicalEstimatorSpec) DeepCopy() *ClassicalEstimatorSpec {
	if in == nil {
		return nil
	}
	out := new(ClassicalEstimatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomReportSpec) DeepCopyInto(out *CustomReportSpec) {
	*out = *in
	if in.Pages != nil {
		in, out := &in.Pages, &out.Pages
		*out = make([]datav1alpha1.PageSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomReportSpec.
func (in *CustomReportSpec) DeepCopy() *CustomReportSpec {
	if in == nil {
		return nil
	}
	out := new(CustomReportSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataHashes) DeepCopyInto(out *DataHashes) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataHashes.
func (in *DataHashes) DeepCopy() *DataHashes {
	if in == nil {
		return nil
	}
	out := new(DataHashes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSplitSpec) DeepCopyInto(out *DataSplitSpec) {
	*out = *in
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(catalogv1alpha1.DataSplitMethod)
		**out = **in
	}
	if in.Train != nil {
		in, out := &in.Train, &out.Train
		*out = new(int32)
		**out = **in
	}
	if in.Validation != nil {
		in, out := &in.Validation, &out.Validation
		*out = new(int32)
		**out = **in
	}
	if in.Test != nil {
		in, out := &in.Test, &out.Test
		*out = new(int32)
		**out = **in
	}
	if in.SplitColumn != nil {
		in, out := &in.SplitColumn, &out.SplitColumn
		*out = new(string)
		**out = **in
	}
	if in.Segments != nil {
		in, out := &in.Segments, &out.Segments
		*out = make([]SegmentSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TrainDatasetName != nil {
		in, out := &in.TrainDatasetName, &out.TrainDatasetName
		*out = new(string)
		**out = **in
	}
	if in.TestDatasetName != nil {
		in, out := &in.TestDatasetName, &out.TestDatasetName
		*out = new(string)
		**out = **in
	}
	if in.ValidationDatasetName != nil {
		in, out := &in.ValidationDatasetName, &out.ValidationDatasetName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSplitSpec.
func (in *DataSplitSpec) DeepCopy() *DataSplitSpec {
	if in == nil {
		return nil
	}
	out := new(DataSplitSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeepEstimatorLayer) DeepCopyInto(out *DeepEstimatorLayer) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]NNLayerParameter, len(*in))
		copy(*out, *in)
	}
	if in.InputLayers != nil {
		in, out := &in.InputLayers, &out.InputLayers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeepEstimatorLayer.
func (in *DeepEstimatorLayer) DeepCopy() *DeepEstimatorLayer {
	if in == nil {
		return nil
	}
	out := new(DeepEstimatorLayer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeepEstimatorSpec) DeepCopyInto(out *DeepEstimatorSpec) {
	*out = *in
	if in.Layers != nil {
		in, out := &in.Layers, &out.Layers
		*out = make([]DeepEstimatorLayer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(DNNTypeName)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(int32)
		**out = **in
	}
	if in.Epochs != nil {
		in, out := &in.Epochs, &out.Epochs
		*out = new(int32)
		**out = **in
	}
	if in.ValidationSplit != nil {
		in, out := &in.ValidationSplit, &out.ValidationSplit
		*out = new(int32)
		**out = **in
	}
	if in.Seq != nil {
		in, out := &in.Seq, &out.Seq
		*out = new(bool)
		**out = **in
	}
	if in.Gpus != nil {
		in, out := &in.Gpus, &out.Gpus
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeepEstimatorSpec.
func (in *DeepEstimatorSpec) DeepCopy() *DeepEstimatorSpec {
	if in == nil {
		return nil
	}
	out := new(DeepEstimatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DriftDetectorStatus) DeepCopyInto(out *DriftDetectorStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DriftDetectorStatus.
func (in *DriftDetectorStatus) DeepCopy() *DriftDetectorStatus {
	if in == nil {
		return nil
	}
	out := new(DriftDetectorStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DriftModelSpec) DeepCopyInto(out *DriftModelSpec) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DriftModelSpec.
func (in *DriftModelSpec) DeepCopy() *DriftModelSpec {
	if in == nil {
		return nil
	}
	out := new(DriftModelSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EarlyStopSpec) DeepCopyInto(out *EarlyStopSpec) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Initial != nil {
		in, out := &in.Initial, &out.Initial
		*out = new(int32)
		**out = **in
	}
	if in.MinModelsWithNoProgress != nil {
		in, out := &in.MinModelsWithNoProgress, &out.MinModelsWithNoProgress
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EarlyStopSpec.
func (in *EarlyStopSpec) DeepCopy() *EarlyStopSpec {
	if in == nil {
		return nil
	}
	out := new(EarlyStopSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnsembleRules) DeepCopyInto(out *EnsembleRules) {
	*out = *in
	if in.byAlg != nil {
		in, out := &in.byAlg, &out.byAlg
		*out = make(map[string]float64, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.byModel != nil {
		in, out := &in.byModel, &out.byModel
		*out = make(map[string]Model, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnsembleRules.
func (in *EnsembleRules) DeepCopy() *EnsembleRules {
	if in == nil {
		return nil
	}
	out := new(EnsembleRules)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnsembleSpec) DeepCopyInto(out *EnsembleSpec) {
	*out = *in
	if in.Models != nil {
		in, out := &in.Models, &out.Models
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Estimators != nil {
		in, out := &in.Estimators, &out.Estimators
		*out = make([]ClassicalEstimatorSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Final != nil {
		in, out := &in.Final, &out.Final
		*out = new(ClassicalEstimatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(catalogv1alpha1.EnsembleType)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnsembleSpec.
func (in *EnsembleSpec) DeepCopy() *EnsembleSpec {
	if in == nil {
		return nil
	}
	out := new(EnsembleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnsemblesSpec) DeepCopyInto(out *EnsemblesSpec) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.VotingEnsemble != nil {
		in, out := &in.VotingEnsemble, &out.VotingEnsemble
		*out = new(bool)
		**out = **in
	}
	if in.StackingEnsemble != nil {
		in, out := &in.StackingEnsemble, &out.StackingEnsemble
		*out = new(bool)
		**out = **in
	}
	if in.Top != nil {
		in, out := &in.Top, &out.Top
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnsemblesSpec.
func (in *EnsemblesSpec) DeepCopy() *EnsemblesSpec {
	if in == nil {
		return nil
	}
	out := new(EnsemblesSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntityRef) DeepCopyInto(out *EntityRef) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntityRef.
func (in *EntityRef) DeepCopy() *EntityRef {
	if in == nil {
		return nil
	}
	out := new(EntityRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvalMetrics) DeepCopyInto(out *EvalMetrics) {
	*out = *in
	if in.Reporting != nil {
		in, out := &in.Reporting, &out.Reporting
		*out = make([]catalogv1alpha1.Metric, len(*in))
		copy(*out, *in)
	}
	if in.AggFunc != nil {
		in, out := &in.AggFunc, &out.AggFunc
		*out = new(string)
		**out = **in
	}
	if in.AggPeriod != nil {
		in, out := &in.AggPeriod, &out.AggPeriod
		*out = new(int32)
		**out = **in
	}
	if in.NullModelParams != nil {
		in, out := &in.NullModelParams, &out.NullModelParams
		*out = new(string)
		**out = **in
	}
	if in.RelErrTolerance != nil {
		in, out := &in.RelErrTolerance, &out.RelErrTolerance
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvalMetrics.
func (in *EvalMetrics) DeepCopy() *EvalMetrics {
	if in == nil {
		return nil
	}
	out := new(EvalMetrics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvalPeriod) DeepCopyInto(out *EvalPeriod) {
	*out = *in
	if in.TestHorizon != nil {
		in, out := &in.TestHorizon, &out.TestHorizon
		*out = new(int32)
		**out = **in
	}
	if in.PeriodsBetweenTrainTest != nil {
		in, out := &in.PeriodsBetweenTrainTest, &out.PeriodsBetweenTrainTest
		*out = new(int32)
		**out = **in
	}
	if in.CvPeriodsBetweenSplits != nil {
		in, out := &in.CvPeriodsBetweenSplits, &out.CvPeriodsBetweenSplits
		*out = new(int32)
		**out = **in
	}
	if in.CvExpandingWindows != nil {
		in, out := &in.CvExpandingWindows, &out.CvExpandingWindows
		*out = new(bool)
		**out = **in
	}
	if in.CvHorizon != nil {
		in, out := &in.CvHorizon, &out.CvHorizon
		*out = new(int32)
		**out = **in
	}
	if in.CvMinTrainPeriods != nil {
		in, out := &in.CvMinTrainPeriods, &out.CvMinTrainPeriods
		*out = new(int32)
		**out = **in
	}
	if in.CvMaxSplits != nil {
		in, out := &in.CvMaxSplits, &out.CvMaxSplits
		*out = new(int32)
		**out = **in
	}
	if in.CvUseMostRecentSplits != nil {
		in, out := &in.CvUseMostRecentSplits, &out.CvUseMostRecentSplits
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvalPeriod.
func (in *EvalPeriod) DeepCopy() *EvalPeriod {
	if in == nil {
		return nil
	}
	out := new(EvalPeriod)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureEngineeringPipeline) DeepCopyInto(out *FeatureEngineeringPipeline) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Imputation != nil {
		in, out := &in.Imputation, &out.Imputation
		*out = new(catalogv1alpha1.Imputation)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(catalogv1alpha1.CategoricalEncoding)
		**out = **in
	}
	if in.Scaling != nil {
		in, out := &in.Scaling, &out.Scaling
		*out = new(catalogv1alpha1.Scaling)
		**out = **in
	}
	if in.Discretisation != nil {
		in, out := &in.Discretisation, &out.Discretisation
		*out = new(catalogv1alpha1.Discretisation)
		**out = **in
	}
	if in.VariableTransformation != nil {
		in, out := &in.VariableTransformation, &out.VariableTransformation
		*out = new(catalogv1alpha1.VariableTransformation)
		**out = **in
	}
	if in.OutlierHandling != nil {
		in, out := &in.OutlierHandling, &out.OutlierHandling
		*out = new(catalogv1alpha1.OutlierHandling)
		**out = **in
	}
	if in.DatetimeTransformation != nil {
		in, out := &in.DatetimeTransformation, &out.DatetimeTransformation
		*out = new(catalogv1alpha1.DatetimeTransformation)
		**out = **in
	}
	if in.Text != nil {
		in, out := &in.Text, &out.Text
		*out = new(TextPipelineSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(ImagePipelineSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Audio != nil {
		in, out := &in.Audio, &out.Audio
		*out = new(AudioPipelineSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Video != nil {
		in, out := &in.Video, &out.Video
		*out = new(VideoPipelineSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Generated != nil {
		in, out := &in.Generated, &out.Generated
		*out = make([]GeneratedColumnSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Custom != nil {
		in, out := &in.Custom, &out.Custom
		*out = make([]GeneratedColumnSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Drop != nil {
		in, out := &in.Drop, &out.Drop
		*out = new(bool)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureEngineeringPipeline.
func (in *FeatureEngineeringPipeline) DeepCopy() *FeatureEngineeringPipeline {
	if in == nil {
		return nil
	}
	out := new(FeatureEngineeringPipeline)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureEngineeringSearchSpec) DeepCopyInto(out *FeatureEngineeringSearchSpec) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ImbalanceHandler != nil {
		in, out := &in.ImbalanceHandler, &out.ImbalanceHandler
		*out = new(catalogv1alpha1.ImbalanceHandling)
		**out = **in
	}
	if in.Estimator != nil {
		in, out := &in.Estimator, &out.Estimator
		*out = new(catalogv1alpha1.ClassicEstimatorName)
		**out = **in
	}
	if in.MaxModels != nil {
		in, out := &in.MaxModels, &out.MaxModels
		*out = new(int32)
		**out = **in
	}
	if in.MaxTimeSec != nil {
		in, out := &in.MaxTimeSec, &out.MaxTimeSec
		*out = new(int32)
		**out = **in
	}
	if in.MaxTrainers != nil {
		in, out := &in.MaxTrainers, &out.MaxTrainers
		*out = new(int32)
		**out = **in
	}
	if in.SamplePct != nil {
		in, out := &in.SamplePct, &out.SamplePct
		*out = new(int32)
		**out = **in
	}
	if in.AutoRemove != nil {
		in, out := &in.AutoRemove, &out.AutoRemove
		*out = new(bool)
		**out = **in
	}
	if in.Reuse != nil {
		in, out := &in.Reuse, &out.Reuse
		*out = new(bool)
		**out = **in
	}
	in.FSelection.DeepCopyInto(&out.FSelection)
	in.EarlyStop.DeepCopyInto(&out.EarlyStop)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureEngineeringSearchSpec.
func (in *FeatureEngineeringSearchSpec) DeepCopy() *FeatureEngineeringSearchSpec {
	if in == nil {
		return nil
	}
	out := new(FeatureEngineeringSearchSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureEngineeringSearchStatus) DeepCopyInto(out *FeatureEngineeringSearchStatus) {
	*out = *in
	in.Best.DeepCopyInto(&out.Best)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureEngineeringSearchStatus.
func (in *FeatureEngineeringSearchStatus) DeepCopy() *FeatureEngineeringSearchStatus {
	if in == nil {
		return nil
	}
	out := new(FeatureEngineeringSearchStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureEngineeringSpec) DeepCopyInto(out *FeatureEngineeringSpec) {
	*out = *in
	if in.Pipelines != nil {
		in, out := &in.Pipelines, &out.Pipelines
		*out = make([]FeatureEngineeringPipeline, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Imbalance != nil {
		in, out := &in.Imbalance, &out.Imbalance
		*out = new(catalogv1alpha1.ImbalanceHandling)
		**out = **in
	}
	in.FeatureSelection.DeepCopyInto(&out.FeatureSelection)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureEngineeringSpec.
func (in *FeatureEngineeringSpec) DeepCopy() *FeatureEngineeringSpec {
	if in == nil {
		return nil
	}
	out := new(FeatureEngineeringSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureImportance) DeepCopyInto(out *FeatureImportance) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureImportance.
func (in *FeatureImportance) DeepCopy() *FeatureImportance {
	if in == nil {
		return nil
	}
	out := new(FeatureImportance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureInfo) DeepCopyInto(out *FeatureInfo) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureInfo.
func (in *FeatureInfo) DeepCopy() *FeatureInfo {
	if in == nil {
		return nil
	}
	out := new(FeatureInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturePair) DeepCopyInto(out *FeaturePair) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturePair.
func (in *FeaturePair) DeepCopy() *FeaturePair {
	if in == nil {
		return nil
	}
	out := new(FeaturePair)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureSelectionSpec) DeepCopyInto(out *FeatureSelectionSpec) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Embedding != nil {
		in, out := &in.Embedding, &out.Embedding
		*out = new(bool)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(bool)
		**out = **in
	}
	if in.Wrapper != nil {
		in, out := &in.Wrapper, &out.Wrapper
		*out = new(bool)
		**out = **in
	}
	if in.Pipeline != nil {
		in, out := &in.Pipeline, &out.Pipeline
		*out = make([]catalogv1alpha1.FeatureSelection, len(*in))
		copy(*out, *in)
	}
	if in.VarThreshold != nil {
		in, out := &in.VarThreshold, &out.VarThreshold
		*out = new(int32)
		**out = **in
	}
	if in.CorrThreshold != nil {
		in, out := &in.CorrThreshold, &out.CorrThreshold
		*out = new(int32)
		**out = **in
	}
	if in.MaxFeatures != nil {
		in, out := &in.MaxFeatures, &out.MaxFeatures
		*out = new(int32)
		**out = **in
	}
	if in.Percentile != nil {
		in, out := &in.Percentile, &out.Percentile
		*out = new(int32)
		**out = **in
	}
	if in.Reserved != nil {
		in, out := &in.Reserved, &out.Reserved
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureSelectionSpec.
func (in *FeatureSelectionSpec) DeepCopy() *FeatureSelectionSpec {
	if in == nil {
		return nil
	}
	out := new(FeatureSelectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForecasterSpec) DeepCopyInto(out *ForecasterSpec) {
	*out = *in
	if in.Events != nil {
		in, out := &in.Events, &out.Events
		*out = make([]TimeSeriesEvent, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Past.DeepCopyInto(&out.Past)
	in.Future.DeepCopyInto(&out.Future)
	if in.Forecast != nil {
		in, out := &in.Forecast, &out.Forecast
		*out = new(bool)
		**out = **in
	}
	if in.Coverage != nil {
		in, out := &in.Coverage, &out.Coverage
		*out = new(float64)
		**out = **in
	}
	in.OutputLocation.DeepCopyInto(&out.OutputLocation)
	if in.Features != nil {
		in, out := &in.Features, &out.Features
		*out = make([]catalogv1alpha1.Metric, len(*in))
		copy(*out, *in)
	}
	if in.Groups != nil {
		in, out := &in.Groups, &out.Groups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Anomalies != nil {
		in, out := &in.Anomalies, &out.Anomalies
		*out = make([]Anomaly, len(*in))
		copy(*out, *in)
	}
	if in.HPOBudget != nil {
		in, out := &in.HPOBudget, &out.HPOBudget
		*out = new(int32)
		**out = **in
	}
	in.EvalMetrics.DeepCopyInto(&out.EvalMetrics)
	in.EvalPeriod.DeepCopyInto(&out.EvalPeriod)
	in.Seasonality.DeepCopyInto(&out.Seasonality)
	if in.Regressors != nil {
		in, out := &in.Regressors, &out.Regressors
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.LaggedRegressors != nil {
		in, out := &in.LaggedRegressors, &out.LaggedRegressors
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Estimators != nil {
		in, out := &in.Estimators, &out.Estimators
		*out = make([]catalogv1alpha1.ClassicEstimatorName, len(*in))
		copy(*out, *in)
	}
	if in.HTS != nil {
		in, out := &in.HTS, &out.HTS
		*out = new(catalogv1alpha1.HTS)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForecasterSpec.
func (in *ForecasterSpec) DeepCopy() *ForecasterSpec {
	if in == nil {
		return nil
	}
	out := new(ForecasterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GarbageCollectionSpec) DeepCopyInto(out *GarbageCollectionSpec) {
	*out = *in
	if in.CollectAtStudyEnd != nil {
		in, out := &in.CollectAtStudyEnd, &out.CollectAtStudyEnd
		*out = new(bool)
		**out = **in
	}
	if in.KeepOnlyBestModelPerAlgorithm != nil {
		in, out := &in.KeepOnlyBestModelPerAlgorithm, &out.KeepOnlyBestModelPerAlgorithm
		*out = new(bool)
		**out = **in
	}
	if in.KeepPrunedModel != nil {
		in, out := &in.KeepPrunedModel, &out.KeepPrunedModel
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GarbageCollectionSpec.
func (in *GarbageCollectionSpec) DeepCopy() *GarbageCollectionSpec {
	if in == nil {
		return nil
	}
	out := new(GarbageCollectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GarbageCollectionStatus) DeepCopyInto(out *GarbageCollectionStatus) {
	*out = *in
	if in.Models != nil {
		in, out := &in.Models, &out.Models
		*out = make([]ModelResult, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GarbageCollectionStatus.
func (in *GarbageCollectionStatus) DeepCopy() *GarbageCollectionStatus {
	if in == nil {
		return nil
	}
	out := new(GarbageCollectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GeneratedColumnSpec) DeepCopyInto(out *GeneratedColumnSpec) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GeneratedColumnSpec.
func (in *GeneratedColumnSpec) DeepCopy() *GeneratedColumnSpec {
	if in == nil {
		return nil
	}
	out := new(GeneratedColumnSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSplitLocationsSpec) DeepCopyInto(out *GroupSplitLocationsSpec) {
	*out = *in
	if in.GroupTrainingFile != nil {
		in, out := &in.GroupTrainingFile, &out.GroupTrainingFile
		*out = new(string)
		**out = **in
	}
	if in.GroupTestingFile != nil {
		in, out := &in.GroupTestingFile, &out.GroupTestingFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSplitLocationsSpec.
func (in *GroupSplitLocationsSpec) DeepCopy() *GroupSplitLocationsSpec {
	if in == nil {
		return nil
	}
	out := new(GroupSplitLocationsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HyperParameterValue) DeepCopyInto(out *HyperParameterValue) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HyperParameterValue.
func (in *HyperParameterValue) DeepCopy() *HyperParameterValue {
	if in == nil {
		return nil
	}
	out := new(HyperParameterValue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HyperbandOptions) DeepCopyInto(out *HyperbandOptions) {
	*out = *in
	if in.MinResources != nil {
		in, out := &in.MinResources, &out.MinResources
		*out = new(int32)
		**out = **in
	}
	if in.MaxResources != nil {
		in, out := &in.MaxResources, &out.MaxResources
		*out = new(int32)
		**out = **in
	}
	if in.ReductionFactor != nil {
		in, out := &in.ReductionFactor, &out.ReductionFactor
		*out = new(int32)
		**out = **in
	}
	if in.BootstrapCount != nil {
		in, out := &in.BootstrapCount, &out.BootstrapCount
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HyperbandOptions.
func (in *HyperbandOptions) DeepCopy() *HyperbandOptions {
	if in == nil {
		return nil
	}
	out := new(HyperbandOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImagePipelineSpec) DeepCopyInto(out *ImagePipelineSpec) {
	*out = *in
	if in.Featurizer != nil {
		in, out := &in.Featurizer, &out.Featurizer
		*out = new(catalogv1alpha1.ImageFeaturizer)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImagePipelineSpec.
func (in *ImagePipelineSpec) DeepCopy() *ImagePipelineSpec {
	if in == nil {
		return nil
	}
	out := new(ImagePipelineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImbalanceHandlingSpec) DeepCopyInto(out *ImbalanceHandlingSpec) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Imbalance != nil {
		in, out := &in.Imbalance, &out.Imbalance
		*out = new(catalogv1alpha1.ImbalanceHandling)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImbalanceHandlingSpec.
func (in *ImbalanceHandlingSpec) DeepCopy() *ImbalanceHandlingSpec {
	if in == nil {
		return nil
	}
	out := new(ImbalanceHandlingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterpretabilitySpec) DeepCopyInto(out *InterpretabilitySpec) {
	*out = *in
	if in.ICE != nil {
		in, out := &in.ICE, &out.ICE
		*out = new(bool)
		**out = **in
	}
	if in.ICEPairs != nil {
		in, out := &in.ICEPairs, &out.ICEPairs
		*out = make([]FeaturePair, len(*in))
		copy(*out, *in)
	}
	if in.Lime != nil {
		in, out := &in.Lime, &out.Lime
		*out = new(bool)
		**out = **in
	}
	if in.Shap != nil {
		in, out := &in.Shap, &out.Shap
		*out = new(catalogv1alpha1.ShapType)
		**out = **in
	}
	if in.ShapPairs != nil {
		in, out := &in.ShapPairs, &out.ShapPairs
		*out = make([]FeaturePair, len(*in))
		copy(*out, *in)
	}
	if in.CounterFactual != nil {
		in, out := &in.CounterFactual, &out.CounterFactual
		*out = new(bool)
		**out = **in
	}
	if in.Anchor != nil {
		in, out := &in.Anchor, &out.Anchor
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterpretabilitySpec.
func (in *InterpretabilitySpec) DeepCopy() *InterpretabilitySpec {
	if in == nil {
		return nil
	}
	out := new(InterpretabilitySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterpretabilityStatus) DeepCopyInto(out *InterpretabilityStatus) {
	*out = *in
	if in.StartedAt != nil {
		in, out := &in.StartedAt, &out.StartedAt
		*out = (*in).DeepCopy()
	}
	if in.CompletedAt != nil {
		in, out := &in.CompletedAt, &out.CompletedAt
		*out = (*in).DeepCopy()
	}
	if in.Importance != nil {
		in, out := &in.Importance, &out.Importance
		*out = make([]FeatureImportance, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterpretabilityStatus.
func (in *InterpretabilityStatus) DeepCopy() *InterpretabilityStatus {
	if in == nil {
		return nil
	}
	out := new(InterpretabilityStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Level) DeepCopyInto(out *Level) {
	*out = *in
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Horizon != nil {
		in, out := &in.Horizon, &out.Horizon
		*out = new(int32)
		**out = **in
	}
	if in.Freq != nil {
		in, out := &in.Freq, &out.Freq
		*out = new(catalogv1alpha1.Freq)
		**out = **in
	}
	if in.Aggregate != nil {
		in, out := &in.Aggregate, &out.Aggregate
		*out = new(catalogv1alpha1.Aggregate)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Level.
func (in *Level) DeepCopy() *Level {
	if in == nil {
		return nil
	}
	out := new(Level)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MedianPrunerOptions) DeepCopyInto(out *MedianPrunerOptions) {
	*out = *in
	if in.StartupTrials != nil {
		in, out := &in.StartupTrials, &out.StartupTrials
		*out = new(int32)
		**out = **in
	}
	if in.WarmupSteps != nil {
		in, out := &in.WarmupSteps, &out.WarmupSteps
		*out = new(int32)
		**out = **in
	}
	if in.IntervalSteps != nil {
		in, out := &in.IntervalSteps, &out.IntervalSteps
		*out = new(int32)
		**out = **in
	}
	if in.MinTrials != nil {
		in, out := &in.MinTrials, &out.MinTrials
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MedianPrunerOptions.
func (in *MedianPrunerOptions) DeepCopy() *MedianPrunerOptions {
	if in == nil {
		return nil
	}
	out := new(MedianPrunerOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Model) DeepCopyInto(out *Model) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Model.
func (in *Model) DeepCopy() *Model {
	if in == nil {
		return nil
	}
	out := new(Model)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Model) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelClass) DeepCopyInto(out *ModelClass) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelClass.
func (in *ModelClass) DeepCopy() *ModelClass {
	if in == nil {
		return nil
	}
	out := new(ModelClass)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ModelClass) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelClassCondition) DeepCopyInto(out *ModelClassCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelClassCondition.
func (in *ModelClassCondition) DeepCopy() *ModelClassCondition {
	if in == nil {
		return nil
	}
	out := new(ModelClassCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelClassDataSpec) DeepCopyInto(out *ModelClassDataSpec) {
	*out = *in
	in.Observations.DeepCopyInto(&out.Observations)
	in.Predictions.DeepCopyInto(&out.Predictions)
	in.Schema.DeepCopyInto(&out.Schema)
	if in.FlatFile != nil {
		in, out := &in.FlatFile, &out.FlatFile
		*out = new(datav1alpha1.FlatFileFormatSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PredictionTimeColumn != nil {
		in, out := &in.PredictionTimeColumn, &out.PredictionTimeColumn
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	in.Tests.DeepCopyInto(&out.Tests)
	if in.OnlineFeatureStoreName != nil {
		in, out := &in.OnlineFeatureStoreName, &out.OnlineFeatureStoreName
		*out = new(string)
		**out = **in
	}
	if in.OfflineFeatureStoreName != nil {
		in, out := &in.OfflineFeatureStoreName, &out.OfflineFeatureStoreName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelClassDataSpec.
func (in *ModelClassDataSpec) DeepCopy() *ModelClassDataSpec {
	if in == nil {
		return nil
	}
	out := new(ModelClassDataSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelClassList) DeepCopyInto(out *ModelClassList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ModelClass, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelClassList.
func (in *ModelClassList) DeepCopy() *ModelClassList {
	if in == nil {
		return nil
	}
	out := new(ModelClassList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ModelClassList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelClassRun) DeepCopyInto(out *ModelClassRun) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelClassRun.
func (in *ModelClassRun) DeepCopy() *ModelClassRun {
	if in == nil {
		return nil
	}
	out := new(ModelClassRun)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ModelClassRun) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelClassRunCondition) DeepCopyInto(out *ModelClassRunCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelClassRunCondition.
func (in *ModelClassRunCondition) DeepCopy() *ModelClassRunCondition {
	if in == nil {
		return nil
	}
	out := new(ModelClassRunCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelClassRunList) DeepCopyInto(out *ModelClassRunList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ModelClassRun, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelClassRunList.
func (in *ModelClassRunList) DeepCopy() *ModelClassRunList {
	if in == nil {
		return nil
	}
	out := new(ModelClassRunList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ModelClassRunList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelClassRunSpec) DeepCopyInto(out *ModelClassRunSpec) {
	*out = *in
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Dataset != nil {
		in, out := &in.Dataset, &out.Dataset
		*out = new(string)
		**out = **in
	}
	if in.ModelClassName != nil {
		in, out := &in.ModelClassName, &out.ModelClassName
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(catalogv1alpha1.PriorityLevel)
		**out = **in
	}
	if in.Paused != nil {
		in, out := &in.Paused, &out.Paused
		*out = new(bool)
		**out = **in
	}
	if in.Aborted != nil {
		in, out := &in.Aborted, &out.Aborted
		*out = new(bool)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelClassRunSpec.
func (in *ModelClassRunSpec) DeepCopy() *ModelClassRunSpec {
	if in == nil {
		return nil
	}
	out := new(ModelClassRunSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelClassRunStatus) DeepCopyInto(out *ModelClassRunStatus) {
	*out = *in
	if in.CompletedAt != nil {
		in, out := &in.CompletedAt, &out.CompletedAt
		*out = (*in).DeepCopy()
	}
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(catalogv1alpha1.StatusError)
		**out = **in
	}
	if in.FailureMessage != nil {
		in, out := &in.FailureMessage, &out.FailureMessage
		*out = new(string)
		**out = **in
	}
	if in.Progress != nil {
		in, out := &in.Progress, &out.Progress
		*out = new(int32)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = (*in).DeepCopy()
	}
	in.Logs.DeepCopyInto(&out.Logs)
	if in.PromotedAt != nil {
		in, out := &in.PromotedAt, &out.PromotedAt
		*out = (*in).DeepCopy()
	}
	if in.Auto != nil {
		in, out := &in.Auto, &out.Auto
		*out = new(bool)
		**out = **in
	}
	out.ApprovedBy = in.ApprovedBy
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ModelClassRunCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelClassRunStatus.
func (in *ModelClassRunStatus) DeepCopy() *ModelClassRunStatus {
	if in == nil {
		return nil
	}
	out := new(ModelClassRunStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelClassServingSpec) DeepCopyInto(out *ModelClassServingSpec) {
	*out = *in
	if in.Pipeline != nil {
		in, out := &in.Pipeline, &out.Pipeline
		*out = make([]PipelineStageSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PredictorTemplateName != nil {
		in, out := &in.PredictorTemplateName, &out.PredictorTemplateName
		*out = new(string)
		**out = **in
	}
	out.ServingSiteRef = in.ServingSiteRef
	if in.Online != nil {
		in, out := &in.Online, &out.Online
		*out = new(bool)
		**out = **in
	}
	if in.Dashboard != nil {
		in, out := &in.Dashboard, &out.Dashboard
		*out = new(bool)
		**out = **in
	}
	in.Access.DeepCopyInto(&out.Access)
	if in.Replicas != nil {
		in, out := &in.Replicas, &out.Replicas
		*out = new(int32)
		**out = **in
	}
	in.MonitoringSchedule.DeepCopyInto(&out.MonitoringSchedule)
	in.BatchPredictionSchedule.DeepCopyInto(&out.BatchPredictionSchedule)
	in.Resources.DeepCopyInto(&out.Resources)
	if in.ShadowFirst != nil {
		in, out := &in.ShadowFirst, &out.ShadowFirst
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelClassServingSpec.
func (in *ModelClassServingSpec) DeepCopy() *ModelClassServingSpec {
	if in == nil {
		return nil
	}
	out := new(ModelClassServingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelClassSpec) DeepCopyInto(out *ModelClassSpec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.DataProductVersionName != nil {
		in, out := &in.DataProductVersionName, &out.DataProductVersionName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = new(catalogv1alpha1.MLTask)
		**out = **in
	}
	if in.SubTask != nil {
		in, out := &in.SubTask, &out.SubTask
		*out = new(catalogv1alpha1.MLSubtask)
		**out = **in
	}
	if in.Objective != nil {
		in, out := &in.Objective, &out.Objective
		*out = new(catalogv1alpha1.Metric)
		**out = **in
	}
	if in.Entities != nil {
		in, out := &in.Entities, &out.Entities
		*out = make([]EntityRef, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Data.DeepCopyInto(&out.Data)
	in.Training.DeepCopyInto(&out.Training)
	in.Serving.DeepCopyInto(&out.Serving)
	in.Notification.DeepCopyInto(&out.Notification)
	in.ReportSchedule.DeepCopyInto(&out.ReportSchedule)
	if in.Fast != nil {
		in, out := &in.Fast, &out.Fast
		*out = new(bool)
		**out = **in
	}
	if in.Paused != nil {
		in, out := &in.Paused, &out.Paused
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelClassSpec.
func (in *ModelClassSpec) DeepCopy() *ModelClassSpec {
	if in == nil {
		return nil
	}
	out := new(ModelClassSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelClassStatus) DeepCopyInto(out *ModelClassStatus) {
	*out = *in
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = (*in).DeepCopy()
	}
	if in.BestFE != nil {
		in, out := &in.BestFE, &out.BestFE
		*out = new(FeatureEngineeringSpec)
		(*in).DeepCopyInto(*out)
	}
	in.TrainingScheduleStatus.DeepCopyInto(&out.TrainingScheduleStatus)
	in.PredictionScheduleStatus.DeepCopyInto(&out.PredictionScheduleStatus)
	in.MonitoringScheduleStatus.DeepCopyInto(&out.MonitoringScheduleStatus)
	in.ReportScheduleStatus.DeepCopyInto(&out.ReportScheduleStatus)
	if in.RetiredModels != nil {
		in, out := &in.RetiredModels, &out.RetiredModels
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(catalogv1alpha1.StatusError)
		**out = **in
	}
	if in.FailureMessage != nil {
		in, out := &in.FailureMessage, &out.FailureMessage
		*out = new(string)
		**out = **in
	}
	if in.LastTraining != nil {
		in, out := &in.LastTraining, &out.LastTraining
		*out = (*in).DeepCopy()
	}
	if in.LastPromotion != nil {
		in, out := &in.LastPromotion, &out.LastPromotion
		*out = (*in).DeepCopy()
	}
	if in.LastPredictionAt != nil {
		in, out := &in.LastPredictionAt, &out.LastPredictionAt
		*out = (*in).DeepCopy()
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ModelClassCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelClassStatus.
func (in *ModelClassStatus) DeepCopy() *ModelClassStatus {
	if in == nil {
		return nil
	}
	out := new(ModelClassStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelClassTrainingSpec) DeepCopyInto(out *ModelClassTrainingSpec) {
	*out = *in
	out.LabRef = in.LabRef
	in.ModelUnitTests.DeepCopyInto(&out.ModelUnitTests)
	in.TrainingSchedule.DeepCopyInto(&out.TrainingSchedule)
	in.ModelImage.DeepCopyInto(&out.ModelImage)
	if in.Retrain != nil {
		in, out := &in.Retrain, &out.Retrain
		*out = new(bool)
		**out = **in
	}
	if in.SearchSpace != nil {
		in, out := &in.SearchSpace, &out.SearchSpace
		*out = new(AlgorithmSearchSpaceSpec)
		(*in).DeepCopyInto(*out)
	}
	in.Resources.DeepCopyInto(&out.Resources)
	if in.Paused != nil {
		in, out := &in.Paused, &out.Paused
		*out = new(bool)
		**out = **in
	}
	if in.MaxTime != nil {
		in, out := &in.MaxTime, &out.MaxTime
		*out = new(int32)
		**out = **in
	}
	if in.MaxModels != nil {
		in, out := &in.MaxModels, &out.MaxModels
		*out = new(int32)
		**out = **in
	}
	if in.Trainers != nil {
		in, out := &in.Trainers, &out.Trainers
		*out = new(int32)
		**out = **in
	}
	if in.Aborted != nil {
		in, out := &in.Aborted, &out.Aborted
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelClassTrainingSpec.
func (in *ModelClassTrainingSpec) DeepCopy() *ModelClassTrainingSpec {
	if in == nil {
		return nil
	}
	out := new(ModelClassTrainingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelCondition) DeepCopyInto(out *ModelCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelCondition.
func (in *ModelCondition) DeepCopy() *ModelCondition {
	if in == nil {
		return nil
	}
	out := new(ModelCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelGroupByStatus) DeepCopyInto(out *ModelGroupByStatus) {
	*out = *in
	if in.WorkerResults != nil {
		in, out := &in.WorkerResults, &out.WorkerResults
		*out = make([]catalogv1alpha1.WorkerRunResult, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelGroupByStatus.
func (in *ModelGroupByStatus) DeepCopy() *ModelGroupByStatus {
	if in == nil {
		return nil
	}
	out := new(ModelGroupByStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelImageSpec) DeepCopyInto(out *ModelImageSpec) {
	*out = *in
	if in.Exist != nil {
		in, out := &in.Exist, &out.Exist
		*out = new(bool)
		**out = **in
	}
	if in.ImageName != nil {
		in, out := &in.ImageName, &out.ImageName
		*out = new(string)
		**out = **in
	}
	if in.RegistryConnection != nil {
		in, out := &in.RegistryConnection, &out.RegistryConnection
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelImageSpec.
func (in *ModelImageSpec) DeepCopy() *ModelImageSpec {
	if in == nil {
		return nil
	}
	out := new(ModelImageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelList) DeepCopyInto(out *ModelList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Model, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelList.
func (in *ModelList) DeepCopy() *ModelList {
	if in == nil {
		return nil
	}
	out := new(ModelList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ModelList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelResult) DeepCopyInto(out *ModelResult) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelResult.
func (in *ModelResult) DeepCopy() *ModelResult {
	if in == nil {
		return nil
	}
	out := new(ModelResult)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelSpec) DeepCopyInto(out *ModelSpec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
	if in.ModelVersion != nil {
		in, out := &in.ModelVersion, &out.ModelVersion
		*out = new(string)
		**out = **in
	}
	if in.StudyName != nil {
		in, out := &in.StudyName, &out.StudyName
		*out = new(string)
		**out = **in
	}
	if in.DatasetName != nil {
		in, out := &in.DatasetName, &out.DatasetName
		*out = new(string)
		**out = **in
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = new(catalogv1alpha1.MLTask)
		**out = **in
	}
	if in.SubTask != nil {
		in, out := &in.SubTask, &out.SubTask
		*out = new(catalogv1alpha1.MLSubtask)
		**out = **in
	}
	if in.Objective != nil {
		in, out := &in.Objective, &out.Objective
		*out = new(catalogv1alpha1.Metric)
		**out = **in
	}
	in.FeatureEngineering.DeepCopyInto(&out.FeatureEngineering)
	if in.Estimator != nil {
		in, out := &in.Estimator, &out.Estimator
		*out = new(ClassicalEstimatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Dnn != nil {
		in, out := &in.Dnn, &out.Dnn
		*out = new(DeepEstimatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Chatbot != nil {
		in, out := &in.Chatbot, &out.Chatbot
		*out = new(ChatbotEstimatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.NLPEstimator != nil {
		in, out := &in.NLPEstimator, &out.NLPEstimator
		*out = new(NLPEstimatorSpec)
		(*in).DeepCopyInto(*out)
	}
	in.Ensemble.DeepCopyInto(&out.Ensemble)
	in.Training.DeepCopyInto(&out.Training)
	in.Serving.DeepCopyInto(&out.Serving)
	if in.Tested != nil {
		in, out := &in.Tested, &out.Tested
		*out = new(bool)
		**out = **in
	}
	if in.Aborted != nil {
		in, out := &in.Aborted, &out.Aborted
		*out = new(bool)
		**out = **in
	}
	if in.Packaged != nil {
		in, out := &in.Packaged, &out.Packaged
		*out = new(bool)
		**out = **in
	}
	if in.Published != nil {
		in, out := &in.Published, &out.Published
		*out = new(bool)
		**out = **in
	}
	if in.Pushed != nil {
		in, out := &in.Pushed, &out.Pushed
		*out = new(bool)
		**out = **in
	}
	if in.Reported != nil {
		in, out := &in.Reported, &out.Reported
		*out = new(bool)
		**out = **in
	}
	if in.Paused != nil {
		in, out := &in.Paused, &out.Paused
		*out = new(bool)
		**out = **in
	}
	if in.Profiled != nil {
		in, out := &in.Profiled, &out.Profiled
		*out = new(bool)
		**out = **in
	}
	if in.Archived != nil {
		in, out := &in.Archived, &out.Archived
		*out = new(bool)
		**out = **in
	}
	if in.Forecasted != nil {
		in, out := &in.Forecasted, &out.Forecasted
		*out = new(bool)
		**out = **in
	}
	if in.Released != nil {
		in, out := &in.Released, &out.Released
		*out = new(bool)
		**out = **in
	}
	if in.Registered != nil {
		in, out := &in.Registered, &out.Registered
		*out = new(bool)
		**out = **in
	}
	if in.Predicted != nil {
		in, out := &in.Predicted, &out.Predicted
		*out = new(bool)
		**out = **in
	}
	if in.Tuned != nil {
		in, out := &in.Tuned, &out.Tuned
		*out = new(bool)
		**out = **in
	}
	if in.Explained != nil {
		in, out := &in.Explained, &out.Explained
		*out = new(bool)
		**out = **in
	}
	if in.CodeGenerated != nil {
		in, out := &in.CodeGenerated, &out.CodeGenerated
		*out = new(bool)
		**out = **in
	}
	if in.Baseline != nil {
		in, out := &in.Baseline, &out.Baseline
		*out = new(bool)
		**out = **in
	}
	if in.GenDriftDetector != nil {
		in, out := &in.GenDriftDetector, &out.GenDriftDetector
		*out = new(bool)
		**out = **in
	}
	if in.Fast != nil {
		in, out := &in.Fast, &out.Fast
		*out = new(bool)
		**out = **in
	}
	if in.UnitTested != nil {
		in, out := &in.UnitTested, &out.UnitTested
		*out = new(bool)
		**out = **in
	}
	if in.FeedbackDatasetRef != nil {
		in, out := &in.FeedbackDatasetRef, &out.FeedbackDatasetRef
		*out = new(v1.ObjectReference)
		**out = **in
	}
	if in.Flagged != nil {
		in, out := &in.Flagged, &out.Flagged
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(datav1alpha1.DataLocation)
		(*in).DeepCopyInto(*out)
	}
	if in.Forecasting != nil {
		in, out := &in.Forecasting, &out.Forecasting
		*out = new(ForecasterSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Compilation != nil {
		in, out := &in.Compilation, &out.Compilation
		*out = new(catalogv1alpha1.CompilerSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.ActiveDeadlineSeconds != nil {
		in, out := &in.ActiveDeadlineSeconds, &out.ActiveDeadlineSeconds
		*out = new(int64)
		**out = **in
	}
	if in.EstimatorType != nil {
		in, out := &in.EstimatorType, &out.EstimatorType
		*out = new(catalogv1alpha1.ModelType)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(int32)
		**out = **in
	}
	if in.TrialID != nil {
		in, out := &in.TrialID, &out.TrialID
		*out = new(int32)
		**out = **in
	}
	if in.Governance != nil {
		in, out := &in.Governance, &out.Governance
		*out = new(datav1alpha1.GovernanceSpec)
		(*in).DeepCopyInto(*out)
	}
	in.Interpretability.DeepCopyInto(&out.Interpretability)
	in.UnitTests.DeepCopyInto(&out.UnitTests)
	in.FeedbackTests.DeepCopyInto(&out.FeedbackTests)
	in.PartitionsLocation.DeepCopyInto(&out.PartitionsLocation)
	if in.ModelClassName != nil {
		in, out := &in.ModelClassName, &out.ModelClassName
		*out = new(string)
		**out = **in
	}
	if in.ModelClassRunName != nil {
		in, out := &in.ModelClassRunName, &out.ModelClassRunName
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(catalogv1alpha1.ModelRole)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelSpec.
func (in *ModelSpec) DeepCopy() *ModelSpec {
	if in == nil {
		return nil
	}
	out := new(ModelSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelStageStatus) DeepCopyInto(out *ModelStageStatus) {
	*out = *in
	if in.ApprovedAt != nil {
		in, out := &in.ApprovedAt, &out.ApprovedAt
		*out = (*in).DeepCopy()
	}
	if in.StartedAt != nil {
		in, out := &in.StartedAt, &out.StartedAt
		*out = (*in).DeepCopy()
	}
	if in.CompletedAt != nil {
		in, out := &in.CompletedAt, &out.CompletedAt
		*out = (*in).DeepCopy()
	}
	in.UnitTestsResult.DeepCopyInto(&out.UnitTestsResult)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelStageStatus.
func (in *ModelStageStatus) DeepCopy() *ModelStageStatus {
	if in == nil {
		return nil
	}
	out := new(ModelStageStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelStatus) DeepCopyInto(out *ModelStatus) {
	*out = *in
	if in.TrainingStartedAt != nil {
		in, out := &in.TrainingStartedAt, &out.TrainingStartedAt
		*out = (*in).DeepCopy()
	}
	if in.TrainingCompletedAt != nil {
		in, out := &in.TrainingCompletedAt, &out.TrainingCompletedAt
		*out = (*in).DeepCopy()
	}
	if in.TestingStartedAt != nil {
		in, out := &in.TestingStartedAt, &out.TestingStartedAt
		*out = (*in).DeepCopy()
	}
	if in.TestingCompletedAt != nil {
		in, out := &in.TestingCompletedAt, &out.TestingCompletedAt
		*out = (*in).DeepCopy()
	}
	if in.TuningStartedAt != nil {
		in, out := &in.TuningStartedAt, &out.TuningStartedAt
		*out = (*in).DeepCopy()
	}
	if in.TuningCompletedAt != nil {
		in, out := &in.TuningCompletedAt, &out.TuningCompletedAt
		*out = (*in).DeepCopy()
	}
	if in.CompletedAt != nil {
		in, out := &in.CompletedAt, &out.CompletedAt
		*out = (*in).DeepCopy()
	}
	if in.CV != nil {
		in, out := &in.CV, &out.CV
		*out = make([]catalogv1alpha1.Measurement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Train != nil {
		in, out := &in.Train, &out.Train
		*out = make([]catalogv1alpha1.Measurement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Test != nil {
		in, out := &in.Test, &out.Test
		*out = make([]catalogv1alpha1.Measurement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tune != nil {
		in, out := &in.Tune, &out.Tune
		*out = make([]catalogv1alpha1.Measurement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Feedback != nil {
		in, out := &in.Feedback, &out.Feedback
		*out = make([]catalogv1alpha1.Measurement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.LastFeedbackDatasetRef = in.LastFeedbackDatasetRef
	if in.ImpurityImportance != nil {
		in, out := &in.ImpurityImportance, &out.ImpurityImportance
		*out = make([]FeatureImportance, len(*in))
		copy(*out, *in)
	}
	if in.PermutationImportance != nil {
		in, out := &in.PermutationImportance, &out.PermutationImportance
		*out = make([]FeatureImportance, len(*in))
		copy(*out, *in)
	}
	in.Runtime.DeepCopyInto(&out.Runtime)
	in.TrainDatasetLocation.DeepCopyInto(&out.TrainDatasetLocation)
	in.TestDatasetLocation.DeepCopyInto(&out.TestDatasetLocation)
	in.ValidationDataset.DeepCopyInto(&out.ValidationDataset)
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(catalogv1alpha1.StatusError)
		**out = **in
	}
	if in.FailureMessage != nil {
		in, out := &in.FailureMessage, &out.FailureMessage
		*out = new(string)
		**out = **in
	}
	if in.ReleasedAt != nil {
		in, out := &in.ReleasedAt, &out.ReleasedAt
		*out = (*in).DeepCopy()
	}
	if in.PredictedAt != nil {
		in, out := &in.PredictedAt, &out.PredictedAt
		*out = (*in).DeepCopy()
	}
	out.TrainingDataHash = in.TrainingDataHash
	out.TrainingResources = in.TrainingResources
	out.TestingResources = in.TestingResources
	in.Logs.DeepCopyInto(&out.Logs)
	in.RocCurve.DeepCopyInto(&out.RocCurve)
	in.PRCurve.DeepCopyInto(&out.PRCurve)
	in.TrainConfusionMatrix.DeepCopyInto(&out.TrainConfusionMatrix)
	in.TestConfusionMatrix.DeepCopyInto(&out.TestConfusionMatrix)
	if in.CorrelationsWithTarget != nil {
		in, out := &in.CorrelationsWithTarget, &out.CorrelationsWithTarget
		*out = make([]datav1alpha1.Correlation, len(*in))
		copy(*out, *in)
	}
	if in.TopCorrelations != nil {
		in, out := &in.TopCorrelations, &out.TopCorrelations
		*out = make([]datav1alpha1.Correlation, len(*in))
		copy(*out, *in)
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = (*in).DeepCopy()
	}
	in.Governance.DeepCopyInto(&out.Governance)
	in.Interpretability.DeepCopyInto(&out.Interpretability)
	in.Images.DeepCopyInto(&out.Images)
	in.UnitTestsResult.DeepCopyInto(&out.UnitTestsResult)
	in.FeedbackTestsResult.DeepCopyInto(&out.FeedbackTestsResult)
	in.GroupBy.DeepCopyInto(&out.GroupBy)
	if in.Stages != nil {
		in, out := &in.Stages, &out.Stages
		*out = make([]ModelStageStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ModelCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelStatus.
func (in *ModelStatus) DeepCopy() *ModelStatus {
	if in == nil {
		return nil
	}
	out := new(ModelStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelTestSuite) DeepCopyInto(out *ModelTestSuite) {
	*out = *in
	out.BaselineModelRef = in.BaselineModelRef
	out.DatasetRef = in.DatasetRef
	in.UnitTests.DeepCopyInto(&out.UnitTests)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelTestSuite.
func (in *ModelTestSuite) DeepCopy() *ModelTestSuite {
	if in == nil {
		return nil
	}
	out := new(ModelTestSuite)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NLPEstimatorSpec) DeepCopyInto(out *NLPEstimatorSpec) {
	*out = *in
	if in.Base != nil {
		in, out := &in.Base, &out.Base
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NLPEstimatorSpec.
func (in *NLPEstimatorSpec) DeepCopy() *NLPEstimatorSpec {
	if in == nil {
		return nil
	}
	out := new(NLPEstimatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NNLayerParameter) DeepCopyInto(out *NNLayerParameter) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NNLayerParameter.
func (in *NNLayerParameter) DeepCopy() *NNLayerParameter {
	if in == nil {
		return nil
	}
	out := new(NNLayerParameter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionModelLocationsSpec) DeepCopyInto(out *PartitionModelLocationsSpec) {
	*out = *in
	if in.PartitionFolder != nil {
		in, out := &in.PartitionFolder, &out.PartitionFolder
		*out = new(string)
		**out = **in
	}
	if in.PartitionProfileFolder != nil {
		in, out := &in.PartitionProfileFolder, &out.PartitionProfileFolder
		*out = new(string)
		**out = **in
	}
	if in.PartitionReportFile != nil {
		in, out := &in.PartitionReportFile, &out.PartitionReportFile
		*out = new(string)
		**out = **in
	}
	if in.PartitionModelFolder != nil {
		in, out := &in.PartitionModelFolder, &out.PartitionModelFolder
		*out = new(string)
		**out = **in
	}
	if in.PartitionModelFile != nil {
		in, out := &in.PartitionModelFile, &out.PartitionModelFile
		*out = new(string)
		**out = **in
	}
	if in.PartitionForecastFile != nil {
		in, out := &in.PartitionForecastFile, &out.PartitionForecastFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionModelLocationsSpec.
func (in *PartitionModelLocationsSpec) DeepCopy() *PartitionModelLocationsSpec {
	if in == nil {
		return nil
	}
	out := new(PartitionModelLocationsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PercentilePrunerOptions) DeepCopyInto(out *PercentilePrunerOptions) {
	*out = *in
	if in.Percentile != nil {
		in, out := &in.Percentile, &out.Percentile
		*out = new(int32)
		**out = **in
	}
	if in.StartupTrials != nil {
		in, out := &in.StartupTrials, &out.StartupTrials
		*out = new(int32)
		**out = **in
	}
	if in.WarmupSteps != nil {
		in, out := &in.WarmupSteps, &out.WarmupSteps
		*out = new(int32)
		**out = **in
	}
	if in.IntervalSteps != nil {
		in, out := &in.IntervalSteps, &out.IntervalSteps
		*out = new(int32)
		**out = **in
	}
	if in.MinTrials != nil {
		in, out := &in.MinTrials, &out.MinTrials
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PercentilePrunerOptions.
func (in *PercentilePrunerOptions) DeepCopy() *PercentilePrunerOptions {
	if in == nil {
		return nil
	}
	out := new(PercentilePrunerOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineStageSpec) DeepCopyInto(out *PipelineStageSpec) {
	*out = *in
	in.Tests.DeepCopyInto(&out.Tests)
	if in.ServingSiteRef != nil {
		in, out := &in.ServingSiteRef, &out.ServingSiteRef
		*out = new(v1.ObjectReference)
		**out = **in
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(catalogv1alpha1.ResourceSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineStageSpec.
func (in *PipelineStageSpec) DeepCopy() *PipelineStageSpec {
	if in == nil {
		return nil
	}
	out := new(PipelineStageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrunerSpec) DeepCopyInto(out *PrunerSpec) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(PrunerName)
		**out = **in
	}
	if in.Median != nil {
		in, out := &in.Median, &out.Median
		*out = new(MedianPrunerOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.Percentile != nil {
		in, out := &in.Percentile, &out.Percentile
		*out = new(PercentilePrunerOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.Successive != nil {
		in, out := &in.Successive, &out.Successive
		*out = new(SuccessiveHalvingOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.Hyperband != nil {
		in, out := &in.Hyperband, &out.Hyperband
		*out = new(HyperbandOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(ThresholdPrunerOptions)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrunerSpec.
func (in *PrunerSpec) DeepCopy() *PrunerSpec {
	if in == nil {
		return nil
	}
	out := new(PrunerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegressionForecasterSpec) DeepCopyInto(out *RegressionForecasterSpec) {
	*out = *in
	if in.Ensemble != nil {
		in, out := &in.Ensemble, &out.Ensemble
		*out = new(bool)
		**out = **in
	}
	if in.Imputation != nil {
		in, out := &in.Imputation, &out.Imputation
		*out = new(catalogv1alpha1.Imputation)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(catalogv1alpha1.CategoricalEncoding)
		**out = **in
	}
	if in.Scaling != nil {
		in, out := &in.Scaling, &out.Scaling
		*out = new(catalogv1alpha1.Scaling)
		**out = **in
	}
	if in.Date != nil {
		in, out := &in.Date, &out.Date
		*out = new(bool)
		**out = **in
	}
	if in.Windows != nil {
		in, out := &in.Windows, &out.Windows
		*out = make([]int32, len(*in))
		copy(*out, *in)
	}
	if in.Lags != nil {
		in, out := &in.Lags, &out.Lags
		*out = make([]int32, len(*in))
		copy(*out, *in)
	}
	if in.Functions != nil {
		in, out := &in.Functions, &out.Functions
		*out = make([]catalogv1alpha1.Metric, len(*in))
		copy(*out, *in)
	}
	if in.EMA != nil {
		in, out := &in.EMA, &out.EMA
		*out = new(bool)
		**out = **in
	}
	if in.Log != nil {
		in, out := &in.Log, &out.Log
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegressionForecasterSpec.
func (in *RegressionForecasterSpec) DeepCopy() *RegressionForecasterSpec {
	if in == nil {
		return nil
	}
	out := new(RegressionForecasterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Report) DeepCopyInto(out *Report) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Report.
func (in *Report) DeepCopy() *Report {
	if in == nil {
		return nil
	}
	out := new(Report)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Report) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReportCondition) DeepCopyInto(out *ReportCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReportCondition.
func (in *ReportCondition) DeepCopy() *ReportCondition {
	if in == nil {
		return nil
	}
	out := new(ReportCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReportGroupByStatus) DeepCopyInto(out *ReportGroupByStatus) {
	*out = *in
	if in.WorkerResults != nil {
		in, out := &in.WorkerResults, &out.WorkerResults
		*out = make([]catalogv1alpha1.WorkerRunResult, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReportGroupByStatus.
func (in *ReportGroupByStatus) DeepCopy() *ReportGroupByStatus {
	if in == nil {
		return nil
	}
	out := new(ReportGroupByStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReportList) DeepCopyInto(out *ReportList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Report, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReportList.
func (in *ReportList) DeepCopy() *ReportList {
	if in == nil {
		return nil
	}
	out := new(ReportList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ReportList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReportSpec) DeepCopyInto(out *ReportSpec) {
	*out = *in
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
	out.EntityRef = in.EntityRef
	in.Location.DeepCopyInto(&out.Location)
	if in.ReportType != nil {
		in, out := &in.ReportType, &out.ReportType
		*out = new(ReportType)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(ReportFormat)
		**out = **in
	}
	if in.NotifierName != nil {
		in, out := &in.NotifierName, &out.NotifierName
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	in.Resources.DeepCopyInto(&out.Resources)
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(int64)
		**out = **in
	}
	in.Custom.DeepCopyInto(&out.Custom)
	if in.CronReportName != nil {
		in, out := &in.CronReportName, &out.CronReportName
		*out = new(string)
		**out = **in
	}
	out.LabRef = in.LabRef
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ModelClassName != nil {
		in, out := &in.ModelClassName, &out.ModelClassName
		*out = new(string)
		**out = **in
	}
	if in.ModelClassRunName != nil {
		in, out := &in.ModelClassRunName, &out.ModelClassRunName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReportSpec.
func (in *ReportSpec) DeepCopy() *ReportSpec {
	if in == nil {
		return nil
	}
	out := new(ReportSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReportStatus) DeepCopyInto(out *ReportStatus) {
	*out = *in
	if in.CompletedAt != nil {
		in, out := &in.CompletedAt, &out.CompletedAt
		*out = (*in).DeepCopy()
	}
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(catalogv1alpha1.StatusError)
		**out = **in
	}
	if in.FailureMessage != nil {
		in, out := &in.FailureMessage, &out.FailureMessage
		*out = new(string)
		**out = **in
	}
	in.Logs.DeepCopyInto(&out.Logs)
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = (*in).DeepCopy()
	}
	in.GroupBy.DeepCopyInto(&out.GroupBy)
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ReportCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReportStatus.
func (in *ReportStatus) DeepCopy() *ReportStatus {
	if in == nil {
		return nil
	}
	out := new(ReportStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceConsumption) DeepCopyInto(out *ResourceConsumption) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceConsumption.
func (in *ResourceConsumption) DeepCopy() *ResourceConsumption {
	if in == nil {
		return nil
	}
	out := new(ResourceConsumption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuntimeStatus) DeepCopyInto(out *RuntimeStatus) {
	*out = *in
	if in.PythonPackages != nil {
		in, out := &in.PythonPackages, &out.PythonPackages
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuntimeStatus.
func (in *RuntimeStatus) DeepCopy() *RuntimeStatus {
	if in == nil {
		return nil
	}
	out := new(RuntimeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SearchSpec) DeepCopyInto(out *SearchSpec) {
	*out = *in
	if in.Sampler != nil {
		in, out := &in.Sampler, &out.Sampler
		*out = new(SamplerName)
		**out = **in
	}
	in.Pruner.DeepCopyInto(&out.Pruner)
	if in.MaxCost != nil {
		in, out := &in.MaxCost, &out.MaxCost
		*out = new(int32)
		**out = **in
	}
	if in.MaxTime != nil {
		in, out := &in.MaxTime, &out.MaxTime
		*out = new(int32)
		**out = **in
	}
	if in.MaxModels != nil {
		in, out := &in.MaxModels, &out.MaxModels
		*out = new(int32)
		**out = **in
	}
	if in.MinBestScore != nil {
		in, out := &in.MinBestScore, &out.MinBestScore
		*out = new(float64)
		**out = **in
	}
	if in.Trainers != nil {
		in, out := &in.Trainers, &out.Trainers
		*out = new(int32)
		**out = **in
	}
	if in.Test != nil {
		in, out := &in.Test, &out.Test
		*out = new(int32)
		**out = **in
	}
	if in.RetainTop != nil {
		in, out := &in.RetainTop, &out.RetainTop
		*out = new(int32)
		**out = **in
	}
	if in.RetainFor != nil {
		in, out := &in.RetainFor, &out.RetainFor
		*out = new(int32)
		**out = **in
	}
	in.SearchSpace.DeepCopyInto(&out.SearchSpace)
	in.EarlyStop.DeepCopyInto(&out.EarlyStop)
	if in.Objective != nil {
		in, out := &in.Objective, &out.Objective
		*out = new(catalogv1alpha1.Metric)
		**out = **in
	}
	if in.Objective2 != nil {
		in, out := &in.Objective2, &out.Objective2
		*out = new(catalogv1alpha1.Metric)
		**out = **in
	}
	if in.Tune != nil {
		in, out := &in.Tune, &out.Tune
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SearchSpec.
func (in *SearchSpec) DeepCopy() *SearchSpec {
	if in == nil {
		return nil
	}
	out := new(SearchSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SeasonalityPeriodSpec) DeepCopyInto(out *SeasonalityPeriodSpec) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Auto != nil {
		in, out := &in.Auto, &out.Auto
		*out = new(bool)
		**out = **in
	}
	if in.FourierOrder != nil {
		in, out := &in.FourierOrder, &out.FourierOrder
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SeasonalityPeriodSpec.
func (in *SeasonalityPeriodSpec) DeepCopy() *SeasonalityPeriodSpec {
	if in == nil {
		return nil
	}
	out := new(SeasonalityPeriodSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SeasonalitySpec) DeepCopyInto(out *SeasonalitySpec) {
	*out = *in
	if in.Auto != nil {
		in, out := &in.Auto, &out.Auto
		*out = new(bool)
		**out = **in
	}
	if in.Yearly != nil {
		in, out := &in.Yearly, &out.Yearly
		*out = new(SeasonalityPeriodSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Quarterly != nil {
		in, out := &in.Quarterly, &out.Quarterly
		*out = new(SeasonalityPeriodSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Monthly != nil {
		in, out := &in.Monthly, &out.Monthly
		*out = new(SeasonalityPeriodSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Weekly != nil {
		in, out := &in.Weekly, &out.Weekly
		*out = new(SeasonalityPeriodSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Daily != nil {
		in, out := &in.Daily, &out.Daily
		*out = new(SeasonalityPeriodSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SeasonalitySpec.
func (in *SeasonalitySpec) DeepCopy() *SeasonalitySpec {
	if in == nil {
		return nil
	}
	out := new(SeasonalitySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SegmentSpec) DeepCopyInto(out *SegmentSpec) {
	*out = *in
	if in.ColumnName != nil {
		in, out := &in.ColumnName, &out.ColumnName
		*out = new(string)
		**out = **in
	}
	if in.OP != nil {
		in, out := &in.OP, &out.OP
		*out = new(catalogv1alpha1.Op)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SegmentSpec.
func (in *SegmentSpec) DeepCopy() *SegmentSpec {
	if in == nil {
		return nil
	}
	out := new(SegmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServingSpec) DeepCopyInto(out *ServingSpec) {
	*out = *in
	in.Resources.DeepCopyInto(&out.Resources)
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(catalogv1alpha1.ModelServingFormat)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServingSpec.
func (in *ServingSpec) DeepCopy() *ServingSpec {
	if in == nil {
		return nil
	}
	out := new(ServingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Study) DeepCopyInto(out *Study) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Study.
func (in *Study) DeepCopy() *Study {
	if in == nil {
		return nil
	}
	out := new(Study)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Study) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StudyCondition) DeepCopyInto(out *StudyCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StudyCondition.
func (in *StudyCondition) DeepCopy() *StudyCondition {
	if in == nil {
		return nil
	}
	out := new(StudyCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StudyGroupByStatus) DeepCopyInto(out *StudyGroupByStatus) {
	*out = *in
	if in.WorkerResults != nil {
		in, out := &in.WorkerResults, &out.WorkerResults
		*out = make([]catalogv1alpha1.WorkerRunResult, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StudyGroupByStatus.
func (in *StudyGroupByStatus) DeepCopy() *StudyGroupByStatus {
	if in == nil {
		return nil
	}
	out := new(StudyGroupByStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StudyList) DeepCopyInto(out *StudyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Study, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StudyList.
func (in *StudyList) DeepCopy() *StudyList {
	if in == nil {
		return nil
	}
	out := new(StudyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StudyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StudyPhaseStatus) DeepCopyInto(out *StudyPhaseStatus) {
	*out = *in
	if in.StartedAt != nil {
		in, out := &in.StartedAt, &out.StartedAt
		*out = (*in).DeepCopy()
	}
	if in.CompletedAt != nil {
		in, out := &in.CompletedAt, &out.CompletedAt
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StudyPhaseStatus.
func (in *StudyPhaseStatus) DeepCopy() *StudyPhaseStatus {
	if in == nil {
		return nil
	}
	out := new(StudyPhaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StudyScheduleSpec) DeepCopyInto(out *StudyScheduleSpec) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.StartAt != nil {
		in, out := &in.StartAt, &out.StartAt
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StudyScheduleSpec.
func (in *StudyScheduleSpec) DeepCopy() *StudyScheduleSpec {
	if in == nil {
		return nil
	}
	out := new(StudyScheduleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StudySpec) DeepCopyInto(out *StudySpec) {
	*out = *in
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	out.LabRef = in.LabRef
	if in.DatasetName != nil {
		in, out := &in.DatasetName, &out.DatasetName
		*out = new(string)
		**out = **in
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = new(catalogv1alpha1.MLTask)
		**out = **in
	}
	if in.SubTask != nil {
		in, out := &in.SubTask, &out.SubTask
		*out = new(catalogv1alpha1.MLSubtask)
		**out = **in
	}
	in.FESearch.DeepCopyInto(&out.FESearch)
	in.ImbalanceHandler.DeepCopyInto(&out.ImbalanceHandler)
	in.Baseline.DeepCopyInto(&out.Baseline)
	in.Search.DeepCopyInto(&out.Search)
	in.Ensembles.DeepCopyInto(&out.Ensembles)
	in.TrainingTemplate.DeepCopyInto(&out.TrainingTemplate)
	in.ServingTemplate.DeepCopyInto(&out.ServingTemplate)
	in.FctTemplate.DeepCopyInto(&out.FctTemplate)
	in.Schedule.DeepCopyInto(&out.Schedule)
	in.Interpretability.DeepCopyInto(&out.Interpretability)
	in.DriftDetector.DeepCopyInto(&out.DriftDetector)
	if in.Aborted != nil {
		in, out := &in.Aborted, &out.Aborted
		*out = new(bool)
		**out = **in
	}
	if in.Reported != nil {
		in, out := &in.Reported, &out.Reported
		*out = new(bool)
		**out = **in
	}
	if in.Paused != nil {
		in, out := &in.Paused, &out.Paused
		*out = new(bool)
		**out = **in
	}
	if in.Profiled != nil {
		in, out := &in.Profiled, &out.Profiled
		*out = new(bool)
		**out = **in
	}
	if in.ModelPublished != nil {
		in, out := &in.ModelPublished, &out.ModelPublished
		*out = new(bool)
		**out = **in
	}
	if in.ModelImagePushed != nil {
		in, out := &in.ModelImagePushed, &out.ModelImagePushed
		*out = new(bool)
		**out = **in
	}
	if in.ModelExplained != nil {
		in, out := &in.ModelExplained, &out.ModelExplained
		*out = new(bool)
		**out = **in
	}
	if in.Fast != nil {
		in, out := &in.Fast, &out.Fast
		*out = new(bool)
		**out = **in
	}
	in.Location.DeepCopyInto(&out.Location)
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	in.Compilation.DeepCopyInto(&out.Compilation)
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(bool)
		**out = **in
	}
	if in.Flagged != nil {
		in, out := &in.Flagged, &out.Flagged
		*out = new(bool)
		**out = **in
	}
	in.Notification.DeepCopyInto(&out.Notification)
	in.ModelImage.DeepCopyInto(&out.ModelImage)
	in.GC.DeepCopyInto(&out.GC)
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(int32)
		**out = **in
	}
	if in.ModelVersion != nil {
		in, out := &in.ModelVersion, &out.ModelVersion
		*out = new(string)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(int32)
		**out = **in
	}
	if in.CodeGenerated != nil {
		in, out := &in.CodeGenerated, &out.CodeGenerated
		*out = new(bool)
		**out = **in
	}
	in.UnitTestsTemplate.DeepCopyInto(&out.UnitTestsTemplate)
	in.GroupLocations.DeepCopyInto(&out.GroupLocations)
	if in.ModelClassName != nil {
		in, out := &in.ModelClassName, &out.ModelClassName
		*out = new(string)
		**out = **in
	}
	if in.ModelClassRunName != nil {
		in, out := &in.ModelClassRunName, &out.ModelClassRunName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StudySpec.
func (in *StudySpec) DeepCopy() *StudySpec {
	if in == nil {
		return nil
	}
	out := new(StudySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StudyStatus) DeepCopyInto(out *StudyStatus) {
	*out = *in
	if in.CompletedAt != nil {
		in, out := &in.CompletedAt, &out.CompletedAt
		*out = (*in).DeepCopy()
	}
	in.TrainDatasetLocation.DeepCopyInto(&out.TrainDatasetLocation)
	in.TestDatasetLocation.DeepCopyInto(&out.TestDatasetLocation)
	in.ValidationDataset.DeepCopyInto(&out.ValidationDataset)
	if in.LastModelID != nil {
		in, out := &in.LastModelID, &out.LastModelID
		*out = new(int64)
		**out = **in
	}
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(catalogv1alpha1.StatusError)
		**out = **in
	}
	if in.FailureMessage != nil {
		in, out := &in.FailureMessage, &out.FailureMessage
		*out = new(string)
		**out = **in
	}
	out.TrainingDataHash = in.TrainingDataHash
	in.Logs.DeepCopyInto(&out.Logs)
	in.FeatureEngineeringStatus.DeepCopyInto(&out.FeatureEngineeringStatus)
	in.BaselineStatus.DeepCopyInto(&out.BaselineStatus)
	in.SearchStatus.DeepCopyInto(&out.SearchStatus)
	in.EnsembleStatus.DeepCopyInto(&out.EnsembleStatus)
	in.TestStatus.DeepCopyInto(&out.TestStatus)
	in.ExplainStatus.DeepCopyInto(&out.ExplainStatus)
	out.DriftDetection = in.DriftDetection
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
	if in.BestFE != nil {
		in, out := &in.BestFE, &out.BestFE
		*out = new(FeatureEngineeringSpec)
		(*in).DeepCopyInto(*out)
	}
	in.GC.DeepCopyInto(&out.GC)
	in.Groupby.DeepCopyInto(&out.Groupby)
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]StudyCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StudyStatus.
func (in *StudyStatus) DeepCopy() *StudyStatus {
	if in == nil {
		return nil
	}
	out := new(StudyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SuccessiveHalvingOptions) DeepCopyInto(out *SuccessiveHalvingOptions) {
	*out = *in
	if in.MinResources != nil {
		in, out := &in.MinResources, &out.MinResources
		*out = new(int32)
		**out = **in
	}
	if in.ReductionFactor != nil {
		in, out := &in.ReductionFactor, &out.ReductionFactor
		*out = new(int32)
		**out = **in
	}
	if in.MinEarlyStoppingRate != nil {
		in, out := &in.MinEarlyStoppingRate, &out.MinEarlyStoppingRate
		*out = new(int32)
		**out = **in
	}
	if in.BootstrapCount != nil {
		in, out := &in.BootstrapCount, &out.BootstrapCount
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SuccessiveHalvingOptions.
func (in *SuccessiveHalvingOptions) DeepCopy() *SuccessiveHalvingOptions {
	if in == nil {
		return nil
	}
	out := new(SuccessiveHalvingOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SuccessiveHalvingSpec) DeepCopyInto(out *SuccessiveHalvingSpec) {
	*out = *in
	if in.Budget != nil {
		in, out := &in.Budget, &out.Budget
		*out = new(int32)
		**out = **in
	}
	if in.Bracket != nil {
		in, out := &in.Bracket, &out.Bracket
		*out = new(int32)
		**out = **in
	}
	if in.Rung != nil {
		in, out := &in.Rung, &out.Rung
		*out = new(int32)
		**out = **in
	}
	if in.ConfID != nil {
		in, out := &in.ConfID, &out.ConfID
		*out = new(int32)
		**out = **in
	}
	if in.Modality != nil {
		in, out := &in.Modality, &out.Modality
		*out = new(catalogv1alpha1.ModalityType)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SuccessiveHalvingSpec.
func (in *SuccessiveHalvingSpec) DeepCopy() *SuccessiveHalvingSpec {
	if in == nil {
		return nil
	}
	out := new(SuccessiveHalvingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TextPipelineSpec) DeepCopyInto(out *TextPipelineSpec) {
	*out = *in
	if in.Encoder != nil {
		in, out := &in.Encoder, &out.Encoder
		*out = new(catalogv1alpha1.TextEncoding)
		**out = **in
	}
	if in.Tokenizer != nil {
		in, out := &in.Tokenizer, &out.Tokenizer
		*out = new(string)
		**out = **in
	}
	if in.StopWords != nil {
		in, out := &in.StopWords, &out.StopWords
		*out = new(bool)
		**out = **in
	}
	if in.Pos != nil {
		in, out := &in.Pos, &out.Pos
		*out = new(bool)
		**out = **in
	}
	if in.Lemma != nil {
		in, out := &in.Lemma, &out.Lemma
		*out = new(bool)
		**out = **in
	}
	if in.Stem != nil {
		in, out := &in.Stem, &out.Stem
		*out = new(bool)
		**out = **in
	}
	if in.Embedding != nil {
		in, out := &in.Embedding, &out.Embedding
		*out = new(string)
		**out = **in
	}
	if in.Svd != nil {
		in, out := &in.Svd, &out.Svd
		*out = new(bool)
		**out = **in
	}
	if in.MaxSvdComponents != nil {
		in, out := &in.MaxSvdComponents, &out.MaxSvdComponents
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TextPipelineSpec.
func (in *TextPipelineSpec) DeepCopy() *TextPipelineSpec {
	if in == nil {
		return nil
	}
	out := new(TextPipelineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThresholdPrunerOptions) DeepCopyInto(out *ThresholdPrunerOptions) {
	*out = *in
	if in.Lower != nil {
		in, out := &in.Lower, &out.Lower
		*out = new(float64)
		**out = **in
	}
	if in.Upper != nil {
		in, out := &in.Upper, &out.Upper
		*out = new(float64)
		**out = **in
	}
	if in.WarmupSteps != nil {
		in, out := &in.WarmupSteps, &out.WarmupSteps
		*out = new(int32)
		**out = **in
	}
	if in.IntervalSteps != nil {
		in, out := &in.IntervalSteps, &out.IntervalSteps
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThresholdPrunerOptions.
func (in *ThresholdPrunerOptions) DeepCopy() *ThresholdPrunerOptions {
	if in == nil {
		return nil
	}
	out := new(ThresholdPrunerOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeSeriesEvent) DeepCopyInto(out *TimeSeriesEvent) {
	*out = *in
	if in.Holiday != nil {
		in, out := &in.Holiday, &out.Holiday
		*out = new(bool)
		**out = **in
	}
	if in.PreEvent != nil {
		in, out := &in.PreEvent, &out.PreEvent
		*out = new(int32)
		**out = **in
	}
	if in.PostEvent != nil {
		in, out := &in.PostEvent, &out.PostEvent
		*out = new(int32)
		**out = **in
	}
	if in.TimePoints != nil {
		in, out := &in.TimePoints, &out.TimePoints
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeSeriesEvent.
func (in *TimeSeriesEvent) DeepCopy() *TimeSeriesEvent {
	if in == nil {
		return nil
	}
	out := new(TimeSeriesEvent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrainingSpec) DeepCopyInto(out *TrainingSpec) {
	*out = *in
	out.LabRef = in.LabRef
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(catalogv1alpha1.PriorityLevel)
		**out = **in
	}
	if in.CvType != nil {
		in, out := &in.CvType, &out.CvType
		*out = new(catalogv1alpha1.CvType)
		**out = **in
	}
	if in.CV != nil {
		in, out := &in.CV, &out.CV
		*out = new(bool)
		**out = **in
	}
	if in.Folds != nil {
		in, out := &in.Folds, &out.Folds
		*out = new(int32)
		**out = **in
	}
	in.Split.DeepCopyInto(&out.Split)
	if in.EvalMetrics != nil {
		in, out := &in.EvalMetrics, &out.EvalMetrics
		*out = make([]catalogv1alpha1.Metric, len(*in))
		copy(*out, *in)
	}
	if in.SH != nil {
		in, out := &in.SH, &out.SH
		*out = new(SuccessiveHalvingSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Seed != nil {
		in, out := &in.Seed, &out.Seed
		*out = new(float64)
		**out = **in
	}
	in.Resources.DeepCopyInto(&out.Resources)
	if in.Gpu != nil {
		in, out := &in.Gpu, &out.Gpu
		*out = new(bool)
		**out = **in
	}
	if in.Distributed != nil {
		in, out := &in.Distributed, &out.Distributed
		*out = new(bool)
		**out = **in
	}
	if in.FeatureImportance != nil {
		in, out := &in.FeatureImportance, &out.FeatureImportance
		*out = new(bool)
		**out = **in
	}
	if in.NodeCount != nil {
		in, out := &in.NodeCount, &out.NodeCount
		*out = new(int32)
		**out = **in
	}
	if in.SamplePct != nil {
		in, out := &in.SamplePct, &out.SamplePct
		*out = new(int32)
		**out = **in
	}
	in.Checkpoint.DeepCopyInto(&out.Checkpoint)
	if in.LogLevel != nil {
		in, out := &in.LogLevel, &out.LogLevel
		*out = new(catalogv1alpha1.LogLevel)
		**out = **in
	}
	if in.TimeoutInSecs != nil {
		in, out := &in.TimeoutInSecs, &out.TimeoutInSecs
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrainingSpec.
func (in *TrainingSpec) DeepCopy() *TrainingSpec {
	if in == nil {
		return nil
	}
	out := new(TrainingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnivariateForecastStatus) DeepCopyInto(out *UnivariateForecastStatus) {
	*out = *in
	in.BestEstimator.DeepCopyInto(&out.BestEstimator)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnivariateForecastStatus.
func (in *UnivariateForecastStatus) DeepCopy() *UnivariateForecastStatus {
	if in == nil {
		return nil
	}
	out := new(UnivariateForecastStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VideoPipelineSpec) DeepCopyInto(out *VideoPipelineSpec) {
	*out = *in
	if in.Featurizer != nil {
		in, out := &in.Featurizer, &out.Featurizer
		*out = new(catalogv1alpha1.VideoFeaturizer)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VideoPipelineSpec.
func (in *VideoPipelineSpec) DeepCopy() *VideoPipelineSpec {
	if in == nil {
		return nil
	}
	out := new(VideoPipelineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowSpec) DeepCopyInto(out *WindowSpec) {
	*out = *in
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(catalogv1alpha1.Freq)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(int32)
		**out = **in
	}
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowSpec.
func (in *WindowSpec) DeepCopy() *WindowSpec {
	if in == nil {
		return nil
	}
	out := new(WindowSpec)
	in.DeepCopyInto(out)
	return out
}
