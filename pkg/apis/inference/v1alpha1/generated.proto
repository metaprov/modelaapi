/**
*
* Copyright (C) 2017 modela authors
* For license information, see LICENSE.txt
*/
// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package github.com.metaprov.modelaapi.pkg.apis.inference.v1alpha1;

import "github.com/metaprov/modelaapi/pkg/apis/catalog/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/pkg/apis/training/v1alpha1/generated.proto";
import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "github.com/metaprov/modelaapi/pkg/apis/inference/v1alpha1";

// AccessSpec specifies the configuration to expose a Predictor service externally
message AccessSpec {
  // The port number that will be exposed on the Predictor's Pods to serve prediction traffic through the GRPCInferenceService API.
  // The Kubernetes Service created by the Predictor will expose the port and forward GRPC traffic to the backend pods
  // +kubebuilder:validation:Optional
  // +kubebuilder:validation:Minimum=1024
  // +kubebuilder:validation:Maximum=65535
  // +kubebuilder:validation:Optional
  // +kubebuilder:default:=8080
  optional int32 port = 1;

  // The port number that will be exposed on the external address of every node on the cluster, in the case of the
  // Predictor's access type being NodePort. Traffic from the port will be forwarded to the Predictor's backend service
  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:validation:Maximum=65535
  // +kubebuilder:validation:Optional
  optional int32 nodePort = 2;

  // The auto-generated DNS path where the Predictor service can be accessed. If the access type is ClusterIP, it will
  // be a cluster-internal DNS name (i.e. predictor.default-serving-site.svc.cluster.local). In the case of the Ingress
  // access type, it will be determined by the FQDN of the host ServingSite (i.e. predictor.default-serving-site.your-domain.ai).
  // +kubebuilder:validation:MaxLength=256
  // +kubebuilder:validation:Optional
  // +kubebuilder:default:=""
  optional string path = 3;

  // The Kubernetes-native access method which specifies how the Kubernetes Service created by the Predictor will be exposed.
  // See https://modela.ai/docs/docs/serving/production/#access-method for a detailed description of each access type
  // (defaults to cluster-ip)
  // +kubebuilder:default:="cluster-ip"
  // +kubebuilder:validation:Optional
  optional string accessType = 4;

  // Indicates if the prediction service should expose an additional port to serve the GRPCInferenceService API through REST.
  // The port one digit above the number specified by the Port field will be exposed to accept HTTP/1.1 traffic
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool rest = 5;

  // Indicates
  // +kubebuilder:default:=none
  // +kubebuilder:validation:Optional
  optional string authMethod = 6;

  // ApiKeySecretRef references a Kubernetes Secret containing an API key that must be passed in prediction requests to the Predictor
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.SecretReference apikeySecretRef = 7;
}

// AutoScaling defines the configuration for the automatic scaling of a service
message AutoScalingSpec {
  // Indicates if automatic scaling is enabled
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool enabled = 1;

  // The minimum number of replicas running the service
  // +kubebuilder:validation:Optional
  // +kubebuilder:validation:Minimum=1
  // +kubebuilder:default:=1
  optional int32 minReplicas = 2;

  // The maximum number of replicas running the service
  // +kubebuilder:validation:Optional
  // +kubebuilder:validation:Minimum=1
  // +kubebuilder:validation:Maximum=10
  // +kubebuilder:default:=1
  optional int32 maxReplicas = 3;

  // The target average CPU utilization across all replicas. The HorizontalPodAutoscaler associated with the
  // service will change the number of replicas to maintain this metric
  // +kubebuilder:validation:Optional
  // +kubebuilder:validation:Minimum=1
  // +kubebuilder:validation:Maximum=100
  // +kubebuilder:default:=80
  optional int32 cpuAvgUtilization = 4;

  // The target average memory utilization across all replicas. The HorizontalPodAutoscaler associated with the
  // service will change the number of replicas to maintain this metric
  // +kubebuilder:validation:Optional
  // +kubebuilder:validation:Minimum=1
  // +kubebuilder:validation:Maximum=100
  // +kubebuilder:default:=80
  optional int32 memAvgUtilization = 5;
}

message BackwardCurtainSpec {
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool enabled = 1;

  // The forward curtain receives prediction requests before the prediction (currently unimplemented)
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference curtainRef = 2;

  // For backward curtain is the confidence low
  // +kubebuilder:validation:Optional
  optional double confidenceLow = 4;

  // For backward curtain is the confidence high
  // +kubebuilder:validation:Optional
  optional double confidenceHigh = 5;
}

// CronPrediction represents a Prediction which runs on a predefined schedule
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status"
// +kubebuilder:printcolumn:name="Owner",type="string",JSONPath=".spec.owner",priority=1
// +kubebuilder:printcolumn:name="Predictor",type="string",JSONPath=".spec.template.spec.predictorName"
// +kubebuilder:printcolumn:name="Schedule",type="string",JSONPath=".spec.schedule"
// +kubebuilder:printcolumn:name="Last Run",type="date",JSONPath=".status.lastRun",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:path=cronpredictions,shortName=cpred,singular=cronprediction,categories={inference,modela}
message CronPrediction {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional CronPredictionSpec spec = 2;

  optional CronPredictionStatus status = 3;
}

// CronPredictionCondition describes the state of a CronPrediction at a certain point
message CronPredictionCondition {
  // Type of condition
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown
  optional string status = 2;

  // Last time the condition transitioned from one status to another
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // The reason for the condition's last transition
  optional string reason = 4;

  // A human-readable message indicating details about the transition
  optional string message = 5;
}

// CronPredictionList is a list of CronPredictions
// +kubebuilder:object:root=true
message CronPredictionList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated CronPrediction items = 2;
}

// CronPredictionSpec represent the desired state of a CronPrediction
message CronPredictionSpec {
  // The name of the DataProductVersion which describes the version of the resource
  // that exists in the same DataProduct namespace as the resource
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string versionName = 1;

  // The name of the Account which created the object, which exists in the same tenant as the object
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 2;

  // The schedule at which new Prediction resources will be created
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.RunSchedule schedule = 3;

  // Template specifies the template to create new Prediction resources
  optional PredictionTemplate template = 4;

  // The priority of the CronPrediction to be executed (medium, by default)
  // +kubebuilder:default:=medium
  // +kubebuilder:validation:Optional
  optional string priority = 5;

  // Indicates if the CronPrediction is paused and will not create new Predictions
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool paused = 6;

  // The notification specification that determines which notifiers will receive Alerts generated by the object
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.NotificationSpec notification = 7;
}

// CronPredictionStatus is the observed state of a CronPrediction
message CronPredictionStatus {
  // The time at which a run of the CronPrediction was last started
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.LastRunStatus lastRun = 1;

  // The time at which the CronPrediction is next scheduled to be executed
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time nextRun = 2;

  // The last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdated = 3;

  // ObservedGeneration is the last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 4;

  // In the case of failure, the CronPrediction resource controller will set this field with a failure reason
  // +kubebuilder:validation:Optional
  optional string failureReason = 5;

  // In the case of failure, the CronPrediction resource controller will set this field with a failure message
  // +kubebuilder:validation:Optional
  optional string failureMessage = 6;

  // +patchMergeKey=type
  // +patchStrategy=merge
  // +kubebuilder:validation:Optional
  repeated CronPredictionCondition conditions = 7;
}

// Curtain represent an object which can be placed before or after predictor
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Serving Site",type="string",JSONPath=".spec.servingsiteRef.name"
// +kubebuilder:printcolumn:name="Dataset",type="string",JSONPath=".spec.datasetRef.name"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:resource:path=curtains,singular=curtain,categories={inference,modela,all}
message Curtain {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional CurtainSpec spec = 2;

  // +optional
  optional CurtainStatus status = 3;
}

// CurtainCondition describes the state of a wizard of oz at a certain point.
message CurtainCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // The reason for the condition's last transition.
  optional string reason = 4;

  // A human readable message indicating details about the transition.
  optional string message = 5;
}

// +kubebuilder:object:root=true
// CurtainList represent a list of Curtain resources
message CurtainList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Curtain items = 2;
}

// CurtainSpec define the desired state of a Curtain
message CurtainSpec {
  // User provided description
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string description = 1;

  // User provided description
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string versionName = 2;

  // The product of the resource
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string servingsiteName = 3;

  // The dataset that store the human answers
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string datasetName = 4;

  // The accounts of the human which can answer the prediction.
  repeated string wizards = 5;

  // Question to ask the human.
  // +kubebuilder:default:=""
  // +kubebuilder:validation:MaxLength=256
  optional string question = 6;

  // NotifierName is used to converse with the human.
  // +kubebuilder:default:=""
  // +kubebuilder:validation:MaxLength=256
  optional string notifierName = 7;

  // The owner account name
  // +kubebuilder:default:='no-one'
  // +kubebuilder:validation:Optional
  optional string owner = 8;
}

// CurtainStatus contain the observed state of the Curtain object.
message CurtainStatus {
  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 1;

  // Last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdated = 2;

  // +patchMergeKey=type
  // +patchStrategy=merge
  // +kubebuilder:validation:Optional
  repeated CurtainCondition conditions = 3;
}

message CurtainTemplateSpec {
  // Standard object's metadata.
  // More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional CurtainSpec spec = 2;
}

// CustomAppSpec defines the custom pages for a DataApp
message CustomAppSpec {
  // Indicates if custom pages are enabled
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool owner = 1;

  // The app title
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string title = 2;

  // The app pages
  // +kubebuilder:validation:Optional
  repeated github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.PageSpec pages = 3;
}

// DataApp represents a live dashboard for a single model
// +kubebuilder:object:root=true
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Owner",type="string",JSONPath=".spec.owner"
// +kubebuilder:printcolumn:name="Version",type="string",JSONPath=".spec.versionName"
// +kubebuilder:printcolumn:name="Path",type="string",JSONPath=".spec.path"
// +kubebuilder:printcolumn:name="Model",type="string",JSONPath=".spec.modelName"
// +kubebuilder:printcolumn:name="Replicas",type="string",JSONPath=".spec.replicas"
// +kubebuilder:printcolumn:name="Port",type="string",JSONPath=".spec.port"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=dataapps,singular=dataapp,categories={data,modela}
// +kubebuilder:subresource:status
message DataApp {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DataAppSpec spec = 2;

  // +optional
  optional DataAppStatus status = 3;
}

// DataAppCondition describes the state of a DataApp at a certain point
message DataAppCondition {
  // Type of DataApp condition
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown
  optional string status = 2;

  // Last time the condition transitioned from one status to another
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 7;

  // The reason for the condition's last transition
  optional string reason = 4;

  // A human readable message indicating details about the transition
  optional string message = 5;
}

// DataAppList contains a list of DataApps
// +kubebuilder:object:root=true
message DataAppList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated DataApp items = 2;
}

// DataAppSpec defines the desired state of a DataApp
message DataAppSpec {
  // The name of the Account which created the object, which exists in the same tenant as the object
  // +kubebuilder:validation:Optional
  // +kubebuilder:default:="no-one"
  optional string owner = 1;

  // The name of the DataProductVersion which describes the version of the resource
  // that exists in the same DataProduct namespace as the resource
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string versionName = 2;

  // The user-provided description of the DataApp
  // +kubebuilder:validation:Optional
  // +kubebuilder:default:=""
  optional string description = 3;

  // The name of the predictive app model. The model will be used
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string modelName = 4;

  // Define how to access the app.
  optional AccessSpec access = 6;

  // The number of replicas for the Kubernetes Deployment associated with the DataApp, which will instantiate multiple
  // copies of the service in the case that automatic scaling is disabled
  // +kubebuilder:default:=1
  // +kubebuilder:validation:Optional
  optional int32 replicas = 7;

  // Resources specifies the resource requirements allocated to the DataApp's web server
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ResourceSpec resources = 10;

  // The reference to the DataProduct that the resource exists under
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference productRef = 12;

  // The reference to the ServingSite resource that hosts the Predictor
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference servingsiteRef = 13;

  // The specification to create a custom data application (currently unimplemented)
  // +kubebuilder:validation:Optional
  optional CustomAppSpec custom = 14;
}

// DataAppStatus defines the observed state of DataApp
message DataAppStatus {
  // ObservedGeneration is the last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 1;

  // The last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdated = 2;

  // The reference to the Kubernetes Deployment associated with the DataApp
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference deploymentStatus = 3;

  // The status of the Kubernetes Service associated with the DataApp
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ServiceStatus servicetStatus = 4;

  // In the case of failure, the DataApp resource controller will set this field with a failure reason
  // +kubebuilder:validation:Optional
  optional string failureReason = 5;

  // In the case of failure, the DataApp resource controller will set this field with a failure message
  // +kubebuilder:validation:Optional
  optional string failureMessage = 6;

  // +patchMergeKey=type
  // +patchStrategy=merge
  // +kubebuilder:validation:Optional
  repeated DataAppCondition conditions = 7;
}

// Fast slow model mode, use two models as the champion.
// All request are send first to the fast model.
message FastSlowModelSpec {
  // Indicates if model monitoring is enabled for the model
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool enabled = 1;

  // Reference to the fast model
  optional k8s.io.api.core.v1.ObjectReference fastModelRef = 2;

  // Reference to the slow model
  optional k8s.io.api.core.v1.ObjectReference slowModelRef = 3;

  // The low range of confidence.
  // +kubebuilder:default:=40
  // +kubebuilder:validation:Optional
  optional int32 probaLowPct = 4;

  // The high range of confidence , Must be higher than probalow
  // +kubebuilder:default:=60
  // +kubebuilder:validation:Optional
  optional int32 probaHighPct = 5;
}

// ForecastSpec specifies the details of a forecasting model
message ForecastSpec {
  // The hierarchy specification, which maps columns to values
  // +kubebuilder:validation:Optional
  map<string, string> hierarchyValues = 1;

  // The interval of the forecast
  optional github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.PeriodSpec horizon = 2;
}

message ForwardCurtainSpec {
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool enabled = 1;

  // The forward curtain receives prediction requests before the prediction (currently unimplemented)
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference curtainRef = 2;

  // Percent of request that are sent to the foreward curtain.
  // +kubebuilder:default:=0
  // +kubebuilder:validation:Optional
  optional int32 percent = 3;
}

// KubernetesObjectStatus describes the location and status of a Kubernetes-native resource
message KubernetesObjectStatus {
  // The object reference
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference ref = 1;

  // The status of the object
  // +kubebuilder:validation:Optional
  optional string status = 2;
}

message ModelDeploymentStatus {
  // The name of the Model resource associated with the deployment
  // +kubebuilder:validation:Optional
  optional string modelName = 1;

  // The version of the Model resource
  // +kubebuilder:validation:Optional
  optional string modelVersion = 2;

  // The image name that the deployment is currently running
  // +kubebuilder:validation:Optional
  optional string imageName = 3;

  // The name of the Kubernetes Deployment that manages the pods of the Model
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference deploymentRef = 4;

  // The name of the Kubernetes Service which exposes the Model externally
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference serviceRef = 5;

  // the name of the horizonal pod autoscaler, if autoscaling is true
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference hpaRef = 6;

  // 50% latency (median) for predictions served by the model
  // +kubebuilder:validation:Optional
  optional double p50 = 7;

  // 95% latency for predictions served by the model
  // +kubebuilder:validation:Optional
  optional double p95 = 8;

  // 99% latency for predictions served by the model
  // +kubebuilder:validation:Optional
  optional double p99 = 9;

  // The last time a prediction was served by the Predictorlet
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastPredictionTime = 10;

  // +kubebuilder:validation:Optional
  optional int32 dailyPredictionAvg = 11;

  // LastFailure is the last failure that occured with the model
  // +kubebuilder:validation:Optional
  optional string lastFailure = 12;

  // Phase is the current phase of the model deployment
  // +kubebuilder:validation:Optional
  optional string phase = 13;

  // DeployedAt is the last time that the model was deployed
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time deployedAt = 14;

  // ReleasedAt is the time that the model was released
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time releasedAt = 15;

  // Indicates if a data drift has been detected based on incoming prediction data
  // +kubebuilder:validation:Optional
  optional bool dataDrift = 16;

  // Indicates if a concept drift has been detected based on incoming prediction data
  // +kubebuilder:validation:Optional
  optional bool conceptDrift = 17;

  // The predictions from the last 7 days
  // +kubebuilder:validation:Optional
  repeated int32 lastDailyPredictions = 18;

  // +kubebuilder:validation:Optional
  repeated KubernetesObjectStatus objectStatuses = 19;

  // the set of validation errors
  repeated ValidationError errors = 20;
}

// ModelRecord hold the state of a model that was in production
message ModelRecord {
  // Model Name is the name of the model
  // +kubebuilder:validation:Optional
  optional string modelName = 1;

  // Model version is the version of the model
  // +kubebuilder:validation:Optional
  optional string modelVersion = 2;

  // Live at is the time that the model were placed in production
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time liveAt = 3;

  // Retried at is the time that the model was retired from production.
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time retiredAt = 4;

  // Retried at is the time that the model was retired from production.
  // +kubebuilder:validation:Optional
  optional int32 avgDailyPrediction = 5;

  // Retried at is the time that the model was retired from production.
  // +kubebuilder:validation:Optional
  optional double avgLatency = 6;
}

// ModelServingSpec specifies the configuration for models to be served by a Predictor
message ModelServingSpec {
  // The type of predictor (online, batch, or streaming). Online is the only supported type as of the current release
  // +kubebuilder:default:="online"
  // +kubebuilder:validation:Optional
  optional string type = 1;

  // If Serverless is true, the Kubernetes Deployment which serves the model will not be created
  // until it starts to receive prediction traffic, and will be destroyed once the model becomes dormant
  optional bool serverless = 2;
}

// OnlineFeaturestoreSpec specifies the connection information for an online feature store
message OnlineFeatureStoreSpec {
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool enabled = 1;

  // The host name of the feature store micro service.
  // +kubebuilder:default:=""
  optional string hostname = 2;
}

message OnlineStoreStatus {
  // LastAccessed specifies the last time the online store was accessed
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastAccessed = 1;
}

// Prediction represents a single batch prediction on a dataset
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status"
// +kubebuilder:printcolumn:name="Owner",type="string",JSONPath=".spec.owner",priority=1
// +kubebuilder:printcolumn:name="Predictor",type="string",JSONPath=".spec.predictorName"
// +kubebuilder:printcolumn:name="Dataset",type="string",JSONPath=".spec.datasetName"
// +kubebuilder:printcolumn:name="Labeled",type="string",JSONPath=".spec.labeled"
// +kubebuilder:printcolumn:name="Bucket",type="string",JSONPath=".spec.output.bucketName",priority=1
// +kubebuilder:printcolumn:name="Key",type="string",JSONPath=".spec.output.path",priority=1
// +kubebuilder:printcolumn:name="Score",type="string",JSONPath=".status.score"
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Rows",type="string",JSONPath=".status.rows"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:resource:path=predictions,shortName=pred,singular=prediction,categories={inference,modela}
message Prediction {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PredictionSpec spec = 2;

  optional PredictionStatus status = 3;
}

// PredictionCacheSpec specifies the connection information of a key-value cache to store predictions
message PredictionCacheSpec {
  // Enabled indicates if predictions will be cached
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool enabled = 1;

  // InMemory indicates if predictions will be cached in the available memory of the Pod serving the model
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool inMemory = 2;

  // Redis indicates if predictions will be cached in an external Redis deployment
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool redis = 3;

  // The reference to a Connection resource to an external Redis deployment
  optional k8s.io.api.core.v1.ObjectReference connectionRef = 4;
}

message PredictionCacheStatus {
  // LastAccessed specifies the last time the prediction cache was accessed
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastAccessed = 1;
}

// PredictionCondition describes the state of a Prediction at a certain point
message PredictionCondition {
  // Type of Prediction condition
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown
  optional string status = 2;

  // Last time the condition transitioned from one status to another
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // The reason for the condition's last transition
  optional string reason = 4;

  // A human-readable message indicating details about the transition
  optional string message = 5;
}

// +kubebuilder:object:root=true
// PredictionList is a list of Predictions
message PredictionList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Prediction items = 2;
}

// PredictionLoggingSpec specifies the configuration to log incoming and outgoing prediction requests
message PredictionLoggingSpec {
  // Indicates if prediction logging is enabled
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool enabled = 1;

  // The number percentage (0 through 100) of prediction requests to log
  // +kubebuilder:default:=0
  // +kubebuilder:validation:Optional
  optional int32 samplePercent = 2;

  // Indicates if incoming requests will be logged
  // +kubebuilder:default:=true
  // +kubebuilder:validation:Optional
  optional bool logRequests = 3;

  // Indicates if outgoing predictions will be logged
  // +kubebuilder:default:=true
  // +kubebuilder:validation:Optional
  optional bool logResponses = 4;

  // Number of rows in the prediction dataset
  // +kubebuilder:default:=0
  // +kubebuilder:validation:Optional
  optional int32 rows = 5;

  // Target location of the prediction log
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataLocation location = 6;
}

// PredictionSpec represent the desired state of Prediction
message PredictionSpec {
  // The name of the DataProductVersion which describes the version of the resource
  // that exists in the same DataProduct namespace as the resource
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string versionName = 1;

  // PredictorName is the name of the Predictor resource that will be used to evaluate predictions for the
  // unlabeled input dataset. The Predictor must exist in the same DataProduct namespace as the resource
  // +kubebuilder:validation:MaxLength=63
  // +kubebuilder:validation:Required
  // +required
  optional string predictorName = 2;

  // If true, measurements for the metrics specified by the `Tests` field will be computed for each prediction and
  // stored in the Prediction's status with the average result of all predictions
  // +kubebuilder:default:=false
  // Used usually for unit testing
  optional bool labeled = 3;

  // Indicates if the prediction is a forecast
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool forecast = 4;

  // Input specifies the location of the input data, if not using a Dataset resource
  optional github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataInputSpec input = 6;

  // Output specifies the location where the predicted dataset will be stored
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataOutputSpec output = 7;

  // Tests specifies a collection of metrics that will be computed for each prediction
  // if the Labeled field of the Prediction is enabled
  optional github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelTest test = 8;

  // The name of the Account which created the object, which exists in the same tenant as the object
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 9;

  // Resources specifies the resource requirements that will be allocated to the batch prediction Job
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ResourceSpec resources = 10;

  // The deadline for the batch prediction Job to be completed in seconds
  // +kubebuilder:default:=600
  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:validation:Optional
  optional int64 activeDeadlineSeconds = 11;

  // The priority of the Kubernetes Job created by the Prediction (medium, by default)
  // +kubebuilder:default:=medium
  // +kubebuilder:validation:Optional
  optional string priority = 12;

  // Indicates if the Prediction was aborted and should stop execution
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool aborted = 13;

  // The time-to-live of the Prediction, after which the Prediction will be archived
  // +kubebuilder:default:=0
  // +kubebuilder:validation:Optional
  optional int32 ttl = 14;

  // The forecasting specification in the case that the predicted model is a hierarchical forecast
  // +kubebuilder:validation:Optional
  optional ForecastSpec forecastInfo = 15;

  // CronPredictionName specifies the name of the CronPrediction that created the Prediction, if applicable
  // +kubebuilder:validation:MaxLength=63
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string cronPredictorName = 16;

  // The reference to the ServingSite resource that hosts the Prediction
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference servingsiteRef = 17;
}

// PredictionStatus is the observed state of a Prediction
message PredictionStatus {
  // StartTime denotes the time when the batch prediction Job started
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time startTime = 1;

  // EndTime denotes the time when the batch prediction Job completed or failed
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time endTime = 2;

  // The current phase of the prediction
  // +kubebuilder:default:="Pending"
  // +kubebuilder:validation:Optional
  optional string phase = 3;

  // The collection of metrics that represent the average measurement across all predictions for each
  // metric specified by the Tests field of the Predictor
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.TestSuiteResult testResult = 4;

  // ObservedGeneration is the last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 5;

  // The number of rows predicted
  // +kubebuilder:validation:Optional
  optional int32 rows = 6;

  // The trigger that started the batch prediction
  // +kubebuilder:validation:Optional
  optional string triggeredBy = 7;

  // The location of logs produced by the batch prediction Job
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.Logs logs = 8;

  // The last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdated = 9;

  // In the case of failure, the Prediction resource controller will set this field with a failure reason
  // +kubebuilder:validation:Optional
  optional string failureReason = 10;

  // In the case of failure, the Prediction resource controller will set this field with a failure message
  // +kubebuilder:validation:Optional
  optional string failureMessage = 11;

  // +patchMergeKey=type
  // +patchStrategy=merge
  // +kubebuilder:validation:Optional
  repeated PredictionCondition conditions = 12;
}

// PredictionTemplate defines the specification for a Prediction resource to be created
message PredictionTemplate {
  optional PredictionSpec spec = 1;
}

// Predictor specifies the deployment of a service to serve predictions for a Model
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Owner",type="string",JSONPath=".spec.owner",priority=1
// +kubebuilder:printcolumn:name="Serving Site",type="string",JSONPath=".spec.servingsiteRef.name",description=""
// +kubebuilder:printcolumn:name="Port",type="integer",JSONPath=".spec.port",description=""
// +kubebuilder:printcolumn:name="Access",type="string",JSONPath=".spec.accessType",description=""
// +kubebuilder:printcolumn:name="Replicas",type="integer",JSONPath=".spec.replicas",description=""
// +kubebuilder:printcolumn:name="Type",type="string",JSONPath=".spec.type",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=predictors,singular=predictor,shortName=pdr,categories={inference,modela}
message Predictor {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PredictorSpec spec = 2;

  optional PredictorStatus status = 3;
}

// PredictorCondition describes the state of a Predictor at a certain point
message PredictorCondition {
  // Type of Predictor condition
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown
  optional string status = 2;

  // Last time the condition transitioned from one status to another
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // The reason for the condition's last transition
  optional string reason = 4;

  // A human-readable message indicating details about the transition
  optional string message = 5;
}

// +kubebuilder:object:root=true
// PredictorList contains a list of Predictors
message PredictorList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Predictor items = 2;
}

// MonitorSpec defines the specification to monitor a model in production
message PredictorMonitorSpec {
  // Indicates if model monitoring is enabled for the model
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool enabled = 1;

  // Define the tests to run against the predictor.
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.TestSuite tests = 2;

  // The schedule on which model monitoring computations will be performed
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.RunSchedule schedule = 3;

  // NotifierRef references a Notifier resource that will be triggered in the case that a concept or data drift is detected
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference notifierRef = 4;

  // Reference to a model that will be used for outlier detection. If empty, an outlier detection model.
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference outlierDetectionModelRef = 5;
}

// PredictorSpec defines the desired state of a Predictor
message PredictorSpec {
  // The name of the DataProductVersion which describes the version of the resource
  // that exists in the same DataProduct namespace as the resource
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string versionName = 1;

  // The user-provided description of the Predictor
  // +kubebuilder:validation:MaxLength=256
  // +kubebuilder:default:=""
  optional string description = 2;

  // The reference to the DataProduct that the resource exists under
  optional k8s.io.api.core.v1.ObjectReference productRef = 3;

  // The reference to the ServingSite resource that hosts the Predictor
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference servingsiteRef = 4;

  // The collection of model deployment specifications that define which Model resources will be deployed to the
  // Predictor service and how they will be deployed. Each model should be trained with the same type of
  // dataset and possess a unique version
  // +kubebuilder:validation:Optional
  repeated github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ModelDeploymentSpec models = 6;

  // The specification to progressively deploy models. ModelDeploymentSpec specifications within Models that have the
  // `Canary` field enabled will be progressively deployed according to the specification when they are applied to the Predictor
  // +kubebuilder:validation:Optional
  optional ProgressiveSpec progressive = 7;

  // The data location where artifacts generated by the Predictor will be stored
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataLocation artifactsFolder = 8;

  // Access specifies the configuration for the Predictor service to be exposed externally
  // +kubebuilder:validation:Optional
  optional AccessSpec access = 9;

  // The number of replicas for the Kubernetes Deployment associated with the Predictor, which will instantiate multiple
  // copies of the service in the case that automatic scaling is disabled
  // +kubebuilder:validation:Optional
  optional int32 replicas = 10;

  // AutoScaling specifies the auto-scaling policy
  // +kubebuilder:validation:Optional
  optional AutoScalingSpec autoScaling = 11;

  // The name of the Account which created the object, which exists in the same tenant as the object
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 12;

  // Resources specifies the resource requirements allocated to the prediction service
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ResourceSpec resources = 13;

  // Cache specifies the configuration of the prediction cache
  // +kubebuilder:validation:Optional
  optional PredictionCacheSpec cache = 14;

  // Store specifies the configuration of the online data store
  // +kubebuilder:validation:Optional
  optional OnlineFeatureStoreSpec store = 15;

  // Serving specifies the configuration for individual models to handle prediction traffic
  optional ModelServingSpec serving = 16;

  // The task type of the Predictor, which should match the task type of the models being served
  // +kubebuilder:default:="unknown"
  // +kubebuilder:validation:Optional
  optional string task = 19;

  // The prediction threshold
  // +kubebuilder:validation:Optional
  optional double predictionThreshold = 20;

  // Monitor spec specify the monitor for this predictor.
  // +kubebuilder:validation:Optional
  optional PredictorMonitorSpec monitor = 21;

  // Monitor spec specify the monitor for this predictor.
  // +kubebuilder:validation:Optional
  optional PredictionLoggingSpec predictionLogging = 22;

  // Forward curtain
  // +kubebuilder:validation:Optional
  optional ForwardCurtainSpec forwardCurtain = 23;

  // Backward curtain
  // +kubebuilder:validation:Optional
  optional BackwardCurtainSpec backwardCurtain = 24;

  // Backward curtain
  // +kubebuilder:validation:Optional
  optional FastSlowModelSpec fastSlow = 25;
}

// PredictorStatus contain the current state of the Predictor resource
message PredictorStatus {
  // ObservedGeneration is the last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 1;

  // The collection of historical records of models deployed to the Predictor, used internally to roll-back models
  // +kubebuilder:validation:Optional
  repeated ModelRecord history = 2;

  // The collection of statuses for each model deployed with the Predictor
  // +kubebuilder:validation:Optional
  repeated ModelDeploymentStatus models = 3;

  // The status of the Predictorlet associated with the Predictor. The Predictorlet is a service which handles prediction traffic
  // and routes predictions to individual models based on the specification of the Predictor
  // +kubebuilder:validation:Optional
  optional PredictorletStatus predictorlet = 4;

  // The status of the prediction cache managed by the Predictor
  // +kubebuilder:validation:Optional
  optional PredictionCacheStatus cache = 5;

  // The status of the online store managed by the Predictor
  // +kubebuilder:validation:Optional
  optional OnlineStoreStatus onlineStore = 6;

  // The last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdated = 7;

  // The end-point URL of the Predictor
  // +kubebuilder:validation:Optional
  optional string endPoint = 8;

  // In the case of failure, the Predictor resource controller will set this field with a failure reason
  // +kubebuilder:validation:Optional
  optional string failureReason = 9;

  // In the case of failure, the Predictor resource controller will set this field with a failure reason
  // +kubebuilder:validation:Optional
  optional string failureMessage = 10;

  // The status of the load balancer, if the Predictor's access type is LoadBalancer
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.LoadBalancerStatus loadBalancerStatus = 11;

  // The last time that a prediction dataset was created
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastPredictionDataset = 12;

  // The result of running the last monitor.
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.TestSuiteResult lastMonitorResults = 13;

  // +patchMergeKey=type
  // +patchStrategy=merge
  // +kubebuilder:validation:Optional
  repeated PredictorCondition conditions = 14;
}

// PredictorletStatus describes the current state of a prediction proxy service associated with a Predictor
message PredictorletStatus {
  // The image name that the Predictorlet is currently running
  // +kubebuilder:validation:Optional
  optional string imageName = 1;

  // The name of the Kubernetes Deployment that manages the pods of the Predictorlet
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference deploymentRef = 2;

  // The name of the Kubernetes Service which exposes the Predictorlet externally
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference serviceRef = 3;

  // 50% latency (median) for predictions served by the Predictorlet
  // +kubebuilder:validation:Optional
  optional double p50 = 4;

  // 95% latency for predictions served by the Predictorlet
  // +kubebuilder:validation:Optional
  optional double p95 = 5;

  // 99% latency for predictions served by the Predictorlet
  // +kubebuilder:validation:Optional
  optional double p99 = 6;

  // +kubebuilder:validation:Optional
  optional int32 dailyPredictionAvg = 7;

  // The total number of predictions served by the Predictorlet
  optional int32 totalPredictions = 8;

  // The predictions from the last 7 days
  repeated int32 lastDailyPredictions = 9;

  // The last time a prediction was served by the Predictorlet
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastPredictionTime = 10;

  // LastFailure contains the last failure that occured with a model served by the Predictorlet
  // +kubebuilder:validation:Optional
  optional string lastFailure = 11;

  // +kubebuilder:validation:Optional
  repeated KubernetesObjectStatus objectStatuses = 12;
}

// ProgressiveSpec defines the specification to progressively deploy a model to production
message ProgressiveSpec {
  // The time, in seconds, for the warm-up period
  // +kubebuilder:validation:Optional
  // +kubebuilder:validation:Maximum=100
  // +kubebuilder:validation:Minimum=0
  optional int32 warmup = 1;

  // The percentage of traffic to increment
  // +kubebuilder:validation:Maximum=10
  // +kubebuilder:validation:Minimum=1
  // +kubebuilder:validation:Optional
  optional int32 trafficIncrement = 2;

  // What metric to use when comparing the candidate model to the current model
  // +kubebuilder:validation:Optional
  repeated string canaryMetrics = 3;
}

message ValidationError {
  // The name of the column
  optional string column = 1;

  // The metric from the rule
  optional string metric = 2;

  // Expected min
  optional double min = 3;

  // Expected max
  optional double max = 4;

  // Actual value
  optional double actual = 5;
}

