/**
*
* Copyright (C) 2017 modela authors
* For license information, see LICENSE.txt
*/
// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package github.com.metaprov.modelaapi.pkg.apis.inference.v1alpha1;

import "github.com/metaprov/modelaapi/pkg/apis/catalog/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/pkg/apis/training/v1alpha1/generated.proto";
import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "github.com/metaprov/modelaapi/pkg/apis/inference/v1alpha1";

// AutoScalingSpec defines the configuration for the automatic scaling of a service
message AutoScalingSpec {
  // Indicates if automatic scaling is enabled
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool enabled = 1;

  // The minimum number of replicas running the service
  // +kubebuilder:validation:Optional
  // +kubebuilder:validation:Minimum=1
  // +kubebuilder:default:=1
  optional int32 minReplicas = 2;

  // The maximum number of replicas running the service
  // +kubebuilder:validation:Optional
  // +kubebuilder:validation:Minimum=1
  // +kubebuilder:validation:Maximum=10
  // +kubebuilder:default:=1
  optional int32 maxReplicas = 3;

  // The target average CPU utilization across all replicas. The HorizontalPodAutoscaler associated with the
  // service will change the number of replicas to maintain this metric
  // +kubebuilder:validation:Optional
  // +kubebuilder:validation:Minimum=1
  // +kubebuilder:validation:Maximum=100
  // +kubebuilder:default:=80
  optional int32 cpuAvgUtilization = 4;

  // The target average memory utilization across all replicas. The HorizontalPodAutoscaler associated with the
  // service will change the number of replicas to maintain this metric
  // +kubebuilder:validation:Optional
  // +kubebuilder:validation:Minimum=1
  // +kubebuilder:validation:Maximum=100
  // +kubebuilder:default:=80
  optional int32 memAvgUtilization = 5;
}

message BackwardCurtainSpec {
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool enabled = 1;

  // The forward curtain receives prediction requests before the prediction (currently unimplemented)
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference accountRef = 2;

  // For backward curtain is the confidence low
  // +kubebuilder:validation:Optional
  optional double confidenceLow = 4;

  // For backward curtain is the confidence high
  // +kubebuilder:validation:Optional
  optional double confidenceHigh = 5;
}

// CustomAppSpec defines the custom pages for a DataApp
message CustomAppSpec {
  // Indicates if custom pages are enabled
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool owner = 1;

  // The app title
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string title = 2;

  // The app pages
  // +kubebuilder:validation:Optional
  repeated github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.PageSpec pages = 3;
}

// +kubebuilder:object:root=true
// +kubebuilder:storageversion
// +kubebuilder:resource:path=dataapps,singular=dataapp,categories={data,modela}
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Owner",type="string",JSONPath=".spec.owner"
// +kubebuilder:printcolumn:name="Version",type="string",JSONPath=".spec.versionName"
// +kubebuilder:printcolumn:name="Path",type="string",JSONPath=".spec.path"
// +kubebuilder:printcolumn:name="Model",type="string",JSONPath=".spec.modelName"
// +kubebuilder:printcolumn:name="Replicas",type="string",JSONPath=".spec.replicas"
// +kubebuilder:printcolumn:name="Port",type="string",JSONPath=".spec.port"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// DataApp represents a live dashboard for a single model
message DataApp {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DataAppSpec spec = 2;

  // +optional
  optional DataAppStatus status = 3;
}

// DataAppList contains a list of DataApps
// +kubebuilder:object:root=true
message DataAppList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated DataApp items = 2;
}

// DataAppSpec defines the desired state of a DataApp
message DataAppSpec {
  // The name of the Account which created the object, which exists in the same tenant as the object
  // +kubebuilder:validation:Optional
  // +kubebuilder:default:="no-one"
  optional string owner = 1;

  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string versionName = 2;

  // ModelClassName specifies the name of the Model Class which created the Data App, if applicable
  // +kubebuilder:validation:Optional
  optional string modelClassName = 3;

  // The user-provided description of the Data App
  // +kubebuilder:validation:Optional
  // +kubebuilder:default:=""
  optional string description = 4;

  // Model specifies the name of the Model resource which the Data App will create a dashboard for
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string modelName = 5;

  // Access specifies the configuration for the Data App service to be exposed externally
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.AccessSpec access = 6;

  // The number of replicas for the Kubernetes Serving associated with the DataApp, which will instantiate multiple
  // copies of the service in the case that automatic scaling is disabled
  // +kubebuilder:default:=1
  // +kubebuilder:validation:Optional
  optional int32 replicas = 7;

  // Resources specifies the resource requirements allocated to the DataApp's web server
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ResourceSpec resources = 10;

  // The reference to the ServingSite resource that hosts the Predictor
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference servingsiteRef = 13;

  // The specification to create a custom data application (currently unimplemented)
  // +kubebuilder:validation:Optional
  optional CustomAppSpec custom = 14;
}

// DataAppStatus defines the observed state of DataApp
message DataAppStatus {
  // ObservedGeneration is the last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 1;

  // The last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time updatedAt = 2;

  // The reference to the Kubernetes Serving associated with the DataApp
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference deploymentStatus = 3;

  // The status of the Kubernetes Service associated with the DataApp
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ServiceStatus servicetStatus = 4;

  // In the case of failure, the DataApp resource controller will set this field with a failure reason
  // +kubebuilder:validation:Optional
  optional string failureReason = 5;

  // In the case of failure, the DataApp resource controller will set this field with a failure message
  // +kubebuilder:validation:Optional
  optional string failureMessage = 6;

  // +patchMergeKey=type
  // +patchStrategy=merge
  // +kubebuilder:validation:Optional
  repeated k8s.io.apimachinery.pkg.apis.meta.v1.Condition conditions = 7;
}

message DriftDetectionSpec {
  // Indicates if model monitoring is enabled for the model
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool enabled = 1;

  // If true, automatically generate drift test to all the columns based on the column type
  // +kubebuilder:default:=true
  // +kubebuilder:validation:Optional
  optional bool genDriftTests = 2;

  // +kubebuilder:default:=1000
  // +kubebuilder:validation:Optional
  optional int32 minPredictions = 3;

  // Set the list of columns for drift detection, if empty, watch all the columns.
  // +kubebuilder:validation:Optional
  repeated string columns = 4;

  // The drift threshold for drift metrics.
  // If empty will be set the modela
  repeated github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DriftThreshold driftThresholds = 5;

  // The schedule on which model monitoring computations will be performed
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.RunSchedule schedule = 7;

  // Reference to a model that will be used for outlier detection
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference outlierDetectionModelRef = 8;

  // how many feature histograms to keep in memory (as kubernetes objects). Histograms are garbage collected.
  // +kubebuilder:default:=5
  // +kubebuilder:validation:Optional
  optional int32 maxHistograms = 9;

  // The duration in seconds that an histogram is updated before computing drift
  // the default is one hour
  // +kubebuilder:default:=3600
  // +kubebuilder:validation:Optional
  optional int32 periodSeconds = 10;
}

// Fast slow model mode, use two models as the live.
// All request are send first to the fast model.
message FastSlowModelSpec {
  // Indicates if model monitoring is enabled for the model
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool enabled = 1;

  // Reference to the fast model
  optional k8s.io.api.core.v1.ObjectReference fastModelRef = 2;

  // Reference to the slow model
  optional k8s.io.api.core.v1.ObjectReference slowModelRef = 3;

  // The low range of confidence.
  // +kubebuilder:default:=40
  // +kubebuilder:validation:Optional
  optional int32 probaLowPct = 4;

  // The high range of confidence , Must be higher than probalow
  // +kubebuilder:default:=60
  // +kubebuilder:validation:Optional
  optional int32 probaHighPct = 5;
}

message FeedbackTestSpec {
  // Indicates if model monitoring is enabled for the model
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool enabled = 1;

  // Define the tests to run against the predictor.
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.TestSuite tests = 2;

  // The schedule on which model monitoring computations will be performed
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.RunSchedule schedule = 3;
}

// ForecastPredictionSpec specifies the details of a forecasting model
message ForecastPredictionSpec {
  // The hierarchy specification, which maps columns to values
  // +kubebuilder:validation:Optional
  map<string, string> hierarchyValues = 1;

  // The interval of the forecast
  optional github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.WindowSpec horizon = 2;
}

message ForecastRun {
  // +kubebuilder:validation:Optional
  optional string key = 1;

  // +kubebuilder:validation:Optional
  optional string modelLocation = 2;

  // the prediction horizon
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.WindowSpec horizon = 3;
}

message ForecastSpec {
  // The list of forecast runs. Runs are indexed by key
  // +kubebuilder:validation:Optional
  map<string, ForecastRun> runs = 9;
}

// ForecastStatus specifies the status and metadata for a forecast
message ForecastStatus {
  // A pointer to the file containing metadata about forecast profiles
  // +kubebuilder:validation:Optional
  optional string profileURI = 1;

  // A pointer to the file containing metadata about forecast reports
  // +kubebuilder:validation:Optional
  optional string reportURI = 2;

  // A pointer to the file containing the metadata about the forecasts
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.FileLocation forecastLocation = 3;

  // WorkerResults contains the collection of statuses for ongoing and completed forecast workers
  // +kubebuilder:validation:Optional
  repeated github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.WorkerRunResult workerResults = 6;
}

message ForwardCurtainSpec {
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool enabled = 1;

  // The user account of the forward ref
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference accountRef = 2;

  // Percent of request that are sent to the foreward curtain.
  // +kubebuilder:default:=0
  // +kubebuilder:validation:Optional
  optional int32 percent = 3;
}

// Hold the Last X measurments of a metric
message MetricHistory {
  // The Metric Name
  // +kubebuilder:validation:Optional
  optional string metric = 1;

  // History
  // +kubebuilder:validation:Optional
  repeated double history = 2;
}

// ModelDeploymentRecord holds the state of a model that was previously live or shadowed
message ModelDeploymentRecord {
  // +kubebuilder:validation:Optional
  optional string modelName = 1;

  // +kubebuilder:validation:Optional
  optional string modelVersion = 2;

  // The role of the previously deployed model
  optional string modelRole = 3;

  // The image name that the deployment is currently running
  // +kubebuilder:validation:Optional
  optional string imageName = 4;

  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time deployedAt = 5;

  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time retiredAt = 6;

  // +kubebuilder:validation:Optional
  optional string failureMessage = 7;

  // +kubebuilder:validation:Optional
  optional int32 avgDailyPrediction = 8;

  // +kubebuilder:validation:Optional
  optional double avgLatency = 9;
}

message ModelDeploymentStatus {
  // The name of the Model resource associated with the deployment
  // +kubebuilder:validation:Optional
  optional string modelName = 1;

  // The version of the Model resource
  // +kubebuilder:validation:Optional
  optional string modelVersion = 2;

  // The role of the model (live or shadow)
  optional string modelRole = 3;

  // The image name that the deployment is currently running
  // +kubebuilder:validation:Optional
  optional string imageName = 4;

  // The reference to the Kubernetes Deployment that manages the pods for the Model
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference deploymentRef = 5;

  // The reference to the Kubernetes Service which exposes the Model externally
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference serviceRef = 6;

  // The reference to the Horizontal Pod Autoscaler, if enabled
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference hpaRef = 7;

  // FailureMessage contains the details of the last failure that occurred while deploying the Model
  // +kubebuilder:validation:Optional
  optional string failureMessage = 8;

  // DeployedAt specifies the time that the Model deployment was created
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time deployedAt = 9;

  // Reference to the last ground truth dataset that the model was tested against
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference lastFeedbackDatasetRef = 10;

  // The time at which the last ground truth test was performed
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastFeedbackTestAt = 11;

  // The results of the last ground truth test performed
  // +kubebuilder:validation:Optional
  repeated github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.Measurement lastFeedbackTestResults = 12;

  // MetricHistory contains the historical measurements of all previously performed ground truth tests
  // +kubebuilder:validation:Optional
  map<string, MetricHistory> metricsHistory = 13;

  // +kubebuilder:validation:Optional
  optional int32 avgDailyPrediction = 14;

  // +kubebuilder:validation:Optional
  optional double avgLatency = 15;

  // The end-point URL of the Model, in the case that the Predictor is exposed via an HTTP Ingress
  // +kubebuilder:validation:Optional
  optional string endpoint = 16;
}

// ModelServingSpec specifies the configuration for models to be served by a Predictor
message ModelServingSpec {
  // If Serverless is true, the Kubernetes Serving which serves the model will not be created
  // until it starts to receive prediction traffic, and will be destroyed once the model becomes dormant
  optional bool serverless = 2;

  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.TestSuite servingTests = 4;
}

// ModelSpec specifies the model that will be used for a Prediction
message ModelSpec {
  // The name of a packaged Model
  optional string name = 1;

  // A reference to a Study Run, of which the best model will be used
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.StudyRunReference studyRun = 2;

  // The location of a Model package
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.FileLocation location = 3;
}

// OnlineFeaturestoreSpec specifies the connection information for an online feature store
message OnlineFeatureStoreSpec {
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool enabled = 1;

  // The host name of the feature store micro service.
  // +kubebuilder:default:=""
  optional string hostname = 2;
}

message OnlineStoreStatus {
  // LastAccessed specifies the last time the online store was accessed
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastAccessed = 1;
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:path=predictions,shortName=pred,singular=prediction,categories={inference,modela}
// +kubebuilder:printcolumn:name="Owner",type="string",JSONPath=".spec.owner"
// +kubebuilder:printcolumn:name="Version",type="string",JSONPath=".status.version"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:printcolumn:name="Last Prediction",type="date",JSONPath=".status.lastRunAt",description=""
// Prediction represents a single batch prediction on a dataset
message Prediction {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PredictionSpec spec = 2;

  // +optional
  optional PredictionStatus status = 3;
}

// PredictionCacheSpec specifies the connection information of a key-value cache to store predictions
message PredictionCacheSpec {
  // Enabled indicates if predictions will be cached
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool enabled = 1;

  // InMemory indicates if predictions will be cached in the available memory of the Pod serving the model
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool inMemory = 2;

  // Redis indicates if predictions will be cached in an external Redis deployment
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool redis = 3;

  // The reference to a ConnectionName resource to an external Redis deployment
  optional k8s.io.api.core.v1.ObjectReference connectionRef = 4;
}

// +kubebuilder:object:root=true
// PredictionList is a list of Predictions
message PredictionList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Prediction items = 2;
}

// PredictionLoggingSpec specifies the configuration to log incoming and outgoing prediction requests
message PredictionLoggingSpec {
  // Indicates if prediction logging is enabled
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool enabled = 1;

  // The number percentage (0 through 100) of prediction requests to log
  // +kubebuilder:default:=0
  // +kubebuilder:validation:Optional
  optional int32 samplePercent = 2;

  // Number of rows in the serving dataset
  // +kubebuilder:default:=0
  // +kubebuilder:validation:Optional
  optional int32 rows = 3;

  // Backup Frequency seconds.
  // +kubebuilder:default:=0
  // +kubebuilder:validation:Optional
  optional int32 backupFreqSeconds = 4;

  // Reference to backup location.
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference backupConnectionRef = 5;

  // Target location of the serving dataset
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.DataLocation location = 6;
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:path=predictionruns,shortName=prs,singular=predictionrun,categories={inference,modela}
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status"
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Rows",type="string",JSONPath=".status.rows"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
// PredictionRun represents a single batch prediction on a dataset
message PredictionRun {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PredictionRunSpec spec = 2;

  optional PredictionRunStatus status = 3;
}

// +kubebuilder:object:root=true
// PredictionRunList is a list of PredictionRuns
message PredictionRunList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated PredictionRun items = 2;
}

// PredictionRunSpec defines the run configuration for a Prediction
message PredictionRunSpec {
  // Owner specifies the name of the Account which the object belongs to
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 1;

  // PredictionName specifies the name of the Prediction resource which the snapshot will use to
  // determine the model, observation location, and post-processing options of the batch prediction
  // +kubebuilder:validation:Required
  // +required
  optional string datasetName = 2;

  // Model specifies an optional model override to use for the run
  // +kubebuilder:validation:Optional
  optional ModelSpec model = 3;

  // Timout specifies the time in seconds for the run to be completed. If unspecified, default to the deadline of the Prediction
  // +kubebuilder:validation:Optional
  optional int32 timeout = 4;

  // If true, the execution of new workloads associated with the run will be paused
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool pause = 5;

  // If true, the run will be permanently aborted and all workloads created by the run will be removed
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool abort = 6;
}

// PredictionRunStatus is the observed state of a PredictionRun
message PredictionRunStatus {
  // ObservedGeneration is the last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 1;

  // PredictionManifestLocation specifies the location of the Prediction manifest used during the course of the run
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ManifestLocation predictionManifestLocation = 2;

  // RunVersion specifies the version of the run, which is determined when the Prediction manifest is saved
  optional uint32 runVersion = 4;

  // Rows specifies the number of rows predicted
  // +kubebuilder:validation:Optional
  optional int32 rows = 5;

  // The current phase of the prediction
  // +kubebuilder:default:="Pending"
  // +kubebuilder:validation:Optional
  optional string phase = 6;

  // UnitTestResults contains the results of the unit test phase
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.TestSuiteResult unitTestResults = 7;

  // FailureMessage is set to a failure message in the case that an error occurred during the run
  // +kubebuilder:validation:Optional
  optional string failureMessage = 8;

  // Logs contains the location of all logs produced by run workloads
  // +kubebuilder:validation:Optional
  repeated github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ContainerLog logs = 9;

  // Forecast specifies the forecast status for the run
  // +kubebuilder:validation:Optional
  optional ForecastStatus forecast = 10;

  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ResourceConsumption usage = 11;

  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time updatedAt = 12;

  // CompletedAt specifies the time at which the run completed or failed
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time completedAt = 13;

  // +patchMergeKey=type
  // +patchStrategy=merge
  // +kubebuilder:validation:Optional
  repeated k8s.io.apimachinery.pkg.apis.meta.v1.Condition conditions = 14;
}

// PredictionSpec represent the desired state of Prediction
message PredictionSpec {
  // The name of the Account which created the object, which exists in the same tenant as the object
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 1;

  // Description contains the user-provided description of the object
  // +kubebuilder:validation:MaxLength=512
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string description = 2;

  // RunSpec specifies the configuration for runs created by the Prediction
  // +kubebuilder:validation:Required
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.RunSpec run = 3;

  // The name of the Virtual Bucket where artifacts generated by the Prediction will be stored.
  // If empty, default to the Data Product's default artifact bucket
  // +kubebuilder:validation:Optional
  optional string artifactBucketName = 4;

  // The name of the Serving Site under which Jobs created by the Prediction will be executed.
  // If empty, default to the Data Product's default Lab
  // +kubebuilder:validation:Optional
  optional string servingSiteRef = 5;

  // The specification for the model that will be used for the Prediction
  // +kubebuilder:validation:Optional
  optional ModelSpec model = 6;

  // Input specifies the location of the prediction dataset
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataInputSpec input = 8;

  // Output specifies the location where the prediction results will be stored
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataOutputSpec output = 9;

  // Labeled indicates if the input dataset is labeled, in which case a batch prediction workload will not be created.
  // If enabled, a workload will be created to compute the metrics of the model based
  // on the labeled dataset and run the tests specified by UnitTests
  // +kubebuilder:default:=false
  optional bool labeled = 10;

  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelTestSuite unitTests = 11;

  // Resources specifies the resource requirements allocated to the batch prediction workload
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ResourceSpec resources = 12;

  // Forecast specifies the configuration to perform a forecast
  // +kubebuilder:validation:Optional
  optional ForecastPredictionSpec forecast = 13;

  // ModelClassName references the name of the Model Class that created the resource, if applicable
  // +kubebuilder:validation:Optional
  optional string modelClassName = 15;
}

// PredictionStatus is the observed state of a Prediction
message PredictionStatus {
  // ObservedGeneration specifies the last generation that was reconciled
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 1;

  // Active contains a collection of references to currently active runs
  // +optional
  repeated github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.RunReference active = 2;

  // LastRunVersion contains the integer version last used to create a run
  // +kubebuilder:default:=0
  optional uint32 lastRunVersion = 4;

  // AvailableRunVersions contains the collection of run versions which are ready for use.
  // Each version corresponds with an existing PredictionRun resource
  // +kubebuilder:validation:Optional
  repeated uint32 availableRunVersions = 5;

  // LastRunAt specifies the time at which a run was last created for the Study
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastRunAt = 6;

  // LastFailureMessage specifies the failure message of the last run. If the last run succeeded, the field will be cleared
  // +kubebuilder:validation:Optional
  optional string failureMessage = 7;

  // Schedule specifies the status of the run schedule
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.RunScheduleStatus schedule = 8;

  // UpdatedAt specifies the last time the Study was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time updatedAt = 9;

  // +optional
  // +patchMergeKey=type
  // +patchStrategy=merge
  repeated k8s.io.apimachinery.pkg.apis.meta.v1.Condition conditions = 10;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=predictors,singular=predictor,shortName=pdr,categories={inference,modela}
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Owner",type="string",JSONPath=".spec.owner",priority=1
// +kubebuilder:printcolumn:name="Serving Site",type="string",JSONPath=".spec.servingsiteRef.name",description=""
// +kubebuilder:printcolumn:name="Port",type="integer",JSONPath=".spec.access.port",description=""
// +kubebuilder:printcolumn:name="Access",type="string",JSONPath=".spec.access.accessType",description=""
// +kubebuilder:printcolumn:name="Replicas",type="integer",JSONPath=".spec.replicas",description=""
// +kubebuilder:printcolumn:name="Type",type="string",JSONPath=".spec.type",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// Predictor specifies the deployment of a service to serve predictions for a Model
message Predictor {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PredictorSpec spec = 2;

  // +optional
  optional PredictorStatus status = 3;
}

// +kubebuilder:object:root=true
// PredictorList contains a list of Predictors
message PredictorList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Predictor items = 2;
}

// PredictorSpec defines the desired state of a Predictor
message PredictorSpec {
  // If specified, the name of the DataProductVersion which describes the version of the resource
  // that exists in the same DataProduct namespace as the resource
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string versionName = 1;

  // The model class for this pipeline. if was created to serve model class models.
  // +kubebuilder:validation:Optional
  optional string modelClassName = 2;

  // If specified, the user-provided description of the Predictor
  // +kubebuilder:validation:MaxLength=256
  // +kubebuilder:default:=""
  optional string description = 3;

  // The reference to the DataProduct that the resource exists under
  optional k8s.io.api.core.v1.ObjectReference productRef = 4;

  // If true, this predictor is a template predictor. I.e. it is used in model class
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool template = 5;

  // ServingSiteRef specifies the reference to the Serving Site that the Predictor will be hosted under
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference servingSiteRef = 7;

  // If specified, the collection of models. There must be a least on live model
  // +kubebuilder:validation:MinItems=1
  // +kubebuilder:validation:MaxItems=16
  repeated github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ModelDeploymentSpec models = 8;

  // The specification to progressively deploy a new live model. ModelDeploymentSpec specifications within Models that have the
  // `Canary` field enabled will be progressively deployed according to the specification when they are applied to the Predictor
  // +kubebuilder:validation:Optional
  optional ProgressiveSpec progressive = 9;

  // Access specifies the configuration for the Predictor service to be exposed externally
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.AccessSpec access = 11;

  // The number of replicas for the Kubernetes Serving associated with the Predictor, which will instantiate multiple
  // copies of the service in the case that automatic scaling is disabled
  // +kubebuilder:validation:Optional
  optional int32 replicas = 12;

  // AutoScaling specifies the auto-scaling policy
  // +kubebuilder:validation:Optional
  optional AutoScalingSpec autoScaling = 13;

  // The name of the Account which created the object, which exists in the same tenant as the object
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 14;

  // Resources specifies the resource requirements allocated to the prediction service
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ResourceSpec resources = 15;

  // Cache specifies the configuration of the prediction cache
  optional PredictionCacheSpec cache = 16;

  // Store specifies the configuration of the online data store
  optional OnlineFeatureStoreSpec store = 17;

  // Serving specifies the configuration for individual models to handle prediction traffic
  optional ModelServingSpec serving = 18;

  // The task type of the Predictor, which should match the task type of the models being served
  // +kubebuilder:default:="unknown"
  // +kubebuilder:validation:Optional
  optional string task = 19;

  // Spec for the drift detection process
  // +kubebuilder:validation:Optional
  optional DriftDetectionSpec drift = 21;

  // Feedback specifies the configuration to generate feedback datasets
  // +kubebuilder:validation:Optional
  optional FeedbackTestSpec feedback = 22;

  // The notification specification that determines which notifiers will receive Alerts generated by the object
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.NotificationSpec notification = 23;

  // Monitor spec specify the monitor for this predictor.
  // +kubebuilder:validation:Optional
  optional PredictionLoggingSpec predictionLogging = 24;

  // Forward curtain
  // +kubebuilder:validation:Optional
  optional ForwardCurtainSpec forwardCurtain = 25;

  // Backward curtain
  // +kubebuilder:validation:Optional
  optional BackwardCurtainSpec backwardCurtain = 26;

  // Fast slow is the specification of deployment of a fast - slow models.
  // +kubebuilder:validation:Optional
  optional FastSlowModelSpec fastSlow = 27;
}

// PredictorStatus contain the current state of the Predictor resource
message PredictorStatus {
  // ObservedGeneration is the last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 1;

  // The collection of historical records of models deployed to the Predictor, used internally to roll-back models.
  // When the name, role, or image of a previously deployed model is changed, it will be removed from ModelStatus
  // and appended as a record to History
  // +kubebuilder:validation:Optional
  repeated ModelDeploymentRecord history = 2;

  // ModelStatus contains the collection of statuses for all live models
  // +kubebuilder:validation:Optional
  repeated ModelDeploymentStatus modelStatus = 4;

  // The status of the Predictorlet associated with the Predictor. The Predictorlet is a service which handles prediction traffic
  // and routes predictions to individual models based on the specification of the Predictor
  // +kubebuilder:validation:Optional
  optional PredictorletStatus predictorletStatus = 5;

  // The status of the online store managed by the Predictor
  // +kubebuilder:validation:Optional
  optional OnlineStoreStatus onlineStoreStatus = 7;

  // The last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time updatedAt = 8;

  // In the case of failure, the Predictor resource controller will set this field with a failure reason
  // +kubebuilder:validation:Optional
  optional string failureMessage = 11;

  // The status of the load balancer, if the Predictor's access type is LoadBalancer
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.LoadBalancerStatus loadBalancerStatus = 12;

  // The last time that a prediction dataset was created
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference lastPredictionDataset = 13;

  // The results of running the serving tests
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.TestSuiteResult servingTestsResults = 14;

  // +patchMergeKey=type
  // +patchStrategy=merge
  // +kubebuilder:validation:Optional
  repeated k8s.io.apimachinery.pkg.apis.meta.v1.Condition conditions = 17;
}

// PredictorletStatus describes the current state of a prediction proxy service associated with a Predictor
message PredictorletStatus {
  // The reference to the Kubernetes Deployment that manages the pods for the prediction proxy
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference deploymentRef = 1;

  // The reference to the Kubernetes Service which exposes the Predictor externally
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference serviceRef = 2;

  // DeployedAt specifies the time that the Predictorlet deployment was created
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time deployedAt = 3;

  // +kubebuilder:validation:Optional
  optional double p50 = 4;

  // 95% latency for predictions served by the Predictorlet
  // +kubebuilder:validation:Optional
  optional double p95 = 5;

  // 99% latency for predictions served by the Predictorlet
  // +kubebuilder:validation:Optional
  optional double p99 = 6;

  // +kubebuilder:validation:Optional
  optional int32 avgDailyPrediction = 7;

  // The total number of predictions served by the Predictorlet
  optional int32 totalPredictions = 8;

  // The last time a prediction was served by the Predictorlet
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastPredictionTime = 9;

  // FailureMessage contains the details of the last failure that occurred while deploying the Predictorlet
  // +kubebuilder:validation:Optional
  optional string failureMessage = 10;
}

// ProgressiveSpec defines the specification to progressively deploy a model to production
message ProgressiveSpec {
  // The time, in seconds, for the warm-up period
  // +kubebuilder:validation:Optional
  // +kubebuilder:validation:Maximum=100
  // +kubebuilder:validation:Minimum=0
  optional int32 warmup = 1;

  // The percentage of traffic to increment
  // +kubebuilder:validation:Maximum=10
  // +kubebuilder:validation:Minimum=1
  // +kubebuilder:validation:Optional
  optional int32 trafficIncrement = 2;

  // What metric to use when comparing the candidate model to the current model
  // +kubebuilder:validation:Optional
  repeated string canaryMetrics = 3;
}

message ValidationError {
  // The name of the column
  optional string column = 1;

  // The metric from the rule
  optional string metric = 2;

  // Expected min
  optional double min = 3;

  // Expected max
  optional double max = 4;

  // Actual value
  optional double actual = 5;
}

