/**
*
* Copyright (C) 2017 modela authors
* For license information, see LICENSE.txt
*/
// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package github.com.metaprov.modelaapi.pkg.apis.inference.v1alpha1;

import "github.com/metaprov/modelaapi/pkg/apis/catalog/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/pkg/apis/training/v1alpha1/generated.proto";
import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "github.com/metaprov/modelaapi/pkg/apis/inference/v1alpha1";

// AutoScaling defines the configuration for the automatic scaling of a service
message AutoScaling {
  // Indicates if automatic scaling is enabled
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool enabled = 1;

  // The minimum number of replicas running the service
  // +kubebuilder:validation:Optional
  // +kubebuilder:validation:Minimum=1
  // +kubebuilder:default:=1
  optional int32 minReplicas = 2;

  // The maximum number of replicas running the service
  // +kubebuilder:validation:Optional
  // +kubebuilder:validation:Minimum=1
  // +kubebuilder:validation:Maximum=10
  // +kubebuilder:default:=1
  optional int32 maxReplicas = 3;

  // The target average CPU utilization across all replicas. The HorizontalPodAutoscaler associated with the
  // service will change the number of replicas to maintain this metric
  // +kubebuilder:validation:Optional
  // +kubebuilder:validation:Minimum=1
  // +kubebuilder:validation:Maximum=100
  // +kubebuilder:default:=80
  optional int32 cpuAvgUtilization = 4;

  // The target average memory utilization across all replicas. The HorizontalPodAutoscaler associated with the
  // service will change the number of replicas to maintain this metric
  // +kubebuilder:validation:Optional
  // +kubebuilder:validation:Minimum=1
  // +kubebuilder:validation:Maximum=100
  // +kubebuilder:default:=80
  optional int32 memAvgUtilization = 5;
}

// CronPrediction represents a single run of the Prediction Pipeline
message CronPrediction {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional CronPredictionSpec spec = 2;

  optional CronPredictionStatus status = 3;
}

// PredictionCondition describes the state of PredictionTemplate
message CronPredictionCondition {
  // Type of  condition.
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // The reason for the condition's last transition.
  optional string reason = 4;

  // A human readable message indicating details about the transition.
  optional string message = 5;
}

// +kubebuilder:object:root=true
// CronPredictionList is a list of CronPrediction
message CronPredictionList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated CronPrediction items = 2;
}

// CronPredictionSpec represent the desired state of CronPrediction
message CronPredictionSpec {
  // VersionName is the data product version of the data pipeline
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string versionName = 1;

  // The owner account name
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 2;

  // Schedule for running the pipeline
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.RunSchedule schedule = 3;

  // Template refer to the prediction template
  optional PredictionTemplate template = 4;

  // The priority of this data pipeline. The default is medium.
  // +kubebuilder:default:=medium
  // +kubebuilder:validation:Optional
  optional string priority = 5;

  // Set to true to pause the cron prediction
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool paused = 6;

  // Notification specification.
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.NotificationSpec notification = 7;
}

// CronPredictionStatus is the observed state of a PredictionTemplate
message CronPredictionStatus {
  // Last run is the last time a data pipeline run was created
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.LastRunStatus lastRun = 1;

  // The time of the next schedule run
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time nextRun = 2;

  // Last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdated = 3;

  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 4;

  // Update in case of terminal failure
  // Borrowed from cluster api controller
  // +kubebuilder:validation:Optional
  optional string failureReason = 5;

  // Update in case of terminal failure message
  // +kubebuilder:validation:Optional
  optional string failureMessage = 6;

  // +patchMergeKey=type
  // +patchStrategy=merge
  // +kubebuilder:validation:Optional
  repeated CronPredictionCondition conditions = 7;
}

// Curtain represent an object which can be placed before or after predictor
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Serving Site",type="string",JSONPath=".spec.servingsiteRef.name"
// +kubebuilder:printcolumn:name="Dataset",type="string",JSONPath=".spec.datasetRef.name"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:resource:path=curtains,singular=curtain,categories={inference,modela,all}
message Curtain {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional CurtainSpec spec = 2;

  // +optional
  optional CurtainStatus status = 3;
}

// CurtainCondition describes the state of a wizard of oz at a certain point.
message CurtainCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // The reason for the condition's last transition.
  optional string reason = 4;

  // A human readable message indicating details about the transition.
  optional string message = 5;
}

// +kubebuilder:object:root=true
// CurtainList represent a list of Curtain resources
message CurtainList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Curtain items = 2;
}

// CurtainSpec define the desired state of a Curtain
message CurtainSpec {
  // User provided description
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string description = 1;

  // User provided description
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string versionName = 2;

  // The product of the resource
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string servingsiteName = 3;

  // The dataset that store the human answers
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string datasetName = 4;

  // The accounts of the human which can answer the prediction.
  repeated string wizards = 5;

  // Question to ask the human.
  // +kubebuilder:default:=""
  // +kubebuilder:validation:MaxLength=256
  optional string question = 6;

  // NotifierName is used to converse with the human.
  // +kubebuilder:default:=""
  // +kubebuilder:validation:MaxLength=256
  optional string notifierName = 7;

  // The owner account name
  // +kubebuilder:default:='no-one'
  // +kubebuilder:validation:Optional
  optional string owner = 8;
}

// CurtainStatus contain the observed state of the Curtain object.
message CurtainStatus {
  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 1;

  // Last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdated = 2;

  // +patchMergeKey=type
  // +patchStrategy=merge
  // +kubebuilder:validation:Optional
  repeated CurtainCondition conditions = 3;
}

message CurtainTemplateSpec {
  // Standard object's metadata.
  // More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional CurtainSpec spec = 2;
}

// Define the custom pages on the app
message CustomAppSpec {
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool owner = 1;

  // The app title
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string title = 2;

  // The app pages
  // +kubebuilder:validation:Optional
  repeated github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.PageSpec pages = 3;
}

// DataApp represent a dashboard for business users to use a single model.
// +kubebuilder:object:root=true
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Owner",type="string",JSONPath=".spec.owner"
// +kubebuilder:printcolumn:name="Version",type="string",JSONPath=".spec.versionName"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=dataapps,singular=dataapp,categories={data,modela}
// +kubebuilder:subresource:status
message DataApp {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DataAppSpec spec = 2;

  // +optional
  optional DataAppStatus status = 3;
}

// DataAppCondition describes the state of a deployment at a certain point.
message DataAppCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 7;

  // The reason for the condition's last transition.
  optional string reason = 4;

  // A human readable message indicating details about the transition.
  optional string message = 5;
}

// +kubebuilder:object:root=true
// DataAppList contain a list of webrequest objects
message DataAppList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated DataApp items = 2;
}

// DataAppSpec contain the desired state of a DataApp
message DataAppSpec {
  // The webrequest owner
  // +kubebuilder:validation:Optional
  // +kubebuilder:default:="no-one"
  optional string owner = 1;

  // The product version for the webrequest.
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string versionName = 2;

  // Comments is a description of the webrequest
  // +kubebuilder:validation:Optional
  // +kubebuilder:default:=""
  optional string description = 3;

  // The path of the predictive path
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string path = 4;

  // The name of the predictive app model. The model will be used
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string modelName = 5;

  // Number of replicates
  // +kubebuilder:default:=1
  // +kubebuilder:validation:Optional
  optional int32 replicas = 7;

  // The port for the app
  // +kubebuilder:default:=3000
  // +kubebuilder:validation:Minimum=1
  // +kubebuilder:validation:Maximum=65535
  // +kubebuilder:validation:Optional
  optional int32 port = 8;

  // The value of the node port
  // +kubebuilder:validation:Minimum=1
  // +kubebuilder:validation:Maximum=65535
  // +kubebuilder:validation:Optional
  optional int32 nodePort = 9;

  // Resource define the hardware resources req.
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ResourceSpec resources = 10;

  // The access method specified how external clients will access the predictor
  // Default: ClusterIP
  // +kubebuilder:default:="cluster-ip"
  // +kubebuilder:validation:Optional
  optional string accessType = 11;

  // The product that this predictor serve.
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference productRef = 12;

  // The serving site that hosts this predictor and the models
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference servingsiteRef = 13;

  // Custom application
  // +kubebuilder:validation:Optional
  optional CustomAppSpec custom = 14;
}

// DataAppStatus defines the observed state of DataApp
message DataAppStatus {
  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 1;

  // Last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdated = 2;

  // The data app deployment status
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference deploymentStatus = 3;

  // The status of the data app service.
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ServiceStatus servicetStatus = 4;

  // Update in case of terminal failure
  // Borrowed from cluster api controller
  // +kubebuilder:validation:Optional
  optional string failureReason = 5;

  // Update in case of terminal failure message
  // +kubebuilder:validation:Optional
  optional string failureMessage = 6;

  // +patchMergeKey=type
  // +patchStrategy=merge
  // +kubebuilder:validation:Optional
  repeated DataAppCondition conditions = 7;
}

// In case of forecast holds the forecast details
message ForecastSpec {
  // The Hierarchy spec, map from column to values
  // +kubebuilder:validation:Optional
  map<string, string> hierarchyValues = 1;

  // Specify the interval for this forecast, we might need to downsample or upsample
  optional github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.PeriodSpec horizon = 2;
}

// ModelRecord hold the state of a model that was in production
message ModelRecord {
  // Model Name is the name of the model
  // +kubebuilder:validation:Optional
  optional string modelName = 1;

  // Model version is the version of the model
  // +kubebuilder:validation:Optional
  optional string modelVersion = 2;

  // Live at is the time that the model were placed in production
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time liveAt = 3;

  // Retried at is the time that the model was retired from production.
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time retiredAt = 4;

  // Retried at is the time that the model was retired from production.
  // +kubebuilder:validation:Optional
  optional int32 avgDailyPrediction = 5;

  // Retried at is the time that the model was retired from production.
  // +kubebuilder:validation:Optional
  optional double avgLatency = 6;
}

// MonitorSpec defines the specification to monitor a model in production
message MonitorSpec {
  // If true monitoring is enabled.
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool enabled = 1;

  // How many rows to sample from the live data for
  // +kubebuilder:default:=0
  // +kubebuilder:validation:Optional
  optional int32 samplePercent = 2;

  // Schedule for running the monitor
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.RunSchedule schedule = 3;

  // NotifierName is the name of notifier to alert in case of
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string notifierName = 4;

  // List of model validation
  // +kubebuilder:validation:Optional
  repeated github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelValidation validations = 5;

  // Log requests (incoming traffic)
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool logRequests = 6;

  // Log outgoing traffic
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool logResponses = 7;
}

message MonitorStatus {
  // Last Prediction time
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastPrediction = 1;

  // Validation results contains the latest result
  repeated github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelValidationResult validationResults = 2;
}

// A OnlineFeaturestoreSpec specifies the connection information for an online feature store
message OnlineFeaturestoreSpec {
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool active = 1;

  // +kubebuilder:default:=""
  optional string serviceName = 2;
}

// PredictionTemplate represents a prediction object
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status"
// +kubebuilder:printcolumn:name="Owner",type="string",JSONPath=".spec.owner",priority=1
// +kubebuilder:printcolumn:name="Predictor",type="string",JSONPath=".spec.predictorName"
// +kubebuilder:printcolumn:name="Dataset",type="string",JSONPath=".spec.datasetName"
// +kubebuilder:printcolumn:name="Labeled",type="string",JSONPath=".spec.labeled"
// +kubebuilder:printcolumn:name="Bucket",type="string",JSONPath=".spec.output.bucketName",priority=1
// +kubebuilder:printcolumn:name="Key",type="string",JSONPath=".spec.output.path",priority=1
// +kubebuilder:printcolumn:name="Score",type="string",JSONPath=".status.score"
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Rows",type="string",JSONPath=".status.rows"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:resource:path=predictions,shortName=pred,singular=prediction,categories={inference,modela}
message Prediction {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PredictionSpec spec = 2;

  optional PredictionStatus status = 3;
}

// A prediction cache specify the connection information to a cache (e.g. redis) that can store the prediction.
// A cache is a key value store.
message PredictionCacheSpec {
  // Active indicate if the cache is active
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool active = 1;

  // the name of the cache service
  // +kubebuilder:default:=""
  optional string serviceName = 2;
}

// PredictionCondition describes the state of PredictionTemplate
message PredictionCondition {
  // Type of  condition.
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // The reason for the condition's last transition.
  optional string reason = 4;

  // A human readable message indicating details about the transition.
  optional string message = 5;
}

// +kubebuilder:object:root=true
// PredictionList is a list of Prediction
message PredictionList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Prediction items = 2;
}

// PredictionSpec represent the desired state of Prediction
message PredictionSpec {
  // VersionName is the data product version of the data pipeline
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string versionName = 1;

  // PredictorName refer to the predictor which would predict the dataset of this prediction.
  // +kubebuilder:validation:MaxLength=63
  // +kubebuilder:validation:Required
  // +required
  optional string predictorName = 2;

  // Labeled , true if this is labeled prediction request.
  // +kubebuilder:default:=false
  // Used usually for unit testing
  optional bool labeled = 3;

  // If true, this prediction is a forecast
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool forecast = 4;

  // +kubebuilder:validation:Optional
  // +kubebuilder:default:=""
  optional string datasetName = 5;

  // Input is the location of the input file if not using a dataset
  optional github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataInputSpec input = 6;

  // Output is the location of the output file.
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataOutputSpec output = 7;

  // Tests is the list of metrics that we need to measure if we are running a labeled prediction
  repeated string tests = 8;

  // The owner account name
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 9;

  // Resources is the hardware resource req.
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ResourceSpec resources = 10;

  // ActiveDeadlineSeconds is the deadline of a job for this dataset.
  // +kubebuilder:default:=600
  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:validation:Optional
  optional int64 activeDeadlineSeconds = 11;

  // The priority of this prediction. The default is medium.
  // +kubebuilder:default:=medium
  // +kubebuilder:validation:Optional
  optional string priority = 12;

  // Aborted is set when we want to abort the prediction
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool aborted = 13;

  // TTL.
  // +kubebuilder:default:=0
  // +kubebuilder:validation:Optional
  optional int32 ttl = 14;

  // If this is hierarchy forecast, holds the forecast details for each columns
  // +kubebuilder:validation:Optional
  optional ForecastSpec forecastInfo = 15;

  // CronPredictionName refer to the cron prediction
  // +kubebuilder:validation:MaxLength=63
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string cronPredictorName = 16;

  // The serving site that hosts this predictor and the models
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference servingsiteRef = 17;
}

// PredictionStatus is the observed state of a PredictionTemplate
message PredictionStatus {
  // StartTime is the start time of the prediction.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time startTime = 1;

  // EndTime is the end time of the prediction.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time endTime = 2;

  // Phase is the current phase of the prediction
  // +kubebuilder:default:="Pending"
  // +kubebuilder:validation:Optional
  optional string phase = 3;

  // Results is the results of running the prediction with a labeled dataset
  // +kubebuilder:validation:Optional
  repeated github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.Measurement results = 4;

  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 5;

  // The number of rows in the predictions
  // +kubebuilder:validation:Optional
  optional int32 rows = 6;

  // What triggered the run
  // +kubebuilder:validation:Optional
  optional string triggeredBy = 7;

  // Holds the location of log paths
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.Logs logs = 8;

  // Last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdated = 9;

  // Update in case of terminal failure
  // Borrowed from cluster api controller
  // +kubebuilder:validation:Optional
  optional string failureReason = 10;

  // Update in case of terminal failure message
  // +kubebuilder:validation:Optional
  optional string failureMessage = 11;

  // +patchMergeKey=type
  // +patchStrategy=merge
  // +kubebuilder:validation:Optional
  repeated PredictionCondition conditions = 12;
}

message PredictionTemplate {
  optional PredictionSpec spec = 1;
}

// Predictor specifies the deployment of a service to serve predictions for a Model
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Owner",type="string",JSONPath=".spec.owner",priority=1
// +kubebuilder:printcolumn:name="Serving Site",type="string",JSONPath=".spec.servingsiteRef.name",description=""
// +kubebuilder:printcolumn:name="Port",type="integer",JSONPath=".spec.port",description=""
// +kubebuilder:printcolumn:name="Access",type="string",JSONPath=".spec.accessType",description=""
// +kubebuilder:printcolumn:name="Replicas",type="integer",JSONPath=".spec.replicas",description=""
// +kubebuilder:printcolumn:name="Type",type="string",JSONPath=".spec.type",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=predictors,singular=predictor,shortName=pdr,categories={inference,modela}
message Predictor {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PredictorSpec spec = 2;

  optional PredictorStatus status = 3;
}

message PredictorAuthSpec {
  // Indicates if authentication is enabled
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool enabled = 1;
}

// PredictorCondition describes the state of a Predictor at a certain point
message PredictorCondition {
  // Type of account condition
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown
  optional string status = 2;

  // Last time the condition transitioned from one status to another
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // The reason for the condition's last transition
  optional string reason = 4;

  // A human-readable message indicating details about the transition
  optional string message = 5;
}

// PredictorHealth describes the health of an active Predictor
message PredictorHealth {
  // True, if there is system is a problem with the service
  // Indicates if there is a problem with the Predictor's service
  optional bool service = 1;

  // Indicates if a data drift has been detected based on incoming prediction data
  optional bool dataDrift = 2;

  // Indicates if a concept drift has been detected based on incoming prediction data
  optional bool conceptDrift = 3;

  // The total number of predictions served by the Predictor
  optional int32 totalPredictions = 4;

  // The daily average number of predictions served
  optional int32 avg = 5;

  // The response time for 95% of predictions served
  optional int32 totalP95Requests = 6;

  // The median response time to serve predictions
  optional int32 medianResponseTime = 7;

  // The predictions from the last 7 days
  repeated int32 lastDailyPredictions = 8;
}

// +kubebuilder:object:root=true
// PredictorList contains a list of Predictors
message PredictorList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Predictor items = 2;
}

// PredictorSpec define the desired state of a Predictor
message PredictorSpec {
  // The name of the DataProductVersion that exists on the same DataProduct namespace as the Predictor
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string versionName = 1;

  // The user-provided description of the Predictor
  // +kubebuilder:validation:MaxLength=256
  // +kubebuilder:default:=""
  optional string description = 2;

  // The reference to the DataProduct resource that the Predictor exists under
  optional k8s.io.api.core.v1.ObjectReference productRef = 3;

  // The reference to the ServingSite resource that hosts the Predictor
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference servingsiteRef = 4;

  // The pod template for the prediction proxy service. The system will create a deployment for the service
  // based on the template
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.PodTemplate template = 5;

  // The collection of model deployment specifications that define which Model resources will be deployed to the
  // Predictor service and how they will be deployed. Each model should be associated with the same type of
  // dataset and possess a unique version
  // +kubebuilder:validation:Optional
  repeated github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ModelDeploymentSpec models = 6;

  // The specification to progressively deploy models. ModelDeploymentSpec specifications within Models that have the
  // `Canary` field enabled will be progressively deployed according to the specification when they are applied to the Predictor
  // +kubebuilder:validation:Optional
  optional ProgressiveSpec progressive = 7;

  // The data location where artifacts generated by the Predictor will be stored
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataLocation artifactsFolder = 8;

  // The port number that will be exposed on the Predictor's Pods to serve prediction traffic through the GRPCInferenceService API.
  // The Kubernetes Service created by the Predictor will expose the port and forward GRPC traffic to the backend pods
  // +kubebuilder:validation:Optional
  // +kubebuilder:validation:Minimum=1
  // +kubebuilder:validation:Maximum=65535
  // +kubebuilder:validation:Optional
  // +kubebuilder:default:=8080
  optional int32 port = 9;

  // The port number that will be exposed on the external address of every node on the cluster, in the case of the
  // Predictor's access type being NodePort. Traffic from the port will be forwarded to the Predictor's backend service
  // +kubebuilder:validation:Minimum=1
  // +kubebuilder:validation:Maximum=65535
  // +kubebuilder:validation:Optional
  optional int32 nodePort = 10;

  // The auto-generated DNS path where the Predictor service can be accessed. If the access type is ClusterIP, it will
  // be a cluster-internal DNS name (i.e. predictor.default-serving-site.svc.cluster.local). In the case of the Ingress
  // access type, it will be determined by the FQDN of the host ServingSite (i.e. predictor.default-serving-site.modela.ai).
  // +kubebuilder:validation:MaxLength=256
  // +kubebuilder:validation:Optional
  // +kubebuilder:default:=""
  optional string path = 11;

  // The Kubernetes-native access method which specifies how the Kubernetes Service created by the Predictor will be exposed.
  // See https://modela.ai/docs/docs/serving/production/#access-method for a detailed description of each access type
  // +kubebuilder:default:="cluster-ip"
  // +kubebuilder:validation:Optional
  optional string accessType = 12;

  // The number of replicas (how many instances of the prediction service will be instantiated to handle prediction traffic)
  // in the case that automatic scaling is disabled
  // +kubebuilder:validation:Optional
  // +kubebuilder:validation:Maximum=10
  // +kubebuilder:validation:Minimum=1
  // +kubebuilder:default:=1
  optional int32 replicas = 13;

  // AutoScaling specifies the auto-scaling policy
  // +kubebuilder:validation:Optional
  optional AutoScaling autoScaling = 14;

  // The owner account name
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 15;

  // Resources specifies the resource requirements allocated to the prediction service
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ResourceSpec resources = 16;

  // Cache is the specification of prediction cache (currently unimplemented)
  // +kubebuilder:validation:Optional
  optional PredictionCacheSpec cache = 17;

  // Store is the specification of the online data store (currently unimplemented)
  // +kubebuilder:validation:Optional
  optional OnlineFeaturestoreSpec store = 18;

  // The forward curtain receives prediction requests before the prediction (currently unimplemented)
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string forwardCurtain = 19;

  // The backward curtain receives prediction requests after the prediction (currently unimplemented)
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string backwardCurtain = 20;

  // The type of predictor (online, batch, or streaming). Online is the only supported type as of the current release
  // +kubebuilder:default:="online"
  // +kubebuilder:validation:Optional
  optional string type = 21;

  // The task type of the Predictor, which should match the task type of the models being served
  // +kubebuilder:default:="unknown"
  // +kubebuilder:validation:Optional
  optional string task = 22;

  // The prediction threshold
  // +kubebuilder:validation:Optional
  optional double predictionThreshold = 23;

  // Monitor spec specify the monitor for this predictor.
  // +kubebuilder:validation:Optional
  optional MonitorSpec monitor = 24;

  // The specification to authenticate requests to the prediction service
  // +kubebuilder:validation:Optional
  optional PredictorAuthSpec auth = 25;

  // Indicates if the prediction service should expose an additional port to serve the GRPCInferenceService API using REST.
  // The port one digit above the number specified by the Port field will be exposed to accept HTTP/1.1 traffic
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool rest = 26;
}

// PredictorStatus contain the current state of the Predictor resource
message PredictorStatus {
  // The collection of statuses for each model deployed with the Predictor
  // +kubebuilder:validation:Optional
  repeated github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ModelDeploymentStatus modelStatus = 1;

  // The last time when model monitoring was computed
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time monitorLastAttemptAt = 3;

  // The score from the last time model monitoring was computed
  optional double monitorLastScore = 4;

  // The model latency from the last time model monitoring was computed
  optional double monitorLastLatency = 5;

  // The health and other statistics of the Predictor
  optional PredictorHealth health = 6;

  // ObservedGeneration is the last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 7;

  // The collection of historical records of models deployed to the Predictor, used internally to roll-back models
  // +kubebuilder:validation:Optional
  repeated ModelRecord history = 9;

  // MonitorStatus contains the status of the last model monitoring that was computed
  // +kubebuilder:validation:Optional
  optional MonitorStatus monitorStatus = 10;

  // The last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdated = 11;

  // The target column of the Predictor
  // +kubebuilder:validation:Optional
  optional string targetColumn = 12;

  // For binary classification, the name of the positive class of the target feature
  // +kubebuilder:validation:Optional
  optional string positiveLabel = 13;

  // For binary classification, the name of the negative class of the target feature
  // +kubebuilder:validation:Optional
  optional string negativeLabel = 14;

  // The end-point URL of the Predictor
  // +kubebuilder:validation:Optional
  optional string endPoint = 16;

  // The reference to the Kubernetes Deployment created for the Predictor's prediction proxy
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference proxyDeploymentRef = 17;

  // The reference to the Kubernetes Service created for the Predictor's prediction proxy
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference proxyServiceRef = 18;

  // In the case of failure, the Predictor resource controller will set this field with a failure reason
  // +kubebuilder:validation:Optional
  optional string failureReason = 19;

  // In the case of failure, the Predictor resource controller will set this field with a failure reason
  // +kubebuilder:validation:Optional
  optional string failureMessage = 20;

  // The status of the load balancer, if the Predictor's access type is LoadBalancer
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.LoadBalancerStatus loadBalancerStatus = 21;

  // +patchMergeKey=type
  // +patchStrategy=merge
  // +kubebuilder:validation:Optional
  repeated PredictorCondition conditions = 22;
}

// ProgressiveSpec defines the specification to progressively deploy a model to production
message ProgressiveSpec {
  // The time, in seconds, for the warm-up period
  // +kubebuilder:validation:Optional
  // +kubebuilder:validation:Maximum=100
  // +kubebuilder:validation:Minimum=0
  optional int32 warmup = 1;

  // The percentage of traffic to increment
  // +kubebuilder:validation:Maximum=10
  // +kubebuilder:validation:Minimum=1
  // +kubebuilder:validation:Optional
  optional int32 trafficIncrement = 2;

  // What metric to use when comparing the candidate model to the current model
  // +kubebuilder:validation:Optional
  repeated string canaryMetrics = 3;
}

