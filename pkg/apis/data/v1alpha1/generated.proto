/**
*
* Copyright (C) 2017 modeld authors
* For license information, see LICENSE.txt
*/
// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1;

import "github.com/metaprov/modeldapi/pkg/apis/catalog/v1alpha1/generated.proto";
import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1alpha1";

// Define the aggregation period
message AggregationSpec {
  optional string slidePeriod = 1;

  repeated FeatureAggrSpec aggregations = 2;
}

message ApiSpec {
  // URI is the uri of the api
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string topic = 1;

  // Connection refer to a connection object that point to secret
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference connectionRef = 2;
}

message Attachment {
  // Name is the name of the attachment.
  optional string name = 1;

  // Description is the description of the attachment
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string description = 2;

  // Location is the location of the attachment
  optional DataLocation location = 3;
}

message Column {
  // FileName specify the name of the attribute
  // +kubebuilder:validation:MaxLength=63
  // +kubebuilder:validation:MinLength=1
  optional string name = 1;

  // FileName specify the name of the feature, if this attribute comes from a feature
  // +kubebuilder:default:=""
  // +kubebuilder:validation:MaxLength=63
  // +kubebuilder:validation:Optional
  optional string featureName = 2;

  // Type specify the data type of the attribute
  // required
  optional string datatype = 3;

  // DataFormat is the domain of the column. A domain constrain the set of values.
  // +kubebuilder:validation:Optional
  optional string format = 4;

  // Description is a description of the feature
  // +kubebuilder:default:=""
  // +kubebuilder:validation:MaxLength=63
  // +kubebuilder:validation:Optional
  optional string description = 5;

  // Ignore specify if the attribute should be ignored when building the model
  // default is false
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool ignore = 6;

  // Label should be true if this attribute is the predictable target
  // Default is false
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool label = 7;

  // Nullable indicates if a column can contain string
  // Default is false
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool nullable = 8;

  // PrimaryKey denotes if this column is part of the file key.
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool pk = 9;

  // MultipleOf
  // +kubebuilder:default:=0
  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:validation:Optional
  optional int32 multipleOf = 10;

  // MaximumFloat
  // +kubebuilder:default:=0
  // +kubebuilder:validation:Optional
  optional double maximum = 11;

  // ExclusiveMaximum
  // +kubebuilder:validation:Optional
  optional bool exclusiveMaximum = 12;

  // MinimumFloat
  // +kubebuilder:default:=0
  // +kubebuilder:validation:Optional
  optional double minimum = 13;

  // ExclusiveMinimum
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool exclusiveMinimum = 14;

  // MaxLength
  // +kubebuilder:default:=0
  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:validation:Optional
  optional int32 maxLength = 15;

  // MinLength
  // +kubebuilder:default:=0
  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:validation:Optional
  optional int32 minLength = 16;

  // Pattern
  // Default is empty
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string pattern = 17;

  // Required
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool required = 18;

  // Title
  // +kubebuilder:default:=""
  // +kubebuilder:validation:MaxLength=63
  // +kubebuilder:validation:Optional
  optional string title = 19;

  // Example
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string example = 20;

  // External Docs
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string externalDocs = 21;

  // Enum
  // +kubebuilder:validation:Optional
  repeated string enum = 22;

  // Preprocessor hint constrain the transformer
  // Default is empty
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string transformerHint = 23;

  // Max Items in the data in case of a list
  // +kubebuilder:default:=0
  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:validation:Optional
  optional int32 maxItems = 24;

  // Min Items in the data in case of a list.
  // +kubebuilder:default:=0
  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:validation:Optional
  optional int32 minItems = 25;

  // Enforce that all the items in the list are unique
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool uniqueItems = 26;

  // TimeColumn is true if this column is used as the time axis in time series foreacst
  // Default is false.
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool timeColumn = 27;

  // Personally Identifiable information
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool pii = 28;

  // Personally Health information
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool phi = 29;

  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool personalData = 30;

  // Protected means that this feature is important for ethical AI / Fairness
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool protected = 31;

  // The following attribute concern with syntatic data and validation
  // DefaultValueNum is the default value for numbers
  optional double defaultValueNum = 32;

  // Log if true, values from this column will be sampled on logaritmic scale
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool log = 33;

  // Mu is the mean of the normal distribution
  // +kubebuilder:default:=0
  // +kubebuilder:validation:Optional
  optional double mu = 34;

  // Sigma is the standard deviation of the distribution
  // +kubebuilder:default:=0
  // +kubebuilder:validation:Optional
  optional double sigma = 35;

  // Skew treshold is the treshold for skew detection.
  // +kubebuilder:validation:Optional
  optional double skewThreshold = 36;

  // Drift treshold is the treshold for drift detection.
  // +kubebuilder:validation:Optional
  optional double driftThreshold = 37;
}

// Hold the statistical parameters about a single attribute
message ColumnStatistics {
  // FileName is the name of the column
  optional string name = 1;

  // Min is the minimum value of the attribute
  optional double min = 2;

  // Max is the maximum value of the attribute
  optional double max = 3;

  // Mean is the mean value of the attribute
  optional double mean = 4;

  // StdDev is the standard deviation value of the attribute
  optional double stddev = 5;

  // Skewness is the standard deviation value of the attribute
  optional double skewness = 6;

  // Kurtosis is the standard deviation value of the attribute
  optional double kurtosis = 7;

  // Zeros is the numbers of zeros in the feature
  optional double zeros = 8;

  // Pct25 is the 25 precent point
  optional double p25 = 10;

  // Pct50 is the median
  optional double p50 = 11;

  // Pct75 is the 75% point
  optional double p75 = 12;

  // The number of missing values
  optional int32 missing = 14;

  // The number of invalid values
  optional int32 invalid = 15;

  // Is this the target attribute, the value is derived from the schema
  optional bool target = 16;

  // The feature importance
  optional double importance = 17;

  optional int32 distinc = 18;

  // Should this column be ignored, as specified by the user.
  // This value is derived from the schema
  optional bool ignored = 19;

  // Is this column is nullable.
  // This value is derived from the schema.
  optional bool nullable = 20;

  // This column has high cardinality and should be ignored.
  // The value is set during the profile process.
  optional bool highCred = 21;

  // This column has high corrolation with another feature and should be dropped.
  // The value is set during the profile process.
  optional bool highCorr = 22;

  // Mark that this column is skewed and would require a power transform
  // If skewness is less than -1 or greater than 1, the distribution is highly skewed.
  // If skewness is between -1 and -0.5 or between 0.5 and 1, the distribution is moderately skewed.
  // If skewness is between -0.5 and 0.5, the distribution is approximately symmetric
  optional bool skew = 23;

  // Completeness is the ratio between non null to null
  optional double completeness = 24;

  // The ratio between distinc to total
  optional double distinctValueCount = 25;

  // The ratio between most freq value to total
  optional double mostFreqValuesRatio = 26;

  // Used for text attributes
  optional double indexOfPeculiarity = 27;
}

message ColumnValidation {
  // +kubebuilder:validation:Optional
  optional string type = 1;

  // +kubebuilder:validation:Optional
  optional string column = 2;

  // +kubebuilder:validation:Optional
  optional float min = 3;

  // +kubebuilder:validation:Optional
  optional float max = 4;

  // +kubebuilder:validation:Optional
  repeated string valueSet = 5;

  // +kubebuilder:validation:Optional
  optional bool strictMin = 6;

  // +kubebuilder:validation:Optional
  optional bool strictMax = 7;

  // Generated indicate weather this validation rule was automatically generated
  // +kubebuilder:validation:Optional
  optional bool generated = 8;
}

message CompilerSpec {
  // Compiler is the name of the compiler
  // +kubebuilder:validation:Optional
  optional string compiler = 1;

  // Targets is the list of targets
  // +kubebuilder:validation:Optional
  repeated string targets = 2;
}

// data reference contain pointers to the actual data objects
message DataLocation {
  // +kubebuilder:default:=""
  // Datasource name is a pointer to a data source for cases that the data location is not a simple bucket but a database
  // +kubebuilder:validation:Optional
  optional string datasourceName = 1;

  // +kubebuilder:default:=""
  // Bucketname is the name of the bucket
  // +kubebuilder:validation:Optional
  optional string bucketName = 2;

  // Path to the full data file (e.g. csv file).
  // +kubebuilder:validation:Optional
  optional string path = 3;
}

// DataOutputSpec is the definition of the out file.
message DataOutputSpec {
  // DatasetName is the name of the dataset that will be created. if nil, the system will not create the dataset.
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string datasetName = 1;

  // Location of the generated data
  // +kubebuilder:validation:Optional
  optional DataLocation location = 2;

  // Format is the format of the output data
  // +kubebuilder:default:="csv"
  // +kubebuilder:validation:Optional
  optional string format = 3;

  // Action define how the new data will be created
  // +kubebuilder:default:="upsert"
  // +kubebuilder:validation:Optional
  optional string action = 4;
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Schedule",type="string",JSONPath=".spec.schedule",description=""
// +kubebuilder:printcolumn:name="Last Run",type="date",JSONPath=".status.lastRun",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=datapipelines,singular=datapipeline,shortName="dpl",categories={data,modeld}
// DataPipeline represents the ETL flow from the data sources to a processed dataset, ready for training.
message DataPipeline {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DataPipelineSpec spec = 2;

  optional DataPipelineStatus status = 3;
}

// DataPipelineCondition describes the state of a wrangler at a certain point.
message DataPipelineCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 4;

  // The reason for the condition's last transition.
  optional string reason = 5;

  // A human readable message indicating details about the transition.
  optional string message = 6;
}

// +kubebuilder:object:root=true
// DataPipelineList contain the list of DataPipeline
message DataPipelineList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated DataPipeline items = 2;
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Pipeline",type="string",JSONPath=".spec.datapipelineName"
// +kubebuilder:printcolumn:name="StartTime",type="date",JSONPath=".status.startTime",priority=1
// +kubebuilder:printcolumn:name="CompletionTime",type="date",JSONPath=".status.completionTime",priority=1
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:path=datapipelineruns,singular=datapipelinerun,shortName="dpr",categories={data,modeld,all}
// DataPipelineRun represent one execution of the data pipeline
message DataPipelineRun {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DataPipelineRunSpec spec = 2;

  optional DataPipelineRunStatus status = 3;
}

// DataPipelineRunCondition describes the state of a data processor run at a certain point.
message DataPipelineRunCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 4;

  // The reason for the condition's last transition.
  optional string reason = 5;

  // A human readable message indicating details about the transition.
  optional string message = 6;
}

// +kubebuilder:object:root=true
// DataPipelineRunList contains a list of DataPipelineRun
message DataPipelineRunList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated DataPipelineRun items = 2;
}

// DataPipelineRunSpec defines the desired state of a schema
message DataPipelineRunSpec {
  // The data product version of the run
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string versionName = 1;

  // The data product
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string datapipelineName = 2;

  // The location of data artifacts that are generated during the run
  // +kubebuilder:validation:Optional
  optional DataLocation dataLocation = 3;

  // The owner of the run, set to the owner of the pipeline
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Pattern="[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"
  // +kubebuilder:validation:Optional
  optional string owner = 4;

  // WorkloadClassName is the name of the workload class used to run this pip0eline. This is assigned by the datapipelineeun
  // +kubebuilder:default:="nano-cpu-250m-mem-256mi"
  // +kubebuilder:validation:Optional
  optional string workloadClassName = 5;

  // The priority of this data pipeline. The defualt is medium.
  // +kubebuilder:default:=medium
  // +kubebuilder:validation:Optional
  optional string priority = 6;
}

// DataPipelineRunStatus defines the observed state of DataPipelineRun
message DataPipelineRunStatus {
  // RecipeRuns is the names of the recipe runs that occur during running of the pipeline.
  // +kubebuilder:validation:Optional
  repeated string recipeRuns = 1;

  // the resulting dataset from the flow
  // +kubebuilder:validation:Optional
  optional DataLocation output = 2;

  // the phase of the run
  // +kubebuilder:validation:Optional
  optional string phase = 3;

  // StartTime is the start time of the pipeline
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time startTime = 4;

  // CompletionTime is the end time of the pipeline
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time endTime = 5;

  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 6;

  // Last error
  // +kubebuilder:validation:Optional
  optional string lastError = 7;

  // +listType=map
  // +listMapKey=type
  // +kubebuilder:validation:Optional
  repeated DataPipelineRunCondition conditions = 8;
}

// DataPipelineSpec defines the desired state of a DataPipeline
message DataPipelineSpec {
  // VersionName is the data product version of the data pipeline
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string versionName = 1;

  // Description of the data pipeline
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string description = 2;

  // DatasetSelector is used to select datasets for processing in the pipeline
  // +kubebuilder:validation:Optional
  map<string, string> datasetSelector = 3;

  // RecipeOrder defines the list of recipes and the order they need to run
  // +kubebuilder:validation:Optional
  repeated RecipePartSpec recipes = 4;

  // The output definition
  // +kubebuilder:validation:Optional
  optional DataOutputSpec output = 5;

  // Schedule is a cron field to schedule the data pipeline.
  // +kubebuilder:validation:Optional
  optional string schedule = 6;

  // Owner of this data pipeline
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Pattern="[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"
  // +kubebuilder:validation:Optional
  optional string owner = 7;

  // WorkloadClassName is the name of the workload class used to run this pipeline. This is assigned by the datapipeline
  // +kubebuilder:default:="nano-cpu-250m-mem-256mi"
  // +kubebuilder:validation:Optional
  optional string workloadClassName = 8;

  // This is the default compiler spec
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modeldapi.pkg.apis.catalog.v1alpha1.CompilerSpec defaultCompilerSpec = 10;

  // The priority of this data pipeline. The defualt is medium.
  // +kubebuilder:default:=medium
  // +kubebuilder:validation:Optional
  optional string priority = 11;
}

// DataPipelineStatus is the observed state of the DataPipeline object.
message DataPipelineStatus {
  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 1;

  // Last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdated = 2;

  // Last run is the last time a data pipeline run was created
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastRun = 3;

  // +listType=map
  // +listMapKey=type
  // +kubebuilder:validation:Optional
  repeated DataPipelineCondition conditions = 4;
}

// DataProduct represent a single data product in the system
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status"
// +kubebuilder:printcolumn:name="Owner",type="string",JSONPath=".spec.owner"
// +kubebuilder:printcolumn:name="Bucket",type="string",JSONPath=".spec.dataLocation.bucketName"
// +kubebuilder:printcolumn:name="Lab",type="string",JSONPath=".spec.labName"
// +kubebuilder:printcolumn:name="Serving Site",type="string",JSONPath=".spec.servingSiteName"
// +kubebuilder:printcolumn:name="Image Repo",type="string",JSONPath=".spec.imageLocation.name"
// +kubebuilder:printcolumn:name="Task",type="string",JSONPath=".spec.task"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=dataproducts,shortName=prod,singular=dataproduct,shortName="prod",categories={data,modeld,all}
message DataProduct {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DataProductSpec spec = 2;

  optional DataProductStatus status = 3;
}

// DeploymentCondition describes the state of a deployment at a certain point.
message DataProductCondition {
  // Type of condition.
  optional string type = 1;

  // Status of the condition, one of True, False, AutoScaler.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 4;

  // The reason for the condition's last transition.
  optional string reason = 5;

  // A human readable message indicating details about the transition.
  optional string message = 6;
}

// +kubebuilder:object:root=true
// DataProductList contains a list of DataProducts
message DataProductList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated DataProduct items = 2;
}

// DataProductSpec defines the desired state of a data product
message DataProductSpec {
  // The data product owner
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 1;

  // The tenant that own the data product.
  // Default to default tenant.
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference tenantRef = 2;

  // Stake holders refer to a list of stackholders, which have interest in the product.
  // +kubebuilder:validation:Optional
  repeated StakeHolder stakeholders = 3;

  // GitLocation is the github repository for all the artifacts for this product
  // +kubebuilder:validation:Optional
  optional GitLocation gitLocation = 4;

  // ImageLocation is the image repository that stores the models images for the product versions
  // +kubebuilder:validation:Optional
  optional ImageLocation imageLocation = 5;

  // LabName is the Lab where models of this products are trained
  // +kubebuilder:validation:Pattern="[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"
  // +kubebuilder:validation:MaxLength=63
  // +kubebuilder:validation:Optional
  optional string labName = 7;

  // ServingSiteName is the serving site where predictors of this product are deployed
  // +kubebuilder:validation:MaxLength=63
  // +kubebuilder:validation:Pattern="[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"
  // +kubebuilder:validation:Optional
  optional string servingSiteName = 8;

  // Task denote the machine learning task of the product (classification/regression,etc.)
  // +kubebuilder:validation:Optional
  optional string task = 9;

  // User provided description
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  // +kubebuilder:validation:MaxLength=512
  optional string description = 10;

  // This folder contain the root location for all the artifacts from the product.
  // +kubebuilder:validation:Optional
  optional DataLocation dataLocation = 11;

  // the notifier selector select the notifier for events that occur in the product life cycle.
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string notifierName = 12;

  // DefaultWorkloadClassName is reference to the workload class used for running product tasks.
  // +kubebuilder:default:="nano-cpu-250m-mem-256mi"
  // +kubebuilder:validation:Optional
  optional string defaultWorkloadClassName = 13;

  // Denote how many time a job is retry after failure
  // +kubebuilder:default:=3
  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:validation:Maximum=10
  // +kubebuilder:validation:Optional
  optional int32 retriesOnFailure = 14;

  // KPIs is the product kpi. This is for information porpose
  // +kubebuilder:validation:Optional
  repeated KPI kpis = 15;

  // OnCallAccountName is the name of the account on call.
  // +kubebuilder:validation:Optional
  optional string onCallAccountName = 17;

  // List of documents attached to the this data product
  // +kubebuilder:validation:Optional
  repeated Attachment attachments = 18;

  // List of documents attached to the this data product
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modeldapi.pkg.apis.catalog.v1alpha1.CompilerSpec compilation = 19;

  // The clearance level of this data product
  // +kubebuilder:default:=unclassified
  // +kubebuilder:validation:Optional
  optional string clearenceLevel = 20;

  // Default Priority level assigned to jobs for this data product (e.g. study, model pipeline,etc)
  // +kubebuilder:validation:Optional
  // +kubebuilder:default:="medium"
  optional string priority = 21;
}

// DataProductStatus defines the observed state of DataProduct
message DataProductStatus {
  // LastModelVersion is used to automatically associate model version with final models.
  optional int32 lastModelVersion = 1;

  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 2;

  // Last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdated = 3;

  // The last study id generated for this product.
  optional int64 lastStudyID = 4;

  // +listType=map
  // +listMapKey=type
  // +kubebuilder:validation:Optional
  repeated DataProductCondition conditions = 5;
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Owner",type="string",JSONPath=".spec.owner"
// +kubebuilder:printcolumn:name="Entity",type="string",JSONPath=".spec.productRef.name",description=""
// +kubebuilder:printcolumn:name="Base",type="boolean",JSONPath=".spec.baseline",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=dataproductversions,shortName=dpv,singular=dataproductversion,categories={data,modeld,all}
// DataProductVersion represent a version of the data product. A version is usually created when a new
// data was gathered for the same product.
message DataProductVersion {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DataProductVersionSpec spec = 2;

  // +optional
  optional DataProductVersionStatus status = 3;
}

// DataProductVersionCondition describes the state of a DataProductVersion at a certain point.
message DataProductVersionCondition {
  // Type of condition.
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 4;

  // The reason for the condition's last transition.
  optional string reason = 5;

  // A human readable message indicating details about the transition.
  optional string message = 6;
}

// +kubebuilder:object:root=true
// DataProductVersionList contains a list of DataProductVersion
message DataProductVersionList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated DataProductVersion items = 2;
}

// DataProductVersionSpec defines the desired state of a data product version
message DataProductVersionSpec {
  // Reference to the product reference
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference productRef = 1;

  // Description is user provided description
  // +kubebuilder:validation:Optional
  // +kubebuilder:default:=""
  // +kubebuilder:validation:MaxLength=512
  optional string description = 2;

  // PrevVersionName is a pointer to the version that we derived from
  // +kubebuilder:validation:MaxLength=63
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string prevVersionName = 3;

  // Baseline denote if this product version a baseline. If a product version is a baseline, we can garbage
  // collect all the parents' product versions
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool baseline = 4;

  // The owner account name
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 5;
}

// DataProductVersionStatus defines the observed state of DataProductVersion
message DataProductVersionStatus {
  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 3;

  // +listType=map
  // +listMapKey=type
  // +kubebuilder:validation:Optional
  repeated DataProductVersionCondition conditions = 2;
}

// DataSource represent source of the data in the system. The spec consist of schema
// +kubebuilder:object:root=true
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Owner",type="string",JSONPath=".spec.owner"
// +kubebuilder:printcolumn:name="Version",type="string",JSONPath=".spec.versionName"
// +kubebuilder:printcolumn:name="Type",type="string",JSONPath=".spec.type"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:path=datasources,singular=datasource,shortName="dsrc",categories={data,modeld,all}
message DataSource {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DataSourceSpec spec = 2;

  // +optional
  optional DataSourceStatus status = 3;
}

// DataSourceCondition describes the state of a datasource at a certain point.
message DataSourceCondition {
  // Type of condition.
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 4;

  // The reason for the condition's last transition.
  optional string reason = 5;

  // A human readable message indicating details about the transition.
  optional string message = 6;
}

// +kubebuilder:object:root=true
// DataSourceList contain a list of DataSource objects
message DataSourceList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated DataSource items = 2;
}

message DataSourceSpec {
  // The account name of the owner of this dataset
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string ownerName = 1;

  // The version of the flat file.
  // +kubebuilder:validation:MaxLength=63
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string versionName = 2;

  // User provided description of the data source
  // +kubebuilder:default:=""
  // +kubebuilder:validation:MaxLength=512
  // +kubebuilder:validation:Optional
  optional string description = 3;

  // The data source schema
  optional Schema schema = 4;

  // The data source type.
  optional string type = 5;

  // FlatFile access specification
  // +kubebuilder:validation:Optional
  optional FlatFileSpec file = 6;

  // Table access specification if the data source is a table
  // +kubebuilder:validation:Optional
  optional TableSpec table = 7;

  // Stream define the specification of the stream
  // +kubebuilder:validation:Optional
  optional StreamSpec stream = 8;

  // Api define the specification of the api
  // +kubebuilder:validation:Optional
  optional ApiSpec api = 9;

  // The owner account name
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 10;

  // Type is the dataset type
  // +kubebuilder:default:="tabular"
  // +kubebuilder:validation:Optional
  optional string datasetType = 17;

  // Sample spec defines how many rows to use for analysis for datasets from this datasource.
  optional SampleSpec sample = 18;
}

// FlatFileStatus defines the observed state of FlatFileSpec
message DataSourceStatus {
  // number of columns in the data source
  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:validation:Optional
  optional int32 cols = 1;

  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 2;

  // Last time an dataset from this datasource was created.
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastDatasetCreated = 3;

  // Last dataset name
  // +kubebuilder:validation:Optional
  optional string lastDatasetName = 4;

  // Last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdated = 5;

  // +listType=map
  // +listMapKey=type
  // +kubebuilder:validation:Optional
  repeated DataSourceCondition conditions = 6;
}

message DataValidationResult {
  optional string type = 1;

  optional string column = 2;

  optional string error = 3;

  optional bool passed = 4;
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Owner",type="string",JSONPath=".spec.owner"
// +kubebuilder:printcolumn:name="Version",type="string",JSONPath=".spec.versionName"
// +kubebuilder:printcolumn:name="Data Source",type="string",JSONPath=".spec.datasourceName"
// +kubebuilder:printcolumn:name="Type",type="string",JSONPath=".spec.type"
// +kubebuilder:printcolumn:name="Rows",type="integer",JSONPath=".status.statistics.rows"
// +kubebuilder:printcolumn:name="Columns",type="integer",JSONPath=".status.statistics.cols"
// +kubebuilder:printcolumn:name="Size",type="integer",JSONPath=".status.statistics.fileSize"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=datasets,shortName=dset,singular=dataset,categories={data,modeld,all}
// Dataset represents a single batch of data
message Dataset {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DatasetSpec spec = 2;

  // +optional
  optional DatasetStatus status = 3;
}

// DatasetCondition describes the state of a dataset at a certain point.
message DatasetCondition {
  optional string type = 1;

  // Status of the condition, one of True, False, AutoScaler.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 4;

  // The reason for the condition's last transition.
  // +kubebuilder:validation:Optional
  optional string reason = 5;

  // A human readable message indicating details about the transition.
  // +kubebuilder:validation:Optional
  optional string message = 6;
}

// +kubebuilder:object:root=true
// DatasetList contains a list of Datasets
message DatasetList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Dataset items = 2;
}

// DatasetSpec defines the desired state of a dataset
message DatasetSpec {
  // The account name of the owner of this dataset
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 1;

  // VersionName is the data product version of the dataset
  // +kubebuilder:default:=""
  // +kubebuilder:validation:MaxLength=63
  // +kubebuilder:validation:Required
  optional string versionName = 2;

  // DataSourceName is the name of the data source which created this dataset. For example flat file
  // +kubebuilder:validation:Required
  // +kubebuilder:validation:MaxLength=63
  // +kubebuilder:default:=""
  optional string datasourceName = 3;

  // User provided description
  // +kubebuilder:validation:MaxLength=512
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string description = 4;

  // If true, a dataset report should be generated for this dataset.
  // +kubebuilder:default:=true
  // +kubebuilder:validation:Optional
  optional bool report = 7;

  // If true, we should validate the dataset
  // +kubebuilder:default:=true
  // +kubebuilder:validation:Optional
  optional bool validate = 8;

  // Labeled indicates if this dataset is labeled or not.
  // +kubebuilder:default:=true
  // +kubebuilder:validation:Optional
  optional bool labeled = 10;

  // Syntactic indicates if we want to generate this dataset based on the data source
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool syntatic = 11;

  // If syntactic is true, indicates how many rows to generate
  // +kubebuilder:default:=0
  // +kubebuilder:validation:Optional
  optional int32 syntacticRows = 12;

  // Define the data location. The operator will copy the data from this location into the live location.
  // The datafiles are initially uploaded to this location.
  // +kubebuilder:validation:Optional
  optional DataLocation origin = 13;

  // Folder of the actual data resides.
  // +kubebuilder:validation:Required
  optional DataLocation location = 14;

  // A reference to the workload class this is used to analyze the workload
  // +kubebuilder:default:="nano-cpu-250m-mem-256mi"
  // +kubebuilder:validation:Optional
  optional string workloadClassName = 15;

  // ActiveDeadlineSeconds is the deadline of a job for this dataset.
  // +kubebuilder:default:=600
  // +kubebuilder:validation:Optional
  optional int64 activeDeadlineSeconds = 16;

  // DatasetType is the type of dataset
  // +kubebuilder:default:="tabular"
  // +kubebuilder:validation:Optional
  optional string type = 17;

  // Sample spec defines how many rows to use for analysis
  // +kubebuilder:validation:Optional
  optional SampleSpec sample = 18;
}

// DatasetStatistics contains statistics about attributes and correltation between attributes
message DatasetStatistics {
  // Columns contain the collection of statistics for each attribute
  // +kubebuilder:validation:Optional
  repeated ColumnStatistics columns = 1;

  // number of rows in the dataset
  // +kubebuilder:validation:Optional
  optional int32 rows = 3;

  // number of columns, used mainly to show the columns in the kubectl
  // +kubebuilder:validation:Optional
  optional int32 cols = 4;

  // file size in bytes
  // +kubebuilder:validation:Optional
  optional int32 fileSize = 5;
}

// DatasetStatus defines the observed state of Dataset
message DatasetStatus {
  // Statistics for the dataset. The statistics contain information about each column.
  // +kubebuilder:validation:Optional
  optional DatasetStatistics statistics = 1;

  // The phase of the dataset processing
  // +kubebuilder:validation:Optional
  optional string phase = 2;

  // Reference to the report object that was generated for the dataset
  // +kubebuilder:validation:Optional
  optional string reportName = 3;

  // A reference to the visualization uri which were produce during processing
  // +kubebuilder:validation:Optional
  optional string profileUri = 4;

  // Based on the actual data, treat this dataset as imbalanced.
  // +kubebuilder:validation:Optional
  optional bool imbalanced = 5;

  // Sha256 sig of the files
  // +kubebuilder:validation:Optional
  optional Signatures sigs = 6;

  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 7;

  // List of data problems, as reported by the validation process
  // +kubebuilder:validation:Optional
  repeated DataValidationResult validationResults = 9;

  // Last time a study was done on the dataset.
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastStudyTime = 10;

  // Last error
  // +kubebuilder:validation:Optional
  optional string lastError = 11;

  // +listType=map
  // +listMapKey=type
  // +kubebuilder:validation:Optional
  repeated DatasetCondition conditions = 8;
}

// DatasetTemplate is  used to generate new datasets
message DatasetTemplate {
  // Standard object's metadata.
  // More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DatasetSpec spec = 2;
}

message DatasetValidation {
  // +kubebuilder:validation:Optional
  optional string type = 1;

  // +kubebuilder:validation:Optional
  optional float min = 2;

  // +kubebuilder:validation:Optional
  optional float max = 3;

  // +kubebuilder:validation:Optional
  repeated string valueSet = 4;

  // +kubebuilder:validation:Optional
  optional bool strictMin = 5;

  // +kubebuilder:validation:Optional
  optional bool strictMax = 6;

  // Generated indicate weather this validation rule was automatically generated
  // +kubebuilder:validation:Optional
  optional bool generated = 7;
}

message Entity {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional EntitySpec spec = 2;

  // +optional
  optional EntityStatus status = 3;
}

// EntityCondition describes the state of a deployment at a certain point.
message EntityCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 7;

  // The reason for the condition's last transition.
  optional string reason = 4;

  // A human readable message indicating details about the transition.
  optional string message = 5;
}

// +kubebuilder:object:root=true
// EntityList contains a list of Entity
message EntityList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Entity items = 2;
}

// EntitySpec contain the desired state of a Entity.
message EntitySpec {
  // The product version of the entity
  // +kubebuilder:default:=""
  optional string versionName = 1;

  // Description of the entity
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  // +kubebuilder:validation:MaxLength=512
  optional string description = 2;

  // Keys are the features that create a unique key to the entity.
  // +kubebuilder:validation:Optional
  repeated string keys = 3;

  // Owner of this Entity
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Pattern="[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"
  // +kubebuilder:validation:Optional
  optional string owner = 4;
}

// EntityStatus defines the observed state of Entity
message EntityStatus {
  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 1;

  // +listType=map
  // +listMapKey=type
  // +kubebuilder:validation:Optional
  repeated EntityCondition conditions = 2;
}

// Feature represent a single feature in the feature store.
// +kubebuilder:object:root=true
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Owner",type="string",JSONPath=".spec.owner"
// +kubebuilder:printcolumn:name="Version",type="string",JSONPath=".spec.versionName"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=features,singular=feature,categories={data,modeld}
// +kubebuilder:subresource:status
message Feature {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional FeatureSpec spec = 2;

  // +optional
  optional FeatureStatus status = 3;
}

message FeatureAggrSpec {
  // The column
  optional string column = 1;

  // The aggregation function
  repeated string functions = 2;

  // List of windows functions
  repeated string windows = 3;
}

// FeatureCondition describes the state of a deployment at a certain point.
message FeatureCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, AutoScaler.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 7;

  // The reason for the condition's last transition.
  optional string reason = 4;

  // A human readable message indicating details about the transition.
  optional string message = 5;
}

// +kubebuilder:object:root=true
// FeatureList contain a list of feature objects
message FeatureList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Feature items = 2;
}

// FeaturePipeline represent the processing of feature in the store.
// +kubebuilder:object:root=true
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Version",type="string",JSONPath=".spec.versionName"
// +kubebuilder:printcolumn:name="Schedule",type="string",JSONPath=".spec.schedule",description=""
// +kubebuilder:printcolumn:name="Last Run",type="date",JSONPath=".status.lastRun",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=featurepipelines,singular=featurepipeline,shortName="fp",categories={data,modeld}
// +kubebuilder:subresource:status
message FeaturePipeline {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional FeaturePipelineSpec spec = 2;

  optional FeaturePipelineStatus status = 3;
}

// FeaturePipelineCondition describes the state of a deployment at a certain point.
message FeaturePipelineCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, AutoScaler.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 7;

  // The reason for the condition's last transition.
  optional string reason = 4;

  // A human readable message indicating details about the transition.
  optional string message = 5;
}

// +kubebuilder:object:root=true
// FeatureList contain a list of feature objects
message FeaturePipelineList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated FeaturePipeline items = 2;
}

// FeaturePipeline represent a feature set object in the feature store.
// +kubebuilder:object:root=true
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Owner",type="string",JSONPath=".spec.owner"
// +kubebuilder:printcolumn:name="Version",type="string",JSONPath=".spec.versionName"
// +kubebuilder:printcolumn:name="Pipeline",type="string",JSONPath=".spec.pipelineName"
// +kubebuilder:printcolumn:name="StartTime",type="date",JSONPath=".status.startTime",priority=1
// +kubebuilder:printcolumn:name="CompletionTime",type="date",JSONPath=".status.completionTime",priority=1
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=featurepipelineruns,shortName=fpr,singular=featurepipelinerun,categories={data,modeld}
// +kubebuilder:subresource:status
message FeaturePipelineRun {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional FeaturePipelineRunSpec spec = 2;

  // +optional
  optional FeaturePipelineRunStatus status = 3;
}

// FeaturePipelineRunCondition describes the state of a deployment at a certain point.
message FeaturePipelineRunCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, AutoScaler.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 7;

  // The reason for the condition's last transition.
  optional string reason = 4;

  // A human readable message indicating details about the transition.
  optional string message = 5;
}

// FeaturePipelineRunList contain a list of FeaturePipelineRun objects
// +kubebuilder:object:root=true
message FeaturePipelineRunList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated FeaturePipelineRun items = 2;
}

// FeatureSpec contain the desired state of a Feature
message FeaturePipelineRunSpec {
  // The feature owner
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Pattern="[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"
  // +kubebuilder:validation:Optional
  optional string owner = 1;

  // The product version for the feature.
  // +kubebuilder:validation:Pattern="[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"
  // +kubebuilder:validation:Optional
  optional string versionName = 2;

  // FileName specify the name of the attribute
  // +kubebuilder:validation:Pattern="[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"
  // +kubebuilder:validation:MaxLength=64
  optional string featurePipelineName = 3;

  // A reference to the workload class that is used for running the workload class. this is setup based on the feature pipeline
  // +kubebuilder:default:="nano-cpu-250m-mem-256mi"
  // +kubebuilder:validation:Optional
  optional string workloadClassName = 4;
}

// FeatureStatus defines the observed state of Feature
message FeaturePipelineRunStatus {
  // The Start time of the run
  // +option
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time startTime = 1;

  // The End time of the run
  // +option
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time endTime = 2;

  // The phase of the dataset processing
  // +kubebuilder:validation:Optional
  optional string phase = 3;

  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 4;

  // +listType=map
  // +listMapKey=type
  // +kubebuilder:validation:Optional
  repeated FeaturePipelineRunCondition conditions = 5;
}

// FeaturePipelineSpec contain the desired state of a FeaturePipeline
message FeaturePipelineSpec {
  // Owner is the owner of the feature pipeline
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Pattern="[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"
  // +kubebuilder:validation:Optional
  optional string owner = 1;

  // DatasetSelector is used to select datasets to process the features from.
  // +kubebuilder:validation:Optional
  map<string, string> datasetSelector = 2;

  // Version name is the the product version for the feature.
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string versionName = 3;

  // Description of the feature pipeline
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  // +kubebuilder:validation:MaxLength=512
  optional string description = 4;

  // Aggregation is the aggregation spec
  // +kubebuilder:validation:Optional
  optional AggregationSpec aggregation = 5;

  // Materialization
  optional MaterializationSpec materialization = 6;

  // Family is the feature family
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string family = 7;

  // Reference to the entity name
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string entityName = 8;

  // A reference to the workload class that is used for running the workload class
  // +kubebuilder:default:="nano-cpu-250m-mem-256mi"
  // +kubebuilder:validation:Optional
  optional string workloadClassName = 9;

  // Schedule for running the pipeline
  // +kubebuilder:validation:Optional
  optional string schedule = 10;

  // ActiveDeadlineSeconds is the deadline setup on jobs for this labeling pipeline.
  // +kubebuilder:default:=600
  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:validation:Optional
  optional int64 activeDeadlineSeconds = 11;
}

// FeatureStatus defines the observed state of Feature
message FeaturePipelineStatus {
  // Last run is the last time a run was created
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastRun = 1;

  // Store the avg cost of running this pipeline
  optional double averageCost = 2;

  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 3;

  // +listType=map
  // +listMapKey=type
  // +kubebuilder:validation:Optional
  repeated FeaturePipelineCondition conditions = 4;
}

// FeatureSpec contain the desired state of a Feature
message FeatureSpec {
  // The feature owner
  // +kubebuilder:validation:Optional
  // +kubebuilder:default:="no-one"
  optional string owner = 1;

  // The product version for the feature.
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string versionName = 2;

  // Comments is a description of the feature
  // +kubebuilder:validation:Optional
  // +kubebuilder:default:=""
  // +kubebuilder:validation:MaxLength=512
  optional string description = 3;

  // Type name of the column key, this column is the key column in the entity.
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string keyColumn = 5;

  // The name of the time stamp column
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string timestampColumn = 6;

  // The name of the feature column
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string featureColumn = 7;

  // The name of the entity containing this feature
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string entityName = 8;

  // The name of the feature pipeline that is producing this feature
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string featurePipelineName = 9;
}

// FeatureStatus defines the observed state of Feature
message FeatureStatus {
  // Min is the minimum value of the attribute
  optional double min = 2;

  // Max is the maximum value of the attribute
  optional double max = 3;

  // Mean is the mean value of the attribute
  optional double mean = 4;

  // StdDev is the standard deviation value of the attribute
  optional double stddev = 5;

  // Skewness is the standard deviation value of the attribute
  optional double skewness = 6;

  // Kurtosis is the standard deviation value of the attribute
  optional double kurtosis = 7;

  // Zeros is the numbers of zeros in the feature
  optional double zeros = 8;

  // Pct25 is the 25 precent point
  optional double p25 = 10;

  // Pct50 is the median
  optional double p50 = 11;

  // Pct75 is the 75% point
  optional double p75 = 12;

  // The number of missing values
  // +kubebuilder:validation:Minimum=0
  optional int32 missing = 14;

  // The number of invalid values
  // +kubebuilder:validation:Minimum=0
  optional int32 invalid = 15;

  // Is this the target attribute, the value is derived from the schema
  optional bool target = 16;

  // The feature importance
  optional double importance = 17;

  optional int32 distinc = 18;

  // Should this column be ignored, as specified by the user.
  // This value is derived from the schema
  optional bool ignored = 19;

  // Is this column is nullable.
  // This value is derived from the schema.
  optional bool nullable = 20;

  // This column has high cardinality and should be ignored.
  // The value is set during the profile process.
  optional bool highCred = 21;

  // This column has high corrolation with another feature and should be dropped.
  // The value is set during the profile process.
  optional bool highCorr = 22;

  // Mark that this column is skewed and would require a power transform
  // If skewness is less than -1 or greater than 1, the distribution is highly skewed.
  // If skewness is between -1 and -0.5 or between 0.5 and 1, the distribution is moderately skewed.
  // If skewness is between -0.5 and 0.5, the distribution is approximately symmetric
  optional bool skew = 23;

  // Completeness is the ratio between non null to null
  optional double completeness = 24;

  // The ratio between distinc to total
  optional double distinctValueCount = 25;

  // The ratio between most freq value to total
  optional double mostFreqValuesRatio = 26;

  // Used for text attributes
  optional double indexOfPeculiarity = 27;

  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 28;

  // +listType=map
  // +listMapKey=type
  // +kubebuilder:validation:Optional
  repeated FeatureCondition conditions = 29;
}

// Featureset represents a featureset object
// +kubebuilder:object:root=true
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Version",type="string",JSONPath=".spec.versionName"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=featuresets,singular=featureset,shortName=fset,categories={data,modeld}
// +kubebuilder:subresource:status
message Featureset {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional FeaturesetSpec spec = 2;

  // +optional
  optional FeaturesetStatus status = 3;
}

// FeaturesetCondition describes the state of a deployment at a certain point.
message FeaturesetCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // The reason for the condition's last transition.
  optional string reason = 4;

  // A human readable message indicating details about the transition.
  optional string message = 5;
}

// +kubebuilder:object:root=true
// FeaturesetList contains a list of Featureset
message FeaturesetList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Featureset items = 2;
}

// FeaturesetSpec contain the desired state of a Featureset.
message FeaturesetSpec {
  // The product version of the featureset
  // +kubebuilder:default:=""
  optional string versionName = 1;

  // User provided description
  // +kubebuilder:validation:Optional
  // +kubebuilder:default:=""
  // +kubebuilder:validation:MaxLength=512
  optional string description = 2;

  // Reference to the feature names of this featureset
  repeated string features = 3;

  // The owner account name
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 4;
}

// FeaturesetStatus defines the observed state of Featureset
message FeaturesetStatus {
  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 1;

  // +listType=map
  // +listMapKey=type
  // +kubebuilder:validation:Optional
  repeated FeaturesetCondition conditions = 2;
}

message FlatFileSpec {
  // The text file type
  // Default: csv
  // +kubebuilder:default:="csv"
  // +kubebuilder:validation:Optional
  optional string fileType = 4;

  // Refers to the character used to separate fields.
  // Default to comma
  // +kubebuilder:validation:Optional
  optional string delimiter = 5;

  // The quata char.
  // +kubebuilder:validation:Optional
  optional string quote = 6;

  // the char used to escape the delimiter when quoting
  // +kubebuilder:validation:Optional
  optional string escapeChar = 7;

  // CommentCharacter(s) to split comments off the end of lines.
  // +kubebuilder:validation:Optional
  optional string commentChars = 8;

  // Check if there is an header
  // +kubebuilder:default:=true
  // +kubebuilder:validation:Optional
  optional bool header = 9;

  // The number of rows to skip
  // +kubebuilder:default:=0
  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:validation:Optional
  optional int32 skipRows = 10;

  // NullValue is a sequence of values to replace with NA.
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string nullValues = 11;

  // Encoding for Unicode (e.g., 'utf-8' for UTF-8 encoded text).
  // +kubebuilder:default:="utf-8"
  // +kubebuilder:validation:Optional
  optional string encoding = 12;

  // The maximum number of rows to read.
  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:validation:Optional
  optional int32 maxRows = 13;

  // If true, the import will fail if there is an error
  // +kubebuilder:default:=true
  // +kubebuilder:validation:Optional
  optional bool strict = 14;
}

message GitLocation {
  // GitConnectionName
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string gitConnectionName = 1;

  // URL of the stakeholder
  // +kubebuilder:default:=""
  // +kubebuilder:validation:MaxLength=256
  optional string url = 2;

  // Branch in git repo
  // +kubebuilder:default:=""
  // +kubebuilder:validation:MaxLength=256
  optional string branch = 3;

  // Private is True if the repository is private.
  optional bool private = 4;
}

message ImageLocation {
  // The canonical name of the image repo.
  // The default value is docker/productname
  // +kubebuilder:default:=""
  // +kubebuilder:validation:MaxLength=256
  // optional
  optional string name = 1;

  // The connection of the docker registry provider
  // +kubebuilder:default:=""
  // If the value is empty, the system will not push images.
  // optional
  optional string registryConnectionName = 2;
}

message KPI {
  // Name is the name of the kpi
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string name = 1;

  // Value is the desired value
  optional double value = 2;
}

// LabelingPipeline represents the ETL flow from the data sources to a processed dataset, ready for training.
// +kubebuilder:object:root=true
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:subresource:status
// +kubebuilder:resource:path=labelingpipelines,singular=labelingpipeline,shortName=lp,categories={data,modeld}
message LabelingPipeline {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional LabelingPipelineSpec spec = 2;

  // +optional
  optional LabelingPipelineStatus status = 3;
}

// LabelingPipelineCondition describes the state of a wrangler at a certain point.
message LabelingPipelineCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // The reason for the condition's last transition.
  optional string reason = 4;

  // A human readable message indicating details about the transition.
  optional string message = 5;
}

// +kubebuilder:object:root=true
// LabelingPipelineList contain the list of LabelingPipeline
message LabelingPipelineList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated LabelingPipeline items = 2;
}

// LabelingPipeline represent a feature set object in the feature store.
// +kubebuilder:object:root=true
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Owner",type="string",JSONPath=".spec.owner"
// +kubebuilder:printcolumn:name="Version",type="string",JSONPath=".spec.versionName"
// +kubebuilder:printcolumn:name="Pipeline",type="string",JSONPath=".spec.labelPipelineName"
// +kubebuilder:printcolumn:name="StartTime",type="date",JSONPath=".status.startTime",priority=1
// +kubebuilder:printcolumn:name="CompletionTime",type="date",JSONPath=".status.completionTime",priority=1
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=labelingpipelineruns,singular=labelingpipelinerun,shortName=lpr,categories={data,modeld}
// +kubebuilder:subresource:status
message LabelingPipelineRun {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional LabelingPipelineRunSpec spec = 2;

  optional LabelingPipelineRunStatus status = 3;
}

// LabelingPipelineRunCondition describes the state of a deployment at a certain point.
message LabelingPipelineRunCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, AutoScaler.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // The reason for the condition's last transition.
  optional string reason = 4;

  // A human readable message indicating details about the transition.
  optional string message = 5;
}

// +kubebuilder:object:root=true
message LabelingPipelineRunList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated LabelingPipelineRun items = 2;
}

// LabelSpec contain the desired state of a Label
message LabelingPipelineRunSpec {
  // The owner of the LabelingPipelineRunSpec
  // +kubebuilder:default:="no-one"
  optional string owner = 1;

  // The product version for the pipeline
  // +kubebuilder:validation:Optional
  optional string versionName = 2;

  // LabelPipelineName specifies the name of LabelingPipeline
  // +kubebuilder:validation:MaxLength=64
  // +kubebuilder:default:=""
  optional string labelPipelineName = 3;

  // WorkloadClassName is the name of the workload class used to run this pipeline.
  // +kubebuilder:default:="default-workload-class"
  // +kubebuilder:validation:Optional
  optional string workloadClassName = 4;
}

// LabelPipelineRunStatus defines the observed state of Label
message LabelingPipelineRunStatus {
  // The phase of the labeling pipeline run
  optional string phase = 1;

  // The Start time of the run
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time startTime = 2;

  // The End time of the run
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time endTime = 3;

  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 4;

  // +listType=map
  // +listMapKey=type
  // +kubebuilder:validation:Optional
  repeated LabelingPipelineRunCondition conditions = 5;
}

// LabelingPipelineSpec defines the desired state of a LabelingPipeline
message LabelingPipelineSpec {
  // The product of the rejoiner
  optional string versionName = 1;

  // User provided description
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string description = 2;

  // DatasetSelector is used to select unlabeled dataset for labeling
  // +kubebuilder:validation:Optional
  map<string, string> datasetSelector = 3;

  // The recipe for this pipeline.
  // +kubebuilder:validation:Optional
  repeated string recipeNames = 4;

  // The output file of the pipeline
  // +kubebuilder:validation:Optional
  optional string outputLabelset = 5;

  // Schedule for running the pipeline
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modeldapi.pkg.apis.catalog.v1alpha1.RunSchedule schedule = 6;

  // The owner account name
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 7;

  // WorkloadClassName is the name of the workload class used to run this pipeline.
  // +kubebuilder:default:="default-workload-class"
  // +kubebuilder:validation:Optional
  optional string workloadClassName = 8;

  // ActiveDeadlineSeconds is the deadline setup on jobs for this labeling pipeline.
  // +kubebuilder:default:=600
  // +kubebuilder:validation:Optional
  optional int64 activeDeadlineSeconds = 9;
}

// LabelingPipelineStatus is the observed state of the LabelingPipeline object.
message LabelingPipelineStatus {
  // Last run is the last time a run was created
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastRun = 1;

  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 2;

  // +listType=map
  // +listMapKey=type
  // +kubebuilder:validation:Optional
  repeated LabelingPipelineCondition conditions = 3;
}

message MaterializationSpec {
  // If true, update the online store
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool online = 1;

  // If true update the offline store.
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool offline = 2;

  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time startDate = 3;

  // +kubebuilder:validation:Optional
  // +kubebuilder:default:=""
  optional string scheduleInterval = 4;

  // +kubebuilder:validation:Optional
  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:default:=0
  optional int32 ttl = 5;

  // Number of days to store information from the past in the feature store.
  // +kubebuilder:validation:Optional
  // +kubebuilder:default:=21
  // +kubebuilder:validation:Minimum=0
  optional int32 backfill = 6;
}

message MultiColumnValidation {
  // +kubebuilder:validation:Optional
  optional string type = 1;

  // +kubebuilder:validation:Optional
  repeated string columns = 2;

  // +kubebuilder:validation:Optional
  optional float min = 3;

  // +kubebuilder:validation:Optional
  optional float max = 4;

  // +kubebuilder:validation:Optional
  repeated string valueSet = 5;

  // +kubebuilder:validation:Optional
  optional bool strictMin = 6;

  // +kubebuilder:validation:Optional
  optional bool strictMax = 7;

  // Generated indicate weather this validation rule was automatically generated
  // +kubebuilder:validation:Optional
  optional bool generated = 8;
}

message MultiDatasetValidation {
  // +kubebuilder:validation:Optional
  optional string type = 1;

  // +kubebuilder:validation:Optional
  repeated string datasets = 2;

  // Generated indicate weather this validation rule was automatically generated
  // +kubebuilder:validation:Optional
  optional bool generated = 3;
}

// Recipe represents a single batch of data
// +kubebuilder:object:root=true
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status"
// +kubebuilder:printcolumn:name="Owner",type="string",JSONPath=".spec.owner"
// +kubebuilder:printcolumn:name="Version",type="string",JSONPath=".spec.versionName"
// +kubebuilder:printcolumn:name="Last Run",type="date",JSONPath=".status.lastRun",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:subresource:status
// +kubebuilder:resource:path=recipes,shortName=rc,singular=recipe,categories={data,modeld,all}
message Recipe {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional RecipeSpec spec = 2;

  optional RecipeStatus status = 3;
}

// RecipeCondition describes the state of a dataset at a certain point.
message RecipeCondition {
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // The reason for the condition's last transition.
  // +kubebuilder:validation:Optional
  optional string reason = 4;

  // A human readable message indicating details about the transition.
  // +kubebuilder:validation:Optional
  optional string message = 5;
}

// RecipeInputSpec specify the input for a recipe
message RecipeInputSpec {
  // DatasetName is the name of the dataset
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string datasetName = 1;

  // Location is the folder of the actual data resides, if not using dataset
  // +required.
  optional DataLocation location = 2;

  // Format is the dataset format
  // +kubebuilder:default:=csv
  optional string format = 3;
}

// +kubebuilder:object:root=true
// RecipeList contains a list of Recipes
message RecipeList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Recipe items = 2;
}

// RecipeOutputSpec for the recipe output
message RecipeOutputSpec {
  // CreateDataset if true, create a new dataset when the recipe is done.
  // +kubebuilder:validation:Optional
  optional bool createDataset = 1;

  // DatasetName is the name of the dataset output to the recipe
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string datasetName = 2;

  // Location is the data location folder of the actual data resides.
  // +kubebuilder:validation:Required
  optional DataLocation location = 3;
}

message RecipePartSpec {
  // RecipeName is the name of the recipe to run
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string recipeName = 1;

  // Dependents is the list of recipe that need to run after this recipe.
  repeated string Dependents = 2;
}

// +kubebuilder:object:root=true
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Owner",type="string",JSONPath=".spec.owner"
// +kubebuilder:printcolumn:name="Version",type="string",JSONPath=".spec.versionName"
// +kubebuilder:printcolumn:name="Recipe",type="string",JSONPath=".spec.recipeName"
// +kubebuilder:printcolumn:name="StartTime",type="date",JSONPath=".status.startTime",priority=1
// +kubebuilder:printcolumn:name="CompletionTime",type="date",JSONPath=".status.completionTime",priority=1
// +kubebuilder:subresource:status
// +kubebuilder:resource:path=reciperuns,shortName=rcr,singular=reciperun,categories={data,modeld,all}
// Recipe run represent one execution of the recipe.
// Execution is performed by creating a Kubernetes job.
message RecipeRun {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional RecipeRunSpec spec = 2;

  // +optional
  optional RecipeRunStatus status = 3;
}

// RecipeRunCondition describes the state of a dataset at a certain point.
message RecipeRunCondition {
  optional string type = 1;

  // Status of the condition, one of True, False, AutoScaler.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // The reason for the condition's last transition.
  // +kubebuilder:validation:Optional
  optional string reason = 4;

  // A human readable message indicating details about the transition.
  // +kubebuilder:validation:Optional
  optional string message = 5;
}

// +kubebuilder:object:root=true
// RecipeRunList contains a list of Recipes
message RecipeRunList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated RecipeRun items = 2;
}

// RecipeSpec defines the desired state of a dataset
message RecipeRunSpec {
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string versionName = 1;

  // The name of the recipe that execute this run
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string recipeName = 2;

  // The execution env of this recipes
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string labName = 3;

  // The location of the data output.
  // +required.
  optional DataLocation output = 4;

  // WorkloadClassName is the name of the workload used to execute this recipe run,
  // The value is set from the Recipe definition.
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string workloadClassName = 5;
}

// RecipeStatus defines the observed state of Recipe
message RecipeRunStatus {
  // Represents the start time
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time startTime = 1;

  // Represents the end time
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time endTime = 2;

  // The phase of the dataset processing
  // +kubebuilder:validation:Optional
  optional string phase = 3;

  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 4;

  // Last error
  // +kubebuilder:validation:Optional
  optional string lastError = 5;

  // +listType=map
  // +listMapKey=type
  // +kubebuilder:validation:Optional
  repeated RecipeCondition conditions = 6;
}

// RecipeSpec defines the desired state of a dataset
message RecipeSpec {
  // Owner is the owner of the recipe
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 1;

  // VersionName is the data product version of the recipe
  // +kubebuilder:default:=""
  // +kubebuilder:validation:MaxLength=63
  // required.
  optional string versionName = 2;

  // Description is the user provided description
  // +kubebuilder:validation:MaxLength=512
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string description = 3;

  // Input is the input recipe spec
  optional RecipeInputSpec input = 4;

  // Steps are the list of recipe steps
  repeated RecipeStep steps = 5;

  // Output is the desired output
  optional RecipeOutputSpec output = 6;

  // Sample specify the sampling paramters when viewing the recipe
  // +kubebuilder:validation:Optional
  optional SampleSpec sample = 7;

  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 8;

  // WorkloadClassName is the name of the workload used to execute this recipe
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string workloadClassName = 9;

  // ActiveDeadlineSeconds is the deadline setup on jobs for this recipe.
  // +kubebuilder:default:=600
  // +kubebuilder:validation:Optional
  optional int64 activeDeadlineSeconds = 10;
}

// RecipeStatus defines the observed state of Recipe
message RecipeStatus {
  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 1;

  // Last run is the last time a run was created
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastRun = 2;

  // Last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdated = 3;

  // +listType=map
  // +listMapKey=type
  // +kubebuilder:validation:Optional
  repeated RecipeCondition conditions = 4;
}

// RecipeStep defines one step in the recipe
message RecipeStep {
  optional string op = 1;

  repeated RecipeStepParam parameters = 2;
}

// RecipeStepParam is a key value parameter of the recipe
message RecipeStepParam {
  optional string name = 1;

  optional string value = 2;
}

// The sample spec define how to sample a dataset for analysis
message SampleSpec {
  // Enabled specify if the sample is enabled
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool enabled = 1;

  // Type is the sampling type
  // Default is random
  // +kubebuilder:default:="random"
  // +kubebuilder:validation:Optional
  optional string type = 2;

  // Rows is the number of rows. Default is 500
  // +kubebuilder:default:=500
  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:validation:Optional
  optional int32 rows = 3;

  // Pct is the percent of rows to use for analysis.
  // +kubebuilder:default:=100
  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:validation:Optional
  optional int32 percent = 4;

  // Filter formula. Valid only if the sample is a filter.
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string filter = 5;
}

message Schema {
  // Time series schema. Set time series specific parameters.
  // +kubebuilder:validation:Optional
  optional TimeSeriesSchema timeSeriesSchema = 1;

  // Columns
  repeated Column columns = 2;

  // Validation spec define the validation to perform on new datasets
  optional ValidationSpec validation = 3;
}

// Signatures contains the sha256 signatures of the datasets
message Signatures {
  // Data to the full data file (e.g. csv file).
  // +required
  optional string data = 2;

  // The location of the labels file (If exist)
  // +kubebuilder:validation:Optional
  optional string labels = 3;

  // path to the training set
  optional string train = 4;

  // the location of the training data, if different from the data.
  optional string test = 5;

  // Pointer to the validation
  optional string validation = 6;
}

// Represent a stack holder in the product.
// Each stake holder can hove one or more roles.
message StakeHolder {
  // The account name of the stake holder
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string accountName = 1;

  // The roles assigned to the stake holder
  repeated string roles = 2;
}

message StreamSpec {
  // Topic is the stream topic
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string topic = 1;

  // Connection refer to a connection object that point to secret
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference connectionRef = 2;
}

message TableSpec {
  // The actual query. this is required.
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string query = 1;

  // TableName refer to whole table
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string tableName = 2;

  // Connection refer to a connection object that point to secret
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference connectionRef = 3;
}

message TimeSeriesSchema {
  // The time series frequency
  // required
  optional string freq = 1;

  // take holiday into account
  // required
  // default is US
  optional string country = 2;
}

message ValidationSpec {
  // MultiDatasetAssertions contains assertions for multi datasets
  // +kubebuilder:validation:Optional
  repeated MultiDatasetValidation multiDatasetValidations = 1;

  // DatasetAssertions contains assertions for datasets
  // +kubebuilder:validation:Optional
  repeated DatasetValidation datasetValidations = 2;

  // MultiColumnAssertions defines assertions for combined columns from the dataset
  // +kubebuilder:validation:Optional
  repeated MultiColumnValidation multiColumnValidations = 3;

  // MultiColumnAssertions defines assertions for combined columns from the dataset
  // +kubebuilder:validation:Optional
  repeated ColumnValidation columnValidations = 4;
}

