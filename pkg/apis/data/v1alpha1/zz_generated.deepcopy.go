//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/**
*
* Copyright (C) 2017 modela authors
* For license information, see LICENSE.txt
 */

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	catalogv1alpha1 "github.com/metaprov/modelaapi/pkg/apis/catalog/v1alpha1"
	"k8s.io/api/core/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BarChartSpec) DeepCopyInto(out *BarChartSpec) {
	*out = *in
	if in.DatasetName != nil {
		in, out := &in.DatasetName, &out.DatasetName
		*out = new(string)
		**out = **in
	}
	if in.X != nil {
		in, out := &in.X, &out.X
		*out = new(string)
		**out = **in
	}
	if in.Y != nil {
		in, out := &in.Y, &out.Y
		*out = new(string)
		**out = **in
	}
	if in.Legend != nil {
		in, out := &in.Legend, &out.Legend
		*out = new(bool)
		**out = **in
	}
	if in.Sort != nil {
		in, out := &in.Sort, &out.Sort
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BarChartSpec.
func (in *BarChartSpec) DeepCopy() *BarChartSpec {
	if in == nil {
		return nil
	}
	out := new(BarChartSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Column) DeepCopyInto(out *Column) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(catalogv1alpha1.DataDomain)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Ignore != nil {
		in, out := &in.Ignore, &out.Ignore
		*out = new(bool)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(bool)
		**out = **in
	}
	if in.Nullable != nil {
		in, out := &in.Nullable, &out.Nullable
		*out = new(bool)
		**out = **in
	}
	if in.PK != nil {
		in, out := &in.PK, &out.PK
		*out = new(bool)
		**out = **in
	}
	if in.FK != nil {
		in, out := &in.FK, &out.FK
		*out = new(bool)
		**out = **in
	}
	if in.MultipleOf != nil {
		in, out := &in.MultipleOf, &out.MultipleOf
		*out = new(int32)
		**out = **in
	}
	if in.Maximum != nil {
		in, out := &in.Maximum, &out.Maximum
		*out = new(float64)
		**out = **in
	}
	if in.ExclusiveMaximum != nil {
		in, out := &in.ExclusiveMaximum, &out.ExclusiveMaximum
		*out = new(bool)
		**out = **in
	}
	if in.Minimum != nil {
		in, out := &in.Minimum, &out.Minimum
		*out = new(float64)
		**out = **in
	}
	if in.ExclusiveMinimum != nil {
		in, out := &in.ExclusiveMinimum, &out.ExclusiveMinimum
		*out = new(bool)
		**out = **in
	}
	if in.MaxLength != nil {
		in, out := &in.MaxLength, &out.MaxLength
		*out = new(int32)
		**out = **in
	}
	if in.MinLength != nil {
		in, out := &in.MinLength, &out.MinLength
		*out = new(int32)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.Example != nil {
		in, out := &in.Example, &out.Example
		*out = new(string)
		**out = **in
	}
	if in.ExternalDocs != nil {
		in, out := &in.ExternalDocs, &out.ExternalDocs
		*out = new(string)
		**out = **in
	}
	if in.Enum != nil {
		in, out := &in.Enum, &out.Enum
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Ordinal != nil {
		in, out := &in.Ordinal, &out.Ordinal
		*out = new(bool)
		**out = **in
	}
	if in.MaxItems != nil {
		in, out := &in.MaxItems, &out.MaxItems
		*out = new(int32)
		**out = **in
	}
	if in.MinItems != nil {
		in, out := &in.MinItems, &out.MinItems
		*out = new(int32)
		**out = **in
	}
	if in.UniqueItems != nil {
		in, out := &in.UniqueItems, &out.UniqueItems
		*out = new(bool)
		**out = **in
	}
	if in.PII != nil {
		in, out := &in.PII, &out.PII
		*out = new(bool)
		**out = **in
	}
	if in.PHI != nil {
		in, out := &in.PHI, &out.PHI
		*out = new(bool)
		**out = **in
	}
	if in.Protected != nil {
		in, out := &in.Protected, &out.Protected
		*out = new(bool)
		**out = **in
	}
	if in.DefaultValueNum != nil {
		in, out := &in.DefaultValueNum, &out.DefaultValueNum
		*out = new(float64)
		**out = **in
	}
	if in.Log != nil {
		in, out := &in.Log, &out.Log
		*out = new(bool)
		**out = **in
	}
	if in.Mu != nil {
		in, out := &in.Mu, &out.Mu
		*out = new(float64)
		**out = **in
	}
	if in.Sigma != nil {
		in, out := &in.Sigma, &out.Sigma
		*out = new(float64)
		**out = **in
	}
	if in.SkewThreshold != nil {
		in, out := &in.SkewThreshold, &out.SkewThreshold
		*out = new(float64)
		**out = **in
	}
	if in.DriftThreshold != nil {
		in, out := &in.DriftThreshold, &out.DriftThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(bool)
		**out = **in
	}
	if in.Fold != nil {
		in, out := &in.Fold, &out.Fold
		*out = new(bool)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(bool)
		**out = **in
	}
	if in.Reserved != nil {
		in, out := &in.Reserved, &out.Reserved
		*out = new(bool)
		**out = **in
	}
	if in.Imputation != nil {
		in, out := &in.Imputation, &out.Imputation
		*out = new(catalogv1alpha1.Imputation)
		**out = **in
	}
	if in.Scaling != nil {
		in, out := &in.Scaling, &out.Scaling
		*out = new(catalogv1alpha1.Scaling)
		**out = **in
	}
	if in.Generated != nil {
		in, out := &in.Generated, &out.Generated
		*out = new(bool)
		**out = **in
	}
	if in.Formula != nil {
		in, out := &in.Formula, &out.Formula
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(bool)
		**out = **in
	}
	if in.Step != nil {
		in, out := &in.Step, &out.Step
		*out = new(float64)
		**out = **in
	}
	if in.DateTimeFormat != nil {
		in, out := &in.DateTimeFormat, &out.DateTimeFormat
		*out = new(string)
		**out = **in
	}
	if in.TimeSeries != nil {
		in, out := &in.TimeSeries, &out.TimeSeries
		*out = new(bool)
		**out = **in
	}
	if in.Regressor != nil {
		in, out := &in.Regressor, &out.Regressor
		*out = new(bool)
		**out = **in
	}
	if in.LaggedRegressor != nil {
		in, out := &in.LaggedRegressor, &out.LaggedRegressor
		*out = new(bool)
		**out = **in
	}
	if in.TimeIndex != nil {
		in, out := &in.TimeIndex, &out.TimeIndex
		*out = new(bool)
		**out = **in
	}
	if in.Aggr != nil {
		in, out := &in.Aggr, &out.Aggr
		*out = new(catalogv1alpha1.Aggregate)
		**out = **in
	}
	if in.Window != nil {
		in, out := &in.Window, &out.Window
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Column.
func (in *Column) DeepCopy() *Column {
	if in == nil {
		return nil
	}
	out := new(Column)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnHistogram) DeepCopyInto(out *ColumnHistogram) {
	*out = *in
	in.Histogram.DeepCopyInto(&out.Histogram)
	if in.Metrics != nil {
		in, out := &in.Metrics, &out.Metrics
		*out = make([]catalogv1alpha1.Measurement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Drift != nil {
		in, out := &in.Drift, &out.Drift
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnHistogram.
func (in *ColumnHistogram) DeepCopy() *ColumnHistogram {
	if in == nil {
		return nil
	}
	out := new(ColumnHistogram)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnSpec) DeepCopyInto(out *ColumnSpec) {
	*out = *in
	if in.Spacer != nil {
		in, out := &in.Spacer, &out.Spacer
		*out = new(bool)
		**out = **in
	}
	if in.Width != nil {
		in, out := &in.Width, &out.Width
		*out = new(int32)
		**out = **in
	}
	in.Content.DeepCopyInto(&out.Content)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnSpec.
func (in *ColumnSpec) DeepCopy() *ColumnSpec {
	if in == nil {
		return nil
	}
	out := new(ColumnSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnStatistics) DeepCopyInto(out *ColumnStatistics) {
	*out = *in
	in.Histogram.DeepCopyInto(&out.Histogram)
	out.Outliers = in.Outliers
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnStatistics.
func (in *ColumnStatistics) DeepCopy() *ColumnStatistics {
	if in == nil {
		return nil
	}
	out := new(ColumnStatistics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentSpec) DeepCopyInto(out *ComponentSpec) {
	*out = *in
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.SubTitle != nil {
		in, out := &in.SubTitle, &out.SubTitle
		*out = new(string)
		**out = **in
	}
	if in.Footer != nil {
		in, out := &in.Footer, &out.Footer
		*out = new(string)
		**out = **in
	}
	in.ComponentView.DeepCopyInto(&out.ComponentView)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentSpec.
func (in *ComponentSpec) DeepCopy() *ComponentSpec {
	if in == nil {
		return nil
	}
	out := new(ComponentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentView) DeepCopyInto(out *ComponentView) {
	*out = *in
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(MetricSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Gauge != nil {
		in, out := &in.Gauge, &out.Gauge
		*out = new(GaugeSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Histogram != nil {
		in, out := &in.Histogram, &out.Histogram
		*out = new(HistogramSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(TableSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.LineChart != nil {
		in, out := &in.LineChart, &out.LineChart
		*out = new(LineChartSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.BarChart != nil {
		in, out := &in.BarChart, &out.BarChart
		*out = new(BarChartSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.ScatterChart != nil {
		in, out := &in.ScatterChart, &out.ScatterChart
		*out = new(ScatterPlotSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentView.
func (in *ComponentView) DeepCopy() *ComponentView {
	if in == nil {
		return nil
	}
	out := new(ComponentView)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Correlation) DeepCopyInto(out *Correlation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Correlation.
func (in *Correlation) DeepCopy() *Correlation {
	if in == nil {
		return nil
	}
	out := new(Correlation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorrelationSpec) DeepCopyInto(out *CorrelationSpec) {
	*out = *in
	if in.Cutoff != nil {
		in, out := &in.Cutoff, &out.Cutoff
		*out = new(float64)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.Top != nil {
		in, out := &in.Top, &out.Top
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorrelationSpec.
func (in *CorrelationSpec) DeepCopy() *CorrelationSpec {
	if in == nil {
		return nil
	}
	out := new(CorrelationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CsvFileSpec) DeepCopyInto(out *CsvFileSpec) {
	*out = *in
	if in.ColumnDelimiter != nil {
		in, out := &in.ColumnDelimiter, &out.ColumnDelimiter
		*out = new(Delimiter)
		**out = **in
	}
	if in.RowDelimiter != nil {
		in, out := &in.RowDelimiter, &out.RowDelimiter
		*out = new(Delimiter)
		**out = **in
	}
	if in.CommentChars != nil {
		in, out := &in.CommentChars, &out.CommentChars
		*out = new(string)
		**out = **in
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = new(bool)
		**out = **in
	}
	if in.SkipRows != nil {
		in, out := &in.SkipRows, &out.SkipRows
		*out = new(int32)
		**out = **in
	}
	if in.NullValues != nil {
		in, out := &in.NullValues, &out.NullValues
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(catalogv1alpha1.FileEncoding)
		**out = **in
	}
	if in.MaxRows != nil {
		in, out := &in.MaxRows, &out.MaxRows
		*out = new(int32)
		**out = **in
	}
	if in.Strict != nil {
		in, out := &in.Strict, &out.Strict
		*out = new(bool)
		**out = **in
	}
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = new(string)
		**out = **in
	}
	if in.HasIndexColumn != nil {
		in, out := &in.HasIndexColumn, &out.HasIndexColumn
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CsvFileSpec.
func (in *CsvFileSpec) DeepCopy() *CsvFileSpec {
	if in == nil {
		return nil
	}
	out := new(CsvFileSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataInputSpec) DeepCopyInto(out *DataInputSpec) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(DataLocation)
		(*in).DeepCopyInto(*out)
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(catalogv1alpha1.DatastoreType)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataInputSpec.
func (in *DataInputSpec) DeepCopy() *DataInputSpec {
	if in == nil {
		return nil
	}
	out := new(DataInputSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataLocation) DeepCopyInto(out *DataLocation) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(DataLocationType)
		**out = **in
	}
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.Sql != nil {
		in, out := &in.Sql, &out.Sql
		*out = new(string)
		**out = **in
	}
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.ResourceRef != nil {
		in, out := &in.ResourceRef, &out.ResourceRef
		*out = new(v1.ObjectReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataLocation.
func (in *DataLocation) DeepCopy() *DataLocation {
	if in == nil {
		return nil
	}
	out := new(DataLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataOutputSpec) DeepCopyInto(out *DataOutputSpec) {
	*out = *in
	if in.DatasetName != nil {
		in, out := &in.DatasetName, &out.DatasetName
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(DataLocation)
		(*in).DeepCopyInto(*out)
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(catalogv1alpha1.DatastoreType)
		**out = **in
	}
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(catalogv1alpha1.UpdateStrategy)
		**out = **in
	}
	if in.CreateTableIfNotExist != nil {
		in, out := &in.CreateTableIfNotExist, &out.CreateTableIfNotExist
		*out = new(bool)
		**out = **in
	}
	if in.IncludeFeatures != nil {
		in, out := &in.IncludeFeatures, &out.IncludeFeatures
		*out = new(bool)
		**out = **in
	}
	if in.XAI != nil {
		in, out := &in.XAI, &out.XAI
		*out = new(bool)
		**out = **in
	}
	if in.DetectOutliers != nil {
		in, out := &in.DetectOutliers, &out.DetectOutliers
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataOutputSpec.
func (in *DataOutputSpec) DeepCopy() *DataOutputSpec {
	if in == nil {
		return nil
	}
	out := new(DataOutputSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataPipeline) DeepCopyInto(out *DataPipeline) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataPipeline.
func (in *DataPipeline) DeepCopy() *DataPipeline {
	if in == nil {
		return nil
	}
	out := new(DataPipeline)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataPipeline) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataPipelineCondition) DeepCopyInto(out *DataPipelineCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataPipelineCondition.
func (in *DataPipelineCondition) DeepCopy() *DataPipelineCondition {
	if in == nil {
		return nil
	}
	out := new(DataPipelineCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataPipelineList) DeepCopyInto(out *DataPipelineList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataPipeline, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataPipelineList.
func (in *DataPipelineList) DeepCopy() *DataPipelineList {
	if in == nil {
		return nil
	}
	out := new(DataPipelineList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataPipelineList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataPipelineRun) DeepCopyInto(out *DataPipelineRun) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataPipelineRun.
func (in *DataPipelineRun) DeepCopy() *DataPipelineRun {
	if in == nil {
		return nil
	}
	out := new(DataPipelineRun)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataPipelineRun) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataPipelineRunCondition) DeepCopyInto(out *DataPipelineRunCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataPipelineRunCondition.
func (in *DataPipelineRunCondition) DeepCopy() *DataPipelineRunCondition {
	if in == nil {
		return nil
	}
	out := new(DataPipelineRunCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataPipelineRunList) DeepCopyInto(out *DataPipelineRunList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataPipelineRun, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataPipelineRunList.
func (in *DataPipelineRunList) DeepCopy() *DataPipelineRunList {
	if in == nil {
		return nil
	}
	out := new(DataPipelineRunList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataPipelineRunList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataPipelineRunSpec) DeepCopyInto(out *DataPipelineRunSpec) {
	*out = *in
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
	if in.DataPipelineName != nil {
		in, out := &in.DataPipelineName, &out.DataPipelineName
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	in.Resources.DeepCopyInto(&out.Resources)
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(catalogv1alpha1.PriorityLevel)
		**out = **in
	}
	if in.Paused != nil {
		in, out := &in.Paused, &out.Paused
		*out = new(bool)
		**out = **in
	}
	if in.Aborted != nil {
		in, out := &in.Aborted, &out.Aborted
		*out = new(bool)
		**out = **in
	}
	out.LabRef = in.LabRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataPipelineRunSpec.
func (in *DataPipelineRunSpec) DeepCopy() *DataPipelineRunSpec {
	if in == nil {
		return nil
	}
	out := new(DataPipelineRunSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataPipelineRunStatus) DeepCopyInto(out *DataPipelineRunStatus) {
	*out = *in
	if in.RecipeRuns != nil {
		in, out := &in.RecipeRuns, &out.RecipeRuns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.Output.DeepCopyInto(&out.Output)
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = (*in).DeepCopy()
	}
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(catalogv1alpha1.StatusError)
		**out = **in
	}
	if in.FailureMessage != nil {
		in, out := &in.FailureMessage, &out.FailureMessage
		*out = new(string)
		**out = **in
	}
	if in.Progress != nil {
		in, out := &in.Progress, &out.Progress
		*out = new(int32)
		**out = **in
	}
	in.Logs.DeepCopyInto(&out.Logs)
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]DataPipelineRunCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataPipelineRunStatus.
func (in *DataPipelineRunStatus) DeepCopy() *DataPipelineRunStatus {
	if in == nil {
		return nil
	}
	out := new(DataPipelineRunStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataPipelineSpec) DeepCopyInto(out *DataPipelineSpec) {
	*out = *in
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
	if in.ModelClassName != nil {
		in, out := &in.ModelClassName, &out.ModelClassName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DatasetSelector != nil {
		in, out := &in.DatasetSelector, &out.DatasetSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Recipes != nil {
		in, out := &in.Recipes, &out.Recipes
		*out = make([]RecipePartSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Output.DeepCopyInto(&out.Output)
	in.Schedule.DeepCopyInto(&out.Schedule)
	in.Notification.DeepCopyInto(&out.Notification)
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	in.Resources.DeepCopyInto(&out.Resources)
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(catalogv1alpha1.PriorityLevel)
		**out = **in
	}
	if in.Paused != nil {
		in, out := &in.Paused, &out.Paused
		*out = new(bool)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataPipelineSpec.
func (in *DataPipelineSpec) DeepCopy() *DataPipelineSpec {
	if in == nil {
		return nil
	}
	out := new(DataPipelineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataPipelineStatus) DeepCopyInto(out *DataPipelineStatus) {
	*out = *in
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
	in.LastRun.DeepCopyInto(&out.LastRun)
	if in.NextRun != nil {
		in, out := &in.NextRun, &out.NextRun
		*out = (*in).DeepCopy()
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]DataPipelineCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataPipelineStatus.
func (in *DataPipelineStatus) DeepCopy() *DataPipelineStatus {
	if in == nil {
		return nil
	}
	out := new(DataPipelineStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataProduct) DeepCopyInto(out *DataProduct) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataProduct.
func (in *DataProduct) DeepCopy() *DataProduct {
	if in == nil {
		return nil
	}
	out := new(DataProduct)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataProduct) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataProductCondition) DeepCopyInto(out *DataProductCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataProductCondition.
func (in *DataProductCondition) DeepCopy() *DataProductCondition {
	if in == nil {
		return nil
	}
	out := new(DataProductCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataProductList) DeepCopyInto(out *DataProductList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataProduct, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataProductList.
func (in *DataProductList) DeepCopy() *DataProductList {
	if in == nil {
		return nil
	}
	out := new(DataProductList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataProductList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataProductSpec) DeepCopyInto(out *DataProductSpec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Public != nil {
		in, out := &in.Public, &out.Public
		*out = new(bool)
		**out = **in
	}
	if in.TenantRef != nil {
		in, out := &in.TenantRef, &out.TenantRef
		*out = new(v1.ObjectReference)
		**out = **in
	}
	in.GitLocation.DeepCopyInto(&out.GitLocation)
	if in.ImageLocation != nil {
		in, out := &in.ImageLocation, &out.ImageLocation
		*out = new(ImageLocation)
		(*in).DeepCopyInto(*out)
	}
	if in.LabName != nil {
		in, out := &in.LabName, &out.LabName
		*out = new(string)
		**out = **in
	}
	if in.ServingSiteName != nil {
		in, out := &in.ServingSiteName, &out.ServingSiteName
		*out = new(string)
		**out = **in
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = new(catalogv1alpha1.MLTask)
		**out = **in
	}
	if in.SubTask != nil {
		in, out := &in.SubTask, &out.SubTask
		*out = new(catalogv1alpha1.MLSubtask)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	in.Location.DeepCopyInto(&out.Location)
	in.Notification.DeepCopyInto(&out.Notification)
	in.DefaultTrainingResources.DeepCopyInto(&out.DefaultTrainingResources)
	in.DefaultServingResources.DeepCopyInto(&out.DefaultServingResources)
	if in.RetriesOnFailure != nil {
		in, out := &in.RetriesOnFailure, &out.RetriesOnFailure
		*out = new(int32)
		**out = **in
	}
	if in.KPIs != nil {
		in, out := &in.KPIs, &out.KPIs
		*out = make([]KPI, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Compilation.DeepCopyInto(&out.Compilation)
	if in.ClearanceLevel != nil {
		in, out := &in.ClearanceLevel, &out.ClearanceLevel
		*out = new(catalogv1alpha1.SecurityClearanceLevel)
		**out = **in
	}
	if in.DefaultPriority != nil {
		in, out := &in.DefaultPriority, &out.DefaultPriority
		*out = new(catalogv1alpha1.PriorityLevel)
		**out = **in
	}
	if in.Color != nil {
		in, out := &in.Color, &out.Color
		*out = new(catalogv1alpha1.Color)
		**out = **in
	}
	in.Governance.DeepCopyInto(&out.Governance)
	in.Permissions.DeepCopyInto(&out.Permissions)
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataProductSpec.
func (in *DataProductSpec) DeepCopy() *DataProductSpec {
	if in == nil {
		return nil
	}
	out := new(DataProductSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataProductStatus) DeepCopyInto(out *DataProductStatus) {
	*out = *in
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(catalogv1alpha1.StatusError)
		**out = **in
	}
	if in.FailureMessage != nil {
		in, out := &in.FailureMessage, &out.FailureMessage
		*out = new(string)
		**out = **in
	}
	if in.BaselineVersion != nil {
		in, out := &in.BaselineVersion, &out.BaselineVersion
		*out = new(string)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]DataProductCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataProductStatus.
func (in *DataProductStatus) DeepCopy() *DataProductStatus {
	if in == nil {
		return nil
	}
	out := new(DataProductStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataProductVersion) DeepCopyInto(out *DataProductVersion) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataProductVersion.
func (in *DataProductVersion) DeepCopy() *DataProductVersion {
	if in == nil {
		return nil
	}
	out := new(DataProductVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataProductVersion) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataProductVersionCondition) DeepCopyInto(out *DataProductVersionCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataProductVersionCondition.
func (in *DataProductVersionCondition) DeepCopy() *DataProductVersionCondition {
	if in == nil {
		return nil
	}
	out := new(DataProductVersionCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataProductVersionList) DeepCopyInto(out *DataProductVersionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataProductVersion, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataProductVersionList.
func (in *DataProductVersionList) DeepCopy() *DataProductVersionList {
	if in == nil {
		return nil
	}
	out := new(DataProductVersionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataProductVersionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataProductVersionSpec) DeepCopyInto(out *DataProductVersionSpec) {
	*out = *in
	out.ProductRef = in.ProductRef
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.PrevVersionName != nil {
		in, out := &in.PrevVersionName, &out.PrevVersionName
		*out = new(string)
		**out = **in
	}
	if in.Baseline != nil {
		in, out := &in.Baseline, &out.Baseline
		*out = new(bool)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataProductVersionSpec.
func (in *DataProductVersionSpec) DeepCopy() *DataProductVersionSpec {
	if in == nil {
		return nil
	}
	out := new(DataProductVersionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataProductVersionStatus) DeepCopyInto(out *DataProductVersionStatus) {
	*out = *in
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(catalogv1alpha1.StatusError)
		**out = **in
	}
	if in.FailureMessage != nil {
		in, out := &in.FailureMessage, &out.FailureMessage
		*out = new(string)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]DataProductVersionCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataProductVersionStatus.
func (in *DataProductVersionStatus) DeepCopy() *DataProductVersionStatus {
	if in == nil {
		return nil
	}
	out := new(DataProductVersionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSource) DeepCopyInto(out *DataSource) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSource.
func (in *DataSource) DeepCopy() *DataSource {
	if in == nil {
		return nil
	}
	out := new(DataSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataSource) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSourceCondition) DeepCopyInto(out *DataSourceCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSourceCondition.
func (in *DataSourceCondition) DeepCopy() *DataSourceCondition {
	if in == nil {
		return nil
	}
	out := new(DataSourceCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSourceList) DeepCopyInto(out *DataSourceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataSource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSourceList.
func (in *DataSourceList) DeepCopy() *DataSourceList {
	if in == nil {
		return nil
	}
	out := new(DataSourceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataSourceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSourceSpec) DeepCopyInto(out *DataSourceSpec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DatasetType != nil {
		in, out := &in.DatasetType, &out.DatasetType
		*out = new(catalogv1alpha1.DatasetType)
		**out = **in
	}
	in.Schema.DeepCopyInto(&out.Schema)
	if in.FlatFile != nil {
		in, out := &in.FlatFile, &out.FlatFile
		*out = new(FlatFileFormatSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Labeled != nil {
		in, out := &in.Labeled, &out.Labeled
		*out = new(bool)
		**out = **in
	}
	in.Sample.DeepCopyInto(&out.Sample)
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = new(catalogv1alpha1.MLTask)
		**out = **in
	}
	if in.SubTask != nil {
		in, out := &in.SubTask, &out.SubTask
		*out = new(catalogv1alpha1.MLSubtask)
		**out = **in
	}
	if in.Relationships != nil {
		in, out := &in.Relationships, &out.Relationships
		*out = make([]RelationshipSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Labeling.DeepCopyInto(&out.Labeling)
	if in.InferredFrom != nil {
		in, out := &in.InferredFrom, &out.InferredFrom
		*out = new(DataLocation)
		(*in).DeepCopyInto(*out)
	}
	in.UnitTestsTemplate.DeepCopyInto(&out.UnitTestsTemplate)
	if in.IngestMethod != nil {
		in, out := &in.IngestMethod, &out.IngestMethod
		*out = new(catalogv1alpha1.FeatureStoreIngestType)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSourceSpec.
func (in *DataSourceSpec) DeepCopy() *DataSourceSpec {
	if in == nil {
		return nil
	}
	out := new(DataSourceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSourceStatus) DeepCopyInto(out *DataSourceStatus) {
	*out = *in
	if in.LastDatasetCreated != nil {
		in, out := &in.LastDatasetCreated, &out.LastDatasetCreated
		*out = (*in).DeepCopy()
	}
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(catalogv1alpha1.StatusError)
		**out = **in
	}
	if in.FailureMessage != nil {
		in, out := &in.FailureMessage, &out.FailureMessage
		*out = new(string)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]DataSourceCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSourceStatus.
func (in *DataSourceStatus) DeepCopy() *DataSourceStatus {
	if in == nil {
		return nil
	}
	out := new(DataSourceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Dataset) DeepCopyInto(out *Dataset) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Dataset.
func (in *Dataset) DeepCopy() *Dataset {
	if in == nil {
		return nil
	}
	out := new(Dataset)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Dataset) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetCondition) DeepCopyInto(out *DatasetCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetCondition.
func (in *DatasetCondition) DeepCopy() *DatasetCondition {
	if in == nil {
		return nil
	}
	out := new(DatasetCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetGroupByStatus) DeepCopyInto(out *DatasetGroupByStatus) {
	*out = *in
	if in.WorkerResults != nil {
		in, out := &in.WorkerResults, &out.WorkerResults
		*out = make([]catalogv1alpha1.WorkerRunResult, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetGroupByStatus.
func (in *DatasetGroupByStatus) DeepCopy() *DatasetGroupByStatus {
	if in == nil {
		return nil
	}
	out := new(DatasetGroupByStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetList) DeepCopyInto(out *DatasetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Dataset, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetList.
func (in *DatasetList) DeepCopy() *DatasetList {
	if in == nil {
		return nil
	}
	out := new(DatasetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatasetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetSpec) DeepCopyInto(out *DatasetSpec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
	if in.DataSourceName != nil {
		in, out := &in.DataSourceName, &out.DataSourceName
		*out = new(string)
		**out = **in
	}
	if in.FeatureGroupName != nil {
		in, out := &in.FeatureGroupName, &out.FeatureGroupName
		*out = new(string)
		**out = **in
	}
	if in.ModelClassName != nil {
		in, out := &in.ModelClassName, &out.ModelClassName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(DatasetRole)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Reported != nil {
		in, out := &in.Reported, &out.Reported
		*out = new(bool)
		**out = **in
	}
	if in.Snapshotted != nil {
		in, out := &in.Snapshotted, &out.Snapshotted
		*out = new(bool)
		**out = **in
	}
	if in.UnitTested != nil {
		in, out := &in.UnitTested, &out.UnitTested
		*out = new(bool)
		**out = **in
	}
	in.Origin.DeepCopyInto(&out.Origin)
	in.Location.DeepCopyInto(&out.Location)
	in.Resources.DeepCopyInto(&out.Resources)
	if in.ActiveDeadlineSeconds != nil {
		in, out := &in.ActiveDeadlineSeconds, &out.ActiveDeadlineSeconds
		*out = new(int64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(catalogv1alpha1.DatasetType)
		**out = **in
	}
	in.Sample.DeepCopyInto(&out.Sample)
	in.Synthetic.DeepCopyInto(&out.Synthetic)
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = new(catalogv1alpha1.MLTask)
		**out = **in
	}
	if in.SubTask != nil {
		in, out := &in.SubTask, &out.SubTask
		*out = new(catalogv1alpha1.MLSubtask)
		**out = **in
	}
	in.Correlation.DeepCopyInto(&out.Correlation)
	if in.Fast != nil {
		in, out := &in.Fast, &out.Fast
		*out = new(bool)
		**out = **in
	}
	if in.Featurized != nil {
		in, out := &in.Featurized, &out.Featurized
		*out = new(bool)
		**out = **in
	}
	out.LabRef = in.LabRef
	out.ServingDatasetRef = in.ServingDatasetRef
	out.PredictorRef = in.PredictorRef
	if in.GenerateFeatureHistogram != nil {
		in, out := &in.GenerateFeatureHistogram, &out.GenerateFeatureHistogram
		*out = new(bool)
		**out = **in
	}
	in.UnitTests.DeepCopyInto(&out.UnitTests)
	in.GroupBy.DeepCopyInto(&out.GroupBy)
	in.GroupLocations.DeepCopyInto(&out.GroupLocations)
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.MinEventTime != nil {
		in, out := &in.MinEventTime, &out.MinEventTime
		*out = (*in).DeepCopy()
	}
	if in.MaxEventTime != nil {
		in, out := &in.MaxEventTime, &out.MaxEventTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetSpec.
func (in *DatasetSpec) DeepCopy() *DatasetSpec {
	if in == nil {
		return nil
	}
	out := new(DatasetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetStatistics) DeepCopyInto(out *DatasetStatistics) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]ColumnStatistics, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CorrelationsWithTarget != nil {
		in, out := &in.CorrelationsWithTarget, &out.CorrelationsWithTarget
		*out = make([]Correlation, len(*in))
		copy(*out, *in)
	}
	if in.TopCorrelations != nil {
		in, out := &in.TopCorrelations, &out.TopCorrelations
		*out = make([]Correlation, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetStatistics.
func (in *DatasetStatistics) DeepCopy() *DatasetStatistics {
	if in == nil {
		return nil
	}
	out := new(DatasetStatistics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetStatus) DeepCopyInto(out *DatasetStatus) {
	*out = *in
	in.Statistics.DeepCopyInto(&out.Statistics)
	in.UnitTestResults.DeepCopyInto(&out.UnitTestResults)
	if in.LastStudyTime != nil {
		in, out := &in.LastStudyTime, &out.LastStudyTime
		*out = (*in).DeepCopy()
	}
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(catalogv1alpha1.StatusError)
		**out = **in
	}
	if in.FailureMessage != nil {
		in, out := &in.FailureMessage, &out.FailureMessage
		*out = new(string)
		**out = **in
	}
	in.Logs.DeepCopyInto(&out.Logs)
	if in.DerivedFromDataset != nil {
		in, out := &in.DerivedFromDataset, &out.DerivedFromDataset
		*out = new(string)
		**out = **in
	}
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
	in.Images.DeepCopyInto(&out.Images)
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = (*in).DeepCopy()
	}
	out.FeatureHistogramRef = in.FeatureHistogramRef
	in.GroupBy.DeepCopyInto(&out.GroupBy)
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]DatasetCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetStatus.
func (in *DatasetStatus) DeepCopy() *DatasetStatus {
	if in == nil {
		return nil
	}
	out := new(DatasetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetTemplate) DeepCopyInto(out *DatasetTemplate) {
	*out = *in
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetTemplate.
func (in *DatasetTemplate) DeepCopy() *DatasetTemplate {
	if in == nil {
		return nil
	}
	out := new(DatasetTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DriftThreshold) DeepCopyInto(out *DriftThreshold) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DriftThreshold.
func (in *DriftThreshold) DeepCopy() *DriftThreshold {
	if in == nil {
		return nil
	}
	out := new(DriftThreshold)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Entity) DeepCopyInto(out *Entity) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Entity.
func (in *Entity) DeepCopy() *Entity {
	if in == nil {
		return nil
	}
	out := new(Entity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Entity) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntityCondition) DeepCopyInto(out *EntityCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntityCondition.
func (in *EntityCondition) DeepCopy() *EntityCondition {
	if in == nil {
		return nil
	}
	out := new(EntityCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntityList) DeepCopyInto(out *EntityList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Entity, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntityList.
func (in *EntityList) DeepCopy() *EntityList {
	if in == nil {
		return nil
	}
	out := new(EntityList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EntityList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntitySpec) DeepCopyInto(out *EntitySpec) {
	*out = *in
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntitySpec.
func (in *EntitySpec) DeepCopy() *EntitySpec {
	if in == nil {
		return nil
	}
	out := new(EntitySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntityStatus) DeepCopyInto(out *EntityStatus) {
	*out = *in
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]EntityCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntityStatus.
func (in *EntityStatus) DeepCopy() *EntityStatus {
	if in == nil {
		return nil
	}
	out := new(EntityStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcelNotebookSpec) DeepCopyInto(out *ExcelNotebookSpec) {
	*out = *in
	if in.FirstSheetWithData != nil {
		in, out := &in.FirstSheetWithData, &out.FirstSheetWithData
		*out = new(bool)
		**out = **in
	}
	if in.SheetName != nil {
		in, out := &in.SheetName, &out.SheetName
		*out = new(string)
		**out = **in
	}
	if in.SheetIndex != nil {
		in, out := &in.SheetIndex, &out.SheetIndex
		*out = new(int32)
		**out = **in
	}
	if in.ColumnNamesRow != nil {
		in, out := &in.ColumnNamesRow, &out.ColumnNamesRow
		*out = new(int32)
		**out = **in
	}
	in.Data.DeepCopyInto(&out.Data)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcelNotebookSpec.
func (in *ExcelNotebookSpec) DeepCopy() *ExcelNotebookSpec {
	if in == nil {
		return nil
	}
	out := new(ExcelNotebookSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcelSheetArea) DeepCopyInto(out *ExcelSheetArea) {
	*out = *in
	if in.EntireSheet != nil {
		in, out := &in.EntireSheet, &out.EntireSheet
		*out = new(bool)
		**out = **in
	}
	if in.FromColumn != nil {
		in, out := &in.FromColumn, &out.FromColumn
		*out = new(int32)
		**out = **in
	}
	if in.ToColumn != nil {
		in, out := &in.ToColumn, &out.ToColumn
		*out = new(int32)
		**out = **in
	}
	if in.FromRow != nil {
		in, out := &in.FromRow, &out.FromRow
		*out = new(int32)
		**out = **in
	}
	if in.ToRow != nil {
		in, out := &in.ToRow, &out.ToRow
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcelSheetArea.
func (in *ExcelSheetArea) DeepCopy() *ExcelSheetArea {
	if in == nil {
		return nil
	}
	out := new(ExcelSheetArea)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureGroup) DeepCopyInto(out *FeatureGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureGroup.
func (in *FeatureGroup) DeepCopy() *FeatureGroup {
	if in == nil {
		return nil
	}
	out := new(FeatureGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FeatureGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureGroupCondition) DeepCopyInto(out *FeatureGroupCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureGroupCondition.
func (in *FeatureGroupCondition) DeepCopy() *FeatureGroupCondition {
	if in == nil {
		return nil
	}
	out := new(FeatureGroupCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureGroupList) DeepCopyInto(out *FeatureGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FeatureGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureGroupList.
func (in *FeatureGroupList) DeepCopy() *FeatureGroupList {
	if in == nil {
		return nil
	}
	out := new(FeatureGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FeatureGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureGroupSpec) DeepCopyInto(out *FeatureGroupSpec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
	if in.IngestType != nil {
		in, out := &in.IngestType, &out.IngestType
		*out = new(catalogv1alpha1.FeatureStoreIngestType)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.IngestSchedule.DeepCopyInto(&out.IngestSchedule)
	in.SyncSchedule.DeepCopyInto(&out.SyncSchedule)
	in.Schema.DeepCopyInto(&out.Schema)
	in.UnitTests.DeepCopyInto(&out.UnitTests)
	in.Location.DeepCopyInto(&out.Location)
	if in.TimeColumn != nil {
		in, out := &in.TimeColumn, &out.TimeColumn
		*out = new(string)
		**out = **in
	}
	if in.TimeColumnFormat != nil {
		in, out := &in.TimeColumnFormat, &out.TimeColumnFormat
		*out = new(string)
		**out = **in
	}
	in.Materialization.DeepCopyInto(&out.Materialization)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureGroupSpec.
func (in *FeatureGroupSpec) DeepCopy() *FeatureGroupSpec {
	if in == nil {
		return nil
	}
	out := new(FeatureGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureGroupStatus) DeepCopyInto(out *FeatureGroupStatus) {
	*out = *in
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
	in.SyncSchedule.DeepCopyInto(&out.SyncSchedule)
	in.IngestSchedule.DeepCopyInto(&out.IngestSchedule)
	in.OnlineTable.DeepCopyInto(&out.OnlineTable)
	if in.OnlineTableCreated != nil {
		in, out := &in.OnlineTableCreated, &out.OnlineTableCreated
		*out = (*in).DeepCopy()
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]FeatureGroupCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureGroupStatus.
func (in *FeatureGroupStatus) DeepCopy() *FeatureGroupStatus {
	if in == nil {
		return nil
	}
	out := new(FeatureGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureHistogram) DeepCopyInto(out *FeatureHistogram) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureHistogram.
func (in *FeatureHistogram) DeepCopy() *FeatureHistogram {
	if in == nil {
		return nil
	}
	out := new(FeatureHistogram)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FeatureHistogram) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureHistogramCondition) DeepCopyInto(out *FeatureHistogramCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureHistogramCondition.
func (in *FeatureHistogramCondition) DeepCopy() *FeatureHistogramCondition {
	if in == nil {
		return nil
	}
	out := new(FeatureHistogramCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureHistogramList) DeepCopyInto(out *FeatureHistogramList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FeatureHistogram, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureHistogramList.
func (in *FeatureHistogramList) DeepCopy() *FeatureHistogramList {
	if in == nil {
		return nil
	}
	out := new(FeatureHistogramList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FeatureHistogramList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureHistogramSpec) DeepCopyInto(out *FeatureHistogramSpec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SourceRef != nil {
		in, out := &in.SourceRef, &out.SourceRef
		*out = new(v1.ObjectReference)
		**out = **in
	}
	if in.Training != nil {
		in, out := &in.Training, &out.Training
		*out = new(bool)
		**out = **in
	}
	if in.Live != nil {
		in, out := &in.Live, &out.Live
		*out = new(bool)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = (*in).DeepCopy()
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = (*in).DeepCopy()
	}
	out.BaseRef = in.BaseRef
	if in.DriftThresholds != nil {
		in, out := &in.DriftThresholds, &out.DriftThresholds
		*out = make([]DriftThreshold, len(*in))
		copy(*out, *in)
	}
	if in.SyncIntervalSec != nil {
		in, out := &in.SyncIntervalSec, &out.SyncIntervalSec
		*out = new(int32)
		**out = **in
	}
	in.UnitTests.DeepCopyInto(&out.UnitTests)
	if in.GenUnitTests != nil {
		in, out := &in.GenUnitTests, &out.GenUnitTests
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureHistogramSpec.
func (in *FeatureHistogramSpec) DeepCopy() *FeatureHistogramSpec {
	if in == nil {
		return nil
	}
	out := new(FeatureHistogramSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureHistogramStatus) DeepCopyInto(out *FeatureHistogramStatus) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]ColumnHistogram, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
	in.Logs.DeepCopyInto(&out.Logs)
	in.UnitTestsResult.DeepCopyInto(&out.UnitTestsResult)
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]FeatureHistogramCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureHistogramStatus.
func (in *FeatureHistogramStatus) DeepCopy() *FeatureHistogramStatus {
	if in == nil {
		return nil
	}
	out := new(FeatureHistogramStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlatFileFormatSpec) DeepCopyInto(out *FlatFileFormatSpec) {
	*out = *in
	if in.FileType != nil {
		in, out := &in.FileType, &out.FileType
		*out = new(FlatFileType)
		**out = **in
	}
	in.Csv.DeepCopyInto(&out.Csv)
	in.Excel.DeepCopyInto(&out.Excel)
	in.Parquet.DeepCopyInto(&out.Parquet)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlatFileFormatSpec.
func (in *FlatFileFormatSpec) DeepCopy() *FlatFileFormatSpec {
	if in == nil {
		return nil
	}
	out := new(FlatFileFormatSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GaugeSpec) DeepCopyInto(out *GaugeSpec) {
	*out = *in
	if in.DatasetName != nil {
		in, out := &in.DatasetName, &out.DatasetName
		*out = new(string)
		**out = **in
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.Row != nil {
		in, out := &in.Row, &out.Row
		*out = new(int32)
		**out = **in
	}
	if in.Scalar != nil {
		in, out := &in.Scalar, &out.Scalar
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GaugeSpec.
func (in *GaugeSpec) DeepCopy() *GaugeSpec {
	if in == nil {
		return nil
	}
	out := new(GaugeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitLocation) DeepCopyInto(out *GitLocation) {
	*out = *in
	if in.GitConnectionName != nil {
		in, out := &in.GitConnectionName, &out.GitConnectionName
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.Private != nil {
		in, out := &in.Private, &out.Private
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitLocation.
func (in *GitLocation) DeepCopy() *GitLocation {
	if in == nil {
		return nil
	}
	out := new(GitLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GovernanceReviewStatus) DeepCopyInto(out *GovernanceReviewStatus) {
	*out = *in
	if in.ApprovalDate != nil {
		in, out := &in.ApprovalDate, &out.ApprovalDate
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GovernanceReviewStatus.
func (in *GovernanceReviewStatus) DeepCopy() *GovernanceReviewStatus {
	if in == nil {
		return nil
	}
	out := new(GovernanceReviewStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GovernanceSpec) DeepCopyInto(out *GovernanceSpec) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Country != nil {
		in, out := &in.Country, &out.Country
		*out = new(string)
		**out = **in
	}
	if in.ITReviewer != nil {
		in, out := &in.ITReviewer, &out.ITReviewer
		*out = new(string)
		**out = **in
	}
	if in.ComplianceReviewer != nil {
		in, out := &in.ComplianceReviewer, &out.ComplianceReviewer
		*out = new(string)
		**out = **in
	}
	if in.BusinessReviewer != nil {
		in, out := &in.BusinessReviewer, &out.BusinessReviewer
		*out = new(string)
		**out = **in
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GovernanceSpec.
func (in *GovernanceSpec) DeepCopy() *GovernanceSpec {
	if in == nil {
		return nil
	}
	out := new(GovernanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GovernanceStatus) DeepCopyInto(out *GovernanceStatus) {
	*out = *in
	in.ITReviewStatus.DeepCopyInto(&out.ITReviewStatus)
	in.ComplianceReviewStatus.DeepCopyInto(&out.ComplianceReviewStatus)
	in.BusinessReviewStatus.DeepCopyInto(&out.BusinessReviewStatus)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GovernanceStatus.
func (in *GovernanceStatus) DeepCopy() *GovernanceStatus {
	if in == nil {
		return nil
	}
	out := new(GovernanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupBySpec) DeepCopyInto(out *GroupBySpec) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.GroupBy != nil {
		in, out := &in.GroupBy, &out.GroupBy
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Freq != nil {
		in, out := &in.Freq, &out.Freq
		*out = new(catalogv1alpha1.Freq)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupBySpec.
func (in *GroupBySpec) DeepCopy() *GroupBySpec {
	if in == nil {
		return nil
	}
	out := new(GroupBySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupDatasetLocationsSpec) DeepCopyInto(out *GroupDatasetLocationsSpec) {
	*out = *in
	if in.GroupsRoot != nil {
		in, out := &in.GroupsRoot, &out.GroupsRoot
		*out = new(string)
		**out = **in
	}
	if in.GroupRoot != nil {
		in, out := &in.GroupRoot, &out.GroupRoot
		*out = new(string)
		**out = **in
	}
	if in.GroupDataFolder != nil {
		in, out := &in.GroupDataFolder, &out.GroupDataFolder
		*out = new(string)
		**out = **in
	}
	if in.GroupDataFile != nil {
		in, out := &in.GroupDataFile, &out.GroupDataFile
		*out = new(string)
		**out = **in
	}
	if in.GroupProfileFolder != nil {
		in, out := &in.GroupProfileFolder, &out.GroupProfileFolder
		*out = new(string)
		**out = **in
	}
	if in.GroupReportFile != nil {
		in, out := &in.GroupReportFile, &out.GroupReportFile
		*out = new(string)
		**out = **in
	}
	if in.GroupFeaturesFile != nil {
		in, out := &in.GroupFeaturesFile, &out.GroupFeaturesFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupDatasetLocationsSpec.
func (in *GroupDatasetLocationsSpec) DeepCopy() *GroupDatasetLocationsSpec {
	if in == nil {
		return nil
	}
	out := new(GroupDatasetLocationsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HistogramSpec) DeepCopyInto(out *HistogramSpec) {
	*out = *in
	if in.DatasetName != nil {
		in, out := &in.DatasetName, &out.DatasetName
		*out = new(string)
		**out = **in
	}
	if in.X != nil {
		in, out := &in.X, &out.X
		*out = new(string)
		**out = **in
	}
	if in.Bins != nil {
		in, out := &in.Bins, &out.Bins
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HistogramSpec.
func (in *HistogramSpec) DeepCopy() *HistogramSpec {
	if in == nil {
		return nil
	}
	out := new(HistogramSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageLocation) DeepCopyInto(out *ImageLocation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryConnectionName != nil {
		in, out := &in.RegistryConnectionName, &out.RegistryConnectionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageLocation.
func (in *ImageLocation) DeepCopy() *ImageLocation {
	if in == nil {
		return nil
	}
	out := new(ImageLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KPI) DeepCopyInto(out *KPI) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KPI.
func (in *KPI) DeepCopy() *KPI {
	if in == nil {
		return nil
	}
	out := new(KPI)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelingRule) DeepCopyInto(out *LabelingRule) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelingRule.
func (in *LabelingRule) DeepCopy() *LabelingRule {
	if in == nil {
		return nil
	}
	out := new(LabelingRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelingSpec) DeepCopyInto(out *LabelingSpec) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Positive != nil {
		in, out := &in.Positive, &out.Positive
		*out = make([]LabelingRule, len(*in))
		copy(*out, *in)
	}
	if in.Negative != nil {
		in, out := &in.Negative, &out.Negative
		*out = make([]LabelingRule, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelingSpec.
func (in *LabelingSpec) DeepCopy() *LabelingSpec {
	if in == nil {
		return nil
	}
	out := new(LabelingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LineChartSpec) DeepCopyInto(out *LineChartSpec) {
	*out = *in
	if in.DatasetName != nil {
		in, out := &in.DatasetName, &out.DatasetName
		*out = new(string)
		**out = **in
	}
	if in.X != nil {
		in, out := &in.X, &out.X
		*out = new(string)
		**out = **in
	}
	if in.Y != nil {
		in, out := &in.Y, &out.Y
		*out = new(string)
		**out = **in
	}
	if in.Legend != nil {
		in, out := &in.Legend, &out.Legend
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LineChartSpec.
func (in *LineChartSpec) DeepCopy() *LineChartSpec {
	if in == nil {
		return nil
	}
	out := new(LineChartSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaterializationSpec) DeepCopyInto(out *MaterializationSpec) {
	*out = *in
	if in.Online != nil {
		in, out := &in.Online, &out.Online
		*out = new(bool)
		**out = **in
	}
	if in.Offline != nil {
		in, out := &in.Offline, &out.Offline
		*out = new(bool)
		**out = **in
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = (*in).DeepCopy()
	}
	if in.OfflineTTL != nil {
		in, out := &in.OfflineTTL, &out.OfflineTTL
		*out = new(int32)
		**out = **in
	}
	if in.OnlineTTL != nil {
		in, out := &in.OnlineTTL, &out.OnlineTTL
		*out = new(int32)
		**out = **in
	}
	if in.Backfill != nil {
		in, out := &in.Backfill, &out.Backfill
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaterializationSpec.
func (in *MaterializationSpec) DeepCopy() *MaterializationSpec {
	if in == nil {
		return nil
	}
	out := new(MaterializationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricSpec) DeepCopyInto(out *MetricSpec) {
	*out = *in
	if in.DatasetName != nil {
		in, out := &in.DatasetName, &out.DatasetName
		*out = new(string)
		**out = **in
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.Row != nil {
		in, out := &in.Row, &out.Row
		*out = new(int32)
		**out = **in
	}
	if in.Scalar != nil {
		in, out := &in.Scalar, &out.Scalar
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricSpec.
func (in *MetricSpec) DeepCopy() *MetricSpec {
	if in == nil {
		return nil
	}
	out := new(MetricSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutlierStat) DeepCopyInto(out *OutlierStat) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutlierStat.
func (in *OutlierStat) DeepCopy() *OutlierStat {
	if in == nil {
		return nil
	}
	out := new(OutlierStat)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PageSpec) DeepCopyInto(out *PageSpec) {
	*out = *in
	if in.Rows != nil {
		in, out := &in.Rows, &out.Rows
		*out = make([]RowSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PageSpec.
func (in *PageSpec) DeepCopy() *PageSpec {
	if in == nil {
		return nil
	}
	out := new(PageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParquetFileSpec) DeepCopyInto(out *ParquetFileSpec) {
	*out = *in
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParquetFileSpec.
func (in *ParquetFileSpec) DeepCopy() *ParquetFileSpec {
	if in == nil {
		return nil
	}
	out := new(ParquetFileSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Recipe) DeepCopyInto(out *Recipe) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Recipe.
func (in *Recipe) DeepCopy() *Recipe {
	if in == nil {
		return nil
	}
	out := new(Recipe)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Recipe) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecipeCondition) DeepCopyInto(out *RecipeCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecipeCondition.
func (in *RecipeCondition) DeepCopy() *RecipeCondition {
	if in == nil {
		return nil
	}
	out := new(RecipeCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecipeInputSpec) DeepCopyInto(out *RecipeInputSpec) {
	*out = *in
	if in.DatasetName != nil {
		in, out := &in.DatasetName, &out.DatasetName
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(DataLocation)
		(*in).DeepCopyInto(*out)
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(catalogv1alpha1.DatastoreType)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecipeInputSpec.
func (in *RecipeInputSpec) DeepCopy() *RecipeInputSpec {
	if in == nil {
		return nil
	}
	out := new(RecipeInputSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecipeList) DeepCopyInto(out *RecipeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Recipe, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecipeList.
func (in *RecipeList) DeepCopy() *RecipeList {
	if in == nil {
		return nil
	}
	out := new(RecipeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RecipeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecipeOutputSpec) DeepCopyInto(out *RecipeOutputSpec) {
	*out = *in
	if in.CreateDataset != nil {
		in, out := &in.CreateDataset, &out.CreateDataset
		*out = new(bool)
		**out = **in
	}
	if in.DatasetName != nil {
		in, out := &in.DatasetName, &out.DatasetName
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(DataLocation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecipeOutputSpec.
func (in *RecipeOutputSpec) DeepCopy() *RecipeOutputSpec {
	if in == nil {
		return nil
	}
	out := new(RecipeOutputSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecipePartSpec) DeepCopyInto(out *RecipePartSpec) {
	*out = *in
	if in.RecipeName != nil {
		in, out := &in.RecipeName, &out.RecipeName
		*out = new(string)
		**out = **in
	}
	if in.Dependents != nil {
		in, out := &in.Dependents, &out.Dependents
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecipePartSpec.
func (in *RecipePartSpec) DeepCopy() *RecipePartSpec {
	if in == nil {
		return nil
	}
	out := new(RecipePartSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecipeRun) DeepCopyInto(out *RecipeRun) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecipeRun.
func (in *RecipeRun) DeepCopy() *RecipeRun {
	if in == nil {
		return nil
	}
	out := new(RecipeRun)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RecipeRun) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecipeRunCondition) DeepCopyInto(out *RecipeRunCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecipeRunCondition.
func (in *RecipeRunCondition) DeepCopy() *RecipeRunCondition {
	if in == nil {
		return nil
	}
	out := new(RecipeRunCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecipeRunList) DeepCopyInto(out *RecipeRunList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RecipeRun, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecipeRunList.
func (in *RecipeRunList) DeepCopy() *RecipeRunList {
	if in == nil {
		return nil
	}
	out := new(RecipeRunList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RecipeRunList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecipeRunSpec) DeepCopyInto(out *RecipeRunSpec) {
	*out = *in
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
	if in.RecipeName != nil {
		in, out := &in.RecipeName, &out.RecipeName
		*out = new(string)
		**out = **in
	}
	out.LabRef = in.LabRef
	in.Location.DeepCopyInto(&out.Location)
	in.Resources.DeepCopyInto(&out.Resources)
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecipeRunSpec.
func (in *RecipeRunSpec) DeepCopy() *RecipeRunSpec {
	if in == nil {
		return nil
	}
	out := new(RecipeRunSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecipeRunStatus) DeepCopyInto(out *RecipeRunStatus) {
	*out = *in
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = (*in).DeepCopy()
	}
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(catalogv1alpha1.StatusError)
		**out = **in
	}
	if in.FailureMessage != nil {
		in, out := &in.FailureMessage, &out.FailureMessage
		*out = new(string)
		**out = **in
	}
	in.Logs.DeepCopyInto(&out.Logs)
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
	in.UnitTestsResult.DeepCopyInto(&out.UnitTestsResult)
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]RecipeCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecipeRunStatus.
func (in *RecipeRunStatus) DeepCopy() *RecipeRunStatus {
	if in == nil {
		return nil
	}
	out := new(RecipeRunStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecipeSpec) DeepCopyInto(out *RecipeSpec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	in.Input.DeepCopyInto(&out.Input)
	if in.Steps != nil {
		in, out := &in.Steps, &out.Steps
		*out = make([]RecipeStep, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Output.DeepCopyInto(&out.Output)
	in.Sample.DeepCopyInto(&out.Sample)
	in.Resources.DeepCopyInto(&out.Resources)
	if in.ActiveDeadlineSeconds != nil {
		in, out := &in.ActiveDeadlineSeconds, &out.ActiveDeadlineSeconds
		*out = new(int64)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(int32)
		**out = **in
	}
	in.UnitTestsTemplate.DeepCopyInto(&out.UnitTestsTemplate)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecipeSpec.
func (in *RecipeSpec) DeepCopy() *RecipeSpec {
	if in == nil {
		return nil
	}
	out := new(RecipeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecipeStatus) DeepCopyInto(out *RecipeStatus) {
	*out = *in
	in.LastRun.DeepCopyInto(&out.LastRun)
	if in.NextRun != nil {
		in, out := &in.NextRun, &out.NextRun
		*out = (*in).DeepCopy()
	}
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]RecipeCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecipeStatus.
func (in *RecipeStatus) DeepCopy() *RecipeStatus {
	if in == nil {
		return nil
	}
	out := new(RecipeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecipeStep) DeepCopyInto(out *RecipeStep) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]*RecipeStepParam, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(RecipeStepParam)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecipeStep.
func (in *RecipeStep) DeepCopy() *RecipeStep {
	if in == nil {
		return nil
	}
	out := new(RecipeStep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecipeStepParam) DeepCopyInto(out *RecipeStepParam) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecipeStepParam.
func (in *RecipeStepParam) DeepCopy() *RecipeStepParam {
	if in == nil {
		return nil
	}
	out := new(RecipeStepParam)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecommendationSchema) DeepCopyInto(out *RecommendationSchema) {
	*out = *in
	if in.UserIDColumn != nil {
		in, out := &in.UserIDColumn, &out.UserIDColumn
		*out = new(string)
		**out = **in
	}
	if in.ItemIDColumn != nil {
		in, out := &in.ItemIDColumn, &out.ItemIDColumn
		*out = new(string)
		**out = **in
	}
	if in.RatingColumn != nil {
		in, out := &in.RatingColumn, &out.RatingColumn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecommendationSchema.
func (in *RecommendationSchema) DeepCopy() *RecommendationSchema {
	if in == nil {
		return nil
	}
	out := new(RecommendationSchema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RelationshipSpec) DeepCopyInto(out *RelationshipSpec) {
	*out = *in
	if in.Arity != nil {
		in, out := &in.Arity, &out.Arity
		*out = new(catalogv1alpha1.RelationshipArity)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RelationshipSpec.
func (in *RelationshipSpec) DeepCopy() *RelationshipSpec {
	if in == nil {
		return nil
	}
	out := new(RelationshipSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RowSpec) DeepCopyInto(out *RowSpec) {
	*out = *in
	if in.Cols != nil {
		in, out := &in.Cols, &out.Cols
		*out = make([]ColumnSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RowSpec.
func (in *RowSpec) DeepCopy() *RowSpec {
	if in == nil {
		return nil
	}
	out := new(RowSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SampleSpec) DeepCopyInto(out *SampleSpec) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Rows != nil {
		in, out := &in.Rows, &out.Rows
		*out = new(int32)
		**out = **in
	}
	if in.Pct != nil {
		in, out := &in.Pct, &out.Pct
		*out = new(int32)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SampleSpec.
func (in *SampleSpec) DeepCopy() *SampleSpec {
	if in == nil {
		return nil
	}
	out := new(SampleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScatterPlotSpec) DeepCopyInto(out *ScatterPlotSpec) {
	*out = *in
	if in.DatasetName != nil {
		in, out := &in.DatasetName, &out.DatasetName
		*out = new(string)
		**out = **in
	}
	if in.X != nil {
		in, out := &in.X, &out.X
		*out = new(string)
		**out = **in
	}
	if in.Y != nil {
		in, out := &in.Y, &out.Y
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScatterPlotSpec.
func (in *ScatterPlotSpec) DeepCopy() *ScatterPlotSpec {
	if in == nil {
		return nil
	}
	out := new(ScatterPlotSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Schema) DeepCopyInto(out *Schema) {
	*out = *in
	in.TimeSeriesSchema.DeepCopyInto(&out.TimeSeriesSchema)
	in.RecommendationSchema.DeepCopyInto(&out.RecommendationSchema)
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]Column, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Schema.
func (in *Schema) DeepCopy() *Schema {
	if in == nil {
		return nil
	}
	out := new(Schema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlQuery) DeepCopyInto(out *SqlQuery) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlQuery.
func (in *SqlQuery) DeepCopy() *SqlQuery {
	if in == nil {
		return nil
	}
	out := new(SqlQuery)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlQuery) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlQueryCondition) DeepCopyInto(out *SqlQueryCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlQueryCondition.
func (in *SqlQueryCondition) DeepCopy() *SqlQueryCondition {
	if in == nil {
		return nil
	}
	out := new(SqlQueryCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlQueryList) DeepCopyInto(out *SqlQueryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SqlQuery, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlQueryList.
func (in *SqlQueryList) DeepCopy() *SqlQueryList {
	if in == nil {
		return nil
	}
	out := new(SqlQueryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlQueryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlQueryRun) DeepCopyInto(out *SqlQueryRun) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlQueryRun.
func (in *SqlQueryRun) DeepCopy() *SqlQueryRun {
	if in == nil {
		return nil
	}
	out := new(SqlQueryRun)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlQueryRun) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlQueryRunCondition) DeepCopyInto(out *SqlQueryRunCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlQueryRunCondition.
func (in *SqlQueryRunCondition) DeepCopy() *SqlQueryRunCondition {
	if in == nil {
		return nil
	}
	out := new(SqlQueryRunCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlQueryRunList) DeepCopyInto(out *SqlQueryRunList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SqlQueryRun, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlQueryRunList.
func (in *SqlQueryRunList) DeepCopy() *SqlQueryRunList {
	if in == nil {
		return nil
	}
	out := new(SqlQueryRunList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlQueryRunList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlQueryRunSpec) DeepCopyInto(out *SqlQueryRunSpec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(bool)
		**out = **in
	}
	if in.SqlOrTable != nil {
		in, out := &in.SqlOrTable, &out.SqlOrTable
		*out = new(string)
		**out = **in
	}
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	in.Resources.DeepCopyInto(&out.Resources)
	if in.ActiveDeadlineSeconds != nil {
		in, out := &in.ActiveDeadlineSeconds, &out.ActiveDeadlineSeconds
		*out = new(int64)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(catalogv1alpha1.PriorityLevel)
		**out = **in
	}
	if in.Aborted != nil {
		in, out := &in.Aborted, &out.Aborted
		*out = new(bool)
		**out = **in
	}
	if in.Materialized != nil {
		in, out := &in.Materialized, &out.Materialized
		*out = new(bool)
		**out = **in
	}
	if in.Reported != nil {
		in, out := &in.Reported, &out.Reported
		*out = new(bool)
		**out = **in
	}
	if in.SqlQueryName != nil {
		in, out := &in.SqlQueryName, &out.SqlQueryName
		*out = new(string)
		**out = **in
	}
	out.LabRef = in.LabRef
	in.UnitTests.DeepCopyInto(&out.UnitTests)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlQueryRunSpec.
func (in *SqlQueryRunSpec) DeepCopy() *SqlQueryRunSpec {
	if in == nil {
		return nil
	}
	out := new(SqlQueryRunSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlQueryRunStatus) DeepCopyInto(out *SqlQueryRunStatus) {
	*out = *in
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = (*in).DeepCopy()
	}
	in.Logs.DeepCopyInto(&out.Logs)
	in.Location.DeepCopyInto(&out.Location)
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(catalogv1alpha1.StatusError)
		**out = **in
	}
	if in.FailureMessage != nil {
		in, out := &in.FailureMessage, &out.FailureMessage
		*out = new(string)
		**out = **in
	}
	in.UnitTestsResult.DeepCopyInto(&out.UnitTestsResult)
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]SqlQueryRunCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlQueryRunStatus.
func (in *SqlQueryRunStatus) DeepCopy() *SqlQueryRunStatus {
	if in == nil {
		return nil
	}
	out := new(SqlQueryRunStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlQuerySpec) DeepCopyInto(out *SqlQuerySpec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	in.Template.DeepCopyInto(&out.Template)
	in.Schedule.DeepCopyInto(&out.Schedule)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlQuerySpec.
func (in *SqlQuerySpec) DeepCopy() *SqlQuerySpec {
	if in == nil {
		return nil
	}
	out := new(SqlQuerySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlQueryStatus) DeepCopyInto(out *SqlQueryStatus) {
	*out = *in
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
	in.LastRun.DeepCopyInto(&out.LastRun)
	if in.NextRun != nil {
		in, out := &in.NextRun, &out.NextRun
		*out = (*in).DeepCopy()
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]SqlQueryCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlQueryStatus.
func (in *SqlQueryStatus) DeepCopy() *SqlQueryStatus {
	if in == nil {
		return nil
	}
	out := new(SqlQueryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyntheticSpec) DeepCopyInto(out *SyntheticSpec) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Rows != nil {
		in, out := &in.Rows, &out.Rows
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyntheticSpec.
func (in *SyntheticSpec) DeepCopy() *SyntheticSpec {
	if in == nil {
		return nil
	}
	out := new(SyntheticSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableSpec) DeepCopyInto(out *TableSpec) {
	*out = *in
	if in.DatasetName != nil {
		in, out := &in.DatasetName, &out.DatasetName
		*out = new(string)
		**out = **in
	}
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.GroupBy != nil {
		in, out := &in.GroupBy, &out.GroupBy
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Rows != nil {
		in, out := &in.Rows, &out.Rows
		*out = new(int32)
		**out = **in
	}
	if in.ShowIndex != nil {
		in, out := &in.ShowIndex, &out.ShowIndex
		*out = new(bool)
		**out = **in
	}
	if in.Border != nil {
		in, out := &in.Border, &out.Border
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableSpec.
func (in *TableSpec) DeepCopy() *TableSpec {
	if in == nil {
		return nil
	}
	out := new(TableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeSeriesSchema) DeepCopyInto(out *TimeSeriesSchema) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(catalogv1alpha1.TimeSeriesType)
		**out = **in
	}
	if in.Freq != nil {
		in, out := &in.Freq, &out.Freq
		*out = new(catalogv1alpha1.Freq)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeSeriesSchema.
func (in *TimeSeriesSchema) DeepCopy() *TimeSeriesSchema {
	if in == nil {
		return nil
	}
	out := new(TimeSeriesSchema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebRequest) DeepCopyInto(out *WebRequest) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebRequest.
func (in *WebRequest) DeepCopy() *WebRequest {
	if in == nil {
		return nil
	}
	out := new(WebRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WebRequest) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebRequestCondition) DeepCopyInto(out *WebRequestCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebRequestCondition.
func (in *WebRequestCondition) DeepCopy() *WebRequestCondition {
	if in == nil {
		return nil
	}
	out := new(WebRequestCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebRequestList) DeepCopyInto(out *WebRequestList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WebRequest, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebRequestList.
func (in *WebRequestList) DeepCopy() *WebRequestList {
	if in == nil {
		return nil
	}
	out := new(WebRequestList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WebRequestList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebRequestRun) DeepCopyInto(out *WebRequestRun) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebRequestRun.
func (in *WebRequestRun) DeepCopy() *WebRequestRun {
	if in == nil {
		return nil
	}
	out := new(WebRequestRun)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WebRequestRun) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebRequestRunCondition) DeepCopyInto(out *WebRequestRunCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebRequestRunCondition.
func (in *WebRequestRunCondition) DeepCopy() *WebRequestRunCondition {
	if in == nil {
		return nil
	}
	out := new(WebRequestRunCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebRequestRunList) DeepCopyInto(out *WebRequestRunList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WebRequestRun, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebRequestRunList.
func (in *WebRequestRunList) DeepCopy() *WebRequestRunList {
	if in == nil {
		return nil
	}
	out := new(WebRequestRunList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WebRequestRunList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebRequestRunSpec) DeepCopyInto(out *WebRequestRunSpec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.Verb != nil {
		in, out := &in.Verb, &out.Verb
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(int32)
		**out = **in
	}
	if in.Materialized != nil {
		in, out := &in.Materialized, &out.Materialized
		*out = new(bool)
		**out = **in
	}
	if in.Reported != nil {
		in, out := &in.Reported, &out.Reported
		*out = new(bool)
		**out = **in
	}
	in.Resources.DeepCopyInto(&out.Resources)
	if in.WebRequestName != nil {
		in, out := &in.WebRequestName, &out.WebRequestName
		*out = new(string)
		**out = **in
	}
	out.LabRef = in.LabRef
	in.UnitTests.DeepCopyInto(&out.UnitTests)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebRequestRunSpec.
func (in *WebRequestRunSpec) DeepCopy() *WebRequestRunSpec {
	if in == nil {
		return nil
	}
	out := new(WebRequestRunSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebRequestRunStatus) DeepCopyInto(out *WebRequestRunStatus) {
	*out = *in
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = (*in).DeepCopy()
	}
	in.Location.DeepCopyInto(&out.Location)
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(catalogv1alpha1.StatusError)
		**out = **in
	}
	if in.FailureMessage != nil {
		in, out := &in.FailureMessage, &out.FailureMessage
		*out = new(string)
		**out = **in
	}
	in.Logs.DeepCopyInto(&out.Logs)
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
	in.UnitTestsResult.DeepCopyInto(&out.UnitTestsResult)
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]WebRequestRunCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebRequestRunStatus.
func (in *WebRequestRunStatus) DeepCopy() *WebRequestRunStatus {
	if in == nil {
		return nil
	}
	out := new(WebRequestRunStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebRequestSpec) DeepCopyInto(out *WebRequestSpec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	in.Template.DeepCopyInto(&out.Template)
	in.Schedule.DeepCopyInto(&out.Schedule)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebRequestSpec.
func (in *WebRequestSpec) DeepCopy() *WebRequestSpec {
	if in == nil {
		return nil
	}
	out := new(WebRequestSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebRequestStatus) DeepCopyInto(out *WebRequestStatus) {
	*out = *in
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
	in.LastRun.DeepCopyInto(&out.LastRun)
	if in.NextRun != nil {
		in, out := &in.NextRun, &out.NextRun
		*out = (*in).DeepCopy()
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]WebRequestCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebRequestStatus.
func (in *WebRequestStatus) DeepCopy() *WebRequestStatus {
	if in == nil {
		return nil
	}
	out := new(WebRequestStatus)
	in.DeepCopyInto(out)
	return out
}
