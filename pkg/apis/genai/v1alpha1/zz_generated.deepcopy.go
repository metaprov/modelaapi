//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/**
*
* Copyright (C) 2017 modela authors
* For license information, see LICENSE.txt
 */

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	catalogv1alpha1 "github.com/metaprov/modelaapi/pkg/apis/catalog/v1alpha1"
	corev1 "k8s.io/api/core/v1"
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIKeyGroup) DeepCopyInto(out *APIKeyGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIKeyGroup.
func (in *APIKeyGroup) DeepCopy() *APIKeyGroup {
	if in == nil {
		return nil
	}
	out := new(APIKeyGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *APIKeyGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIKeyGroupList) DeepCopyInto(out *APIKeyGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]APIKeyGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIKeyGroupList.
func (in *APIKeyGroupList) DeepCopy() *APIKeyGroupList {
	if in == nil {
		return nil
	}
	out := new(APIKeyGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *APIKeyGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIKeyGroupSpec) DeepCopyInto(out *APIKeyGroupSpec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(APIKeyGroupStorageSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.AllowedServerNames != nil {
		in, out := &in.AllowedServerNames, &out.AllowedServerNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AllowedEndpointNames != nil {
		in, out := &in.AllowedEndpointNames, &out.AllowedEndpointNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.APIKeys != nil {
		in, out := &in.APIKeys, &out.APIKeys
		*out = make([]APIKeySpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIKeyGroupSpec.
func (in *APIKeyGroupSpec) DeepCopy() *APIKeyGroupSpec {
	if in == nil {
		return nil
	}
	out := new(APIKeyGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIKeyGroupStatus) DeepCopyInto(out *APIKeyGroupStatus) {
	*out = *in
	if in.APIKeys != nil {
		in, out := &in.APIKeys, &out.APIKeys
		*out = make([]APIKeyStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = (*in).DeepCopy()
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIKeyGroupStatus.
func (in *APIKeyGroupStatus) DeepCopy() *APIKeyGroupStatus {
	if in == nil {
		return nil
	}
	out := new(APIKeyGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIKeyGroupStorageSpec) DeepCopyInto(out *APIKeyGroupStorageSpec) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(APIKeyGroupStorageType)
		**out = **in
	}
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIKeyGroupStorageSpec.
func (in *APIKeyGroupStorageSpec) DeepCopy() *APIKeyGroupStorageSpec {
	if in == nil {
		return nil
	}
	out := new(APIKeyGroupStorageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIKeyMetrics) DeepCopyInto(out *APIKeyMetrics) {
	*out = *in
	if in.Quota != nil {
		in, out := &in.Quota, &out.Quota
		*out = new(Quota)
		(*in).DeepCopyInto(*out)
	}
	if in.TotalTokens != nil {
		in, out := &in.TotalTokens, &out.TotalTokens
		*out = new(int)
		**out = **in
	}
	if in.TotalRequests != nil {
		in, out := &in.TotalRequests, &out.TotalRequests
		*out = new(int)
		**out = **in
	}
	if in.TotalCost != nil {
		in, out := &in.TotalCost, &out.TotalCost
		*out = new(float32)
		**out = **in
	}
	if in.AggregationPeriod != nil {
		in, out := &in.AggregationPeriod, &out.AggregationPeriod
		*out = new(catalogv1alpha1.MetricAggregationPeriod)
		**out = **in
	}
	if in.AverageTokens != nil {
		in, out := &in.AverageTokens, &out.AverageTokens
		*out = new(int)
		**out = **in
	}
	if in.AverageRequests != nil {
		in, out := &in.AverageRequests, &out.AverageRequests
		*out = new(int)
		**out = **in
	}
	if in.AverageCost != nil {
		in, out := &in.AverageCost, &out.AverageCost
		*out = new(float32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIKeyMetrics.
func (in *APIKeyMetrics) DeepCopy() *APIKeyMetrics {
	if in == nil {
		return nil
	}
	out := new(APIKeyMetrics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIKeyQuota) DeepCopyInto(out *APIKeyQuota) {
	*out = *in
	in.Quota.DeepCopyInto(&out.Quota)
	if in.ResetSchedule != nil {
		in, out := &in.ResetSchedule, &out.ResetSchedule
		*out = new(catalogv1alpha1.RunSchedule)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIKeyQuota.
func (in *APIKeyQuota) DeepCopy() *APIKeyQuota {
	if in == nil {
		return nil
	}
	out := new(APIKeyQuota)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIKeySpec) DeepCopyInto(out *APIKeySpec) {
	*out = *in
	if in.AllowedServerNames != nil {
		in, out := &in.AllowedServerNames, &out.AllowedServerNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AllowedEndpointNames != nil {
		in, out := &in.AllowedEndpointNames, &out.AllowedEndpointNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Quota != nil {
		in, out := &in.Quota, &out.Quota
		*out = new(APIKeyQuota)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIKeySpec.
func (in *APIKeySpec) DeepCopy() *APIKeySpec {
	if in == nil {
		return nil
	}
	out := new(APIKeySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIKeyStatus) DeepCopyInto(out *APIKeyStatus) {
	*out = *in
	in.CreationDate.DeepCopyInto(&out.CreationDate)
	if in.LastUsedDate != nil {
		in, out := &in.LastUsedDate, &out.LastUsedDate
		*out = (*in).DeepCopy()
	}
	if in.GeneratedDate != nil {
		in, out := &in.GeneratedDate, &out.GeneratedDate
		*out = (*in).DeepCopy()
	}
	if in.QuotaExceededDate != nil {
		in, out := &in.QuotaExceededDate, &out.QuotaExceededDate
		*out = (*in).DeepCopy()
	}
	if in.QuotaResetDate != nil {
		in, out := &in.QuotaResetDate, &out.QuotaResetDate
		*out = (*in).DeepCopy()
	}
	if in.Metrics != nil {
		in, out := &in.Metrics, &out.Metrics
		*out = new(APIKeyMetrics)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIKeyStatus.
func (in *APIKeyStatus) DeepCopy() *APIKeyStatus {
	if in == nil {
		return nil
	}
	out := new(APIKeyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoVectorRetrieverSpec) DeepCopyInto(out *AutoVectorRetrieverSpec) {
	*out = *in
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(ModelSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxTopK != nil {
		in, out := &in.MaxTopK, &out.MaxTopK
		*out = new(int)
		**out = **in
	}
	if in.MetadataInfo != nil {
		in, out := &in.MetadataInfo, &out.MetadataInfo
		*out = make([]MetadataKeyInfo, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoVectorRetrieverSpec.
func (in *AutoVectorRetrieverSpec) DeepCopy() *AutoVectorRetrieverSpec {
	if in == nil {
		return nil
	}
	out := new(AutoVectorRetrieverSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BooleanSpec) DeepCopyInto(out *BooleanSpec) {
	*out = *in
	if in.ExtractionMode != nil {
		in, out := &in.ExtractionMode, &out.ExtractionMode
		*out = new(NumberExtractionMode)
		**out = **in
	}
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BooleanSpec.
func (in *BooleanSpec) DeepCopy() *BooleanSpec {
	if in == nil {
		return nil
	}
	out := new(BooleanSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeSplitterSpec) DeepCopyInto(out *CodeSplitterSpec) {
	*out = *in
	if in.ChunkLines != nil {
		in, out := &in.ChunkLines, &out.ChunkLines
		*out = new(int32)
		**out = **in
	}
	if in.ChunkLinesOverlap != nil {
		in, out := &in.ChunkLinesOverlap, &out.ChunkLinesOverlap
		*out = new(int32)
		**out = **in
	}
	if in.MaxChars != nil {
		in, out := &in.MaxChars, &out.MaxChars
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeSplitterSpec.
func (in *CodeSplitterSpec) DeepCopy() *CodeSplitterSpec {
	if in == nil {
		return nil
	}
	out := new(CodeSplitterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CohereRerankSpec) DeepCopyInto(out *CohereRerankSpec) {
	*out = *in
	if in.TopN != nil {
		in, out := &in.TopN, &out.TopN
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CohereRerankSpec.
func (in *CohereRerankSpec) DeepCopy() *CohereRerankSpec {
	if in == nil {
		return nil
	}
	out := new(CohereRerankSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Column) DeepCopyInto(out *Column) {
	*out = *in
	if in.Integer != nil {
		in, out := &in.Integer, &out.Integer
		*out = new(IntegerSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Float != nil {
		in, out := &in.Float, &out.Float
		*out = new(FloatSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Text != nil {
		in, out := &in.Text, &out.Text
		*out = new(TextSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Boolean != nil {
		in, out := &in.Boolean, &out.Boolean
		*out = new(BooleanSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.MetadataKey != nil {
		in, out := &in.MetadataKey, &out.MetadataKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Column.
func (in *Column) DeepCopy() *Column {
	if in == nil {
		return nil
	}
	out := new(Column)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseReaderSpec) DeepCopyInto(out *DatabaseReaderSpec) {
	*out = *in
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseReaderSpec.
func (in *DatabaseReaderSpec) DeepCopy() *DatabaseReaderSpec {
	if in == nil {
		return nil
	}
	out := new(DatabaseReaderSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentSpec) DeepCopyInto(out *DocumentSpec) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RefreshPeriod != nil {
		in, out := &in.RefreshPeriod, &out.RefreshPeriod
		*out = new(int32)
		**out = **in
	}
	if in.Indexes != nil {
		in, out := &in.Indexes, &out.Indexes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NodeParser != nil {
		in, out := &in.NodeParser, &out.NodeParser
		*out = new(string)
		**out = **in
	}
	if in.EmbeddingModel != nil {
		in, out := &in.EmbeddingModel, &out.EmbeddingModel
		*out = new(ModelSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(FileLocationReaderSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(DatabaseReaderSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Web != nil {
		in, out := &in.Web, &out.Web
		*out = new(WebReaderSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(RepositoryReaderSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentSpec.
func (in *DocumentSpec) DeepCopy() *DocumentSpec {
	if in == nil {
		return nil
	}
	out := new(DocumentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentStatus) DeepCopyInto(out *DocumentStatus) {
	*out = *in
	if in.LastError != nil {
		in, out := &in.LastError, &out.LastError
		*out = new(string)
		**out = **in
	}
	if in.Flagged != nil {
		in, out := &in.Flagged, &out.Flagged
		*out = new(bool)
		**out = **in
	}
	if in.LastRefreshAt != nil {
		in, out := &in.LastRefreshAt, &out.LastRefreshAt
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentStatus.
func (in *DocumentStatus) DeepCopy() *DocumentStatus {
	if in == nil {
		return nil
	}
	out := new(DocumentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentSummaryIndexSpec) DeepCopyInto(out *DocumentSummaryIndexSpec) {
	*out = *in
	in.ResponseSynthesizer.DeepCopyInto(&out.ResponseSynthesizer)
	if in.Embedding != nil {
		in, out := &in.Embedding, &out.Embedding
		*out = new(VectorIndexSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentSummaryIndexSpec.
func (in *DocumentSummaryIndexSpec) DeepCopy() *DocumentSummaryIndexSpec {
	if in == nil {
		return nil
	}
	out := new(DocumentSummaryIndexSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentSummaryRetrieverSpec) DeepCopyInto(out *DocumentSummaryRetrieverSpec) {
	*out = *in
	in.Index.DeepCopyInto(&out.Index)
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(ModelSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.TopK != nil {
		in, out := &in.TopK, &out.TopK
		*out = new(int)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(DocumentSummaryRetrieverMode)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentSummaryRetrieverSpec.
func (in *DocumentSummaryRetrieverSpec) DeepCopy() *DocumentSummaryRetrieverSpec {
	if in == nil {
		return nil
	}
	out := new(DocumentSummaryRetrieverSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmbeddingRecencyPostProcessorSpec) DeepCopyInto(out *EmbeddingRecencyPostProcessorSpec) {
	*out = *in
	in.EmbeddingModel.DeepCopyInto(&out.EmbeddingModel)
	if in.SimilarityCutoff != nil {
		in, out := &in.SimilarityCutoff, &out.SimilarityCutoff
		*out = new(float32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmbeddingRecencyPostProcessorSpec.
func (in *EmbeddingRecencyPostProcessorSpec) DeepCopy() *EmbeddingRecencyPostProcessorSpec {
	if in == nil {
		return nil
	}
	out := new(EmbeddingRecencyPostProcessorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmbeddingSpec) DeepCopyInto(out *EmbeddingSpec) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(ModelSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmbeddingSpec.
func (in *EmbeddingSpec) DeepCopy() *EmbeddingSpec {
	if in == nil {
		return nil
	}
	out := new(EmbeddingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointMetrics) DeepCopyInto(out *EndpointMetrics) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointMetrics.
func (in *EndpointMetrics) DeepCopy() *EndpointMetrics {
	if in == nil {
		return nil
	}
	out := new(EndpointMetrics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointSpec) DeepCopyInto(out *EndpointSpec) {
	*out = *in
	if in.QueryEngine != nil {
		in, out := &in.QueryEngine, &out.QueryEngine
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(APIFormat)
		**out = **in
	}
	in.Model.DeepCopyInto(&out.Model)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointSpec.
func (in *EndpointSpec) DeepCopy() *EndpointSpec {
	if in == nil {
		return nil
	}
	out := new(EndpointSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointStatus) DeepCopyInto(out *EndpointStatus) {
	*out = *in
	if in.FailureMessage != nil {
		in, out := &in.FailureMessage, &out.FailureMessage
		*out = new(string)
		**out = **in
	}
	if in.Metrics != nil {
		in, out := &in.Metrics, &out.Metrics
		*out = new(EndpointMetrics)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointStatus.
func (in *EndpointStatus) DeepCopy() *EndpointStatus {
	if in == nil {
		return nil
	}
	out := new(EndpointStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtensionFilter) DeepCopyInto(out *ExtensionFilter) {
	*out = *in
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtensionFilter.
func (in *ExtensionFilter) DeepCopy() *ExtensionFilter {
	if in == nil {
		return nil
	}
	out := new(ExtensionFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileLocationReaderSpec) DeepCopyInto(out *FileLocationReaderSpec) {
	*out = *in
	in.FileReaderSpec.DeepCopyInto(&out.FileReaderSpec)
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(catalogv1alpha1.FileLocation)
		**out = **in
	}
	if in.Url != nil {
		in, out := &in.Url, &out.Url
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileLocationReaderSpec.
func (in *FileLocationReaderSpec) DeepCopy() *FileLocationReaderSpec {
	if in == nil {
		return nil
	}
	out := new(FileLocationReaderSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileReaderSpec) DeepCopyInto(out *FileReaderSpec) {
	*out = *in
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileReaderSpec.
func (in *FileReaderSpec) DeepCopy() *FileReaderSpec {
	if in == nil {
		return nil
	}
	out := new(FileReaderSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilteredNodeParser) DeepCopyInto(out *FilteredNodeParser) {
	*out = *in
	if in.Extension != nil {
		in, out := &in.Extension, &out.Extension
		*out = new(ExtensionFilter)
		(*in).DeepCopyInto(*out)
	}
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(LengthFilter)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(NameFilter)
		(*in).DeepCopyInto(*out)
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilteredNodeParser.
func (in *FilteredNodeParser) DeepCopy() *FilteredNodeParser {
	if in == nil {
		return nil
	}
	out := new(FilteredNodeParser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FixedRecencyPostProcessorSpec) DeepCopyInto(out *FixedRecencyPostProcessorSpec) {
	*out = *in
	if in.TopK != nil {
		in, out := &in.TopK, &out.TopK
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FixedRecencyPostProcessorSpec.
func (in *FixedRecencyPostProcessorSpec) DeepCopy() *FixedRecencyPostProcessorSpec {
	if in == nil {
		return nil
	}
	out := new(FixedRecencyPostProcessorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FloatSpec) DeepCopyInto(out *FloatSpec) {
	*out = *in
	if in.ExtractionMode != nil {
		in, out := &in.ExtractionMode, &out.ExtractionMode
		*out = new(NumberExtractionMode)
		**out = **in
	}
	if in.RoundingMode != nil {
		in, out := &in.RoundingMode, &out.RoundingMode
		*out = new(NumberRoundingMode)
		**out = **in
	}
	if in.Precision != nil {
		in, out := &in.Precision, &out.Precision
		*out = new(int32)
		**out = **in
	}
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FloatSpec.
func (in *FloatSpec) DeepCopy() *FloatSpec {
	if in == nil {
		return nil
	}
	out := new(FloatSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FusionRetrieverSpec) DeepCopyInto(out *FusionRetrieverSpec) {
	*out = *in
	if in.Retrievers != nil {
		in, out := &in.Retrievers, &out.Retrievers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(ModelSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Queries != nil {
		in, out := &in.Queries, &out.Queries
		*out = new(int)
		**out = **in
	}
	if in.TopK != nil {
		in, out := &in.TopK, &out.TopK
		*out = new(int)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(FusionRetrieverMode)
		**out = **in
	}
	if in.DefaultScore != nil {
		in, out := &in.DefaultScore, &out.DefaultScore
		*out = new(float32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FusionRetrieverSpec.
func (in *FusionRetrieverSpec) DeepCopy() *FusionRetrieverSpec {
	if in == nil {
		return nil
	}
	out := new(FusionRetrieverSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HierarchicalSplitterSpec) DeepCopyInto(out *HierarchicalSplitterSpec) {
	*out = *in
	if in.ChunkSizes != nil {
		in, out := &in.ChunkSizes, &out.ChunkSizes
		*out = make([]int, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HierarchicalSplitterSpec.
func (in *HierarchicalSplitterSpec) DeepCopy() *HierarchicalSplitterSpec {
	if in == nil {
		return nil
	}
	out := new(HierarchicalSplitterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexReference) DeepCopyInto(out *IndexReference) {
	*out = *in
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexReference.
func (in *IndexReference) DeepCopy() *IndexReference {
	if in == nil {
		return nil
	}
	out := new(IndexReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexSpec) DeepCopyInto(out *IndexSpec) {
	*out = *in
	if in.Vector != nil {
		in, out := &in.Vector, &out.Vector
		*out = new(VectorIndexSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.DocumentSummary != nil {
		in, out := &in.DocumentSummary, &out.DocumentSummary
		*out = new(DocumentSummaryIndexSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Tree != nil {
		in, out := &in.Tree, &out.Tree
		*out = new(TreeIndexSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.KeywordTable != nil {
		in, out := &in.KeywordTable, &out.KeywordTable
		*out = new(KeywordTableIndexSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.SQL != nil {
		in, out := &in.SQL, &out.SQL
		*out = new(SQLIndexSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.List != nil {
		in, out := &in.List, &out.List
		*out = new(ListIndexSpec)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexSpec.
func (in *IndexSpec) DeepCopy() *IndexSpec {
	if in == nil {
		return nil
	}
	out := new(IndexSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexStatus) DeepCopyInto(out *IndexStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexStatus.
func (in *IndexStatus) DeepCopy() *IndexStatus {
	if in == nil {
		return nil
	}
	out := new(IndexStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegerSpec) DeepCopyInto(out *IntegerSpec) {
	*out = *in
	if in.ExtractionMode != nil {
		in, out := &in.ExtractionMode, &out.ExtractionMode
		*out = new(NumberExtractionMode)
		**out = **in
	}
	if in.RoundingMode != nil {
		in, out := &in.RoundingMode, &out.RoundingMode
		*out = new(NumberRoundingMode)
		**out = **in
	}
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegerSpec.
func (in *IntegerSpec) DeepCopy() *IntegerSpec {
	if in == nil {
		return nil
	}
	out := new(IntegerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeywordPostProcessorSpec) DeepCopyInto(out *KeywordPostProcessorSpec) {
	*out = *in
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeywordPostProcessorSpec.
func (in *KeywordPostProcessorSpec) DeepCopy() *KeywordPostProcessorSpec {
	if in == nil {
		return nil
	}
	out := new(KeywordPostProcessorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeywordTableIndexSpec) DeepCopyInto(out *KeywordTableIndexSpec) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(KeywordTableIndexMode)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(ModelSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxKeywordsPerNode != nil {
		in, out := &in.MaxKeywordsPerNode, &out.MaxKeywordsPerNode
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeywordTableIndexSpec.
func (in *KeywordTableIndexSpec) DeepCopy() *KeywordTableIndexSpec {
	if in == nil {
		return nil
	}
	out := new(KeywordTableIndexSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeywordTableRetrieverSpec) DeepCopyInto(out *KeywordTableRetrieverSpec) {
	*out = *in
	in.Index.DeepCopyInto(&out.Index)
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(ModelSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(KeywordTableRetrieverMode)
		**out = **in
	}
	if in.KeywordsPerQuery != nil {
		in, out := &in.KeywordsPerQuery, &out.KeywordsPerQuery
		*out = new(int)
		**out = **in
	}
	if in.ChunksPerQuery != nil {
		in, out := &in.ChunksPerQuery, &out.ChunksPerQuery
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeywordTableRetrieverSpec.
func (in *KeywordTableRetrieverSpec) DeepCopy() *KeywordTableRetrieverSpec {
	if in == nil {
		return nil
	}
	out := new(KeywordTableRetrieverSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KnowledgeBase) DeepCopyInto(out *KnowledgeBase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KnowledgeBase.
func (in *KnowledgeBase) DeepCopy() *KnowledgeBase {
	if in == nil {
		return nil
	}
	out := new(KnowledgeBase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KnowledgeBase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KnowledgeBaseList) DeepCopyInto(out *KnowledgeBaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KnowledgeBase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KnowledgeBaseList.
func (in *KnowledgeBaseList) DeepCopy() *KnowledgeBaseList {
	if in == nil {
		return nil
	}
	out := new(KnowledgeBaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KnowledgeBaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KnowledgeBaseSpec) DeepCopyInto(out *KnowledgeBaseSpec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.RefreshSchedule != nil {
		in, out := &in.RefreshSchedule, &out.RefreshSchedule
		*out = new(catalogv1alpha1.RunSchedule)
		(*in).DeepCopyInto(*out)
	}
	if in.ArtifactBucketName != nil {
		in, out := &in.ArtifactBucketName, &out.ArtifactBucketName
		*out = new(string)
		**out = **in
	}
	if in.LabName != nil {
		in, out := &in.LabName, &out.LabName
		*out = new(string)
		**out = **in
	}
	in.Resources.DeepCopyInto(&out.Resources)
	if in.MetadataDatabaseConnectionName != nil {
		in, out := &in.MetadataDatabaseConnectionName, &out.MetadataDatabaseConnectionName
		*out = new(string)
		**out = **in
	}
	if in.Indexes != nil {
		in, out := &in.Indexes, &out.Indexes
		*out = make([]IndexSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Documents != nil {
		in, out := &in.Documents, &out.Documents
		*out = make([]DocumentSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeParsers != nil {
		in, out := &in.NodeParsers, &out.NodeParsers
		*out = make([]NodeParserSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultNodeParser != nil {
		in, out := &in.DefaultNodeParser, &out.DefaultNodeParser
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KnowledgeBaseSpec.
func (in *KnowledgeBaseSpec) DeepCopy() *KnowledgeBaseSpec {
	if in == nil {
		return nil
	}
	out := new(KnowledgeBaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KnowledgeBaseStatus) DeepCopyInto(out *KnowledgeBaseStatus) {
	*out = *in
	if in.LastRefreshAt != nil {
		in, out := &in.LastRefreshAt, &out.LastRefreshAt
		*out = (*in).DeepCopy()
	}
	if in.LastCompletionAt != nil {
		in, out := &in.LastCompletionAt, &out.LastCompletionAt
		*out = (*in).DeepCopy()
	}
	if in.Logs != nil {
		in, out := &in.Logs, &out.Logs
		*out = make(catalogv1alpha1.Logs, len(*in))
		copy(*out, *in)
	}
	if in.Documents != nil {
		in, out := &in.Documents, &out.Documents
		*out = make([]DocumentStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Indexes != nil {
		in, out := &in.Indexes, &out.Indexes
		*out = make([]IndexStatus, len(*in))
		copy(*out, *in)
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = (*in).DeepCopy()
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KnowledgeBaseStatus.
func (in *KnowledgeBaseStatus) DeepCopy() *KnowledgeBaseStatus {
	if in == nil {
		return nil
	}
	out := new(KnowledgeBaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KnowledgeGraphQueryEngine) DeepCopyInto(out *KnowledgeGraphQueryEngine) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KnowledgeGraphQueryEngine.
func (in *KnowledgeGraphQueryEngine) DeepCopy() *KnowledgeGraphQueryEngine {
	if in == nil {
		return nil
	}
	out := new(KnowledgeGraphQueryEngine)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LLMRerankSpec) DeepCopyInto(out *LLMRerankSpec) {
	*out = *in
	if in.TopN != nil {
		in, out := &in.TopN, &out.TopN
		*out = new(int)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(ModelSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.RankGPT != nil {
		in, out := &in.RankGPT, &out.RankGPT
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LLMRerankSpec.
func (in *LLMRerankSpec) DeepCopy() *LLMRerankSpec {
	if in == nil {
		return nil
	}
	out := new(LLMRerankSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LLMServer) DeepCopyInto(out *LLMServer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LLMServer.
func (in *LLMServer) DeepCopy() *LLMServer {
	if in == nil {
		return nil
	}
	out := new(LLMServer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LLMServer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LLMServerAccessSpec) DeepCopyInto(out *LLMServerAccessSpec) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int32)
		**out = **in
	}
	if in.NodePort != nil {
		in, out := &in.NodePort, &out.NodePort
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LLMServerAccessSpec.
func (in *LLMServerAccessSpec) DeepCopy() *LLMServerAccessSpec {
	if in == nil {
		return nil
	}
	out := new(LLMServerAccessSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LLMServerAuthorizationSpec) DeepCopyInto(out *LLMServerAuthorizationSpec) {
	*out = *in
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.AllowedKeyGroups != nil {
		in, out := &in.AllowedKeyGroups, &out.AllowedKeyGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AllowedKeyNames != nil {
		in, out := &in.AllowedKeyNames, &out.AllowedKeyNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LLMServerAuthorizationSpec.
func (in *LLMServerAuthorizationSpec) DeepCopy() *LLMServerAuthorizationSpec {
	if in == nil {
		return nil
	}
	out := new(LLMServerAuthorizationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LLMServerList) DeepCopyInto(out *LLMServerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LLMServer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LLMServerList.
func (in *LLMServerList) DeepCopy() *LLMServerList {
	if in == nil {
		return nil
	}
	out := new(LLMServerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LLMServerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LLMServerSpec) DeepCopyInto(out *LLMServerSpec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ServingSiteName != nil {
		in, out := &in.ServingSiteName, &out.ServingSiteName
		*out = new(string)
		**out = **in
	}
	in.Resources.DeepCopyInto(&out.Resources)
	if in.Endpoints != nil {
		in, out := &in.Endpoints, &out.Endpoints
		*out = make([]EndpointSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryEngines != nil {
		in, out := &in.QueryEngines, &out.QueryEngines
		*out = make([]QueryEngineSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Retrievers != nil {
		in, out := &in.Retrievers, &out.Retrievers
		*out = make([]RetrieverSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Access.DeepCopyInto(&out.Access)
	if in.Authorization != nil {
		in, out := &in.Authorization, &out.Authorization
		*out = new(LLMServerAuthorizationSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Notification != nil {
		in, out := &in.Notification, &out.Notification
		*out = new(catalogv1alpha1.NotificationSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LLMServerSpec.
func (in *LLMServerSpec) DeepCopy() *LLMServerSpec {
	if in == nil {
		return nil
	}
	out := new(LLMServerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LLMStatus) DeepCopyInto(out *LLMStatus) {
	*out = *in
	if in.Endpoints != nil {
		in, out := &in.Endpoints, &out.Endpoints
		*out = make([]EndpointStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.DeployedAt != nil {
		in, out := &in.DeployedAt, &out.DeployedAt
		*out = (*in).DeepCopy()
	}
	if in.DeploymentRef != nil {
		in, out := &in.DeploymentRef, &out.DeploymentRef
		*out = new(corev1.ObjectReference)
		**out = **in
	}
	if in.ServiceRef != nil {
		in, out := &in.ServiceRef, &out.ServiceRef
		*out = new(corev1.ObjectReference)
		**out = **in
	}
	if in.FailureMessage != nil {
		in, out := &in.FailureMessage, &out.FailureMessage
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = (*in).DeepCopy()
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LLMStatus.
func (in *LLMStatus) DeepCopy() *LLMStatus {
	if in == nil {
		return nil
	}
	out := new(LLMStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LengthFilter) DeepCopyInto(out *LengthFilter) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LengthFilter.
func (in *LengthFilter) DeepCopy() *LengthFilter {
	if in == nil {
		return nil
	}
	out := new(LengthFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListIndexSpec) DeepCopyInto(out *ListIndexSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListIndexSpec.
func (in *ListIndexSpec) DeepCopy() *ListIndexSpec {
	if in == nil {
		return nil
	}
	out := new(ListIndexSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListRetrieverSpec) DeepCopyInto(out *ListRetrieverSpec) {
	*out = *in
	in.Index.DeepCopyInto(&out.Index)
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(ModelSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.TopK != nil {
		in, out := &in.TopK, &out.TopK
		*out = new(int)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(ListRetrieverMode)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListRetrieverSpec.
func (in *ListRetrieverSpec) DeepCopy() *ListRetrieverSpec {
	if in == nil {
		return nil
	}
	out := new(ListRetrieverSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LongContextReorderSpec) DeepCopyInto(out *LongContextReorderSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LongContextReorderSpec.
func (in *LongContextReorderSpec) DeepCopy() *LongContextReorderSpec {
	if in == nil {
		return nil
	}
	out := new(LongContextReorderSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataKeyInfo) DeepCopyInto(out *MetadataKeyInfo) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataKeyInfo.
func (in *MetadataKeyInfo) DeepCopy() *MetadataKeyInfo {
	if in == nil {
		return nil
	}
	out := new(MetadataKeyInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MixedNodeParserSpec) DeepCopyInto(out *MixedNodeParserSpec) {
	*out = *in
	if in.Parsers != nil {
		in, out := &in.Parsers, &out.Parsers
		*out = make([]FilteredNodeParser, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FallbackNodeParser != nil {
		in, out := &in.FallbackNodeParser, &out.FallbackNodeParser
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MixedNodeParserSpec.
func (in *MixedNodeParserSpec) DeepCopy() *MixedNodeParserSpec {
	if in == nil {
		return nil
	}
	out := new(MixedNodeParserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelSpec) DeepCopyInto(out *ModelSpec) {
	*out = *in
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelSpec.
func (in *ModelSpec) DeepCopy() *ModelSpec {
	if in == nil {
		return nil
	}
	out := new(ModelSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NameFilter) DeepCopyInto(out *NameFilter) {
	*out = *in
	if in.Contains != nil {
		in, out := &in.Contains, &out.Contains
		*out = new(string)
		**out = **in
	}
	if in.Equals != nil {
		in, out := &in.Equals, &out.Equals
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NameFilter.
func (in *NameFilter) DeepCopy() *NameFilter {
	if in == nil {
		return nil
	}
	out := new(NameFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeParserSpec) DeepCopyInto(out *NodeParserSpec) {
	*out = *in
	if in.IncludeOrderRelationship != nil {
		in, out := &in.IncludeOrderRelationship, &out.IncludeOrderRelationship
		*out = new(bool)
		**out = **in
	}
	if in.IncludeMetadata != nil {
		in, out := &in.IncludeMetadata, &out.IncludeMetadata
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(NodeParserType)
		**out = **in
	}
	if in.Text != nil {
		in, out := &in.Text, &out.Text
		*out = new(TextSplitterSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Sentence != nil {
		in, out := &in.Sentence, &out.Sentence
		*out = new(SentenceWindowNodeParserSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Mixed != nil {
		in, out := &in.Mixed, &out.Mixed
		*out = new(MixedNodeParserSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeParserSpec.
func (in *NodeParserSpec) DeepCopy() *NodeParserSpec {
	if in == nil {
		return nil
	}
	out := new(NodeParserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePostProcessor) DeepCopyInto(out *NodePostProcessor) {
	*out = *in
	if in.Similarity != nil {
		in, out := &in.Similarity, &out.Similarity
		*out = new(SimilarityPostProcessorSpec)
		**out = **in
	}
	if in.Keyword != nil {
		in, out := &in.Keyword, &out.Keyword
		*out = new(KeywordPostProcessorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Reorder != nil {
		in, out := &in.Reorder, &out.Reorder
		*out = new(LongContextReorderSpec)
		**out = **in
	}
	if in.EmbeddingOptimizer != nil {
		in, out := &in.EmbeddingOptimizer, &out.EmbeddingOptimizer
		*out = new(SentenceEmbeddingOptimizerSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.LLMRerank != nil {
		in, out := &in.LLMRerank, &out.LLMRerank
		*out = new(LLMRerankSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.CohereRerank != nil {
		in, out := &in.CohereRerank, &out.CohereRerank
		*out = new(CohereRerankSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.FixedRecency != nil {
		in, out := &in.FixedRecency, &out.FixedRecency
		*out = new(FixedRecencyPostProcessorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.EmbeddingRecency != nil {
		in, out := &in.EmbeddingRecency, &out.EmbeddingRecency
		*out = new(EmbeddingRecencyPostProcessorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.TimeWeightedRecency != nil {
		in, out := &in.TimeWeightedRecency, &out.TimeWeightedRecency
		*out = new(TimeWeightedRecencyPostProcessorSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePostProcessor.
func (in *NodePostProcessor) DeepCopy() *NodePostProcessor {
	if in == nil {
		return nil
	}
	out := new(NodePostProcessor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryEngineSpec) DeepCopyInto(out *QueryEngineSpec) {
	*out = *in
	if in.Retriever != nil {
		in, out := &in.Retriever, &out.Retriever
		*out = new(RetrieverQueryEngineSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Router != nil {
		in, out := &in.Router, &out.Router
		*out = new(RouterQueryEngineSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.SubQuestion != nil {
		in, out := &in.SubQuestion, &out.SubQuestion
		*out = new(SubQuestionQueryEngineSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryEngineSpec.
func (in *QueryEngineSpec) DeepCopy() *QueryEngineSpec {
	if in == nil {
		return nil
	}
	out := new(QueryEngineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryEngineToolSpec) DeepCopyInto(out *QueryEngineToolSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryEngineToolSpec.
func (in *QueryEngineToolSpec) DeepCopy() *QueryEngineToolSpec {
	if in == nil {
		return nil
	}
	out := new(QueryEngineToolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Quota) DeepCopyInto(out *Quota) {
	*out = *in
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = new(int)
		**out = **in
	}
	if in.Requests != nil {
		in, out := &in.Requests, &out.Requests
		*out = new(int)
		**out = **in
	}
	if in.Cost != nil {
		in, out := &in.Cost, &out.Cost
		*out = new(float32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Quota.
func (in *Quota) DeepCopy() *Quota {
	if in == nil {
		return nil
	}
	out := new(Quota)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryFileReader) DeepCopyInto(out *RepositoryFileReader) {
	*out = *in
	if in.Extension != nil {
		in, out := &in.Extension, &out.Extension
		*out = new(string)
		**out = **in
	}
	if in.Extensions != nil {
		in, out := &in.Extensions, &out.Extensions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.Reader.DeepCopyInto(&out.Reader)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryFileReader.
func (in *RepositoryFileReader) DeepCopy() *RepositoryFileReader {
	if in == nil {
		return nil
	}
	out := new(RepositoryFileReader)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryReaderSpec) DeepCopyInto(out *RepositoryReaderSpec) {
	*out = *in
	if in.Extensions != nil {
		in, out := &in.Extensions, &out.Extensions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Readers != nil {
		in, out := &in.Readers, &out.Readers
		*out = make([]RepositoryFileReader, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryReaderSpec.
func (in *RepositoryReaderSpec) DeepCopy() *RepositoryReaderSpec {
	if in == nil {
		return nil
	}
	out := new(RepositoryReaderSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseSynthesizerSpec) DeepCopyInto(out *ResponseSynthesizerSpec) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(ResponseMode)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(ModelSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.AnswerFiltering != nil {
		in, out := &in.AnswerFiltering, &out.AnswerFiltering
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseSynthesizerSpec.
func (in *ResponseSynthesizerSpec) DeepCopy() *ResponseSynthesizerSpec {
	if in == nil {
		return nil
	}
	out := new(ResponseSynthesizerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetrieverQueryEngineSpec) DeepCopyInto(out *RetrieverQueryEngineSpec) {
	*out = *in
	if in.ResponseSynthesizer != nil {
		in, out := &in.ResponseSynthesizer, &out.ResponseSynthesizer
		*out = new(ResponseSynthesizerSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.NodePostProcessors != nil {
		in, out := &in.NodePostProcessors, &out.NodePostProcessors
		*out = make([]NodePostProcessor, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetrieverQueryEngineSpec.
func (in *RetrieverQueryEngineSpec) DeepCopy() *RetrieverQueryEngineSpec {
	if in == nil {
		return nil
	}
	out := new(RetrieverQueryEngineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetrieverSpec) DeepCopyInto(out *RetrieverSpec) {
	*out = *in
	if in.Vector != nil {
		in, out := &in.Vector, &out.Vector
		*out = new(VectorRetrieverSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.DocumentSummary != nil {
		in, out := &in.DocumentSummary, &out.DocumentSummary
		*out = new(DocumentSummaryRetrieverSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Tree != nil {
		in, out := &in.Tree, &out.Tree
		*out = new(TreeRetrieverSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.KeywordTable != nil {
		in, out := &in.KeywordTable, &out.KeywordTable
		*out = new(KeywordTableRetrieverSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.List != nil {
		in, out := &in.List, &out.List
		*out = new(ListRetrieverSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Router != nil {
		in, out := &in.Router, &out.Router
		*out = new(RouterRetrieverSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Fusion != nil {
		in, out := &in.Fusion, &out.Fusion
		*out = new(FusionRetrieverSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetrieverSpec.
func (in *RetrieverSpec) DeepCopy() *RetrieverSpec {
	if in == nil {
		return nil
	}
	out := new(RetrieverSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetrieverToolSpec) DeepCopyInto(out *RetrieverToolSpec) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetrieverToolSpec.
func (in *RetrieverToolSpec) DeepCopy() *RetrieverToolSpec {
	if in == nil {
		return nil
	}
	out := new(RetrieverToolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterQueryEngineSpec) DeepCopyInto(out *RouterQueryEngineSpec) {
	*out = *in
	if in.Tools != nil {
		in, out := &in.Tools, &out.Tools
		*out = make([]QueryEngineToolSpec, len(*in))
		copy(*out, *in)
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(SelectorSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterQueryEngineSpec.
func (in *RouterQueryEngineSpec) DeepCopy() *RouterQueryEngineSpec {
	if in == nil {
		return nil
	}
	out := new(RouterQueryEngineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterRetrieverSpec) DeepCopyInto(out *RouterRetrieverSpec) {
	*out = *in
	if in.Tools != nil {
		in, out := &in.Tools, &out.Tools
		*out = make([]RetrieverToolSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(SelectorSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterRetrieverSpec.
func (in *RouterRetrieverSpec) DeepCopy() *RouterRetrieverSpec {
	if in == nil {
		return nil
	}
	out := new(RouterRetrieverSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLIndexSpec) DeepCopyInto(out *SQLIndexSpec) {
	*out = *in
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(ModelSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.RefDocColumn != nil {
		in, out := &in.RefDocColumn, &out.RefDocColumn
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(Schema)
		(*in).DeepCopyInto(*out)
	}
	if in.Granularity != nil {
		in, out := &in.Granularity, &out.Granularity
		*out = new(Granularity)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLIndexSpec.
func (in *SQLIndexSpec) DeepCopy() *SQLIndexSpec {
	if in == nil {
		return nil
	}
	out := new(SQLIndexSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Schema) DeepCopyInto(out *Schema) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]Column, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Schema.
func (in *Schema) DeepCopy() *Schema {
	if in == nil {
		return nil
	}
	out := new(Schema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SelectorSpec) DeepCopyInto(out *SelectorSpec) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(SelectorMode)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(ModelSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Multi != nil {
		in, out := &in.Multi, &out.Multi
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SelectorSpec.
func (in *SelectorSpec) DeepCopy() *SelectorSpec {
	if in == nil {
		return nil
	}
	out := new(SelectorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SentenceEmbeddingOptimizerSpec) DeepCopyInto(out *SentenceEmbeddingOptimizerSpec) {
	*out = *in
	in.EmbeddingModel.DeepCopyInto(&out.EmbeddingModel)
	if in.PercentileCutoff != nil {
		in, out := &in.PercentileCutoff, &out.PercentileCutoff
		*out = new(float32)
		**out = **in
	}
	if in.ThresholdCutoff != nil {
		in, out := &in.ThresholdCutoff, &out.ThresholdCutoff
		*out = new(float32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SentenceEmbeddingOptimizerSpec.
func (in *SentenceEmbeddingOptimizerSpec) DeepCopy() *SentenceEmbeddingOptimizerSpec {
	if in == nil {
		return nil
	}
	out := new(SentenceEmbeddingOptimizerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SentenceSplitterSpec) DeepCopyInto(out *SentenceSplitterSpec) {
	*out = *in
	if in.ChunkSize != nil {
		in, out := &in.ChunkSize, &out.ChunkSize
		*out = new(int32)
		**out = **in
	}
	if in.ChunkOverlap != nil {
		in, out := &in.ChunkOverlap, &out.ChunkOverlap
		*out = new(int32)
		**out = **in
	}
	if in.WordSeparator != nil {
		in, out := &in.WordSeparator, &out.WordSeparator
		*out = new(string)
		**out = **in
	}
	if in.ParagraphSeparator != nil {
		in, out := &in.ParagraphSeparator, &out.ParagraphSeparator
		*out = new(string)
		**out = **in
	}
	if in.Splitter != nil {
		in, out := &in.Splitter, &out.Splitter
		*out = new(SentenceTokenizerSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Hierarchical != nil {
		in, out := &in.Hierarchical, &out.Hierarchical
		*out = new(HierarchicalSplitterSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SentenceSplitterSpec.
func (in *SentenceSplitterSpec) DeepCopy() *SentenceSplitterSpec {
	if in == nil {
		return nil
	}
	out := new(SentenceSplitterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SentenceTokenizerSpec) DeepCopyInto(out *SentenceTokenizerSpec) {
	*out = *in
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SentenceTokenizerSpec.
func (in *SentenceTokenizerSpec) DeepCopy() *SentenceTokenizerSpec {
	if in == nil {
		return nil
	}
	out := new(SentenceTokenizerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SentenceWindowNodeParserSpec) DeepCopyInto(out *SentenceWindowNodeParserSpec) {
	*out = *in
	if in.Splitter != nil {
		in, out := &in.Splitter, &out.Splitter
		*out = new(SentenceTokenizerSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.WindowSize != nil {
		in, out := &in.WindowSize, &out.WindowSize
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SentenceWindowNodeParserSpec.
func (in *SentenceWindowNodeParserSpec) DeepCopy() *SentenceWindowNodeParserSpec {
	if in == nil {
		return nil
	}
	out := new(SentenceWindowNodeParserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SimilarityPostProcessorSpec) DeepCopyInto(out *SimilarityPostProcessorSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SimilarityPostProcessorSpec.
func (in *SimilarityPostProcessorSpec) DeepCopy() *SimilarityPostProcessorSpec {
	if in == nil {
		return nil
	}
	out := new(SimilarityPostProcessorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubQuestionQueryEngineSpec) DeepCopyInto(out *SubQuestionQueryEngineSpec) {
	*out = *in
	if in.Tools != nil {
		in, out := &in.Tools, &out.Tools
		*out = make([]QueryEngineToolSpec, len(*in))
		copy(*out, *in)
	}
	if in.ResponseSynthesizer != nil {
		in, out := &in.ResponseSynthesizer, &out.ResponseSynthesizer
		*out = new(ResponseSynthesizerSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(ModelSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubQuestionQueryEngineSpec.
func (in *SubQuestionQueryEngineSpec) DeepCopy() *SubQuestionQueryEngineSpec {
	if in == nil {
		return nil
	}
	out := new(SubQuestionQueryEngineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TextSpec) DeepCopyInto(out *TextSpec) {
	*out = *in
	if in.ExtractionMode != nil {
		in, out := &in.ExtractionMode, &out.ExtractionMode
		*out = new(TextExtractionMode)
		**out = **in
	}
	if in.SummarizationPrompt != nil {
		in, out := &in.SummarizationPrompt, &out.SummarizationPrompt
		*out = new(string)
		**out = **in
	}
	if in.ConcatenationString != nil {
		in, out := &in.ConcatenationString, &out.ConcatenationString
		*out = new(string)
		**out = **in
	}
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TextSpec.
func (in *TextSpec) DeepCopy() *TextSpec {
	if in == nil {
		return nil
	}
	out := new(TextSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TextSplitterSpec) DeepCopyInto(out *TextSplitterSpec) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(TextSplitterType)
		**out = **in
	}
	if in.Sentence != nil {
		in, out := &in.Sentence, &out.Sentence
		*out = new(SentenceSplitterSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Token != nil {
		in, out := &in.Token, &out.Token
		*out = new(TokenSplitterSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(CodeSplitterSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TextSplitterSpec.
func (in *TextSplitterSpec) DeepCopy() *TextSplitterSpec {
	if in == nil {
		return nil
	}
	out := new(TextSplitterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeWeightedRecencyPostProcessorSpec) DeepCopyInto(out *TimeWeightedRecencyPostProcessorSpec) {
	*out = *in
	if in.TopK != nil {
		in, out := &in.TopK, &out.TopK
		*out = new(int)
		**out = **in
	}
	if in.TimeDecay != nil {
		in, out := &in.TimeDecay, &out.TimeDecay
		*out = new(float32)
		**out = **in
	}
	if in.LastAccess != nil {
		in, out := &in.LastAccess, &out.LastAccess
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeWeightedRecencyPostProcessorSpec.
func (in *TimeWeightedRecencyPostProcessorSpec) DeepCopy() *TimeWeightedRecencyPostProcessorSpec {
	if in == nil {
		return nil
	}
	out := new(TimeWeightedRecencyPostProcessorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenSplitterSpec) DeepCopyInto(out *TokenSplitterSpec) {
	*out = *in
	if in.ChunkSize != nil {
		in, out := &in.ChunkSize, &out.ChunkSize
		*out = new(int32)
		**out = **in
	}
	if in.ChunkOverlap != nil {
		in, out := &in.ChunkOverlap, &out.ChunkOverlap
		*out = new(int32)
		**out = **in
	}
	if in.WordSeparator != nil {
		in, out := &in.WordSeparator, &out.WordSeparator
		*out = new(string)
		**out = **in
	}
	if in.Hierarchical != nil {
		in, out := &in.Hierarchical, &out.Hierarchical
		*out = new(HierarchicalSplitterSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenSplitterSpec.
func (in *TokenSplitterSpec) DeepCopy() *TokenSplitterSpec {
	if in == nil {
		return nil
	}
	out := new(TokenSplitterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TreeIndexSpec) DeepCopyInto(out *TreeIndexSpec) {
	*out = *in
	in.Model.DeepCopyInto(&out.Model)
	if in.Children != nil {
		in, out := &in.Children, &out.Children
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TreeIndexSpec.
func (in *TreeIndexSpec) DeepCopy() *TreeIndexSpec {
	if in == nil {
		return nil
	}
	out := new(TreeIndexSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TreeRetrieverSpec) DeepCopyInto(out *TreeRetrieverSpec) {
	*out = *in
	in.Index.DeepCopyInto(&out.Index)
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(ModelSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(TreeRetrieverMode)
		**out = **in
	}
	if in.ChildBranchFactor != nil {
		in, out := &in.ChildBranchFactor, &out.ChildBranchFactor
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TreeRetrieverSpec.
func (in *TreeRetrieverSpec) DeepCopy() *TreeRetrieverSpec {
	if in == nil {
		return nil
	}
	out := new(TreeRetrieverSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorIndexSpec) DeepCopyInto(out *VectorIndexSpec) {
	*out = *in
	in.EmbeddingModel.DeepCopyInto(&out.EmbeddingModel)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorIndexSpec.
func (in *VectorIndexSpec) DeepCopy() *VectorIndexSpec {
	if in == nil {
		return nil
	}
	out := new(VectorIndexSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VectorRetrieverSpec) DeepCopyInto(out *VectorRetrieverSpec) {
	*out = *in
	in.Index.DeepCopyInto(&out.Index)
	in.EmbeddingModel.DeepCopyInto(&out.EmbeddingModel)
	if in.TopK != nil {
		in, out := &in.TopK, &out.TopK
		*out = new(int)
		**out = **in
	}
	if in.MatchMetadata != nil {
		in, out := &in.MatchMetadata, &out.MatchMetadata
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.AutoMerging != nil {
		in, out := &in.AutoMerging, &out.AutoMerging
		*out = new(bool)
		**out = **in
	}
	if in.Auto != nil {
		in, out := &in.Auto, &out.Auto
		*out = new(AutoVectorRetrieverSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VectorRetrieverSpec.
func (in *VectorRetrieverSpec) DeepCopy() *VectorRetrieverSpec {
	if in == nil {
		return nil
	}
	out := new(VectorRetrieverSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebReaderSpec) DeepCopyInto(out *WebReaderSpec) {
	*out = *in
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebReaderSpec.
func (in *WebReaderSpec) DeepCopy() *WebReaderSpec {
	if in == nil {
		return nil
	}
	out := new(WebReaderSpec)
	in.DeepCopyInto(out)
	return out
}
