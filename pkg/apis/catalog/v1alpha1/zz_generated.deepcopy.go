//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/**
*
* Copyright (C) 2017 modela authors
* For license information, see LICENSE.txt
 */

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/api/core/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessSpec) DeepCopyInto(out *AccessSpec) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int32)
		**out = **in
	}
	if in.NodePort != nil {
		in, out := &in.NodePort, &out.NodePort
		*out = new(int32)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.AccessType != nil {
		in, out := &in.AccessType, &out.AccessType
		*out = new(AccessType)
		**out = **in
	}
	if in.REST != nil {
		in, out := &in.REST, &out.REST
		*out = new(bool)
		**out = **in
	}
	if in.AuthMethod != nil {
		in, out := &in.AuthMethod, &out.AuthMethod
		*out = new(AuthMethod)
		**out = **in
	}
	if in.ApiKeySecretRef != nil {
		in, out := &in.ApiKeySecretRef, &out.ApiKeySecretRef
		*out = new(v1.SecretReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessSpec.
func (in *AccessSpec) DeepCopy() *AccessSpec {
	if in == nil {
		return nil
	}
	out := new(AccessSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Algorithm) DeepCopyInto(out *Algorithm) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Algorithm.
func (in *Algorithm) DeepCopy() *Algorithm {
	if in == nil {
		return nil
	}
	out := new(Algorithm)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Algorithm) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlgorithmList) DeepCopyInto(out *AlgorithmList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Algorithm, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlgorithmList.
func (in *AlgorithmList) DeepCopy() *AlgorithmList {
	if in == nil {
		return nil
	}
	out := new(AlgorithmList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlgorithmList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlgorithmSpec) DeepCopyInto(out *AlgorithmSpec) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.Sparse != nil {
		in, out := &in.Sparse, &out.Sparse
		*out = new(bool)
		**out = **in
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]ParameterRange, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlgorithmSpec.
func (in *AlgorithmSpec) DeepCopy() *AlgorithmSpec {
	if in == nil {
		return nil
	}
	out := new(AlgorithmSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoricalParameter) DeepCopyInto(out *CategoricalParameter) {
	*out = *in
	if in.Enums != nil {
		in, out := &in.Enums, &out.Enums
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoricalParameter.
func (in *CategoricalParameter) DeepCopy() *CategoricalParameter {
	if in == nil {
		return nil
	}
	out := new(CategoricalParameter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cloud) DeepCopyInto(out *Cloud) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cloud.
func (in *Cloud) DeepCopy() *Cloud {
	if in == nil {
		return nil
	}
	out := new(Cloud)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cloud) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudList) DeepCopyInto(out *CloudList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cloud, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudList.
func (in *CloudList) DeepCopy() *CloudList {
	if in == nil {
		return nil
	}
	out := new(CloudList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CloudList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudSpec) DeepCopyInto(out *CloudSpec) {
	*out = *in
	if in.MachineClasses != nil {
		in, out := &in.MachineClasses, &out.MachineClasses
		*out = make([]MachineClass, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GpuClasses != nil {
		in, out := &in.GpuClasses, &out.GpuClasses
		*out = make([]GpuClass, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Regions != nil {
		in, out := &in.Regions, &out.Regions
		*out = make([]Region, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudSpec.
func (in *CloudSpec) DeepCopy() *CloudSpec {
	if in == nil {
		return nil
	}
	out := new(CloudSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudStatus) DeepCopyInto(out *CloudStatus) {
	*out = *in
	if in.MachineCosts != nil {
		in, out := &in.MachineCosts, &out.MachineCosts
		*out = make([]MachineClassCost, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GpuCosts != nil {
		in, out := &in.GpuCosts, &out.GpuCosts
		*out = make([]GpuClassCost, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudStatus.
func (in *CloudStatus) DeepCopy() *CloudStatus {
	if in == nil {
		return nil
	}
	out := new(CloudStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompilerSpec) DeepCopyInto(out *CompilerSpec) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Compiler != nil {
		in, out := &in.Compiler, &out.Compiler
		*out = new(CompilerName)
		**out = **in
	}
	if in.Targets != nil {
		in, out := &in.Targets, &out.Targets
		*out = make([]HardwareTarget, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompilerSpec.
func (in *CompilerSpec) DeepCopy() *CompilerSpec {
	if in == nil {
		return nil
	}
	out := new(CompilerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfusionMatrix) DeepCopyInto(out *ConfusionMatrix) {
	*out = *in
	if in.Rows != nil {
		in, out := &in.Rows, &out.Rows
		*out = make([]ConfusionMatrixRow, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfusionMatrix.
func (in *ConfusionMatrix) DeepCopy() *ConfusionMatrix {
	if in == nil {
		return nil
	}
	out := new(ConfusionMatrix)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfusionMatrixRow) DeepCopyInto(out *ConfusionMatrixRow) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfusionMatrixRow.
func (in *ConfusionMatrixRow) DeepCopy() *ConfusionMatrixRow {
	if in == nil {
		return nil
	}
	out := new(ConfusionMatrixRow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerLog) DeepCopyInto(out *ContainerLog) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerLog.
func (in *ContainerLog) DeepCopy() *ContainerLog {
	if in == nil {
		return nil
	}
	out := new(ContainerLog)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CurvePoint) DeepCopyInto(out *CurvePoint) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CurvePoint.
func (in *CurvePoint) DeepCopy() *CurvePoint {
	if in == nil {
		return nil
	}
	out := new(CurvePoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCenter) DeepCopyInto(out *DataCenter) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCenter.
func (in *DataCenter) DeepCopy() *DataCenter {
	if in == nil {
		return nil
	}
	out := new(DataCenter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataTestCase) DeepCopyInto(out *DataTestCase) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	out.EntityRef = in.EntityRef
	out.CompareToRef = in.CompareToRef
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.ExpectedValue != nil {
		in, out := &in.ExpectedValue, &out.ExpectedValue
		*out = new(float64)
		**out = **in
	}
	if in.ExpectedCategory != nil {
		in, out := &in.ExpectedCategory, &out.ExpectedCategory
		*out = new(string)
		**out = **in
	}
	if in.Lower != nil {
		in, out := &in.Lower, &out.Lower
		*out = new(float64)
		**out = **in
	}
	if in.Upper != nil {
		in, out := &in.Upper, &out.Upper
		*out = new(float64)
		**out = **in
	}
	if in.ExpectedSet != nil {
		in, out := &in.ExpectedSet, &out.ExpectedSet
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.LowerInclusive != nil {
		in, out := &in.LowerInclusive, &out.LowerInclusive
		*out = new(bool)
		**out = **in
	}
	if in.UpperInclusive != nil {
		in, out := &in.UpperInclusive, &out.UpperInclusive
		*out = new(bool)
		**out = **in
	}
	if in.Generated != nil {
		in, out := &in.Generated, &out.Generated
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Column2 != nil {
		in, out := &in.Column2, &out.Column2
		*out = new(string)
		**out = **in
	}
	out.EntityRef2 = in.EntityRef2
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FeatureFilter != nil {
		in, out := &in.FeatureFilter, &out.FeatureFilter
		*out = new(FeatureFilterType)
		**out = **in
	}
	if in.ReferenceType != nil {
		in, out := &in.ReferenceType, &out.ReferenceType
		*out = new(ReferenceDataType)
		**out = **in
	}
	if in.Periods != nil {
		in, out := &in.Periods, &out.Periods
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataTestCase.
func (in *DataTestCase) DeepCopy() *DataTestCase {
	if in == nil {
		return nil
	}
	out := new(DataTestCase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataTestCaseResult) DeepCopyInto(out *DataTestCaseResult) {
	*out = *in
	in.Actual.DeepCopyInto(&out.Actual)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataTestCaseResult.
func (in *DataTestCaseResult) DeepCopy() *DataTestCaseResult {
	if in == nil {
		return nil
	}
	out := new(DataTestCaseResult)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FloatParameter) DeepCopyInto(out *FloatParameter) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FloatParameter.
func (in *FloatParameter) DeepCopy() *FloatParameter {
	if in == nil {
		return nil
	}
	out := new(FloatParameter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GithubEvents) DeepCopyInto(out *GithubEvents) {
	*out = *in
	if in.GitConnectionsName != nil {
		in, out := &in.GitConnectionsName, &out.GitConnectionsName
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.BlobNameRegex != nil {
		in, out := &in.BlobNameRegex, &out.BlobNameRegex
		*out = new(string)
		**out = **in
	}
	if in.Events != nil {
		in, out := &in.Events, &out.Events
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GithubEvents.
func (in *GithubEvents) DeepCopy() *GithubEvents {
	if in == nil {
		return nil
	}
	out := new(GithubEvents)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GpuClass) DeepCopyInto(out *GpuClass) {
	*out = *in
	if in.Gpumem != nil {
		in, out := &in.Gpumem, &out.Gpumem
		x := (*in).DeepCopy()
		*out = &x
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GpuClass.
func (in *GpuClass) DeepCopy() *GpuClass {
	if in == nil {
		return nil
	}
	out := new(GpuClass)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GpuClassCost) DeepCopyInto(out *GpuClassCost) {
	*out = *in
	if in.CostPerMinute != nil {
		in, out := &in.CostPerMinute, &out.CostPerMinute
		x := (*in).DeepCopy()
		*out = &x
	}
	if in.CostSpot != nil {
		in, out := &in.CostSpot, &out.CostSpot
		x := (*in).DeepCopy()
		*out = &x
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GpuClassCost.
func (in *GpuClassCost) DeepCopy() *GpuClassCost {
	if in == nil {
		return nil
	}
	out := new(GpuClassCost)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HistogramData) DeepCopyInto(out *HistogramData) {
	*out = *in
	if in.Bins != nil {
		in, out := &in.Bins, &out.Bins
		*out = make([]float64, len(*in))
		copy(*out, *in)
	}
	if in.Categories != nil {
		in, out := &in.Categories, &out.Categories
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Counts != nil {
		in, out := &in.Counts, &out.Counts
		*out = make([]float64, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HistogramData.
func (in *HistogramData) DeepCopy() *HistogramData {
	if in == nil {
		return nil
	}
	out := new(HistogramData)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Images) DeepCopyInto(out *Images) {
	*out = *in
	if in.TrainerImage != nil {
		in, out := &in.TrainerImage, &out.TrainerImage
		*out = new(string)
		**out = **in
	}
	if in.DataImage != nil {
		in, out := &in.DataImage, &out.DataImage
		*out = new(string)
		**out = **in
	}
	if in.PublisherImage != nil {
		in, out := &in.PublisherImage, &out.PublisherImage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Images.
func (in *Images) DeepCopy() *Images {
	if in == nil {
		return nil
	}
	out := new(Images)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LastRunStatus) DeepCopyInto(out *LastRunStatus) {
	*out = *in
	if in.CompletionTime != nil {
		in, out := &in.CompletionTime, &out.CompletionTime
		*out = (*in).DeepCopy()
	}
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(StatusError)
		**out = **in
	}
	if in.FailureMessage != nil {
		in, out := &in.FailureMessage, &out.FailureMessage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LastRunStatus.
func (in *LastRunStatus) DeepCopy() *LastRunStatus {
	if in == nil {
		return nil
	}
	out := new(LastRunStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Lib) DeepCopyInto(out *Lib) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Lib.
func (in *Lib) DeepCopy() *Lib {
	if in == nil {
		return nil
	}
	out := new(Lib)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Logs) DeepCopyInto(out *Logs) {
	*out = *in
	if in.Containers != nil {
		in, out := &in.Containers, &out.Containers
		*out = make([]ContainerLog, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Logs.
func (in *Logs) DeepCopy() *Logs {
	if in == nil {
		return nil
	}
	out := new(Logs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MLFramework) DeepCopyInto(out *MLFramework) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MLFramework.
func (in *MLFramework) DeepCopy() *MLFramework {
	if in == nil {
		return nil
	}
	out := new(MLFramework)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MLFramework) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MLFrameworkList) DeepCopyInto(out *MLFrameworkList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MLFramework, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MLFrameworkList.
func (in *MLFrameworkList) DeepCopy() *MLFrameworkList {
	if in == nil {
		return nil
	}
	out := new(MLFrameworkList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MLFrameworkList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MLFrameworkSpec) DeepCopyInto(out *MLFrameworkSpec) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.Lang != nil {
		in, out := &in.Lang, &out.Lang
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MLFrameworkSpec.
func (in *MLFrameworkSpec) DeepCopy() *MLFrameworkSpec {
	if in == nil {
		return nil
	}
	out := new(MLFrameworkSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineClass) DeepCopyInto(out *MachineClass) {
	*out = *in
	if in.Mem != nil {
		in, out := &in.Mem, &out.Mem
		x := (*in).DeepCopy()
		*out = &x
	}
	if in.Vcpu != nil {
		in, out := &in.Vcpu, &out.Vcpu
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineClass.
func (in *MachineClass) DeepCopy() *MachineClass {
	if in == nil {
		return nil
	}
	out := new(MachineClass)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineClassCost) DeepCopyInto(out *MachineClassCost) {
	*out = *in
	if in.CostPerMinute != nil {
		in, out := &in.CostPerMinute, &out.CostPerMinute
		x := (*in).DeepCopy()
		*out = &x
	}
	if in.CostSpot != nil {
		in, out := &in.CostSpot, &out.CostSpot
		x := (*in).DeepCopy()
		*out = &x
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineClassCost.
func (in *MachineClassCost) DeepCopy() *MachineClassCost {
	if in == nil {
		return nil
	}
	out := new(MachineClassCost)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedImage) DeepCopyInto(out *ManagedImage) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedImage.
func (in *ManagedImage) DeepCopy() *ManagedImage {
	if in == nil {
		return nil
	}
	out := new(ManagedImage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedImage) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedImageList) DeepCopyInto(out *ManagedImageList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ManagedImage, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedImageList.
func (in *ManagedImageList) DeepCopy() *ManagedImageList {
	if in == nil {
		return nil
	}
	out := new(ManagedImageList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedImageList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedImageSpec) DeepCopyInto(out *ManagedImageSpec) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Registry != nil {
		in, out := &in.Registry, &out.Registry
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]v1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gpu != nil {
		in, out := &in.Gpu, &out.Gpu
		*out = new(bool)
		**out = **in
	}
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.Preload != nil {
		in, out := &in.Preload, &out.Preload
		*out = new(bool)
		**out = **in
	}
	if in.ConnectionRef != nil {
		in, out := &in.ConnectionRef, &out.ConnectionRef
		*out = new(v1.ObjectReference)
		**out = **in
	}
	if in.Base != nil {
		in, out := &in.Base, &out.Base
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(ManagedImageRole)
		**out = **in
	}
	if in.MaintainedBy != nil {
		in, out := &in.MaintainedBy, &out.MaintainedBy
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
	if in.Frameworks != nil {
		in, out := &in.Frameworks, &out.Frameworks
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Libs != nil {
		in, out := &in.Libs, &out.Libs
		*out = make([]Lib, len(*in))
		copy(*out, *in)
	}
	if in.Private != nil {
		in, out := &in.Private, &out.Private
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedImageSpec.
func (in *ManagedImageSpec) DeepCopy() *ManagedImageSpec {
	if in == nil {
		return nil
	}
	out := new(ManagedImageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Measurement) DeepCopyInto(out *Measurement) {
	*out = *in
	out.Entity = in.Entity
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(Metric)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
	if in.Stddev != nil {
		in, out := &in.Stddev, &out.Stddev
		*out = new(float64)
		**out = **in
	}
	if in.BoolQty != nil {
		in, out := &in.BoolQty, &out.BoolQty
		*out = new(bool)
		**out = **in
	}
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.ValueSet != nil {
		in, out := &in.ValueSet, &out.ValueSet
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TimePoint != nil {
		in, out := &in.TimePoint, &out.TimePoint
		*out = (*in).DeepCopy()
	}
	if in.TaskType != nil {
		in, out := &in.TaskType, &out.TaskType
		*out = new(string)
		**out = **in
	}
	if in.Algorithm != nil {
		in, out := &in.Algorithm, &out.Algorithm
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Measurement.
func (in *Measurement) DeepCopy() *Measurement {
	if in == nil {
		return nil
	}
	out := new(Measurement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelDeploymentSpec) DeepCopyInto(out *ModelDeploymentSpec) {
	*out = *in
	out.ModelRef = in.ModelRef
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int32)
		**out = **in
	}
	if in.ModelVersion != nil {
		in, out := &in.ModelVersion, &out.ModelVersion
		*out = new(string)
		**out = **in
	}
	if in.Traffic != nil {
		in, out := &in.Traffic, &out.Traffic
		*out = new(int32)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(ModelRole)
		**out = **in
	}
	if in.MountTar != nil {
		in, out := &in.MountTar, &out.MountTar
		*out = new(bool)
		**out = **in
	}
	if in.TrafficSelector != nil {
		in, out := &in.TrafficSelector, &out.TrafficSelector
		*out = new(string)
		**out = **in
	}
	out.ApprovedBy = in.ApprovedBy
	if in.ApprovedAt != nil {
		in, out := &in.ApprovedAt, &out.ApprovedAt
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelDeploymentSpec.
func (in *ModelDeploymentSpec) DeepCopy() *ModelDeploymentSpec {
	if in == nil {
		return nil
	}
	out := new(ModelDeploymentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationSpec) DeepCopyInto(out *NotificationSpec) {
	*out = *in
	if in.ErrorTTL != nil {
		in, out := &in.ErrorTTL, &out.ErrorTTL
		*out = new(int32)
		**out = **in
	}
	if in.SuccessTTL != nil {
		in, out := &in.SuccessTTL, &out.SuccessTTL
		*out = new(int32)
		**out = **in
	}
	if in.NotifierName != nil {
		in, out := &in.NotifierName, &out.NotifierName
		*out = new(string)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationSpec.
func (in *NotificationSpec) DeepCopy() *NotificationSpec {
	if in == nil {
		return nil
	}
	out := new(NotificationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PRCurve) DeepCopyInto(out *PRCurve) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]CurvePoint, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PRCurve.
func (in *PRCurve) DeepCopy() *PRCurve {
	if in == nil {
		return nil
	}
	out := new(PRCurve)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterRange) DeepCopyInto(out *ParameterRange) {
	*out = *in
	if in.Low != nil {
		in, out := &in.Low, &out.Low
		*out = new(float64)
		**out = **in
	}
	if in.High != nil {
		in, out := &in.High, &out.High
		*out = new(float64)
		**out = **in
	}
	if in.Step != nil {
		in, out := &in.Step, &out.Step
		*out = new(int32)
		**out = **in
	}
	if in.Log != nil {
		in, out := &in.Log, &out.Log
		*out = new(bool)
		**out = **in
	}
	if in.Choices != nil {
		in, out := &in.Choices, &out.Choices
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DefaultValue != nil {
		in, out := &in.DefaultValue, &out.DefaultValue
		*out = new(float64)
		**out = **in
	}
	if in.DefaultChoice != nil {
		in, out := &in.DefaultChoice, &out.DefaultChoice
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterRange.
func (in *ParameterRange) DeepCopy() *ParameterRange {
	if in == nil {
		return nil
	}
	out := new(ParameterRange)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionsSpec) DeepCopyInto(out *PermissionsSpec) {
	*out = *in
	if in.Stakeholders != nil {
		in, out := &in.Stakeholders, &out.Stakeholders
		*out = make([]Stakeholder, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionsSpec.
func (in *PermissionsSpec) DeepCopy() *PermissionsSpec {
	if in == nil {
		return nil
	}
	out := new(PermissionsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PretrainedModel) DeepCopyInto(out *PretrainedModel) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PretrainedModel.
func (in *PretrainedModel) DeepCopy() *PretrainedModel {
	if in == nil {
		return nil
	}
	out := new(PretrainedModel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PretrainedModel) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PretrainedModelList) DeepCopyInto(out *PretrainedModelList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PretrainedModel, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PretrainedModelList.
func (in *PretrainedModelList) DeepCopy() *PretrainedModelList {
	if in == nil {
		return nil
	}
	out := new(PretrainedModelList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PretrainedModelList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PretrainedModelSpec) DeepCopyInto(out *PretrainedModelSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PretrainedModelSpec.
func (in *PretrainedModelSpec) DeepCopy() *PretrainedModelSpec {
	if in == nil {
		return nil
	}
	out := new(PretrainedModelSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicDataset) DeepCopyInto(out *PublicDataset) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicDataset.
func (in *PublicDataset) DeepCopy() *PublicDataset {
	if in == nil {
		return nil
	}
	out := new(PublicDataset)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PublicDataset) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicDatasetList) DeepCopyInto(out *PublicDatasetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PublicDataset, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicDatasetList.
func (in *PublicDatasetList) DeepCopy() *PublicDatasetList {
	if in == nil {
		return nil
	}
	out := new(PublicDatasetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PublicDatasetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicDatasetSpec) DeepCopyInto(out *PublicDatasetSpec) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = new(MLTask)
		**out = **in
	}
	if in.OpenMLID != nil {
		in, out := &in.OpenMLID, &out.OpenMLID
		*out = new(string)
		**out = **in
	}
	if in.DataUrl != nil {
		in, out := &in.DataUrl, &out.DataUrl
		*out = new(string)
		**out = **in
	}
	if in.Citation != nil {
		in, out := &in.Citation, &out.Citation
		*out = new(string)
		**out = **in
	}
	if in.Rows != nil {
		in, out := &in.Rows, &out.Rows
		*out = new(int32)
		**out = **in
	}
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = new(int32)
		**out = **in
	}
	if in.FileSize != nil {
		in, out := &in.FileSize, &out.FileSize
		*out = new(int32)
		**out = **in
	}
	if in.TargetColumn != nil {
		in, out := &in.TargetColumn, &out.TargetColumn
		*out = new(string)
		**out = **in
	}
	if in.Industry != nil {
		in, out := &in.Industry, &out.Industry
		*out = new(string)
		**out = **in
	}
	if in.Imbalanced != nil {
		in, out := &in.Imbalanced, &out.Imbalanced
		*out = new(bool)
		**out = **in
	}
	if in.DatasourceCR != nil {
		in, out := &in.DatasourceCR, &out.DatasourceCR
		*out = new(string)
		**out = **in
	}
	if in.DatasetCR != nil {
		in, out := &in.DatasetCR, &out.DatasetCR
		*out = new(string)
		**out = **in
	}
	if in.StudyCR != nil {
		in, out := &in.StudyCR, &out.StudyCR
		*out = new(string)
		**out = **in
	}
	if in.DataProductCR != nil {
		in, out := &in.DataProductCR, &out.DataProductCR
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicDatasetSpec.
func (in *PublicDatasetSpec) DeepCopy() *PublicDatasetSpec {
	if in == nil {
		return nil
	}
	out := new(PublicDatasetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Region) DeepCopyInto(out *Region) {
	*out = *in
	if in.Datacenters != nil {
		in, out := &in.Datacenters, &out.Datacenters
		*out = make([]DataCenter, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Region.
func (in *Region) DeepCopy() *Region {
	if in == nil {
		return nil
	}
	out := new(Region)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceSpec) DeepCopyInto(out *ResourceSpec) {
	*out = *in
	if in.WorkloadName != nil {
		in, out := &in.WorkloadName, &out.WorkloadName
		*out = new(string)
		**out = **in
	}
	if in.Custom != nil {
		in, out := &in.Custom, &out.Custom
		*out = new(bool)
		**out = **in
	}
	out.CpuImage = in.CpuImage
	out.GpuImage = in.GpuImage
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceSpec.
func (in *ResourceSpec) DeepCopy() *ResourceSpec {
	if in == nil {
		return nil
	}
	out := new(ResourceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocAucCurve) DeepCopyInto(out *RocAucCurve) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]CurvePoint, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocAucCurve.
func (in *RocAucCurve) DeepCopy() *RocAucCurve {
	if in == nil {
		return nil
	}
	out := new(RocAucCurve)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunSchedule) DeepCopyInto(out *RunSchedule) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Cron != nil {
		in, out := &in.Cron, &out.Cron
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunSchedule.
func (in *RunSchedule) DeepCopy() *RunSchedule {
	if in == nil {
		return nil
	}
	out := new(RunSchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunScheduleStatus) DeepCopyInto(out *RunScheduleStatus) {
	*out = *in
	if in.LastRun != nil {
		in, out := &in.LastRun, &out.LastRun
		*out = (*in).DeepCopy()
	}
	if in.NextRun != nil {
		in, out := &in.NextRun, &out.NextRun
		*out = (*in).DeepCopy()
	}
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(StatusError)
		**out = **in
	}
	if in.FailureMessage != nil {
		in, out := &in.FailureMessage, &out.FailureMessage
		*out = new(string)
		**out = **in
	}
	in.LastRunLogs.DeepCopyInto(&out.LastRunLogs)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunScheduleStatus.
func (in *RunScheduleStatus) DeepCopy() *RunScheduleStatus {
	if in == nil {
		return nil
	}
	out := new(RunScheduleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Stakeholder) DeepCopyInto(out *Stakeholder) {
	*out = *in
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]v1.ObjectReference, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Stakeholder.
func (in *Stakeholder) DeepCopy() *Stakeholder {
	if in == nil {
		return nil
	}
	out := new(Stakeholder)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestSuite) DeepCopyInto(out *TestSuite) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Tests != nil {
		in, out := &in.Tests, &out.Tests
		*out = make([]DataTestCase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestSuite.
func (in *TestSuite) DeepCopy() *TestSuite {
	if in == nil {
		return nil
	}
	out := new(TestSuite)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestSuiteResult) DeepCopyInto(out *TestSuiteResult) {
	*out = *in
	out.EntityRef = in.EntityRef
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.StopTime != nil {
		in, out := &in.StopTime, &out.StopTime
		*out = (*in).DeepCopy()
	}
	if in.Tests != nil {
		in, out := &in.Tests, &out.Tests
		*out = make([]DataTestCaseResult, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestSuiteResult.
func (in *TestSuiteResult) DeepCopy() *TestSuiteResult {
	if in == nil {
		return nil
	}
	out := new(TestSuiteResult)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VizUri) DeepCopyInto(out *VizUri) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VizUri.
func (in *VizUri) DeepCopy() *VizUri {
	if in == nil {
		return nil
	}
	out := new(VizUri)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerRunResult) DeepCopyInto(out *WorkerRunResult) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerRunResult.
func (in *WorkerRunResult) DeepCopy() *WorkerRunResult {
	if in == nil {
		return nil
	}
	out := new(WorkerRunResult)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadClass) DeepCopyInto(out *WorkloadClass) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadClass.
func (in *WorkloadClass) DeepCopy() *WorkloadClass {
	if in == nil {
		return nil
	}
	out := new(WorkloadClass)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkloadClass) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadClassList) DeepCopyInto(out *WorkloadClassList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WorkloadClass, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadClassList.
func (in *WorkloadClassList) DeepCopy() *WorkloadClassList {
	if in == nil {
		return nil
	}
	out := new(WorkloadClassList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkloadClassList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadClassSpec) DeepCopyInto(out *WorkloadClassSpec) {
	*out = *in
	if in.ResourcesTemplate != nil {
		in, out := &in.ResourcesTemplate, &out.ResourcesTemplate
		*out = new(ResourceSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadClassSpec.
func (in *WorkloadClassSpec) DeepCopy() *WorkloadClassSpec {
	if in == nil {
		return nil
	}
	out := new(WorkloadClassSpec)
	in.DeepCopyInto(out)
	return out
}
