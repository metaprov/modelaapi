/**
*
* Copyright (C) 2017 modela authors
* For license information, see LICENSE.txt
*/
// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1;

import "github.com/metaprov/modelaapi/pkg/apis/catalog/v1alpha1/generated.proto";
import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/apimachinery/pkg/api/resource/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "github.com/metaprov/modelaapi/pkg/apis/infra/v1alpha1";

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=accounts,shortName=acct,singular=account,categories={infra,modela}
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Type",type="string",JSONPath=".spec.type",description=""
// +kubebuilder:printcolumn:name="Username",type="string",JSONPath=".spec.username",description=""
// +kubebuilder:printcolumn:name="Team",type="string",JSONPath=".spec.memberOf",description=""
// +kubebuilder:printcolumn:name="Phone",type="string",JSONPath=".spec.phone",description="",priority=1
// +kubebuilder:printcolumn:name="Email",type="string",JSONPath=".spec.email",description="",priority=1
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// Account represents a single user on the system or a team that other Accounts can be grouped under
message Account {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AccountSpec spec = 2;

  // +optional
  optional AccountStatus status = 3;
}

// +kubebuilder:object:root=true
// AccountList represent list of accounts.
message AccountList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Account items = 2;
}

// AccountSpec defines the desired state of an Account
message AccountSpec {
  // The reference to the tenant which the object exists under
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference tenantRef = 1;

  // The type of Account, which can be a user or a group
  // +kubebuilder:default:=user
  // +kubebuilder:validation:Optional
  optional string type = 3;

  // The username of the account, which can be used to log into Modela
  // +kubebuilder:validation:MinLength=4
  // +kubebuilder:validation:MaxLength=64
  // +kubebuilder:validation:Required
  // +required
  optional string username = 4;

  // The first name of the person using the Account
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  // +kubebuilder:validation:MaxLength=64
  optional string firstName = 5;

  // The last name of the person using the Account
  // +kubebuilder:default:=""
  // +kubebuilder:validation:MaxLength=64
  // +kubebuilder:validation:Optional
  optional string lastName = 6;

  // The e-mail address of the person using the Account
  // +kubebuilder:default:=""
  // +kubebuilder:validation:MaxLength=64
  // +kubebuilder:validation:Required
  // +required
  optional string email = 7;

  // The phone number of the person using the Account
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  // +kubebuilder:validation:MaxLength=64
  optional string phone = 8;

  // Indicates if the Account has admin permissions. Admin accounts have unrestricted access
  // to all resources and full control to modify and create other Accounts
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool admin = 9;

  // MemberOf specifies the name of the team that the Account belongs to.
  // The Account will assume all the permissions of the parent Account
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string memberOf = 11;

  // Indicates if the Account will be prompted to reset their password upon login
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool resetPassword = 13;

  // Avatar specifies the location of the Account's avatar image
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.FileLocation avatar = 18;

  // The collection of DataProduct names that will be displayed with priority on the tenant dashboard for the Account
  // +kubebuilder:validation:Optional
  repeated string favoriteProducts = 19;
}

// AccountStatus defines the actual state of the api object
message AccountStatus {
  // The last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time updatedAt = 1;

  // ObservedGeneration is the last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 2;

  // In the case of failure, the Account resource controller will set this field with a failure reason
  // +kubebuilder:validation:Optional
  optional string failureReason = 3;

  // In the case of failure, the Account resource controller will set this field with a failure message
  // +kubebuilder:validation:Optional
  optional string failureMessage = 4;

  // Total models owned by this user
  // +kubebuilder:validation:Optional
  optional int32 modelsCount = 5;

  // Total model classes owned by this user
  // +kubebuilder:validation:Optional
  optional int32 modelClassesCount = 6;

  // Total number of feature groups that this user is owner of.
  // +kubebuilder:validation:Optional
  optional int32 predictorsCount = 7;

  // Total number of feature groups that this user is responsible for.
  // +kubebuilder:validation:Optional
  optional int32 featureGroupsCount = 8;

  // Total number of feature groups that this user is responsible for.
  // +kubebuilder:validation:Optional
  optional int32 datasetsCount = 9;

  // If the Account is a group account, the total number of Accounts that exist under the group
  // +kubebuilder:validation:Optional
  optional int32 membersCount = 10;

  // +patchMergeKey=type
  // +patchStrategy=merge
  // +kubebuilder:validation:Optional
  repeated k8s.io.apimachinery.pkg.apis.meta.v1.Condition conditions = 11;
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:resource:path=alerts,singular=alert,categories={infra,modela}
// +kubebuilder:storageversion
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase",description=""
// +kubebuilder:printcolumn:name="Level",type="string",JSONPath=".spec.level",description=""
// +kubebuilder:printcolumn:name="Subject",type="string",JSONPath=".spec.subject",description=""
// +kubebuilder:printcolumn:name="Entity Namespace",type="string",JSONPath=".spec.entityRef.namespace",description="",priority=1
// +kubebuilder:printcolumn:name="Entity Name",type="string",JSONPath=".spec.entityRef.name",description="",priority=1
// +kubebuilder:printcolumn:name="Notifier",type="string",JSONPath=".spec.notifierName",description="",priority=1
// +kubebuilder:printcolumn:name="FiredAt",type="date",JSONPath=".status.at",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// Alert represents temporal information about an event that occurred with a Modela custom resource
message Alert {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AlertSpec spec = 2;

  // +optional
  optional AlertStatus status = 3;
}

// AlertList is a list of Alerts
// +kubebuilder:object:root=true
message AlertList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Alert items = 2;
}

message AlertSpec {
  // Subject details the primary message of the Alert
  // +kubebuilder:default:=""
  optional string subject = 1;

  // Level specifies the significance of the Alert, which can be normal, warning, or error
  // +kubebuilder:default:="normal"
  optional string level = 2;

  // EntityRef references the custom resource relevant to the Alert
  optional k8s.io.api.core.v1.ObjectReference entityRef = 3;

  // Owner references the name of the Account which owns the Alert
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 4;

  // Fields defines additional key-value information about the event
  // +kubebuilder:validation:Optional
  map<string, string> fields = 5;

  // URL specifies a link relevant to the subject
  // +kubebuilder:validation:Optional
  optional string url = 6;

  // Image specifies the link to an image relevant to the subject
  // +kubebuilder:validation:Optional
  optional string image = 7;

  // Notification defines to configuration to forward the Alert to an external Notifier
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.NotificationSpec notification = 8;
}

// AlertStatus is the observed state of an Alert
message AlertStatus {
  // The time when the Alert was fired
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time firedAt = 2;

  // ObservedGeneration is the last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 3;

  // The last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time updatedAt = 4;

  // In the case of failure, the Alert resource controller will set this field with a failure message
  // +kubebuilder:validation:Optional
  optional string failureMessage = 5;

  // +patchMergeKey=type
  // +patchStrategy=merge
  // +kubebuilder:validation:Optional
  repeated k8s.io.apimachinery.pkg.apis.meta.v1.Condition conditions = 6;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=attachments,singular=attachment,categories={infra,modela}
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Entity Namespace",type="string",JSONPath=".spec.entityRef.name",description=""
// +kubebuilder:printcolumn:name="Entity Name",type="string",JSONPath=".spec.entityRef.namespace",description=""
// +kubebuilder:printcolumn:name="BucketName",type="string",JSONPath=".spec.bucketName",description=""
// +kubebuilder:printcolumn:name="Path",type="string",JSONPath=".spec.path",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// Attachment represent an file attached to a resource.
message Attachment {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AttachmentSpec spec = 2;

  // +optional
  optional AttachmentStatus status = 3;
}

// +kubebuilder:object:root=true
// AttachmentList is a list of Attachments
message AttachmentList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Attachment items = 2;
}

// AttachmentSpec defines the desired state of Attachment
message AttachmentSpec {
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 1;

  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string description = 2;

  // Entity ref
  optional k8s.io.api.core.v1.ObjectReference entityRef = 3;

  // +kubebuilder:default:=""
  // Bucketname is the name of the bucket
  // +kubebuilder:validation:Optional
  optional string bucketName = 4;

  // Path to the full data file (e.g. csv file).
  // +kubebuilder:validation:Optional
  optional string path = 5;

  // TenantRef is the commit tenant
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference tenantRef = 6;
}

// AttachmentStatus is the observed state of a Attachment
message AttachmentStatus {
  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 1;

  // Last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time updatedAt = 2;

  // UpdateUpdateStrategy in case of terminal failure
  // Borrowed from cluster api controller
  // +kubebuilder:validation:Optional
  optional string failureReason = 3;

  // UpdateUpdateStrategy in case of terminal failure message
  // +kubebuilder:validation:Optional
  optional string failureMessage = 4;

  // +patchMergeKey=type
  // +patchStrategy=merge
  // +kubebuilder:validation:Optional
  repeated k8s.io.apimachinery.pkg.apis.meta.v1.Condition conditions = 5;
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:resource:path=connections,shortName=conn,singular=connection,categories={infra,modela}
// +kubebuilder:storageversion
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Provider",type="string",JSONPath=".spec.provider",description=""
// +kubebuilder:printcolumn:name="Category",type="string",JSONPath=".spec.category",description=""
// +kubebuilder:printcolumn:name="Secret",type="string",JSONPath=".spec.secretRef.name",description="",priority=1
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// Connection defines a connection to an external system (e.g. database, public cloud)
message Connection {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ConnectionSpec spec = 2;

  // +optional
  optional ConnectionStatus status = 3;
}

// +kubebuilder:object:root=true
// ConnectionList is a list of Connections.
message ConnectionList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Connection items = 2;
}

// ConnectionSpec defines the desired state of a Connection
message ConnectionSpec {
  // The reference to the Tenant which owns the DataProduct. Defaults to `default-tenant`
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference tenantRef = 1;

  // The type of external system which the connection references
  // +kubebuilder:default:="general"
  // +kubebuilder:validation:Optional
  optional string category = 2;

  // Provider specifies the name of the provider to the external system
  // +kubebuilder:validation:Required
  // +required
  optional string provider = 3;

  // SecretData contains a map of sensitive parameters relevant to the connection and their values. Modela
  // will automatically clear this map and transfer the values to Vault
  map<string, string> secretData = 4;

  // Options contains non-sensitive options relevant to the Connection
  map<string, string> options = 5;

  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 6;

  optional k8s.io.api.core.v1.SecretReference secretRef = 7;
}

// ConnectionStatus is the observed state of a Connection
message ConnectionStatus {
  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 1;

  // Last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time updatedAt = 2;

  // UpdateUpdateStrategy in case of terminal failure
  // Borrowed from cluster api controller
  // +kubebuilder:validation:Optional
  optional string failureReason = 3;

  // UpdateUpdateStrategy in case of terminal failure message
  // +kubebuilder:validation:Optional
  optional string failureMessage = 4;

  // +patchMergeKey=type
  // +patchStrategy=merge
  // +kubebuilder:validation:Optional
  repeated k8s.io.apimachinery.pkg.apis.meta.v1.Condition conditions = 5;
}

// IngressSpec defines the configuration to for a Serving Site to create Ingress resources
message IngressSpec {
  // FQDN specifies the fully-qualified domain name that the Serving Site's Ingress will use as the base host for the
  // endpoint of services deployed under the Serving Site. For example, setting the FQDN as `model-serving.modela.ai`
  // will automatically serve Predictors using the REST API at `predictors.model-serving.modela.ai`
  // +kubebuilder:default:="serving.vcap.me"
  // +kubebuilder:validation:Optional
  optional string fqdn = 1;

  // Grpc indicates if the Serving Site will create an Ingress resource to serve GRPC prediction traffic.
  // All Predictor resources created under the Serving Site will receive a unique host in the Ingress
  // determined by the name of the Predictor and the FQDN of the ServingSite (i.e. my-predictor.model-serving.modela.ai)
  // +kubebuilder:default:=true
  // +kubebuilder:validation:Optional
  optional bool grpc = 2;

  // HTTP indicates if the Serving Site will create an Ingress resource to serve HTTP prediction traffic.
  // All HTTP traffic will be served under a single host determined by the FQDN of the ServingSite
  // (i.e. predictors.model-serving.modela.ai). HTTP must be enabled to serve Data Apps over Ingress
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool http = 3;

  // IngressClassName is the name of the ingress class that will be applied to created Ingress resources
  // (defaults to nginx)
  // +kubebuilder:default:="nginx"
  optional string ingressClassName = 4;

  // IssuerName specifies the name of a cert-manager Issuer resource in the same namespace as the Serving Site
  // that will provide a TLS certificate to the ingress. This will be added as an annotation to the ingress.
  // +kubebuilder:validation:Optional
  optional string issuerName = 5;

  // ClusterIssuerName specifies the name of a cert-manager ClusterIssuer resource
  // that will provide a TLS certificate to the ingress. This will be added as an annotation to the ingress.
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string clusterIssuerName = 6;

  // TlsSecretName specifies the name of the secret that contains the TLS certificate for the ingress.
  // If it does not exist, ClusterIssuerName or IssuerName must be specified for Cert Manager to
  // generate the serving certificate. If this field is specified, TLS will be implicitly enabled.
  // +kubebuilder:validation:Optional
  optional string tlsSecretName = 7;
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:resource:path=labs,singular=lab,categories={infra,modela,all}
// +kubebuilder:storageversion
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Owner",type="string",JSONPath=".spec.owner"
// +kubebuilder:printcolumn:name="Cluster",type="string",JSONPath=".spec.clusterName"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
// Lab represents a single namespace where data analysis and model training workloads take place
message Lab {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional LabSpec spec = 2;

  // +optional
  optional LabStatus status = 3;
}

// +kubebuilder:object:root=true
// LabList is the list of Labs
message LabList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Lab items = 2;
}

// LabSpec defines the desired state of a Lab
message LabSpec {
  // The user-provided description of the Lab
  // +kubebuilder:validation:Optional
  // +kubebuilder:default:=""
  // +kubebuilder:validation:MaxLength=256
  optional string description = 1;

  // Owner specifies the name of the Account which the object belongs to
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 5;

  // Limits specifies the hard resource limits that can be allocated for workloads created under the Lab
  // +kubebuilder:validation:Optional
  optional ResourceLimitSpec limits = 3;

  // PackageStorage defines the specification for a persistent volume used to store Python packages.
  // Some workloads, like LLM document ingestion, or recipes, may require external Python packages.
  // When unspecified, persistence will not be enabled for packages
  optional VolumeStorageSpec packageStorage = 4;
}

// LabStatus is the observed state of a Lab
message LabStatus {
  // ObservedGeneration is the last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 1;

  // The name of the Persistent Volume Claim belonging to the Lab
  // +kubebuilder:validation:Optional
  optional string volumeClaimName = 2;

  // The last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time updatedAt = 3;

  // +patchMergeKey=type
  // +patchStrategy=merge
  // +kubebuilder:validation:Optional
  repeated k8s.io.apimachinery.pkg.apis.meta.v1.Condition conditions = 4;
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:resource:path=licenses,singular=license,categories={infra,modela}
// +kubebuilder:storageversion
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Valid\")].status",description=""
// +kubebuilder:printcolumn:name="Owner",type="string",JSONPath=".spec.owner",description=""
// +kubebuilder:printcolumn:name="Secret",type="string",JSONPath=".spec.secretRef.name",description=""
// +kubebuilder:printcolumn:name="Trial Start",type="string",JSONPath=".spec.trialStart",description=""
// +kubebuilder:printcolumn:name="Trial End",type="string",JSONPath=".spec.trialEnd",description=""
// +kubebuilder:printcolumn:name="ExpectedValueMax Trainers",type="string",JSONPath=".spec.maxTrainers",description="",priority=1
// +kubebuilder:printcolumn:name="ExpectedValueMax Nodes",type="string",JSONPath=".spec.maxServers",description="",priority=1
// +kubebuilder:printcolumn:name="ExpectedValueMax Users",type="string",JSONPath=".spec.maxUsers",description="",priority=1
// +kubebuilder:printcolumn:name="Expire FiredAt",type="date",JSONPath=".spec.expireAt",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// License represents the license key and limitations of a cluster-wide license obtained from Modela.ai
message License {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional LicenseSpec spec = 2;

  // +optional
  optional LicenseStatus status = 3;
}

// +kubebuilder:object:root=true
// LicenseList is a list of Licenses
message LicenseList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated License items = 2;
}

// LicenseSpec defines the details of a License. The contents of the specification are derived from
// the actual license key, and changing the specification has no effect on the limitations of the license
message LicenseSpec {
  // The reference to the secret containing the license token
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.SecretReference secretRef = 2;

  // The e-mail address of the Modela.ai account which owns the license
  // +kubebuilder:validation:Optional
  // +kubebuilder:default:=""
  optional string email = 4;

  // TrialStartAt is the start date for of the free trial period, if active
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time trialStartAt = 5;

  // TrialEndAt specifies when the free trial expires, if active
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time trialEndAt = 6;

  // MaxProducts specifies the maximum number of DataProduct across the cluster
  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:validation:Optional
  optional int32 maxProducts = 7;

  // MaxTrainers specifies the maximum number of parallel trainers that can be active at once
  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:validation:Optional
  optional int32 maxTrainers = 8;

  // MaxServers specifies the maximum number of Kubernetes nodes that may be utilized at once
  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:validation:Optional
  optional int32 maxServers = 9;

  // MaxUsers specifies the maximum number of Accounts that can be created across all tenants
  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:validation:Optional
  optional int32 maxUsers = 10;

  // MaxDataPlanes specifies the maximum number of data plane replicas that may exist at once
  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:validation:Optional
  optional int32 maxDataPlanes = 11;

  // Forecast indicates if Modela can generate forecasting models
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool forecast = 12;

  // NLP indicates if natural language processing models are supported
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool nlp = 13;

  // Vision indicates if computer vision models are supported
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool vision = 14;

  // Chatbot indicates if chatbot models are supported
  // +kubebuilder:default:=false
  optional bool chatbot = 15;

  // The name of the license product, internal to Modela.ai
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string productName = 16;

  // The name of the license price, internal to Modela.ai
  // +kubebuilder:validation:Optional
  optional string priceName = 17;

  // The date at which the license expires
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time expireAt = 18;

  // The reference to a Notifier resource that receives Alerts for license expiration
  // +kubebuilder:validation:Optional
  optional string notifierName = 19;
}

// LicenseStatus is the observed state of a License
message LicenseStatus {
  // The last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time updatedAt = 1;

  // ObservedGeneration is the last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 2;

  // In the case of failure, the License resource controller will set this field with a failure reason
  // +kubebuilder:validation:Optional
  optional string failureReason = 3;

  // In the case of failure, the License resource controller will set this field with a failure message
  // +kubebuilder:validation:Optional
  optional string failureMessage = 4;

  // +patchMergeKey=type
  // +patchStrategy=merge
  // +kubebuilder:validation:Optional
  repeated k8s.io.apimachinery.pkg.apis.meta.v1.Condition conditions = 5;
}

message NFSVolumeSpec {
  // server is the hostname or IP address of the NFS server.
  // More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
  optional string server = 1;

  // path that is exported by the NFS server.
  // More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
  optional string path = 2;
}

// NotificationChannelSpec describes a single Connection to an external messaging system and a destination channel within the system
message NotificationChannelSpec {
  // Indicates if the channel is enabled to send forwarded Alerts
  // +kubebuilder:default:=true
  // +kubebuilder:validation:Optional
  optional bool enabled = 1;

  // The name of the Connection resource which exists in the same tenant as the parent Notifier
  // +kubebuilder:validation:Required
  // +kubebuilder:default:=""
  optional string connectionName = 2;

  // Indicates if the channel will send Alerts with the `info` level
  // +kubebuilder:default:= false
  // +kubebuilder:validation:Optional
  optional bool info = 3;

  // Indicates if the channel will send Alerts with the `error` level
  // +kubebuilder:default:= true
  // +kubebuilder:validation:Optional
  optional bool error = 4;

  // The destination channel that exists in the external system that ConnectionName references.
  // For example, a Slack channel name, a Discord channel ID, or an e-mail address
  optional string destination = 7;
}

message NotificationChannelStatus {
  // The name of the Connection resource which exists in the same tenant as the parent Notifier
  // +kubebuilder:validation:Required
  // +kubebuilder:default:=""
  optional string connectionName = 2;

  // The last time a message was sent on this channel
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastMessageAt = 1;

  // In the case of failure, the Notifier resource controller will set this field with a failure message
  // +kubebuilder:validation:Optional
  optional string failureMessage = 3;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=notifiers,singular=notifier,categories={infra,modela}
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Owner",type="string",JSONPath=".spec.owner",description=""
// +kubebuilder:printcolumn:name="Description",type="string",JSONPath=".spec.description",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// The Notifier resource
message Notifier {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional NotifierSpec spec = 2;

  // +optional
  optional NotifierStatus status = 3;
}

// +kubebuilder:object:root=true
// NotifierList is a list of Notifiers
message NotifierList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Notifier items = 2;
}

// NotifierSpec defines the desired state of a Notifier
message NotifierSpec {
  // Indicates if the Notifier will send notifications
  // +kubebuilder:default:=true
  // +kubebuilder:validation:Optional
  optional bool enabled = 1;

  // The reference to the tenant which the object exists under
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference tenantRef = 2;

  // The user provided description of the object
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string description = 3;

  // The name of the Account which created the object, which exists in the same tenant as the object
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 4;

  // Channels specifies the list of notification channels that the Notifier will forward the information from Alerts to.
  // Each channel specifies a Connection resource for an external messaging system, and a destination channel within the system
  // to forward the information from Alerts to
  // +kubebuilder:validation:Optional
  repeated NotificationChannelSpec channels = 5;
}

// NotifierStatus is the observed state of a Notifier
message NotifierStatus {
  // ObservedGeneration is the last generation that was reconciled by Modela
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 1;

  // UpdatedAt specifies the last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time updatedAt = 2;

  // ChannelsStatus describes the status of each notification channel (per individual Connection)
  // +kubebuilder:validation:Optional
  repeated NotificationChannelStatus channelsStatus = 3;

  // +kubebuilder:validation:Optional
  repeated k8s.io.apimachinery.pkg.apis.meta.v1.Condition conditions = 4;
}

// ResourceLimitSpec defines the resource limits for workloads created under Lab and Serving Site namespaces
message ResourceLimitSpec {
  // Indicates if the resource limit is enabled
  // +kubebuilder:validation:Optional
  // +kubebuilder:default:=false
  optional bool enabled = 1;

  // QuotaSpec defines the resource quota specification for the namespace
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ResourceQuotaSpec quota = 2;

  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.LimitRangeSpec limitRange = 3;
}

// RuleSpec defines the relation between a resource and the actions that can be performed on the resource
message RuleSpec {
  // The kind of the resource
  optional string resource = 1;

  // List of allowed actions on the resource
  repeated string verbs = 2;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=servingsites,singular=servingsite,categories={infra,modela}
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Owner",type="string",JSONPath=".spec.owner",description="owner"
// +kubebuilder:printcolumn:name="FQDN",type="string",JSONPath=".spec.ingress.fqdn",description=""
// +kubebuilder:printcolumn:name="GRPC Ingress",type="string",JSONPath=".status.grpcIngressName",description=""
// +kubebuilder:printcolumn:name="HTTP Ingress",type="string",JSONPath=".status.httpIngressName",description=""
// +kubebuilder:printcolumn:name="Predictors",type="number",JSONPath=".status.activePredictors",description=""
// +kubebuilder:printcolumn:name="Cluster",type="string",JSONPath=".spec.clusterName",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// ServingSite represents a namespace where model serving workloads are executed under
message ServingSite {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ServingSiteSpec spec = 2;

  // +optional
  optional ServingSiteStatus status = 3;
}

// +kubebuilder:object:root=true
// ServingSiteList is a list of ServingSite
message ServingSiteList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated ServingSite items = 2;
}

// ServingSiteSpec defines the desired state of a ServingSite
message ServingSiteSpec {
  // The user-provided description of the object
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string description = 1;

  // The name of the Account which created the object, which exists in the same tenant as the object
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 2;

  // Limits specifies the hard resource limits that can be allocated for workloads created under the ServingSite
  // +kubebuilder:validation:Optional
  optional ResourceLimitSpec limits = 3;

  // Ingress defines the specification to create Ingress resources that can route traffic
  // to the resources which exist under the Serving Site namespace
  // +kubebuilder:validation:Optional
  optional IngressSpec ingress = 4;
}

message ServingSiteStatus {
  // ObservedGeneration is the last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 1;

  // The last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time updatedAt = 2;

  // The number of active predictor services
  optional int32 activePredictors = 3;

  // The number of inactive (non-deployed) predictors
  optional int32 inactivePredictors = 4;

  // The number of predictor services that have failed/errored
  optional int32 totalPredictorServiceFailed = 5;

  // The number of predictors that have detected a data drift
  optional int32 totalPredictorDataDriftFailed = 6;

  // The number of predictors that have detected average inaccurate results
  optional int32 totalPredictorAccuracyFailed = 7;

  // The collection of predictions from the last 7 days
  repeated int32 dailyPredictionsCounts = 8;

  // In the case of failure, the ServingSite resource controller will set this field with a failure message
  // +kubebuilder:validation:Optional
  optional string failureMessage = 10;

  // GrpcIngressName specifies the name of the Kubernetes Ingress resource which the Serving Site uses to define
  // external access points for resources that accept GRPC-based traffic to their services (i.e. Predictors).
  // This field is set only after one or more resources are created which use the Ingress access method.
  // If there are no Ingress rules to serve then the Ingress will be destroyed
  // +kubebuilder:validation:Optional
  optional string grpcIngressName = 11;

  // HttpIngressName specifies the name of the Kubernetes Ingress resource which the Serving Site uses to define
  // external access points for resources that accept HTTP-based traffic to their services (i.e. Data Apps).
  // This field is set only after one or more resources are created which use the Ingress access method to serve HTTP traffic.
  // If there are no Ingress rules to serve then the Ingress will be destroyed
  optional string restIngressName = 12;

  // +patchMergeKey=type
  // +patchStrategy=merge
  // +kubebuilder:validation:Optional
  repeated k8s.io.apimachinery.pkg.apis.meta.v1.Condition conditions = 15;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=tenants,singular=tenant,categories={infra,modela}
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Default Lab",type="string",JSONPath=".spec.defaultLabRef.Name",description=""
// +kubebuilder:printcolumn:name="Default Serving Site",type="string",JSONPath=".spec.defaultServingSiteRef.Name",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// Tenant represents a root namespace for tenant-level resources and child DataProduct namespaces
message Tenant {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional TenantSpec spec = 2;

  // +optional
  optional TenantStatus status = 3;
}

// TenantList represent a list of Tenants
// +kubebuilder:object:root=true
message TenantList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Tenant items = 2;
}

// TenantSpec defines the desired state of a Tenant
message TenantSpec {
  // DefaultLabName specifies a Lab resource that will be used as a default for all resources that
  // do not specify a Lab or have a Data Product which specifies a default Lab
  // +kubebuilder:validation:Optional
  optional string defaultLabName = 1;

  // DefaultServingSiteName specifies a Serving Site resource that will be used as a default for all resources that
  // do not specify a Serving Site and has a Data Product that does not specify a default Serving Site
  // +kubebuilder:validation:Optional
  optional string defaultServingSiteName = 2;

  // DefaultBucketName specifies a Virtual Bucket resource that will be used as a default for all resources that
  // do not specify a Virtual Bucket and has a Data Product that does not specify a default Virtual Bucket
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string defaultBucketName = 3;

  // CacheBucketName specifies the name of the Virtual Bucket which workloads for resources under the Tenant
  // will use internally for caching workloads. Setting CacheBucketName to a valid Virtual Bucket is highly
  // recommended for stability and performance
  // +kubebuilder:validation:Required
  // +required
  optional string cacheBucketName = 4;

  // Permissions defines the set of permissions applied to each Account when accessing resources within the Tenant
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.PermissionsSpec permissions = 5;

  // The default notification specification for all resources under the tenant
  // +kubebuilder:validation:Optional
  optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.NotificationSpec notification = 6;

  // OnlineStore references a Connection resource to an external database that the Modela online store microservice
  // will use as an online store. The online store service must be installed through the Modela Operator
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference onlineStoreConnection = 7;

  // MetricStore references a Connection resource to an external database that will act as the metric store for the Tenant.
  // The metric store stores metadata about resources that perform workloads (i.e. datasets, models, studies, etc.)
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference metricStoreConnection = 8;
}

// TenantStatus defines the actual state of a Tenant
message TenantStatus {
  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 1;

  // Last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time updatedAt = 2;

  // UpdateUpdateStrategy in case of terminal failure
  // Borrowed from cluster api controller
  // +kubebuilder:validation:Optional
  optional string failureReason = 3;

  // UpdateUpdateStrategy in case of terminal failure message
  // +kubebuilder:validation:Optional
  optional string failureMessage = 4;

  // +patchMergeKey=type
  // +patchStrategy=merge
  // +kubebuilder:validation:Optional
  repeated k8s.io.apimachinery.pkg.apis.meta.v1.Condition conditions = 5;
}

// +kubebuilder:storageversion
// +kubebuilder:resource:path=userroleclasses,singular=userroleclass,categories={infra,modela,all}
// +kubebuilder:object:root=true
// UserRoleClass specifies the permissions that can be performed on a set of resources
message UserRoleClass {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional UserRoleClassSpec spec = 2;
}

// UserRoleClassList contains a list of UserRoleClasses
// +kubebuilder:object:root=true
message UserRoleClassList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated UserRoleClass items = 2;
}

// UserRoleClassSpec contains the permissions for a UserRoleClass
message UserRoleClassSpec {
  // The owner of the user role class
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference tenantRef = 1;

  // The description of the user role class.
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string description = 2;

  // The name of the Account which created the object, which exists in the same tenant as the object
  // +kubebuilder:default:="admin"
  // +kubebuilder:validation:Optional
  optional string owner = 3;

  // The collection of rules, consisting of a resource and the actions that can be performed on the resource
  // +kubebuilder:validation:Optional
  repeated RuleSpec rules = 4;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=virtualbuckets,shortName=vb,singular=virtualbucket,categories={infra,modela,all}
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Owner",type="string",JSONPath=".spec.owner",description="owner"
// +kubebuilder:printcolumn:name="ConnectionName",type="string",JSONPath=".spec.connectionName",description="virtual bucket connections"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// VirtualBucket represents an abstract object storage system used to store flat-files
message VirtualBucket {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional VirtualBucketSpec spec = 2;

  // +optional
  optional VirtualBucketStatus status = 3;
}

// VirtualBucketList is a list of VirtualBuckets
// +kubebuilder:object:root=true
message VirtualBucketList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated VirtualBucket items = 2;
}

// VirtualBucketSpec defines the desired state of VirtualBucket
message VirtualBucketSpec {
  // The name of the Connection resource which exists under the same tenant as the object. The Connection
  // should represent the external location and access credentials of an object storage system
  // +kubebuilder:validation:Required
  // +kubebuilder:validation:MaxLength=64
  // +kubebuilder:default:=""
  optional string connectionName = 2;

  // User-provided description of the object
  // +kubebuilder:validation:MaxLength=512
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string description = 3;

  // The name of the Account which created the object, which exists in the same tenant as the object
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 4;
}

// VirtualBucketStatus defines the observed state of a VirtualBucket
message VirtualBucketStatus {
  // Last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time updatedAt = 1;

  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 3;

  // In the case of failure, the VirtualBucket resource controller will set this field with a failure message
  // +kubebuilder:validation:Optional
  optional string failureMessage = 5;

  // +patchMergeKey=type
  // +patchStrategy=merge
  // +kubebuilder:validation:Optional
  repeated k8s.io.apimachinery.pkg.apis.meta.v1.Condition conditions = 6;
}

// VolumeStorageSpec defines the specification for a persistent volume claim
message VolumeStorageSpec {
  // The name of an existing volume claim. When unspecified, a volume claim will be created.
  // The volume claim must exist in the same namespace as the Lab. Properties from the
  // specification (i.e. storage quantity) will not be applied to an existing claim
  optional string volumeClaimName = 1;

  // The name of an existing volume. A volume claim will be created that binds to the volume
  optional string volumeName = 2;

  // The name of the storage class belonging to the volume claim
  optional string storageClassName = 3;

  // The size of the volume, in bytes, which the volume claim will request. When unspecified, default to 1Gi
  optional k8s.io.apimachinery.pkg.api.resource.Quantity storage = 4;

  // NFS defines the specification to create a volume that binds to an NFS server.
  // Defining an NFS volume will allow multiple workloads to consume the volume simultaneously
  optional NFSVolumeSpec nfs = 5;
}

