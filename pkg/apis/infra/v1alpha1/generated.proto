/**
*
* Copyright (C) 2017 modeld authors
* For license information, see LICENSE.txt
*/
// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1;

import "github.com/metaprov/modeldapi/pkg/apis/catalog/v1alpha1/generated.proto";
import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1alpha1";

// Account represents a user or team in the system
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Type",type="string",JSONPath=".spec.type",description=""
// +kubebuilder:printcolumn:name="Username",type="string",JSONPath=".spec.userName",description=""
// +kubebuilder:printcolumn:name="Groupname",type="string",JSONPath=".spec.groupName",description=""
// +kubebuilder:printcolumn:name="Phone",type="string",JSONPath=".spec.phone",description=""
// +kubebuilder:printcolumn:name="Email",type="string",JSONPath=".spec.email",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=accounts,shortName=acct,singular=account,categories={infra,modeld}
message Account {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AccountSpec spec = 2;

  optional AccountStatus status = 3;
}

// AccountCondition describes the state of a account at a certain point.
message AccountCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // The reason for the condition's last transition.
  optional string reason = 4;

  // A human readable message indicating details about the transition.
  optional string message = 5;
}

// +kubebuilder:object:root=true
// AccountList represent list of accounts.
message AccountList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Account items = 2;
}

message AccountRoleBinding {
  // Entity is the name of the entity, can be a product name,lab name or serving site name
  optional string entity = 1;

  // The role in relation to the entity.
  optional string role = 2;
}

// AccountSpec defines the desired state of Account
message AccountSpec {
  // TenantRef is the account tenant
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference tenantRef = 1;

  // GroupName is a reference to the group account
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string groupName = 2;

  // Type is the type of account - user, group. default is user
  // +kubebuilder:default:=user
  // +kubebuilder:validation:Optional
  optional string type = 3;

  // UserName specifies the name of the account
  // +kubebuilder:validation:MinLength=4
  // +kubebuilder:validation:MaxLength=64
  // +kubebuilder:validation:Required
  optional string username = 4;

  // First FileName is the user first name
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  // +kubebuilder:validation:MaxLength=64
  optional string firstName = 5;

  // LastName is the user last name
  // +kubebuilder:default:=""
  // +kubebuilder:validation:MaxLength=64
  // +kubebuilder:validation:Optional
  optional string lastName = 6;

  // Email specify the email of the user
  // +kubebuilder:default:=""
  // +kubebuilder:validation:MaxLength=64
  // +kubebuilder:validation:Required
  optional string email = 7;

  // Phone specify the phone of the user
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  // +kubebuilder:validation:MaxLength=64
  optional string phone = 8;

  // User is admin. Admin have full control on other accounts.
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool admin = 9;

  // Email account creation event to user (using the user email)
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool emailPassword = 10;

  // User need to reset password upon login
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool resetPassword = 11;

  // ProductBinding is the premission that the user have for each product
  // +kubebuilder:validation:Optional
  repeated AccountRoleBinding productBindings = 12;

  // LabBinding is the RBAC roles that the user have within each lab
  // +kubebuilder:validation:Optional
  repeated AccountRoleBinding labBindings = 13;

  // SiteBindings is the RBAC roles that the user have within each serving site.
  // +kubebuilder:validation:Optional
  repeated AccountRoleBinding siteBindings = 14;
}

// AccountStatus defines the actual state of the api object
message AccountStatus {
  // Last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdated = 1;

  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 2;

  // Represents the latest available observations of a account state.
  // +optional
  repeated AccountCondition conditions = 3;
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase",description=""
// +kubebuilder:printcolumn:name="Level",type="string",JSONPath=".spec.level",description=""
// +kubebuilder:printcolumn:name="Subject",type="string",JSONPath=".spec.subject",description=""
// +kubebuilder:printcolumn:name="Entity Namespace",type="string",JSONPath=".spec.entityRef.name",description=""
// +kubebuilder:printcolumn:name="Entity Name",type="string",JSONPath=".spec.entityRef.namespace",description=""
// +kubebuilder:printcolumn:name="Notifier",type="string",JSONPath=".spec.notifierName",description=""
// +kubebuilder:printcolumn:name="At",type="date",JSONPath=".status.at",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=alerts,singular=alert,categories={infra,modeld}
message Alert {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AlertSpec spec = 2;

  optional AlertStatus status = 3;
}

// AlertCondition describes the state of the license at a certain point.
message AlertCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, AutoScaler.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // The reason for the condition's last transition.
  optional string reason = 4;

  // A human readable message indicating details about the transition.
  optional string message = 5;
}

// +kubebuilder:object:root=true
// AlertList is a list of Alerts
message AlertList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Alert items = 2;
}

// AlertSpec defines the desired state of Alert
message AlertSpec {
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string subject = 1;

  // User provided description
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string description = 2;

  // Scopes is the list of scopes for this token.
  optional string level = 3;

  // The subject entity
  optional k8s.io.api.core.v1.ObjectReference entityRef = 4;

  // +kubebuilder:default:=""
  // +kubebuilder:validation:Required
  // NotifierName is the name of the notifier used to fire the alert.
  optional string notifierName = 5;

  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 6;
}

// AlertStatus is the observed state of a Alert
message AlertStatus {
  // Phase is the phase of the model
  // +kubebuilder:validation:Optional
  optional string phase = 1;

  // The time when the alert was fired
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time at = 2;

  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 3;

  // +optional
  repeated AlertCondition conditions = 4;
}

message AliCloudSpec {
  // +kubebuilder:default:=""
  optional string accessKey = 1;

  // +kubebuilder:default:=""
  optional string secretKey = 2;

  // +kubebuilder:default:=""
  optional string region = 3;

  // +kubebuilder:default:=""
  optional string host = 4;
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=apitokens,singular=apitoken,categories={infra,modeld}
message ApiToken {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ApiTokenSpec spec = 2;

  optional ApiTokenStatus status = 3;
}

// ApiTokenCondition describes the state of the license at a certain point.
message ApiTokenCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, AutoScaler.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // The reason for the condition's last transition.
  optional string reason = 4;

  // A human readable message indicating details about the transition.
  optional string message = 5;
}

// +kubebuilder:object:root=true
// ApiTokenList is a list of ApiTokens
message ApiTokenList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated ApiToken items = 2;
}

// ApiTokenSpec defines the desired state of ApiToken
message ApiTokenSpec {
  // User provided description
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string description = 1;

  // Scopes is the list of scopes for this token.
  repeated Scope scopes = 2;

  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 3;
}

// ApiTokenStatus is the observed state of a ApiToken
message ApiTokenStatus {
  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 1;

  // +optional
  repeated ApiTokenCondition conditions = 2;
}

// =================== Definitions of spec files for each type
// AthenaSpec defines the connection to Athena db
message AthenaSpec {
  // +kubebuilder:default:=""
  optional string hostName = 1;

  // +kubebuilder:default:=""
  optional string s3OutputLocation = 2;

  // +kubebuilder:default:=""
  optional string accessKey = 3;

  // +kubebuilder:default:=""
  optional string secretKey = 4;
}

// //////////////////////////
// Cloud connection
// //////////////////////////
message AwsSpec {
  // Default zone.
  // +kubebuilder:default:=""
  optional string defaultRegion = 1;

  // Aws Access key. This is an hidden fields which are stored in the secret
  // +kubebuilder:default:=""
  optional string accessKey = 2;

  // Aws StorageSecret key. This is an hidden fields which are stored in the secret
  // +kubebuilder:default:=""
  optional string secretKey = 3;
}

message AzureStorageSpec {
  // +kubebuilder:default:=""
  optional string storageAccount = 1;

  // This is an hidden field which is stored in a p
  // +kubebuilder:default:=""
  optional string accessKey = 2;
}

// BigQuerySpec defines the connection to big query
message BigQuerySpec {
  // +kubebuilder:default:=""
  optional string serviceAccount = 1;
}

message BitbucketSpec {
  // +kubebuilder:default:=""
  optional string token = 1;

  // +kubebuilder:default:=""
  optional string userName = 2;

  // +kubebuilder:default:=""
  optional string ssh = 3;
}

// CassandraSpec defines the connection to cassandra
message CassandraSpec {
  // +kubebuilder:default:=""
  optional string host = 1;

  // +kubebuilder:default:= 9042
  // +kubebuilder:validation:Minimum=0
  optional int32 port = 2;

  // +kubebuilder:default:=""
  optional string database = 3;

  // +kubebuilder:default:=""
  optional string username = 4;

  // +kubebuilder:default:=""
  optional string password = 5;
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase",description=""
// +kubebuilder:printcolumn:name="Subject",type="string",JSONPath=".spec.subject",description=""
// +kubebuilder:printcolumn:name="Entity Namespace",type="string",JSONPath=".spec.entityRef.Name",description=""
// +kubebuilder:printcolumn:name="Entity Name",type="string",JSONPath=".spec.entityRef.Namespace",description=""
// +kubebuilder:printcolumn:name="At",type="date",JSONPath=".status.at",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=commits,singular=commit,categories={infra,modeld}
message Commit {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional CommitSpec spec = 2;

  optional CommitStatus status = 3;
}

// CommitCondition describes the state of the license at a certain point.
message CommitCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, AutoScaler.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // The reason for the condition's last transition.
  optional string reason = 4;

  // A human readable message indicating details about the transition.
  optional string message = 5;
}

// +kubebuilder:object:root=true
// CommitList is a list of Commits
message CommitList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Commit items = 2;
}

// CommitSpec defines the desired state of Commit
message CommitSpec {
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string subject = 1;

  // User provided description
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string description = 2;

  // The subject entity
  optional k8s.io.api.core.v1.ObjectReference entityRef = 4;

  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  // NotifierName is the name of the notifier used to fire the alert.
  optional string notifierName = 5;

  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 6;
}

// CommitStatus is the observed state of a Commit
message CommitStatus {
  // Phase is the phase of the model
  // +kubebuilder:validation:Optional
  optional string phase = 1;

  // The time when the alert was fired
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time at = 2;

  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 3;

  // +optional
  repeated CommitCondition conditions = 4;
}

// Connection define a connection to an external system (e.g. database, public cloud)
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Provider",type="string",JSONPath=".spec.provider",description=""
// +kubebuilder:printcolumn:name="Category",type="string",JSONPath=".spec.category",description=""
// +kubebuilder:printcolumn:name="Secret",type="string",JSONPath=".spec.secretName",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=connections,shortName=conn,singular=connection,categories={infra,modeld}
message Connection {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ConnectionSpec spec = 2;

  optional ConnectionStatus status = 3;
}

// ConnectionCondition describes the state of a connection at a certain point.
message ConnectionCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, AutoScaler.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 4;

  // The reason for the condition's last transition.
  optional string reason = 5;

  // A human readable message indicating details about the transition.
  optional string message = 6;
}

// +kubebuilder:object:root=true
// ConnectionList is a list of Connections.
message ConnectionList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Connection items = 2;
}

// ConnectionSpec defines the desired state of Connection
message ConnectionSpec {
  // TenantRef is the tenant of the connection
  // default to the default tenant
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference tenantRef = 1;

  // The connection category
  // +kubebuilder:default:="general"
  // +kubebuilder:validation:Optional
  optional string category = 2;

  // Provider specifies the name api provider (E.g. aws)
  // +kubebuilder:validation:Required
  optional string provider = 3;

  // SecretName is a reference to a secret which holds the connection credentials
  // +kubebuilder:validation:Required
  optional string secretName = 4;

  // +kubebuilder:validation:Optional
  optional AthenaSpec athena = 5;

  // +kubebuilder:validation:Optional
  optional AzureStorageSpec azureStorage = 6;

  // +kubebuilder:validation:Optional
  optional AliCloudSpec aliCloud = 7;

  // +kubebuilder:validation:Optional
  optional BigQuerySpec bigQuery = 8;

  // +kubebuilder:validation:Optional
  optional BitbucketSpec bitbucket = 9;

  // +kubebuilder:validation:Optional
  optional CassandraSpec cassandra = 10;

  // +kubebuilder:validation:Optional
  optional DigitalOceanSpec digitalocean = 11;

  // +kubebuilder:validation:Optional
  optional SmtpSpec smtp = 12;

  // +kubebuilder:validation:Optional
  optional HetznerSpec hetzner = 13;

  // +kubebuilder:validation:Optional
  optional ImageRegistrySpec imageRegistry = 14;

  // +kubebuilder:validation:Optional
  optional GithubSpec github = 15;

  // +kubebuilder:validation:Optional
  optional GitlabSpec gitlab = 16;

  // +kubebuilder:validation:Optional
  optional GcpStorageSpec gcpstorage = 17;

  // +kubebuilder:validation:Optional
  optional LinodeSpec linode = 18;

  // +kubebuilder:validation:Optional
  optional MongoDbSpec mongodb = 19;

  // +kubebuilder:validation:Optional
  optional MySqlSpec mysql = 20;

  // +kubebuilder:validation:Optional
  optional MinioSpec minio = 21;

  // +kubebuilder:validation:Optional
  optional MSSqlServerSpec mssqlserver = 22;

  // +kubebuilder:validation:Optional
  optional OdbcSpec odbc = 23;

  // +kubebuilder:validation:Optional
  optional OracleSpec oracle = 24;

  // +kubebuilder:validation:Optional
  optional OpenstackSpec openstack = 25;

  // +kubebuilder:validation:Optional
  optional OvhSpec ovh = 26;

  // +kubebuilder:validation:Optional
  optional PostgresSQLSpec postgres = 27;

  // +kubebuilder:validation:Optional
  optional PrestoSpec presto = 28;

  // +kubebuilder:validation:Optional
  optional RedShiftSpec redshift = 29;

  // +kubebuilder:validation:Optional
  optional SnowFlakeSpec snowflake = 30;

  // +kubebuilder:validation:Optional
  optional SqliteSpec sqlite = 31;

  // +kubebuilder:validation:Optional
  optional AwsSpec aws = 32;

  // +kubebuilder:validation:Optional
  optional SlackSpec slack = 33;

  // +kubebuilder:validation:Optional
  optional FlockSpec flock = 34;

  // +kubebuilder:validation:Optional
  optional MSTeamSpec msteam = 35;

  // +kubebuilder:validation:Optional
  optional MattermostSpec matterMost = 36;

  // +kubebuilder:validation:Optional
  optional HipchatSpec hipchat = 37;

  // +kubebuilder:validation:Optional
  optional WebhookSpec webhook = 38;

  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 39;
}

// ConnectionStatus is the observed state of a Connection
message ConnectionStatus {
  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 1;

  // Last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdated = 2;

  // +optional
  repeated ConnectionCondition conditions = 3;
}

message DigitalOceanSpec {
  // Token for digital ocean
  // +kubebuilder:default:=""
  optional string token = 1;

  // Access Key for digital ocean spaces
  // +kubebuilder:default:=""
  optional string accessKey = 2;

  // StorageSecret Key for digital ocean spaces
  // +kubebuilder:default:=""
  optional string secretKey = 3;

  // Default digital ocean
  // +kubebuilder:default:=""
  optional string defaultRegion = 4;

  // url or connection string
  // +kubebuilder:default:=""
  optional string host = 5;
}

message FlockSpec {
  // +kubebuilder:default:=""
  optional string url = 1;
}

message GcpStorageSpec {
  // +kubebuilder:default:=""
  optional string keyFile = 1;

  // +kubebuilder:default:=""
  optional string project = 2;
}

message GithubSpec {
  // +kubebuilder:default:=""
  optional string token = 1;

  // +kubebuilder:default:=""
  optional string userName = 2;

  // +kubebuilder:default:=""
  optional string ssh = 3;
}

message GitlabSpec {
  // +kubebuilder:default:=""
  optional string token = 1;

  // +kubebuilder:default:=""
  optional string ssh = 2;
}

message HetznerSpec {
  // +kubebuilder:default:=""
  optional string token = 1;

  // +kubebuilder:default:=""
  optional string ssh = 2;
}

message HipchatSpec {
  // +kubebuilder:default:=""
  optional string url = 1;

  // +kubebuilder:default:=""
  optional string token = 2;

  // +kubebuilder:default:=""
  optional string room = 3;
}

message ImageRegistrySpec {
  // Hostname for the image registry
  // +kubebuilder:default:=""
  optional string host = 1;

  // Username for image registry
  // +kubebuilder:default:=""
  optional string username = 2;

  // +kubebuilder:default:=""
  optional string password = 3;
}

// Lab is a namespace used for training and data analysis operations.
// +kubebuilder:object:root=true
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Owner",type="string",JSONPath=".spec.ownerName"
// +kubebuilder:printcolumn:name="Cluster",type="string",JSONPath=".spec.clusterName"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:path=labs,singular=lab,categories={infra,modeld,all}
// +kubebuilder:subresource:status
message Lab {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional LabSpec spec = 2;

  optional LabStatus status = 3;
}

// LabCondition describes the state of a lab at a certain point.
message LabCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // The reason for the condition's last transition.
  optional string reason = 4;

  // A human readable message indicating details about the transition.
  optional string message = 5;
}

// +kubebuilder:object:root=true
// LabList is a list of labs
message LabList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Lab items = 2;
}

// LabSpec defines the desired state of a Lab
message LabSpec {
  // Description is a user provided description
  // +kubebuilder:validation:Optional
  // +kubebuilder:default:=""
  // +kubebuilder:validation:MaxLength=256
  optional string description = 1;

  // +kubebuilder:validation:Optional
  // TenantRef is a reference to the tenant owning this lab
  // Default to default tenant.
  optional k8s.io.api.core.v1.ObjectReference tenantRef = 2;

  // QuotaSpec is quoute specification for the lab namespace.
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ResourceQuotaSpec quotaSpec = 3;

  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.LimitRangeSpec limitRangeSpec = 4;

  // ClusterName is the name of a remote cluster that is used to execute jobs for this lab
  // +kubebuilder:validation:Optional
  // +kubebuilder:default:=""
  optional string clusterName = 5;

  // The owner account name
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 6;
}

// LabStatus is the observed state of a Lab
message LabStatus {
  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 1;

  // Last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdated = 2;

  // +kubebuilder:validation:Optional
  repeated LabCondition conditions = 3;
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Owner",type="string",JSONPath=".spec.owner",description=""
// +kubebuilder:printcolumn:name="Secret",type="string",JSONPath=".spec.secretName",description=""
// +kubebuilder:printcolumn:name="Trial Start",type="string",JSONPath=".spec.trialStart",description=""
// +kubebuilder:printcolumn:name="Trial End",type="string",JSONPath=".spec.trialEnd",description=""
// +kubebuilder:printcolumn:name="Max Trainers",type="string",JSONPath=".spec.maxTrainers",description=""
// +kubebuilder:printcolumn:name="Max Nodes",type="string",JSONPath=".spec.maxServers",description=""
// +kubebuilder:printcolumn:name="Max Users",type="string",JSONPath=".spec.maxUsers",description=""
// +kubebuilder:printcolumn:name="Expire At",type="date",JSONPath=".status.expireAt",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=licenses,singular=license,categories={infra,modeld}
// License is an abstraction that represent the cluster wide license
// as obtained from Modeld. The license is store inside a a secret
message License {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional LicenseSpec spec = 2;

  optional LicenseStatus status = 3;
}

// LicenseCondition describes the state of the license at a certain point.
message LicenseCondition {
  // Type of condition.
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // The reason for the condition's last transition.
  optional string reason = 4;

  // A human readable message indicating details about the transition.
  optional string message = 5;
}

// +kubebuilder:object:root=true
// LicenseList is a list of License
message LicenseList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated License items = 2;
}

// LicenseSpec defines the desired state of License
message LicenseSpec {
  // Reference to the tenant owning this license
  // +kubebuilder:validation:Optional
  // Default to default tenant.
  optional k8s.io.api.core.v1.ObjectReference tenantRef = 1;

  // The secret containing the license token
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  // +kubebuilder:validation:MaxLength=63
  optional string secretName = 2;

  // Owner is the account owning this license
  // +kubebuilder:validation:Optional
  // +kubebuilder:default:="no-one"
  optional string owner = 3;

  // +kubebuilder:validation:Optional
  // +kubebuilder:default:=""
  optional string email = 4;

  // TrialStart is the start date for free trial
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time trialStart = 5;

  // TrialEnd when free trial end
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time trialEnd = 6;

  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:validation:Optional
  optional int32 maxProducts = 7;

  // MaxTrainers is max number of trainers
  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:validation:Optional
  optional int32 maxTrainers = 8;

  // MaxServers is the max number of worker nodes
  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:validation:Optional
  optional int32 maxServers = 9;

  // MaxUsers is the max number of active accounts
  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:validation:Optional
  optional int32 maxUsers = 10;

  // max data planes
  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:validation:Optional
  optional int32 maxDataPlanes = 11;

  // Forcast denote if forecast feature supported
  // +kubebuilder:validation:Optional
  optional bool forecast = 12;

  // NLP is nlp feature supported
  // +kubebuilder:validation:Optional
  optional bool nlp = 13;

  // Is vision feature supported
  // +kubebuilder:validation:Optional
  optional bool vision = 14;

  // Is chatbot feature supported
  optional bool chatbot = 15;

  // The product name
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string productName = 16;

  // The price name
  // +kubebuilder:validation:Optional
  optional string priceName = 17;

  // When the license expire
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time expireAt = 18;

  // NotifierName is a reference to a notifier to receive the license expiration notification
  // +kubebuilder:validation:Optional
  optional string notifierName = 19;
}

// LicenseStatus is the observed state of a License
message LicenseStatus {
  // Last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdated = 1;

  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 2;

  // Represents the latest available observations of a license state.
  // +optional
  repeated LicenseCondition conditions = 3;
}

message LinodeSpec {
  // +kubebuilder:default:=""
  optional string apikey = 1;
}

message MSSqlServerSpec {
  // +kubebuilder:default:=""
  optional string host = 1;

  // +kubebuilder:default:=1433
  // +kubebuilder:validation:Minimum=0
  optional int32 port = 2;

  // +kubebuilder:default:=""
  optional string database = 3;

  // +kubebuilder:default:=""
  optional string domain = 4;

  // +kubebuilder:default:=""
  optional string username = 5;

  // +kubebuilder:default:=""
  optional string password = 6;
}

message MSTeamSpec {
  // +kubebuilder:default:=""
  optional string webhook = 1;
}

message MattermostSpec {
  // +kubebuilder:default:=""
  optional string url = 1;

  // +kubebuilder:default:=""
  optional string channel = 2;

  // +kubebuilder:default:=""
  optional string username = 3;
}

message MinioSpec {
  // Access key for minio
  // +kubebuilder:default:=""
  optional string accessKey = 1;

  // StorageSecret key for minio
  // +kubebuilder:default:=""
  optional string secretKey = 2;

  // Minio url connection.
  // +kubebuilder:default:=""
  optional string host = 3;
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Level",type="string",JSONPath=".spec.level",description=""
// +kubebuilder:printcolumn:name="Subject",type="string",JSONPath=".spec.subject",description=""
// +kubebuilder:printcolumn:name="Entity Namespace",type="string",JSONPath=".spec.entityRef.Name",description=""
// +kubebuilder:printcolumn:name="Entity Name",type="string",JSONPath=".spec.entityRef.Namespace",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=modeldsystems,singular=modeldsystem,categories={infra,modeld}
message ModeldSystem {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ModeldSystemSpec spec = 2;

  optional ModeldSystemStatus status = 3;
}

// ModeldSystemCondition describes the state of the license at a certain point.
message ModeldSystemCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, AutoScaler.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // The reason for the condition's last transition.
  optional string reason = 4;

  // A human readable message indicating details about the transition.
  optional string message = 5;
}

// +kubebuilder:object:root=true
// ModeldSystemList is a list of ModeldSystems
message ModeldSystemList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated ModeldSystem items = 2;
}

// ModeldSystemSpec defines the desired state of ModeldSystem
message ModeldSystemSpec {
}

// ModeldSystemStatus is the observed state of a ModeldSystem
message ModeldSystemStatus {
  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 1;

  // +optional
  repeated ModeldSystemCondition conditions = 2;
}

message MongoDbSpec {
  // +kubebuilder:default:=""
  optional string host = 1;

  // +kubebuilder:default:=27017
  // +kubebuilder:validation:Minimum=0
  optional int32 port = 2;

  // +kubebuilder:default:=""
  optional string database = 3;

  // +kubebuilder:default:=""
  optional string username = 4;

  // +kubebuilder:default:=""
  optional string password = 5;
}

message MySqlSpec {
  // +kubebuilder:default:=""
  optional string host = 1;

  // +kubebuilder:default:=3306
  // +kubebuilder:validation:Minimum=0
  optional int32 port = 2;

  // +kubebuilder:default:=""
  optional string database = 3;

  // +kubebuilder:default:=""
  optional string username = 4;

  // +kubebuilder:default:=""
  optional string password = 5;
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Owner",type="string",JSONPath=".spec.owner",description=""
// +kubebuilder:printcolumn:name="Connection",type="string",JSONPath=".spec.connectionName",description=""
// +kubebuilder:printcolumn:name="Provider",type="string",JSONPath=".status.provider",description=""
// +kubebuilder:printcolumn:name="From",type="string",JSONPath=".spec.from",description=""
// +kubebuilder:printcolumn:name="To",type="string",JSONPath=".spec.to",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=notifiers,singular=notifier,categories={infra,modeld}
message Notifier {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional NotifierSpec spec = 2;

  optional NotifierStatus status = 3;
}

// NotifierCondition describes the state of the license at a certain point.
message NotifierCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, AutoScaler.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // The reason for the condition's last transition.
  optional string reason = 4;

  // A human readable message indicating details about the transition.
  optional string message = 5;
}

// +kubebuilder:object:root=true
// NotifierList is a list of Notifiers
message NotifierList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Notifier items = 2;
}

// NotifierSpec defines the desired state of Notifier
message NotifierSpec {
  // The tenant that own the notifier
  // Default to default tenant.
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference tenantRef = 1;

  // User provided description
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string description = 2;

  // Address within the provider to send the notifiaction to.
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string to = 3;

  // The sender address. For example, from email.
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string from = 4;

  // +kubebuilder:validation:Required
  // +kubebuilder:default:=""
  optional string connectionName = 5;

  // The owner account name
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 6;
}

// NotifierStatus is the observed state of a Notifier
message NotifierStatus {
  // provider is the name of the notifier provider. The name is derived from the connection
  optional string provider = 1;

  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 2;

  // Last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdated = 3;

  // +kubebuilder:validation:Optional
  repeated NotifierCondition conditions = 4;
}

message OdbcSpec {
  // +kubebuilder:default:=""
  optional string conntectionString = 1;
}

message OpenstackSpec {
  // +kubebuilder:default:=""
  optional string userName = 1;

  // +kubebuilder:default:=""
  optional string tenantName = 2;

  // +kubebuilder:default:=""
  optional string password = 3;

  // +kubebuilder:default:=""
  optional string authUrl = 4;

  // +kubebuilder:default:=""
  optional string region = 5;
}

message OracleSpec {
  // +kubebuilder:default:=""
  optional string host = 1;

  // +kubebuilder:default:=1521
  // +kubebuilder:validation:Minimum=0
  optional int32 port = 2;

  // +kubebuilder:default:=""
  optional string database = 3;

  // +kubebuilder:default:=""
  optional string serviceName = 4;

  // +kubebuilder:default:=""
  optional string role = 5;

  // +kubebuilder:default:=""
  optional string username = 6;

  // +kubebuilder:default:=""
  optional string password = 7;
}

message OvhSpec {
  // +kubebuilder:default:=""
  optional string endpoint = 1;

  // +kubebuilder:default:=""
  optional string application = 2;

  // +kubebuilder:default:=""
  optional string secret = 3;

  // +kubebuilder:default:=""
  optional string consumerkey = 4;
}

message PostgresSQLSpec {
  // +kubebuilder:default:=""
  optional string host = 1;

  // +kubebuilder:default:=5432
  // +kubebuilder:validation:Minimum=0
  optional int32 port = 2;

  // +kubebuilder:default:=""
  optional string database = 3;

  // +kubebuilder:default:=""
  optional string username = 4;

  // +kubebuilder:default:=""
  optional string password = 5;
}

message PrestoSpec {
  // +kubebuilder:default:=""
  optional string host = 1;

  // +kubebuilder:default:=8080
  // +kubebuilder:validation:Minimum=0
  optional int32 port = 2;

  // +kubebuilder:default:=""
  optional string catalog = 3;

  // +kubebuilder:default:=""
  optional string schema = 4;

  // +kubebuilder:default:=""
  optional string username = 5;

  // +kubebuilder:default:=""
  optional string password = 6;
}

message RedShiftSpec {
  // +kubebuilder:default:=""
  optional string host = 1;

  // +kubebuilder:default:=5439
  // +kubebuilder:validation:Minimum=0
  optional int32 port = 2;

  // +kubebuilder:default:=""
  optional string database = 3;

  // +kubebuilder:default:=""
  optional string username = 4;

  // +kubebuilder:default:=""
  optional string password = 5;
}

message Scope {
  // +kubebuilder:validation:Optional
  optional string name = 1;

  // +kubebuilder:validation:Optional
  repeated string actions = 2;
}

// ServingSite is a namespace used for serving
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Owner",type="string",JSONPath=".spec.owner",description="owner"
// +kubebuilder:printcolumn:name="FDQN",type="string",JSONPath=".spec.fdqn",description=""
// +kubebuilder:printcolumn:name="Ingress",type="string",JSONPath=".spec.ingressName",description=""
// +kubebuilder:printcolumn:name="Predictors",type="number",JSONPath=".status.activePredictors",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=servingsites,singular=servingsite,categories={infra,modeld}
message ServingSite {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ServingSiteSpec spec = 2;

  optional ServingSiteStatus status = 3;
}

// ServingSiteCondition describes the state of a servingsite at a certain point.
message ServingSiteCondition {
  // Type of  condition.
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // The reason for the condition's last transition.
  optional string reason = 4;

  // A human readable message indicating details about the transition.
  optional string message = 5;
}

// +kubebuilder:object:root=true
// ServingSiteList is a list of ServingSite
message ServingSiteList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated ServingSite items = 2;
}

message ServingSiteSpec {
  // Description is user provided description
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string description = 1;

  // Reference to the tenant owning this serving site.
  // Default to default tenant.
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference tenantRef = 2;

  // QuotaSpec is  resource quota for the serving site
  // By default, not quota is applied
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ResourceQuotaSpec quotaSpec = 3;

  // LimitRangeSpec limit range for the serving site
  // By default, no limit range apply
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.LimitRangeSpec limitRangeSpec = 4;

  // IngressName denote the name of the ingress object where the serving site
  // places the external points used to access the predictors
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string ingressName = 5;

  // The FDQN for this site. This will register with ingress.
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string fdqn = 6;

  // ClusterName is  the virtual cluster name in case that the lab is not on the same cluster
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string clusterName = 7;

  // Owner is the owner account name
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 8;
}

message ServingSiteStatus {
  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 1;

  // Last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdated = 2;

  // +optional
  repeated ServingSiteCondition conditions = 3;

  // active predictors
  optional int32 activePredictors = 4;

  // inactive predictors
  optional int32 inactivePredictors = 5;

  // total predictors service failed
  optional int32 totalPredictorServiceFailed = 6;

  // total predictors with data drift failed
  optional int32 totalPredictorDataDriftFailed = 7;

  // total predictors accuracy failed
  optional int32 totalPredictorAccuracyFailed = 8;

  // Last 7 days predictions
  repeated int32 lastDailyPredictions = 9;
}

message SlackSpec {
  // +kubebuilder:default:=""
  optional string webhookUrl = 1;

  // +kubebuilder:default:=""
  optional string channel = 2;

  // +kubebuilder:default:=""
  optional string userName = 3;

  // +kubebuilder:default:=""
  optional string token = 4;
}

message SmtpSpec {
  // +kubebuilder:default:=""
  optional string host = 1;

  // +kubebuilder:default:=25
  // +kubebuilder:validation:Minimum=0
  optional int32 port = 2;

  // +kubebuilder:default:=""
  optional string userName = 3;

  // +kubebuilder:default:=""
  optional string password = 4;
}

message SnowFlakeSpec {
  // +kubebuilder:default:=""
  optional string account = 1;

  // +kubebuilder:default:=""
  optional string warehouse = 2;

  // +kubebuilder:default:=""
  optional string database = 3;

  // +kubebuilder:default:=""
  optional string username = 4;

  // +kubebuilder:default:=""
  optional string password = 5;
}

message SqliteSpec {
  // +kubebuilder:default:="general"
  optional string fileName = 1;
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase",description=""
// +kubebuilder:printcolumn:name="Subject",type="string",JSONPath=".spec.subject",description=""
// +kubebuilder:printcolumn:name="Entity Namespace",type="string",JSONPath=".spec.entityRef.name",description=""
// +kubebuilder:printcolumn:name="Entity Name",type="string",JSONPath=".spec.entityRef.namespace",description=""
// +kubebuilder:printcolumn:name="Notifier",type="string",JSONPath=".spec.notifierName",description=""
// +kubebuilder:printcolumn:name="At",type="date",JSONPath=".status.at",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=taskcards,singular=taskcard,categories={infra,modeld}
message TaskCard {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional TaskCardSpec spec = 2;

  optional TaskCardStatus status = 3;
}

// TaskCardCondition describes the state of the license at a certain point.
message TaskCardCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, AutoScaler.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // The reason for the condition's last transition.
  optional string reason = 4;

  // A human readable message indicating details about the transition.
  optional string message = 5;
}

// +kubebuilder:object:root=true
// TaskCardList is a list of TaskCards
message TaskCardList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated TaskCard items = 2;
}

// TaskCardSpec defines the desired state of TaskCard
message TaskCardSpec {
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string task = 1;

  // The modeld entity that the task refer to.
  optional k8s.io.api.core.v1.ObjectReference entityRef = 2;

  // +kubebuilder:default:=""
  // +kubebuilder:validation:Required
  // NotifierName is the name of the notifier used to fire the alert.
  optional string notifierName = 3;

  // Assigned to is the user name assigned to this task
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string assignedTo = 4;

  // Flagged donete that task was flagged
  // +kubebuilder:default:=false
  // +kubebuilder:validation:Optional
  optional bool flagged = 5;

  // Reminder is the time to send a reminder
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time reminder = 6;

  // Flagged donete that task was flagged
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time dueDate = 7;
}

// TaskCardStatus is the observed state of a TaskCard
message TaskCardStatus {
  // Phase is the phase of the model
  // +kubebuilder:validation:Optional
  optional string phase = 1;

  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 3;

  // +optional
  repeated TaskCardCondition conditions = 4;
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Default Lab",type="string",JSONPath=".spec.defaultLabRef.Name",description=""
// +kubebuilder:printcolumn:name="Default Serving Site",type="string",JSONPath=".spec.defaultServingSiteRef.Name",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=tenants,singular=tenant,categories={infra,modeld}
// Tenant represents root tenant.
message Tenant {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional TenantSpec spec = 2;

  optional TenantStatus status = 3;
}

// TenantCondition describes the state of a tenant at a certain point.
message TenantCondition {
  // Type of tenant condition.
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // The reason for the condition's last transition.
  optional string reason = 4;

  // A human readable message indicating details about the transition.
  optional string message = 5;
}

// +kubebuilder:object:root=true
// TenantList represent list of tenants.
message TenantList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Tenant items = 2;
}

// TenantSpec defines the desired state of Tenant
message TenantSpec {
  // the default lab for this account
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference defaultLab = 1;

  // the default serving site for this account
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference defaultServingSiteRef = 2;

  // Description is user provided description
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  // +kubebuilder:validation:MaxLength=512
  // +kubebuilder:validation:Optional
  optional string description = 3;

  // Owner is the owner account name
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 4;
}

// TenantStatus defines the actual state of a Tenant
message TenantStatus {
  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 1;

  // +optional
  repeated TenantCondition conditions = 2;
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Owner",type="string",JSONPath=".spec.owner",description="owner"
// +kubebuilder:printcolumn:name="Connection",type="string",JSONPath=".spec.connectionName",description="virtual bucket connections"
// +kubebuilder:printcolumn:name="Provider",type="string",JSONPath=".status.provider",description="cloud provider"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=virtualbuckets,shortName=vb,singular=virtualbucket,categories={infra,modeld,all}
// VirtualBucket represent a object storage location in the cloud or on-prem
message VirtualBucket {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional VirtualBucketSpec spec = 2;

  optional VirtualBucketStatus status = 3;
}

// VitualBucketCondition describes the state of a virtual bucket at a certain point.
message VirtualBucketCondition {
  // Type of bucket condition.
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // The reason for the condition's last transition.
  optional string reason = 4;

  // A human readable message indicating details about the transition.
  optional string message = 5;
}

// +kubebuilder:object:root=true
// VirtualBucketList is a list of VirtualBucket
message VirtualBucketList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated VirtualBucket items = 2;
}

// VirtualBucketSpec defines the desired state of Bucket
message VirtualBucketSpec {
  // The owner of the virtual bucket
  // +kubebuilder:validation:Optional
  optional k8s.io.api.core.v1.ObjectReference tenantRef = 1;

  // ConnectionName specify the api connections of this bucket cloud provider.
  // +kubebuilder:validation:Required
  // +kubebuilder:validation:MaxLength=64
  // +kubebuilder:default:=""
  optional string connectionName = 2;

  // User provided description
  // +kubebuilder:validation:MaxLength=512
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string description = 3;

  // Owner of the bucket
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 4;
}

// VirtualBucketStatus defines the actual state of a VirtualBucket
message VirtualBucketStatus {
  // Last time the object was updated
  // +kubebuilder:validation:Optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdated = 1;

  // Provider is the name of the notifier provider. The name is derived from the connection
  optional string provider = 2;

  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 3;

  // +optional
  repeated VirtualBucketCondition conditions = 4;
}

message VirtualCluster {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional VirtualClusterSpec spec = 2;

  optional VirtualClusterStatus status = 3;
}

// DeploymentCondition describes the state of a deployment at a certain point.
message VirtualClusterCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // The reason for the condition's last transition.
  optional string reason = 4;

  // A human readable message indicating details about the transition.
  optional string message = 5;
}

// +kubebuilder:object:root=true
// VirtualClusterList is a list of VirtualCluster
message VirtualClusterList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated VirtualCluster items = 2;
}

message VirtualClusterSpec {
  // Description is the user provided description
  // +kubebuilder:default:=""
  // +optional
  optional string description = 1;

  // Nodes is the desired number of nodes
  // +kubebuilder:default:=1
  // +kubebuilder:validation:Minimum=1
  // +kubebuilder:validation:Maximum=10
  // +kubebuilder:validation:Optional
  optional int32 nodes = 2;

  // +kubebuilder:validation:Optional
  // NodeClassName is the class of nodes or vm
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string nodeClassName = 3;

  // +kubebuilder:validation:Optional
  // Gpus is the desired number of gpus
  // +kubebuilder:default:=0
  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:validation:Maximum=10
  // +kubebuilder:validation:Optional
  optional int32 gpus = 4;

  // +kubebuilder:validation:Optional
  // GpuClassName is the The class of gpu.
  // +kubebuilder:default:=""
  // +kubebuilder:validation:Optional
  optional string gpuClassName = 5;

  // +kubebuilder:validation:Optional
  // VolumeSize is the size of the volume that would be mounted on all the node of the cluster
  // +kubebuilder:default:=0
  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:validation:Maximum=10
  // +kubebuilder:validation:Optional
  optional int32 volumeSize = 6;

  // +kubebuilder:validation:Optional
  // Spot indicate if we should we use spot instances.
  // +kubebuilder:default:=false
  // +optional
  optional bool spot = 7;

  // ConnectionName refer to the name of the provider connection
  // +kubebuilder:default:=""
  optional string connectionName = 8;

  // Owner is the account name of the owner of this cluster
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 9;
}

message VirtualClusterStatus {
  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 1;

  // +kubebuilder:validation:Minimum=0
  // +optional
  optional int32 availableNodes = 2;

  // Number of available Gpus
  // +kubebuilder:validation:Minimum=0
  // +optional
  optional int32 availableGpus = 3;

  // +optional
  repeated VirtualClusterCondition conditions = 4;
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="StorageConnection",type="string",JSONPath=".spec.connectionName",description="virtual bucket connections"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=virtualvolumes,shortName=vol,singular=virtualvolume,categories={infra,modeld,all}
// VirtualVolume represent a volume api object
message VirtualVolume {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional VirtualVolumeSpec spec = 2;

  // +kubebuilder:validation:Optional
  optional VirtualVolumeStatus status = 3;
}

message VirtualVolumeCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 4;

  // The reason for the condition's last transition.
  optional string reason = 5;

  // A human readable message indicating details about the transition.
  optional string message = 6;
}

// +kubebuilder:object:root=true
// VirtualVolumeList is a list of mdvolumes
message VirtualVolumeList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated VirtualVolume items = 2;
}

// VirtualVolumeSpec define the desired state of the mdvolume.
message VirtualVolumeSpec {
  // The Lab that own the git repository
  // Default to the default volume.
  optional k8s.io.api.core.v1.ObjectReference tenantRef = 1;

  //  specify the api connections of this mdvolume cloud provider.
  // +kubebuilder:validation:Optional
  optional string connectionName = 2;

  // User provided description
  // +kubebuilder:validation:Optional
  // +kubebuilder:default:=""
  // +kubebuilder:validation:MaxLength=512
  optional string description = 3;

  // The owner account name
  // +kubebuilder:default:="no-one"
  // +kubebuilder:validation:Optional
  optional string owner = 4;
}

message VirtualVolumeStatus {
  // ObservedGeneration is the Last generation that was acted on
  // +kubebuilder:validation:Optional
  optional int64 observedGeneration = 1;

  // +optional
  repeated VirtualVolumeCondition conditions = 2;
}

message WebhookSpec {
  // +kubebuilder:default:=""
  optional string url = 1;
}

