/**
*
* Copyright (C) 2017 modeld authors
* For license information, see LICENSE.txt
*/
// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = 'proto2';

package github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1;

import "github.com/metaprov/modeldapi/pkg/apis/catalog/v1alpha1/generated.proto";
import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1alpha1";

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +k8s:openapi-gen=true
// +genclient
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Username",type="string",JSONPath=".spec.userName",description=""
// +kubebuilder:printcolumn:name="Phone",type="string",JSONPath=".spec.phone",description=""
// +kubebuilder:printcolumn:name="Smtp",type="string",JSONPath=".spec.email",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=accounts,shortName=act,singular=account,categories={infra,modeld}
// Account represents a user or team in the system
message Account {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AccountSpec spec = 2;

  // +optional
  optional AccountStatus status = 3;
}

// AccountCondition describes the state of a account at a certain point.
message AccountCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 4;

  // The reason for the condition's last transition.
  optional string reason = 5;

  // A human readable message indicating details about the transition.
  optional string message = 6;
}

// +kubebuilder:object:root=true
// AccountList represent list of accounts.
message AccountList {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // ListAccounts of Accounts
  repeated Account items = 2;
}

message AccountRoleBinding {
  // Entity is the name of the entity, can be a product name,lab name or serving site name
  optional string entity = 1;

  // The role in relation to the entity.
  optional string role = 2;
}

// AccountSpec defines the desired state of Account
message AccountSpec {
  // The account tenant.
  // Default to default tenant.
  // +optional
  optional k8s.io.api.core.v1.ObjectReference tenantRef = 1;

  // A reference to the group account of this account
  // +optional
  optional string groupName = 2;

  // Type is the type of account - user, group. default is user
  // Required.
  optional string type = 3;

  // UserName specifies the name of the account
  // Required.
  // +kubebuilder:validation:MinLength=4
  // +kubebuilder:validation:MaxLength=64
  optional string username = 4;

  // First FileName is the user first name
  // +optional
  // +kubebuilder:validation:MaxLength=64
  optional string firstName = 5;

  // LastName is the user last name
  // +optional
  // +kubebuilder:validation:MaxLength=64
  optional string lastName = 6;

  // Email specify the email of the user
  // +optional
  // +kubebuilder:validation:MaxLength=64
  optional string email = 7;

  // Phone specify the phone of the user
  // +optional
  // +kubebuilder:validation:MaxLength=64
  optional string phone = 8;

  // User is admin. Admin have full control on other accounts.
  // Default to false.
  // +optional
  optional bool admin = 9;

  // Email account creation event to user (using the user email)
  // Default to false.
  // +optional
  optional bool emailPassword = 10;

  // User need to reset password upon login
  // +optional
  optional bool resetPassword = 11;

  // Entity Binding
  // +optional
  repeated AccountRoleBinding productBindings = 12;

  // Lab Binding
  // +optional
  repeated AccountRoleBinding labBindings = 13;

  // ServingSite Binding
  // +optional
  repeated AccountRoleBinding siteBindings = 14;
}

// AccountStatus defines the actual state of the api object
message AccountStatus {
  // Represents the latest available observations of a account state.
  // +optional
  repeated AccountCondition conditions = 1;
}

message AliCloudSpec {
  optional string accessKey = 1;

  optional string secretKey = 2;

  optional string region = 3;

  optional string host = 4;
}

message AthenaSpec {
  optional string hostName = 1;

  optional string s3OutputLocation = 2;

  optional string accessKey = 3;

  optional string secretKey = 4;
}

// //////////////////////////
// Cloud connection
// //////////////////////////
message AwsSpec {
  // Default zone.
  optional string defaultRegion = 1;

  // Aws Access key. This is an hidden fields which are stored in the secret
  optional string accessKey = 2;

  // Aws StorageSecret key. This is an hidden fields which are stored in the secret
  optional string secretKey = 3;
}

message AzureStorageSpec {
  optional string storageAccount = 1;

  // This is an hidden field which is stored in a p
  optional string accessKey = 2;
}

message BigQuerySpec {
  optional string serviceAccount = 1;
}

message BitbucketSpec {
  optional string token = 1;

  optional string userName = 2;

  optional string ssh = 3;
}

message CassandraSpec {
  optional string hostName = 1;

  // default 9042
  optional int32 port = 2;

  optional string database = 3;

  optional string username = 4;

  optional string password = 5;
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +k8s:openapi-gen=true
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Provider",type="string",JSONPath=".spec.provider",description=""
// +kubebuilder:printcolumn:name="StorageSecret",type="string",JSONPath=".spec.secretName",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=connections,shortName=cred,singular=connection,categories={infra,modeld}
message Connection {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ConnectionSpec spec = 2;

  // +optional
  optional ConnectionStatus status = 3;
}

// ConnectionCondition describes the state of a connection at a certain point.
message ConnectionCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, AutoScaler.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 4;

  // The reason for the condition's last transition.
  optional string reason = 5;

  // A human readable message indicating details about the transition.
  optional string message = 6;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// ConnectionList is a list of Connections.
message ConnectionList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Connection items = 2;
}

// ConnectionSpec defines the desired state of Connection
message ConnectionSpec {
  // The owner of the connection
  // default to the default tenant
  // +optional
  optional k8s.io.api.core.v1.ObjectReference tenantRef = 1;

  // The connection category
  // default for general
  // +optional
  optional string category = 2;

  // Provider specifies the name api provider (E.g. aws)
  // required
  optional string provider = 3;

  optional string secretName = 4;

  // +optional
  optional AthenaSpec athena = 5;

  // +optional
  optional AzureStorageSpec azureStorage = 6;

  // +optional
  optional AliCloudSpec aliCloud = 7;

  // +optional
  optional BigQuerySpec bigQuery = 8;

  // +optional
  optional BitbucketSpec bitbucket = 9;

  // +optional
  optional CassandraSpec cassandra = 10;

  // +optional
  optional DigitalOceanSpec digitalocean = 11;

  // +optional
  optional SmtpSpec smtp = 12;

  // +optional
  optional HetznerSpec hetzner = 13;

  // +optional
  optional ImageRegistrySpec imageRegistry = 14;

  // +optional
  optional GithubSpec github = 15;

  // +optional
  optional GitlabSpec gitlab = 16;

  // +optional
  optional GcpStorageSpec gcpstorage = 17;

  // +optional
  optional LinodeSpec linode = 18;

  // +optional
  optional MongoDbSpec mongodb = 19;

  // +optional
  optional MySqlSpec mysql = 20;

  // +optional
  optional MinioSpec minio = 21;

  // +optional
  optional MSSqlServerSpec mssqlserver = 22;

  // +optional
  optional OdbcSpec odbc = 23;

  // +optional
  optional OracleSpec oracle = 24;

  // +optional
  optional OpenstackSpec openstack = 25;

  // +optional
  optional OvhSpec ovh = 26;

  // +optional
  optional PostgresSQLSpec postgres = 27;

  // +optional
  optional PrestoSpec presto = 28;

  // +optional
  optional RedShiftSpec redshift = 29;

  // +optional
  optional SnowFlakeSpec snowflake = 30;

  // +optional
  optional SqlLightSpec sqlLight = 31;

  // +optional
  optional AwsSpec aws = 32;

  // +optional
  optional SlackSpec slack = 33;

  // +optional
  optional FlockSpec flock = 34;

  // +optional
  optional MSTeamSpec msteam = 35;

  // +optional
  optional MattermostSpec matterMost = 36;

  // +optional
  optional HipchatSpec hipchat = 37;

  // +optional
  optional WebhookSpec webhook = 38;

  // Owner
  optional string owner = 39;
}

// ConnectionStatus is the observed state of a Connection
message ConnectionStatus {
  // +optional
  repeated ConnectionCondition conditions = 1;
}

message DigitalOceanSpec {
  // Token for digital ocean
  optional string token = 1;

  // Access Key for digital ocean spaces
  optional string accessKey = 2;

  // StorageSecret Key for digital ocean spaces
  optional string secretKey = 3;

  // Default digital ocean
  optional string defaultRegion = 4;

  // url or connection string
  optional string host = 5;
}

message FlockSpec {
  optional string url = 1;
}

message GcpStorageSpec {
  optional string keyFile = 1;

  optional string project = 2;
}

message GithubSpec {
  optional string token = 1;

  optional string userName = 2;

  optional string ssh = 3;
}

message GitlabSpec {
  optional string token = 1;

  optional string ssh = 2;
}

message HetznerSpec {
  optional string token = 1;

  optional string ssh = 2;
}

message HipchatSpec {
  optional string url = 1;

  optional string token = 2;

  optional string room = 3;
}

message ImageRegistrySpec {
  // Hostname for the image registry
  optional string host = 1;

  // Username for image registry
  optional string username = 2;

  optional string password = 3;
}

// +genclient
// +k8s:openapi-gen=true
// +kubebuilder:object:root=true
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Git SecretRepo",type="string",JSONPath=".spec.gitrepoName"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:path=labs,singular=lab,categories={infra,modeld,all}
// +kubebuilder:subresource:status
message Lab {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional LabSpec spec = 2;

  // +optional
  optional LabStatus status = 3;
}

// LabCondition describes the state of a lab at a certain point.
message LabCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 4;

  // The reason for the condition's last transition.
  optional string reason = 5;

  // A human readable message indicating details about the transition.
  optional string message = 6;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// LabList is a list of labs
message LabList {
  // Standard object's metadata.
  // More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Lab items = 2;
}

// LabSpec defines the desired state of a TenantRef
message LabSpec {
  // User provided description
  // Default to empty.
  // +optional
  // +kubebuilder:validation:MaxLength=256
  optional string description = 1;

  // Reference to the tenant owning this lab
  // Default to default tenant.
  optional k8s.io.api.core.v1.ObjectReference tenantRef = 2;

  // Resource Quota
  // +optional
  optional k8s.io.api.core.v1.ResourceQuotaSpec quotaSpec = 3;

  // +optional
  optional k8s.io.api.core.v1.LimitRangeSpec limitRangeSpec = 4;

  // Optional cluster name, in case that the lab is not on the working cluster
  optional string clusterName = 5;

  // The owner account name
  // +optional
  optional string owner = 6;
}

// LabStatus is the observed state of a Lab
message LabStatus {
  // +optional
  repeated LabCondition conditions = 1;
}

// +genclient
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +k8s:openapi-gen=true
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Type",type="string",JSONPath=".spec.type",description=""
// +kubebuilder:printcolumn:name="Expire At",type="date",JSONPath=".status.expireAt",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=licenses,singular=license,categories={infra,modeld}
// License is an abstraction that represent the cluster wide license
// as obtained from Modeld. The license is store inside a a secret
message License {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional LicenseSpec spec = 2;

  // +optional
  optional LicenseStatus status = 3;
}

// LicenseCondition describes the state of the license at a certain point.
message LicenseCondition {
  // Type of condition.
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 4;

  // The reason for the condition's last transition.
  optional string reason = 5;

  // A human readable message indicating details about the transition.
  optional string message = 6;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// LicenseList is a list of License
message LicenseList {
  // Standard object's metadata.
  // More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated License items = 2;
}

// LicenseSpec defines the desired state of License
message LicenseSpec {
  // Reference to the tenant owning this license
  // Default to default tenant.
  optional k8s.io.api.core.v1.ObjectReference tenantRef = 1;

  // The secret containing the license token
  // Required.
  // +kubebuilder:validation:MaxLength=63
  // +kubebuilder:validation:MinLength=1
  // +optional
  optional string secretName = 2;

  // +optional
  optional string owner = 3;

  // +optional
  optional string email = 4;

  // Start date for free trial
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time trialStart = 5;

  // when free trial end
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time trialEnd = 6;

  // +optional
  optional int32 maxProducts = 7;

  // max number of trainers
  // +optional
  optional int32 maxTrainers = 8;

  // the max number of servers.
  // +optional
  optional int32 maxServers = 9;

  // max users
  // +optional
  optional int32 maxUsers = 10;

  // max data planes
  // +optional
  optional int32 maxDataPlanes = 11;

  // Is forecast feature supported
  // +optional
  optional bool forecast = 12;

  // Is nlp feature supported
  // +optional
  optional bool nlp = 13;

  // Is vision feature supported
  // +optional
  optional bool vision = 14;

  // The product name
  // +optional
  optional string productName = 15;

  // The price name
  // +optional
  optional string priceName = 16;

  // When the license expire
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time expireAt = 17;

  // a notifier to receive the license expiration notification
  // +optional
  optional string notifierName = 18;
}

// LicenseStatus is the observed state of a License
message LicenseStatus {
  // Represents the latest available observations of a license state.
  // +optional
  repeated LicenseCondition conditions = 1;
}

message LinodeSpec {
  optional string apikey = 1;
}

message MSSqlServerSpec {
  optional string hostName = 1;

  // Default 1433
  optional int32 port = 2;

  optional string database = 3;

  optional string domain = 4;

  optional string username = 5;

  optional string password = 6;
}

message MSTeamSpec {
  optional string webhook = 1;
}

// +genclient
// +genclient:noStatus
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:resource:path=machineimages,singular=machineimage,categories={infra,modeld}
// MachineImage is an abstraction of virtual machine image that is used when
// adding new nodes to the cluster
message MachineImage {
  // Standard object's metadata.
  // More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // Spec holds the desired state of the machine image.
  optional MachineImageSpec spec = 2;

  // Status holds the desired state of the machine image.
  // +optional
  optional MachineImageStatus status = 3;
}

// MachineImageCondition describes the state of the MachineImage at a certain point.
message MachineImageCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 4;

  // The reason for the condition's last transition.
  optional string reason = 5;

  // A human readable message indicating details about the transition.
  optional string message = 6;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
message MachineImageList {
  // Standard object's metadata.
  // More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated MachineImage items = 2;
}

// MachineImageSpec defines the desired state of MachineImage
message MachineImageSpec {
  // The packer file definition.
  optional string content = 2;
}

message MachineImageStatus {
  // +optional
  repeated MachineImageCondition conditions = 1;
}

message MattermostSpec {
  optional string url = 1;

  optional string channel = 2;

  optional string username = 3;
}

message MinioSpec {
  // Access key for minio
  optional string accessKey = 1;

  // StorageSecret key for minio
  optional string secretKey = 2;

  // Minio url connection.
  optional string host = 3;
}

message MongoDbSpec {
  optional string hostName = 1;

  // default 27017
  optional int32 port = 2;

  optional string database = 3;

  optional string username = 4;

  optional string password = 5;
}

message MySqlSpec {
  optional string hostName = 1;

  // default 3306
  optional int32 port = 2;

  optional string database = 3;

  optional string username = 4;

  optional string password = 5;
}

// +genclient
// +kubebuilder:subresource:status
// +k8s:openapi-gen=true
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Type",type="string",JSONPath=".spec.type",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:resource:path=notifiers,singular=notifier,categories={infra,modeld}
// +kubebuilder:object:root=true
message Notifier {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional NotifierSpec spec = 2;

  // +optional
  optional NotifierStatus status = 3;
}

// NotifierCondition describes the state of the license at a certain point.
message NotifierCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, AutoScaler.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 4;

  // The reason for the condition's last transition.
  optional string reason = 5;

  // A human readable message indicating details about the transition.
  optional string message = 6;
}

// +kubebuilder:object:root=true
// NotifierList is a list of Notifiers
message NotifierList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Notifier items = 2;
}

// NotifierSpec defines the desired state of Notifier
message NotifierSpec {
  // The tenant that own the notifier
  // Default to default tenant.
  // +optional
  optional k8s.io.api.core.v1.ObjectReference tenantRef = 1;

  // User provided description
  // +optional
  optional string description = 3;

  // Address within the provider to send the notifiaction to.
  optional string to = 4;

  // The sender address. For example, from email.
  optional string from = 5;

  // required
  optional string connectionName = 6;

  // The owner account name
  // +optional
  optional string owner = 7;
}

// NotifierStatus is the observed state of a Notifier
message NotifierStatus {
  // +optional
  repeated NotifierCondition conditions = 1;
}

message OdbcSpec {
  optional string conntectionString = 1;
}

message OpenstackSpec {
  optional string userName = 1;

  optional string tenantName = 2;

  optional string password = 3;

  optional string authUrl = 4;

  optional string region = 5;
}

message OracleSpec {
  optional string hostName = 1;

  // Default 1521
  optional int32 port = 2;

  optional string database = 3;

  optional string serviceName = 4;

  optional string role = 5;

  optional string username = 6;

  optional string password = 7;
}

message OvhSpec {
  optional string endpoint = 1;

  optional string application = 2;

  optional string secret = 3;

  optional string consumerkey = 4;
}

message PostgresSQLSpec {
  optional string hostName = 1;

  // 5432
  optional int32 port = 2;

  optional string database = 3;

  optional string username = 4;

  optional string password = 5;
}

message PrestoSpec {
  optional string hostName = 1;

  // Default 8080
  optional int32 port = 2;

  optional string catalog = 3;

  optional string schema = 4;

  optional string username = 5;

  optional string password = 6;
}

message RedShiftSpec {
  optional string hostName = 1;

  // Default 5439
  optional int32 port = 2;

  optional string database = 3;

  optional string username = 4;

  optional string password = 5;
}

// +genclient
// +k8s:openapi-gen=true
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:subresource:status
// +kubebuilder:object:root=true
// +kubebuilder:resource:path=servingsites,singular=servingsite,categories={infra,modeld}
message ServingSite {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ServingSiteSpec spec = 2;

  // +optional
  optional ServingSiteStatus status = 3;
}

// ServingSiteCondition describes the state of a servingsite at a certain point.
message ServingSiteCondition {
  // Type of  condition.
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 4;

  // The reason for the condition's last transition.
  optional string reason = 5;

  // A human readable message indicating details about the transition.
  optional string message = 6;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// ServingSiteList is a list of ServingSite
message ServingSiteList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated ServingSite items = 2;
}

message ServingSiteSpec {
  // User provided description
  // +optional
  optional string description = 1;

  // Reference to the tenant owning this serving site.
  // Default to default tenant.
  // +optional
  optional k8s.io.api.core.v1.ObjectReference tenantRef = 2;

  // Resource Quota for the serving site
  // By default, not quota is applied
  // +optional
  optional k8s.io.api.core.v1.ResourceQuotaSpec quotaSpec = 3;

  // limit range for the serving site
  // By default, no limit range apply.
  // +optional
  optional k8s.io.api.core.v1.LimitRangeSpec limitRangeSpec = 4;

  // IngressName denote the name of the ingress object where the serving site
  // places the external points used to access the predictors
  // +optional
  optional string ingressName = 5;

  // The FDQN for this site. This will register with ingress.
  // +optional
  optional string fdqn = 6;

  // The virtual cluster name in case that the lab is not on the same cluster
  // +optional
  optional string clusterName = 7;

  // The owner account name
  // +optional
  optional string owner = 8;
}

message ServingSiteStatus {
  // +optional
  repeated ServingSiteCondition conditions = 1;

  // active predictors
  optional int32 activePredictors = 2;

  // inactive predictors
  optional int32 inactivePredictors = 3;

  // total predictors service failed
  optional int32 totalPredictorServiceFailed = 4;

  // total predictors with data drift failed
  optional int32 totalPredictorDataDriftFailed = 5;

  // total predictors accuracy failed
  optional int32 totalPredictorAccuracyFailed = 6;

  // Last 7 days predictions
  repeated int32 lastDailyPredictions = 7;
}

message SlackSpec {
  optional string webhookUrl = 1;

  optional string channel = 2;

  optional string userName = 3;

  optional string token = 4;
}

message SmtpSpec {
  optional string host = 1;

  optional int32 port = 2;

  optional string userName = 3;

  optional string password = 4;
}

message SnowFlakeSpec {
  optional string account = 1;

  optional string warehouse = 2;

  optional string database = 3;

  optional string username = 4;

  optional string password = 5;
}

message SqlLightSpec {
  optional string fileName = 1;
}

// +genclient
// +kubebuilder:object:root=true
// +k8s:openapi-gen=true
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:subresource:status
// +kubebuilder:resource:path=tenants,singular=tenant,categories={infra,modeld}
// Tenant represents root tenant.
message Tenant {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional TenantSpec spec = 2;

  // +optional
  optional TenantStatus status = 3;
}

// TenantCondition describes the state of a tenant at a certain point.
message TenantCondition {
  // Type of tenant condition.
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 4;

  // The reason for the condition's last transition.
  optional string reason = 5;

  // A human readable message indicating details about the transition.
  optional string message = 6;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// TenantList represent list of tenants.
message TenantList {
  // Standard object's metadata.
  // More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Tenant items = 2;
}

// TenantSpec defines the desired state of Tenant
message TenantSpec {
  // the default lab for this account
  // +optional
  optional k8s.io.api.core.v1.ObjectReference defaultLab = 1;

  // the default serving site for this account
  // +optional
  optional k8s.io.api.core.v1.ObjectReference defaultServingSiteRef = 2;

  // User provided description
  // +optional
  // +kubebuilder:validation:MaxLength=512
  optional string description = 4;

  // The owner account name
  // +optional
  optional string owner = 5;
}

// TenantStatus defines the actual state of a Tenant
message TenantStatus {
  // +optional
  repeated TenantCondition conditions = 1;
}

// +genclient
// +kubebuilder:object:root=true
// +k8s:openapi-gen=true
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="StorageConnection",type="string",JSONPath=".spec.connectionName",description="virtual bucket connections"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:subresource:status
// +kubebuilder:resource:path=virtualbuckets,shortName=vb,singular=virtualbucket,categories={infra,modeld,all}
// VirtualBucket represent a bucket api object
message VirtualBucket {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional VirtualBucketSpec spec = 2;

  // +optional
  optional VirtualBucketStatus status = 3;
}

// VitualBucketCondition describes the state of a virtual bucket at a certain point.
message VirtualBucketCondition {
  // Type of bucket condition.
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 4;

  // The reason for the condition's last transition.
  optional string reason = 5;

  // A human readable message indicating details about the transition.
  optional string message = 6;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// VirtualBucketList is a list of VirtualBucket
message VirtualBucketList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated VirtualBucket items = 2;
}

// VirtualBucketSpec defines the desired state of Bucket
message VirtualBucketSpec {
  // The owner of the virtual bucket
  // +optional
  optional k8s.io.api.core.v1.ObjectReference tenantRef = 1;

  // ConnectionName specify the api connections of this bucket cloud provider.
  // +kubebuilder:validation:MaxLength=64
  // +kubebuilder:validation:MinLength=1
  optional string connectionName = 2;

  // User provided description
  // +optional
  // +kubebuilder:validation:MaxLength=512
  optional string description = 3;

  // Owner of the bucket
  // +optional
  optional string owner = 4;
}

// VirtualBucketStatus defines the actual state of a VirtualBucket
message VirtualBucketStatus {
  // +optional
  repeated VirtualBucketCondition conditions = 1;
}

message VirtualCluster {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional VirtualClusterSpec spec = 2;

  // +optional
  optional VirtualClusterStatus status = 3;
}

// DeploymentCondition describes the state of a deployment at a certain point.
message VirtualClusterCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 4;

  // The reason for the condition's last transition.
  optional string reason = 5;

  // A human readable message indicating details about the transition.
  optional string message = 6;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// VirtualClusterList is a list of VirtualCluster
message VirtualClusterList {
  // Standard object's metadata.
  // More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated VirtualCluster items = 2;
}

message VirtualClusterSpec {
  // +kubebuilder:default=""
  // +optional
  optional string description = 1;

  // The desired number of nodes
  // +kubebuilder:default=1
  // +kubebuilder:validation:Minimum=1
  // +kubebuilder:validation:Maximum=10
  // +optional
  optional int32 nodes = 2;

  // The class of nodes or vm
  // +optional
  optional string nodeClassName = 3;

  // The desired number of gpus
  // +kubebuilder:default=0
  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:validation:Maximum=10
  // +optional
  optional int32 gpus = 4;

  // The class of gpu.
  // +optional
  optional string gpuClassName = 5;

  // Volume, if needed. The volume is monuted on all nodes.
  // +kubebuilder:default=0
  // +kubebuilder:validation:Minimum=0
  // +kubebuilder:validation:Maximum=10
  // +optional
  optional int32 volumeSize = 6;

  // Should we use spot instances.
  // +kubebuilder:default=false
  // +optional
  optional bool spot = 7;

  // Name of the provider connection
  optional string connectionName = 8;

  // the account name of the owner of this cluster
  // +kubebuilder:default=""
  // +optional
  optional string owner = 9;
}

message VirtualClusterStatus {
  // +optional
  optional int32 availableNodes = 1;

  // Number of available Gpus
  // +optional
  optional int32 availableGpus = 2;

  // +optional
  repeated VirtualClusterCondition conditions = 3;
}

// +genclient
// +kubebuilder:object:root=true
// +k8s:openapi-gen=true
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
// +kubebuilder:printcolumn:name="StorageConnection",type="string",JSONPath=".spec.connectionName",description="virtual bucket connections"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// +kubebuilder:subresource:status
// +kubebuilder:resource:path=virtualvolumes,shortName=vol,singular=virtualvolume,categories={infra,modeld,all}
// VirtualVolume represent a volume api object
message VirtualVolume {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional VirtualVolumeSpec spec = 2;

  // +optional
  optional VirtualVolumeStatus status = 3;
}

// DeploymentCondition describes the state of a deployment at a certain point.
message VirtualVolumeCondition {
  // Type of account condition.
  optional string type = 1;

  // Status of the condition, one of True, False, Unknown.
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 4;

  // The reason for the condition's last transition.
  optional string reason = 5;

  // A human readable message indicating details about the transition.
  optional string message = 6;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// VirtualVolumeList is a list of mdvolumes
message VirtualVolumeList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated VirtualVolume items = 2;
}

// VirtualVolumeSpec define the desired state of the mdvolume.
message VirtualVolumeSpec {
  // The Lab that own the git repository
  // Default to the default volume.
  optional k8s.io.api.core.v1.ObjectReference tenantRef = 1;

  //  specify the api connections of this mdvolume cloud provider.
  // +optional
  optional string connectionName = 2;

  // User provided description
  // +optional
  // +kubebuilder:validation:MaxLength=512
  optional string description = 3;

  // The owner account name
  // +optional
  optional string owner = 4;
}

message VirtualVolumeStatus {
  // +optional
  repeated VirtualVolumeCondition conditions = 1;
}

message WebhookSpec {
  optional string url = 1;
}

