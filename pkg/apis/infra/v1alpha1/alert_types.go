package v1alpha1

import (
	catalog "github.com/metaprov/modelaapi/pkg/apis/catalog/v1alpha1"
	v1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// Alert condition

const (
	AlertSent  = "Sent"
	AlertSaved = "Saved"
)

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:resource:path=alerts,singular=alert,categories={infra,modela}
// +kubebuilder:storageversion
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase",description=""
// +kubebuilder:printcolumn:name="Level",type="string",JSONPath=".spec.level",description=""
// +kubebuilder:printcolumn:name="Subject",type="string",JSONPath=".spec.subject",description=""
// +kubebuilder:printcolumn:name="Entity Namespace",type="string",JSONPath=".spec.entityRef.namespace",description="",priority=1
// +kubebuilder:printcolumn:name="Entity Name",type="string",JSONPath=".spec.entityRef.name",description="",priority=1
// +kubebuilder:printcolumn:name="Notifier",type="string",JSONPath=".spec.notifierName",description="",priority=1
// +kubebuilder:printcolumn:name="FiredAt",type="date",JSONPath=".status.at",description=""
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
// Alert represents temporal information about an event that occurred with a Modela custom resource
type Alert struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
	Spec              AlertSpec `json:"spec" protobuf:"bytes,2,opt,name=spec"`
	//+optional
	Status AlertStatus `json:"status,omitempty" protobuf:"bytes,3,opt,name=status"`
}

// AlertList is a list of Alerts
// +kubebuilder:object:root=true
type AlertList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
	Items           []Alert `json:"items" protobuf:"bytes,2,rep,name=items"`
}

type AlertLevel string

const (
	Info    AlertLevel = "normal"
	Warning AlertLevel = "warning "
	Error   AlertLevel = "error"
)

// AlertSpec defines the contents of an Alert. Alerts are generated by Modela resource controllers and should
// not be created manually.
type AlertSpec struct {
	// The subject of the Alert
	// +kubebuilder:default:=""
	// +kubebuilder:validation:Optional
	Subject *string `json:"subject,omitempty" protobuf:"bytes,1,opt,name=subject"`
	// The message of the Alert
	// +kubebuilder:default:=""
	// +kubebuilder:validation:Optional
	Message *string `json:"message,omitempty" protobuf:"bytes,2,opt,name=message"`
	// The significance of the Alert, which can be normal, warning, or error
	// +kubebuilder:default:="normal"
	// +kubebuilder:validation:Optional
	Level *AlertLevel `json:"level,omitempty" protobuf:"bytes,3,opt,name=level"`
	// The entity which the Alert is in reference to
	EntityRef v1.ObjectReference `json:"entityRef,omitempty" protobuf:"bytes,4,opt,name=entityRef"`
	// The name of the Notifier resource that exists in the same tenant as the Alert which the contents of the
	// Alert will be forwarded to
	// +kubebuilder:default:=""
	// +kubebuilder:validation:Required
	NotifierName *string `json:"notifierName,omitempty" protobuf:"bytes,5,opt,name=notifierName"`
	// The name of the Account which owns the resource that the Alert references
	// +kubebuilder:default:="no-one"
	// +kubebuilder:validation:Optional
	Owner *string `json:"owner,omitempty" protobuf:"bytes,6,opt,name=owner"`
	// The time-to-live of the Alert, after which the Alert will be archived
	// +kubebuilder:default:=3600
	// +kubebuilder:validation:Optional
	TTL *int32 `json:"ttl,omitempty" protobuf:"varint,7,opt,name=ttl"`
	// Additional key-value information about the event
	// +kubebuilder:validation:Optional
	Fields map[string]string `json:"fields,omitempty" protobuf:"bytes,8,opt,name=fields"`
	// The URL of the subject
	// +kubebuilder:default:=""
	// +kubebuilder:validation:Optional
	URL *string `json:"url,omitempty" protobuf:"bytes,9,opt,name=url"`
	// The URL of an image in reference to the Alert
	// +kubebuilder:default:=""
	// +kubebuilder:validation:Optional
	Image *string `json:"image,omitempty" protobuf:"bytes,10,opt,name=image"`
	// The reference to the tenant which the object exists under
	// +kubebuilder:validation:Optional
	TenantRef *v1.ObjectReference `json:"tenantRef,omitempty" protobuf:"bytes,11,opt,name=tenantRef"`
}

// AlertStatus is the observed state of an Alert
type AlertStatus struct {
	// The time when the Alert was fired
	// +kubebuilder:validation:Optional
	FiredAt *metav1.Time `json:"firedAt" protobuf:"bytes,2,opt,name=firedAt"`
	// ObservedGeneration is the last generation that was acted on
	//+kubebuilder:validation:Optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty" protobuf:"varint,3,opt,name=observedGeneration"`
	// The last time the object was updated
	//+kubebuilder:validation:Optional
	UpdatedAt *metav1.Time `json:"updatedAt,omitempty" protobuf:"bytes,4,opt,name=updatedAt"`
	// In the case of failure, the Alert resource controller will set this field with a failure reason
	//+kubebuilder:validation:Optional
	FailureReason *catalog.StatusError `json:"failureReason,omitempty" protobuf:"bytes,5,opt,name=failureReason"`
	// In the case of failure, the Alert resource controller will set this field with a failure message
	//+kubebuilder:validation:Optional
	FailureMessage *string `json:"failureMessage,omitempty" protobuf:"bytes,6,opt,name=failureMessage"`
	// +patchMergeKey=type
	// +patchStrategy=merge
	// +kubebuilder:validation:Optional
	Conditions []metav1.Condition `json:"conditions,omitempty" patchStrategy:"merge" patchMergeKey:"type" protobuf:"bytes,7,rep,name=conditions"`
}
