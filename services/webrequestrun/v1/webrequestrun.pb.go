// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: github.com/metaprov/modelaapi/services/webrequestrun/v1/webrequestrun.proto

package v1

import (
	context "context"
	v1alpha1 "github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListWebRequestRunsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Labels    map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListWebRequestRunsRequest) Reset() {
	*x = ListWebRequestRunsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWebRequestRunsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWebRequestRunsRequest) ProtoMessage() {}

func (x *ListWebRequestRunsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWebRequestRunsRequest.ProtoReflect.Descriptor instead.
func (*ListWebRequestRunsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_rawDescGZIP(), []int{0}
}

func (x *ListWebRequestRunsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListWebRequestRunsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListWebRequestRunsRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ListWebRequestRunsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Webrequestruns *v1alpha1.WebRequestRunList `protobuf:"bytes,1,opt,name=webrequestruns,proto3" json:"webrequestruns,omitempty"`
	NextPageToken  string                      `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListWebRequestRunsResponse) Reset() {
	*x = ListWebRequestRunsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWebRequestRunsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWebRequestRunsResponse) ProtoMessage() {}

func (x *ListWebRequestRunsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWebRequestRunsResponse.ProtoReflect.Descriptor instead.
func (*ListWebRequestRunsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_rawDescGZIP(), []int{1}
}

func (x *ListWebRequestRunsResponse) GetWebrequestruns() *v1alpha1.WebRequestRunList {
	if x != nil {
		return x.Webrequestruns
	}
	return nil
}

func (x *ListWebRequestRunsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateWebRequestRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateWebRequestRunResponse) Reset() {
	*x = CreateWebRequestRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWebRequestRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWebRequestRunResponse) ProtoMessage() {}

func (x *CreateWebRequestRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWebRequestRunResponse.ProtoReflect.Descriptor instead.
func (*CreateWebRequestRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_rawDescGZIP(), []int{2}
}

type CreateWebRequestRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Webrequestrun *v1alpha1.WebRequestRun `protobuf:"bytes,1,opt,name=webrequestrun,proto3" json:"webrequestrun,omitempty"`
}

func (x *CreateWebRequestRunRequest) Reset() {
	*x = CreateWebRequestRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWebRequestRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWebRequestRunRequest) ProtoMessage() {}

func (x *CreateWebRequestRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWebRequestRunRequest.ProtoReflect.Descriptor instead.
func (*CreateWebRequestRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_rawDescGZIP(), []int{3}
}

func (x *CreateWebRequestRunRequest) GetWebrequestrun() *v1alpha1.WebRequestRun {
	if x != nil {
		return x.Webrequestrun
	}
	return nil
}

type UpdateWebRequestRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Webrequestrun *v1alpha1.WebRequestRun `protobuf:"bytes,1,opt,name=webrequestrun,proto3" json:"webrequestrun,omitempty"`
	FieldMask     *field_mask.FieldMask   `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
}

func (x *UpdateWebRequestRunRequest) Reset() {
	*x = UpdateWebRequestRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWebRequestRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWebRequestRunRequest) ProtoMessage() {}

func (x *UpdateWebRequestRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWebRequestRunRequest.ProtoReflect.Descriptor instead.
func (*UpdateWebRequestRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateWebRequestRunRequest) GetWebrequestrun() *v1alpha1.WebRequestRun {
	if x != nil {
		return x.Webrequestrun
	}
	return nil
}

func (x *UpdateWebRequestRunRequest) GetFieldMask() *field_mask.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

type UpdateWebRequestRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateWebRequestRunResponse) Reset() {
	*x = UpdateWebRequestRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWebRequestRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWebRequestRunResponse) ProtoMessage() {}

func (x *UpdateWebRequestRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWebRequestRunResponse.ProtoReflect.Descriptor instead.
func (*UpdateWebRequestRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_rawDescGZIP(), []int{5}
}

type GetWebRequestRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetWebRequestRunRequest) Reset() {
	*x = GetWebRequestRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWebRequestRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWebRequestRunRequest) ProtoMessage() {}

func (x *GetWebRequestRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWebRequestRunRequest.ProtoReflect.Descriptor instead.
func (*GetWebRequestRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_rawDescGZIP(), []int{6}
}

func (x *GetWebRequestRunRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetWebRequestRunRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetWebRequestRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Webrequestrun *v1alpha1.WebRequestRun `protobuf:"bytes,1,opt,name=webrequestrun,proto3" json:"webrequestrun,omitempty"`
	Yaml          string                  `protobuf:"bytes,2,opt,name=yaml,proto3" json:"yaml,omitempty"`
}

func (x *GetWebRequestRunResponse) Reset() {
	*x = GetWebRequestRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWebRequestRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWebRequestRunResponse) ProtoMessage() {}

func (x *GetWebRequestRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWebRequestRunResponse.ProtoReflect.Descriptor instead.
func (*GetWebRequestRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_rawDescGZIP(), []int{7}
}

func (x *GetWebRequestRunResponse) GetWebrequestrun() *v1alpha1.WebRequestRun {
	if x != nil {
		return x.Webrequestrun
	}
	return nil
}

func (x *GetWebRequestRunResponse) GetYaml() string {
	if x != nil {
		return x.Yaml
	}
	return ""
}

type DeleteWebRequestRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteWebRequestRunRequest) Reset() {
	*x = DeleteWebRequestRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWebRequestRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWebRequestRunRequest) ProtoMessage() {}

func (x *DeleteWebRequestRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWebRequestRunRequest.ProtoReflect.Descriptor instead.
func (*DeleteWebRequestRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteWebRequestRunRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeleteWebRequestRunRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteWebRequestRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteWebRequestRunResponse) Reset() {
	*x = DeleteWebRequestRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWebRequestRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWebRequestRunResponse) ProtoMessage() {}

func (x *DeleteWebRequestRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWebRequestRunResponse.ProtoReflect.Descriptor instead.
func (*DeleteWebRequestRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_rawDescGZIP(), []int{9}
}

var File_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto protoreflect.FileDescriptor

var file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_rawDesc = []byte{
	0x0a, 0x4b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x37, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61,
	0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x80, 0x02, 0x0a,
	0x19, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x75, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x76, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5e, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65, 0x62, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xb5, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x75, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f,
	0x0a, 0x0e, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x57, 0x65,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x0e, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x73, 0x12,
	0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x69, 0x0a, 0x0d, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x75,
	0x6e, 0x52, 0x0d, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x72, 0x75, 0x6e,
	0x22, 0xc2, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x69, 0x0a, 0x0d, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x72, 0x75, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x57, 0x65,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x52, 0x0d, 0x77, 0x65, 0x62,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x1d, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57,
	0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x57, 0x65, 0x62, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x99, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69,
	0x0a, 0x0d, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x57, 0x65, 0x62,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x52, 0x0d, 0x77, 0x65, 0x62, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x61, 0x6d,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x22, 0x4e, 0x0a,
	0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1d, 0x0a,
	0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xc0, 0x09, 0x0a,
	0x14, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xe5, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x73, 0x12, 0x52, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65, 0x62, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57,
	0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f,
	0x76, 0x31, 0x2f, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x72, 0x75, 0x6e,
	0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x7d, 0x12, 0xdf, 0x01,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x75, 0x6e, 0x12, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77,
	0x65, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x54, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x72, 0x75,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x65,
	0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x73, 0x3a, 0x01, 0x2a, 0x12,
	0xda, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x75, 0x6e, 0x12, 0x50, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x65,
	0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x51, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x77, 0x65, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x75,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1b, 0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x72, 0x75, 0x6e, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0x8e, 0x02, 0x0a,
	0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x75, 0x6e, 0x12, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x65,
	0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x54, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x72, 0x75, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x4c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x46, 0x1a, 0x41, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x65, 0x62,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x74, 0x65,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x7d, 0x2f, 0x7b, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0xef, 0x01,
	0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x75, 0x6e, 0x12, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77,
	0x65, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x54, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x72, 0x75,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x2a, 0x25, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x65,
	0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x73, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x7d, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x42,
	0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_rawDescOnce sync.Once
	file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_rawDescData = file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_rawDesc
)

func file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_rawDescGZIP() []byte {
	file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_rawDescOnce.Do(func() {
		file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_rawDescData)
	})
	return file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_rawDescData
}

var file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_goTypes = []interface{}{
	(*ListWebRequestRunsRequest)(nil),   // 0: github.com.metaprov.modelaapi.services.webrequestrun.v1.ListWebRequestRunsRequest
	(*ListWebRequestRunsResponse)(nil),  // 1: github.com.metaprov.modelaapi.services.webrequestrun.v1.ListWebRequestRunsResponse
	(*CreateWebRequestRunResponse)(nil), // 2: github.com.metaprov.modelaapi.services.webrequestrun.v1.CreateWebRequestRunResponse
	(*CreateWebRequestRunRequest)(nil),  // 3: github.com.metaprov.modelaapi.services.webrequestrun.v1.CreateWebRequestRunRequest
	(*UpdateWebRequestRunRequest)(nil),  // 4: github.com.metaprov.modelaapi.services.webrequestrun.v1.UpdateWebRequestRunRequest
	(*UpdateWebRequestRunResponse)(nil), // 5: github.com.metaprov.modelaapi.services.webrequestrun.v1.UpdateWebRequestRunResponse
	(*GetWebRequestRunRequest)(nil),     // 6: github.com.metaprov.modelaapi.services.webrequestrun.v1.GetWebRequestRunRequest
	(*GetWebRequestRunResponse)(nil),    // 7: github.com.metaprov.modelaapi.services.webrequestrun.v1.GetWebRequestRunResponse
	(*DeleteWebRequestRunRequest)(nil),  // 8: github.com.metaprov.modelaapi.services.webrequestrun.v1.DeleteWebRequestRunRequest
	(*DeleteWebRequestRunResponse)(nil), // 9: github.com.metaprov.modelaapi.services.webrequestrun.v1.DeleteWebRequestRunResponse
	nil,                                 // 10: github.com.metaprov.modelaapi.services.webrequestrun.v1.ListWebRequestRunsRequest.LabelsEntry
	(*v1alpha1.WebRequestRunList)(nil),  // 11: github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.WebRequestRunList
	(*v1alpha1.WebRequestRun)(nil),      // 12: github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.WebRequestRun
	(*field_mask.FieldMask)(nil),        // 13: google.protobuf.FieldMask
}
var file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_depIdxs = []int32{
	10, // 0: github.com.metaprov.modelaapi.services.webrequestrun.v1.ListWebRequestRunsRequest.labels:type_name -> github.com.metaprov.modelaapi.services.webrequestrun.v1.ListWebRequestRunsRequest.LabelsEntry
	11, // 1: github.com.metaprov.modelaapi.services.webrequestrun.v1.ListWebRequestRunsResponse.webrequestruns:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.WebRequestRunList
	12, // 2: github.com.metaprov.modelaapi.services.webrequestrun.v1.CreateWebRequestRunRequest.webrequestrun:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.WebRequestRun
	12, // 3: github.com.metaprov.modelaapi.services.webrequestrun.v1.UpdateWebRequestRunRequest.webrequestrun:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.WebRequestRun
	13, // 4: github.com.metaprov.modelaapi.services.webrequestrun.v1.UpdateWebRequestRunRequest.field_mask:type_name -> google.protobuf.FieldMask
	12, // 5: github.com.metaprov.modelaapi.services.webrequestrun.v1.GetWebRequestRunResponse.webrequestrun:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.WebRequestRun
	0,  // 6: github.com.metaprov.modelaapi.services.webrequestrun.v1.WebRequestRunService.ListWebRequestRuns:input_type -> github.com.metaprov.modelaapi.services.webrequestrun.v1.ListWebRequestRunsRequest
	3,  // 7: github.com.metaprov.modelaapi.services.webrequestrun.v1.WebRequestRunService.CreateWebRequestRun:input_type -> github.com.metaprov.modelaapi.services.webrequestrun.v1.CreateWebRequestRunRequest
	6,  // 8: github.com.metaprov.modelaapi.services.webrequestrun.v1.WebRequestRunService.GetWebRequestRun:input_type -> github.com.metaprov.modelaapi.services.webrequestrun.v1.GetWebRequestRunRequest
	4,  // 9: github.com.metaprov.modelaapi.services.webrequestrun.v1.WebRequestRunService.UpdateWebRequestRun:input_type -> github.com.metaprov.modelaapi.services.webrequestrun.v1.UpdateWebRequestRunRequest
	8,  // 10: github.com.metaprov.modelaapi.services.webrequestrun.v1.WebRequestRunService.DeleteWebRequestRun:input_type -> github.com.metaprov.modelaapi.services.webrequestrun.v1.DeleteWebRequestRunRequest
	1,  // 11: github.com.metaprov.modelaapi.services.webrequestrun.v1.WebRequestRunService.ListWebRequestRuns:output_type -> github.com.metaprov.modelaapi.services.webrequestrun.v1.ListWebRequestRunsResponse
	2,  // 12: github.com.metaprov.modelaapi.services.webrequestrun.v1.WebRequestRunService.CreateWebRequestRun:output_type -> github.com.metaprov.modelaapi.services.webrequestrun.v1.CreateWebRequestRunResponse
	7,  // 13: github.com.metaprov.modelaapi.services.webrequestrun.v1.WebRequestRunService.GetWebRequestRun:output_type -> github.com.metaprov.modelaapi.services.webrequestrun.v1.GetWebRequestRunResponse
	5,  // 14: github.com.metaprov.modelaapi.services.webrequestrun.v1.WebRequestRunService.UpdateWebRequestRun:output_type -> github.com.metaprov.modelaapi.services.webrequestrun.v1.UpdateWebRequestRunResponse
	9,  // 15: github.com.metaprov.modelaapi.services.webrequestrun.v1.WebRequestRunService.DeleteWebRequestRun:output_type -> github.com.metaprov.modelaapi.services.webrequestrun.v1.DeleteWebRequestRunResponse
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_init() }
func file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_init() {
	if File_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWebRequestRunsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWebRequestRunsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWebRequestRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWebRequestRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWebRequestRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWebRequestRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWebRequestRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWebRequestRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWebRequestRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWebRequestRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_goTypes,
		DependencyIndexes: file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_depIdxs,
		MessageInfos:      file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_msgTypes,
	}.Build()
	File_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto = out.File
	file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_rawDesc = nil
	file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_goTypes = nil
	file_github_com_metaprov_modelaapi_services_webrequestrun_v1_webrequestrun_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// WebRequestRunServiceClient is the client API for WebRequestRunService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WebRequestRunServiceClient interface {
	ListWebRequestRuns(ctx context.Context, in *ListWebRequestRunsRequest, opts ...grpc.CallOption) (*ListWebRequestRunsResponse, error)
	CreateWebRequestRun(ctx context.Context, in *CreateWebRequestRunRequest, opts ...grpc.CallOption) (*CreateWebRequestRunResponse, error)
	GetWebRequestRun(ctx context.Context, in *GetWebRequestRunRequest, opts ...grpc.CallOption) (*GetWebRequestRunResponse, error)
	UpdateWebRequestRun(ctx context.Context, in *UpdateWebRequestRunRequest, opts ...grpc.CallOption) (*UpdateWebRequestRunResponse, error)
	DeleteWebRequestRun(ctx context.Context, in *DeleteWebRequestRunRequest, opts ...grpc.CallOption) (*DeleteWebRequestRunResponse, error)
}

type webRequestRunServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewWebRequestRunServiceClient(cc grpc.ClientConnInterface) WebRequestRunServiceClient {
	return &webRequestRunServiceClient{cc}
}

func (c *webRequestRunServiceClient) ListWebRequestRuns(ctx context.Context, in *ListWebRequestRunsRequest, opts ...grpc.CallOption) (*ListWebRequestRunsResponse, error) {
	out := new(ListWebRequestRunsResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.webrequestrun.v1.WebRequestRunService/ListWebRequestRuns", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webRequestRunServiceClient) CreateWebRequestRun(ctx context.Context, in *CreateWebRequestRunRequest, opts ...grpc.CallOption) (*CreateWebRequestRunResponse, error) {
	out := new(CreateWebRequestRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.webrequestrun.v1.WebRequestRunService/CreateWebRequestRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webRequestRunServiceClient) GetWebRequestRun(ctx context.Context, in *GetWebRequestRunRequest, opts ...grpc.CallOption) (*GetWebRequestRunResponse, error) {
	out := new(GetWebRequestRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.webrequestrun.v1.WebRequestRunService/GetWebRequestRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webRequestRunServiceClient) UpdateWebRequestRun(ctx context.Context, in *UpdateWebRequestRunRequest, opts ...grpc.CallOption) (*UpdateWebRequestRunResponse, error) {
	out := new(UpdateWebRequestRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.webrequestrun.v1.WebRequestRunService/UpdateWebRequestRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webRequestRunServiceClient) DeleteWebRequestRun(ctx context.Context, in *DeleteWebRequestRunRequest, opts ...grpc.CallOption) (*DeleteWebRequestRunResponse, error) {
	out := new(DeleteWebRequestRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.webrequestrun.v1.WebRequestRunService/DeleteWebRequestRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WebRequestRunServiceServer is the server API for WebRequestRunService service.
type WebRequestRunServiceServer interface {
	ListWebRequestRuns(context.Context, *ListWebRequestRunsRequest) (*ListWebRequestRunsResponse, error)
	CreateWebRequestRun(context.Context, *CreateWebRequestRunRequest) (*CreateWebRequestRunResponse, error)
	GetWebRequestRun(context.Context, *GetWebRequestRunRequest) (*GetWebRequestRunResponse, error)
	UpdateWebRequestRun(context.Context, *UpdateWebRequestRunRequest) (*UpdateWebRequestRunResponse, error)
	DeleteWebRequestRun(context.Context, *DeleteWebRequestRunRequest) (*DeleteWebRequestRunResponse, error)
}

// UnimplementedWebRequestRunServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWebRequestRunServiceServer struct {
}

func (*UnimplementedWebRequestRunServiceServer) ListWebRequestRuns(context.Context, *ListWebRequestRunsRequest) (*ListWebRequestRunsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListWebRequestRuns not implemented")
}
func (*UnimplementedWebRequestRunServiceServer) CreateWebRequestRun(context.Context, *CreateWebRequestRunRequest) (*CreateWebRequestRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWebRequestRun not implemented")
}
func (*UnimplementedWebRequestRunServiceServer) GetWebRequestRun(context.Context, *GetWebRequestRunRequest) (*GetWebRequestRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWebRequestRun not implemented")
}
func (*UnimplementedWebRequestRunServiceServer) UpdateWebRequestRun(context.Context, *UpdateWebRequestRunRequest) (*UpdateWebRequestRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateWebRequestRun not implemented")
}
func (*UnimplementedWebRequestRunServiceServer) DeleteWebRequestRun(context.Context, *DeleteWebRequestRunRequest) (*DeleteWebRequestRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteWebRequestRun not implemented")
}

func RegisterWebRequestRunServiceServer(s *grpc.Server, srv WebRequestRunServiceServer) {
	s.RegisterService(&_WebRequestRunService_serviceDesc, srv)
}

func _WebRequestRunService_ListWebRequestRuns_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListWebRequestRunsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebRequestRunServiceServer).ListWebRequestRuns(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.webrequestrun.v1.WebRequestRunService/ListWebRequestRuns",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebRequestRunServiceServer).ListWebRequestRuns(ctx, req.(*ListWebRequestRunsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebRequestRunService_CreateWebRequestRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWebRequestRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebRequestRunServiceServer).CreateWebRequestRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.webrequestrun.v1.WebRequestRunService/CreateWebRequestRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebRequestRunServiceServer).CreateWebRequestRun(ctx, req.(*CreateWebRequestRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebRequestRunService_GetWebRequestRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWebRequestRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebRequestRunServiceServer).GetWebRequestRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.webrequestrun.v1.WebRequestRunService/GetWebRequestRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebRequestRunServiceServer).GetWebRequestRun(ctx, req.(*GetWebRequestRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebRequestRunService_UpdateWebRequestRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateWebRequestRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebRequestRunServiceServer).UpdateWebRequestRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.webrequestrun.v1.WebRequestRunService/UpdateWebRequestRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebRequestRunServiceServer).UpdateWebRequestRun(ctx, req.(*UpdateWebRequestRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebRequestRunService_DeleteWebRequestRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteWebRequestRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebRequestRunServiceServer).DeleteWebRequestRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.webrequestrun.v1.WebRequestRunService/DeleteWebRequestRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebRequestRunServiceServer).DeleteWebRequestRun(ctx, req.(*DeleteWebRequestRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WebRequestRunService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.metaprov.modelaapi.services.webrequestrun.v1.WebRequestRunService",
	HandlerType: (*WebRequestRunServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListWebRequestRuns",
			Handler:    _WebRequestRunService_ListWebRequestRuns_Handler,
		},
		{
			MethodName: "CreateWebRequestRun",
			Handler:    _WebRequestRunService_CreateWebRequestRun_Handler,
		},
		{
			MethodName: "GetWebRequestRun",
			Handler:    _WebRequestRunService_GetWebRequestRun_Handler,
		},
		{
			MethodName: "UpdateWebRequestRun",
			Handler:    _WebRequestRunService_UpdateWebRequestRun_Handler,
		},
		{
			MethodName: "DeleteWebRequestRun",
			Handler:    _WebRequestRunService_DeleteWebRequestRun_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/metaprov/modelaapi/services/webrequestrun/v1/webrequestrun.proto",
}
