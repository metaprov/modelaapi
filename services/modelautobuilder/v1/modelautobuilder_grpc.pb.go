// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.19.1
// source: github.com/metaprov/modelaapi/services/modelautobuilder/v1/modelautobuilder.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ModelAutobuilderServiceClient is the client API for ModelAutobuilderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ModelAutobuilderServiceClient interface {
	ListModelAutobuilders(ctx context.Context, in *ListModelAutobuildersRequest, opts ...grpc.CallOption) (*ListModelAutobuildersResponse, error)
	CreateModelAutobuilder(ctx context.Context, in *CreateModelAutobuilderRequest, opts ...grpc.CallOption) (*CreateModelAutobuilderResponse, error)
	GetModelAutobuilder(ctx context.Context, in *GetModelAutobuilderRequest, opts ...grpc.CallOption) (*GetModelAutobuilderResponse, error)
	UpdateModelAutobuilder(ctx context.Context, in *UpdateModelAutobuilderRequest, opts ...grpc.CallOption) (*UpdateModelAutobuilderResponse, error)
	DeleteModelAutobuilder(ctx context.Context, in *DeleteModelAutobuilderRequest, opts ...grpc.CallOption) (*DeleteModelAutobuilderResponse, error)
}

type modelAutobuilderServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewModelAutobuilderServiceClient(cc grpc.ClientConnInterface) ModelAutobuilderServiceClient {
	return &modelAutobuilderServiceClient{cc}
}

func (c *modelAutobuilderServiceClient) ListModelAutobuilders(ctx context.Context, in *ListModelAutobuildersRequest, opts ...grpc.CallOption) (*ListModelAutobuildersResponse, error) {
	out := new(ListModelAutobuildersResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.modelautobuilder.v1.ModelAutobuilderService/ListModelAutobuilders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelAutobuilderServiceClient) CreateModelAutobuilder(ctx context.Context, in *CreateModelAutobuilderRequest, opts ...grpc.CallOption) (*CreateModelAutobuilderResponse, error) {
	out := new(CreateModelAutobuilderResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.modelautobuilder.v1.ModelAutobuilderService/CreateModelAutobuilder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelAutobuilderServiceClient) GetModelAutobuilder(ctx context.Context, in *GetModelAutobuilderRequest, opts ...grpc.CallOption) (*GetModelAutobuilderResponse, error) {
	out := new(GetModelAutobuilderResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.modelautobuilder.v1.ModelAutobuilderService/GetModelAutobuilder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelAutobuilderServiceClient) UpdateModelAutobuilder(ctx context.Context, in *UpdateModelAutobuilderRequest, opts ...grpc.CallOption) (*UpdateModelAutobuilderResponse, error) {
	out := new(UpdateModelAutobuilderResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.modelautobuilder.v1.ModelAutobuilderService/UpdateModelAutobuilder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelAutobuilderServiceClient) DeleteModelAutobuilder(ctx context.Context, in *DeleteModelAutobuilderRequest, opts ...grpc.CallOption) (*DeleteModelAutobuilderResponse, error) {
	out := new(DeleteModelAutobuilderResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.modelautobuilder.v1.ModelAutobuilderService/DeleteModelAutobuilder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ModelAutobuilderServiceServer is the server API for ModelAutobuilderService service.
// All implementations must embed UnimplementedModelAutobuilderServiceServer
// for forward compatibility
type ModelAutobuilderServiceServer interface {
	ListModelAutobuilders(context.Context, *ListModelAutobuildersRequest) (*ListModelAutobuildersResponse, error)
	CreateModelAutobuilder(context.Context, *CreateModelAutobuilderRequest) (*CreateModelAutobuilderResponse, error)
	GetModelAutobuilder(context.Context, *GetModelAutobuilderRequest) (*GetModelAutobuilderResponse, error)
	UpdateModelAutobuilder(context.Context, *UpdateModelAutobuilderRequest) (*UpdateModelAutobuilderResponse, error)
	DeleteModelAutobuilder(context.Context, *DeleteModelAutobuilderRequest) (*DeleteModelAutobuilderResponse, error)
	mustEmbedUnimplementedModelAutobuilderServiceServer()
}

// UnimplementedModelAutobuilderServiceServer must be embedded to have forward compatible implementations.
type UnimplementedModelAutobuilderServiceServer struct {
}

func (UnimplementedModelAutobuilderServiceServer) ListModelAutobuilders(context.Context, *ListModelAutobuildersRequest) (*ListModelAutobuildersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListModelAutobuilders not implemented")
}
func (UnimplementedModelAutobuilderServiceServer) CreateModelAutobuilder(context.Context, *CreateModelAutobuilderRequest) (*CreateModelAutobuilderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateModelAutobuilder not implemented")
}
func (UnimplementedModelAutobuilderServiceServer) GetModelAutobuilder(context.Context, *GetModelAutobuilderRequest) (*GetModelAutobuilderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetModelAutobuilder not implemented")
}
func (UnimplementedModelAutobuilderServiceServer) UpdateModelAutobuilder(context.Context, *UpdateModelAutobuilderRequest) (*UpdateModelAutobuilderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateModelAutobuilder not implemented")
}
func (UnimplementedModelAutobuilderServiceServer) DeleteModelAutobuilder(context.Context, *DeleteModelAutobuilderRequest) (*DeleteModelAutobuilderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteModelAutobuilder not implemented")
}
func (UnimplementedModelAutobuilderServiceServer) mustEmbedUnimplementedModelAutobuilderServiceServer() {
}

// UnsafeModelAutobuilderServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ModelAutobuilderServiceServer will
// result in compilation errors.
type UnsafeModelAutobuilderServiceServer interface {
	mustEmbedUnimplementedModelAutobuilderServiceServer()
}

func RegisterModelAutobuilderServiceServer(s grpc.ServiceRegistrar, srv ModelAutobuilderServiceServer) {
	s.RegisterService(&ModelAutobuilderService_ServiceDesc, srv)
}

func _ModelAutobuilderService_ListModelAutobuilders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListModelAutobuildersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelAutobuilderServiceServer).ListModelAutobuilders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.modelautobuilder.v1.ModelAutobuilderService/ListModelAutobuilders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelAutobuilderServiceServer).ListModelAutobuilders(ctx, req.(*ListModelAutobuildersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelAutobuilderService_CreateModelAutobuilder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateModelAutobuilderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelAutobuilderServiceServer).CreateModelAutobuilder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.modelautobuilder.v1.ModelAutobuilderService/CreateModelAutobuilder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelAutobuilderServiceServer).CreateModelAutobuilder(ctx, req.(*CreateModelAutobuilderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelAutobuilderService_GetModelAutobuilder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetModelAutobuilderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelAutobuilderServiceServer).GetModelAutobuilder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.modelautobuilder.v1.ModelAutobuilderService/GetModelAutobuilder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelAutobuilderServiceServer).GetModelAutobuilder(ctx, req.(*GetModelAutobuilderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelAutobuilderService_UpdateModelAutobuilder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateModelAutobuilderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelAutobuilderServiceServer).UpdateModelAutobuilder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.modelautobuilder.v1.ModelAutobuilderService/UpdateModelAutobuilder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelAutobuilderServiceServer).UpdateModelAutobuilder(ctx, req.(*UpdateModelAutobuilderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelAutobuilderService_DeleteModelAutobuilder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteModelAutobuilderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelAutobuilderServiceServer).DeleteModelAutobuilder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.modelautobuilder.v1.ModelAutobuilderService/DeleteModelAutobuilder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelAutobuilderServiceServer).DeleteModelAutobuilder(ctx, req.(*DeleteModelAutobuilderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ModelAutobuilderService_ServiceDesc is the grpc.ServiceDesc for ModelAutobuilderService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ModelAutobuilderService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.metaprov.modelaapi.services.modelautobuilder.v1.ModelAutobuilderService",
	HandlerType: (*ModelAutobuilderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListModelAutobuilders",
			Handler:    _ModelAutobuilderService_ListModelAutobuilders_Handler,
		},
		{
			MethodName: "CreateModelAutobuilder",
			Handler:    _ModelAutobuilderService_CreateModelAutobuilder_Handler,
		},
		{
			MethodName: "GetModelAutobuilder",
			Handler:    _ModelAutobuilderService_GetModelAutobuilder_Handler,
		},
		{
			MethodName: "UpdateModelAutobuilder",
			Handler:    _ModelAutobuilderService_UpdateModelAutobuilder_Handler,
		},
		{
			MethodName: "DeleteModelAutobuilder",
			Handler:    _ModelAutobuilderService_DeleteModelAutobuilder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/metaprov/modelaapi/services/modelautobuilder/v1/modelautobuilder.proto",
}
