syntax = "proto3";

option go_package = "github.com/metaprov/modelaapi/services/k8score/v1";
package github.com.metaprov.modelaapi.services.k8score.v1;

import "google/api/annotations.proto";
import "k8s.io/api/core/v1/generated.proto";

/////////////////////////////// Secrets

message GetSecretRequest {
    string namespace = 1;
    string name      = 2;
    map<string,string> labels =3;
}

message GetSecretResponse {
    SecretInfo item = 1;
}

message ListSecretsRequest {
    string namespace = 1;
    map<string,string> labels =3;
}

message ListSecretResponse {
    repeated SecretInfo items = 1;
}


/////////////////////////////// Deployment

message GetDeploymentRequest {
    string namespace = 1;
    string name      = 2;
    map<string,string> labels =3;
}

message GetDeploymentResponse {
    DeploymentInfo item = 1;
}

message ListDeploymentsRequest {
    string namespace = 1;
    map<string,string> labels =3;
}

message ListDeploymentsResponse {
    repeated DeploymentInfo items = 1;
}

/////////////////////////////// Services

message GetServiceRequest {
    string namespace = 1;
    string name      = 2;
    map<string,string> labels =3;
}

message GetServiceResponse {
    ServiceInfo item = 1;
}

message ListServicesRequest {
    string namespace = 1;
    map<string,string> labels =3;
}

message ListServicesResponse {
    repeated ServiceInfo items = 1;
}


/////////////////////////////// Pods

message GetPodRequest {
    string namespace = 1;
    string name      = 2;
    map<string,string> labels =3;
}

message GetPodResponse {
    PodInfo item = 1;
}

message ListPodsRequest {
    string namespace = 1;
    map<string,string> labels =3;
}

message ListPodsResponse {
    repeated PodInfo items = 1;
}

/////////////////////////////// Jobs

message GetJobRequest {
    string namespace = 1;
    string name      = 2;
    map<string,string> labels =3;
}

message GetJobResponse {
    JobInfo item = 1;
}

message ListJobsRequest {
    string namespace = 1;
    map<string,string> labels =3;
}

message ListJobsResponse {
    repeated JobInfo items = 1;
}

//////////////////////////////////// Events

message ListEventsRequest {
    string namespace = 1;
    string name      = 2;
    map<string,string> labels =3;
}

message ListEventsResponse {
    k8s.io.api.core.v1.EventList items = 1;
}


//////////////////////////////////// Info

message SecretInfo {
    string name      = 1;
    string namespace = 2;
}

message ServiceInfo {
    string name      = 1;
    string namespace = 2;
}

message DeploymentInfo {
    string name      = 1;
    string namespace = 2;
}

message PodInfo {
    string name      = 1;
    string namespace = 2;
}

message JobInfo {
    string name      = 1;
    string namespace = 2;
}


/////////////////////////////// Jobs


// The Core K8s service is used to list and get a kubernetes object
service CoreK8sService {

    ////////////////// secret
    rpc ListK8sSecrets(ListSecretsRequest) returns (ListSecretResponse) {
        option (google.api.http).get = "/v1/secrets/{namespace}";
    }
    rpc GetK8sSecret(GetSecretRequest) returns (GetSecretResponse) {
        option (google.api.http).get = "/v1/secrets/{namespace}/{name}";
    }

    ////////////////// service
    rpc ListK8sServices(ListServicesRequest) returns (ListServicesResponse) {
        option (google.api.http).get = "/v1/services/{namespace}";
    }
    rpc GetK8sService(GetServiceRequest) returns (GetServiceResponse) {
        option (google.api.http).get = "/v1/services/{namespace}/{name}";
    }

    ////////////////// deployment
    rpc ListK8sDeployments(ListDeploymentsRequest) returns (ListDeploymentsResponse) {
        option (google.api.http).get = "/v1/deployments/{namespace}";
    }

    rpc GetK8sDeployment(GetDeploymentRequest) returns (GetDeploymentResponse) {
        option (google.api.http).get = "/v1/deployments/{namespace}/{name}";
    }

    ////////////////// pod
    rpc ListK8sPods(ListPodsRequest) returns (ListPodsResponse) {
        option (google.api.http).get = "/v1/pods/{namespace}";
    }

    rpc GetK8sPod(GetPodRequest) returns (GetPodResponse) {
        option (google.api.http).get = "/v1/pods/{namespace}/{name}";
    }

     
    //////////////// jobs
    rpc ListK8sJobs(ListJobsRequest) returns (ListJobsResponse) {
        option (google.api.http).get = "/v1/jobs/{namespace}";
    }

    rpc GetK8sJob(GetJobRequest) returns (GetJobResponse) {
        option (google.api.http).get = "/v1/jobs/{namespace}/{name}";
    }

    // Events

    rpc ListEvents(ListEventsRequest) returns (ListEventsResponse) {
        option (google.api.http).get = "/v1/events/{namespace}";
    }


}