syntax = "proto3";

option go_package = "github.com/metaprov/modelaapi/services/dataproductversion/v1";
package github.com.metaprov.modelaapi.services.dataproductversion.v1;

import "google/api/annotations.proto";
import "github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/services/common/v1/common.proto";

message ListDataProductVersionsRequest {
    string namespace = 1;
    map<string,string> labels =3;
}

message ListDataProductVersionsResponse {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProductVersionList items = 1;
}

message CreateDataProductVersionRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProductVersion item = 1;
}

message CreateDataProductVersionResponse {

}

message UpdateDataProductVersionRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProductVersion item = 1;
}

message UpdateDataProductVersionResponse {

}

message GetDataProductVersionRequest {
    string namespace = 1;
    string name      = 2;
}

message GetDataProductVersionResponse {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProductVersion item = 1;
    string yaml = 2;
}

message DeleteDataProductVersionRequest {
    string namespace = 1;
    string name      = 2;
}

message DeleteDataProductVersionResponse {

}


service DataProductVersionService {
    rpc ListDataProductVersions(ListDataProductVersionsRequest) returns (ListDataProductVersionsResponse) {
        option (google.api.http).get = "/v1/dataproductversions/{namespace}";
    }

    rpc CreateDataProductVersion(CreateDataProductVersionRequest) returns (CreateDataProductVersionResponse) {
        option (google.api.http) = {
			post: "/v1/dataproductversions"
			body: "*"
		};
    }

    rpc GetDataProductVersion(GetDataProductVersionRequest) returns (GetDataProductVersionResponse) {
        option (google.api.http).get = "/v1/dataproductversions/{namespace}/{name}";
    }

    rpc UpdateDataProductVersion(UpdateDataProductVersionRequest) returns (UpdateDataProductVersionResponse) {
        option (google.api.http) = {
			put: "/v1/dataproductversions/{item.metadata.namespace}/{item.metadata.name}"
			body: "*"
		};
    }

    rpc DeleteDataProductVersion(DeleteDataProductVersionRequest) returns (DeleteDataProductVersionResponse) {
        option (google.api.http).delete = "/v1/dataproductversions/{namespace}/{name}";
    }
}