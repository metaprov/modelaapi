syntax = "proto3";
option go_package = "github.com/metaprov/modelaapi/services/data/v1";

package github.com.metaprov.modelaapi.services.data.v1;

import "github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/pkg/apis/training/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/pkg/apis/inference/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/pkg/apis/infra/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/pkg/apis/catalog/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/services/common/v1/common.proto";
import "k8s.io/api/core/v1/generated.proto";


message DsReadFileRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct product = 1;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection connection = 4;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket bucket = 5;
    map<string, bytes> secret = 6;
}

message DsReadFeatureRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct product = 1;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket bucket = 4;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection connection = 5;
    map<string, bytes>  secret = 6;
}

message DsWriteFileRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct product = 1;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset content = 3;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket bucket = 5;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection connection = 6;
    map<string, bytes>  secret = 7;
}

message DsReadAudioRequest {
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket bucket = 1;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection connection = 2;
    map<string, bytes>  secret = 3;
}


message DsReadTextCorpusRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct product = 1;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket bucket = 3;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection connection = 4;
    map<string, bytes>  secret = 5;

}

message DsReadFromStoreResponse {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct product = 1;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset result = 3;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket bucket = 4;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection connection = 5;
    map<string, bytes>  secret = 6;
}

message DsRunDataPipelineRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataPipeline pipeline = 1;
}

message DsRunDataPipelineResponse {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset result = 1;
}

message DsRunRecipeRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct product = 1;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataSource datasource = 2;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset dataset = 3;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket bucket = 4;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection storageConnection = 5;
    map<string, bytes> storageSecret = 6;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection dbConnection = 7;
    map<string, bytes> dbSecret = 8;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Recipe recipe = 9;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.RecipeRun reciperun = 10;
}

message DsRunRecipeResponse {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Recipe                 result = 1;
}

message DataSourceResponse {}
message DatasetResponse {}

//////// Dataset Profile ////////

message DsCreateDatasetProfileRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct product = 1;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataSource datasource = 3;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset dataset = 4;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DatasetSnapshot snapshot = 5;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket bucket = 6;
}

message DsCreateDatasetProfileResponse {
    github.com.metaprov.modelaapi.services.common.v1.DatasetProfile profile = 1;
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.FileLocation profileLocation = 2;
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.FileLocation anomalyLocation = 3;
}


//////// Model Profile ////////

message DsCreateModelProfileRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct product = 1;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataSource datasource = 2;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset dataset = 3;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DatasetSnapshot snapshot = 4;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study study = 5;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Model model = 6;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket bucket = 7;
}

message DsCreateModelProfileResponse {
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.FileLocation profileLocation = 1;
}

//////// Merge Profile ////////

message DsMergeForecastFileRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct product = 1;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataSource datasource = 3;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset dataset = 4;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study study = 5;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Model model = 6;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection connection = 8;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket bucket = 9;
    map<string, bytes> secret = 10;
    repeated string forecasts = 11;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection dbConnection = 12;
    map<string, bytes> dbSecret = 13;

}

message DsMergeForecastFileResponse {
    string uri = 1; // the uri of the merge file
}

//////// Study Profile ////////

message DsCreateStudyProfileRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct product = 1;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataSource datasource = 2;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset dataset = 3;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DatasetSnapshot snapshot = 4;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study study = 5;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket bucket = 6;
    repeated github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Model models = 7;
}

message DsCreateStudyProfileResponse {
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.FileLocation profileLocation = 2;
}

message RunTestSuiteRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct product = 1;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataSource datasource = 2;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset dataset = 3;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study study = 4;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Model model = 5;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket bucket = 6;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.FeatureHistogram histogram = 7;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.FeatureHistogram refHistogram = 8;
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.TestSuite suite = 9;
}

message RunTestSuiteResponse {
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.TestSuiteResult result = 1;
}

message DsGenerateDatasetRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct product = 1;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataSource datasource = 2;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset dataset = 3;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DatasetSnapshot snapshot = 4;
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.DataLocation target = 5;
    int32 rows = 6;
}

message DsGenerateDatasetResponse {
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.DataLocation target = 1;
}

message DsSplitDatasetRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct product = 1;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataSource datasource = 2;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset dataset = 3;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DatasetSnapshot snapshot = 4;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study study = 5;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket bucket = 6;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DatasetSnapshot trainingDataset = 7;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DatasetSnapshot testingDataset = 8;
}

message DsSplitDatasetResponse {
    int32 training = 1;
    int32 testing = 2;
    int32 validation = 3;
    string trainingHash = 4;
    string testingHash = 5;
    string validationHash = 6;
    string indexFile = 7;
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.FileLocation trainLocation = 8;
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.FileLocation testLocation = 9;
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.FileLocation validationLocation = 10;
}


message DsSplitDatasetToRungsRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct product = 1;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataSource datasource = 2;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset dataset = 3;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DatasetSnapshot snapshot = 4;
    int32 rungs = 5;
}

message DsSplitDatasetToRungsResponse {}

message GroupByDatasetRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct product = 1;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataSource datasource = 2;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset dataset = 3;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DatasetSnapshot snapshot = 4;
}

message GroupByDatasetResponse {
    string uri = 1;
}

message DsInferSchemaRequest {
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.DataLocation location = 1;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataSource datasource = 2;
    string tenant = 3;
}

message DsInferSchemaResponse {
    github.com.metaprov.modelaapi.services.common.v1.DatasetProfile profile = 1;
}

message DsGetTableViewRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.FlatFileFormatSpec       flatfile = 1;
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.DataLocation             location = 2;
    string tenant = 3;
}


message DsGetTableViewResponse {
    github.com.metaprov.modelaapi.services.common.v1.TableView tableview = 1;
}


message CreateModelReportRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct        product = 1;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study          study = 3;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset            dataset = 4;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataSource         datasource = 5;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Model          model = 6;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Report         report = 7;
}


message CreateForecastReportRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct            product = 1;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study              study = 3;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset                dataset = 4;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataSource             datasource = 5;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Model           forecast = 6;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection connection = 7;
    map<string, bytes> secret = 8;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket bucket = 9;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Report report = 10;
    bool group = 11;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection dbConnection = 12;
    map<string, bytes> dbSecret = 13;
}


message CreateSummaryReportRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct product = 1;
    repeated github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Report reports = 2;
}

message CreateReportResponse {
    bytes pdf = 1;
}

message CreateDatasetReportRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct product = 1;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataSource datasource = 3;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset dataset = 4;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DatasetSnapshot snapshot = 5;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Report report = 6;
}


message CreateStudyReportRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct product = 1;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataSource datasource = 2;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset dataset = 3;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DatasetSnapshot snapshot = 4;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study study = 5;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelList models = 6;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Report report = 7;
}


message AskModelRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct product = 1;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study study = 3;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataSource datasource = 4;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset dataset = 5;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DatasetSnapshot snapshot = 6;
    int32 budget = 7;
    bool defaultHP = 8;
    string algorithm = 9;
    repeated github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.Algorithm algorithms = 10;

}



message GetTimeSeriesDatasetKeysRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct product = 1;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study study = 2;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataSource datasource = 3;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset dataset = 4;
}

message GetTimeSeriesDatasetKeysResponse {
    repeated string keys = 1; // list of keys to train from a dataset
}


message AskForecastModelRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct  product = 1;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study    study = 3;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataSource   datasource = 4;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset      dataset = 5;
    repeated string keys = 6; // list of keys to train from a dataset
    repeated github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.Algorithm algorithms = 7;
}


message AskForecastModelResponse {
    repeated github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Model model = 1;
}



// Ensemble

message AskEnsembleRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct product = 1;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study study = 3;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataSource datasource = 4;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset dataset = 5;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DatasetSnapshot snapshot = 6;
    repeated github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Model models = 7;
    repeated github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.Algorithm algorithms = 8;
}

message AskEnsembleResponse {
    repeated github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Model model = 1;
}

message AskBaselineRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct product = 1;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study study = 3;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataSource datasource = 4;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset dataset = 5;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DatasetSnapshot snapshot = 6;
    repeated string algnames = 7;
    bool all = 8;
    repeated github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.Algorithm algorithms = 9;
}

message AskBaselineResponse {
    repeated github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Model model = 1;
}

// ask all models for task

message AskAllModelsForTaskRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct product = 1;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study study = 2;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataSource datasource = 3;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset dataset = 4;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DatasetSnapshot snapshot = 5;
    int32 budget = 6;
    string task = 7;
    repeated github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.Algorithm     algorithms = 8;
}

message AskAllModelsForTaskResponse {
    repeated github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Model model = 1;
}

message TellModelRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct product = 1;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study study = 2;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataSource datasource = 3;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset dataset = 4;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DatasetSnapshot snapshot = 5;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Model model = 6;
    bool failed = 7;
}
message TellModelResponse {
    bool pruned = 1;
}

message DsShutdownRequest {}
message DsShutdownResponse {}

message DsTestConnectionRequest {
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection connection = 1;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket bucket = 2;
    map<string, bytes>     secret = 3;
}

message DsTestConnectionResponse {
    bool status = 1;
    string msg = 2;
}

message DsStudyEndedRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct product = 1;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study study = 2;

}

message DsStudyEndedResponse {}

message SaveOptimizerDBRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct product = 1;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study study = 5;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket bucket = 6;
}

message SaveOptimizerDBResponse {
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.FileLocation location = 1;
}

message DsGetDatabasesRequest {
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection connection = 1;
}

message DsGetDatabasesResponse {
    repeated string databases = 1;
}

message DsGetTablesRequest {
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection connection = 1;
}

message DsGetTablesResponse {
    repeated string tables = 1;
}

message DsExecuteSqlRequest {
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection            connection = 1;
    string                                                                      sql = 4;
}
message DsExecuteSqlResponse {
    github.com.metaprov.modelaapi.services.common.v1.TableView tableview = 1;
}

message DsSnapshotRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct product = 1;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket bucket = 2;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataSource datasource = 3;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset dataset = 4;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DatasetSnapshot snapshot = 5;
}

message DsSnapshotResponse {
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.FileLocation location = 1;
}

message AskModelResponse {
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Model model = 1;
}


message GenTrainingDataRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct product = 1;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClass modelClass = 2;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassRun modelClassRun = 3;
    repeated github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Entity entities = 4;
    repeated github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.FeatureGroup groups = 5;
}

message GenTrainingDataResponse {
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.FileLocation location = 1;
}

// copy from the online store database into the online system
message SyncOnlineStoreRequest {
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection            storageConnection = 1;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket         storageBucket = 2;
    map<string, bytes>                                                           storageSecret = 3;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection            dbConnection = 4;
    map<string, bytes>                                                           dbSecret = 5;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClass         model = 6;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.FeatureGroup           fg = 7;
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.DataLocation           location = 8;
}

message SyncOnlineStoreResponse {

}

message GenOnlineStoreDatasetRequest {
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection            storageConnection = 1;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket         storageBucket = 2;
    map<string, bytes>                                                           storageSecret = 3;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection            dbConnection = 4;
    map<string, bytes>                                                           dbSecret = 5;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClass         model = 6;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.FeatureGroup           fg = 7;
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.DataLocation           location = 8;
}

message GenOnlineStoreDatasetResponse {
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.DataLocation   location = 1;
}


message BatchPredictRequest {
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection            storageConnection = 1;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket         storageBucket = 2;
    map<string, bytes>                                                           storageSecret = 3;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection            dbConnection = 4;
    map<string, bytes>                                                           dbSecret = 5;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClass         modelclass = 6;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Model              model = 7;
    repeated github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Entity        entities = 8;
    repeated github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.FeatureGroup  groups = 9;
    github.com.metaprov.modelaapi.pkg.apis.inference.v1alpha1.Prediction        prediction = 10;
}



message BatchPredictResponse {
    int32 rows = 1; // number of predicted rows
}

/////////// Metric store


message SaveDatasetRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct            dataproduct = 1;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataSource             datasource = 2;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset                dataset = 3;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClass         modelclass = 4;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassRun      modelclassrun = 5;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection            dbConnection = 6;
}

message SaveModelRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct            dataproduct = 1;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study              study = 2;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClass         modelclass = 3;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassRun      modelclassrun = 4;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Model              model = 5;
    repeated github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.FeatureGroup  groups = 6;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection            dbConnection = 7;
}


message SavePredictionRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct            dataproduct = 1;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClass         modelclass = 2;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassRun      modelclassrun = 3;
    github.com.metaprov.modelaapi.pkg.apis.inference.v1alpha1.Predictor         predictor = 4;
    github.com.metaprov.modelaapi.pkg.apis.inference.v1alpha1.Prediction        prediction = 5;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection            dbConnection = 6;
}

message SavePredictorRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct            dataproduct = 1;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClass         modelclass = 2;
    github.com.metaprov.modelaapi.pkg.apis.inference.v1alpha1.Prediction        predictor = 3;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection            dbConnection = 4;
}

message CreateMetricsStoreRequest {
    string tenant = 1;
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection            dbConnection = 2;
}
message CreateMetricsStoreResponse {}

message SaveResponse {
    int32 dbid = 1;
}


service DataService {
    // Read from a flat file and create a dataset
    rpc ReadFile(DsReadFileRequest) returns (DsReadFromStoreResponse) {}
    // Read from a feature and create a dataset
    rpc ReadFeature(DsReadFeatureRequest) returns (DsReadFromStoreResponse) {}
    // Read from audio and create an audio dataset
    rpc ReadAudio(DsReadAudioRequest) returns (DsReadFromStoreResponse) {}
    // Run the data flow
    rpc RunDataPipeline(DsRunDataPipelineRequest) returns (DsRunDataPipelineResponse) {}
    // Run recipe
    rpc RunRecipe(DsRunRecipeRequest) returns (DsRunRecipeResponse) {}
    // Read from a flat file and create a dataset
    rpc WriteFile(DsWriteFileRequest) returns (DsReadFromStoreResponse) {}
    // Based on the datasource, generate test dataset
    rpc GenerateDataset(DsGenerateDatasetRequest) returns (DsGenerateDatasetResponse) {}
    // Preform the split. The dataset is assumed to be in the live area after validation
    rpc SplitDataset(DsSplitDatasetRequest) returns (DsSplitDatasetResponse) {}
    // Just infer the datasource, do no plots
    rpc InferSchema(DsInferSchemaRequest) returns (DsInferSchemaResponse) {}
    // Just infer the datasource, do no plots
    rpc GetTableView(DsGetTableViewRequest) returns (DsGetTableViewResponse) {}
    // split the dataset to rungs
    rpc SplitDatasetToRungs(DsSplitDatasetToRungsRequest) returns (DsSplitDatasetToRungsResponse) {}
    // create dataset profile
    rpc CreateDatasetProfile(DsCreateDatasetProfileRequest) returns (DsCreateDatasetProfileResponse) {}
    // create model profile
    rpc CreateModelProfile(DsCreateModelProfileRequest) returns (DsCreateModelProfileResponse) {}
    // create study profile
    rpc CreateStudyProfile(DsCreateStudyProfileRequest) returns (DsCreateStudyProfileResponse) {}
    // report services
    rpc CreateModelReport(CreateModelReportRequest) returns (CreateReportResponse) {}
    rpc CreateStudyReport(CreateStudyReportRequest) returns (CreateReportResponse) {}
    rpc CreateDatasetReport(CreateDatasetReportRequest) returns (CreateReportResponse) {}
    rpc CreateForecastReport(CreateForecastReportRequest) returns (CreateReportResponse) {}
    rpc CreateSummaryReport(CreateSummaryReportRequest) returns (CreateReportResponse) {}

    // sample feature engineering pipeline
    rpc AskFE (AskModelRequest) returns (AskModelResponse) {}
    rpc AskBaseline (AskBaselineRequest) returns (AskBaselineResponse) {}
    rpc AskEnsemble (AskEnsembleRequest) returns (AskEnsembleResponse) {}
    rpc AskForecastModel (AskForecastModelRequest) returns (AskForecastModelResponse) {}

    // sample model randomly for a given budget
    rpc AskModel (AskModelRequest) returns (AskModelResponse) {}
    // sample model randomly for a given budget
    rpc AskAllModelsForTask(AskAllModelsForTaskRequest) returns (AskAllModelsForTaskResponse) {}

    // If a model is a partial model (sample < 100%)
    rpc TellPartialModel (TellModelRequest) returns (TellModelResponse) {}
    rpc TellModel (TellModelRequest) returns (TellModelResponse) {}
    // Merge the forecast back to one file.
    rpc MergeForecastFile(DsMergeForecastFileRequest) returns (DsMergeForecastFileResponse) {}
    rpc DsTestConnection(DsTestConnectionRequest) returns (DsTestConnectionResponse) {}
    rpc ShutDown(DsShutdownRequest) returns (DsShutdownResponse) {}
    rpc StudyEnded(DsStudyEndedRequest) returns (DsStudyEndedResponse) {}
    rpc SaveOptimizerDB(SaveOptimizerDBRequest) returns (SaveOptimizerDBResponse) {} // save the optimizer database in the cloud
    rpc GetDatabases(DsGetDatabasesRequest) returns (DsGetDatabasesResponse) {}
    rpc GetTables(DsGetTablesRequest)   returns (DsGetTablesResponse) {}
    rpc ExecuteSql(DsExecuteSqlRequest) returns (DsExecuteSqlResponse) {}
    rpc Snapshot(DsSnapshotRequest) returns (DsSnapshotResponse) {}
    // Tests
    rpc UnitTestDataset(RunTestSuiteRequest) returns (RunTestSuiteResponse) {}
    rpc UnitTestModel(RunTestSuiteRequest) returns (RunTestSuiteResponse) {}
    rpc UnitTestFeedback(RunTestSuiteRequest) returns (RunTestSuiteResponse) {}
    rpc UnitTestFeatureHistogram(RunTestSuiteRequest) returns (RunTestSuiteResponse) {}
    rpc UnitTestPredictor(RunTestSuiteRequest) returns (RunTestSuiteResponse) {}
    rpc GroupByDataset(GroupByDatasetRequest) returns (GroupByDatasetResponse) {}
    // Sync from the online store to the offline store
    rpc SyncOnlineStore(SyncOnlineStoreRequest) returns (SyncOnlineStoreResponse)     {}
    // Generate training dataset.
    rpc GenTrainingData(GenTrainingDataRequest) returns (GenTrainingDataResponse)     {}
    // Generate training dataset.
    rpc GenOnlineStoreDataset(GenOnlineStoreDatasetRequest) returns (GenOnlineStoreDatasetResponse)     {}

    rpc BatchPredict(BatchPredictRequest) returns (BatchPredictResponse) {}

    // metric store methods, used to save the

    rpc SaveDataSet(SaveDatasetRequest) returns (SaveResponse) {}
    rpc SaveModel(SaveModelRequest) returns (SaveResponse) {}
    rpc SavePrediction(SavePredictionRequest) returns (SaveResponse) {}
    rpc CreateMetricsStore(CreateMetricsStoreRequest) returns (CreateMetricsStoreResponse) {}

}
