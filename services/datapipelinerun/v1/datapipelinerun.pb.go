// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.8
// source: github.com/metaprov/modelaapi/services/datapipelinerun/v1/datapipelinerun.proto

package v1

import (
	context "context"
	v1alpha1 "github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListDataPipelineRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Labels    map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListDataPipelineRunRequest) Reset() {
	*x = ListDataPipelineRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataPipelineRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataPipelineRunRequest) ProtoMessage() {}

func (x *ListDataPipelineRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataPipelineRunRequest.ProtoReflect.Descriptor instead.
func (*ListDataPipelineRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_rawDescGZIP(), []int{0}
}

func (x *ListDataPipelineRunRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListDataPipelineRunRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ListDataPipelineRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items *v1alpha1.DataPipelineRunList `protobuf:"bytes,1,opt,name=items,proto3" json:"items,omitempty"`
}

func (x *ListDataPipelineRunResponse) Reset() {
	*x = ListDataPipelineRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataPipelineRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataPipelineRunResponse) ProtoMessage() {}

func (x *ListDataPipelineRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataPipelineRunResponse.ProtoReflect.Descriptor instead.
func (*ListDataPipelineRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_rawDescGZIP(), []int{1}
}

func (x *ListDataPipelineRunResponse) GetItems() *v1alpha1.DataPipelineRunList {
	if x != nil {
		return x.Items
	}
	return nil
}

type CreateDataPipelineRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.DataPipelineRun `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *CreateDataPipelineRunRequest) Reset() {
	*x = CreateDataPipelineRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDataPipelineRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDataPipelineRunRequest) ProtoMessage() {}

func (x *CreateDataPipelineRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDataPipelineRunRequest.ProtoReflect.Descriptor instead.
func (*CreateDataPipelineRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_rawDescGZIP(), []int{2}
}

func (x *CreateDataPipelineRunRequest) GetItem() *v1alpha1.DataPipelineRun {
	if x != nil {
		return x.Item
	}
	return nil
}

type CreateDataPipelineRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateDataPipelineRunResponse) Reset() {
	*x = CreateDataPipelineRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDataPipelineRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDataPipelineRunResponse) ProtoMessage() {}

func (x *CreateDataPipelineRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDataPipelineRunResponse.ProtoReflect.Descriptor instead.
func (*CreateDataPipelineRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_rawDescGZIP(), []int{3}
}

type UpdateDataPipelineRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.DataPipelineRun `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *UpdateDataPipelineRunRequest) Reset() {
	*x = UpdateDataPipelineRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDataPipelineRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDataPipelineRunRequest) ProtoMessage() {}

func (x *UpdateDataPipelineRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDataPipelineRunRequest.ProtoReflect.Descriptor instead.
func (*UpdateDataPipelineRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateDataPipelineRunRequest) GetItem() *v1alpha1.DataPipelineRun {
	if x != nil {
		return x.Item
	}
	return nil
}

type UpdateDataPipelineRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateDataPipelineRunResponse) Reset() {
	*x = UpdateDataPipelineRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDataPipelineRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDataPipelineRunResponse) ProtoMessage() {}

func (x *UpdateDataPipelineRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDataPipelineRunResponse.ProtoReflect.Descriptor instead.
func (*UpdateDataPipelineRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_rawDescGZIP(), []int{5}
}

type GetDataPipelineRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetDataPipelineRunRequest) Reset() {
	*x = GetDataPipelineRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataPipelineRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataPipelineRunRequest) ProtoMessage() {}

func (x *GetDataPipelineRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataPipelineRunRequest.ProtoReflect.Descriptor instead.
func (*GetDataPipelineRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_rawDescGZIP(), []int{6}
}

func (x *GetDataPipelineRunRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetDataPipelineRunRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetDataPipelineRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.DataPipelineRun `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Yaml string                    `protobuf:"bytes,2,opt,name=yaml,proto3" json:"yaml,omitempty"`
}

func (x *GetDataPipelineRunResponse) Reset() {
	*x = GetDataPipelineRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataPipelineRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataPipelineRunResponse) ProtoMessage() {}

func (x *GetDataPipelineRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataPipelineRunResponse.ProtoReflect.Descriptor instead.
func (*GetDataPipelineRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_rawDescGZIP(), []int{7}
}

func (x *GetDataPipelineRunResponse) GetItem() *v1alpha1.DataPipelineRun {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *GetDataPipelineRunResponse) GetYaml() string {
	if x != nil {
		return x.Yaml
	}
	return ""
}

type DeleteDataPipelineRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteDataPipelineRunRequest) Reset() {
	*x = DeleteDataPipelineRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDataPipelineRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDataPipelineRunRequest) ProtoMessage() {}

func (x *DeleteDataPipelineRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDataPipelineRunRequest.ProtoReflect.Descriptor instead.
func (*DeleteDataPipelineRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteDataPipelineRunRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeleteDataPipelineRunRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteDataPipelineRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteDataPipelineRunResponse) Reset() {
	*x = DeleteDataPipelineRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDataPipelineRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDataPipelineRunResponse) ProtoMessage() {}

func (x *DeleteDataPipelineRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDataPipelineRunResponse.ProtoReflect.Descriptor instead.
func (*DeleteDataPipelineRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_rawDescGZIP(), []int{9}
}

type AbortDataPipelineRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AbortDataPipelineRunResponse) Reset() {
	*x = AbortDataPipelineRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbortDataPipelineRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbortDataPipelineRunResponse) ProtoMessage() {}

func (x *AbortDataPipelineRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbortDataPipelineRunResponse.ProtoReflect.Descriptor instead.
func (*AbortDataPipelineRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_rawDescGZIP(), []int{10}
}

type AbortDataPipelineRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AbortDataPipelineRunRequest) Reset() {
	*x = AbortDataPipelineRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbortDataPipelineRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbortDataPipelineRunRequest) ProtoMessage() {}

func (x *AbortDataPipelineRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbortDataPipelineRunRequest.ProtoReflect.Descriptor instead.
func (*AbortDataPipelineRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_rawDescGZIP(), []int{11}
}

func (x *AbortDataPipelineRunRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AbortDataPipelineRunRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PauseDataPipelineRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PauseDataPipelineRunResponse) Reset() {
	*x = PauseDataPipelineRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseDataPipelineRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseDataPipelineRunResponse) ProtoMessage() {}

func (x *PauseDataPipelineRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseDataPipelineRunResponse.ProtoReflect.Descriptor instead.
func (*PauseDataPipelineRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_rawDescGZIP(), []int{12}
}

type PauseDataPipelineRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PauseDataPipelineRunRequest) Reset() {
	*x = PauseDataPipelineRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseDataPipelineRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseDataPipelineRunRequest) ProtoMessage() {}

func (x *PauseDataPipelineRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseDataPipelineRunRequest.ProtoReflect.Descriptor instead.
func (*PauseDataPipelineRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_rawDescGZIP(), []int{13}
}

func (x *PauseDataPipelineRunRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PauseDataPipelineRunRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ResumeDataPipelineRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResumeDataPipelineRunResponse) Reset() {
	*x = ResumeDataPipelineRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeDataPipelineRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeDataPipelineRunResponse) ProtoMessage() {}

func (x *ResumeDataPipelineRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeDataPipelineRunResponse.ProtoReflect.Descriptor instead.
func (*ResumeDataPipelineRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_rawDescGZIP(), []int{14}
}

type ResumeDataPipelineRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ResumeDataPipelineRunRequest) Reset() {
	*x = ResumeDataPipelineRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeDataPipelineRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeDataPipelineRunRequest) ProtoMessage() {}

func (x *ResumeDataPipelineRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeDataPipelineRunRequest.ProtoReflect.Descriptor instead.
func (*ResumeDataPipelineRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_rawDescGZIP(), []int{15}
}

func (x *ResumeDataPipelineRunRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ResumeDataPipelineRunRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto protoreflect.FileDescriptor

var file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_rawDesc = []byte{
	0x0a, 0x4f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x44, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70,
	0x69, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xf0, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x79, 0x0a,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x61, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70,
	0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x7e, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x49, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x79, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x1f,
	0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x79, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x59, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70,
	0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x75, 0x6e, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x1f, 0x0a, 0x1d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4d, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x04,
	0x69, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x22, 0x50, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1f, 0x0a, 0x1d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x41,
	0x62, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4f, 0x0a, 0x1b, 0x41,
	0x62, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1e, 0x0a, 0x1c,
	0x50, 0x61, 0x75, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4f, 0x0a, 0x1b,
	0x50, 0x61, 0x75, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1f, 0x0a,
	0x1d, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50,
	0x0a, 0x1c, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x32, 0x8d, 0x10, 0x0a, 0x16, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x75, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xef, 0x01, 0x0a, 0x14,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x75, 0x6e, 0x73, 0x12, 0x55, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x56, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x76, 0x31,
	0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e,
	0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x7d, 0x12, 0xeb, 0x01,
	0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x12, 0x57, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x58, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0xf2, 0x01, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x75, 0x6e, 0x12, 0x54, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x55, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74,
	0x61, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x73, 0x2f, 0x7b, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x7d, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d,
	0x12, 0x9a, 0x02, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x12, 0x57, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x58, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x48, 0x1a, 0x43, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x74, 0x65,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x7d, 0x2f, 0x7b, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0xff, 0x01,
	0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x12, 0x57, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x58, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2d, 0x2a, 0x2b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x73, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x7d, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12,
	0xfe, 0x01, 0x0a, 0x14, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x12, 0x56, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x57, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x62, 0x6f,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2f, 0x22, 0x2d, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x7d, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x61, 0x62, 0x6f, 0x72, 0x74,
	0x12, 0xfb, 0x01, 0x0a, 0x14, 0x50, 0x61, 0x75, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x12, 0x56, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72,
	0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x57, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x75, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2c, 0x22, 0x2a, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x7d, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x70, 0x61, 0x75, 0x73, 0x65, 0x12, 0xff,
	0x01, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x12, 0x57, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x58, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2d, 0x22, 0x2b, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x7d, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65,
	0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70,
	0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_rawDescOnce sync.Once
	file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_rawDescData = file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_rawDesc
)

func file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_rawDescGZIP() []byte {
	file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_rawDescOnce.Do(func() {
		file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_rawDescData)
	})
	return file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_rawDescData
}

var file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_goTypes = []interface{}{
	(*ListDataPipelineRunRequest)(nil),    // 0: github.com.metaprov.modelaapi.services.datapipelinerun.v1.ListDataPipelineRunRequest
	(*ListDataPipelineRunResponse)(nil),   // 1: github.com.metaprov.modelaapi.services.datapipelinerun.v1.ListDataPipelineRunResponse
	(*CreateDataPipelineRunRequest)(nil),  // 2: github.com.metaprov.modelaapi.services.datapipelinerun.v1.CreateDataPipelineRunRequest
	(*CreateDataPipelineRunResponse)(nil), // 3: github.com.metaprov.modelaapi.services.datapipelinerun.v1.CreateDataPipelineRunResponse
	(*UpdateDataPipelineRunRequest)(nil),  // 4: github.com.metaprov.modelaapi.services.datapipelinerun.v1.UpdateDataPipelineRunRequest
	(*UpdateDataPipelineRunResponse)(nil), // 5: github.com.metaprov.modelaapi.services.datapipelinerun.v1.UpdateDataPipelineRunResponse
	(*GetDataPipelineRunRequest)(nil),     // 6: github.com.metaprov.modelaapi.services.datapipelinerun.v1.GetDataPipelineRunRequest
	(*GetDataPipelineRunResponse)(nil),    // 7: github.com.metaprov.modelaapi.services.datapipelinerun.v1.GetDataPipelineRunResponse
	(*DeleteDataPipelineRunRequest)(nil),  // 8: github.com.metaprov.modelaapi.services.datapipelinerun.v1.DeleteDataPipelineRunRequest
	(*DeleteDataPipelineRunResponse)(nil), // 9: github.com.metaprov.modelaapi.services.datapipelinerun.v1.DeleteDataPipelineRunResponse
	(*AbortDataPipelineRunResponse)(nil),  // 10: github.com.metaprov.modelaapi.services.datapipelinerun.v1.AbortDataPipelineRunResponse
	(*AbortDataPipelineRunRequest)(nil),   // 11: github.com.metaprov.modelaapi.services.datapipelinerun.v1.AbortDataPipelineRunRequest
	(*PauseDataPipelineRunResponse)(nil),  // 12: github.com.metaprov.modelaapi.services.datapipelinerun.v1.PauseDataPipelineRunResponse
	(*PauseDataPipelineRunRequest)(nil),   // 13: github.com.metaprov.modelaapi.services.datapipelinerun.v1.PauseDataPipelineRunRequest
	(*ResumeDataPipelineRunResponse)(nil), // 14: github.com.metaprov.modelaapi.services.datapipelinerun.v1.ResumeDataPipelineRunResponse
	(*ResumeDataPipelineRunRequest)(nil),  // 15: github.com.metaprov.modelaapi.services.datapipelinerun.v1.ResumeDataPipelineRunRequest
	nil,                                   // 16: github.com.metaprov.modelaapi.services.datapipelinerun.v1.ListDataPipelineRunRequest.LabelsEntry
	(*v1alpha1.DataPipelineRunList)(nil),  // 17: github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataPipelineRunList
	(*v1alpha1.DataPipelineRun)(nil),      // 18: github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataPipelineRun
}
var file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_depIdxs = []int32{
	16, // 0: github.com.metaprov.modelaapi.services.datapipelinerun.v1.ListDataPipelineRunRequest.labels:type_name -> github.com.metaprov.modelaapi.services.datapipelinerun.v1.ListDataPipelineRunRequest.LabelsEntry
	17, // 1: github.com.metaprov.modelaapi.services.datapipelinerun.v1.ListDataPipelineRunResponse.items:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataPipelineRunList
	18, // 2: github.com.metaprov.modelaapi.services.datapipelinerun.v1.CreateDataPipelineRunRequest.item:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataPipelineRun
	18, // 3: github.com.metaprov.modelaapi.services.datapipelinerun.v1.UpdateDataPipelineRunRequest.item:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataPipelineRun
	18, // 4: github.com.metaprov.modelaapi.services.datapipelinerun.v1.GetDataPipelineRunResponse.item:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataPipelineRun
	0,  // 5: github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService.ListDataPipelineRuns:input_type -> github.com.metaprov.modelaapi.services.datapipelinerun.v1.ListDataPipelineRunRequest
	2,  // 6: github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService.CreateDataPipelineRun:input_type -> github.com.metaprov.modelaapi.services.datapipelinerun.v1.CreateDataPipelineRunRequest
	6,  // 7: github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService.GetDataPipelineRun:input_type -> github.com.metaprov.modelaapi.services.datapipelinerun.v1.GetDataPipelineRunRequest
	4,  // 8: github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService.UpdateDataPipelineRun:input_type -> github.com.metaprov.modelaapi.services.datapipelinerun.v1.UpdateDataPipelineRunRequest
	8,  // 9: github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService.DeleteDataPipelineRun:input_type -> github.com.metaprov.modelaapi.services.datapipelinerun.v1.DeleteDataPipelineRunRequest
	11, // 10: github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService.AbortDataPipelineRun:input_type -> github.com.metaprov.modelaapi.services.datapipelinerun.v1.AbortDataPipelineRunRequest
	13, // 11: github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService.PauseDataPipelineRun:input_type -> github.com.metaprov.modelaapi.services.datapipelinerun.v1.PauseDataPipelineRunRequest
	15, // 12: github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService.ResumeDataPipelineRun:input_type -> github.com.metaprov.modelaapi.services.datapipelinerun.v1.ResumeDataPipelineRunRequest
	1,  // 13: github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService.ListDataPipelineRuns:output_type -> github.com.metaprov.modelaapi.services.datapipelinerun.v1.ListDataPipelineRunResponse
	3,  // 14: github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService.CreateDataPipelineRun:output_type -> github.com.metaprov.modelaapi.services.datapipelinerun.v1.CreateDataPipelineRunResponse
	7,  // 15: github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService.GetDataPipelineRun:output_type -> github.com.metaprov.modelaapi.services.datapipelinerun.v1.GetDataPipelineRunResponse
	5,  // 16: github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService.UpdateDataPipelineRun:output_type -> github.com.metaprov.modelaapi.services.datapipelinerun.v1.UpdateDataPipelineRunResponse
	9,  // 17: github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService.DeleteDataPipelineRun:output_type -> github.com.metaprov.modelaapi.services.datapipelinerun.v1.DeleteDataPipelineRunResponse
	10, // 18: github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService.AbortDataPipelineRun:output_type -> github.com.metaprov.modelaapi.services.datapipelinerun.v1.AbortDataPipelineRunResponse
	12, // 19: github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService.PauseDataPipelineRun:output_type -> github.com.metaprov.modelaapi.services.datapipelinerun.v1.PauseDataPipelineRunResponse
	14, // 20: github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService.ResumeDataPipelineRun:output_type -> github.com.metaprov.modelaapi.services.datapipelinerun.v1.ResumeDataPipelineRunResponse
	13, // [13:21] is the sub-list for method output_type
	5,  // [5:13] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() {
	file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_init()
}
func file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_init() {
	if File_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataPipelineRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataPipelineRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDataPipelineRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDataPipelineRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDataPipelineRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDataPipelineRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataPipelineRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataPipelineRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDataPipelineRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDataPipelineRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbortDataPipelineRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbortDataPipelineRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseDataPipelineRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseDataPipelineRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeDataPipelineRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeDataPipelineRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_goTypes,
		DependencyIndexes: file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_depIdxs,
		MessageInfos:      file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_msgTypes,
	}.Build()
	File_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto = out.File
	file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_rawDesc = nil
	file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_goTypes = nil
	file_github_com_metaprov_modelaapi_services_datapipelinerun_v1_datapipelinerun_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DataPipelineRunServiceClient is the client API for DataPipelineRunService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataPipelineRunServiceClient interface {
	ListDataPipelineRuns(ctx context.Context, in *ListDataPipelineRunRequest, opts ...grpc.CallOption) (*ListDataPipelineRunResponse, error)
	CreateDataPipelineRun(ctx context.Context, in *CreateDataPipelineRunRequest, opts ...grpc.CallOption) (*CreateDataPipelineRunResponse, error)
	GetDataPipelineRun(ctx context.Context, in *GetDataPipelineRunRequest, opts ...grpc.CallOption) (*GetDataPipelineRunResponse, error)
	UpdateDataPipelineRun(ctx context.Context, in *UpdateDataPipelineRunRequest, opts ...grpc.CallOption) (*UpdateDataPipelineRunResponse, error)
	DeleteDataPipelineRun(ctx context.Context, in *DeleteDataPipelineRunRequest, opts ...grpc.CallOption) (*DeleteDataPipelineRunResponse, error)
	AbortDataPipelineRun(ctx context.Context, in *AbortDataPipelineRunRequest, opts ...grpc.CallOption) (*AbortDataPipelineRunResponse, error)
	PauseDataPipelineRun(ctx context.Context, in *PauseDataPipelineRunRequest, opts ...grpc.CallOption) (*PauseDataPipelineRunResponse, error)
	ResumeDataPipelineRun(ctx context.Context, in *ResumeDataPipelineRunRequest, opts ...grpc.CallOption) (*ResumeDataPipelineRunResponse, error)
}

type dataPipelineRunServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDataPipelineRunServiceClient(cc grpc.ClientConnInterface) DataPipelineRunServiceClient {
	return &dataPipelineRunServiceClient{cc}
}

func (c *dataPipelineRunServiceClient) ListDataPipelineRuns(ctx context.Context, in *ListDataPipelineRunRequest, opts ...grpc.CallOption) (*ListDataPipelineRunResponse, error) {
	out := new(ListDataPipelineRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService/ListDataPipelineRuns", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataPipelineRunServiceClient) CreateDataPipelineRun(ctx context.Context, in *CreateDataPipelineRunRequest, opts ...grpc.CallOption) (*CreateDataPipelineRunResponse, error) {
	out := new(CreateDataPipelineRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService/CreateDataPipelineRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataPipelineRunServiceClient) GetDataPipelineRun(ctx context.Context, in *GetDataPipelineRunRequest, opts ...grpc.CallOption) (*GetDataPipelineRunResponse, error) {
	out := new(GetDataPipelineRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService/GetDataPipelineRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataPipelineRunServiceClient) UpdateDataPipelineRun(ctx context.Context, in *UpdateDataPipelineRunRequest, opts ...grpc.CallOption) (*UpdateDataPipelineRunResponse, error) {
	out := new(UpdateDataPipelineRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService/UpdateDataPipelineRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataPipelineRunServiceClient) DeleteDataPipelineRun(ctx context.Context, in *DeleteDataPipelineRunRequest, opts ...grpc.CallOption) (*DeleteDataPipelineRunResponse, error) {
	out := new(DeleteDataPipelineRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService/DeleteDataPipelineRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataPipelineRunServiceClient) AbortDataPipelineRun(ctx context.Context, in *AbortDataPipelineRunRequest, opts ...grpc.CallOption) (*AbortDataPipelineRunResponse, error) {
	out := new(AbortDataPipelineRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService/AbortDataPipelineRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataPipelineRunServiceClient) PauseDataPipelineRun(ctx context.Context, in *PauseDataPipelineRunRequest, opts ...grpc.CallOption) (*PauseDataPipelineRunResponse, error) {
	out := new(PauseDataPipelineRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService/PauseDataPipelineRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataPipelineRunServiceClient) ResumeDataPipelineRun(ctx context.Context, in *ResumeDataPipelineRunRequest, opts ...grpc.CallOption) (*ResumeDataPipelineRunResponse, error) {
	out := new(ResumeDataPipelineRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService/ResumeDataPipelineRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DataPipelineRunServiceServer is the server API for DataPipelineRunService service.
type DataPipelineRunServiceServer interface {
	ListDataPipelineRuns(context.Context, *ListDataPipelineRunRequest) (*ListDataPipelineRunResponse, error)
	CreateDataPipelineRun(context.Context, *CreateDataPipelineRunRequest) (*CreateDataPipelineRunResponse, error)
	GetDataPipelineRun(context.Context, *GetDataPipelineRunRequest) (*GetDataPipelineRunResponse, error)
	UpdateDataPipelineRun(context.Context, *UpdateDataPipelineRunRequest) (*UpdateDataPipelineRunResponse, error)
	DeleteDataPipelineRun(context.Context, *DeleteDataPipelineRunRequest) (*DeleteDataPipelineRunResponse, error)
	AbortDataPipelineRun(context.Context, *AbortDataPipelineRunRequest) (*AbortDataPipelineRunResponse, error)
	PauseDataPipelineRun(context.Context, *PauseDataPipelineRunRequest) (*PauseDataPipelineRunResponse, error)
	ResumeDataPipelineRun(context.Context, *ResumeDataPipelineRunRequest) (*ResumeDataPipelineRunResponse, error)
}

// UnimplementedDataPipelineRunServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDataPipelineRunServiceServer struct {
}

func (*UnimplementedDataPipelineRunServiceServer) ListDataPipelineRuns(context.Context, *ListDataPipelineRunRequest) (*ListDataPipelineRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDataPipelineRuns not implemented")
}
func (*UnimplementedDataPipelineRunServiceServer) CreateDataPipelineRun(context.Context, *CreateDataPipelineRunRequest) (*CreateDataPipelineRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDataPipelineRun not implemented")
}
func (*UnimplementedDataPipelineRunServiceServer) GetDataPipelineRun(context.Context, *GetDataPipelineRunRequest) (*GetDataPipelineRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDataPipelineRun not implemented")
}
func (*UnimplementedDataPipelineRunServiceServer) UpdateDataPipelineRun(context.Context, *UpdateDataPipelineRunRequest) (*UpdateDataPipelineRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDataPipelineRun not implemented")
}
func (*UnimplementedDataPipelineRunServiceServer) DeleteDataPipelineRun(context.Context, *DeleteDataPipelineRunRequest) (*DeleteDataPipelineRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDataPipelineRun not implemented")
}
func (*UnimplementedDataPipelineRunServiceServer) AbortDataPipelineRun(context.Context, *AbortDataPipelineRunRequest) (*AbortDataPipelineRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AbortDataPipelineRun not implemented")
}
func (*UnimplementedDataPipelineRunServiceServer) PauseDataPipelineRun(context.Context, *PauseDataPipelineRunRequest) (*PauseDataPipelineRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PauseDataPipelineRun not implemented")
}
func (*UnimplementedDataPipelineRunServiceServer) ResumeDataPipelineRun(context.Context, *ResumeDataPipelineRunRequest) (*ResumeDataPipelineRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResumeDataPipelineRun not implemented")
}

func RegisterDataPipelineRunServiceServer(s *grpc.Server, srv DataPipelineRunServiceServer) {
	s.RegisterService(&_DataPipelineRunService_serviceDesc, srv)
}

func _DataPipelineRunService_ListDataPipelineRuns_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDataPipelineRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataPipelineRunServiceServer).ListDataPipelineRuns(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService/ListDataPipelineRuns",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataPipelineRunServiceServer).ListDataPipelineRuns(ctx, req.(*ListDataPipelineRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataPipelineRunService_CreateDataPipelineRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDataPipelineRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataPipelineRunServiceServer).CreateDataPipelineRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService/CreateDataPipelineRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataPipelineRunServiceServer).CreateDataPipelineRun(ctx, req.(*CreateDataPipelineRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataPipelineRunService_GetDataPipelineRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDataPipelineRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataPipelineRunServiceServer).GetDataPipelineRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService/GetDataPipelineRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataPipelineRunServiceServer).GetDataPipelineRun(ctx, req.(*GetDataPipelineRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataPipelineRunService_UpdateDataPipelineRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDataPipelineRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataPipelineRunServiceServer).UpdateDataPipelineRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService/UpdateDataPipelineRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataPipelineRunServiceServer).UpdateDataPipelineRun(ctx, req.(*UpdateDataPipelineRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataPipelineRunService_DeleteDataPipelineRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDataPipelineRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataPipelineRunServiceServer).DeleteDataPipelineRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService/DeleteDataPipelineRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataPipelineRunServiceServer).DeleteDataPipelineRun(ctx, req.(*DeleteDataPipelineRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataPipelineRunService_AbortDataPipelineRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AbortDataPipelineRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataPipelineRunServiceServer).AbortDataPipelineRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService/AbortDataPipelineRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataPipelineRunServiceServer).AbortDataPipelineRun(ctx, req.(*AbortDataPipelineRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataPipelineRunService_PauseDataPipelineRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PauseDataPipelineRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataPipelineRunServiceServer).PauseDataPipelineRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService/PauseDataPipelineRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataPipelineRunServiceServer).PauseDataPipelineRun(ctx, req.(*PauseDataPipelineRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataPipelineRunService_ResumeDataPipelineRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResumeDataPipelineRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataPipelineRunServiceServer).ResumeDataPipelineRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService/ResumeDataPipelineRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataPipelineRunServiceServer).ResumeDataPipelineRun(ctx, req.(*ResumeDataPipelineRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataPipelineRunService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.metaprov.modelaapi.services.datapipelinerun.v1.DataPipelineRunService",
	HandlerType: (*DataPipelineRunServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListDataPipelineRuns",
			Handler:    _DataPipelineRunService_ListDataPipelineRuns_Handler,
		},
		{
			MethodName: "CreateDataPipelineRun",
			Handler:    _DataPipelineRunService_CreateDataPipelineRun_Handler,
		},
		{
			MethodName: "GetDataPipelineRun",
			Handler:    _DataPipelineRunService_GetDataPipelineRun_Handler,
		},
		{
			MethodName: "UpdateDataPipelineRun",
			Handler:    _DataPipelineRunService_UpdateDataPipelineRun_Handler,
		},
		{
			MethodName: "DeleteDataPipelineRun",
			Handler:    _DataPipelineRunService_DeleteDataPipelineRun_Handler,
		},
		{
			MethodName: "AbortDataPipelineRun",
			Handler:    _DataPipelineRunService_AbortDataPipelineRun_Handler,
		},
		{
			MethodName: "PauseDataPipelineRun",
			Handler:    _DataPipelineRunService_PauseDataPipelineRun_Handler,
		},
		{
			MethodName: "ResumeDataPipelineRun",
			Handler:    _DataPipelineRunService_ResumeDataPipelineRun_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/metaprov/modelaapi/services/datapipelinerun/v1/datapipelinerun.proto",
}
