syntax = "proto3";
option go_package = "github.com/metaprov/modeldapi/services/datapipelinerun/v1";
package github.com.metaprov.modeldapi.services.datapipelinerun.v1;


import "google/api/annotations.proto";
import "github.com/metaprov/modeldapi/pkg/apis/data/v1alpha1/generated.proto";

message ListDataPipelineRunRequest {
    string namespace = 1;
    map<string,string> labels =2;
}

message ListDataPipelineRunResponse {
    github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.DataPipelineRunList items = 1;
}

message CreateDataPipelineRunRequest {
    github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.DataPipelineRun item = 1;    
}

message CreateDataPipelineRunResponse {
}

message UpdateDataPipelineRunRequest {
    github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.DataPipelineRun item = 1;
}

message UpdateDataPipelineRunResponse {
}

message GetDataPipelineRunRequest {
    string namespace = 1;
    string name      = 2;
}


message GetDataPipelineRunResponse {
    github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.DataPipelineRun item = 1;
    string yaml = 2;
}

message DeleteDataPipelineRunRequest {
    string namespace = 1;
    string name      = 2;
}

message DeleteDataPipelineRunResponse {
}


message AbortDataPipelineRunResponse {
}

message AbortDataPipelineRunRequest {
    string namespace = 1;
    string name      = 2;
}



service DataPipelineRunService {
    rpc ListDataPipelineRuns(ListDataPipelineRunRequest) returns (ListDataPipelineRunResponse) {
        option (google.api.http).get = "/v1/datapipelineruns";
    }
    rpc CreateDataPipelineRun(CreateDataPipelineRunRequest) returns (CreateDataPipelineRunResponse) {
        option (google.api.http) = {
			post: "/v1/datapipelineruns"
			body: "*"
		};
    }

    rpc GetDataPipelineRun(GetDataPipelineRunRequest) returns (GetDataPipelineRunResponse) {
        option (google.api.http).get = "/v1/datapipelineruns/{name}";
    }

    rpc UpdateDataPipelineRun(UpdateDataPipelineRunRequest) returns (UpdateDataPipelineRunResponse) {
        option (google.api.http) = {
			put: "/v1/datapipelineruns/{datapipelinerun.metadata.name}"
			body: "*"
		};
    }

    rpc DeleteDataPipelineRun(DeleteDataPipelineRunRequest) returns (DeleteDataPipelineRunResponse) {
        option (google.api.http).delete = "/api/v1/datapipelineruns/{namespace}/{name}";
    }

    rpc AbortDataPipelineRun(AbortDataPipelineRunRequest) returns (AbortDataPipelineRunResponse) {
        option (google.api.http).post = "/v1/datapipelineruns/{name}:abort";
    }

    
}