// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: github.com/metaprov/modelaapi/services/datasetsnapshot/v1/datasetsnapshot.proto

package v1

import (
	_ "github.com/golang/protobuf/ptypes/empty"
	v1alpha1 "github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1"
	v1 "github.com/metaprov/modelaapi/services/common/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListDatasetSnapshotsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Labels    map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PageSize  int32             `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string            `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	OrderBy   string            `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
}

func (x *ListDatasetSnapshotsRequest) Reset() {
	*x = ListDatasetSnapshotsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDatasetSnapshotsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatasetSnapshotsRequest) ProtoMessage() {}

func (x *ListDatasetSnapshotsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatasetSnapshotsRequest.ProtoReflect.Descriptor instead.
func (*ListDatasetSnapshotsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_rawDescGZIP(), []int{0}
}

func (x *ListDatasetSnapshotsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListDatasetSnapshotsRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ListDatasetSnapshotsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDatasetSnapshotsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListDatasetSnapshotsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type ListDatasetSnapshotsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetSnapshots *v1alpha1.DatasetSnapshotList `protobuf:"bytes,1,opt,name=datasetSnapshots,proto3" json:"datasetSnapshots,omitempty"`
	NextPageToken    string                        `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListDatasetSnapshotsResponse) Reset() {
	*x = ListDatasetSnapshotsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDatasetSnapshotsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatasetSnapshotsResponse) ProtoMessage() {}

func (x *ListDatasetSnapshotsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatasetSnapshotsResponse.ProtoReflect.Descriptor instead.
func (*ListDatasetSnapshotsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_rawDescGZIP(), []int{1}
}

func (x *ListDatasetSnapshotsResponse) GetDatasetSnapshots() *v1alpha1.DatasetSnapshotList {
	if x != nil {
		return x.DatasetSnapshots
	}
	return nil
}

func (x *ListDatasetSnapshotsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetDatasetSnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Labels    map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetDatasetSnapshotRequest) Reset() {
	*x = GetDatasetSnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDatasetSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatasetSnapshotRequest) ProtoMessage() {}

func (x *GetDatasetSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatasetSnapshotRequest.ProtoReflect.Descriptor instead.
func (*GetDatasetSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_rawDescGZIP(), []int{2}
}

func (x *GetDatasetSnapshotRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetDatasetSnapshotRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDatasetSnapshotRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type GetDatasetSnapshotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetSnapshot *v1alpha1.DatasetSnapshot `protobuf:"bytes,1,opt,name=datasetSnapshot,proto3" json:"datasetSnapshot,omitempty"`
	Yaml            string                    `protobuf:"bytes,2,opt,name=yaml,proto3" json:"yaml,omitempty"`
}

func (x *GetDatasetSnapshotResponse) Reset() {
	*x = GetDatasetSnapshotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDatasetSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatasetSnapshotResponse) ProtoMessage() {}

func (x *GetDatasetSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatasetSnapshotResponse.ProtoReflect.Descriptor instead.
func (*GetDatasetSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_rawDescGZIP(), []int{3}
}

func (x *GetDatasetSnapshotResponse) GetDatasetSnapshot() *v1alpha1.DatasetSnapshot {
	if x != nil {
		return x.DatasetSnapshot
	}
	return nil
}

func (x *GetDatasetSnapshotResponse) GetYaml() string {
	if x != nil {
		return x.Yaml
	}
	return ""
}

type CreateDatasetSnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetSnapshot *v1alpha1.DatasetSnapshot `protobuf:"bytes,1,opt,name=datasetSnapshot,proto3" json:"datasetSnapshot,omitempty"`
}

func (x *CreateDatasetSnapshotRequest) Reset() {
	*x = CreateDatasetSnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDatasetSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDatasetSnapshotRequest) ProtoMessage() {}

func (x *CreateDatasetSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDatasetSnapshotRequest.ProtoReflect.Descriptor instead.
func (*CreateDatasetSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_rawDescGZIP(), []int{4}
}

func (x *CreateDatasetSnapshotRequest) GetDatasetSnapshot() *v1alpha1.DatasetSnapshot {
	if x != nil {
		return x.DatasetSnapshot
	}
	return nil
}

type CreateDatasetSnapshotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateDatasetSnapshotResponse) Reset() {
	*x = CreateDatasetSnapshotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDatasetSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDatasetSnapshotResponse) ProtoMessage() {}

func (x *CreateDatasetSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDatasetSnapshotResponse.ProtoReflect.Descriptor instead.
func (*CreateDatasetSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_rawDescGZIP(), []int{5}
}

type UpdateDatasetSnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetSnapshot *v1alpha1.DatasetSnapshot `protobuf:"bytes,1,opt,name=datasetSnapshot,proto3" json:"datasetSnapshot,omitempty"`
	FieldMask       *field_mask.FieldMask     `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
}

func (x *UpdateDatasetSnapshotRequest) Reset() {
	*x = UpdateDatasetSnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDatasetSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDatasetSnapshotRequest) ProtoMessage() {}

func (x *UpdateDatasetSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDatasetSnapshotRequest.ProtoReflect.Descriptor instead.
func (*UpdateDatasetSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateDatasetSnapshotRequest) GetDatasetSnapshot() *v1alpha1.DatasetSnapshot {
	if x != nil {
		return x.DatasetSnapshot
	}
	return nil
}

func (x *UpdateDatasetSnapshotRequest) GetFieldMask() *field_mask.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

type UpdateDatasetSnapshotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateDatasetSnapshotResponse) Reset() {
	*x = UpdateDatasetSnapshotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDatasetSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDatasetSnapshotResponse) ProtoMessage() {}

func (x *UpdateDatasetSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDatasetSnapshotResponse.ProtoReflect.Descriptor instead.
func (*UpdateDatasetSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_rawDescGZIP(), []int{7}
}

type DeleteDatasetSnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteDatasetSnapshotRequest) Reset() {
	*x = DeleteDatasetSnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDatasetSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDatasetSnapshotRequest) ProtoMessage() {}

func (x *DeleteDatasetSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDatasetSnapshotRequest.ProtoReflect.Descriptor instead.
func (*DeleteDatasetSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteDatasetSnapshotRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeleteDatasetSnapshotRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteDatasetSnapshotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteDatasetSnapshotResponse) Reset() {
	*x = DeleteDatasetSnapshotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDatasetSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDatasetSnapshotResponse) ProtoMessage() {}

func (x *DeleteDatasetSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDatasetSnapshotResponse.ProtoReflect.Descriptor instead.
func (*DeleteDatasetSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_rawDescGZIP(), []int{9}
}

type GetDatasetSnapshotProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Groups    []string `protobuf:"bytes,3,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *GetDatasetSnapshotProfileRequest) Reset() {
	*x = GetDatasetSnapshotProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDatasetSnapshotProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatasetSnapshotProfileRequest) ProtoMessage() {}

func (x *GetDatasetSnapshotProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatasetSnapshotProfileRequest.ProtoReflect.Descriptor instead.
func (*GetDatasetSnapshotProfileRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_rawDescGZIP(), []int{10}
}

func (x *GetDatasetSnapshotProfileRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetDatasetSnapshotProfileRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDatasetSnapshotProfileRequest) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

type GetDatasetSnapshotProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile *v1.DatasetProfile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *GetDatasetSnapshotProfileResponse) Reset() {
	*x = GetDatasetSnapshotProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDatasetSnapshotProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatasetSnapshotProfileResponse) ProtoMessage() {}

func (x *GetDatasetSnapshotProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatasetSnapshotProfileResponse.ProtoReflect.Descriptor instead.
func (*GetDatasetSnapshotProfileResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_rawDescGZIP(), []int{11}
}

func (x *GetDatasetSnapshotProfileResponse) GetProfile() *v1.DatasetProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

type CompareDatasetSnapshotsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Names     []string `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
}

func (x *CompareDatasetSnapshotsRequest) Reset() {
	*x = CompareDatasetSnapshotsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompareDatasetSnapshotsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompareDatasetSnapshotsRequest) ProtoMessage() {}

func (x *CompareDatasetSnapshotsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompareDatasetSnapshotsRequest.ProtoReflect.Descriptor instead.
func (*CompareDatasetSnapshotsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_rawDescGZIP(), []int{12}
}

func (x *CompareDatasetSnapshotsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CompareDatasetSnapshotsRequest) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type CompareDatasetSnapshotsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string               `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Names     []string             `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
	Profiles  []*v1.DatasetProfile `protobuf:"bytes,3,rep,name=profiles,proto3" json:"profiles,omitempty"`
}

func (x *CompareDatasetSnapshotsResponse) Reset() {
	*x = CompareDatasetSnapshotsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompareDatasetSnapshotsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompareDatasetSnapshotsResponse) ProtoMessage() {}

func (x *CompareDatasetSnapshotsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompareDatasetSnapshotsResponse.ProtoReflect.Descriptor instead.
func (*CompareDatasetSnapshotsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_rawDescGZIP(), []int{13}
}

func (x *CompareDatasetSnapshotsResponse) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CompareDatasetSnapshotsResponse) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *CompareDatasetSnapshotsResponse) GetProfiles() []*v1.DatasetProfile {
	if x != nil {
		return x.Profiles
	}
	return nil
}

type DownloadDatasetSnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Groups    []string `protobuf:"bytes,3,rep,name=groups,proto3" json:"groups,omitempty"`
	// Convert to CSV
	Convert bool `protobuf:"varint,4,opt,name=convert,proto3" json:"convert,omitempty"`
}

func (x *DownloadDatasetSnapshotRequest) Reset() {
	*x = DownloadDatasetSnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadDatasetSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadDatasetSnapshotRequest) ProtoMessage() {}

func (x *DownloadDatasetSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadDatasetSnapshotRequest.ProtoReflect.Descriptor instead.
func (*DownloadDatasetSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_rawDescGZIP(), []int{14}
}

func (x *DownloadDatasetSnapshotRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DownloadDatasetSnapshotRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DownloadDatasetSnapshotRequest) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *DownloadDatasetSnapshotRequest) GetConvert() bool {
	if x != nil {
		return x.Convert
	}
	return false
}

type DownloadDatasetSnapshotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Raw []byte `protobuf:"bytes,1,opt,name=raw,proto3" json:"raw,omitempty"`
}

func (x *DownloadDatasetSnapshotResponse) Reset() {
	*x = DownloadDatasetSnapshotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadDatasetSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadDatasetSnapshotResponse) ProtoMessage() {}

func (x *DownloadDatasetSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadDatasetSnapshotResponse.ProtoReflect.Descriptor instead.
func (*DownloadDatasetSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_rawDescGZIP(), []int{15}
}

func (x *DownloadDatasetSnapshotResponse) GetRaw() []byte {
	if x != nil {
		return x.Raw
	}
	return nil
}

type GetDatasetSnapshotAnomaliesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Groups    []string `protobuf:"bytes,3,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *GetDatasetSnapshotAnomaliesRequest) Reset() {
	*x = GetDatasetSnapshotAnomaliesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDatasetSnapshotAnomaliesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatasetSnapshotAnomaliesRequest) ProtoMessage() {}

func (x *GetDatasetSnapshotAnomaliesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatasetSnapshotAnomaliesRequest.ProtoReflect.Descriptor instead.
func (*GetDatasetSnapshotAnomaliesRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_rawDescGZIP(), []int{16}
}

func (x *GetDatasetSnapshotAnomaliesRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetDatasetSnapshotAnomaliesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDatasetSnapshotAnomaliesRequest) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

type GetDatasetSnapshotAnomaliesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table *v1.TableView `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
}

func (x *GetDatasetSnapshotAnomaliesResponse) Reset() {
	*x = GetDatasetSnapshotAnomaliesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDatasetSnapshotAnomaliesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatasetSnapshotAnomaliesResponse) ProtoMessage() {}

func (x *GetDatasetSnapshotAnomaliesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatasetSnapshotAnomaliesResponse.ProtoReflect.Descriptor instead.
func (*GetDatasetSnapshotAnomaliesResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_rawDescGZIP(), []int{17}
}

func (x *GetDatasetSnapshotAnomaliesResponse) GetTable() *v1.TableView {
	if x != nil {
		return x.Table
	}
	return nil
}

var File_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto protoreflect.FileDescriptor

var file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_rawDesc = []byte{
	0x0a, 0x4f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x2e, 0x76, 0x31, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc1, 0x02, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x72, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x1a,
	0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xbd, 0x01, 0x0a, 0x1c, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x10, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x10, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xfa, 0x01, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x70, 0x0a, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x58, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa1, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x45, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x22, 0x8f, 0x01, 0x0a, 0x1c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6f, 0x0a, 0x0f,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x0f, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x22, 0x1f, 0x0a,
	0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xca,
	0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x6f, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52,
	0x0f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b,
	0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x1f, 0x0a, 0x1d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50, 0x0a, 0x1c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1f,
	0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x6c, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x7f, 0x0a,
	0x21, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5a, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x54,
	0x0a, 0x1e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x22, 0xb3, 0x01, 0x0a, 0x1f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x5c, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x1e, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x74, 0x22, 0x33, 0x0a, 0x1f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x72, 0x61, 0x77, 0x22, 0x6e, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x41, 0x6e, 0x6f, 0x6d,
	0x61, 0x6c, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x78, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x41, 0x6e, 0x6f, 0x6d,
	0x61, 0x6c, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a,
	0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x32, 0xba, 0x11, 0x0a, 0x16, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xe1, 0x01, 0x0a, 0x14,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x73, 0x12, 0x4e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x4f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f,
	0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x7d, 0x12,
	0xe2, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x4c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x4d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27, 0x2f, 0x76, 0x31,
	0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x7d, 0x2f, 0x7b, 0x6e,
	0x61, 0x6d, 0x65, 0x7d, 0x12, 0xdb, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x4f,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x50, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x3a,
	0x01, 0x2a, 0x12, 0xa0, 0x02, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x4f, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x50, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70,
	0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x5e, 0x1a, 0x59, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x2f, 0x7b, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x7d, 0x2f, 0x7b, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x6e, 0x61, 0x6d,
	0x65, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0xdf, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12,
	0x4f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x50, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x2a, 0x1b, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0xf9, 0x01, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x73, 0x12, 0x51, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x52, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x31, 0x22, 0x2f, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x7d, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x72, 0x65, 0x12, 0xff, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x54, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x31, 0x12, 0x2f, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x7d, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0xfa, 0x01, 0x0a, 0x17, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x12, 0x51, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x52, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32,
	0x22, 0x30, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x7d, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0xf8, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x6f, 0x6d, 0x61, 0x6c,
	0x69, 0x65, 0x73, 0x12, 0x55, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x41, 0x6e, 0x6f, 0x6d, 0x61, 0x6c,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x56, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x41, 0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x12, 0x31, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x7d, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x7d, 0x3a, 0x61, 0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x69, 0x65, 0x73, 0x42, 0x33, 0x5a,
	0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2f,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_rawDescOnce sync.Once
	file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_rawDescData = file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_rawDesc
)

func file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_rawDescGZIP() []byte {
	file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_rawDescOnce.Do(func() {
		file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_rawDescData)
	})
	return file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_rawDescData
}

var file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_goTypes = []interface{}{
	(*ListDatasetSnapshotsRequest)(nil),         // 0: github.com.metaprov.modelaapi.services.dataset.v1.ListDatasetSnapshotsRequest
	(*ListDatasetSnapshotsResponse)(nil),        // 1: github.com.metaprov.modelaapi.services.dataset.v1.ListDatasetSnapshotsResponse
	(*GetDatasetSnapshotRequest)(nil),           // 2: github.com.metaprov.modelaapi.services.dataset.v1.GetDatasetSnapshotRequest
	(*GetDatasetSnapshotResponse)(nil),          // 3: github.com.metaprov.modelaapi.services.dataset.v1.GetDatasetSnapshotResponse
	(*CreateDatasetSnapshotRequest)(nil),        // 4: github.com.metaprov.modelaapi.services.dataset.v1.CreateDatasetSnapshotRequest
	(*CreateDatasetSnapshotResponse)(nil),       // 5: github.com.metaprov.modelaapi.services.dataset.v1.CreateDatasetSnapshotResponse
	(*UpdateDatasetSnapshotRequest)(nil),        // 6: github.com.metaprov.modelaapi.services.dataset.v1.UpdateDatasetSnapshotRequest
	(*UpdateDatasetSnapshotResponse)(nil),       // 7: github.com.metaprov.modelaapi.services.dataset.v1.UpdateDatasetSnapshotResponse
	(*DeleteDatasetSnapshotRequest)(nil),        // 8: github.com.metaprov.modelaapi.services.dataset.v1.DeleteDatasetSnapshotRequest
	(*DeleteDatasetSnapshotResponse)(nil),       // 9: github.com.metaprov.modelaapi.services.dataset.v1.DeleteDatasetSnapshotResponse
	(*GetDatasetSnapshotProfileRequest)(nil),    // 10: github.com.metaprov.modelaapi.services.dataset.v1.GetDatasetSnapshotProfileRequest
	(*GetDatasetSnapshotProfileResponse)(nil),   // 11: github.com.metaprov.modelaapi.services.dataset.v1.GetDatasetSnapshotProfileResponse
	(*CompareDatasetSnapshotsRequest)(nil),      // 12: github.com.metaprov.modelaapi.services.dataset.v1.CompareDatasetSnapshotsRequest
	(*CompareDatasetSnapshotsResponse)(nil),     // 13: github.com.metaprov.modelaapi.services.dataset.v1.CompareDatasetSnapshotsResponse
	(*DownloadDatasetSnapshotRequest)(nil),      // 14: github.com.metaprov.modelaapi.services.dataset.v1.DownloadDatasetSnapshotRequest
	(*DownloadDatasetSnapshotResponse)(nil),     // 15: github.com.metaprov.modelaapi.services.dataset.v1.DownloadDatasetSnapshotResponse
	(*GetDatasetSnapshotAnomaliesRequest)(nil),  // 16: github.com.metaprov.modelaapi.services.dataset.v1.GetDatasetSnapshotAnomaliesRequest
	(*GetDatasetSnapshotAnomaliesResponse)(nil), // 17: github.com.metaprov.modelaapi.services.dataset.v1.GetDatasetSnapshotAnomaliesResponse
	nil,                                  // 18: github.com.metaprov.modelaapi.services.dataset.v1.ListDatasetSnapshotsRequest.LabelsEntry
	nil,                                  // 19: github.com.metaprov.modelaapi.services.dataset.v1.GetDatasetSnapshotRequest.LabelsEntry
	(*v1alpha1.DatasetSnapshotList)(nil), // 20: github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DatasetSnapshotList
	(*v1alpha1.DatasetSnapshot)(nil),     // 21: github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DatasetSnapshot
	(*field_mask.FieldMask)(nil),         // 22: google.protobuf.FieldMask
	(*v1.DatasetProfile)(nil),            // 23: github.com.metaprov.modelaapi.services.common.v1.DatasetProfile
	(*v1.TableView)(nil),                 // 24: github.com.metaprov.modelaapi.services.common.v1.TableView
}
var file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_depIdxs = []int32{
	18, // 0: github.com.metaprov.modelaapi.services.dataset.v1.ListDatasetSnapshotsRequest.labels:type_name -> github.com.metaprov.modelaapi.services.dataset.v1.ListDatasetSnapshotsRequest.LabelsEntry
	20, // 1: github.com.metaprov.modelaapi.services.dataset.v1.ListDatasetSnapshotsResponse.datasetSnapshots:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DatasetSnapshotList
	19, // 2: github.com.metaprov.modelaapi.services.dataset.v1.GetDatasetSnapshotRequest.labels:type_name -> github.com.metaprov.modelaapi.services.dataset.v1.GetDatasetSnapshotRequest.LabelsEntry
	21, // 3: github.com.metaprov.modelaapi.services.dataset.v1.GetDatasetSnapshotResponse.datasetSnapshot:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DatasetSnapshot
	21, // 4: github.com.metaprov.modelaapi.services.dataset.v1.CreateDatasetSnapshotRequest.datasetSnapshot:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DatasetSnapshot
	21, // 5: github.com.metaprov.modelaapi.services.dataset.v1.UpdateDatasetSnapshotRequest.datasetSnapshot:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DatasetSnapshot
	22, // 6: github.com.metaprov.modelaapi.services.dataset.v1.UpdateDatasetSnapshotRequest.field_mask:type_name -> google.protobuf.FieldMask
	23, // 7: github.com.metaprov.modelaapi.services.dataset.v1.GetDatasetSnapshotProfileResponse.profile:type_name -> github.com.metaprov.modelaapi.services.common.v1.DatasetProfile
	23, // 8: github.com.metaprov.modelaapi.services.dataset.v1.CompareDatasetSnapshotsResponse.profiles:type_name -> github.com.metaprov.modelaapi.services.common.v1.DatasetProfile
	24, // 9: github.com.metaprov.modelaapi.services.dataset.v1.GetDatasetSnapshotAnomaliesResponse.table:type_name -> github.com.metaprov.modelaapi.services.common.v1.TableView
	0,  // 10: github.com.metaprov.modelaapi.services.dataset.v1.DatasetSnapshotService.ListDatasetSnapshots:input_type -> github.com.metaprov.modelaapi.services.dataset.v1.ListDatasetSnapshotsRequest
	2,  // 11: github.com.metaprov.modelaapi.services.dataset.v1.DatasetSnapshotService.GetDatasetSnapshot:input_type -> github.com.metaprov.modelaapi.services.dataset.v1.GetDatasetSnapshotRequest
	4,  // 12: github.com.metaprov.modelaapi.services.dataset.v1.DatasetSnapshotService.CreateDatasetSnapshot:input_type -> github.com.metaprov.modelaapi.services.dataset.v1.CreateDatasetSnapshotRequest
	6,  // 13: github.com.metaprov.modelaapi.services.dataset.v1.DatasetSnapshotService.UpdateDatasetSnapshot:input_type -> github.com.metaprov.modelaapi.services.dataset.v1.UpdateDatasetSnapshotRequest
	8,  // 14: github.com.metaprov.modelaapi.services.dataset.v1.DatasetSnapshotService.DeleteDatasetSnapshot:input_type -> github.com.metaprov.modelaapi.services.dataset.v1.DeleteDatasetSnapshotRequest
	12, // 15: github.com.metaprov.modelaapi.services.dataset.v1.DatasetSnapshotService.CompareDatasetSnapshots:input_type -> github.com.metaprov.modelaapi.services.dataset.v1.CompareDatasetSnapshotsRequest
	10, // 16: github.com.metaprov.modelaapi.services.dataset.v1.DatasetSnapshotService.GetDatasetSnapshotProfile:input_type -> github.com.metaprov.modelaapi.services.dataset.v1.GetDatasetSnapshotProfileRequest
	14, // 17: github.com.metaprov.modelaapi.services.dataset.v1.DatasetSnapshotService.DownloadDatasetSnapshot:input_type -> github.com.metaprov.modelaapi.services.dataset.v1.DownloadDatasetSnapshotRequest
	16, // 18: github.com.metaprov.modelaapi.services.dataset.v1.DatasetSnapshotService.GetAnomalies:input_type -> github.com.metaprov.modelaapi.services.dataset.v1.GetDatasetSnapshotAnomaliesRequest
	1,  // 19: github.com.metaprov.modelaapi.services.dataset.v1.DatasetSnapshotService.ListDatasetSnapshots:output_type -> github.com.metaprov.modelaapi.services.dataset.v1.ListDatasetSnapshotsResponse
	3,  // 20: github.com.metaprov.modelaapi.services.dataset.v1.DatasetSnapshotService.GetDatasetSnapshot:output_type -> github.com.metaprov.modelaapi.services.dataset.v1.GetDatasetSnapshotResponse
	5,  // 21: github.com.metaprov.modelaapi.services.dataset.v1.DatasetSnapshotService.CreateDatasetSnapshot:output_type -> github.com.metaprov.modelaapi.services.dataset.v1.CreateDatasetSnapshotResponse
	7,  // 22: github.com.metaprov.modelaapi.services.dataset.v1.DatasetSnapshotService.UpdateDatasetSnapshot:output_type -> github.com.metaprov.modelaapi.services.dataset.v1.UpdateDatasetSnapshotResponse
	9,  // 23: github.com.metaprov.modelaapi.services.dataset.v1.DatasetSnapshotService.DeleteDatasetSnapshot:output_type -> github.com.metaprov.modelaapi.services.dataset.v1.DeleteDatasetSnapshotResponse
	13, // 24: github.com.metaprov.modelaapi.services.dataset.v1.DatasetSnapshotService.CompareDatasetSnapshots:output_type -> github.com.metaprov.modelaapi.services.dataset.v1.CompareDatasetSnapshotsResponse
	11, // 25: github.com.metaprov.modelaapi.services.dataset.v1.DatasetSnapshotService.GetDatasetSnapshotProfile:output_type -> github.com.metaprov.modelaapi.services.dataset.v1.GetDatasetSnapshotProfileResponse
	15, // 26: github.com.metaprov.modelaapi.services.dataset.v1.DatasetSnapshotService.DownloadDatasetSnapshot:output_type -> github.com.metaprov.modelaapi.services.dataset.v1.DownloadDatasetSnapshotResponse
	17, // 27: github.com.metaprov.modelaapi.services.dataset.v1.DatasetSnapshotService.GetAnomalies:output_type -> github.com.metaprov.modelaapi.services.dataset.v1.GetDatasetSnapshotAnomaliesResponse
	19, // [19:28] is the sub-list for method output_type
	10, // [10:19] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() {
	file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_init()
}
func file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_init() {
	if File_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDatasetSnapshotsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDatasetSnapshotsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDatasetSnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDatasetSnapshotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDatasetSnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDatasetSnapshotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDatasetSnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDatasetSnapshotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDatasetSnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDatasetSnapshotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDatasetSnapshotProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDatasetSnapshotProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompareDatasetSnapshotsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompareDatasetSnapshotsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadDatasetSnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadDatasetSnapshotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDatasetSnapshotAnomaliesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDatasetSnapshotAnomaliesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_goTypes,
		DependencyIndexes: file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_depIdxs,
		MessageInfos:      file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_msgTypes,
	}.Build()
	File_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto = out.File
	file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_rawDesc = nil
	file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_goTypes = nil
	file_github_com_metaprov_modelaapi_services_datasetsnapshot_v1_datasetsnapshot_proto_depIdxs = nil
}
