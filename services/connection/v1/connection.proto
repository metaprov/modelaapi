syntax = "proto3";
option go_package = "github.com/metaprov/modelaapi/services/connection/v1";
package github.com.metaprov.modelaapi.services.connection.v1;

import "google/protobuf/field_mask.proto";
import "google/api/annotations.proto";
import "github.com/metaprov/modelaapi/pkg/apis/infra/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/services/common/v1/common.proto";

message ListConnectionsRequest {
  string             namespace = 1;
  map<string, string> labels = 2;
  int32              page_size = 3;
  string             page_token = 4;
  string             order_by = 5;
}

message ListConnectionsResponse {
  github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList connections = 1;
  string next_page_token = 2;
}

message CreateConnectionRequest {
  github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection connection = 1;
  map<string, string> secret = 5;
}

message CreateConnectionResponse {
}

message UpdateConnectionRequest {
  github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection connection = 1;
  google.protobuf.FieldMask field_mask = 2;
}

message UpdateConnectionResponse {

}

message GetConnectionRequest {
  string namespace = 1;
  string name = 2;
}

message GetConnectionResponse {
  github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection connection = 1;
  map<string, string> secret = 2;
  bool isAdmin = 3;
  string yaml = 4;
}

message DeleteConnectionRequest {
  string namespace = 1;
  string name = 2;
}

message DeleteConnectionResponse {}

message TestConnectionRequest {
  string namespace = 1;
  string name = 2;
}

message TestConnectionResponse {
  bool status = 1;
  string msg = 2;
}

/////// Data Plane Methods ////////

message GetDatabasesRequest {
  string namespace = 1;
  string name = 2;
}

message GetDatabasesResponse {
  repeated string databases = 1;
}

message GetTablesRequest {
  string namespace = 1;
  string name = 2;
}

message GetTablesResponse {
  repeated string tables = 1;
}

message ExecuteSqlRequest {
  string namespace = 1;
  string name = 2;
  string sql = 3;
}

message ExecuteSqlResponse {
  github.com.metaprov.modelaapi.services.common.v1.TableView tableview = 1;
}


service ConnectionService {
  rpc ListConnections(ListConnectionsRequest) returns (ListConnectionsResponse) {
    option (google.api.http).get = "/v1/connections/{namespace}";
  }
  rpc CreateConnection(CreateConnectionRequest) returns (CreateConnectionResponse) {
    option (google.api.http) = {
      post: "/v1/connections"
      body: "*"
    };
  }
  rpc GetConnection(GetConnectionRequest) returns (GetConnectionResponse) {
    option (google.api.http).get = "/v1/connections/{namespace}/{name}";
  }
  rpc UpdateConnection(UpdateConnectionRequest) returns (UpdateConnectionResponse) {
    option (google.api.http) = {
      put: "/v1/connections/{connection.metadata.namespace}/{connection.metadata.name}"
      body: "*"
    };
  }

  rpc DeleteConnection(DeleteConnectionRequest) returns (DeleteConnectionResponse) {
    option (google.api.http).delete = "/api/v1/connections/{namespace}/{name}";
  }

  rpc TestConnection(TestConnectionRequest) returns (TestConnectionResponse) {
    option (google.api.http).get = "/api/v1/connections/{namespace}/{name}:test";
  }

  rpc GetDatabases(GetDatabasesRequest) returns (GetDatabasesResponse) {
    option (google.api.http).get = "/v1/connections/{namespace}/{name}:databases";
  }

  rpc GetTables(GetTablesRequest) returns (GetTablesResponse) {
    option (google.api.http).get = "/v1/connections/{namespace}/{name}:tables";
  }

  rpc ExecuteSql(ExecuteSqlRequest) returns (ExecuteSqlResponse) {
    option (google.api.http).post = "/v1/connections/{namespace}/{name}:executesql";
  }
}