// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.1
// source: github.com/metaprov/modelaapi/services/watcherd/v1/watcherd.proto

package v1

import (
	_ "github.com/metaprov/modelaapi/pkg/apis/catalog/v1alpha1"
	v1alpha1 "github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1"
	v1alpha13 "github.com/metaprov/modelaapi/pkg/apis/inference/v1alpha1"
	v1alpha12 "github.com/metaprov/modelaapi/pkg/apis/infra/v1alpha1"
	v1alpha14 "github.com/metaprov/modelaapi/pkg/apis/team/v1alpha1"
	v1alpha11 "github.com/metaprov/modelaapi/pkg/apis/training/v1alpha1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "k8s.io/api/core/v1"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventType int32

const (
	EventType_EVENT_UPDATE EventType = 0
	EventType_EVENT_DELETE EventType = 1
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "EVENT_UPDATE",
		1: "EVENT_DELETE",
	}
	EventType_value = map[string]int32{
		"EVENT_UPDATE": 0,
		"EVENT_DELETE": 1,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{0}
}

type WatchRequestOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64 `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Namespace  string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Latest indicates if we should instantly respond with
	// all the events from the previous generation, or respond with nothing.
	Latest bool `protobuf:"varint,3,opt,name=latest,proto3" json:"latest,omitempty"`
}

func (x *WatchRequestOptions) Reset() {
	*x = WatchRequestOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchRequestOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchRequestOptions) ProtoMessage() {}

func (x *WatchRequestOptions) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchRequestOptions.ProtoReflect.Descriptor instead.
func (*WatchRequestOptions) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{0}
}

func (x *WatchRequestOptions) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchRequestOptions) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *WatchRequestOptions) GetLatest() bool {
	if x != nil {
		return x.Latest
	}
	return false
}

type WatchDatapipelineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                                         `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchDatapipelineResponse_DatapipelineEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchDatapipelineResponse) Reset() {
	*x = WatchDatapipelineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchDatapipelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchDatapipelineResponse) ProtoMessage() {}

func (x *WatchDatapipelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchDatapipelineResponse.ProtoReflect.Descriptor instead.
func (*WatchDatapipelineResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{1}
}

func (x *WatchDatapipelineResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchDatapipelineResponse) GetEvents() []*WatchDatapipelineResponse_DatapipelineEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchDatapipelineRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                                               `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchDatapipelineRunResponse_DatapipelineRunEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchDatapipelineRunResponse) Reset() {
	*x = WatchDatapipelineRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchDatapipelineRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchDatapipelineRunResponse) ProtoMessage() {}

func (x *WatchDatapipelineRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchDatapipelineRunResponse.ProtoReflect.Descriptor instead.
func (*WatchDatapipelineRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{2}
}

func (x *WatchDatapipelineRunResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchDatapipelineRunResponse) GetEvents() []*WatchDatapipelineRunResponse_DatapipelineRunEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchDataProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                                       `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchDataProductResponse_DataProductEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchDataProductResponse) Reset() {
	*x = WatchDataProductResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchDataProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchDataProductResponse) ProtoMessage() {}

func (x *WatchDataProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchDataProductResponse.ProtoReflect.Descriptor instead.
func (*WatchDataProductResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{3}
}

func (x *WatchDataProductResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchDataProductResponse) GetEvents() []*WatchDataProductResponse_DataProductEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchDataProductVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                                                     `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchDataProductVersionResponse_DataProductVersionEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchDataProductVersionResponse) Reset() {
	*x = WatchDataProductVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchDataProductVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchDataProductVersionResponse) ProtoMessage() {}

func (x *WatchDataProductVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchDataProductVersionResponse.ProtoReflect.Descriptor instead.
func (*WatchDataProductVersionResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{4}
}

func (x *WatchDataProductVersionResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchDataProductVersionResponse) GetEvents() []*WatchDataProductVersionResponse_DataProductVersionEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchEntityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                             `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchEntityResponse_EntityEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchEntityResponse) Reset() {
	*x = WatchEntityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchEntityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchEntityResponse) ProtoMessage() {}

func (x *WatchEntityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchEntityResponse.ProtoReflect.Descriptor instead.
func (*WatchEntityResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{5}
}

func (x *WatchEntityResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchEntityResponse) GetEvents() []*WatchEntityResponse_EntityEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchFeatureHistogramResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                                                 `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchFeatureHistogramResponse_FeatureHistogramEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchFeatureHistogramResponse) Reset() {
	*x = WatchFeatureHistogramResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchFeatureHistogramResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchFeatureHistogramResponse) ProtoMessage() {}

func (x *WatchFeatureHistogramResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchFeatureHistogramResponse.ProtoReflect.Descriptor instead.
func (*WatchFeatureHistogramResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{6}
}

func (x *WatchFeatureHistogramResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchFeatureHistogramResponse) GetEvents() []*WatchFeatureHistogramResponse_FeatureHistogramEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchFeatureGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                                         `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchFeatureGroupResponse_FeatureGroupEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchFeatureGroupResponse) Reset() {
	*x = WatchFeatureGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchFeatureGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchFeatureGroupResponse) ProtoMessage() {}

func (x *WatchFeatureGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchFeatureGroupResponse.ProtoReflect.Descriptor instead.
func (*WatchFeatureGroupResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{7}
}

func (x *WatchFeatureGroupResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchFeatureGroupResponse) GetEvents() []*WatchFeatureGroupResponse_FeatureGroupEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchRecipeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                             `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchRecipeResponse_RecipeEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchRecipeResponse) Reset() {
	*x = WatchRecipeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchRecipeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchRecipeResponse) ProtoMessage() {}

func (x *WatchRecipeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchRecipeResponse.ProtoReflect.Descriptor instead.
func (*WatchRecipeResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{8}
}

func (x *WatchRecipeResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchRecipeResponse) GetEvents() []*WatchRecipeResponse_RecipeEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchRecipeRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                                   `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchRecipeRunResponse_RecipeRunEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchRecipeRunResponse) Reset() {
	*x = WatchRecipeRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchRecipeRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchRecipeRunResponse) ProtoMessage() {}

func (x *WatchRecipeRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchRecipeRunResponse.ProtoReflect.Descriptor instead.
func (*WatchRecipeRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{9}
}

func (x *WatchRecipeRunResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchRecipeRunResponse) GetEvents() []*WatchRecipeRunResponse_RecipeRunEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchDatasetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                                 `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchDatasetResponse_RecipeRunEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchDatasetResponse) Reset() {
	*x = WatchDatasetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchDatasetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchDatasetResponse) ProtoMessage() {}

func (x *WatchDatasetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchDatasetResponse.ProtoReflect.Descriptor instead.
func (*WatchDatasetResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{10}
}

func (x *WatchDatasetResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchDatasetResponse) GetEvents() []*WatchDatasetResponse_RecipeRunEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchDatasetSnapshotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                                         `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchDatasetSnapshotResponse_RecipeRunEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchDatasetSnapshotResponse) Reset() {
	*x = WatchDatasetSnapshotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchDatasetSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchDatasetSnapshotResponse) ProtoMessage() {}

func (x *WatchDatasetSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchDatasetSnapshotResponse.ProtoReflect.Descriptor instead.
func (*WatchDatasetSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{11}
}

func (x *WatchDatasetSnapshotResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchDatasetSnapshotResponse) GetEvents() []*WatchDatasetSnapshotResponse_RecipeRunEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchDatasourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                                     `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchDatasourceResponse_DatasourceEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchDatasourceResponse) Reset() {
	*x = WatchDatasourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchDatasourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchDatasourceResponse) ProtoMessage() {}

func (x *WatchDatasourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchDatasourceResponse.ProtoReflect.Descriptor instead.
func (*WatchDatasourceResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{12}
}

func (x *WatchDatasourceResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchDatasourceResponse) GetEvents() []*WatchDatasourceResponse_DatasourceEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

/////// Model Watch ///////
type WatchModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                           `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchModelResponse_ModelEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchModelResponse) Reset() {
	*x = WatchModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchModelResponse) ProtoMessage() {}

func (x *WatchModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchModelResponse.ProtoReflect.Descriptor instead.
func (*WatchModelResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{13}
}

func (x *WatchModelResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchModelResponse) GetEvents() []*WatchModelResponse_ModelEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchModelClassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                                     `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchModelClassResponse_ModelClassEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchModelClassResponse) Reset() {
	*x = WatchModelClassResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchModelClassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchModelClassResponse) ProtoMessage() {}

func (x *WatchModelClassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchModelClassResponse.ProtoReflect.Descriptor instead.
func (*WatchModelClassResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{14}
}

func (x *WatchModelClassResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchModelClassResponse) GetEvents() []*WatchModelClassResponse_ModelClassEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchModelClassRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                                           `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchModelClassRunResponse_ModelClassRunEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchModelClassRunResponse) Reset() {
	*x = WatchModelClassRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchModelClassRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchModelClassRunResponse) ProtoMessage() {}

func (x *WatchModelClassRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchModelClassRunResponse.ProtoReflect.Descriptor instead.
func (*WatchModelClassRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{15}
}

func (x *WatchModelClassRunResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchModelClassRunResponse) GetEvents() []*WatchModelClassRunResponse_ModelClassRunEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                             `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchReportResponse_ReportEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchReportResponse) Reset() {
	*x = WatchReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchReportResponse) ProtoMessage() {}

func (x *WatchReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchReportResponse.ProtoReflect.Descriptor instead.
func (*WatchReportResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{16}
}

func (x *WatchReportResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchReportResponse) GetEvents() []*WatchReportResponse_ReportEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

/////// Study Watch ///////
type WatchStudyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                           `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchStudyResponse_StudyEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchStudyResponse) Reset() {
	*x = WatchStudyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchStudyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchStudyResponse) ProtoMessage() {}

func (x *WatchStudyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchStudyResponse.ProtoReflect.Descriptor instead.
func (*WatchStudyResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{17}
}

func (x *WatchStudyResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchStudyResponse) GetEvents() []*WatchStudyResponse_StudyEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

/////// Study Run Watch ///////
type WatchStudyRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                                 `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchStudyRunResponse_StudyRunEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchStudyRunResponse) Reset() {
	*x = WatchStudyRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchStudyRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchStudyRunResponse) ProtoMessage() {}

func (x *WatchStudyRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchStudyRunResponse.ProtoReflect.Descriptor instead.
func (*WatchStudyRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{18}
}

func (x *WatchStudyRunResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchStudyRunResponse) GetEvents() []*WatchStudyRunResponse_StudyRunEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                               `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchAccountResponse_AccountEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchAccountResponse) Reset() {
	*x = WatchAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchAccountResponse) ProtoMessage() {}

func (x *WatchAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchAccountResponse.ProtoReflect.Descriptor instead.
func (*WatchAccountResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{19}
}

func (x *WatchAccountResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchAccountResponse) GetEvents() []*WatchAccountResponse_AccountEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchAlertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                           `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchAlertResponse_AlertEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchAlertResponse) Reset() {
	*x = WatchAlertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchAlertResponse) ProtoMessage() {}

func (x *WatchAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchAlertResponse.ProtoReflect.Descriptor instead.
func (*WatchAlertResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{20}
}

func (x *WatchAlertResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchAlertResponse) GetEvents() []*WatchAlertResponse_AlertEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchAttachmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                                     `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchAttachmentResponse_AttachmentEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchAttachmentResponse) Reset() {
	*x = WatchAttachmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchAttachmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchAttachmentResponse) ProtoMessage() {}

func (x *WatchAttachmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchAttachmentResponse.ProtoReflect.Descriptor instead.
func (*WatchAttachmentResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{21}
}

func (x *WatchAttachmentResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchAttachmentResponse) GetEvents() []*WatchAttachmentResponse_AttachmentEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                                     `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchConnectionResponse_ConnectionEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchConnectionResponse) Reset() {
	*x = WatchConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchConnectionResponse) ProtoMessage() {}

func (x *WatchConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchConnectionResponse.ProtoReflect.Descriptor instead.
func (*WatchConnectionResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{22}
}

func (x *WatchConnectionResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchConnectionResponse) GetEvents() []*WatchConnectionResponse_ConnectionEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchLabResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                       `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchLabResponse_LabEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchLabResponse) Reset() {
	*x = WatchLabResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchLabResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchLabResponse) ProtoMessage() {}

func (x *WatchLabResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchLabResponse.ProtoReflect.Descriptor instead.
func (*WatchLabResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{23}
}

func (x *WatchLabResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchLabResponse) GetEvents() []*WatchLabResponse_LabEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchLicenseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                               `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchLicenseResponse_LicenseEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchLicenseResponse) Reset() {
	*x = WatchLicenseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchLicenseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchLicenseResponse) ProtoMessage() {}

func (x *WatchLicenseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchLicenseResponse.ProtoReflect.Descriptor instead.
func (*WatchLicenseResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{24}
}

func (x *WatchLicenseResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchLicenseResponse) GetEvents() []*WatchLicenseResponse_LicenseEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchNotifierResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                                 `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchNotifierResponse_NotifierEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchNotifierResponse) Reset() {
	*x = WatchNotifierResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchNotifierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchNotifierResponse) ProtoMessage() {}

func (x *WatchNotifierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchNotifierResponse.ProtoReflect.Descriptor instead.
func (*WatchNotifierResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{25}
}

func (x *WatchNotifierResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchNotifierResponse) GetEvents() []*WatchNotifierResponse_NotifierEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchServingsiteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                                       `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchServingsiteResponse_ServingsiteEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchServingsiteResponse) Reset() {
	*x = WatchServingsiteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchServingsiteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchServingsiteResponse) ProtoMessage() {}

func (x *WatchServingsiteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchServingsiteResponse.ProtoReflect.Descriptor instead.
func (*WatchServingsiteResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{26}
}

func (x *WatchServingsiteResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchServingsiteResponse) GetEvents() []*WatchServingsiteResponse_ServingsiteEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchTenantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                             `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchTenantResponse_TenantEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchTenantResponse) Reset() {
	*x = WatchTenantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchTenantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchTenantResponse) ProtoMessage() {}

func (x *WatchTenantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchTenantResponse.ProtoReflect.Descriptor instead.
func (*WatchTenantResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{27}
}

func (x *WatchTenantResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchTenantResponse) GetEvents() []*WatchTenantResponse_TenantEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchUserclassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                                   `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchUserclassResponse_UserclassEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchUserclassResponse) Reset() {
	*x = WatchUserclassResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchUserclassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchUserclassResponse) ProtoMessage() {}

func (x *WatchUserclassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchUserclassResponse.ProtoReflect.Descriptor instead.
func (*WatchUserclassResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{28}
}

func (x *WatchUserclassResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchUserclassResponse) GetEvents() []*WatchUserclassResponse_UserclassEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchVirtualBucketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                                           `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchVirtualBucketResponse_VirtualBucketEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchVirtualBucketResponse) Reset() {
	*x = WatchVirtualBucketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchVirtualBucketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchVirtualBucketResponse) ProtoMessage() {}

func (x *WatchVirtualBucketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchVirtualBucketResponse.ProtoReflect.Descriptor instead.
func (*WatchVirtualBucketResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{29}
}

func (x *WatchVirtualBucketResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchVirtualBucketResponse) GetEvents() []*WatchVirtualBucketResponse_VirtualBucketEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchDataAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                               `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchDataAppResponse_DataAppEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchDataAppResponse) Reset() {
	*x = WatchDataAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchDataAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchDataAppResponse) ProtoMessage() {}

func (x *WatchDataAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchDataAppResponse.ProtoReflect.Descriptor instead.
func (*WatchDataAppResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{30}
}

func (x *WatchDataAppResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchDataAppResponse) GetEvents() []*WatchDataAppResponse_DataAppEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchPredictionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                                  `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchPredictionResponse_DataAppEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchPredictionResponse) Reset() {
	*x = WatchPredictionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchPredictionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchPredictionResponse) ProtoMessage() {}

func (x *WatchPredictionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchPredictionResponse.ProtoReflect.Descriptor instead.
func (*WatchPredictionResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{31}
}

func (x *WatchPredictionResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchPredictionResponse) GetEvents() []*WatchPredictionResponse_DataAppEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchPredictionRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                                           `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchPredictionRunResponse_PredicitonRunEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchPredictionRunResponse) Reset() {
	*x = WatchPredictionRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchPredictionRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchPredictionRunResponse) ProtoMessage() {}

func (x *WatchPredictionRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchPredictionRunResponse.ProtoReflect.Descriptor instead.
func (*WatchPredictionRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{32}
}

func (x *WatchPredictionRunResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchPredictionRunResponse) GetEvents() []*WatchPredictionRunResponse_PredicitonRunEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchPredictorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                                   `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchPredictorResponse_PredictorEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchPredictorResponse) Reset() {
	*x = WatchPredictorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchPredictorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchPredictorResponse) ProtoMessage() {}

func (x *WatchPredictorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchPredictorResponse.ProtoReflect.Descriptor instead.
func (*WatchPredictorResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{33}
}

func (x *WatchPredictorResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchPredictorResponse) GetEvents() []*WatchPredictorResponse_PredictorEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchPostmortemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                                     `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchPostmortemResponse_PostmortemEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchPostmortemResponse) Reset() {
	*x = WatchPostmortemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchPostmortemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchPostmortemResponse) ProtoMessage() {}

func (x *WatchPostmortemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchPostmortemResponse.ProtoReflect.Descriptor instead.
func (*WatchPostmortemResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{34}
}

func (x *WatchPostmortemResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchPostmortemResponse) GetEvents() []*WatchPostmortemResponse_PostmortemEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchReviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                             `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchReviewResponse_ReviewEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchReviewResponse) Reset() {
	*x = WatchReviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchReviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchReviewResponse) ProtoMessage() {}

func (x *WatchReviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchReviewResponse.ProtoReflect.Descriptor instead.
func (*WatchReviewResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{35}
}

func (x *WatchReviewResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchReviewResponse) GetEvents() []*WatchReviewResponse_ReviewEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchRunbookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                               `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchRunbookResponse_RunbookEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchRunbookResponse) Reset() {
	*x = WatchRunbookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchRunbookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchRunbookResponse) ProtoMessage() {}

func (x *WatchRunbookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchRunbookResponse.ProtoReflect.Descriptor instead.
func (*WatchRunbookResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{36}
}

func (x *WatchRunbookResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchRunbookResponse) GetEvents() []*WatchRunbookResponse_RunbookEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchTodoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation uint64                         `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Events     []*WatchTodoResponse_TodoEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WatchTodoResponse) Reset() {
	*x = WatchTodoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchTodoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchTodoResponse) ProtoMessage() {}

func (x *WatchTodoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchTodoResponse.ProtoReflect.Descriptor instead.
func (*WatchTodoResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{37}
}

func (x *WatchTodoResponse) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *WatchTodoResponse) GetEvents() []*WatchTodoResponse_TodoEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WatchDatapipelineResponse_DatapipelineEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType              `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha1.DataPipeline `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchDatapipelineResponse_DatapipelineEvent) Reset() {
	*x = WatchDatapipelineResponse_DatapipelineEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchDatapipelineResponse_DatapipelineEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchDatapipelineResponse_DatapipelineEvent) ProtoMessage() {}

func (x *WatchDatapipelineResponse_DatapipelineEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchDatapipelineResponse_DatapipelineEvent.ProtoReflect.Descriptor instead.
func (*WatchDatapipelineResponse_DatapipelineEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{1, 0}
}

func (x *WatchDatapipelineResponse_DatapipelineEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchDatapipelineResponse_DatapipelineEvent) GetObject() *v1alpha1.DataPipeline {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchDatapipelineRunResponse_DatapipelineRunEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType                 `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha1.DataPipelineRun `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchDatapipelineRunResponse_DatapipelineRunEvent) Reset() {
	*x = WatchDatapipelineRunResponse_DatapipelineRunEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchDatapipelineRunResponse_DatapipelineRunEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchDatapipelineRunResponse_DatapipelineRunEvent) ProtoMessage() {}

func (x *WatchDatapipelineRunResponse_DatapipelineRunEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchDatapipelineRunResponse_DatapipelineRunEvent.ProtoReflect.Descriptor instead.
func (*WatchDatapipelineRunResponse_DatapipelineRunEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{2, 0}
}

func (x *WatchDatapipelineRunResponse_DatapipelineRunEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchDatapipelineRunResponse_DatapipelineRunEvent) GetObject() *v1alpha1.DataPipelineRun {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchDataProductResponse_DataProductEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType             `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha1.DataProduct `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchDataProductResponse_DataProductEvent) Reset() {
	*x = WatchDataProductResponse_DataProductEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchDataProductResponse_DataProductEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchDataProductResponse_DataProductEvent) ProtoMessage() {}

func (x *WatchDataProductResponse_DataProductEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchDataProductResponse_DataProductEvent.ProtoReflect.Descriptor instead.
func (*WatchDataProductResponse_DataProductEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{3, 0}
}

func (x *WatchDataProductResponse_DataProductEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchDataProductResponse_DataProductEvent) GetObject() *v1alpha1.DataProduct {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchDataProductVersionResponse_DataProductVersionEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType                    `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha1.DataProductVersion `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchDataProductVersionResponse_DataProductVersionEvent) Reset() {
	*x = WatchDataProductVersionResponse_DataProductVersionEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchDataProductVersionResponse_DataProductVersionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchDataProductVersionResponse_DataProductVersionEvent) ProtoMessage() {}

func (x *WatchDataProductVersionResponse_DataProductVersionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchDataProductVersionResponse_DataProductVersionEvent.ProtoReflect.Descriptor instead.
func (*WatchDataProductVersionResponse_DataProductVersionEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{4, 0}
}

func (x *WatchDataProductVersionResponse_DataProductVersionEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchDataProductVersionResponse_DataProductVersionEvent) GetObject() *v1alpha1.DataProductVersion {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchEntityResponse_EntityEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType        `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha1.Entity `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchEntityResponse_EntityEvent) Reset() {
	*x = WatchEntityResponse_EntityEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchEntityResponse_EntityEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchEntityResponse_EntityEvent) ProtoMessage() {}

func (x *WatchEntityResponse_EntityEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchEntityResponse_EntityEvent.ProtoReflect.Descriptor instead.
func (*WatchEntityResponse_EntityEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{5, 0}
}

func (x *WatchEntityResponse_EntityEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchEntityResponse_EntityEvent) GetObject() *v1alpha1.Entity {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchFeatureHistogramResponse_FeatureHistogramEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType                  `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha1.FeatureHistogram `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchFeatureHistogramResponse_FeatureHistogramEvent) Reset() {
	*x = WatchFeatureHistogramResponse_FeatureHistogramEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchFeatureHistogramResponse_FeatureHistogramEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchFeatureHistogramResponse_FeatureHistogramEvent) ProtoMessage() {}

func (x *WatchFeatureHistogramResponse_FeatureHistogramEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchFeatureHistogramResponse_FeatureHistogramEvent.ProtoReflect.Descriptor instead.
func (*WatchFeatureHistogramResponse_FeatureHistogramEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{6, 0}
}

func (x *WatchFeatureHistogramResponse_FeatureHistogramEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchFeatureHistogramResponse_FeatureHistogramEvent) GetObject() *v1alpha1.FeatureHistogram {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchFeatureGroupResponse_FeatureGroupEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType              `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha1.FeatureGroup `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchFeatureGroupResponse_FeatureGroupEvent) Reset() {
	*x = WatchFeatureGroupResponse_FeatureGroupEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchFeatureGroupResponse_FeatureGroupEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchFeatureGroupResponse_FeatureGroupEvent) ProtoMessage() {}

func (x *WatchFeatureGroupResponse_FeatureGroupEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchFeatureGroupResponse_FeatureGroupEvent.ProtoReflect.Descriptor instead.
func (*WatchFeatureGroupResponse_FeatureGroupEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{7, 0}
}

func (x *WatchFeatureGroupResponse_FeatureGroupEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchFeatureGroupResponse_FeatureGroupEvent) GetObject() *v1alpha1.FeatureGroup {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchRecipeResponse_RecipeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType        `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha1.Recipe `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchRecipeResponse_RecipeEvent) Reset() {
	*x = WatchRecipeResponse_RecipeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchRecipeResponse_RecipeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchRecipeResponse_RecipeEvent) ProtoMessage() {}

func (x *WatchRecipeResponse_RecipeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchRecipeResponse_RecipeEvent.ProtoReflect.Descriptor instead.
func (*WatchRecipeResponse_RecipeEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{8, 0}
}

func (x *WatchRecipeResponse_RecipeEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchRecipeResponse_RecipeEvent) GetObject() *v1alpha1.Recipe {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchRecipeRunResponse_RecipeRunEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType           `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha1.RecipeRun `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchRecipeRunResponse_RecipeRunEvent) Reset() {
	*x = WatchRecipeRunResponse_RecipeRunEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchRecipeRunResponse_RecipeRunEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchRecipeRunResponse_RecipeRunEvent) ProtoMessage() {}

func (x *WatchRecipeRunResponse_RecipeRunEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchRecipeRunResponse_RecipeRunEvent.ProtoReflect.Descriptor instead.
func (*WatchRecipeRunResponse_RecipeRunEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{9, 0}
}

func (x *WatchRecipeRunResponse_RecipeRunEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchRecipeRunResponse_RecipeRunEvent) GetObject() *v1alpha1.RecipeRun {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchDatasetResponse_RecipeRunEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType           `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha1.RecipeRun `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchDatasetResponse_RecipeRunEvent) Reset() {
	*x = WatchDatasetResponse_RecipeRunEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchDatasetResponse_RecipeRunEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchDatasetResponse_RecipeRunEvent) ProtoMessage() {}

func (x *WatchDatasetResponse_RecipeRunEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchDatasetResponse_RecipeRunEvent.ProtoReflect.Descriptor instead.
func (*WatchDatasetResponse_RecipeRunEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{10, 0}
}

func (x *WatchDatasetResponse_RecipeRunEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchDatasetResponse_RecipeRunEvent) GetObject() *v1alpha1.RecipeRun {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchDatasetSnapshotResponse_RecipeRunEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType           `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha1.RecipeRun `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchDatasetSnapshotResponse_RecipeRunEvent) Reset() {
	*x = WatchDatasetSnapshotResponse_RecipeRunEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchDatasetSnapshotResponse_RecipeRunEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchDatasetSnapshotResponse_RecipeRunEvent) ProtoMessage() {}

func (x *WatchDatasetSnapshotResponse_RecipeRunEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchDatasetSnapshotResponse_RecipeRunEvent.ProtoReflect.Descriptor instead.
func (*WatchDatasetSnapshotResponse_RecipeRunEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{11, 0}
}

func (x *WatchDatasetSnapshotResponse_RecipeRunEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchDatasetSnapshotResponse_RecipeRunEvent) GetObject() *v1alpha1.RecipeRun {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchDatasourceResponse_DatasourceEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType            `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha1.DataSource `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchDatasourceResponse_DatasourceEvent) Reset() {
	*x = WatchDatasourceResponse_DatasourceEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchDatasourceResponse_DatasourceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchDatasourceResponse_DatasourceEvent) ProtoMessage() {}

func (x *WatchDatasourceResponse_DatasourceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchDatasourceResponse_DatasourceEvent.ProtoReflect.Descriptor instead.
func (*WatchDatasourceResponse_DatasourceEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{12, 0}
}

func (x *WatchDatasourceResponse_DatasourceEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchDatasourceResponse_DatasourceEvent) GetObject() *v1alpha1.DataSource {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchModelResponse_ModelEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType        `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha11.Model `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchModelResponse_ModelEvent) Reset() {
	*x = WatchModelResponse_ModelEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchModelResponse_ModelEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchModelResponse_ModelEvent) ProtoMessage() {}

func (x *WatchModelResponse_ModelEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchModelResponse_ModelEvent.ProtoReflect.Descriptor instead.
func (*WatchModelResponse_ModelEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{13, 0}
}

func (x *WatchModelResponse_ModelEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchModelResponse_ModelEvent) GetObject() *v1alpha11.Model {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchModelClassResponse_ModelClassEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType        `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha11.Model `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchModelClassResponse_ModelClassEvent) Reset() {
	*x = WatchModelClassResponse_ModelClassEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchModelClassResponse_ModelClassEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchModelClassResponse_ModelClassEvent) ProtoMessage() {}

func (x *WatchModelClassResponse_ModelClassEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchModelClassResponse_ModelClassEvent.ProtoReflect.Descriptor instead.
func (*WatchModelClassResponse_ModelClassEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{14, 0}
}

func (x *WatchModelClassResponse_ModelClassEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchModelClassResponse_ModelClassEvent) GetObject() *v1alpha11.Model {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchModelClassRunResponse_ModelClassRunEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType                `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha11.ModelClassRun `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchModelClassRunResponse_ModelClassRunEvent) Reset() {
	*x = WatchModelClassRunResponse_ModelClassRunEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchModelClassRunResponse_ModelClassRunEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchModelClassRunResponse_ModelClassRunEvent) ProtoMessage() {}

func (x *WatchModelClassRunResponse_ModelClassRunEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchModelClassRunResponse_ModelClassRunEvent.ProtoReflect.Descriptor instead.
func (*WatchModelClassRunResponse_ModelClassRunEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{15, 0}
}

func (x *WatchModelClassRunResponse_ModelClassRunEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchModelClassRunResponse_ModelClassRunEvent) GetObject() *v1alpha11.ModelClassRun {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchReportResponse_ReportEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType         `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha11.Report `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchReportResponse_ReportEvent) Reset() {
	*x = WatchReportResponse_ReportEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchReportResponse_ReportEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchReportResponse_ReportEvent) ProtoMessage() {}

func (x *WatchReportResponse_ReportEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchReportResponse_ReportEvent.ProtoReflect.Descriptor instead.
func (*WatchReportResponse_ReportEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{16, 0}
}

func (x *WatchReportResponse_ReportEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchReportResponse_ReportEvent) GetObject() *v1alpha11.Report {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchStudyResponse_StudyEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType        `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha11.Study `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchStudyResponse_StudyEvent) Reset() {
	*x = WatchStudyResponse_StudyEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchStudyResponse_StudyEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchStudyResponse_StudyEvent) ProtoMessage() {}

func (x *WatchStudyResponse_StudyEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchStudyResponse_StudyEvent.ProtoReflect.Descriptor instead.
func (*WatchStudyResponse_StudyEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{17, 0}
}

func (x *WatchStudyResponse_StudyEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchStudyResponse_StudyEvent) GetObject() *v1alpha11.Study {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchStudyRunResponse_StudyRunEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType           `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha11.StudyRun `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchStudyRunResponse_StudyRunEvent) Reset() {
	*x = WatchStudyRunResponse_StudyRunEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchStudyRunResponse_StudyRunEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchStudyRunResponse_StudyRunEvent) ProtoMessage() {}

func (x *WatchStudyRunResponse_StudyRunEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchStudyRunResponse_StudyRunEvent.ProtoReflect.Descriptor instead.
func (*WatchStudyRunResponse_StudyRunEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{18, 0}
}

func (x *WatchStudyRunResponse_StudyRunEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchStudyRunResponse_StudyRunEvent) GetObject() *v1alpha11.StudyRun {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchAccountResponse_AccountEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType          `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha12.Account `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchAccountResponse_AccountEvent) Reset() {
	*x = WatchAccountResponse_AccountEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchAccountResponse_AccountEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchAccountResponse_AccountEvent) ProtoMessage() {}

func (x *WatchAccountResponse_AccountEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchAccountResponse_AccountEvent.ProtoReflect.Descriptor instead.
func (*WatchAccountResponse_AccountEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{19, 0}
}

func (x *WatchAccountResponse_AccountEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchAccountResponse_AccountEvent) GetObject() *v1alpha12.Account {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchAlertResponse_AlertEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType        `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha12.Alert `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchAlertResponse_AlertEvent) Reset() {
	*x = WatchAlertResponse_AlertEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchAlertResponse_AlertEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchAlertResponse_AlertEvent) ProtoMessage() {}

func (x *WatchAlertResponse_AlertEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchAlertResponse_AlertEvent.ProtoReflect.Descriptor instead.
func (*WatchAlertResponse_AlertEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{20, 0}
}

func (x *WatchAlertResponse_AlertEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchAlertResponse_AlertEvent) GetObject() *v1alpha12.Alert {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchAttachmentResponse_AttachmentEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType             `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha12.Attachment `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchAttachmentResponse_AttachmentEvent) Reset() {
	*x = WatchAttachmentResponse_AttachmentEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchAttachmentResponse_AttachmentEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchAttachmentResponse_AttachmentEvent) ProtoMessage() {}

func (x *WatchAttachmentResponse_AttachmentEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchAttachmentResponse_AttachmentEvent.ProtoReflect.Descriptor instead.
func (*WatchAttachmentResponse_AttachmentEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{21, 0}
}

func (x *WatchAttachmentResponse_AttachmentEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchAttachmentResponse_AttachmentEvent) GetObject() *v1alpha12.Attachment {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchConnectionResponse_ConnectionEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType             `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha12.Connection `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchConnectionResponse_ConnectionEvent) Reset() {
	*x = WatchConnectionResponse_ConnectionEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchConnectionResponse_ConnectionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchConnectionResponse_ConnectionEvent) ProtoMessage() {}

func (x *WatchConnectionResponse_ConnectionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchConnectionResponse_ConnectionEvent.ProtoReflect.Descriptor instead.
func (*WatchConnectionResponse_ConnectionEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{22, 0}
}

func (x *WatchConnectionResponse_ConnectionEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchConnectionResponse_ConnectionEvent) GetObject() *v1alpha12.Connection {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchLabResponse_LabEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType      `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha12.Lab `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchLabResponse_LabEvent) Reset() {
	*x = WatchLabResponse_LabEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchLabResponse_LabEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchLabResponse_LabEvent) ProtoMessage() {}

func (x *WatchLabResponse_LabEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchLabResponse_LabEvent.ProtoReflect.Descriptor instead.
func (*WatchLabResponse_LabEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{23, 0}
}

func (x *WatchLabResponse_LabEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchLabResponse_LabEvent) GetObject() *v1alpha12.Lab {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchLicenseResponse_LicenseEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType          `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha12.License `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchLicenseResponse_LicenseEvent) Reset() {
	*x = WatchLicenseResponse_LicenseEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchLicenseResponse_LicenseEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchLicenseResponse_LicenseEvent) ProtoMessage() {}

func (x *WatchLicenseResponse_LicenseEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchLicenseResponse_LicenseEvent.ProtoReflect.Descriptor instead.
func (*WatchLicenseResponse_LicenseEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{24, 0}
}

func (x *WatchLicenseResponse_LicenseEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchLicenseResponse_LicenseEvent) GetObject() *v1alpha12.License {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchNotifierResponse_NotifierEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType          `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha12.License `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchNotifierResponse_NotifierEvent) Reset() {
	*x = WatchNotifierResponse_NotifierEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchNotifierResponse_NotifierEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchNotifierResponse_NotifierEvent) ProtoMessage() {}

func (x *WatchNotifierResponse_NotifierEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchNotifierResponse_NotifierEvent.ProtoReflect.Descriptor instead.
func (*WatchNotifierResponse_NotifierEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{25, 0}
}

func (x *WatchNotifierResponse_NotifierEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchNotifierResponse_NotifierEvent) GetObject() *v1alpha12.License {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchServingsiteResponse_ServingsiteEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType              `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha12.ServingSite `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchServingsiteResponse_ServingsiteEvent) Reset() {
	*x = WatchServingsiteResponse_ServingsiteEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchServingsiteResponse_ServingsiteEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchServingsiteResponse_ServingsiteEvent) ProtoMessage() {}

func (x *WatchServingsiteResponse_ServingsiteEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchServingsiteResponse_ServingsiteEvent.ProtoReflect.Descriptor instead.
func (*WatchServingsiteResponse_ServingsiteEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{26, 0}
}

func (x *WatchServingsiteResponse_ServingsiteEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchServingsiteResponse_ServingsiteEvent) GetObject() *v1alpha12.ServingSite {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchTenantResponse_TenantEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType         `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha12.Tenant `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchTenantResponse_TenantEvent) Reset() {
	*x = WatchTenantResponse_TenantEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchTenantResponse_TenantEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchTenantResponse_TenantEvent) ProtoMessage() {}

func (x *WatchTenantResponse_TenantEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchTenantResponse_TenantEvent.ProtoReflect.Descriptor instead.
func (*WatchTenantResponse_TenantEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{27, 0}
}

func (x *WatchTenantResponse_TenantEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchTenantResponse_TenantEvent) GetObject() *v1alpha12.Tenant {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchUserclassResponse_UserclassEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType                `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha12.UserRoleClass `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchUserclassResponse_UserclassEvent) Reset() {
	*x = WatchUserclassResponse_UserclassEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchUserclassResponse_UserclassEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchUserclassResponse_UserclassEvent) ProtoMessage() {}

func (x *WatchUserclassResponse_UserclassEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchUserclassResponse_UserclassEvent.ProtoReflect.Descriptor instead.
func (*WatchUserclassResponse_UserclassEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{28, 0}
}

func (x *WatchUserclassResponse_UserclassEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchUserclassResponse_UserclassEvent) GetObject() *v1alpha12.UserRoleClass {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchVirtualBucketResponse_VirtualBucketEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType                `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha12.VirtualBucket `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchVirtualBucketResponse_VirtualBucketEvent) Reset() {
	*x = WatchVirtualBucketResponse_VirtualBucketEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchVirtualBucketResponse_VirtualBucketEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchVirtualBucketResponse_VirtualBucketEvent) ProtoMessage() {}

func (x *WatchVirtualBucketResponse_VirtualBucketEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchVirtualBucketResponse_VirtualBucketEvent.ProtoReflect.Descriptor instead.
func (*WatchVirtualBucketResponse_VirtualBucketEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{29, 0}
}

func (x *WatchVirtualBucketResponse_VirtualBucketEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchVirtualBucketResponse_VirtualBucketEvent) GetObject() *v1alpha12.VirtualBucket {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchDataAppResponse_DataAppEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType                `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha12.VirtualBucket `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchDataAppResponse_DataAppEvent) Reset() {
	*x = WatchDataAppResponse_DataAppEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchDataAppResponse_DataAppEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchDataAppResponse_DataAppEvent) ProtoMessage() {}

func (x *WatchDataAppResponse_DataAppEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchDataAppResponse_DataAppEvent.ProtoReflect.Descriptor instead.
func (*WatchDataAppResponse_DataAppEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{30, 0}
}

func (x *WatchDataAppResponse_DataAppEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchDataAppResponse_DataAppEvent) GetObject() *v1alpha12.VirtualBucket {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchPredictionResponse_DataAppEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType                `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha12.VirtualBucket `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchPredictionResponse_DataAppEvent) Reset() {
	*x = WatchPredictionResponse_DataAppEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchPredictionResponse_DataAppEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchPredictionResponse_DataAppEvent) ProtoMessage() {}

func (x *WatchPredictionResponse_DataAppEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchPredictionResponse_DataAppEvent.ProtoReflect.Descriptor instead.
func (*WatchPredictionResponse_DataAppEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{31, 0}
}

func (x *WatchPredictionResponse_DataAppEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchPredictionResponse_DataAppEvent) GetObject() *v1alpha12.VirtualBucket {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchPredictionRunResponse_PredicitonRunEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType                `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha13.PredictionRun `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchPredictionRunResponse_PredicitonRunEvent) Reset() {
	*x = WatchPredictionRunResponse_PredicitonRunEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchPredictionRunResponse_PredicitonRunEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchPredictionRunResponse_PredicitonRunEvent) ProtoMessage() {}

func (x *WatchPredictionRunResponse_PredicitonRunEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchPredictionRunResponse_PredicitonRunEvent.ProtoReflect.Descriptor instead.
func (*WatchPredictionRunResponse_PredicitonRunEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{32, 0}
}

func (x *WatchPredictionRunResponse_PredicitonRunEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchPredictionRunResponse_PredicitonRunEvent) GetObject() *v1alpha13.PredictionRun {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchPredictorResponse_PredictorEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType            `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha13.Predictor `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchPredictorResponse_PredictorEvent) Reset() {
	*x = WatchPredictorResponse_PredictorEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchPredictorResponse_PredictorEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchPredictorResponse_PredictorEvent) ProtoMessage() {}

func (x *WatchPredictorResponse_PredictorEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchPredictorResponse_PredictorEvent.ProtoReflect.Descriptor instead.
func (*WatchPredictorResponse_PredictorEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{33, 0}
}

func (x *WatchPredictorResponse_PredictorEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchPredictorResponse_PredictorEvent) GetObject() *v1alpha13.Predictor {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchPostmortemResponse_PostmortemEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType             `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha14.PostMortem `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchPostmortemResponse_PostmortemEvent) Reset() {
	*x = WatchPostmortemResponse_PostmortemEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchPostmortemResponse_PostmortemEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchPostmortemResponse_PostmortemEvent) ProtoMessage() {}

func (x *WatchPostmortemResponse_PostmortemEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchPostmortemResponse_PostmortemEvent.ProtoReflect.Descriptor instead.
func (*WatchPostmortemResponse_PostmortemEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{34, 0}
}

func (x *WatchPostmortemResponse_PostmortemEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchPostmortemResponse_PostmortemEvent) GetObject() *v1alpha14.PostMortem {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchReviewResponse_ReviewEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType             `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha14.PostMortem `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchReviewResponse_ReviewEvent) Reset() {
	*x = WatchReviewResponse_ReviewEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchReviewResponse_ReviewEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchReviewResponse_ReviewEvent) ProtoMessage() {}

func (x *WatchReviewResponse_ReviewEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchReviewResponse_ReviewEvent.ProtoReflect.Descriptor instead.
func (*WatchReviewResponse_ReviewEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{35, 0}
}

func (x *WatchReviewResponse_ReviewEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchReviewResponse_ReviewEvent) GetObject() *v1alpha14.PostMortem {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchRunbookResponse_RunbookEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType          `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha14.RunBook `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchRunbookResponse_RunbookEvent) Reset() {
	*x = WatchRunbookResponse_RunbookEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchRunbookResponse_RunbookEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchRunbookResponse_RunbookEvent) ProtoMessage() {}

func (x *WatchRunbookResponse_RunbookEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchRunbookResponse_RunbookEvent.ProtoReflect.Descriptor instead.
func (*WatchRunbookResponse_RunbookEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{36, 0}
}

func (x *WatchRunbookResponse_RunbookEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchRunbookResponse_RunbookEvent) GetObject() *v1alpha14.RunBook {
	if x != nil {
		return x.Object
	}
	return nil
}

type WatchTodoResponse_TodoEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event  EventType       `protobuf:"varint,1,opt,name=event,proto3,enum=github.com.metaprov.modelaapi.services.watcherd.v1.EventType" json:"event,omitempty"`
	Object *v1alpha14.Todo `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *WatchTodoResponse_TodoEvent) Reset() {
	*x = WatchTodoResponse_TodoEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchTodoResponse_TodoEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchTodoResponse_TodoEvent) ProtoMessage() {}

func (x *WatchTodoResponse_TodoEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchTodoResponse_TodoEvent.ProtoReflect.Descriptor instead.
func (*WatchTodoResponse_TodoEvent) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP(), []int{37, 0}
}

func (x *WatchTodoResponse_TodoEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EVENT_UPDATE
}

func (x *WatchTodoResponse_TodoEvent) GetObject() *v1alpha14.Todo {
	if x != nil {
		return x.Object
	}
	return nil
}

var File_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto protoreflect.FileDescriptor

var file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDesc = []byte{
	0x0a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72,
	0x64, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x49,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70,
	0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69,
	0x73, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70,
	0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6b, 0x0a, 0x13,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x22, 0xfb, 0x02, 0x0a, 0x19, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x77, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x1a, 0xc4, 0x01, 0x0a, 0x11, 0x44, 0x61, 0x74, 0x61, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x5a, 0x0a, 0x06, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x8a, 0x03, 0x0a, 0x1c, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x44, 0x61, 0x74, 0x61, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7d, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x65, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xca, 0x01, 0x0a, 0x14, 0x44, 0x61, 0x74, 0x61,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x53, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x5d, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x06, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x22, 0xf6, 0x02, 0x0a, 0x18, 0x57, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61,
	0x74, 0x61, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x75, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x5d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xc2, 0x01, 0x0a, 0x10, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x59, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x41, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x9a, 0x03,
	0x0a, 0x1f, 0x57, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x83, 0x01, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x6b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xd0, 0x01, 0x0a, 0x17, 0x44, 0x61, 0x74, 0x61,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x60, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xdd, 0x02, 0x0a, 0x13, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x6b, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a,
	0xb8, 0x01, 0x0a, 0x0b, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x53, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x54, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x8f, 0x03, 0x0a, 0x1d, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7f, 0x0a, 0x06,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x67, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xcc, 0x01,
	0x0a, 0x15, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x5e, 0x0a, 0x06,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xfb, 0x02, 0x0a,
	0x19, 0x57, 0x61, 0x74, 0x63, 0x68, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x77, 0x0a, 0x06, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5f, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x1a, 0xc4, 0x01, 0x0a, 0x11, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x5a,
	0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xdd, 0x02, 0x0a, 0x13, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x6b, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x69,
	0x70, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a,
	0xb8, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x53, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x54, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x69,
	0x70, 0x65, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xec, 0x02, 0x0a, 0x16, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x71, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x59, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x75, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xbe, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x52, 0x75, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x57, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x75,
	0x6e, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xe8, 0x02, 0x0a, 0x14, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x6f, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x57, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x52, 0x75, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x1a, 0xbe, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x75,
	0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x57, 0x0a, 0x06, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x06, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x22, 0xf8, 0x02, 0x0a, 0x1c, 0x57, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x77, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x75,
	0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xbe,
	0x01, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x75, 0x6e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x57, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65,
	0x63, 0x69, 0x70, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22,
	0xf1, 0x02, 0x0a, 0x17, 0x57, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x73, 0x0a, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5b, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x1a, 0xc0, 0x01, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x58, 0x0a, 0x06, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x22, 0xdc, 0x02, 0x0a, 0x12, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x69, 0x0a, 0x06, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xba, 0x01, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x57, 0x0a, 0x06, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x22, 0xf0, 0x02, 0x0a, 0x17, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x73,
	0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5b,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x1a, 0xbf, 0x01, 0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x57, 0x0a, 0x06,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x06, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x84, 0x03, 0x0a, 0x1a, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x79, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52,
	0x75, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a,
	0xca, 0x01, 0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75,
	0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x5f, 0x0a, 0x06, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x52, 0x75, 0x6e, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xe1, 0x02, 0x0a,
	0x13, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6b, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x1a, 0xbc, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x58, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x22, 0xdc, 0x02, 0x0a, 0x12, 0x57, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x69, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x53, 0x74, 0x75, 0x64, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x1a, 0xba, 0x01, 0x0a, 0x0a, 0x53, 0x74, 0x75, 0x64, 0x79, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x57, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22,
	0xeb, 0x02, 0x0a, 0x15, 0x57, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x75,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6f, 0x0a, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x57, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x75, 0x6e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xc0, 0x01, 0x0a, 0x0d, 0x53,
	0x74, 0x75, 0x64, 0x79, 0x52, 0x75, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x5a, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x42, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x52, 0x75, 0x6e, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xe3, 0x02,
	0x0a, 0x14, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6d, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x55, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xbb, 0x01, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x56, 0x0a, 0x06, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x22, 0xd9, 0x02, 0x0a, 0x12, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x69, 0x0a, 0x06, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xb7, 0x01, 0x0a, 0x0a, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x54, 0x0a, 0x06, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22,
	0xf2, 0x02, 0x0a, 0x17, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x73, 0x0a, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5b, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x1a, 0xc1, 0x01, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x59, 0x0a, 0x06, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x22, 0xf2, 0x02, 0x0a, 0x17, 0x57, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x73, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x5b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xc1, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x59,
	0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xcf, 0x02, 0x0a, 0x10, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x4c, 0x61, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x65,
	0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4d,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x62, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x61, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xb3, 0x01, 0x0a, 0x08, 0x4c, 0x61, 0x62, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x52, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x4c, 0x61, 0x62, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xe3, 0x02, 0x0a, 0x14,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6d, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x55, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x1a, 0xbb, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x56, 0x0a, 0x06, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x22, 0xe7, 0x02, 0x0a, 0x15, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6f, 0x0a, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x57, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xbc, 0x01, 0x0a,
	0x0d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x53,
	0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70,
	0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x56, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xf7, 0x02, 0x0a, 0x18,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x73, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x75, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x73, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x73, 0x69,
	0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a,
	0xc3, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x73, 0x69, 0x74, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x5a, 0x0a, 0x06, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x52, 0x06, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xde, 0x02, 0x0a, 0x13, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6b, 0x0a,
	0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x53, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70,
	0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xb9, 0x01, 0x0a, 0x0b, 0x54,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x55, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x06,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xf1, 0x02, 0x0a, 0x16, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x55, 0x73, 0x65, 0x72, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x71, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x59, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x1a, 0xc3, 0x01, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x5c, 0x0a, 0x06,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x81, 0x03, 0x0a, 0x1a, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x79, 0x0a, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x1a, 0xc7, 0x01, 0x0a, 0x12, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x5c, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x44, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xe9,
	0x02, 0x0a, 0x14, 0x57, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6d, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x55, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x41, 0x70, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xc1, 0x01, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x41,
	0x70, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x5c, 0x0a, 0x06,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x42, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xef, 0x02, 0x0a, 0x17, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x70, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x58, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x41, 0x70, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xc1, 0x01, 0x0a, 0x0c, 0x44, 0x61, 0x74,
	0x61, 0x41, 0x70, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x5c,
	0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x85, 0x03, 0x0a,
	0x1a, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x79, 0x0a, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x61, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x72, 0x65, 0x64,
	0x69, 0x63, 0x69, 0x74, 0x6f, 0x6e, 0x52, 0x75, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xcb, 0x01, 0x0a, 0x12, 0x50, 0x72, 0x65, 0x64, 0x69,
	0x63, 0x69, 0x74, 0x6f, 0x6e, 0x52, 0x75, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x60, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6e, 0x52, 0x06, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x22, 0xf1, 0x02, 0x0a, 0x16, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x71, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x59, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x72, 0x65, 0x64,
	0x69, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x1a, 0xc3, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x6f, 0x72,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x5c, 0x0a, 0x06, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xf1, 0x02, 0x0a, 0x17, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x6f, 0x73, 0x74, 0x6d, 0x6f, 0x72, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x73, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x5b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50,
	0x6f, 0x73, 0x74, 0x6d, 0x6f, 0x72, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x6d, 0x6f, 0x72, 0x74, 0x65, 0x6d, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xc0, 0x01, 0x0a, 0x0f, 0x50, 0x6f,
	0x73, 0x74, 0x6d, 0x6f, 0x72, 0x74, 0x65, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x58, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x74, 0x65, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x6f,
	0x72, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xe1, 0x02, 0x0a,
	0x13, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6b, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x1a, 0xbc, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x58, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x74, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x4d, 0x6f, 0x72, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x22, 0xe2, 0x02, 0x0a, 0x14, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x75, 0x6e, 0x62, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6d, 0x0a, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x55, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x75, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xba, 0x01, 0x0a, 0x0c, 0x52, 0x75, 0x6e,
	0x62, 0x6f, 0x6f, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x55,
	0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x06, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xd3, 0x02, 0x0a, 0x11, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54,
	0x6f, 0x64, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x67, 0x0a, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54, 0x6f, 0x64, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x54, 0x6f, 0x64, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x1a, 0xb4, 0x01, 0x0a, 0x09, 0x54, 0x6f, 0x64, 0x6f, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x52, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54,
	0x6f, 0x64, 0x6f, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2a, 0x2f, 0x0a, 0x09, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x01, 0x32, 0xb5, 0x31, 0x0a,
	0x0f, 0x57, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0xad, 0x01, 0x0a, 0x11, 0x57, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0x4d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0xb3, 0x01, 0x0a, 0x14, 0x57, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x1a, 0x50, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74,
	0x61, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xab, 0x01, 0x0a, 0x10, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x44, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x47, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x4c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x44,
	0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0xb9, 0x01, 0x0a, 0x17, 0x57, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0xa1, 0x01, 0x0a, 0x0b, 0x57, 0x61, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0xb5, 0x01, 0x0a, 0x15, 0x57, 0x61, 0x74, 0x63, 0x68, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x47,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x51, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xad, 0x01, 0x0a,
	0x11, 0x57, 0x61, 0x74, 0x63, 0x68, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x4d, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa1, 0x01, 0x0a,
	0x0b, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x12, 0x47, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0xa7, 0x01, 0x0a, 0x0e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65,
	0x52, 0x75, 0x6e, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x4a, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x75, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa3, 0x01, 0x0a, 0x0c, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x47, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0xb3, 0x01, 0x0a, 0x14, 0x57, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x1a, 0x50, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xae, 0x01, 0x0a, 0x0f, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0x50, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9f, 0x01, 0x0a, 0x0a, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0x46, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa9, 0x01, 0x0a, 0x0f, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x47, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70,
	0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x4b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xaf, 0x01, 0x0a, 0x12, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x12, 0x47, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x4e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa1, 0x01, 0x0a, 0x0b, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x1a, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9f, 0x01, 0x0a, 0x0a,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x75, 0x64, 0x79, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0x46, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74,
	0x75, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa5, 0x01,
	0x0a, 0x0d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x75, 0x6e, 0x12,
	0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x49, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa3, 0x01, 0x0a, 0x0c, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9f, 0x01, 0x0a, 0x0a,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0x46, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xaa, 0x01,
	0x0a, 0x10, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x4b, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa9, 0x01, 0x0a, 0x0f, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x4b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9b, 0x01, 0x0a, 0x08, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x4c, 0x61, 0x62, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x44, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0xa3, 0x01, 0x0a, 0x0c, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x48,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa5, 0x01, 0x0a, 0x0d, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x47, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x49, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0xab, 0x01, 0x0a, 0x10, 0x57, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x1a, 0x4c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x6e, 0x67, 0x73, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0xa1, 0x01, 0x0a, 0x0b, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x12, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0xa7, 0x01, 0x0a, 0x0e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x55, 0x73,
	0x65, 0x72, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x1a, 0x4a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xaf,
	0x01, 0x0a, 0x12, 0x57, 0x61, 0x74, 0x63, 0x68, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x4e,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0xa3, 0x01, 0x0a, 0x0c, 0x57, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x41, 0x70,
	0x70, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x48, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa9, 0x01, 0x0a, 0x0f, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0x4b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0xaf, 0x01, 0x0a, 0x12, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x65, 0x64,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6e, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x1a, 0x4e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x65,
	0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0xa7, 0x01, 0x0a, 0x0e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x1a, 0x4a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x65, 0x64, 0x69,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa9,
	0x01, 0x0a, 0x0f, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x73, 0x74, 0x6d, 0x6f, 0x72, 0x74,
	0x65, 0x6d, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x4b, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x73, 0x74, 0x6d, 0x6f, 0x72, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa1, 0x01, 0x0a, 0x0b, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa3,
	0x01, 0x0a, 0x0c, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x75, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x12,
	0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x75, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x9d, 0x01, 0x0a, 0x09, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54, 0x6f,
	0x64, 0x6f, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x45, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54, 0x6f, 0x64, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescOnce sync.Once
	file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescData = file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDesc
)

func file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescGZIP() []byte {
	file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescOnce.Do(func() {
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescData)
	})
	return file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDescData
}

var file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes = make([]protoimpl.MessageInfo, 75)
var file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_goTypes = []interface{}{
	(EventType)(0),                                                  // 0: github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	(*WatchRequestOptions)(nil),                                     // 1: github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	(*WatchDatapipelineResponse)(nil),                               // 2: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatapipelineResponse
	(*WatchDatapipelineRunResponse)(nil),                            // 3: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatapipelineRunResponse
	(*WatchDataProductResponse)(nil),                                // 4: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDataProductResponse
	(*WatchDataProductVersionResponse)(nil),                         // 5: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDataProductVersionResponse
	(*WatchEntityResponse)(nil),                                     // 6: github.com.metaprov.modelaapi.services.watcherd.v1.WatchEntityResponse
	(*WatchFeatureHistogramResponse)(nil),                           // 7: github.com.metaprov.modelaapi.services.watcherd.v1.WatchFeatureHistogramResponse
	(*WatchFeatureGroupResponse)(nil),                               // 8: github.com.metaprov.modelaapi.services.watcherd.v1.WatchFeatureGroupResponse
	(*WatchRecipeResponse)(nil),                                     // 9: github.com.metaprov.modelaapi.services.watcherd.v1.WatchRecipeResponse
	(*WatchRecipeRunResponse)(nil),                                  // 10: github.com.metaprov.modelaapi.services.watcherd.v1.WatchRecipeRunResponse
	(*WatchDatasetResponse)(nil),                                    // 11: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse
	(*WatchDatasetSnapshotResponse)(nil),                            // 12: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse
	(*WatchDatasourceResponse)(nil),                                 // 13: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasourceResponse
	(*WatchModelResponse)(nil),                                      // 14: github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse
	(*WatchModelClassResponse)(nil),                                 // 15: github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelClassResponse
	(*WatchModelClassRunResponse)(nil),                              // 16: github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelClassRunResponse
	(*WatchReportResponse)(nil),                                     // 17: github.com.metaprov.modelaapi.services.watcherd.v1.WatchReportResponse
	(*WatchStudyResponse)(nil),                                      // 18: github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse
	(*WatchStudyRunResponse)(nil),                                   // 19: github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse
	(*WatchAccountResponse)(nil),                                    // 20: github.com.metaprov.modelaapi.services.watcherd.v1.WatchAccountResponse
	(*WatchAlertResponse)(nil),                                      // 21: github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse
	(*WatchAttachmentResponse)(nil),                                 // 22: github.com.metaprov.modelaapi.services.watcherd.v1.WatchAttachmentResponse
	(*WatchConnectionResponse)(nil),                                 // 23: github.com.metaprov.modelaapi.services.watcherd.v1.WatchConnectionResponse
	(*WatchLabResponse)(nil),                                        // 24: github.com.metaprov.modelaapi.services.watcherd.v1.WatchLabResponse
	(*WatchLicenseResponse)(nil),                                    // 25: github.com.metaprov.modelaapi.services.watcherd.v1.WatchLicenseResponse
	(*WatchNotifierResponse)(nil),                                   // 26: github.com.metaprov.modelaapi.services.watcherd.v1.WatchNotifierResponse
	(*WatchServingsiteResponse)(nil),                                // 27: github.com.metaprov.modelaapi.services.watcherd.v1.WatchServingsiteResponse
	(*WatchTenantResponse)(nil),                                     // 28: github.com.metaprov.modelaapi.services.watcherd.v1.WatchTenantResponse
	(*WatchUserclassResponse)(nil),                                  // 29: github.com.metaprov.modelaapi.services.watcherd.v1.WatchUserclassResponse
	(*WatchVirtualBucketResponse)(nil),                              // 30: github.com.metaprov.modelaapi.services.watcherd.v1.WatchVirtualBucketResponse
	(*WatchDataAppResponse)(nil),                                    // 31: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDataAppResponse
	(*WatchPredictionResponse)(nil),                                 // 32: github.com.metaprov.modelaapi.services.watcherd.v1.WatchPredictionResponse
	(*WatchPredictionRunResponse)(nil),                              // 33: github.com.metaprov.modelaapi.services.watcherd.v1.WatchPredictionRunResponse
	(*WatchPredictorResponse)(nil),                                  // 34: github.com.metaprov.modelaapi.services.watcherd.v1.WatchPredictorResponse
	(*WatchPostmortemResponse)(nil),                                 // 35: github.com.metaprov.modelaapi.services.watcherd.v1.WatchPostmortemResponse
	(*WatchReviewResponse)(nil),                                     // 36: github.com.metaprov.modelaapi.services.watcherd.v1.WatchReviewResponse
	(*WatchRunbookResponse)(nil),                                    // 37: github.com.metaprov.modelaapi.services.watcherd.v1.WatchRunbookResponse
	(*WatchTodoResponse)(nil),                                       // 38: github.com.metaprov.modelaapi.services.watcherd.v1.WatchTodoResponse
	(*WatchDatapipelineResponse_DatapipelineEvent)(nil),             // 39: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatapipelineResponse.DatapipelineEvent
	(*WatchDatapipelineRunResponse_DatapipelineRunEvent)(nil),       // 40: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatapipelineRunResponse.DatapipelineRunEvent
	(*WatchDataProductResponse_DataProductEvent)(nil),               // 41: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDataProductResponse.DataProductEvent
	(*WatchDataProductVersionResponse_DataProductVersionEvent)(nil), // 42: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDataProductVersionResponse.DataProductVersionEvent
	(*WatchEntityResponse_EntityEvent)(nil),                         // 43: github.com.metaprov.modelaapi.services.watcherd.v1.WatchEntityResponse.EntityEvent
	(*WatchFeatureHistogramResponse_FeatureHistogramEvent)(nil),     // 44: github.com.metaprov.modelaapi.services.watcherd.v1.WatchFeatureHistogramResponse.FeatureHistogramEvent
	(*WatchFeatureGroupResponse_FeatureGroupEvent)(nil),             // 45: github.com.metaprov.modelaapi.services.watcherd.v1.WatchFeatureGroupResponse.FeatureGroupEvent
	(*WatchRecipeResponse_RecipeEvent)(nil),                         // 46: github.com.metaprov.modelaapi.services.watcherd.v1.WatchRecipeResponse.RecipeEvent
	(*WatchRecipeRunResponse_RecipeRunEvent)(nil),                   // 47: github.com.metaprov.modelaapi.services.watcherd.v1.WatchRecipeRunResponse.RecipeRunEvent
	(*WatchDatasetResponse_RecipeRunEvent)(nil),                     // 48: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.RecipeRunEvent
	(*WatchDatasetSnapshotResponse_RecipeRunEvent)(nil),             // 49: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.RecipeRunEvent
	(*WatchDatasourceResponse_DatasourceEvent)(nil),                 // 50: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasourceResponse.DatasourceEvent
	(*WatchModelResponse_ModelEvent)(nil),                           // 51: github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent
	(*WatchModelClassResponse_ModelClassEvent)(nil),                 // 52: github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelClassResponse.ModelClassEvent
	(*WatchModelClassRunResponse_ModelClassRunEvent)(nil),           // 53: github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelClassRunResponse.ModelClassRunEvent
	(*WatchReportResponse_ReportEvent)(nil),                         // 54: github.com.metaprov.modelaapi.services.watcherd.v1.WatchReportResponse.ReportEvent
	(*WatchStudyResponse_StudyEvent)(nil),                           // 55: github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent
	(*WatchStudyRunResponse_StudyRunEvent)(nil),                     // 56: github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent
	(*WatchAccountResponse_AccountEvent)(nil),                       // 57: github.com.metaprov.modelaapi.services.watcherd.v1.WatchAccountResponse.AccountEvent
	(*WatchAlertResponse_AlertEvent)(nil),                           // 58: github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent
	(*WatchAttachmentResponse_AttachmentEvent)(nil),                 // 59: github.com.metaprov.modelaapi.services.watcherd.v1.WatchAttachmentResponse.AttachmentEvent
	(*WatchConnectionResponse_ConnectionEvent)(nil),                 // 60: github.com.metaprov.modelaapi.services.watcherd.v1.WatchConnectionResponse.ConnectionEvent
	(*WatchLabResponse_LabEvent)(nil),                               // 61: github.com.metaprov.modelaapi.services.watcherd.v1.WatchLabResponse.LabEvent
	(*WatchLicenseResponse_LicenseEvent)(nil),                       // 62: github.com.metaprov.modelaapi.services.watcherd.v1.WatchLicenseResponse.LicenseEvent
	(*WatchNotifierResponse_NotifierEvent)(nil),                     // 63: github.com.metaprov.modelaapi.services.watcherd.v1.WatchNotifierResponse.NotifierEvent
	(*WatchServingsiteResponse_ServingsiteEvent)(nil),               // 64: github.com.metaprov.modelaapi.services.watcherd.v1.WatchServingsiteResponse.ServingsiteEvent
	(*WatchTenantResponse_TenantEvent)(nil),                         // 65: github.com.metaprov.modelaapi.services.watcherd.v1.WatchTenantResponse.TenantEvent
	(*WatchUserclassResponse_UserclassEvent)(nil),                   // 66: github.com.metaprov.modelaapi.services.watcherd.v1.WatchUserclassResponse.UserclassEvent
	(*WatchVirtualBucketResponse_VirtualBucketEvent)(nil),           // 67: github.com.metaprov.modelaapi.services.watcherd.v1.WatchVirtualBucketResponse.VirtualBucketEvent
	(*WatchDataAppResponse_DataAppEvent)(nil),                       // 68: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDataAppResponse.DataAppEvent
	(*WatchPredictionResponse_DataAppEvent)(nil),                    // 69: github.com.metaprov.modelaapi.services.watcherd.v1.WatchPredictionResponse.DataAppEvent
	(*WatchPredictionRunResponse_PredicitonRunEvent)(nil),           // 70: github.com.metaprov.modelaapi.services.watcherd.v1.WatchPredictionRunResponse.PredicitonRunEvent
	(*WatchPredictorResponse_PredictorEvent)(nil),                   // 71: github.com.metaprov.modelaapi.services.watcherd.v1.WatchPredictorResponse.PredictorEvent
	(*WatchPostmortemResponse_PostmortemEvent)(nil),                 // 72: github.com.metaprov.modelaapi.services.watcherd.v1.WatchPostmortemResponse.PostmortemEvent
	(*WatchReviewResponse_ReviewEvent)(nil),                         // 73: github.com.metaprov.modelaapi.services.watcherd.v1.WatchReviewResponse.ReviewEvent
	(*WatchRunbookResponse_RunbookEvent)(nil),                       // 74: github.com.metaprov.modelaapi.services.watcherd.v1.WatchRunbookResponse.RunbookEvent
	(*WatchTodoResponse_TodoEvent)(nil),                             // 75: github.com.metaprov.modelaapi.services.watcherd.v1.WatchTodoResponse.TodoEvent
	(*v1alpha1.DataPipeline)(nil),                                   // 76: github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataPipeline
	(*v1alpha1.DataPipelineRun)(nil),                                // 77: github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataPipelineRun
	(*v1alpha1.DataProduct)(nil),                                    // 78: github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct
	(*v1alpha1.DataProductVersion)(nil),                             // 79: github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProductVersion
	(*v1alpha1.Entity)(nil),                                         // 80: github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Entity
	(*v1alpha1.FeatureHistogram)(nil),                               // 81: github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.FeatureHistogram
	(*v1alpha1.FeatureGroup)(nil),                                   // 82: github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.FeatureGroup
	(*v1alpha1.Recipe)(nil),                                         // 83: github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Recipe
	(*v1alpha1.RecipeRun)(nil),                                      // 84: github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.RecipeRun
	(*v1alpha1.DataSource)(nil),                                     // 85: github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataSource
	(*v1alpha11.Model)(nil),                                         // 86: github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Model
	(*v1alpha11.ModelClassRun)(nil),                                 // 87: github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassRun
	(*v1alpha11.Report)(nil),                                        // 88: github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Report
	(*v1alpha11.Study)(nil),                                         // 89: github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study
	(*v1alpha11.StudyRun)(nil),                                      // 90: github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.StudyRun
	(*v1alpha12.Account)(nil),                                       // 91: github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account
	(*v1alpha12.Alert)(nil),                                         // 92: github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert
	(*v1alpha12.Attachment)(nil),                                    // 93: github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment
	(*v1alpha12.Connection)(nil),                                    // 94: github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection
	(*v1alpha12.Lab)(nil),                                           // 95: github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab
	(*v1alpha12.License)(nil),                                       // 96: github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License
	(*v1alpha12.ServingSite)(nil),                                   // 97: github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite
	(*v1alpha12.Tenant)(nil),                                        // 98: github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant
	(*v1alpha12.UserRoleClass)(nil),                                 // 99: github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass
	(*v1alpha12.VirtualBucket)(nil),                                 // 100: github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket
	(*v1alpha13.PredictionRun)(nil),                                 // 101: github.com.metaprov.modelaapi.pkg.apis.inference.v1alpha1.PredictionRun
	(*v1alpha13.Predictor)(nil),                                     // 102: github.com.metaprov.modelaapi.pkg.apis.inference.v1alpha1.Predictor
	(*v1alpha14.PostMortem)(nil),                                    // 103: github.com.metaprov.modelaapi.pkg.apis.team.v1alpha1.PostMortem
	(*v1alpha14.RunBook)(nil),                                       // 104: github.com.metaprov.modelaapi.pkg.apis.team.v1alpha1.RunBook
	(*v1alpha14.Todo)(nil),                                          // 105: github.com.metaprov.modelaapi.pkg.apis.team.v1alpha1.Todo
}
var file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_depIdxs = []int32{
	39,  // 0: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatapipelineResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatapipelineResponse.DatapipelineEvent
	40,  // 1: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatapipelineRunResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatapipelineRunResponse.DatapipelineRunEvent
	41,  // 2: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDataProductResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchDataProductResponse.DataProductEvent
	42,  // 3: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDataProductVersionResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchDataProductVersionResponse.DataProductVersionEvent
	43,  // 4: github.com.metaprov.modelaapi.services.watcherd.v1.WatchEntityResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchEntityResponse.EntityEvent
	44,  // 5: github.com.metaprov.modelaapi.services.watcherd.v1.WatchFeatureHistogramResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchFeatureHistogramResponse.FeatureHistogramEvent
	45,  // 6: github.com.metaprov.modelaapi.services.watcherd.v1.WatchFeatureGroupResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchFeatureGroupResponse.FeatureGroupEvent
	46,  // 7: github.com.metaprov.modelaapi.services.watcherd.v1.WatchRecipeResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRecipeResponse.RecipeEvent
	47,  // 8: github.com.metaprov.modelaapi.services.watcherd.v1.WatchRecipeRunResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRecipeRunResponse.RecipeRunEvent
	48,  // 9: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.RecipeRunEvent
	49,  // 10: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.RecipeRunEvent
	50,  // 11: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasourceResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasourceResponse.DatasourceEvent
	51,  // 12: github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent
	52,  // 13: github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelClassResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelClassResponse.ModelClassEvent
	53,  // 14: github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelClassRunResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelClassRunResponse.ModelClassRunEvent
	54,  // 15: github.com.metaprov.modelaapi.services.watcherd.v1.WatchReportResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchReportResponse.ReportEvent
	55,  // 16: github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent
	56,  // 17: github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent
	57,  // 18: github.com.metaprov.modelaapi.services.watcherd.v1.WatchAccountResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchAccountResponse.AccountEvent
	58,  // 19: github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent
	59,  // 20: github.com.metaprov.modelaapi.services.watcherd.v1.WatchAttachmentResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchAttachmentResponse.AttachmentEvent
	60,  // 21: github.com.metaprov.modelaapi.services.watcherd.v1.WatchConnectionResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchConnectionResponse.ConnectionEvent
	61,  // 22: github.com.metaprov.modelaapi.services.watcherd.v1.WatchLabResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchLabResponse.LabEvent
	62,  // 23: github.com.metaprov.modelaapi.services.watcherd.v1.WatchLicenseResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchLicenseResponse.LicenseEvent
	63,  // 24: github.com.metaprov.modelaapi.services.watcherd.v1.WatchNotifierResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchNotifierResponse.NotifierEvent
	64,  // 25: github.com.metaprov.modelaapi.services.watcherd.v1.WatchServingsiteResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchServingsiteResponse.ServingsiteEvent
	65,  // 26: github.com.metaprov.modelaapi.services.watcherd.v1.WatchTenantResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchTenantResponse.TenantEvent
	66,  // 27: github.com.metaprov.modelaapi.services.watcherd.v1.WatchUserclassResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchUserclassResponse.UserclassEvent
	67,  // 28: github.com.metaprov.modelaapi.services.watcherd.v1.WatchVirtualBucketResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchVirtualBucketResponse.VirtualBucketEvent
	68,  // 29: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDataAppResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchDataAppResponse.DataAppEvent
	69,  // 30: github.com.metaprov.modelaapi.services.watcherd.v1.WatchPredictionResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchPredictionResponse.DataAppEvent
	70,  // 31: github.com.metaprov.modelaapi.services.watcherd.v1.WatchPredictionRunResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchPredictionRunResponse.PredicitonRunEvent
	71,  // 32: github.com.metaprov.modelaapi.services.watcherd.v1.WatchPredictorResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchPredictorResponse.PredictorEvent
	72,  // 33: github.com.metaprov.modelaapi.services.watcherd.v1.WatchPostmortemResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchPostmortemResponse.PostmortemEvent
	73,  // 34: github.com.metaprov.modelaapi.services.watcherd.v1.WatchReviewResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchReviewResponse.ReviewEvent
	74,  // 35: github.com.metaprov.modelaapi.services.watcherd.v1.WatchRunbookResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRunbookResponse.RunbookEvent
	75,  // 36: github.com.metaprov.modelaapi.services.watcherd.v1.WatchTodoResponse.events:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchTodoResponse.TodoEvent
	0,   // 37: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatapipelineResponse.DatapipelineEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	76,  // 38: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatapipelineResponse.DatapipelineEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataPipeline
	0,   // 39: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatapipelineRunResponse.DatapipelineRunEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	77,  // 40: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatapipelineRunResponse.DatapipelineRunEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataPipelineRun
	0,   // 41: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDataProductResponse.DataProductEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	78,  // 42: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDataProductResponse.DataProductEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct
	0,   // 43: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDataProductVersionResponse.DataProductVersionEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	79,  // 44: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDataProductVersionResponse.DataProductVersionEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProductVersion
	0,   // 45: github.com.metaprov.modelaapi.services.watcherd.v1.WatchEntityResponse.EntityEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	80,  // 46: github.com.metaprov.modelaapi.services.watcherd.v1.WatchEntityResponse.EntityEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Entity
	0,   // 47: github.com.metaprov.modelaapi.services.watcherd.v1.WatchFeatureHistogramResponse.FeatureHistogramEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	81,  // 48: github.com.metaprov.modelaapi.services.watcherd.v1.WatchFeatureHistogramResponse.FeatureHistogramEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.FeatureHistogram
	0,   // 49: github.com.metaprov.modelaapi.services.watcherd.v1.WatchFeatureGroupResponse.FeatureGroupEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	82,  // 50: github.com.metaprov.modelaapi.services.watcherd.v1.WatchFeatureGroupResponse.FeatureGroupEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.FeatureGroup
	0,   // 51: github.com.metaprov.modelaapi.services.watcherd.v1.WatchRecipeResponse.RecipeEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	83,  // 52: github.com.metaprov.modelaapi.services.watcherd.v1.WatchRecipeResponse.RecipeEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Recipe
	0,   // 53: github.com.metaprov.modelaapi.services.watcherd.v1.WatchRecipeRunResponse.RecipeRunEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	84,  // 54: github.com.metaprov.modelaapi.services.watcherd.v1.WatchRecipeRunResponse.RecipeRunEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.RecipeRun
	0,   // 55: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.RecipeRunEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	84,  // 56: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.RecipeRunEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.RecipeRun
	0,   // 57: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.RecipeRunEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	84,  // 58: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.RecipeRunEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.RecipeRun
	0,   // 59: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasourceResponse.DatasourceEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	85,  // 60: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasourceResponse.DatasourceEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataSource
	0,   // 61: github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	86,  // 62: github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Model
	0,   // 63: github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelClassResponse.ModelClassEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	86,  // 64: github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelClassResponse.ModelClassEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Model
	0,   // 65: github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelClassRunResponse.ModelClassRunEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	87,  // 66: github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelClassRunResponse.ModelClassRunEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassRun
	0,   // 67: github.com.metaprov.modelaapi.services.watcherd.v1.WatchReportResponse.ReportEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	88,  // 68: github.com.metaprov.modelaapi.services.watcherd.v1.WatchReportResponse.ReportEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Report
	0,   // 69: github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	89,  // 70: github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study
	0,   // 71: github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	90,  // 72: github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.StudyRun
	0,   // 73: github.com.metaprov.modelaapi.services.watcherd.v1.WatchAccountResponse.AccountEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	91,  // 74: github.com.metaprov.modelaapi.services.watcherd.v1.WatchAccountResponse.AccountEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account
	0,   // 75: github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	92,  // 76: github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert
	0,   // 77: github.com.metaprov.modelaapi.services.watcherd.v1.WatchAttachmentResponse.AttachmentEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	93,  // 78: github.com.metaprov.modelaapi.services.watcherd.v1.WatchAttachmentResponse.AttachmentEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment
	0,   // 79: github.com.metaprov.modelaapi.services.watcherd.v1.WatchConnectionResponse.ConnectionEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	94,  // 80: github.com.metaprov.modelaapi.services.watcherd.v1.WatchConnectionResponse.ConnectionEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection
	0,   // 81: github.com.metaprov.modelaapi.services.watcherd.v1.WatchLabResponse.LabEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	95,  // 82: github.com.metaprov.modelaapi.services.watcherd.v1.WatchLabResponse.LabEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab
	0,   // 83: github.com.metaprov.modelaapi.services.watcherd.v1.WatchLicenseResponse.LicenseEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	96,  // 84: github.com.metaprov.modelaapi.services.watcherd.v1.WatchLicenseResponse.LicenseEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License
	0,   // 85: github.com.metaprov.modelaapi.services.watcherd.v1.WatchNotifierResponse.NotifierEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	96,  // 86: github.com.metaprov.modelaapi.services.watcherd.v1.WatchNotifierResponse.NotifierEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License
	0,   // 87: github.com.metaprov.modelaapi.services.watcherd.v1.WatchServingsiteResponse.ServingsiteEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	97,  // 88: github.com.metaprov.modelaapi.services.watcherd.v1.WatchServingsiteResponse.ServingsiteEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite
	0,   // 89: github.com.metaprov.modelaapi.services.watcherd.v1.WatchTenantResponse.TenantEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	98,  // 90: github.com.metaprov.modelaapi.services.watcherd.v1.WatchTenantResponse.TenantEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant
	0,   // 91: github.com.metaprov.modelaapi.services.watcherd.v1.WatchUserclassResponse.UserclassEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	99,  // 92: github.com.metaprov.modelaapi.services.watcherd.v1.WatchUserclassResponse.UserclassEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass
	0,   // 93: github.com.metaprov.modelaapi.services.watcherd.v1.WatchVirtualBucketResponse.VirtualBucketEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	100, // 94: github.com.metaprov.modelaapi.services.watcherd.v1.WatchVirtualBucketResponse.VirtualBucketEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket
	0,   // 95: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDataAppResponse.DataAppEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	100, // 96: github.com.metaprov.modelaapi.services.watcherd.v1.WatchDataAppResponse.DataAppEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket
	0,   // 97: github.com.metaprov.modelaapi.services.watcherd.v1.WatchPredictionResponse.DataAppEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	100, // 98: github.com.metaprov.modelaapi.services.watcherd.v1.WatchPredictionResponse.DataAppEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket
	0,   // 99: github.com.metaprov.modelaapi.services.watcherd.v1.WatchPredictionRunResponse.PredicitonRunEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	101, // 100: github.com.metaprov.modelaapi.services.watcherd.v1.WatchPredictionRunResponse.PredicitonRunEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.inference.v1alpha1.PredictionRun
	0,   // 101: github.com.metaprov.modelaapi.services.watcherd.v1.WatchPredictorResponse.PredictorEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	102, // 102: github.com.metaprov.modelaapi.services.watcherd.v1.WatchPredictorResponse.PredictorEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.inference.v1alpha1.Predictor
	0,   // 103: github.com.metaprov.modelaapi.services.watcherd.v1.WatchPostmortemResponse.PostmortemEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	103, // 104: github.com.metaprov.modelaapi.services.watcherd.v1.WatchPostmortemResponse.PostmortemEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.team.v1alpha1.PostMortem
	0,   // 105: github.com.metaprov.modelaapi.services.watcherd.v1.WatchReviewResponse.ReviewEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	103, // 106: github.com.metaprov.modelaapi.services.watcherd.v1.WatchReviewResponse.ReviewEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.team.v1alpha1.PostMortem
	0,   // 107: github.com.metaprov.modelaapi.services.watcherd.v1.WatchRunbookResponse.RunbookEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	104, // 108: github.com.metaprov.modelaapi.services.watcherd.v1.WatchRunbookResponse.RunbookEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.team.v1alpha1.RunBook
	0,   // 109: github.com.metaprov.modelaapi.services.watcherd.v1.WatchTodoResponse.TodoEvent.event:type_name -> github.com.metaprov.modelaapi.services.watcherd.v1.EventType
	105, // 110: github.com.metaprov.modelaapi.services.watcherd.v1.WatchTodoResponse.TodoEvent.object:type_name -> github.com.metaprov.modelaapi.pkg.apis.team.v1alpha1.Todo
	1,   // 111: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchDatapipeline:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 112: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchDatapipelineRun:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 113: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchDataproduct:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 114: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchDataproductVersion:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 115: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchEntity:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 116: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchFeatureHistogram:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 117: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchFeatureGroup:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 118: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchRecipe:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 119: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchRecipeRun:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 120: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchDataset:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 121: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchDatasetSnapshot:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 122: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchDatasource:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 123: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchModel:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 124: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchModelClass:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 125: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchModelClassRun:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 126: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchReport:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 127: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchStudy:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 128: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchStudyRun:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 129: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchAccount:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 130: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchAlert:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 131: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchAttachement:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 132: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchConnection:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 133: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchLab:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 134: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchLicense:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 135: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchNotifier:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 136: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchServingSite:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 137: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchTenant:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 138: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchUserclass:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 139: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchVirtualBucket:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 140: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchDataApp:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 141: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchPrediction:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 142: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchPredictionRun:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 143: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchPredictor:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 144: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchPostmortem:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 145: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchReview:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 146: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchRunbook:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	1,   // 147: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchTodo:input_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions
	2,   // 148: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchDatapipeline:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatapipelineResponse
	3,   // 149: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchDatapipelineRun:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatapipelineRunResponse
	4,   // 150: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchDataproduct:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchDataProductResponse
	5,   // 151: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchDataproductVersion:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchDataProductVersionResponse
	6,   // 152: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchEntity:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchEntityResponse
	7,   // 153: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchFeatureHistogram:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchFeatureHistogramResponse
	8,   // 154: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchFeatureGroup:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchFeatureGroupResponse
	9,   // 155: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchRecipe:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRecipeResponse
	10,  // 156: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchRecipeRun:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRecipeRunResponse
	11,  // 157: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchDataset:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse
	12,  // 158: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchDatasetSnapshot:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse
	12,  // 159: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchDatasource:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse
	14,  // 160: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchModel:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse
	15,  // 161: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchModelClass:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelClassResponse
	16,  // 162: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchModelClassRun:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelClassRunResponse
	17,  // 163: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchReport:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchReportResponse
	18,  // 164: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchStudy:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse
	19,  // 165: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchStudyRun:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse
	20,  // 166: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchAccount:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchAccountResponse
	21,  // 167: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchAlert:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse
	22,  // 168: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchAttachement:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchAttachmentResponse
	23,  // 169: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchConnection:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchConnectionResponse
	24,  // 170: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchLab:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchLabResponse
	25,  // 171: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchLicense:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchLicenseResponse
	26,  // 172: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchNotifier:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchNotifierResponse
	27,  // 173: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchServingSite:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchServingsiteResponse
	28,  // 174: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchTenant:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchTenantResponse
	29,  // 175: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchUserclass:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchUserclassResponse
	30,  // 176: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchVirtualBucket:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchVirtualBucketResponse
	31,  // 177: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchDataApp:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchDataAppResponse
	32,  // 178: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchPrediction:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchPredictionResponse
	33,  // 179: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchPredictionRun:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchPredictionRunResponse
	34,  // 180: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchPredictor:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchPredictorResponse
	35,  // 181: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchPostmortem:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchPostmortemResponse
	36,  // 182: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchReview:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchReviewResponse
	37,  // 183: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchRunbook:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchRunbookResponse
	38,  // 184: github.com.metaprov.modelaapi.services.watcherd.v1.WatcherdService.WatchTodo:output_type -> github.com.metaprov.modelaapi.services.watcherd.v1.WatchTodoResponse
	148, // [148:185] is the sub-list for method output_type
	111, // [111:148] is the sub-list for method input_type
	111, // [111:111] is the sub-list for extension type_name
	111, // [111:111] is the sub-list for extension extendee
	0,   // [0:111] is the sub-list for field type_name
}

func init() { file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_init() }
func file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_init() {
	if File_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchRequestOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchDatapipelineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchDatapipelineRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchDataProductResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchDataProductVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchEntityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchFeatureHistogramResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchFeatureGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchRecipeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchRecipeRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchDatasetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchDatasetSnapshotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchDatasourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchModelClassResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchModelClassRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchStudyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchStudyRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchAlertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchAttachmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchLabResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchLicenseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchNotifierResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchServingsiteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchTenantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchUserclassResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchVirtualBucketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchDataAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchPredictionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchPredictionRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchPredictorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchPostmortemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchReviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchRunbookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchTodoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchDatapipelineResponse_DatapipelineEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchDatapipelineRunResponse_DatapipelineRunEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchDataProductResponse_DataProductEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchDataProductVersionResponse_DataProductVersionEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchEntityResponse_EntityEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchFeatureHistogramResponse_FeatureHistogramEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchFeatureGroupResponse_FeatureGroupEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchRecipeResponse_RecipeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchRecipeRunResponse_RecipeRunEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchDatasetResponse_RecipeRunEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchDatasetSnapshotResponse_RecipeRunEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchDatasourceResponse_DatasourceEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchModelResponse_ModelEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchModelClassResponse_ModelClassEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchModelClassRunResponse_ModelClassRunEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchReportResponse_ReportEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchStudyResponse_StudyEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchStudyRunResponse_StudyRunEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchAccountResponse_AccountEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchAlertResponse_AlertEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchAttachmentResponse_AttachmentEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchConnectionResponse_ConnectionEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchLabResponse_LabEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchLicenseResponse_LicenseEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchNotifierResponse_NotifierEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchServingsiteResponse_ServingsiteEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchTenantResponse_TenantEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchUserclassResponse_UserclassEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchVirtualBucketResponse_VirtualBucketEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchDataAppResponse_DataAppEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchPredictionResponse_DataAppEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchPredictionRunResponse_PredicitonRunEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchPredictorResponse_PredictorEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchPostmortemResponse_PostmortemEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchReviewResponse_ReviewEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchRunbookResponse_RunbookEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchTodoResponse_TodoEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   75,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_goTypes,
		DependencyIndexes: file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_depIdxs,
		EnumInfos:         file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_enumTypes,
		MessageInfos:      file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_msgTypes,
	}.Build()
	File_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto = out.File
	file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_rawDesc = nil
	file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_goTypes = nil
	file_github_com_metaprov_modelaapi_services_watcherd_v1_watcherd_proto_depIdxs = nil
}
