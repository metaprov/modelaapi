syntax = "proto3";

option go_package = "github.com/metaprov/modelaapi/services/labelingpipeline/v1";
package github.com.metaprov.modelaapi.services.labelingpipeline.v1;

import "google/protobuf/field_mask.proto";
import "google/api/annotations.proto";
import "github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1/generated.proto";

message ListLabelingPipelineRequest {
    string namespace = 1;
    map<string,string> labels =2;
    int32              page_size  = 3;
    string             page_token = 4;
    string             order_by   = 5;
}

message ListLabelingPipelineResponse {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.LabelingPipelineList labelingpipelines = 1;
    string next_page_token = 2;
}

message CreateLabelingPipelineRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.LabelingPipeline labelingpipeline = 1;
}

message CreateLabelingPipelineResponse {

}

message UpdateLabelingPipelineRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.LabelingPipeline item = 1;
    google.protobuf.FieldMask field_mask = 2;
}

message UpdateLabelingPipelineResponse {

}

message GetLabelingPipelineRequest {
    string namespace = 1;
    string name      = 2;
}


message GetLabelingPipelineResponse {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.LabelingPipeline item = 1;
    string yaml = 2;
}


message DeleteLabelingPipelineRequest {
    string namespace = 1;
    string name      = 2;
}

message DeleteLabelingPipelineResponse {

}

message PauseLabelingPipelineResponse {
}

message PauseLabelingPipelineRequest {
    string namespace = 1;
    string name      = 2;
}


message ResumeLabelingPipelineResponse {
}

message ResumeLabelingPipelineRequest {
    string namespace = 1;
    string name      = 2;
}


service LabelingPipelineService {
    rpc ListLabelingPipelines(ListLabelingPipelineRequest) returns (ListLabelingPipelineResponse) {
        option (google.api.http).get = "/v1/labelpipelines/{namespace}";
    }

    rpc CreateLabelingPipeline(CreateLabelingPipelineRequest) returns (CreateLabelingPipelineResponse) {
        option (google.api.http) = {
			post: "/v1/labelpipelines"
			body: "*"
		};
    }

    rpc GetLabelingPipeline(GetLabelingPipelineRequest) returns (GetLabelingPipelineResponse) {
        option (google.api.http).get = "/v1/labelpipelines/{namespace}/{name}";
    }

    rpc UpdateLabelingPipeline(UpdateLabelingPipelineRequest) returns (UpdateLabelingPipelineResponse) {
        option (google.api.http) = {
			put: "/v1/labelpipelines/{item.metadata.namespace}/{item.metadata.name}"
			body: "*"
		};
    }

    rpc DeleteLabelingPipeline(DeleteLabelingPipelineRequest) returns (DeleteLabelingPipelineResponse) {
        option (google.api.http).delete = "/v1/labelingpipelines/{namespace}/{name}";
    }

    rpc PauseLabelingPipeline(PauseLabelingPipelineRequest) returns (PauseLabelingPipelineResponse) {
        option (google.api.http) = {
			post: "/v1/labelpipelines/{namespace}/{name}:pause"
			body: "*"
		};
    }

    rpc ResumeLabelingPipeline(ResumeLabelingPipelineRequest) returns (ResumeLabelingPipelineResponse) {
        option (google.api.http) = {
			post: "/v1/labelpipelines/{namespace}/{name}:resume"
			body: "*"
		};
    }

}