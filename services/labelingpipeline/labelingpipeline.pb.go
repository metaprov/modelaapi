// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: services/labelingpipeline/labelingpipeline.proto

package labelingpipeline

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	v1alpha1 "github.com/metaprov/modeldapi/pkg/apis/data/v1alpha1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ListLabelingPipelineRequest struct {
	Namespace            string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Labels               map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListLabelingPipelineRequest) Reset()         { *m = ListLabelingPipelineRequest{} }
func (m *ListLabelingPipelineRequest) String() string { return proto.CompactTextString(m) }
func (*ListLabelingPipelineRequest) ProtoMessage()    {}
func (*ListLabelingPipelineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5413094ca134ceb, []int{0}
}
func (m *ListLabelingPipelineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLabelingPipelineRequest.Unmarshal(m, b)
}
func (m *ListLabelingPipelineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLabelingPipelineRequest.Marshal(b, m, deterministic)
}
func (m *ListLabelingPipelineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLabelingPipelineRequest.Merge(m, src)
}
func (m *ListLabelingPipelineRequest) XXX_Size() int {
	return xxx_messageInfo_ListLabelingPipelineRequest.Size(m)
}
func (m *ListLabelingPipelineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLabelingPipelineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListLabelingPipelineRequest proto.InternalMessageInfo

func (m *ListLabelingPipelineRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ListLabelingPipelineRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type ListLabelingPipelineResponse struct {
	Items                *v1alpha1.LabelingPipelineList `protobuf:"bytes,1,opt,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *ListLabelingPipelineResponse) Reset()         { *m = ListLabelingPipelineResponse{} }
func (m *ListLabelingPipelineResponse) String() string { return proto.CompactTextString(m) }
func (*ListLabelingPipelineResponse) ProtoMessage()    {}
func (*ListLabelingPipelineResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5413094ca134ceb, []int{1}
}
func (m *ListLabelingPipelineResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLabelingPipelineResponse.Unmarshal(m, b)
}
func (m *ListLabelingPipelineResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLabelingPipelineResponse.Marshal(b, m, deterministic)
}
func (m *ListLabelingPipelineResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLabelingPipelineResponse.Merge(m, src)
}
func (m *ListLabelingPipelineResponse) XXX_Size() int {
	return xxx_messageInfo_ListLabelingPipelineResponse.Size(m)
}
func (m *ListLabelingPipelineResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLabelingPipelineResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListLabelingPipelineResponse proto.InternalMessageInfo

func (m *ListLabelingPipelineResponse) GetItems() *v1alpha1.LabelingPipelineList {
	if m != nil {
		return m.Items
	}
	return nil
}

type CreateLabelingPipelineRequest struct {
	Namespace            string                         `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string                         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Labels               map[string]string              `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Spec                 *v1alpha1.LabelingPipelineSpec `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *CreateLabelingPipelineRequest) Reset()         { *m = CreateLabelingPipelineRequest{} }
func (m *CreateLabelingPipelineRequest) String() string { return proto.CompactTextString(m) }
func (*CreateLabelingPipelineRequest) ProtoMessage()    {}
func (*CreateLabelingPipelineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5413094ca134ceb, []int{2}
}
func (m *CreateLabelingPipelineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLabelingPipelineRequest.Unmarshal(m, b)
}
func (m *CreateLabelingPipelineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLabelingPipelineRequest.Marshal(b, m, deterministic)
}
func (m *CreateLabelingPipelineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLabelingPipelineRequest.Merge(m, src)
}
func (m *CreateLabelingPipelineRequest) XXX_Size() int {
	return xxx_messageInfo_CreateLabelingPipelineRequest.Size(m)
}
func (m *CreateLabelingPipelineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLabelingPipelineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLabelingPipelineRequest proto.InternalMessageInfo

func (m *CreateLabelingPipelineRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *CreateLabelingPipelineRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateLabelingPipelineRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateLabelingPipelineRequest) GetSpec() *v1alpha1.LabelingPipelineSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type CreateLabelingPipelineResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateLabelingPipelineResponse) Reset()         { *m = CreateLabelingPipelineResponse{} }
func (m *CreateLabelingPipelineResponse) String() string { return proto.CompactTextString(m) }
func (*CreateLabelingPipelineResponse) ProtoMessage()    {}
func (*CreateLabelingPipelineResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5413094ca134ceb, []int{3}
}
func (m *CreateLabelingPipelineResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLabelingPipelineResponse.Unmarshal(m, b)
}
func (m *CreateLabelingPipelineResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLabelingPipelineResponse.Marshal(b, m, deterministic)
}
func (m *CreateLabelingPipelineResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLabelingPipelineResponse.Merge(m, src)
}
func (m *CreateLabelingPipelineResponse) XXX_Size() int {
	return xxx_messageInfo_CreateLabelingPipelineResponse.Size(m)
}
func (m *CreateLabelingPipelineResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLabelingPipelineResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLabelingPipelineResponse proto.InternalMessageInfo

type UpdateLabelingPipelineRequest struct {
	Namespace            string                         `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string                         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Labels               map[string]string              `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Spec                 *v1alpha1.LabelingPipelineSpec `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *UpdateLabelingPipelineRequest) Reset()         { *m = UpdateLabelingPipelineRequest{} }
func (m *UpdateLabelingPipelineRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateLabelingPipelineRequest) ProtoMessage()    {}
func (*UpdateLabelingPipelineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5413094ca134ceb, []int{4}
}
func (m *UpdateLabelingPipelineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateLabelingPipelineRequest.Unmarshal(m, b)
}
func (m *UpdateLabelingPipelineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateLabelingPipelineRequest.Marshal(b, m, deterministic)
}
func (m *UpdateLabelingPipelineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateLabelingPipelineRequest.Merge(m, src)
}
func (m *UpdateLabelingPipelineRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateLabelingPipelineRequest.Size(m)
}
func (m *UpdateLabelingPipelineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateLabelingPipelineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateLabelingPipelineRequest proto.InternalMessageInfo

func (m *UpdateLabelingPipelineRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *UpdateLabelingPipelineRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateLabelingPipelineRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *UpdateLabelingPipelineRequest) GetSpec() *v1alpha1.LabelingPipelineSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type UpdateLabelingPipelineResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateLabelingPipelineResponse) Reset()         { *m = UpdateLabelingPipelineResponse{} }
func (m *UpdateLabelingPipelineResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateLabelingPipelineResponse) ProtoMessage()    {}
func (*UpdateLabelingPipelineResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5413094ca134ceb, []int{5}
}
func (m *UpdateLabelingPipelineResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateLabelingPipelineResponse.Unmarshal(m, b)
}
func (m *UpdateLabelingPipelineResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateLabelingPipelineResponse.Marshal(b, m, deterministic)
}
func (m *UpdateLabelingPipelineResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateLabelingPipelineResponse.Merge(m, src)
}
func (m *UpdateLabelingPipelineResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateLabelingPipelineResponse.Size(m)
}
func (m *UpdateLabelingPipelineResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateLabelingPipelineResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateLabelingPipelineResponse proto.InternalMessageInfo

type GetLabelingPipelineRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLabelingPipelineRequest) Reset()         { *m = GetLabelingPipelineRequest{} }
func (m *GetLabelingPipelineRequest) String() string { return proto.CompactTextString(m) }
func (*GetLabelingPipelineRequest) ProtoMessage()    {}
func (*GetLabelingPipelineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5413094ca134ceb, []int{6}
}
func (m *GetLabelingPipelineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLabelingPipelineRequest.Unmarshal(m, b)
}
func (m *GetLabelingPipelineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLabelingPipelineRequest.Marshal(b, m, deterministic)
}
func (m *GetLabelingPipelineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLabelingPipelineRequest.Merge(m, src)
}
func (m *GetLabelingPipelineRequest) XXX_Size() int {
	return xxx_messageInfo_GetLabelingPipelineRequest.Size(m)
}
func (m *GetLabelingPipelineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLabelingPipelineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLabelingPipelineRequest proto.InternalMessageInfo

func (m *GetLabelingPipelineRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *GetLabelingPipelineRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetLabelingPipelineResponse struct {
	Item                 *v1alpha1.LabelingPipeline `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Yaml                 string                     `protobuf:"bytes,2,opt,name=yaml,proto3" json:"yaml,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *GetLabelingPipelineResponse) Reset()         { *m = GetLabelingPipelineResponse{} }
func (m *GetLabelingPipelineResponse) String() string { return proto.CompactTextString(m) }
func (*GetLabelingPipelineResponse) ProtoMessage()    {}
func (*GetLabelingPipelineResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5413094ca134ceb, []int{7}
}
func (m *GetLabelingPipelineResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLabelingPipelineResponse.Unmarshal(m, b)
}
func (m *GetLabelingPipelineResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLabelingPipelineResponse.Marshal(b, m, deterministic)
}
func (m *GetLabelingPipelineResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLabelingPipelineResponse.Merge(m, src)
}
func (m *GetLabelingPipelineResponse) XXX_Size() int {
	return xxx_messageInfo_GetLabelingPipelineResponse.Size(m)
}
func (m *GetLabelingPipelineResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLabelingPipelineResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetLabelingPipelineResponse proto.InternalMessageInfo

func (m *GetLabelingPipelineResponse) GetItem() *v1alpha1.LabelingPipeline {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *GetLabelingPipelineResponse) GetYaml() string {
	if m != nil {
		return m.Yaml
	}
	return ""
}

type DeleteLabelingPipelineRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteLabelingPipelineRequest) Reset()         { *m = DeleteLabelingPipelineRequest{} }
func (m *DeleteLabelingPipelineRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteLabelingPipelineRequest) ProtoMessage()    {}
func (*DeleteLabelingPipelineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5413094ca134ceb, []int{8}
}
func (m *DeleteLabelingPipelineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteLabelingPipelineRequest.Unmarshal(m, b)
}
func (m *DeleteLabelingPipelineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteLabelingPipelineRequest.Marshal(b, m, deterministic)
}
func (m *DeleteLabelingPipelineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteLabelingPipelineRequest.Merge(m, src)
}
func (m *DeleteLabelingPipelineRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteLabelingPipelineRequest.Size(m)
}
func (m *DeleteLabelingPipelineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteLabelingPipelineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteLabelingPipelineRequest proto.InternalMessageInfo

func (m *DeleteLabelingPipelineRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *DeleteLabelingPipelineRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DeleteLabelingPipelineResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteLabelingPipelineResponse) Reset()         { *m = DeleteLabelingPipelineResponse{} }
func (m *DeleteLabelingPipelineResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteLabelingPipelineResponse) ProtoMessage()    {}
func (*DeleteLabelingPipelineResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5413094ca134ceb, []int{9}
}
func (m *DeleteLabelingPipelineResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteLabelingPipelineResponse.Unmarshal(m, b)
}
func (m *DeleteLabelingPipelineResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteLabelingPipelineResponse.Marshal(b, m, deterministic)
}
func (m *DeleteLabelingPipelineResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteLabelingPipelineResponse.Merge(m, src)
}
func (m *DeleteLabelingPipelineResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteLabelingPipelineResponse.Size(m)
}
func (m *DeleteLabelingPipelineResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteLabelingPipelineResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteLabelingPipelineResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ListLabelingPipelineRequest)(nil), "github.com.metaprov.modeld.services.labelingpipeline.ListLabelingPipelineRequest")
	proto.RegisterMapType((map[string]string)(nil), "github.com.metaprov.modeld.services.labelingpipeline.ListLabelingPipelineRequest.LabelsEntry")
	proto.RegisterType((*ListLabelingPipelineResponse)(nil), "github.com.metaprov.modeld.services.labelingpipeline.ListLabelingPipelineResponse")
	proto.RegisterType((*CreateLabelingPipelineRequest)(nil), "github.com.metaprov.modeld.services.labelingpipeline.CreateLabelingPipelineRequest")
	proto.RegisterMapType((map[string]string)(nil), "github.com.metaprov.modeld.services.labelingpipeline.CreateLabelingPipelineRequest.LabelsEntry")
	proto.RegisterType((*CreateLabelingPipelineResponse)(nil), "github.com.metaprov.modeld.services.labelingpipeline.CreateLabelingPipelineResponse")
	proto.RegisterType((*UpdateLabelingPipelineRequest)(nil), "github.com.metaprov.modeld.services.labelingpipeline.UpdateLabelingPipelineRequest")
	proto.RegisterMapType((map[string]string)(nil), "github.com.metaprov.modeld.services.labelingpipeline.UpdateLabelingPipelineRequest.LabelsEntry")
	proto.RegisterType((*UpdateLabelingPipelineResponse)(nil), "github.com.metaprov.modeld.services.labelingpipeline.UpdateLabelingPipelineResponse")
	proto.RegisterType((*GetLabelingPipelineRequest)(nil), "github.com.metaprov.modeld.services.labelingpipeline.GetLabelingPipelineRequest")
	proto.RegisterType((*GetLabelingPipelineResponse)(nil), "github.com.metaprov.modeld.services.labelingpipeline.GetLabelingPipelineResponse")
	proto.RegisterType((*DeleteLabelingPipelineRequest)(nil), "github.com.metaprov.modeld.services.labelingpipeline.DeleteLabelingPipelineRequest")
	proto.RegisterType((*DeleteLabelingPipelineResponse)(nil), "github.com.metaprov.modeld.services.labelingpipeline.DeleteLabelingPipelineResponse")
}

func init() {
	proto.RegisterFile("services/labelingpipeline/labelingpipeline.proto", fileDescriptor_b5413094ca134ceb)
}

var fileDescriptor_b5413094ca134ceb = []byte{
	// 644 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0xcf, 0x8b, 0xd3, 0x40,
	0x14, 0x36, 0x69, 0xbb, 0xd0, 0x29, 0x82, 0x8c, 0x6b, 0xad, 0x69, 0x57, 0x6a, 0xbc, 0xd4, 0xcb,
	0xc4, 0x56, 0x41, 0xbb, 0x17, 0x41, 0x57, 0x05, 0x59, 0x64, 0x9b, 0xd5, 0xcb, 0x82, 0x3f, 0xa6,
	0xed, 0x23, 0x1b, 0x9a, 0x1f, 0x63, 0x66, 0x5a, 0x29, 0x22, 0x88, 0x78, 0xf5, 0x24, 0xf8, 0x1f,
	0xf9, 0x17, 0x78, 0x13, 0xbc, 0xe9, 0x51, 0xff, 0x06, 0x99, 0x49, 0xba, 0xab, 0x6d, 0x1a, 0x21,
	0x46, 0xd8, 0x53, 0x33, 0x0f, 0xe6, 0x7b, 0xef, 0x7b, 0xdf, 0x7b, 0x5f, 0x07, 0x5d, 0xe5, 0x10,
	0xcd, 0xdc, 0x11, 0x70, 0xcb, 0xa3, 0x43, 0xf0, 0xdc, 0xc0, 0x61, 0x2e, 0x93, 0xbf, 0xb0, 0x12,
	0x20, 0x2c, 0x0a, 0x45, 0x88, 0xaf, 0x3b, 0xae, 0x38, 0x9c, 0x0e, 0xc9, 0x28, 0xf4, 0x89, 0x0f,
	0x82, 0xb2, 0x28, 0x9c, 0x11, 0x3f, 0x1c, 0x83, 0x37, 0x26, 0x0b, 0x30, 0xb2, 0x7c, 0xd7, 0x68,
	0x39, 0x61, 0xe8, 0x78, 0x60, 0x51, 0xe6, 0x5a, 0x34, 0x08, 0x42, 0x41, 0x85, 0x1b, 0x06, 0x3c,
	0xc6, 0x34, 0x76, 0x8e, 0x31, 0xad, 0x05, 0xa6, 0x15, 0x63, 0xca, 0x0b, 0x6c, 0xe2, 0xc8, 0x8b,
	0xdc, 0x1a, 0x53, 0x41, 0xad, 0x59, 0x97, 0x7a, 0xec, 0x90, 0x76, 0x2d, 0x07, 0x02, 0x88, 0xa8,
	0x80, 0x71, 0x8c, 0x62, 0xfe, 0xd0, 0x50, 0x73, 0xd7, 0xe5, 0x62, 0x37, 0x49, 0xbe, 0x97, 0x24,
	0xb7, 0xe1, 0xc5, 0x14, 0xb8, 0xc0, 0x2d, 0x54, 0x0d, 0xa8, 0x0f, 0x9c, 0xd1, 0x11, 0x34, 0xb4,
	0xb6, 0xd6, 0xa9, 0xda, 0xc7, 0x01, 0x3c, 0x45, 0x1b, 0xaa, 0x6a, 0xde, 0xd0, 0xdb, 0xa5, 0x4e,
	0xad, 0xf7, 0x84, 0xe4, 0x21, 0x4a, 0x32, 0x0a, 0x20, 0x2a, 0xce, 0xef, 0x06, 0x22, 0x9a, 0xdb,
	0x49, 0x32, 0xa3, 0x8f, 0x6a, 0xbf, 0x85, 0xf1, 0x19, 0x54, 0x9a, 0xc0, 0x3c, 0xa9, 0x4e, 0x7e,
	0xe2, 0x4d, 0x54, 0x99, 0x51, 0x6f, 0x0a, 0x0d, 0x5d, 0xc5, 0xe2, 0xc3, 0xb6, 0x7e, 0x53, 0x33,
	0xdf, 0x68, 0xa8, 0x95, 0x9e, 0x8e, 0xb3, 0x30, 0xe0, 0x80, 0x9f, 0xa3, 0x8a, 0x2b, 0xc0, 0xe7,
	0x0a, 0xae, 0xd6, 0x7b, 0x90, 0xc1, 0x88, 0x32, 0x97, 0xb0, 0x89, 0x43, 0x64, 0x9b, 0x89, 0x6c,
	0x33, 0x59, 0xb4, 0x99, 0x2c, 0xc3, 0xcb, 0x94, 0x76, 0x0c, 0x6c, 0x7e, 0xd7, 0xd1, 0xd6, 0x9d,
	0x08, 0xa8, 0x80, 0x7c, 0x4d, 0xc7, 0xa8, 0x2c, 0x0f, 0x09, 0x37, 0xf5, 0x8d, 0x5f, 0x1e, 0x09,
	0x51, 0x52, 0x42, 0x3c, 0xcb, 0x27, 0x44, 0x66, 0x59, 0x69, 0x52, 0xe0, 0xa7, 0xa8, 0xcc, 0x19,
	0x8c, 0x1a, 0xe5, 0x22, 0xbb, 0xb5, 0xcf, 0x60, 0x64, 0x2b, 0xdc, 0x7f, 0x91, 0xba, 0x8d, 0x2e,
	0xae, 0xe3, 0x13, 0x6b, 0xad, 0x94, 0x78, 0xcc, 0xc6, 0x27, 0x51, 0x89, 0xcc, 0xb2, 0x32, 0x95,
	0xa8, 0x9c, 0x48, 0x25, 0xd6, 0xf1, 0x49, 0x94, 0x78, 0x88, 0x8c, 0xfb, 0x20, 0x0a, 0x53, 0xc1,
	0x7c, 0xaf, 0xa1, 0x66, 0x2a, 0x60, 0xb2, 0xe5, 0x07, 0xa8, 0x2c, 0x97, 0x31, 0x59, 0xf2, 0x7b,
	0xc5, 0x34, 0xcb, 0x56, 0x98, 0xb2, 0x9e, 0x39, 0xf5, 0xbd, 0x45, 0x3d, 0xf2, 0xdb, 0x1c, 0xa0,
	0xad, 0x1d, 0xf0, 0xa0, 0xc0, 0x41, 0x93, 0x4d, 0x5d, 0x07, 0x19, 0x93, 0xec, 0x7d, 0xac, 0xa2,
	0xf3, 0x2b, 0x82, 0xc6, 0x13, 0x87, 0xbf, 0x68, 0xe8, 0x5c, 0x9a, 0x0f, 0x72, 0x3c, 0x28, 0xdc,
	0xc3, 0x0d, 0xbb, 0x48, 0xc8, 0x64, 0x62, 0x8c, 0xb7, 0x9f, 0xbf, 0x7d, 0xd0, 0x37, 0x31, 0xb6,
	0x66, 0xdd, 0xf8, 0x6f, 0x97, 0x1d, 0x51, 0xf8, 0xa9, 0xa1, 0x7a, 0xfa, 0xea, 0xe3, 0xfd, 0xff,
	0x60, 0x8c, 0xc6, 0xa3, 0x62, 0x41, 0x13, 0x86, 0x57, 0x14, 0xc3, 0xcb, 0x66, 0x0a, 0xc3, 0xed,
	0xd3, 0x7f, 0x9c, 0xf1, 0x57, 0x0d, 0x9d, 0x4d, 0x19, 0x77, 0xbc, 0x97, 0xaf, 0xb0, 0xf5, 0xab,
	0x68, 0x0c, 0x0a, 0x44, 0x4c, 0x78, 0x5e, 0x52, 0x3c, 0x9b, 0xf8, 0xc2, 0x2a, 0x4f, 0xeb, 0x95,
	0x1c, 0xf5, 0xd7, 0xf8, 0x9d, 0x8e, 0xea, 0xe9, 0x0e, 0x92, 0x57, 0xd0, 0x4c, 0x7f, 0xcd, 0x2b,
	0xe8, 0x5f, 0x4c, 0xee, 0x96, 0x22, 0xda, 0x37, 0x3a, 0x69, 0x44, 0xd5, 0x59, 0xe5, 0x52, 0x26,
	0xa3, 0x78, 0x2f, 0xcb, 0xfc, 0x49, 0x43, 0xf5, 0xf4, 0x9d, 0xcf, 0xdb, 0x86, 0x4c, 0x53, 0xca,
	0xdb, 0x86, 0x6c, 0x5b, 0x32, 0x4f, 0xdd, 0xee, 0x1f, 0xdc, 0xc8, 0x7e, 0xbc, 0xae, 0x7d, 0x60,
	0x0f, 0x37, 0xd4, 0xb3, 0xf5, 0xda, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x15, 0x8b, 0x00, 0x68,
	0x84, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LabelingPipelineServiceClient is the client API for LabelingPipelineService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LabelingPipelineServiceClient interface {
	ListLabelingPipelines(ctx context.Context, in *ListLabelingPipelineRequest, opts ...grpc.CallOption) (*ListLabelingPipelineResponse, error)
	CreateLabelingPipeline(ctx context.Context, in *CreateLabelingPipelineRequest, opts ...grpc.CallOption) (*CreateLabelingPipelineResponse, error)
	GetLabelingPipeline(ctx context.Context, in *GetLabelingPipelineRequest, opts ...grpc.CallOption) (*GetLabelingPipelineResponse, error)
	UpdateLabelingPipeline(ctx context.Context, in *UpdateLabelingPipelineRequest, opts ...grpc.CallOption) (*UpdateLabelingPipelineResponse, error)
	DeleteLabelingPipeline(ctx context.Context, in *DeleteLabelingPipelineRequest, opts ...grpc.CallOption) (*DeleteLabelingPipelineResponse, error)
}

type labelingPipelineServiceClient struct {
	cc *grpc.ClientConn
}

func NewLabelingPipelineServiceClient(cc *grpc.ClientConn) LabelingPipelineServiceClient {
	return &labelingPipelineServiceClient{cc}
}

func (c *labelingPipelineServiceClient) ListLabelingPipelines(ctx context.Context, in *ListLabelingPipelineRequest, opts ...grpc.CallOption) (*ListLabelingPipelineResponse, error) {
	out := new(ListLabelingPipelineResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.labelingpipeline.LabelingPipelineService/ListLabelingPipelines", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *labelingPipelineServiceClient) CreateLabelingPipeline(ctx context.Context, in *CreateLabelingPipelineRequest, opts ...grpc.CallOption) (*CreateLabelingPipelineResponse, error) {
	out := new(CreateLabelingPipelineResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.labelingpipeline.LabelingPipelineService/CreateLabelingPipeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *labelingPipelineServiceClient) GetLabelingPipeline(ctx context.Context, in *GetLabelingPipelineRequest, opts ...grpc.CallOption) (*GetLabelingPipelineResponse, error) {
	out := new(GetLabelingPipelineResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.labelingpipeline.LabelingPipelineService/GetLabelingPipeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *labelingPipelineServiceClient) UpdateLabelingPipeline(ctx context.Context, in *UpdateLabelingPipelineRequest, opts ...grpc.CallOption) (*UpdateLabelingPipelineResponse, error) {
	out := new(UpdateLabelingPipelineResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.labelingpipeline.LabelingPipelineService/UpdateLabelingPipeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *labelingPipelineServiceClient) DeleteLabelingPipeline(ctx context.Context, in *DeleteLabelingPipelineRequest, opts ...grpc.CallOption) (*DeleteLabelingPipelineResponse, error) {
	out := new(DeleteLabelingPipelineResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.labelingpipeline.LabelingPipelineService/DeleteLabelingPipeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LabelingPipelineServiceServer is the server API for LabelingPipelineService service.
type LabelingPipelineServiceServer interface {
	ListLabelingPipelines(context.Context, *ListLabelingPipelineRequest) (*ListLabelingPipelineResponse, error)
	CreateLabelingPipeline(context.Context, *CreateLabelingPipelineRequest) (*CreateLabelingPipelineResponse, error)
	GetLabelingPipeline(context.Context, *GetLabelingPipelineRequest) (*GetLabelingPipelineResponse, error)
	UpdateLabelingPipeline(context.Context, *UpdateLabelingPipelineRequest) (*UpdateLabelingPipelineResponse, error)
	DeleteLabelingPipeline(context.Context, *DeleteLabelingPipelineRequest) (*DeleteLabelingPipelineResponse, error)
}

// UnimplementedLabelingPipelineServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLabelingPipelineServiceServer struct {
}

func (*UnimplementedLabelingPipelineServiceServer) ListLabelingPipelines(ctx context.Context, req *ListLabelingPipelineRequest) (*ListLabelingPipelineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListLabelingPipelines not implemented")
}
func (*UnimplementedLabelingPipelineServiceServer) CreateLabelingPipeline(ctx context.Context, req *CreateLabelingPipelineRequest) (*CreateLabelingPipelineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLabelingPipeline not implemented")
}
func (*UnimplementedLabelingPipelineServiceServer) GetLabelingPipeline(ctx context.Context, req *GetLabelingPipelineRequest) (*GetLabelingPipelineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLabelingPipeline not implemented")
}
func (*UnimplementedLabelingPipelineServiceServer) UpdateLabelingPipeline(ctx context.Context, req *UpdateLabelingPipelineRequest) (*UpdateLabelingPipelineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateLabelingPipeline not implemented")
}
func (*UnimplementedLabelingPipelineServiceServer) DeleteLabelingPipeline(ctx context.Context, req *DeleteLabelingPipelineRequest) (*DeleteLabelingPipelineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteLabelingPipeline not implemented")
}

func RegisterLabelingPipelineServiceServer(s *grpc.Server, srv LabelingPipelineServiceServer) {
	s.RegisterService(&_LabelingPipelineService_serviceDesc, srv)
}

func _LabelingPipelineService_ListLabelingPipelines_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListLabelingPipelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LabelingPipelineServiceServer).ListLabelingPipelines(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.labelingpipeline.LabelingPipelineService/ListLabelingPipelines",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LabelingPipelineServiceServer).ListLabelingPipelines(ctx, req.(*ListLabelingPipelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LabelingPipelineService_CreateLabelingPipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLabelingPipelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LabelingPipelineServiceServer).CreateLabelingPipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.labelingpipeline.LabelingPipelineService/CreateLabelingPipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LabelingPipelineServiceServer).CreateLabelingPipeline(ctx, req.(*CreateLabelingPipelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LabelingPipelineService_GetLabelingPipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLabelingPipelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LabelingPipelineServiceServer).GetLabelingPipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.labelingpipeline.LabelingPipelineService/GetLabelingPipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LabelingPipelineServiceServer).GetLabelingPipeline(ctx, req.(*GetLabelingPipelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LabelingPipelineService_UpdateLabelingPipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateLabelingPipelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LabelingPipelineServiceServer).UpdateLabelingPipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.labelingpipeline.LabelingPipelineService/UpdateLabelingPipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LabelingPipelineServiceServer).UpdateLabelingPipeline(ctx, req.(*UpdateLabelingPipelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LabelingPipelineService_DeleteLabelingPipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteLabelingPipelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LabelingPipelineServiceServer).DeleteLabelingPipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.labelingpipeline.LabelingPipelineService/DeleteLabelingPipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LabelingPipelineServiceServer).DeleteLabelingPipeline(ctx, req.(*DeleteLabelingPipelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LabelingPipelineService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.metaprov.modeld.services.labelingpipeline.LabelingPipelineService",
	HandlerType: (*LabelingPipelineServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListLabelingPipelines",
			Handler:    _LabelingPipelineService_ListLabelingPipelines_Handler,
		},
		{
			MethodName: "CreateLabelingPipeline",
			Handler:    _LabelingPipelineService_CreateLabelingPipeline_Handler,
		},
		{
			MethodName: "GetLabelingPipeline",
			Handler:    _LabelingPipelineService_GetLabelingPipeline_Handler,
		},
		{
			MethodName: "UpdateLabelingPipeline",
			Handler:    _LabelingPipelineService_UpdateLabelingPipeline_Handler,
		},
		{
			MethodName: "DeleteLabelingPipeline",
			Handler:    _LabelingPipelineService_DeleteLabelingPipeline_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/labelingpipeline/labelingpipeline.proto",
}
