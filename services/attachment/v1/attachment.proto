syntax = "proto3";
option go_package = "github.com/metaprov/modelaapi/services/attachment/v1";

package github.com.metaprov.modelaapi.services.attachment.v1;
import "google/api/annotations.proto";
import "github.com/metaprov/modelaapi/pkg/apis/infra/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/services/common/v1/common.proto";
import "google/protobuf/field_mask.proto";

message ListAttachmentsRequest {
    string             namespace  = 1;
    map<string,string> labels     = 2; 
    int32              page_size  = 3;
    string             page_token = 4;
    string             order_by   = 5;  
}

message ListAttachmentsResponse {
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList attachments = 1;   
    string next_page_token = 2;
}

message AttachmentResponse {}

message CreateAttachmentRequest {
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment  attachment = 1;   
}

message CreateAttachmentResponse {

}

message UpdateAttachmentRequest {
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment attachment = 1;
    google.protobuf.FieldMask field_mask = 2;
}

message UpdateAttachmentResponse {

}

message GetAttachmentRequest {
    string namespace = 1;
    string name      = 2;
}


message GetAttachmentResponse {
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment attachment = 1;
    string yaml = 2;
}


message GetAttachmentNamespacesRequest {
    string namespace = 1;
    string name      = 2;
}

message GetAttachmentNamespacesResponse {
    repeated github.com.metaprov.modelaapi.services.common.v1.NamespaceInfo namespaces= 1;
}

message DeleteAttachmentRequest {
    string namespace = 1;
    string name      = 2;
}

message DeleteAttachmentResponse {}


message AttachmentCreateResponse {}


service AttachmentService {
    rpc ListAttachments(ListAttachmentsRequest) returns (ListAttachmentsResponse) {
        option (google.api.http).get = "/v1/attachments/{namespace}";
    }

    rpc CreateAttachment(CreateAttachmentRequest) returns (CreateAttachmentResponse) {
        option (google.api.http) = {
			post: "/v1/attachments"
			body: "*"
		};
    }

    rpc GetAttachment(GetAttachmentRequest) returns (GetAttachmentResponse) {
        option (google.api.http).get = "/v1/attachments/{namespace}/{name}";
    }

    rpc UpdateAttachment(UpdateAttachmentRequest) returns (UpdateAttachmentResponse) {
        option (google.api.http) = {
			put: "/v1/attachments/{item.metadata.namespace}/{item.metadata.name}"
			body: "*"
		};
    }

    rpc DeleteAttachment(DeleteAttachmentRequest) returns (DeleteAttachmentResponse) {
        option (google.api.http).delete = "/v1/attachments/{namespace}/{name}";
    }

}