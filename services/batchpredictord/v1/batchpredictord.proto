syntax = "proto3";
option go_package = "github.com/metaprov/modelaapi/services/batchpredictord/v1";
package github.com.metaprov.modelaapi.services.batchpredictord.v1;

import "github.com/metaprov/modelaapi/pkg/apis/infra/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/pkg/apis/training/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/pkg/apis/inference/v1alpha1/generated.proto";
import "google/protobuf/empty.proto";

message BatchPredictRequest {
    github.com.metaprov.modelaapi.pkg.apis.inference.v1alpha1.Prediction prediction = 1;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Model model = 2;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataSource datasource = 3;
    string tenant = 4;
}

message BatchPredictModelClassRequest {
    github.com.metaprov.modelaapi.pkg.apis.inference.v1alpha1.Prediction prediction = 1;
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataSource datasource = 2;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Model model = 3;
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClass modelClass = 4;
    repeated github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Entity entities   = 5;
    repeated github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.FeatureGroup groups = 6;
}

message BatchPredictResponse {
    int32 rows = 1;
}

message ShutdownRequest {}
message ShutdownResponse {}

service Batch {
    rpc BatchPredict(BatchPredictRequest) returns (BatchPredictResponse) {}
    rpc BatchPredictModelClass(BatchPredictModelClassRequest) returns (BatchPredictResponse) {}
    rpc Shutdown(ShutdownRequest) returns (ShutdownResponse) {}
}