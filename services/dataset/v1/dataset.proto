syntax = "proto3";
option go_package = "github.com/metaprov/modelaapi/services/dataset/v1";
package github.com.metaprov.modelaapi.services.dataset.v1;


import "google/protobuf/field_mask.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/pkg/apis/catalog/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/services/common/v1/common.proto";

/////// List Dataset ///////

message ListDatasetsRequest {
    string namespace = 1;
    map<string, string> labels = 2;
    int32              page_size = 3;
    string             page_token = 4;
    string             order_by = 5;
}

message ListDatasetsResponse {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DatasetList datasets = 1;
    string next_page_token = 2;
}

/////// Get Dataset ///////

message GetDatasetRequest {
    string namespace = 1;
    string name = 2;
    map<string, string> labels = 3;

}

message GetDatasetResponse {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset dataset = 1;
    string yaml = 2;
}

/////// Create Dataset ///////

message CreateDatasetRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset dataset = 1;
}

message CreateDatasetResponse {}

/////// Update Dataset ///////

message UpdateDatasetRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset dataset = 1;
    google.protobuf.FieldMask field_mask = 2;
}

message UpdateDatasetResponse {}

/////// Delete Dataset ///////

message DeleteDatasetRequest {
    string namespace = 1;
    string name = 2;
}

message DeleteDatasetResponse {}

/////// Get Dataset Profile ///////

message GetDatasetProfileRequest {
    string namespace = 1;
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.SnapshotReference snapshot = 2;
}

message GetDatasetProfileResponse {
    github.com.metaprov.modelaapi.services.common.v1.DatasetProfile profile = 1;
}

/////// Download Dataset ///////

message DownloadDatasetRequest {
    string namespace = 1;
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.SnapshotReference snapshot = 2;
}

message DownloadDatasetResponse {
    bytes raw = 1;
}

/////// Download Dataset Anomalies ///////

message GetDatasetAnomaliesRequest {
    string namespace = 1;
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.SnapshotReference snapshot = 2;
}

message GetDatasetAnomaliesResponse {
    github.com.metaprov.modelaapi.services.common.v1.TableView table = 1;
}

/////// Compare Datasets ///////

message CompareDatasetsRequest {
    string namespace = 1;
    repeated github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.SnapshotReference snapshots = 2;
}

message CompareDatasetsResponse {
    repeated github.com.metaprov.modelaapi.services.common.v1.DatasetProfile profiles = 1;
}

/////// Dataset Service ///////

service DatasetService {
    rpc ListDatasets(ListDatasetsRequest) returns (ListDatasetsResponse) {
        option (google.api.http).get = "/v1/datasets/{namespace}";
    }

    rpc GetDataset(GetDatasetRequest) returns (GetDatasetResponse) {
        option (google.api.http).get = "/v1/datasets/{namespace}/{name}";
    }

    rpc CreateDataset(CreateDatasetRequest) returns (CreateDatasetResponse) {
        option (google.api.http) = {
            post: "/v1/datasets"
            body: "*"
        };
    }

    rpc UpdateDataset(UpdateDatasetRequest) returns (UpdateDatasetResponse) {
        option (google.api.http) = {
            put: "/v1/datasets/{dataset.metadata.namespace}/{dataset.metadata.name}"
            body: "*"
        };
    }

    rpc DeleteDataset(DeleteDatasetRequest) returns (DeleteDatasetResponse) {
        option (google.api.http).delete = "/v1/datasets/{namespace}/{name}";
    }

    rpc GetDatasetProfile(GetDatasetProfileRequest) returns (GetDatasetProfileResponse) {
        option (google.api.http).post = "/v1/datasets/{namespace}/{snapshot.dataset}:profile";
    }

    rpc DownloadDataset(DownloadDatasetRequest) returns (DownloadDatasetResponse) {
        option (google.api.http).post = "/v1/datasets/{namespace}/{snapshot.dataset}:download";
    }

    rpc GetAnomalies(GetDatasetAnomaliesRequest) returns (GetDatasetAnomaliesResponse) {
        option (google.api.http).post = "/v1/datasets/{namespace}/{snapshot.dataset}:anomalies";
    }

    rpc CompareDatasets(CompareDatasetsRequest) returns (CompareDatasetsResponse) {
        option (google.api.http).post = "/v1/datasets/{namespace}:compare";
    }
}