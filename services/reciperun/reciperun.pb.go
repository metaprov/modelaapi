// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: services/reciperun/reciperun.proto

package reciperun

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	v1alpha1 "github.com/metaprov/modeldapi/pkg/apis/data/v1alpha1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ListRecipeRunsRequest struct {
	Namespace            string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Labels               map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListRecipeRunsRequest) Reset()         { *m = ListRecipeRunsRequest{} }
func (m *ListRecipeRunsRequest) String() string { return proto.CompactTextString(m) }
func (*ListRecipeRunsRequest) ProtoMessage()    {}
func (*ListRecipeRunsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb1be11545c88ecd, []int{0}
}
func (m *ListRecipeRunsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRecipeRunsRequest.Unmarshal(m, b)
}
func (m *ListRecipeRunsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRecipeRunsRequest.Marshal(b, m, deterministic)
}
func (m *ListRecipeRunsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRecipeRunsRequest.Merge(m, src)
}
func (m *ListRecipeRunsRequest) XXX_Size() int {
	return xxx_messageInfo_ListRecipeRunsRequest.Size(m)
}
func (m *ListRecipeRunsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRecipeRunsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRecipeRunsRequest proto.InternalMessageInfo

func (m *ListRecipeRunsRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ListRecipeRunsRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type ListRecipeRunsResponse struct {
	Items                *v1alpha1.RecipeRunList `protobuf:"bytes,1,opt,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ListRecipeRunsResponse) Reset()         { *m = ListRecipeRunsResponse{} }
func (m *ListRecipeRunsResponse) String() string { return proto.CompactTextString(m) }
func (*ListRecipeRunsResponse) ProtoMessage()    {}
func (*ListRecipeRunsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb1be11545c88ecd, []int{1}
}
func (m *ListRecipeRunsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRecipeRunsResponse.Unmarshal(m, b)
}
func (m *ListRecipeRunsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRecipeRunsResponse.Marshal(b, m, deterministic)
}
func (m *ListRecipeRunsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRecipeRunsResponse.Merge(m, src)
}
func (m *ListRecipeRunsResponse) XXX_Size() int {
	return xxx_messageInfo_ListRecipeRunsResponse.Size(m)
}
func (m *ListRecipeRunsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRecipeRunsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRecipeRunsResponse proto.InternalMessageInfo

func (m *ListRecipeRunsResponse) GetItems() *v1alpha1.RecipeRunList {
	if m != nil {
		return m.Items
	}
	return nil
}

type CreateRecipeRunRequest struct {
	Namespace            string                  `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Labels               map[string]string       `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Spec                 *v1alpha1.RecipeRunSpec `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CreateRecipeRunRequest) Reset()         { *m = CreateRecipeRunRequest{} }
func (m *CreateRecipeRunRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRecipeRunRequest) ProtoMessage()    {}
func (*CreateRecipeRunRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb1be11545c88ecd, []int{2}
}
func (m *CreateRecipeRunRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRecipeRunRequest.Unmarshal(m, b)
}
func (m *CreateRecipeRunRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRecipeRunRequest.Marshal(b, m, deterministic)
}
func (m *CreateRecipeRunRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRecipeRunRequest.Merge(m, src)
}
func (m *CreateRecipeRunRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRecipeRunRequest.Size(m)
}
func (m *CreateRecipeRunRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRecipeRunRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRecipeRunRequest proto.InternalMessageInfo

func (m *CreateRecipeRunRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *CreateRecipeRunRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateRecipeRunRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateRecipeRunRequest) GetSpec() *v1alpha1.RecipeRunSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type CreateRecipeRunResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRecipeRunResponse) Reset()         { *m = CreateRecipeRunResponse{} }
func (m *CreateRecipeRunResponse) String() string { return proto.CompactTextString(m) }
func (*CreateRecipeRunResponse) ProtoMessage()    {}
func (*CreateRecipeRunResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb1be11545c88ecd, []int{3}
}
func (m *CreateRecipeRunResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRecipeRunResponse.Unmarshal(m, b)
}
func (m *CreateRecipeRunResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRecipeRunResponse.Marshal(b, m, deterministic)
}
func (m *CreateRecipeRunResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRecipeRunResponse.Merge(m, src)
}
func (m *CreateRecipeRunResponse) XXX_Size() int {
	return xxx_messageInfo_CreateRecipeRunResponse.Size(m)
}
func (m *CreateRecipeRunResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRecipeRunResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRecipeRunResponse proto.InternalMessageInfo

type UpdateRecipeRunRequest struct {
	Namespace            string                  `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Labels               map[string]string       `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Spec                 *v1alpha1.RecipeRunSpec `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *UpdateRecipeRunRequest) Reset()         { *m = UpdateRecipeRunRequest{} }
func (m *UpdateRecipeRunRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRecipeRunRequest) ProtoMessage()    {}
func (*UpdateRecipeRunRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb1be11545c88ecd, []int{4}
}
func (m *UpdateRecipeRunRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRecipeRunRequest.Unmarshal(m, b)
}
func (m *UpdateRecipeRunRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRecipeRunRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRecipeRunRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRecipeRunRequest.Merge(m, src)
}
func (m *UpdateRecipeRunRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRecipeRunRequest.Size(m)
}
func (m *UpdateRecipeRunRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRecipeRunRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRecipeRunRequest proto.InternalMessageInfo

func (m *UpdateRecipeRunRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *UpdateRecipeRunRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateRecipeRunRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *UpdateRecipeRunRequest) GetSpec() *v1alpha1.RecipeRunSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type UpdateRecipeRunResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRecipeRunResponse) Reset()         { *m = UpdateRecipeRunResponse{} }
func (m *UpdateRecipeRunResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateRecipeRunResponse) ProtoMessage()    {}
func (*UpdateRecipeRunResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb1be11545c88ecd, []int{5}
}
func (m *UpdateRecipeRunResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRecipeRunResponse.Unmarshal(m, b)
}
func (m *UpdateRecipeRunResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRecipeRunResponse.Marshal(b, m, deterministic)
}
func (m *UpdateRecipeRunResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRecipeRunResponse.Merge(m, src)
}
func (m *UpdateRecipeRunResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateRecipeRunResponse.Size(m)
}
func (m *UpdateRecipeRunResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRecipeRunResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRecipeRunResponse proto.InternalMessageInfo

type GetRecipeRunRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRecipeRunRequest) Reset()         { *m = GetRecipeRunRequest{} }
func (m *GetRecipeRunRequest) String() string { return proto.CompactTextString(m) }
func (*GetRecipeRunRequest) ProtoMessage()    {}
func (*GetRecipeRunRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb1be11545c88ecd, []int{6}
}
func (m *GetRecipeRunRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecipeRunRequest.Unmarshal(m, b)
}
func (m *GetRecipeRunRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecipeRunRequest.Marshal(b, m, deterministic)
}
func (m *GetRecipeRunRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecipeRunRequest.Merge(m, src)
}
func (m *GetRecipeRunRequest) XXX_Size() int {
	return xxx_messageInfo_GetRecipeRunRequest.Size(m)
}
func (m *GetRecipeRunRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecipeRunRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecipeRunRequest proto.InternalMessageInfo

func (m *GetRecipeRunRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *GetRecipeRunRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetRecipeRunResponse struct {
	Item                 *v1alpha1.RecipeRun `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Yaml                 string              `protobuf:"bytes,2,opt,name=yaml,proto3" json:"yaml,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetRecipeRunResponse) Reset()         { *m = GetRecipeRunResponse{} }
func (m *GetRecipeRunResponse) String() string { return proto.CompactTextString(m) }
func (*GetRecipeRunResponse) ProtoMessage()    {}
func (*GetRecipeRunResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb1be11545c88ecd, []int{7}
}
func (m *GetRecipeRunResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecipeRunResponse.Unmarshal(m, b)
}
func (m *GetRecipeRunResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecipeRunResponse.Marshal(b, m, deterministic)
}
func (m *GetRecipeRunResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecipeRunResponse.Merge(m, src)
}
func (m *GetRecipeRunResponse) XXX_Size() int {
	return xxx_messageInfo_GetRecipeRunResponse.Size(m)
}
func (m *GetRecipeRunResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecipeRunResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecipeRunResponse proto.InternalMessageInfo

func (m *GetRecipeRunResponse) GetItem() *v1alpha1.RecipeRun {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *GetRecipeRunResponse) GetYaml() string {
	if m != nil {
		return m.Yaml
	}
	return ""
}

type DeleteRecipeRunRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRecipeRunRequest) Reset()         { *m = DeleteRecipeRunRequest{} }
func (m *DeleteRecipeRunRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRecipeRunRequest) ProtoMessage()    {}
func (*DeleteRecipeRunRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb1be11545c88ecd, []int{8}
}
func (m *DeleteRecipeRunRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRecipeRunRequest.Unmarshal(m, b)
}
func (m *DeleteRecipeRunRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRecipeRunRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRecipeRunRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRecipeRunRequest.Merge(m, src)
}
func (m *DeleteRecipeRunRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRecipeRunRequest.Size(m)
}
func (m *DeleteRecipeRunRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRecipeRunRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRecipeRunRequest proto.InternalMessageInfo

func (m *DeleteRecipeRunRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *DeleteRecipeRunRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DeleteRecipeRunResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRecipeRunResponse) Reset()         { *m = DeleteRecipeRunResponse{} }
func (m *DeleteRecipeRunResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteRecipeRunResponse) ProtoMessage()    {}
func (*DeleteRecipeRunResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb1be11545c88ecd, []int{9}
}
func (m *DeleteRecipeRunResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRecipeRunResponse.Unmarshal(m, b)
}
func (m *DeleteRecipeRunResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRecipeRunResponse.Marshal(b, m, deterministic)
}
func (m *DeleteRecipeRunResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRecipeRunResponse.Merge(m, src)
}
func (m *DeleteRecipeRunResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteRecipeRunResponse.Size(m)
}
func (m *DeleteRecipeRunResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRecipeRunResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRecipeRunResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ListRecipeRunsRequest)(nil), "github.com.metaprov.modeld.services.reciperun.ListRecipeRunsRequest")
	proto.RegisterMapType((map[string]string)(nil), "github.com.metaprov.modeld.services.reciperun.ListRecipeRunsRequest.LabelsEntry")
	proto.RegisterType((*ListRecipeRunsResponse)(nil), "github.com.metaprov.modeld.services.reciperun.ListRecipeRunsResponse")
	proto.RegisterType((*CreateRecipeRunRequest)(nil), "github.com.metaprov.modeld.services.reciperun.CreateRecipeRunRequest")
	proto.RegisterMapType((map[string]string)(nil), "github.com.metaprov.modeld.services.reciperun.CreateRecipeRunRequest.LabelsEntry")
	proto.RegisterType((*CreateRecipeRunResponse)(nil), "github.com.metaprov.modeld.services.reciperun.CreateRecipeRunResponse")
	proto.RegisterType((*UpdateRecipeRunRequest)(nil), "github.com.metaprov.modeld.services.reciperun.UpdateRecipeRunRequest")
	proto.RegisterMapType((map[string]string)(nil), "github.com.metaprov.modeld.services.reciperun.UpdateRecipeRunRequest.LabelsEntry")
	proto.RegisterType((*UpdateRecipeRunResponse)(nil), "github.com.metaprov.modeld.services.reciperun.UpdateRecipeRunResponse")
	proto.RegisterType((*GetRecipeRunRequest)(nil), "github.com.metaprov.modeld.services.reciperun.GetRecipeRunRequest")
	proto.RegisterType((*GetRecipeRunResponse)(nil), "github.com.metaprov.modeld.services.reciperun.GetRecipeRunResponse")
	proto.RegisterType((*DeleteRecipeRunRequest)(nil), "github.com.metaprov.modeld.services.reciperun.DeleteRecipeRunRequest")
	proto.RegisterType((*DeleteRecipeRunResponse)(nil), "github.com.metaprov.modeld.services.reciperun.DeleteRecipeRunResponse")
}

func init() {
	proto.RegisterFile("services/reciperun/reciperun.proto", fileDescriptor_fb1be11545c88ecd)
}

var fileDescriptor_fb1be11545c88ecd = []byte{
	// 636 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0x4d, 0x6e, 0xd3, 0x40,
	0x18, 0xc5, 0x69, 0x5a, 0xd4, 0x29, 0x6a, 0xab, 0xa1, 0x4d, 0x83, 0x29, 0x52, 0xf1, 0xaa, 0x1b,
	0xc6, 0x24, 0x08, 0x09, 0xca, 0x02, 0xa9, 0x49, 0xa8, 0x84, 0xba, 0x00, 0x57, 0x08, 0xc1, 0x6e,
	0xe2, 0x7c, 0x72, 0xac, 0xf8, 0x67, 0xf0, 0x4c, 0x22, 0x45, 0x08, 0x21, 0x71, 0x05, 0x6e, 0xc0,
	0x1d, 0xe0, 0x02, 0xac, 0xd8, 0xb0, 0x61, 0x87, 0xc4, 0x8e, 0x83, 0xa0, 0x19, 0x3b, 0x71, 0xe2,
	0xb8, 0x11, 0x96, 0xb3, 0xe8, 0x6e, 0x3c, 0xd1, 0xbc, 0xef, 0xbd, 0xf7, 0xcd, 0xfb, 0x32, 0xc8,
	0xe0, 0x10, 0x8d, 0x5c, 0x1b, 0xb8, 0x19, 0x81, 0xed, 0x32, 0x88, 0x86, 0x41, 0xba, 0x22, 0x2c,
	0x0a, 0x45, 0x88, 0xef, 0x39, 0xae, 0xe8, 0x0f, 0xbb, 0xc4, 0x0e, 0x7d, 0xe2, 0x83, 0xa0, 0x2c,
	0x0a, 0x47, 0xc4, 0x0f, 0x7b, 0xe0, 0xf5, 0xc8, 0xe4, 0x38, 0x99, 0x1e, 0xd2, 0x0f, 0x9d, 0x30,
	0x74, 0x3c, 0x30, 0x29, 0x73, 0x4d, 0x1a, 0x04, 0xa1, 0xa0, 0xc2, 0x0d, 0x03, 0x1e, 0x83, 0xe9,
	0xed, 0x14, 0xcc, 0x9c, 0x80, 0x99, 0x31, 0x98, 0x3c, 0xc0, 0x06, 0x8e, 0x3c, 0xc8, 0xcd, 0x1e,
	0x15, 0xd4, 0x1c, 0x35, 0xa8, 0xc7, 0xfa, 0xb4, 0x61, 0x3a, 0x10, 0x40, 0x44, 0x05, 0xf4, 0x62,
	0x14, 0xe3, 0xb7, 0x86, 0xf6, 0xcf, 0x5d, 0x2e, 0x2c, 0x55, 0xd5, 0x1a, 0x06, 0xdc, 0x82, 0x77,
	0x43, 0xe0, 0x02, 0x1f, 0xa2, 0xcd, 0x80, 0xfa, 0xc0, 0x19, 0xb5, 0xa1, 0xae, 0x1d, 0x69, 0xc7,
	0x9b, 0x56, 0xba, 0x81, 0xfb, 0x68, 0xc3, 0xa3, 0x5d, 0xf0, 0x78, 0x7d, 0xed, 0x68, 0xed, 0x78,
	0xab, 0xf9, 0x82, 0x14, 0xd2, 0x46, 0x72, 0x6b, 0x92, 0x73, 0x05, 0xd9, 0x09, 0x44, 0x34, 0xb6,
	0x12, 0x7c, 0xfd, 0x31, 0xda, 0x9a, 0xd9, 0xc6, 0xbb, 0x68, 0x6d, 0x00, 0xe3, 0x84, 0x90, 0x5c,
	0xe2, 0x3d, 0xb4, 0x3e, 0xa2, 0xde, 0x10, 0xea, 0x15, 0xb5, 0x17, 0x7f, 0x9c, 0x54, 0x1e, 0x69,
	0x06, 0x47, 0xb5, 0x6c, 0x1d, 0xce, 0xc2, 0x80, 0x03, 0x7e, 0x83, 0xd6, 0x5d, 0x01, 0x3e, 0x57,
	0x38, 0x5b, 0xcd, 0xd6, 0x12, 0xf6, 0x94, 0xb9, 0x84, 0x0d, 0x1c, 0x22, 0xcd, 0x24, 0xd2, 0x4c,
	0x32, 0x31, 0x93, 0x4c, 0x81, 0x55, 0x95, 0x18, 0xd1, 0xf8, 0x51, 0x41, 0xb5, 0x56, 0x04, 0x54,
	0xc0, 0xf4, 0xe7, 0xff, 0xb3, 0x14, 0xa3, 0xaa, 0xfc, 0x48, 0x64, 0xa8, 0x35, 0x76, 0x33, 0x36,
	0xbf, 0x2c, 0x68, 0x73, 0x3e, 0x91, 0x3c, 0x9f, 0xf1, 0x6b, 0x54, 0xe5, 0x0c, 0xec, 0x7a, 0x75,
	0x25, 0x8e, 0x5c, 0x30, 0xb0, 0x2d, 0x05, 0x58, 0xa6, 0x81, 0xb7, 0xd0, 0xc1, 0x82, 0x82, 0xb8,
	0x83, 0xca, 0xe6, 0x57, 0xac, 0x77, 0x35, 0x6c, 0xce, 0x27, 0xb2, 0xd4, 0xe6, 0xf5, 0xab, 0x65,
	0xf3, 0x82, 0x82, 0xc4, 0xe6, 0x33, 0x74, 0xf3, 0x0c, 0x44, 0x79, 0x8b, 0x8d, 0x8f, 0x68, 0x6f,
	0x1e, 0x28, 0x49, 0xe2, 0x05, 0xaa, 0xca, 0xdc, 0x24, 0x41, 0x7c, 0x5a, 0xd2, 0x0f, 0x4b, 0x81,
	0x49, 0x02, 0x63, 0xea, 0x7b, 0x13, 0x02, 0x72, 0x6d, 0x3c, 0x47, 0xb5, 0x36, 0x78, 0xb0, 0x8a,
	0xfb, 0x22, 0x0d, 0x5b, 0xc0, 0x8a, 0xf5, 0x34, 0x7f, 0x5e, 0x47, 0xbb, 0x69, 0x7b, 0xe2, 0xab,
	0x82, 0xbf, 0x6a, 0x68, 0x7b, 0x7e, 0x12, 0xe1, 0xf6, 0x2a, 0x06, 0xa6, 0xde, 0x29, 0x89, 0x92,
	0x74, 0xb9, 0xf6, 0xe9, 0xd7, 0xdf, 0xcf, 0x95, 0x5d, 0xbc, 0x6d, 0x8e, 0x1a, 0xe9, 0xbf, 0x16,
	0xc7, 0xdf, 0x35, 0xb4, 0x93, 0x09, 0x20, 0xee, 0xac, 0x64, 0x04, 0xe9, 0xcf, 0xca, 0xc2, 0x24,
	0xd4, 0xef, 0x2a, 0xea, 0xb7, 0x8d, 0x0c, 0xf5, 0x93, 0xcd, 0xe9, 0x1a, 0x7f, 0xd3, 0xd0, 0x8d,
	0xd9, 0xbb, 0x87, 0x4f, 0x0b, 0xd6, 0xce, 0x49, 0x80, 0xde, 0x2a, 0x85, 0x91, 0x90, 0xbf, 0xa3,
	0xc8, 0x1f, 0xe0, 0xfd, 0x79, 0xf2, 0xe6, 0x7b, 0x79, 0xcb, 0x3e, 0xe0, 0x3f, 0x1a, 0xda, 0xc9,
	0x04, 0xb3, 0xb0, 0xfd, 0xf9, 0xa3, 0xa9, 0xb0, 0xfd, 0x97, 0xcd, 0x87, 0x27, 0x4a, 0xc1, 0x43,
	0xfd, 0x38, 0xab, 0x20, 0x3d, 0x2a, 0xd1, 0x55, 0x5c, 0x95, 0xa8, 0xd9, 0xc6, 0x7c, 0xd1, 0xd0,
	0x4e, 0x26, 0x47, 0x85, 0xf5, 0xe5, 0x67, 0xba, 0xb0, 0xbe, 0x4b, 0xe2, 0x6c, 0x5c, 0x3b, 0x6d,
	0xbe, 0xbd, 0xbf, 0xfc, 0xa5, 0xb5, 0xf8, 0xf0, 0xeb, 0x6e, 0xa8, 0xc7, 0xd5, 0x83, 0x7f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x44, 0xb1, 0x60, 0xa1, 0x15, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RecipeRunServiceClient is the client API for RecipeRunService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RecipeRunServiceClient interface {
	ListRecipeRuns(ctx context.Context, in *ListRecipeRunsRequest, opts ...grpc.CallOption) (*ListRecipeRunsResponse, error)
	CreateRecipeRun(ctx context.Context, in *CreateRecipeRunRequest, opts ...grpc.CallOption) (*CreateRecipeRunResponse, error)
	GetRecipeRun(ctx context.Context, in *GetRecipeRunRequest, opts ...grpc.CallOption) (*GetRecipeRunResponse, error)
	UpdateRecipeRun(ctx context.Context, in *UpdateRecipeRunRequest, opts ...grpc.CallOption) (*UpdateRecipeRunResponse, error)
	DeleteRecipeRun(ctx context.Context, in *DeleteRecipeRunRequest, opts ...grpc.CallOption) (*DeleteRecipeRunResponse, error)
}

type recipeRunServiceClient struct {
	cc *grpc.ClientConn
}

func NewRecipeRunServiceClient(cc *grpc.ClientConn) RecipeRunServiceClient {
	return &recipeRunServiceClient{cc}
}

func (c *recipeRunServiceClient) ListRecipeRuns(ctx context.Context, in *ListRecipeRunsRequest, opts ...grpc.CallOption) (*ListRecipeRunsResponse, error) {
	out := new(ListRecipeRunsResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.reciperun.RecipeRunService/ListRecipeRuns", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recipeRunServiceClient) CreateRecipeRun(ctx context.Context, in *CreateRecipeRunRequest, opts ...grpc.CallOption) (*CreateRecipeRunResponse, error) {
	out := new(CreateRecipeRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.reciperun.RecipeRunService/CreateRecipeRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recipeRunServiceClient) GetRecipeRun(ctx context.Context, in *GetRecipeRunRequest, opts ...grpc.CallOption) (*GetRecipeRunResponse, error) {
	out := new(GetRecipeRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.reciperun.RecipeRunService/GetRecipeRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recipeRunServiceClient) UpdateRecipeRun(ctx context.Context, in *UpdateRecipeRunRequest, opts ...grpc.CallOption) (*UpdateRecipeRunResponse, error) {
	out := new(UpdateRecipeRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.reciperun.RecipeRunService/UpdateRecipeRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recipeRunServiceClient) DeleteRecipeRun(ctx context.Context, in *DeleteRecipeRunRequest, opts ...grpc.CallOption) (*DeleteRecipeRunResponse, error) {
	out := new(DeleteRecipeRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.reciperun.RecipeRunService/DeleteRecipeRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RecipeRunServiceServer is the server API for RecipeRunService service.
type RecipeRunServiceServer interface {
	ListRecipeRuns(context.Context, *ListRecipeRunsRequest) (*ListRecipeRunsResponse, error)
	CreateRecipeRun(context.Context, *CreateRecipeRunRequest) (*CreateRecipeRunResponse, error)
	GetRecipeRun(context.Context, *GetRecipeRunRequest) (*GetRecipeRunResponse, error)
	UpdateRecipeRun(context.Context, *UpdateRecipeRunRequest) (*UpdateRecipeRunResponse, error)
	DeleteRecipeRun(context.Context, *DeleteRecipeRunRequest) (*DeleteRecipeRunResponse, error)
}

// UnimplementedRecipeRunServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRecipeRunServiceServer struct {
}

func (*UnimplementedRecipeRunServiceServer) ListRecipeRuns(ctx context.Context, req *ListRecipeRunsRequest) (*ListRecipeRunsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRecipeRuns not implemented")
}
func (*UnimplementedRecipeRunServiceServer) CreateRecipeRun(ctx context.Context, req *CreateRecipeRunRequest) (*CreateRecipeRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRecipeRun not implemented")
}
func (*UnimplementedRecipeRunServiceServer) GetRecipeRun(ctx context.Context, req *GetRecipeRunRequest) (*GetRecipeRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecipeRun not implemented")
}
func (*UnimplementedRecipeRunServiceServer) UpdateRecipeRun(ctx context.Context, req *UpdateRecipeRunRequest) (*UpdateRecipeRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRecipeRun not implemented")
}
func (*UnimplementedRecipeRunServiceServer) DeleteRecipeRun(ctx context.Context, req *DeleteRecipeRunRequest) (*DeleteRecipeRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRecipeRun not implemented")
}

func RegisterRecipeRunServiceServer(s *grpc.Server, srv RecipeRunServiceServer) {
	s.RegisterService(&_RecipeRunService_serviceDesc, srv)
}

func _RecipeRunService_ListRecipeRuns_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRecipeRunsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecipeRunServiceServer).ListRecipeRuns(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.reciperun.RecipeRunService/ListRecipeRuns",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecipeRunServiceServer).ListRecipeRuns(ctx, req.(*ListRecipeRunsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RecipeRunService_CreateRecipeRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRecipeRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecipeRunServiceServer).CreateRecipeRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.reciperun.RecipeRunService/CreateRecipeRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecipeRunServiceServer).CreateRecipeRun(ctx, req.(*CreateRecipeRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RecipeRunService_GetRecipeRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRecipeRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecipeRunServiceServer).GetRecipeRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.reciperun.RecipeRunService/GetRecipeRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecipeRunServiceServer).GetRecipeRun(ctx, req.(*GetRecipeRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RecipeRunService_UpdateRecipeRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRecipeRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecipeRunServiceServer).UpdateRecipeRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.reciperun.RecipeRunService/UpdateRecipeRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecipeRunServiceServer).UpdateRecipeRun(ctx, req.(*UpdateRecipeRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RecipeRunService_DeleteRecipeRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRecipeRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecipeRunServiceServer).DeleteRecipeRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.reciperun.RecipeRunService/DeleteRecipeRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecipeRunServiceServer).DeleteRecipeRun(ctx, req.(*DeleteRecipeRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RecipeRunService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.metaprov.modeld.services.reciperun.RecipeRunService",
	HandlerType: (*RecipeRunServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListRecipeRuns",
			Handler:    _RecipeRunService_ListRecipeRuns_Handler,
		},
		{
			MethodName: "CreateRecipeRun",
			Handler:    _RecipeRunService_CreateRecipeRun_Handler,
		},
		{
			MethodName: "GetRecipeRun",
			Handler:    _RecipeRunService_GetRecipeRun_Handler,
		},
		{
			MethodName: "UpdateRecipeRun",
			Handler:    _RecipeRunService_UpdateRecipeRun_Handler,
		},
		{
			MethodName: "DeleteRecipeRun",
			Handler:    _RecipeRunService_DeleteRecipeRun_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/reciperun/reciperun.proto",
}
