syntax = "proto3";
option go_package = "github.com/metaprov/modelaapi/services/reciperun/v1";
package github.com.metaprov.modelaapi.services.reciperun.v1;

import "google/api/annotations.proto";
import "github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1/generated.proto";

message ListRecipeRunsRequest {
    string namespace = 1;
    map<string,string> labels =3;
}

message ListRecipeRunsResponse {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.RecipeRunList items = 1;
}

message CreateRecipeRunRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.RecipeRun item = 1;
}

message CreateRecipeRunResponse {

}

message UpdateRecipeRunRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.RecipeRun item = 1;
}

message UpdateRecipeRunResponse {

}

message GetRecipeRunRequest {
    string namespace = 1;
    string name      = 2;
}


message GetRecipeRunResponse {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.RecipeRun item = 1;
    string yaml = 2;
}


message DeleteRecipeRunRequest {
    string namespace = 1;
    string name      = 2;
}

message DeleteRecipeRunResponse {

}


service RecipeRunService {
    rpc ListRecipeRuns(ListRecipeRunsRequest) returns (ListRecipeRunsResponse) {
        option (google.api.http).get = "/v1/reciperuns";
    }
    rpc CreateRecipeRun(CreateRecipeRunRequest) returns (CreateRecipeRunResponse) {
        option (google.api.http) = {
			post: "/v1/reciperuns"
			body: "*"
		};
    }
    rpc GetRecipeRun(GetRecipeRunRequest) returns (GetRecipeRunResponse) {
        option (google.api.http).get = "/v1/reciperuns/{name}";
    }
    rpc UpdateRecipeRun(UpdateRecipeRunRequest) returns (UpdateRecipeRunResponse) {
        option (google.api.http) = {
			put: "/v1/reciperuns/{reciperun.metadata.name}"
			body: "*"
		};
    }

    rpc DeleteRecipeRun(DeleteRecipeRunRequest) returns (DeleteRecipeRunResponse) {}
}