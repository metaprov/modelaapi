// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.7
// source: github.com/metaprov/modelaapi/services/notebookrun/v1/notebookrun.proto

package v1

import (
	context "context"
	v1alpha1 "github.com/metaprov/modelaapi/pkg/apis/training/v1alpha1/v1alpha1"
	_ "github.com/metaprov/modelaapi/services/common/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListNotebookRunsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Labels    map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListNotebookRunsRequest) Reset() {
	*x = ListNotebookRunsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNotebookRunsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotebookRunsRequest) ProtoMessage() {}

func (x *ListNotebookRunsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotebookRunsRequest.ProtoReflect.Descriptor instead.
func (*ListNotebookRunsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_rawDescGZIP(), []int{0}
}

func (x *ListNotebookRunsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListNotebookRunsRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ListNotebookRunsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items *v1alpha1.NotebookRunList `protobuf:"bytes,1,opt,name=items,proto3" json:"items,omitempty"`
}

func (x *ListNotebookRunsResponse) Reset() {
	*x = ListNotebookRunsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNotebookRunsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotebookRunsResponse) ProtoMessage() {}

func (x *ListNotebookRunsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotebookRunsResponse.ProtoReflect.Descriptor instead.
func (*ListNotebookRunsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_rawDescGZIP(), []int{1}
}

func (x *ListNotebookRunsResponse) GetItems() *v1alpha1.NotebookRunList {
	if x != nil {
		return x.Items
	}
	return nil
}

type NotebookRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NotebookRunResponse) Reset() {
	*x = NotebookRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotebookRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotebookRunResponse) ProtoMessage() {}

func (x *NotebookRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotebookRunResponse.ProtoReflect.Descriptor instead.
func (*NotebookRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_rawDescGZIP(), []int{2}
}

type CreateNotebookRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.NotebookRun `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *CreateNotebookRunRequest) Reset() {
	*x = CreateNotebookRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNotebookRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotebookRunRequest) ProtoMessage() {}

func (x *CreateNotebookRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotebookRunRequest.ProtoReflect.Descriptor instead.
func (*CreateNotebookRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_rawDescGZIP(), []int{3}
}

func (x *CreateNotebookRunRequest) GetItem() *v1alpha1.NotebookRun {
	if x != nil {
		return x.Item
	}
	return nil
}

type CreateNotebookRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateNotebookRunResponse) Reset() {
	*x = CreateNotebookRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNotebookRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotebookRunResponse) ProtoMessage() {}

func (x *CreateNotebookRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotebookRunResponse.ProtoReflect.Descriptor instead.
func (*CreateNotebookRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_rawDescGZIP(), []int{4}
}

type UpdateNotebookRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.NotebookRun `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *UpdateNotebookRunRequest) Reset() {
	*x = UpdateNotebookRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNotebookRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotebookRunRequest) ProtoMessage() {}

func (x *UpdateNotebookRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotebookRunRequest.ProtoReflect.Descriptor instead.
func (*UpdateNotebookRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateNotebookRunRequest) GetItem() *v1alpha1.NotebookRun {
	if x != nil {
		return x.Item
	}
	return nil
}

type UpdateNotebookRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateNotebookRunResponse) Reset() {
	*x = UpdateNotebookRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNotebookRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotebookRunResponse) ProtoMessage() {}

func (x *UpdateNotebookRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotebookRunResponse.ProtoReflect.Descriptor instead.
func (*UpdateNotebookRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_rawDescGZIP(), []int{6}
}

type GetNotebookRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetNotebookRunRequest) Reset() {
	*x = GetNotebookRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotebookRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotebookRunRequest) ProtoMessage() {}

func (x *GetNotebookRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotebookRunRequest.ProtoReflect.Descriptor instead.
func (*GetNotebookRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_rawDescGZIP(), []int{7}
}

func (x *GetNotebookRunRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetNotebookRunRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetNotebookRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.NotebookRun `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Yaml string                `protobuf:"bytes,2,opt,name=yaml,proto3" json:"yaml,omitempty"`
}

func (x *GetNotebookRunResponse) Reset() {
	*x = GetNotebookRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotebookRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotebookRunResponse) ProtoMessage() {}

func (x *GetNotebookRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotebookRunResponse.ProtoReflect.Descriptor instead.
func (*GetNotebookRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_rawDescGZIP(), []int{8}
}

func (x *GetNotebookRunResponse) GetItem() *v1alpha1.NotebookRun {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *GetNotebookRunResponse) GetYaml() string {
	if x != nil {
		return x.Yaml
	}
	return ""
}

type DeleteNotebookRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteNotebookRunRequest) Reset() {
	*x = DeleteNotebookRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNotebookRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotebookRunRequest) ProtoMessage() {}

func (x *DeleteNotebookRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotebookRunRequest.ProtoReflect.Descriptor instead.
func (*DeleteNotebookRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteNotebookRunRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeleteNotebookRunRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteNotebookRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteNotebookRunResponse) Reset() {
	*x = DeleteNotebookRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNotebookRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotebookRunResponse) ProtoMessage() {}

func (x *DeleteNotebookRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotebookRunResponse.ProtoReflect.Descriptor instead.
func (*DeleteNotebookRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_rawDescGZIP(), []int{10}
}

var File_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto protoreflect.FileDescriptor

var file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_rawDesc = []byte{
	0x0a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x72, 0x75, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x72, 0x75, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x48,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70,
	0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe6, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74,
	0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x75, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x72, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f,
	0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x75, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x7b, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x52, 0x75, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52,
	0x75, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x15, 0x0a,
	0x13, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x75, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x59, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x52, 0x75, 0x6e, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x1b, 0x0a, 0x19, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x75, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x75, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f,
	0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x75, 0x6e, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22,
	0x1b, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x49, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x75, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4e,
	0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x59, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x75, 0x6e, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x61, 0x6d,
	0x6c, 0x22, 0x4c, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x1b, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x9e, 0x09, 0x0a,
	0x12, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x75, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0xd7, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x75, 0x6e, 0x73, 0x12, 0x4e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x75, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x75, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1c, 0x12, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2f, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x72, 0x75, 0x6e, 0x73, 0x12, 0xdd, 0x01,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x52, 0x75, 0x6e, 0x12, 0x4f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6e, 0x6f, 0x74,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x50, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6e, 0x6f,
	0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x75, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6e, 0x6f,
	0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x72, 0x75, 0x6e, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0xd8, 0x01,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x75, 0x6e,
	0x12, 0x4c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4d,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x72, 0x75, 0x6e,
	0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0xf9, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x75, 0x6e, 0x12, 0x4f,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x50, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3b, 0x1a, 0x36, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x72, 0x75, 0x6e, 0x73, 0x2f, 0x7b, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x72,
	0x75, 0x6e, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x6e, 0x61, 0x6d, 0x65,
	0x7d, 0x3a, 0x01, 0x2a, 0x12, 0xf6, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e,
	0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x75, 0x6e, 0x12, 0x4f, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x72, 0x75, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x50, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x72, 0x75, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x38, 0x2a, 0x36, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x72, 0x75, 0x6e,
	0x73, 0x2f, 0x7b, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x72, 0x75, 0x6e, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x42, 0x37, 0x5a,
	0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x72, 0x75, 0x6e, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_rawDescOnce sync.Once
	file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_rawDescData = file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_rawDesc
)

func file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_rawDescGZIP() []byte {
	file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_rawDescOnce.Do(func() {
		file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_rawDescData)
	})
	return file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_rawDescData
}

var file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_goTypes = []interface{}{
	(*ListNotebookRunsRequest)(nil),   // 0: github.com.metaprov.modelaapi.services.notebookrun.v1.ListNotebookRunsRequest
	(*ListNotebookRunsResponse)(nil),  // 1: github.com.metaprov.modelaapi.services.notebookrun.v1.ListNotebookRunsResponse
	(*NotebookRunResponse)(nil),       // 2: github.com.metaprov.modelaapi.services.notebookrun.v1.NotebookRunResponse
	(*CreateNotebookRunRequest)(nil),  // 3: github.com.metaprov.modelaapi.services.notebookrun.v1.CreateNotebookRunRequest
	(*CreateNotebookRunResponse)(nil), // 4: github.com.metaprov.modelaapi.services.notebookrun.v1.CreateNotebookRunResponse
	(*UpdateNotebookRunRequest)(nil),  // 5: github.com.metaprov.modelaapi.services.notebookrun.v1.UpdateNotebookRunRequest
	(*UpdateNotebookRunResponse)(nil), // 6: github.com.metaprov.modelaapi.services.notebookrun.v1.UpdateNotebookRunResponse
	(*GetNotebookRunRequest)(nil),     // 7: github.com.metaprov.modelaapi.services.notebookrun.v1.GetNotebookRunRequest
	(*GetNotebookRunResponse)(nil),    // 8: github.com.metaprov.modelaapi.services.notebookrun.v1.GetNotebookRunResponse
	(*DeleteNotebookRunRequest)(nil),  // 9: github.com.metaprov.modelaapi.services.notebookrun.v1.DeleteNotebookRunRequest
	(*DeleteNotebookRunResponse)(nil), // 10: github.com.metaprov.modelaapi.services.notebookrun.v1.DeleteNotebookRunResponse
	nil,                               // 11: github.com.metaprov.modelaapi.services.notebookrun.v1.ListNotebookRunsRequest.LabelsEntry
	(*v1alpha1.NotebookRunList)(nil),  // 12: github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.NotebookRunList
	(*v1alpha1.NotebookRun)(nil),      // 13: github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.NotebookRun
}
var file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_depIdxs = []int32{
	11, // 0: github.com.metaprov.modelaapi.services.notebookrun.v1.ListNotebookRunsRequest.labels:type_name -> github.com.metaprov.modelaapi.services.notebookrun.v1.ListNotebookRunsRequest.LabelsEntry
	12, // 1: github.com.metaprov.modelaapi.services.notebookrun.v1.ListNotebookRunsResponse.items:type_name -> github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.NotebookRunList
	13, // 2: github.com.metaprov.modelaapi.services.notebookrun.v1.CreateNotebookRunRequest.item:type_name -> github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.NotebookRun
	13, // 3: github.com.metaprov.modelaapi.services.notebookrun.v1.UpdateNotebookRunRequest.item:type_name -> github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.NotebookRun
	13, // 4: github.com.metaprov.modelaapi.services.notebookrun.v1.GetNotebookRunResponse.item:type_name -> github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.NotebookRun
	0,  // 5: github.com.metaprov.modelaapi.services.notebookrun.v1.NotebookRunService.ListNotebookRuns:input_type -> github.com.metaprov.modelaapi.services.notebookrun.v1.ListNotebookRunsRequest
	3,  // 6: github.com.metaprov.modelaapi.services.notebookrun.v1.NotebookRunService.CreateNotebookRun:input_type -> github.com.metaprov.modelaapi.services.notebookrun.v1.CreateNotebookRunRequest
	7,  // 7: github.com.metaprov.modelaapi.services.notebookrun.v1.NotebookRunService.GetNotebookRun:input_type -> github.com.metaprov.modelaapi.services.notebookrun.v1.GetNotebookRunRequest
	5,  // 8: github.com.metaprov.modelaapi.services.notebookrun.v1.NotebookRunService.UpdateNotebookRun:input_type -> github.com.metaprov.modelaapi.services.notebookrun.v1.UpdateNotebookRunRequest
	9,  // 9: github.com.metaprov.modelaapi.services.notebookrun.v1.NotebookRunService.DeleteNotebookRun:input_type -> github.com.metaprov.modelaapi.services.notebookrun.v1.DeleteNotebookRunRequest
	1,  // 10: github.com.metaprov.modelaapi.services.notebookrun.v1.NotebookRunService.ListNotebookRuns:output_type -> github.com.metaprov.modelaapi.services.notebookrun.v1.ListNotebookRunsResponse
	4,  // 11: github.com.metaprov.modelaapi.services.notebookrun.v1.NotebookRunService.CreateNotebookRun:output_type -> github.com.metaprov.modelaapi.services.notebookrun.v1.CreateNotebookRunResponse
	8,  // 12: github.com.metaprov.modelaapi.services.notebookrun.v1.NotebookRunService.GetNotebookRun:output_type -> github.com.metaprov.modelaapi.services.notebookrun.v1.GetNotebookRunResponse
	6,  // 13: github.com.metaprov.modelaapi.services.notebookrun.v1.NotebookRunService.UpdateNotebookRun:output_type -> github.com.metaprov.modelaapi.services.notebookrun.v1.UpdateNotebookRunResponse
	10, // 14: github.com.metaprov.modelaapi.services.notebookrun.v1.NotebookRunService.DeleteNotebookRun:output_type -> github.com.metaprov.modelaapi.services.notebookrun.v1.DeleteNotebookRunResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_init() }
func file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_init() {
	if File_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNotebookRunsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNotebookRunsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotebookRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNotebookRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNotebookRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNotebookRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNotebookRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotebookRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotebookRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNotebookRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNotebookRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_goTypes,
		DependencyIndexes: file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_depIdxs,
		MessageInfos:      file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_msgTypes,
	}.Build()
	File_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto = out.File
	file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_rawDesc = nil
	file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_goTypes = nil
	file_github_com_metaprov_modelaapi_services_notebookrun_v1_notebookrun_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NotebookRunServiceClient is the client API for NotebookRunService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NotebookRunServiceClient interface {
	ListNotebookRuns(ctx context.Context, in *ListNotebookRunsRequest, opts ...grpc.CallOption) (*ListNotebookRunsResponse, error)
	CreateNotebookRun(ctx context.Context, in *CreateNotebookRunRequest, opts ...grpc.CallOption) (*CreateNotebookRunResponse, error)
	GetNotebookRun(ctx context.Context, in *GetNotebookRunRequest, opts ...grpc.CallOption) (*GetNotebookRunResponse, error)
	UpdateNotebookRun(ctx context.Context, in *UpdateNotebookRunRequest, opts ...grpc.CallOption) (*UpdateNotebookRunResponse, error)
	DeleteNotebookRun(ctx context.Context, in *DeleteNotebookRunRequest, opts ...grpc.CallOption) (*DeleteNotebookRunResponse, error)
}

type notebookRunServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewNotebookRunServiceClient(cc grpc.ClientConnInterface) NotebookRunServiceClient {
	return &notebookRunServiceClient{cc}
}

func (c *notebookRunServiceClient) ListNotebookRuns(ctx context.Context, in *ListNotebookRunsRequest, opts ...grpc.CallOption) (*ListNotebookRunsResponse, error) {
	out := new(ListNotebookRunsResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.notebookrun.v1.NotebookRunService/ListNotebookRuns", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notebookRunServiceClient) CreateNotebookRun(ctx context.Context, in *CreateNotebookRunRequest, opts ...grpc.CallOption) (*CreateNotebookRunResponse, error) {
	out := new(CreateNotebookRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.notebookrun.v1.NotebookRunService/CreateNotebookRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notebookRunServiceClient) GetNotebookRun(ctx context.Context, in *GetNotebookRunRequest, opts ...grpc.CallOption) (*GetNotebookRunResponse, error) {
	out := new(GetNotebookRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.notebookrun.v1.NotebookRunService/GetNotebookRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notebookRunServiceClient) UpdateNotebookRun(ctx context.Context, in *UpdateNotebookRunRequest, opts ...grpc.CallOption) (*UpdateNotebookRunResponse, error) {
	out := new(UpdateNotebookRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.notebookrun.v1.NotebookRunService/UpdateNotebookRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notebookRunServiceClient) DeleteNotebookRun(ctx context.Context, in *DeleteNotebookRunRequest, opts ...grpc.CallOption) (*DeleteNotebookRunResponse, error) {
	out := new(DeleteNotebookRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.notebookrun.v1.NotebookRunService/DeleteNotebookRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NotebookRunServiceServer is the server API for NotebookRunService service.
type NotebookRunServiceServer interface {
	ListNotebookRuns(context.Context, *ListNotebookRunsRequest) (*ListNotebookRunsResponse, error)
	CreateNotebookRun(context.Context, *CreateNotebookRunRequest) (*CreateNotebookRunResponse, error)
	GetNotebookRun(context.Context, *GetNotebookRunRequest) (*GetNotebookRunResponse, error)
	UpdateNotebookRun(context.Context, *UpdateNotebookRunRequest) (*UpdateNotebookRunResponse, error)
	DeleteNotebookRun(context.Context, *DeleteNotebookRunRequest) (*DeleteNotebookRunResponse, error)
}

// UnimplementedNotebookRunServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNotebookRunServiceServer struct {
}

func (*UnimplementedNotebookRunServiceServer) ListNotebookRuns(context.Context, *ListNotebookRunsRequest) (*ListNotebookRunsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNotebookRuns not implemented")
}
func (*UnimplementedNotebookRunServiceServer) CreateNotebookRun(context.Context, *CreateNotebookRunRequest) (*CreateNotebookRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNotebookRun not implemented")
}
func (*UnimplementedNotebookRunServiceServer) GetNotebookRun(context.Context, *GetNotebookRunRequest) (*GetNotebookRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNotebookRun not implemented")
}
func (*UnimplementedNotebookRunServiceServer) UpdateNotebookRun(context.Context, *UpdateNotebookRunRequest) (*UpdateNotebookRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNotebookRun not implemented")
}
func (*UnimplementedNotebookRunServiceServer) DeleteNotebookRun(context.Context, *DeleteNotebookRunRequest) (*DeleteNotebookRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNotebookRun not implemented")
}

func RegisterNotebookRunServiceServer(s *grpc.Server, srv NotebookRunServiceServer) {
	s.RegisterService(&_NotebookRunService_serviceDesc, srv)
}

func _NotebookRunService_ListNotebookRuns_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNotebookRunsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotebookRunServiceServer).ListNotebookRuns(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.notebookrun.v1.NotebookRunService/ListNotebookRuns",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotebookRunServiceServer).ListNotebookRuns(ctx, req.(*ListNotebookRunsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NotebookRunService_CreateNotebookRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNotebookRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotebookRunServiceServer).CreateNotebookRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.notebookrun.v1.NotebookRunService/CreateNotebookRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotebookRunServiceServer).CreateNotebookRun(ctx, req.(*CreateNotebookRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NotebookRunService_GetNotebookRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNotebookRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotebookRunServiceServer).GetNotebookRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.notebookrun.v1.NotebookRunService/GetNotebookRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotebookRunServiceServer).GetNotebookRun(ctx, req.(*GetNotebookRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NotebookRunService_UpdateNotebookRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNotebookRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotebookRunServiceServer).UpdateNotebookRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.notebookrun.v1.NotebookRunService/UpdateNotebookRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotebookRunServiceServer).UpdateNotebookRun(ctx, req.(*UpdateNotebookRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NotebookRunService_DeleteNotebookRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNotebookRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotebookRunServiceServer).DeleteNotebookRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.notebookrun.v1.NotebookRunService/DeleteNotebookRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotebookRunServiceServer).DeleteNotebookRun(ctx, req.(*DeleteNotebookRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NotebookRunService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.metaprov.modelaapi.services.notebookrun.v1.NotebookRunService",
	HandlerType: (*NotebookRunServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListNotebookRuns",
			Handler:    _NotebookRunService_ListNotebookRuns_Handler,
		},
		{
			MethodName: "CreateNotebookRun",
			Handler:    _NotebookRunService_CreateNotebookRun_Handler,
		},
		{
			MethodName: "GetNotebookRun",
			Handler:    _NotebookRunService_GetNotebookRun_Handler,
		},
		{
			MethodName: "UpdateNotebookRun",
			Handler:    _NotebookRunService_UpdateNotebookRun_Handler,
		},
		{
			MethodName: "DeleteNotebookRun",
			Handler:    _NotebookRunService_DeleteNotebookRun_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/metaprov/modelaapi/services/notebookrun/v1/notebookrun.proto",
}
