// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: services/notebookrun/v1/notebookrun.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	v1alpha1 "github.com/metaprov/modeldapi/pkg/apis/training/v1alpha1"
	_ "github.com/metaprov/modeldapi/services/common/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ListNotebookRunsRequest struct {
	Namespace            string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Labels               map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListNotebookRunsRequest) Reset()         { *m = ListNotebookRunsRequest{} }
func (m *ListNotebookRunsRequest) String() string { return proto.CompactTextString(m) }
func (*ListNotebookRunsRequest) ProtoMessage()    {}
func (*ListNotebookRunsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_47bfdac9ab2073ee, []int{0}
}
func (m *ListNotebookRunsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNotebookRunsRequest.Unmarshal(m, b)
}
func (m *ListNotebookRunsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNotebookRunsRequest.Marshal(b, m, deterministic)
}
func (m *ListNotebookRunsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNotebookRunsRequest.Merge(m, src)
}
func (m *ListNotebookRunsRequest) XXX_Size() int {
	return xxx_messageInfo_ListNotebookRunsRequest.Size(m)
}
func (m *ListNotebookRunsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNotebookRunsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNotebookRunsRequest proto.InternalMessageInfo

func (m *ListNotebookRunsRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ListNotebookRunsRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type ListNotebookRunsResponse struct {
	Items                *v1alpha1.NotebookRunList `protobuf:"bytes,1,opt,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ListNotebookRunsResponse) Reset()         { *m = ListNotebookRunsResponse{} }
func (m *ListNotebookRunsResponse) String() string { return proto.CompactTextString(m) }
func (*ListNotebookRunsResponse) ProtoMessage()    {}
func (*ListNotebookRunsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_47bfdac9ab2073ee, []int{1}
}
func (m *ListNotebookRunsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNotebookRunsResponse.Unmarshal(m, b)
}
func (m *ListNotebookRunsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNotebookRunsResponse.Marshal(b, m, deterministic)
}
func (m *ListNotebookRunsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNotebookRunsResponse.Merge(m, src)
}
func (m *ListNotebookRunsResponse) XXX_Size() int {
	return xxx_messageInfo_ListNotebookRunsResponse.Size(m)
}
func (m *ListNotebookRunsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNotebookRunsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNotebookRunsResponse proto.InternalMessageInfo

func (m *ListNotebookRunsResponse) GetItems() *v1alpha1.NotebookRunList {
	if m != nil {
		return m.Items
	}
	return nil
}

type NotebookRunResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotebookRunResponse) Reset()         { *m = NotebookRunResponse{} }
func (m *NotebookRunResponse) String() string { return proto.CompactTextString(m) }
func (*NotebookRunResponse) ProtoMessage()    {}
func (*NotebookRunResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_47bfdac9ab2073ee, []int{2}
}
func (m *NotebookRunResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotebookRunResponse.Unmarshal(m, b)
}
func (m *NotebookRunResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotebookRunResponse.Marshal(b, m, deterministic)
}
func (m *NotebookRunResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotebookRunResponse.Merge(m, src)
}
func (m *NotebookRunResponse) XXX_Size() int {
	return xxx_messageInfo_NotebookRunResponse.Size(m)
}
func (m *NotebookRunResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NotebookRunResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NotebookRunResponse proto.InternalMessageInfo

type CreateNotebookRunRequest struct {
	Namespace            string                    `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string                    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Labels               map[string]string         `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Spec                 *v1alpha1.NotebookRunSpec `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CreateNotebookRunRequest) Reset()         { *m = CreateNotebookRunRequest{} }
func (m *CreateNotebookRunRequest) String() string { return proto.CompactTextString(m) }
func (*CreateNotebookRunRequest) ProtoMessage()    {}
func (*CreateNotebookRunRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_47bfdac9ab2073ee, []int{3}
}
func (m *CreateNotebookRunRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNotebookRunRequest.Unmarshal(m, b)
}
func (m *CreateNotebookRunRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNotebookRunRequest.Marshal(b, m, deterministic)
}
func (m *CreateNotebookRunRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNotebookRunRequest.Merge(m, src)
}
func (m *CreateNotebookRunRequest) XXX_Size() int {
	return xxx_messageInfo_CreateNotebookRunRequest.Size(m)
}
func (m *CreateNotebookRunRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNotebookRunRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNotebookRunRequest proto.InternalMessageInfo

func (m *CreateNotebookRunRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *CreateNotebookRunRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateNotebookRunRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateNotebookRunRequest) GetSpec() *v1alpha1.NotebookRunSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type CreateNotebookRunResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateNotebookRunResponse) Reset()         { *m = CreateNotebookRunResponse{} }
func (m *CreateNotebookRunResponse) String() string { return proto.CompactTextString(m) }
func (*CreateNotebookRunResponse) ProtoMessage()    {}
func (*CreateNotebookRunResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_47bfdac9ab2073ee, []int{4}
}
func (m *CreateNotebookRunResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNotebookRunResponse.Unmarshal(m, b)
}
func (m *CreateNotebookRunResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNotebookRunResponse.Marshal(b, m, deterministic)
}
func (m *CreateNotebookRunResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNotebookRunResponse.Merge(m, src)
}
func (m *CreateNotebookRunResponse) XXX_Size() int {
	return xxx_messageInfo_CreateNotebookRunResponse.Size(m)
}
func (m *CreateNotebookRunResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNotebookRunResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNotebookRunResponse proto.InternalMessageInfo

type UpdateNotebookRunRequest struct {
	Namespace            string                    `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string                    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Labels               map[string]string         `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Spec                 *v1alpha1.NotebookRunSpec `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *UpdateNotebookRunRequest) Reset()         { *m = UpdateNotebookRunRequest{} }
func (m *UpdateNotebookRunRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateNotebookRunRequest) ProtoMessage()    {}
func (*UpdateNotebookRunRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_47bfdac9ab2073ee, []int{5}
}
func (m *UpdateNotebookRunRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNotebookRunRequest.Unmarshal(m, b)
}
func (m *UpdateNotebookRunRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNotebookRunRequest.Marshal(b, m, deterministic)
}
func (m *UpdateNotebookRunRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNotebookRunRequest.Merge(m, src)
}
func (m *UpdateNotebookRunRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateNotebookRunRequest.Size(m)
}
func (m *UpdateNotebookRunRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNotebookRunRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNotebookRunRequest proto.InternalMessageInfo

func (m *UpdateNotebookRunRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *UpdateNotebookRunRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateNotebookRunRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *UpdateNotebookRunRequest) GetSpec() *v1alpha1.NotebookRunSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type UpdateNotebookRunResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateNotebookRunResponse) Reset()         { *m = UpdateNotebookRunResponse{} }
func (m *UpdateNotebookRunResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateNotebookRunResponse) ProtoMessage()    {}
func (*UpdateNotebookRunResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_47bfdac9ab2073ee, []int{6}
}
func (m *UpdateNotebookRunResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNotebookRunResponse.Unmarshal(m, b)
}
func (m *UpdateNotebookRunResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNotebookRunResponse.Marshal(b, m, deterministic)
}
func (m *UpdateNotebookRunResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNotebookRunResponse.Merge(m, src)
}
func (m *UpdateNotebookRunResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateNotebookRunResponse.Size(m)
}
func (m *UpdateNotebookRunResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNotebookRunResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNotebookRunResponse proto.InternalMessageInfo

type GetNotebookRunRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNotebookRunRequest) Reset()         { *m = GetNotebookRunRequest{} }
func (m *GetNotebookRunRequest) String() string { return proto.CompactTextString(m) }
func (*GetNotebookRunRequest) ProtoMessage()    {}
func (*GetNotebookRunRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_47bfdac9ab2073ee, []int{7}
}
func (m *GetNotebookRunRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNotebookRunRequest.Unmarshal(m, b)
}
func (m *GetNotebookRunRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNotebookRunRequest.Marshal(b, m, deterministic)
}
func (m *GetNotebookRunRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNotebookRunRequest.Merge(m, src)
}
func (m *GetNotebookRunRequest) XXX_Size() int {
	return xxx_messageInfo_GetNotebookRunRequest.Size(m)
}
func (m *GetNotebookRunRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNotebookRunRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNotebookRunRequest proto.InternalMessageInfo

func (m *GetNotebookRunRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *GetNotebookRunRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetNotebookRunResponse struct {
	Item                 *v1alpha1.NotebookRun `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Yaml                 string                `protobuf:"bytes,2,opt,name=yaml,proto3" json:"yaml,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GetNotebookRunResponse) Reset()         { *m = GetNotebookRunResponse{} }
func (m *GetNotebookRunResponse) String() string { return proto.CompactTextString(m) }
func (*GetNotebookRunResponse) ProtoMessage()    {}
func (*GetNotebookRunResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_47bfdac9ab2073ee, []int{8}
}
func (m *GetNotebookRunResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNotebookRunResponse.Unmarshal(m, b)
}
func (m *GetNotebookRunResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNotebookRunResponse.Marshal(b, m, deterministic)
}
func (m *GetNotebookRunResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNotebookRunResponse.Merge(m, src)
}
func (m *GetNotebookRunResponse) XXX_Size() int {
	return xxx_messageInfo_GetNotebookRunResponse.Size(m)
}
func (m *GetNotebookRunResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNotebookRunResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNotebookRunResponse proto.InternalMessageInfo

func (m *GetNotebookRunResponse) GetItem() *v1alpha1.NotebookRun {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *GetNotebookRunResponse) GetYaml() string {
	if m != nil {
		return m.Yaml
	}
	return ""
}

type DeleteNotebookRunRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNotebookRunRequest) Reset()         { *m = DeleteNotebookRunRequest{} }
func (m *DeleteNotebookRunRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteNotebookRunRequest) ProtoMessage()    {}
func (*DeleteNotebookRunRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_47bfdac9ab2073ee, []int{9}
}
func (m *DeleteNotebookRunRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNotebookRunRequest.Unmarshal(m, b)
}
func (m *DeleteNotebookRunRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNotebookRunRequest.Marshal(b, m, deterministic)
}
func (m *DeleteNotebookRunRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNotebookRunRequest.Merge(m, src)
}
func (m *DeleteNotebookRunRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteNotebookRunRequest.Size(m)
}
func (m *DeleteNotebookRunRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNotebookRunRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNotebookRunRequest proto.InternalMessageInfo

func (m *DeleteNotebookRunRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *DeleteNotebookRunRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DeleteNotebookRunResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNotebookRunResponse) Reset()         { *m = DeleteNotebookRunResponse{} }
func (m *DeleteNotebookRunResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteNotebookRunResponse) ProtoMessage()    {}
func (*DeleteNotebookRunResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_47bfdac9ab2073ee, []int{10}
}
func (m *DeleteNotebookRunResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNotebookRunResponse.Unmarshal(m, b)
}
func (m *DeleteNotebookRunResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNotebookRunResponse.Marshal(b, m, deterministic)
}
func (m *DeleteNotebookRunResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNotebookRunResponse.Merge(m, src)
}
func (m *DeleteNotebookRunResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteNotebookRunResponse.Size(m)
}
func (m *DeleteNotebookRunResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNotebookRunResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNotebookRunResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ListNotebookRunsRequest)(nil), "github.com.metaprov.modeld.services.notebookrun.v1.ListNotebookRunsRequest")
	proto.RegisterMapType((map[string]string)(nil), "github.com.metaprov.modeld.services.notebookrun.v1.ListNotebookRunsRequest.LabelsEntry")
	proto.RegisterType((*ListNotebookRunsResponse)(nil), "github.com.metaprov.modeld.services.notebookrun.v1.ListNotebookRunsResponse")
	proto.RegisterType((*NotebookRunResponse)(nil), "github.com.metaprov.modeld.services.notebookrun.v1.NotebookRunResponse")
	proto.RegisterType((*CreateNotebookRunRequest)(nil), "github.com.metaprov.modeld.services.notebookrun.v1.CreateNotebookRunRequest")
	proto.RegisterMapType((map[string]string)(nil), "github.com.metaprov.modeld.services.notebookrun.v1.CreateNotebookRunRequest.LabelsEntry")
	proto.RegisterType((*CreateNotebookRunResponse)(nil), "github.com.metaprov.modeld.services.notebookrun.v1.CreateNotebookRunResponse")
	proto.RegisterType((*UpdateNotebookRunRequest)(nil), "github.com.metaprov.modeld.services.notebookrun.v1.UpdateNotebookRunRequest")
	proto.RegisterMapType((map[string]string)(nil), "github.com.metaprov.modeld.services.notebookrun.v1.UpdateNotebookRunRequest.LabelsEntry")
	proto.RegisterType((*UpdateNotebookRunResponse)(nil), "github.com.metaprov.modeld.services.notebookrun.v1.UpdateNotebookRunResponse")
	proto.RegisterType((*GetNotebookRunRequest)(nil), "github.com.metaprov.modeld.services.notebookrun.v1.GetNotebookRunRequest")
	proto.RegisterType((*GetNotebookRunResponse)(nil), "github.com.metaprov.modeld.services.notebookrun.v1.GetNotebookRunResponse")
	proto.RegisterType((*DeleteNotebookRunRequest)(nil), "github.com.metaprov.modeld.services.notebookrun.v1.DeleteNotebookRunRequest")
	proto.RegisterType((*DeleteNotebookRunResponse)(nil), "github.com.metaprov.modeld.services.notebookrun.v1.DeleteNotebookRunResponse")
}

func init() {
	proto.RegisterFile("services/notebookrun/v1/notebookrun.proto", fileDescriptor_47bfdac9ab2073ee)
}

var fileDescriptor_47bfdac9ab2073ee = []byte{
	// 678 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0xcd, 0x6e, 0xd3, 0x4c,
	0x14, 0x95, 0xd3, 0xb4, 0x52, 0x6f, 0xa4, 0x4f, 0xed, 0x7c, 0x14, 0x8c, 0xe9, 0xa2, 0x98, 0x4d,
	0xcb, 0x62, 0xac, 0x04, 0x01, 0xa5, 0x12, 0x2c, 0x80, 0x0a, 0x4a, 0x03, 0x0b, 0x23, 0xc4, 0x8f,
	0x84, 0xd0, 0x24, 0xb9, 0x72, 0xad, 0xd8, 0x9e, 0xc1, 0x33, 0x89, 0x54, 0x55, 0x6c, 0xd8, 0xf0,
	0x00, 0xf0, 0x62, 0xc0, 0x86, 0x2d, 0x82, 0x07, 0xe0, 0x05, 0x90, 0x90, 0xc7, 0x4e, 0xeb, 0xfc,
	0x38, 0x2a, 0xc6, 0x8b, 0xee, 0x66, 0xc6, 0x9a, 0x73, 0xef, 0x39, 0xe7, 0xde, 0xeb, 0x81, 0x2d,
	0x89, 0xf1, 0xd0, 0xef, 0xa2, 0x74, 0x22, 0xae, 0xb0, 0xc3, 0x79, 0x3f, 0x1e, 0x44, 0xce, 0xb0,
	0x99, 0xdf, 0x52, 0x11, 0x73, 0xc5, 0x49, 0xcb, 0xf3, 0xd5, 0xc1, 0xa0, 0x43, 0xbb, 0x3c, 0xa4,
	0x21, 0x2a, 0x26, 0x62, 0x3e, 0xa4, 0x21, 0xef, 0x61, 0xd0, 0xa3, 0x23, 0x14, 0x9a, 0xbf, 0x36,
	0x6c, 0x5a, 0xeb, 0x1e, 0xe7, 0x5e, 0x80, 0x0e, 0x13, 0xbe, 0xc3, 0xa2, 0x88, 0x2b, 0xa6, 0x7c,
	0x1e, 0xc9, 0x14, 0xd1, 0x7a, 0x78, 0x82, 0xe8, 0x8c, 0x10, 0x9d, 0x14, 0x31, 0xb9, 0x20, 0xfa,
	0x5e, 0x72, 0x51, 0x3a, 0x2a, 0x66, 0x7e, 0xe4, 0x47, 0x9e, 0x33, 0x6c, 0xb2, 0x40, 0x1c, 0xb0,
	0xa6, 0xe3, 0x61, 0x84, 0x31, 0x53, 0xd8, 0xcb, 0x90, 0x6e, 0xcf, 0x47, 0x3a, 0x26, 0xd9, 0xe5,
	0x61, 0xc8, 0x35, 0xbf, 0x74, 0x95, 0x5e, 0xb7, 0x7f, 0x18, 0x70, 0xa1, 0xed, 0x4b, 0xf5, 0x24,
	0xcb, 0xde, 0x1d, 0x44, 0xd2, 0xc5, 0xb7, 0x03, 0x94, 0x8a, 0xac, 0xc3, 0x72, 0xc4, 0x42, 0x94,
	0x82, 0x75, 0xd1, 0x34, 0x36, 0x8c, 0xcd, 0x65, 0xf7, 0xe4, 0x80, 0x70, 0x58, 0x0a, 0x58, 0x07,
	0x03, 0x69, 0x2e, 0x6c, 0x2c, 0x6c, 0x36, 0x5a, 0xcf, 0xe9, 0xdf, 0xab, 0x44, 0x0b, 0x42, 0xd3,
	0xb6, 0x46, 0xde, 0x8d, 0x54, 0x7c, 0xe8, 0x66, 0x61, 0xac, 0x5b, 0xd0, 0xc8, 0x1d, 0x93, 0x15,
	0x58, 0xe8, 0xe3, 0x61, 0x96, 0x57, 0xb2, 0x24, 0xe7, 0x60, 0x71, 0xc8, 0x82, 0x01, 0x9a, 0x35,
	0x7d, 0x96, 0x6e, 0x76, 0x6a, 0xdb, 0x86, 0x7d, 0x04, 0xe6, 0x74, 0x24, 0x29, 0x78, 0x24, 0x91,
	0xbc, 0x81, 0x45, 0x5f, 0x61, 0x28, 0x35, 0x52, 0xa3, 0xb5, 0x37, 0x87, 0x06, 0x13, 0x3e, 0x15,
	0x7d, 0x8f, 0x26, 0xd6, 0xd0, 0x91, 0x35, 0x74, 0x64, 0x0d, 0xcd, 0xc1, 0x27, 0xd1, 0xdc, 0x14,
	0xd7, 0x5e, 0x83, 0xff, 0x73, 0x5f, 0x46, 0x71, 0xed, 0x6f, 0x35, 0x30, 0xef, 0xc5, 0xc8, 0x14,
	0x8e, 0x7d, 0x3d, 0x8d, 0xf4, 0x04, 0xea, 0xc9, 0x26, 0xe3, 0xa9, 0xd7, 0x44, 0x4c, 0xd8, 0xf1,
	0xa2, 0x8c, 0x1d, 0x45, 0xf9, 0xcc, 0xf2, 0x83, 0xbc, 0x86, 0xba, 0x14, 0xd8, 0x35, 0xeb, 0x15,
	0xea, 0xf6, 0x54, 0x60, 0xd7, 0xd5, 0xb0, 0xff, 0x62, 0xf7, 0x25, 0xb8, 0x38, 0x83, 0x49, 0x4e,
	0xf7, 0x67, 0xa2, 0x77, 0xa6, 0x74, 0x2f, 0xca, 0x67, 0xae, 0xee, 0x8b, 0x67, 0x51, 0xf7, 0x19,
	0x4c, 0x32, 0xdd, 0xf7, 0x60, 0xed, 0x01, 0xaa, 0x2a, 0x34, 0xb7, 0x3f, 0x18, 0x70, 0x7e, 0x12,
	0x2b, 0xeb, 0xe6, 0x97, 0x50, 0x4f, 0xba, 0x2e, 0x6b, 0xe6, 0xdd, 0x4a, 0xc4, 0x71, 0x35, 0x64,
	0x92, 0xc9, 0x21, 0x0b, 0x83, 0x51, 0x26, 0xc9, 0xda, 0x6e, 0x83, 0x79, 0x1f, 0x03, 0xac, 0xa6,
	0x96, 0x12, 0xfd, 0x66, 0xa0, 0xa5, 0xcc, 0x5a, 0x9f, 0x96, 0x81, 0xe4, 0x1d, 0x4b, 0x4b, 0x89,
	0x7c, 0x36, 0x60, 0x65, 0x72, 0xb6, 0x91, 0xfd, 0x0a, 0x67, 0xb1, 0xd5, 0xae, 0x06, 0x2c, 0x2b,
	0x03, 0xfb, 0xfd, 0xd7, 0x9f, 0x1f, 0x6b, 0xeb, 0xc4, 0xd2, 0x7f, 0xc6, 0xe3, 0xdf, 0x5a, 0xee,
	0xba, 0x24, 0xdf, 0x0d, 0x58, 0x9d, 0x6a, 0x60, 0xd2, 0xae, 0x72, 0xa2, 0x59, 0x8f, 0x2b, 0x42,
	0xcb, 0x68, 0x39, 0x9a, 0xd6, 0x96, 0x3d, 0x87, 0xd6, 0x4e, 0x23, 0xb7, 0x23, 0x5f, 0x0c, 0xf8,
	0x6f, 0xbc, 0x86, 0xc9, 0x5e, 0x99, 0x94, 0x66, 0xf6, 0x94, 0xf5, 0xa8, 0x0a, 0xa8, 0x8c, 0xda,
	0x96, 0xa6, 0x76, 0x85, 0x5c, 0x2e, 0xa6, 0xe6, 0x1c, 0x25, 0xf5, 0xfb, 0x8e, 0xfc, 0x36, 0x60,
	0x75, 0x6a, 0x02, 0x94, 0x33, 0xae, 0x68, 0x24, 0x96, 0x33, 0xae, 0x78, 0x2c, 0xed, 0x6b, 0x76,
	0xbb, 0xd6, 0x8d, 0xb9, 0xec, 0x72, 0x68, 0x49, 0xc8, 0x1e, 0x53, 0x8c, 0x6a, 0xca, 0xe3, 0xa6,
	0xfe, 0x32, 0x60, 0x75, 0xaa, 0x83, 0xcb, 0xf1, 0x2f, 0x1a, 0x2b, 0xe5, 0xf8, 0x17, 0x8e, 0x15,
	0xfb, 0x8e, 0xe6, 0xbf, 0x7d, 0xb5, 0x24, 0xff, 0xbb, 0x37, 0x5f, 0x5d, 0x3f, 0xe5, 0x0b, 0x74,
	0xfc, 0x99, 0xdd, 0x59, 0xd2, 0x0f, 0xd0, 0x6b, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xab, 0x1d,
	0x9a, 0x3a, 0x88, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NotebookRunServiceClient is the client API for NotebookRunService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NotebookRunServiceClient interface {
	ListNotebookRuns(ctx context.Context, in *ListNotebookRunsRequest, opts ...grpc.CallOption) (*ListNotebookRunsResponse, error)
	CreateNotebookRun(ctx context.Context, in *CreateNotebookRunRequest, opts ...grpc.CallOption) (*CreateNotebookRunResponse, error)
	GetNotebookRun(ctx context.Context, in *GetNotebookRunRequest, opts ...grpc.CallOption) (*GetNotebookRunResponse, error)
	UpdateNotebookRun(ctx context.Context, in *UpdateNotebookRunRequest, opts ...grpc.CallOption) (*UpdateNotebookRunResponse, error)
	DeleteNotebookRun(ctx context.Context, in *DeleteNotebookRunRequest, opts ...grpc.CallOption) (*DeleteNotebookRunResponse, error)
}

type notebookRunServiceClient struct {
	cc *grpc.ClientConn
}

func NewNotebookRunServiceClient(cc *grpc.ClientConn) NotebookRunServiceClient {
	return &notebookRunServiceClient{cc}
}

func (c *notebookRunServiceClient) ListNotebookRuns(ctx context.Context, in *ListNotebookRunsRequest, opts ...grpc.CallOption) (*ListNotebookRunsResponse, error) {
	out := new(ListNotebookRunsResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.notebookrun.v1.NotebookRunService/ListNotebookRuns", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notebookRunServiceClient) CreateNotebookRun(ctx context.Context, in *CreateNotebookRunRequest, opts ...grpc.CallOption) (*CreateNotebookRunResponse, error) {
	out := new(CreateNotebookRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.notebookrun.v1.NotebookRunService/CreateNotebookRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notebookRunServiceClient) GetNotebookRun(ctx context.Context, in *GetNotebookRunRequest, opts ...grpc.CallOption) (*GetNotebookRunResponse, error) {
	out := new(GetNotebookRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.notebookrun.v1.NotebookRunService/GetNotebookRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notebookRunServiceClient) UpdateNotebookRun(ctx context.Context, in *UpdateNotebookRunRequest, opts ...grpc.CallOption) (*UpdateNotebookRunResponse, error) {
	out := new(UpdateNotebookRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.notebookrun.v1.NotebookRunService/UpdateNotebookRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notebookRunServiceClient) DeleteNotebookRun(ctx context.Context, in *DeleteNotebookRunRequest, opts ...grpc.CallOption) (*DeleteNotebookRunResponse, error) {
	out := new(DeleteNotebookRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.notebookrun.v1.NotebookRunService/DeleteNotebookRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NotebookRunServiceServer is the server API for NotebookRunService service.
type NotebookRunServiceServer interface {
	ListNotebookRuns(context.Context, *ListNotebookRunsRequest) (*ListNotebookRunsResponse, error)
	CreateNotebookRun(context.Context, *CreateNotebookRunRequest) (*CreateNotebookRunResponse, error)
	GetNotebookRun(context.Context, *GetNotebookRunRequest) (*GetNotebookRunResponse, error)
	UpdateNotebookRun(context.Context, *UpdateNotebookRunRequest) (*UpdateNotebookRunResponse, error)
	DeleteNotebookRun(context.Context, *DeleteNotebookRunRequest) (*DeleteNotebookRunResponse, error)
}

// UnimplementedNotebookRunServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNotebookRunServiceServer struct {
}

func (*UnimplementedNotebookRunServiceServer) ListNotebookRuns(ctx context.Context, req *ListNotebookRunsRequest) (*ListNotebookRunsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNotebookRuns not implemented")
}
func (*UnimplementedNotebookRunServiceServer) CreateNotebookRun(ctx context.Context, req *CreateNotebookRunRequest) (*CreateNotebookRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNotebookRun not implemented")
}
func (*UnimplementedNotebookRunServiceServer) GetNotebookRun(ctx context.Context, req *GetNotebookRunRequest) (*GetNotebookRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNotebookRun not implemented")
}
func (*UnimplementedNotebookRunServiceServer) UpdateNotebookRun(ctx context.Context, req *UpdateNotebookRunRequest) (*UpdateNotebookRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNotebookRun not implemented")
}
func (*UnimplementedNotebookRunServiceServer) DeleteNotebookRun(ctx context.Context, req *DeleteNotebookRunRequest) (*DeleteNotebookRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNotebookRun not implemented")
}

func RegisterNotebookRunServiceServer(s *grpc.Server, srv NotebookRunServiceServer) {
	s.RegisterService(&_NotebookRunService_serviceDesc, srv)
}

func _NotebookRunService_ListNotebookRuns_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNotebookRunsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotebookRunServiceServer).ListNotebookRuns(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.notebookrun.v1.NotebookRunService/ListNotebookRuns",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotebookRunServiceServer).ListNotebookRuns(ctx, req.(*ListNotebookRunsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NotebookRunService_CreateNotebookRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNotebookRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotebookRunServiceServer).CreateNotebookRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.notebookrun.v1.NotebookRunService/CreateNotebookRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotebookRunServiceServer).CreateNotebookRun(ctx, req.(*CreateNotebookRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NotebookRunService_GetNotebookRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNotebookRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotebookRunServiceServer).GetNotebookRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.notebookrun.v1.NotebookRunService/GetNotebookRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotebookRunServiceServer).GetNotebookRun(ctx, req.(*GetNotebookRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NotebookRunService_UpdateNotebookRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNotebookRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotebookRunServiceServer).UpdateNotebookRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.notebookrun.v1.NotebookRunService/UpdateNotebookRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotebookRunServiceServer).UpdateNotebookRun(ctx, req.(*UpdateNotebookRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NotebookRunService_DeleteNotebookRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNotebookRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotebookRunServiceServer).DeleteNotebookRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.notebookrun.v1.NotebookRunService/DeleteNotebookRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotebookRunServiceServer).DeleteNotebookRun(ctx, req.(*DeleteNotebookRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NotebookRunService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.metaprov.modeld.services.notebookrun.v1.NotebookRunService",
	HandlerType: (*NotebookRunServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListNotebookRuns",
			Handler:    _NotebookRunService_ListNotebookRuns_Handler,
		},
		{
			MethodName: "CreateNotebookRun",
			Handler:    _NotebookRunService_CreateNotebookRun_Handler,
		},
		{
			MethodName: "GetNotebookRun",
			Handler:    _NotebookRunService_GetNotebookRun_Handler,
		},
		{
			MethodName: "UpdateNotebookRun",
			Handler:    _NotebookRunService_UpdateNotebookRun_Handler,
		},
		{
			MethodName: "DeleteNotebookRun",
			Handler:    _NotebookRunService_DeleteNotebookRun_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/notebookrun/v1/notebookrun.proto",
}
