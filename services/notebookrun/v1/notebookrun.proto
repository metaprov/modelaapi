syntax = "proto3";

option go_package = "github.com/metaprov/modelaapi/services/notebookrun/v1";
package github.com.metaprov.modelaapi.services.notebookrun.v1;

import "google/protobuf/field_mask.proto";
import "google/api/annotations.proto";
import "github.com/metaprov/modelaapi/pkg/apis/training/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/services/common/v1/common.proto";

message ListNotebookRunsRequest {
    string namespace = 1;
    map<string,string> labels =2;
    int32              page_size  = 3;
    string             page_token = 4;
    string             order_by   = 5;
}

message ListNotebookRunsResponse {
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.NotebookRunList notebookruns = 1;
    string next_page_token = 2;
}

message NotebookRunResponse {}

message CreateNotebookRunRequest {
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.NotebookRun  notebookrun = 1;
}

message CreateNotebookRunResponse {

}

message UpdateNotebookRunRequest {
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.NotebookRun notebookrun = 1;
    google.protobuf.FieldMask field_mask = 2;
}

message UpdateNotebookRunResponse {

}

message GetNotebookRunRequest {
    string namespace = 1;
    string name      = 2;
}

message GetNotebookRunResponse {
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.NotebookRun notbookrun = 1;
    string yaml = 2;
}

message DeleteNotebookRunRequest {
    string namespace = 1;
    string name      = 2;
}

message DeleteNotebookRunResponse {

}

service NotebookRunService {
    rpc ListNotebookRuns(ListNotebookRunsRequest) returns (ListNotebookRunsResponse) {
        option (google.api.http).get = "/v1/notebookruns/{namespace}";
    }
    rpc CreateNotebookRun(CreateNotebookRunRequest) returns (CreateNotebookRunResponse) {
        option (google.api.http) = {
			post: "/v1/notebookruns"
			body: "*"
		};
    }
    rpc GetNotebookRun(GetNotebookRunRequest) returns (GetNotebookRunResponse) {
        option (google.api.http).get = "/v1/notebookruns/{namespace}/{name}";
    }
    rpc UpdateNotebookRun(UpdateNotebookRunRequest) returns (UpdateNotebookRunResponse) {
        option (google.api.http) = {
			put: "/v1/notebookruns/{notebookrun.metadata.namespace}/{notebookrun.metadata.name}"
			body: "*"
		};
    }

    rpc DeleteNotebookRun(DeleteNotebookRunRequest) returns (DeleteNotebookRunResponse) {
        option (google.api.http) = {
			delete: "/v1/notebookruns/{namespace}/{name}"
		};
    }


}