// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.7
// source: github.com/metaprov/modelaapi/services/apicall/v1/apicall.proto

package v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	v1alpha1 "github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ListApiCallsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Labels    map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListApiCallsRequest) Reset() {
	*x = ListApiCallsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListApiCallsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApiCallsRequest) ProtoMessage() {}

func (x *ListApiCallsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApiCallsRequest.ProtoReflect.Descriptor instead.
func (*ListApiCallsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_rawDescGZIP(), []int{0}
}

func (x *ListApiCallsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListApiCallsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListApiCallsRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ListApiCallsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items *v1alpha1.ApiCallList `protobuf:"bytes,1,opt,name=items,proto3" json:"items,omitempty"`
}

func (x *ListApiCallsResponse) Reset() {
	*x = ListApiCallsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListApiCallsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApiCallsResponse) ProtoMessage() {}

func (x *ListApiCallsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApiCallsResponse.ProtoReflect.Descriptor instead.
func (*ListApiCallsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_rawDescGZIP(), []int{1}
}

func (x *ListApiCallsResponse) GetItems() *v1alpha1.ApiCallList {
	if x != nil {
		return x.Items
	}
	return nil
}

type CreateApiCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateApiCallResponse) Reset() {
	*x = CreateApiCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateApiCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApiCallResponse) ProtoMessage() {}

func (x *CreateApiCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApiCallResponse.ProtoReflect.Descriptor instead.
func (*CreateApiCallResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_rawDescGZIP(), []int{2}
}

type CreateApiCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.ApiCall `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *CreateApiCallRequest) Reset() {
	*x = CreateApiCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateApiCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApiCallRequest) ProtoMessage() {}

func (x *CreateApiCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApiCallRequest.ProtoReflect.Descriptor instead.
func (*CreateApiCallRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_rawDescGZIP(), []int{3}
}

func (x *CreateApiCallRequest) GetItem() *v1alpha1.ApiCall {
	if x != nil {
		return x.Item
	}
	return nil
}

type UpdateApiCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.ApiCall `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *UpdateApiCallRequest) Reset() {
	*x = UpdateApiCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateApiCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApiCallRequest) ProtoMessage() {}

func (x *UpdateApiCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApiCallRequest.ProtoReflect.Descriptor instead.
func (*UpdateApiCallRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateApiCallRequest) GetItem() *v1alpha1.ApiCall {
	if x != nil {
		return x.Item
	}
	return nil
}

type UpdateApiCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateApiCallResponse) Reset() {
	*x = UpdateApiCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateApiCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApiCallResponse) ProtoMessage() {}

func (x *UpdateApiCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApiCallResponse.ProtoReflect.Descriptor instead.
func (*UpdateApiCallResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_rawDescGZIP(), []int{5}
}

type GetApiCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetApiCallRequest) Reset() {
	*x = GetApiCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApiCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApiCallRequest) ProtoMessage() {}

func (x *GetApiCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApiCallRequest.ProtoReflect.Descriptor instead.
func (*GetApiCallRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_rawDescGZIP(), []int{6}
}

func (x *GetApiCallRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetApiCallRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetApiCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.ApiCall `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Yaml string            `protobuf:"bytes,2,opt,name=yaml,proto3" json:"yaml,omitempty"`
}

func (x *GetApiCallResponse) Reset() {
	*x = GetApiCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApiCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApiCallResponse) ProtoMessage() {}

func (x *GetApiCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApiCallResponse.ProtoReflect.Descriptor instead.
func (*GetApiCallResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_rawDescGZIP(), []int{7}
}

func (x *GetApiCallResponse) GetItem() *v1alpha1.ApiCall {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *GetApiCallResponse) GetYaml() string {
	if x != nil {
		return x.Yaml
	}
	return ""
}

type DeleteApiCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteApiCallRequest) Reset() {
	*x = DeleteApiCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteApiCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteApiCallRequest) ProtoMessage() {}

func (x *DeleteApiCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteApiCallRequest.ProtoReflect.Descriptor instead.
func (*DeleteApiCallRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteApiCallRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeleteApiCallRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteApiCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteApiCallResponse) Reset() {
	*x = DeleteApiCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteApiCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteApiCallResponse) ProtoMessage() {}

func (x *DeleteApiCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteApiCallResponse.ProtoReflect.Descriptor instead.
func (*DeleteApiCallResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_rawDescGZIP(), []int{9}
}

type PauseApiCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PauseApiCallRequest) Reset() {
	*x = PauseApiCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseApiCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseApiCallRequest) ProtoMessage() {}

func (x *PauseApiCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseApiCallRequest.ProtoReflect.Descriptor instead.
func (*PauseApiCallRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_rawDescGZIP(), []int{10}
}

func (x *PauseApiCallRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PauseApiCallRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PauseApiCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PauseApiCallResponse) Reset() {
	*x = PauseApiCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseApiCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseApiCallResponse) ProtoMessage() {}

func (x *PauseApiCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseApiCallResponse.ProtoReflect.Descriptor instead.
func (*PauseApiCallResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_rawDescGZIP(), []int{11}
}

type ResumeApiCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ResumeApiCallRequest) Reset() {
	*x = ResumeApiCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeApiCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeApiCallRequest) ProtoMessage() {}

func (x *ResumeApiCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeApiCallRequest.ProtoReflect.Descriptor instead.
func (*ResumeApiCallRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_rawDescGZIP(), []int{12}
}

func (x *ResumeApiCallRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ResumeApiCallRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ResumeApiCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResumeApiCallResponse) Reset() {
	*x = ResumeApiCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeApiCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeApiCallResponse) ProtoMessage() {}

func (x *ResumeApiCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeApiCallResponse.ProtoReflect.Descriptor instead.
func (*ResumeApiCallResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_rawDescGZIP(), []int{13}
}

type RunApiCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.ApiCall `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *RunApiCallRequest) Reset() {
	*x = RunApiCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunApiCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunApiCallRequest) ProtoMessage() {}

func (x *RunApiCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunApiCallRequest.ProtoReflect.Descriptor instead.
func (*RunApiCallRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_rawDescGZIP(), []int{14}
}

func (x *RunApiCallRequest) GetItem() *v1alpha1.ApiCall {
	if x != nil {
		return x.Item
	}
	return nil
}

type RunApiCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunApiCallResponse) Reset() {
	*x = RunApiCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunApiCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunApiCallResponse) ProtoMessage() {}

func (x *RunApiCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunApiCallResponse.ProtoReflect.Descriptor instead.
func (*RunApiCallResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_rawDescGZIP(), []int{15}
}

var File_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto protoreflect.FileDescriptor

var file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_rawDesc = []byte{
	0x0a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x63, 0x61, 0x6c, 0x6c,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x63, 0x61, 0x6c,
	0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70,
	0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xee, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x6a, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x52, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x63,
	0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x69, 0x43, 0x61,
	0x6c, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39,
	0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6f, 0x0a, 0x14, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x57, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x41, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x69, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69,
	0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x69,
	0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x43,
	0x61, 0x6c, 0x6c, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x45, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x7b, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x51, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70,
	0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x22, 0x48, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x69, 0x43, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0x0a, 0x13, 0x50, 0x61, 0x75,
	0x73, 0x65, 0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x50, 0x61, 0x75, 0x73, 0x65, 0x41, 0x70, 0x69, 0x43, 0x61,
	0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x48, 0x0a, 0x14, 0x52, 0x65,
	0x73, 0x75, 0x6d, 0x65, 0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x41, 0x70,
	0x69, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x66, 0x0a,
	0x11, 0x52, 0x75, 0x6e, 0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x51, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x52,
	0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x75, 0x6e, 0x41, 0x70, 0x69, 0x43,
	0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xe5, 0x0a, 0x0a, 0x0e,
	0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xb5,
	0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12,
	0x46, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x63, 0x61, 0x6c, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70,
	0x69, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0xbb, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x63, 0x61,
	0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x43,
	0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x11, 0x22, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x63, 0x61, 0x6c, 0x6c,
	0x73, 0x3a, 0x01, 0x2a, 0x12, 0xb6, 0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x43,
	0x61, 0x6c, 0x6c, 0x12, 0x44, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x63, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x43, 0x61,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70,
	0x69, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0xd3, 0x01,
	0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x12,
	0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x63, 0x61, 0x6c, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x43, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x1a, 0x24, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x70, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x69, 0x63, 0x61, 0x6c,
	0x6c, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x7d,
	0x3a, 0x01, 0x2a, 0x12, 0xbf, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70,
	0x69, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x48,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15,
	0x2a, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x2f, 0x7b,
	0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0xc2, 0x01, 0x0a, 0x0c, 0x50, 0x61, 0x75, 0x73, 0x65, 0x41,
	0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x46, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65,
	0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x47,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22,
	0x19, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x2f, 0x7b, 0x6e,
	0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x70, 0x61, 0x75, 0x73, 0x65, 0x12, 0xc6, 0x01, 0x0a, 0x0d, 0x52,
	0x65, 0x73, 0x75, 0x6d, 0x65, 0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x47, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65,
	0x41, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69,
	0x63, 0x61, 0x6c, 0x6c, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x72, 0x65, 0x73,
	0x75, 0x6d, 0x65, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x61, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x70,
	0x69, 0x63, 0x61, 0x6c, 0x6c, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_rawDescOnce sync.Once
	file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_rawDescData = file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_rawDesc
)

func file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_rawDescGZIP() []byte {
	file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_rawDescOnce.Do(func() {
		file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_rawDescData)
	})
	return file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_rawDescData
}

var file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_goTypes = []interface{}{
	(*ListApiCallsRequest)(nil),   // 0: github.com.metaprov.modelaapi.services.apicall.v1.ListApiCallsRequest
	(*ListApiCallsResponse)(nil),  // 1: github.com.metaprov.modelaapi.services.apicall.v1.ListApiCallsResponse
	(*CreateApiCallResponse)(nil), // 2: github.com.metaprov.modelaapi.services.apicall.v1.CreateApiCallResponse
	(*CreateApiCallRequest)(nil),  // 3: github.com.metaprov.modelaapi.services.apicall.v1.CreateApiCallRequest
	(*UpdateApiCallRequest)(nil),  // 4: github.com.metaprov.modelaapi.services.apicall.v1.UpdateApiCallRequest
	(*UpdateApiCallResponse)(nil), // 5: github.com.metaprov.modelaapi.services.apicall.v1.UpdateApiCallResponse
	(*GetApiCallRequest)(nil),     // 6: github.com.metaprov.modelaapi.services.apicall.v1.GetApiCallRequest
	(*GetApiCallResponse)(nil),    // 7: github.com.metaprov.modelaapi.services.apicall.v1.GetApiCallResponse
	(*DeleteApiCallRequest)(nil),  // 8: github.com.metaprov.modelaapi.services.apicall.v1.DeleteApiCallRequest
	(*DeleteApiCallResponse)(nil), // 9: github.com.metaprov.modelaapi.services.apicall.v1.DeleteApiCallResponse
	(*PauseApiCallRequest)(nil),   // 10: github.com.metaprov.modelaapi.services.apicall.v1.PauseApiCallRequest
	(*PauseApiCallResponse)(nil),  // 11: github.com.metaprov.modelaapi.services.apicall.v1.PauseApiCallResponse
	(*ResumeApiCallRequest)(nil),  // 12: github.com.metaprov.modelaapi.services.apicall.v1.ResumeApiCallRequest
	(*ResumeApiCallResponse)(nil), // 13: github.com.metaprov.modelaapi.services.apicall.v1.ResumeApiCallResponse
	(*RunApiCallRequest)(nil),     // 14: github.com.metaprov.modelaapi.services.apicall.v1.RunApiCallRequest
	(*RunApiCallResponse)(nil),    // 15: github.com.metaprov.modelaapi.services.apicall.v1.RunApiCallResponse
	nil,                           // 16: github.com.metaprov.modelaapi.services.apicall.v1.ListApiCallsRequest.LabelsEntry
	(*v1alpha1.ApiCallList)(nil),  // 17: github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.ApiCallList
	(*v1alpha1.ApiCall)(nil),      // 18: github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.ApiCall
}
var file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_depIdxs = []int32{
	16, // 0: github.com.metaprov.modelaapi.services.apicall.v1.ListApiCallsRequest.labels:type_name -> github.com.metaprov.modelaapi.services.apicall.v1.ListApiCallsRequest.LabelsEntry
	17, // 1: github.com.metaprov.modelaapi.services.apicall.v1.ListApiCallsResponse.items:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.ApiCallList
	18, // 2: github.com.metaprov.modelaapi.services.apicall.v1.CreateApiCallRequest.item:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.ApiCall
	18, // 3: github.com.metaprov.modelaapi.services.apicall.v1.UpdateApiCallRequest.item:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.ApiCall
	18, // 4: github.com.metaprov.modelaapi.services.apicall.v1.GetApiCallResponse.item:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.ApiCall
	18, // 5: github.com.metaprov.modelaapi.services.apicall.v1.RunApiCallRequest.item:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.ApiCall
	0,  // 6: github.com.metaprov.modelaapi.services.apicall.v1.ApiCallService.ListApiCalls:input_type -> github.com.metaprov.modelaapi.services.apicall.v1.ListApiCallsRequest
	3,  // 7: github.com.metaprov.modelaapi.services.apicall.v1.ApiCallService.CreateApiCall:input_type -> github.com.metaprov.modelaapi.services.apicall.v1.CreateApiCallRequest
	6,  // 8: github.com.metaprov.modelaapi.services.apicall.v1.ApiCallService.GetApiCall:input_type -> github.com.metaprov.modelaapi.services.apicall.v1.GetApiCallRequest
	4,  // 9: github.com.metaprov.modelaapi.services.apicall.v1.ApiCallService.UpdateApiCall:input_type -> github.com.metaprov.modelaapi.services.apicall.v1.UpdateApiCallRequest
	8,  // 10: github.com.metaprov.modelaapi.services.apicall.v1.ApiCallService.DeleteApiCall:input_type -> github.com.metaprov.modelaapi.services.apicall.v1.DeleteApiCallRequest
	10, // 11: github.com.metaprov.modelaapi.services.apicall.v1.ApiCallService.PauseApiCall:input_type -> github.com.metaprov.modelaapi.services.apicall.v1.PauseApiCallRequest
	12, // 12: github.com.metaprov.modelaapi.services.apicall.v1.ApiCallService.ResumeApiCall:input_type -> github.com.metaprov.modelaapi.services.apicall.v1.ResumeApiCallRequest
	1,  // 13: github.com.metaprov.modelaapi.services.apicall.v1.ApiCallService.ListApiCalls:output_type -> github.com.metaprov.modelaapi.services.apicall.v1.ListApiCallsResponse
	2,  // 14: github.com.metaprov.modelaapi.services.apicall.v1.ApiCallService.CreateApiCall:output_type -> github.com.metaprov.modelaapi.services.apicall.v1.CreateApiCallResponse
	7,  // 15: github.com.metaprov.modelaapi.services.apicall.v1.ApiCallService.GetApiCall:output_type -> github.com.metaprov.modelaapi.services.apicall.v1.GetApiCallResponse
	5,  // 16: github.com.metaprov.modelaapi.services.apicall.v1.ApiCallService.UpdateApiCall:output_type -> github.com.metaprov.modelaapi.services.apicall.v1.UpdateApiCallResponse
	9,  // 17: github.com.metaprov.modelaapi.services.apicall.v1.ApiCallService.DeleteApiCall:output_type -> github.com.metaprov.modelaapi.services.apicall.v1.DeleteApiCallResponse
	11, // 18: github.com.metaprov.modelaapi.services.apicall.v1.ApiCallService.PauseApiCall:output_type -> github.com.metaprov.modelaapi.services.apicall.v1.PauseApiCallResponse
	13, // 19: github.com.metaprov.modelaapi.services.apicall.v1.ApiCallService.ResumeApiCall:output_type -> github.com.metaprov.modelaapi.services.apicall.v1.ResumeApiCallResponse
	13, // [13:20] is the sub-list for method output_type
	6,  // [6:13] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_init() }
func file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_init() {
	if File_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListApiCallsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListApiCallsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateApiCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateApiCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateApiCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateApiCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApiCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApiCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteApiCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteApiCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseApiCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseApiCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeApiCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeApiCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunApiCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunApiCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_goTypes,
		DependencyIndexes: file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_depIdxs,
		MessageInfos:      file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_msgTypes,
	}.Build()
	File_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto = out.File
	file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_rawDesc = nil
	file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_goTypes = nil
	file_github_com_metaprov_modelaapi_services_apicall_v1_apicall_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ApiCallServiceClient is the client API for ApiCallService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ApiCallServiceClient interface {
	ListApiCalls(ctx context.Context, in *ListApiCallsRequest, opts ...grpc.CallOption) (*ListApiCallsResponse, error)
	CreateApiCall(ctx context.Context, in *CreateApiCallRequest, opts ...grpc.CallOption) (*CreateApiCallResponse, error)
	GetApiCall(ctx context.Context, in *GetApiCallRequest, opts ...grpc.CallOption) (*GetApiCallResponse, error)
	UpdateApiCall(ctx context.Context, in *UpdateApiCallRequest, opts ...grpc.CallOption) (*UpdateApiCallResponse, error)
	DeleteApiCall(ctx context.Context, in *DeleteApiCallRequest, opts ...grpc.CallOption) (*DeleteApiCallResponse, error)
	PauseApiCall(ctx context.Context, in *PauseApiCallRequest, opts ...grpc.CallOption) (*PauseApiCallResponse, error)
	ResumeApiCall(ctx context.Context, in *ResumeApiCallRequest, opts ...grpc.CallOption) (*ResumeApiCallResponse, error)
}

type apiCallServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewApiCallServiceClient(cc grpc.ClientConnInterface) ApiCallServiceClient {
	return &apiCallServiceClient{cc}
}

func (c *apiCallServiceClient) ListApiCalls(ctx context.Context, in *ListApiCallsRequest, opts ...grpc.CallOption) (*ListApiCallsResponse, error) {
	out := new(ListApiCallsResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.apicall.v1.ApiCallService/ListApiCalls", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiCallServiceClient) CreateApiCall(ctx context.Context, in *CreateApiCallRequest, opts ...grpc.CallOption) (*CreateApiCallResponse, error) {
	out := new(CreateApiCallResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.apicall.v1.ApiCallService/CreateApiCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiCallServiceClient) GetApiCall(ctx context.Context, in *GetApiCallRequest, opts ...grpc.CallOption) (*GetApiCallResponse, error) {
	out := new(GetApiCallResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.apicall.v1.ApiCallService/GetApiCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiCallServiceClient) UpdateApiCall(ctx context.Context, in *UpdateApiCallRequest, opts ...grpc.CallOption) (*UpdateApiCallResponse, error) {
	out := new(UpdateApiCallResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.apicall.v1.ApiCallService/UpdateApiCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiCallServiceClient) DeleteApiCall(ctx context.Context, in *DeleteApiCallRequest, opts ...grpc.CallOption) (*DeleteApiCallResponse, error) {
	out := new(DeleteApiCallResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.apicall.v1.ApiCallService/DeleteApiCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiCallServiceClient) PauseApiCall(ctx context.Context, in *PauseApiCallRequest, opts ...grpc.CallOption) (*PauseApiCallResponse, error) {
	out := new(PauseApiCallResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.apicall.v1.ApiCallService/PauseApiCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiCallServiceClient) ResumeApiCall(ctx context.Context, in *ResumeApiCallRequest, opts ...grpc.CallOption) (*ResumeApiCallResponse, error) {
	out := new(ResumeApiCallResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.apicall.v1.ApiCallService/ResumeApiCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApiCallServiceServer is the server API for ApiCallService service.
type ApiCallServiceServer interface {
	ListApiCalls(context.Context, *ListApiCallsRequest) (*ListApiCallsResponse, error)
	CreateApiCall(context.Context, *CreateApiCallRequest) (*CreateApiCallResponse, error)
	GetApiCall(context.Context, *GetApiCallRequest) (*GetApiCallResponse, error)
	UpdateApiCall(context.Context, *UpdateApiCallRequest) (*UpdateApiCallResponse, error)
	DeleteApiCall(context.Context, *DeleteApiCallRequest) (*DeleteApiCallResponse, error)
	PauseApiCall(context.Context, *PauseApiCallRequest) (*PauseApiCallResponse, error)
	ResumeApiCall(context.Context, *ResumeApiCallRequest) (*ResumeApiCallResponse, error)
}

// UnimplementedApiCallServiceServer can be embedded to have forward compatible implementations.
type UnimplementedApiCallServiceServer struct {
}

func (*UnimplementedApiCallServiceServer) ListApiCalls(context.Context, *ListApiCallsRequest) (*ListApiCallsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListApiCalls not implemented")
}
func (*UnimplementedApiCallServiceServer) CreateApiCall(context.Context, *CreateApiCallRequest) (*CreateApiCallResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateApiCall not implemented")
}
func (*UnimplementedApiCallServiceServer) GetApiCall(context.Context, *GetApiCallRequest) (*GetApiCallResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetApiCall not implemented")
}
func (*UnimplementedApiCallServiceServer) UpdateApiCall(context.Context, *UpdateApiCallRequest) (*UpdateApiCallResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateApiCall not implemented")
}
func (*UnimplementedApiCallServiceServer) DeleteApiCall(context.Context, *DeleteApiCallRequest) (*DeleteApiCallResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteApiCall not implemented")
}
func (*UnimplementedApiCallServiceServer) PauseApiCall(context.Context, *PauseApiCallRequest) (*PauseApiCallResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PauseApiCall not implemented")
}
func (*UnimplementedApiCallServiceServer) ResumeApiCall(context.Context, *ResumeApiCallRequest) (*ResumeApiCallResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResumeApiCall not implemented")
}

func RegisterApiCallServiceServer(s *grpc.Server, srv ApiCallServiceServer) {
	s.RegisterService(&_ApiCallService_serviceDesc, srv)
}

func _ApiCallService_ListApiCalls_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListApiCallsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiCallServiceServer).ListApiCalls(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.apicall.v1.ApiCallService/ListApiCalls",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiCallServiceServer).ListApiCalls(ctx, req.(*ListApiCallsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiCallService_CreateApiCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateApiCallRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiCallServiceServer).CreateApiCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.apicall.v1.ApiCallService/CreateApiCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiCallServiceServer).CreateApiCall(ctx, req.(*CreateApiCallRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiCallService_GetApiCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetApiCallRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiCallServiceServer).GetApiCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.apicall.v1.ApiCallService/GetApiCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiCallServiceServer).GetApiCall(ctx, req.(*GetApiCallRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiCallService_UpdateApiCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateApiCallRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiCallServiceServer).UpdateApiCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.apicall.v1.ApiCallService/UpdateApiCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiCallServiceServer).UpdateApiCall(ctx, req.(*UpdateApiCallRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiCallService_DeleteApiCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteApiCallRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiCallServiceServer).DeleteApiCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.apicall.v1.ApiCallService/DeleteApiCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiCallServiceServer).DeleteApiCall(ctx, req.(*DeleteApiCallRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiCallService_PauseApiCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PauseApiCallRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiCallServiceServer).PauseApiCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.apicall.v1.ApiCallService/PauseApiCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiCallServiceServer).PauseApiCall(ctx, req.(*PauseApiCallRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiCallService_ResumeApiCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResumeApiCallRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiCallServiceServer).ResumeApiCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.apicall.v1.ApiCallService/ResumeApiCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiCallServiceServer).ResumeApiCall(ctx, req.(*ResumeApiCallRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ApiCallService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.metaprov.modelaapi.services.apicall.v1.ApiCallService",
	HandlerType: (*ApiCallServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListApiCalls",
			Handler:    _ApiCallService_ListApiCalls_Handler,
		},
		{
			MethodName: "CreateApiCall",
			Handler:    _ApiCallService_CreateApiCall_Handler,
		},
		{
			MethodName: "GetApiCall",
			Handler:    _ApiCallService_GetApiCall_Handler,
		},
		{
			MethodName: "UpdateApiCall",
			Handler:    _ApiCallService_UpdateApiCall_Handler,
		},
		{
			MethodName: "DeleteApiCall",
			Handler:    _ApiCallService_DeleteApiCall_Handler,
		},
		{
			MethodName: "PauseApiCall",
			Handler:    _ApiCallService_PauseApiCall_Handler,
		},
		{
			MethodName: "ResumeApiCall",
			Handler:    _ApiCallService_ResumeApiCall_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/metaprov/modelaapi/services/apicall/v1/apicall.proto",
}
