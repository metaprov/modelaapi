syntax = "proto3";
option go_package = "github.com/metaprov/modelaapi/services/alert/v1";
import "google/protobuf/field_mask.proto";

package github.com.metaprov.modelaapi.services.alert.v1;
import "google/api/annotations.proto";
import "github.com/metaprov/modelaapi/pkg/apis/infra/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/services/common/v1/common.proto";

message ListAlertsRequest {
    string             namespace = 1;
    map<string,string> labels    = 2;   
    int32              page_size  = 3;    
    string             page_token = 4;
    string             order_by   = 5;    
}

message ListAlertsResponse {
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList alerts = 1;   
    string next_page_token = 2;
}

message AlertResponse {}

message CreateAlertRequest {
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert item = 1;
}

message CreateAlertResponse {

}

message UpdateAlertRequest {
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert item = 1;
    google.protobuf.FieldMask field_mask = 2;
}

message UpdateAlertResponse {

}

message GetAlertRequest {
    string namespace = 1;
    string name      = 2;
}


message GetAlertResponse {
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert item = 1;
    string yaml = 2;
}

message GetAlertNamespacesRequest {
    string namespace = 1;
    string name      = 2;
}


message GetAlertNamespacesResponse {
    repeated github.com.metaprov.modelaapi.services.common.v1.NamespaceInfo namespaces = 1;
}


message DeleteAlertRequest {
    string namespace = 1;
    string name      = 2;
}

message DeleteAlertResponse {}


service AlertService {
    rpc ListAlerts(ListAlertsRequest) returns (ListAlertsResponse) {
        option (google.api.http).get = "/v1/alerts/{namespace}";
    }

    rpc CreateAlert(CreateAlertRequest) returns (CreateAlertResponse) {
        option (google.api.http) = {
			post: "/v1/alerts"
			body: "*"
		};
    }
    
    rpc GetAlert(GetAlertRequest) returns (GetAlertResponse) {
        option (google.api.http).get = "/v1/alerts/{namespace}/{name}";
    }

    rpc UpdateAlert(UpdateAlertRequest) returns (UpdateAlertResponse) {
        option (google.api.http) = {
			put: "/v1/alerts/{item.metadata.namespace}/{item.metadata.name}"
			body: "*"
		};
    }

    rpc DeleteAlert(DeleteAlertRequest) returns (DeleteAlertResponse) {
        option (google.api.http).delete = "/v1/alerts/{namespace}/{name}";
    }

}