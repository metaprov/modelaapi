
syntax = "proto3";
option go_package = "github.com/metaprov/modelaapi/services/catalog/v1";
package github.com.metaprov.modelaapi.services.catalog.v1;


import "google/api/annotations.proto";
import "github.com/metaprov/modelaapi/pkg/apis/catalog/v1alpha1/generated.proto";

message ListAlgorithmsRequest {
    string namespace   = 1;
    map<string,string> labels =2;
}

message ListAlgorithmsResponse {
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.AlgorithmList items = 1;
}

message GetAlgorithmRequest {
    string namespace   = 1;
    string name = 2;
}

message GetAlgorithmResponse {
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.Algorithm item = 1;
}

//////////////////////////////////////////////////// ML Framework ///////////////////////////////////

message ListMLFrameworksRequest {
    string namespace   = 1;
    map<string,string> labels =2;
}

message ListMLFrameworksResponse {
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.MLFrameworkList items = 1;
}

message GetMLFrameworkRequest {
    string namespace   = 1;
    string name        = 2;
}

message GetMLFrameworkResponse {
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.MLFramework item = 1;
}

//////////////////////////////////////////////////// Clouds ///////////////////////////////////


message ListCloudsRequest {
    string namespace   = 1;
    map<string,string> labels =2;
}

message ListCloudsResponse {
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.CloudList items = 1;
}

message GetCloudRequest {
    string namespace   = 1;
    string name        = 2;
}

message GetCloudResponse {
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.Cloud item = 1;
}



//////////////////////////////////////////////////// PublicDatasets ///////////////////////////////////


message ListPublicDatasetsRequest {
    string namespace   = 1;
    map<string,string> labels =2;
}

message ListPublicDatasetsResponse {
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.PublicDatasetList items = 1;
}

message GetPublicDatasetRequest {
    string namespace   = 1;
    string name = 2;
}

message GetPublicDatasetResponse {
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.PublicDataset item = 1;
}


message DownloadPublicDatasetRequest {
    string namespace = 1;
    string name      = 2;
}


message DownloadPublicDatasetResponse {
    bytes raw = 1;
}

message PreviewPublicDatasetRequest {
    string namespace = 1;
    string name      = 2;
}

// Answer the report in base 64
message PreviewPublicDatasetResponse {
    bytes raw = 1;
}

message ApplyPublicDatasetCRRequest {
    string namespace = 1;
    string name      = 2;
    string crname    = 3;
}

// Answer the report in base 64
message ApplyPublicDatasetCRResponse {
    bytes raw = 1;
}







//////////////////////////////////////////////////// PretrainedModel Image ///////////////////////////////////

message ListPretrainedModelsRequest {
    string namespace   = 1;
    map<string,string> labels =2;
}

message ListPretrainedModelsResponse {
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.PretrainedModelList items = 1;
}

message GetPretrainedModelRequest {
    string namespace   = 1;
    string name        = 2;
}

message GetPretrainedModelResponse {
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.PretrainedModel item = 1;
}


//////////////////////////////////////////////////// WorkloadClass ///////////////////////////////////

message ListWorkloadClassesRequest {
    string namespace   = 1;
    map<string,string> labels =2;
}

message ListWorkloadClassesResponse {
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.WorkloadClassList items = 1;
}

message GetWorkloadClassRequest {
    string name        = 1;
    string namespace   = 2;
}

message GetWorkloadClassResponse {
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.WorkloadClass item = 1;
}

//////////////////////////////////////////////////// UserRoleClass ///////////////////////////////////

message ListUserRoleClassesRequest {
    string namespace   = 1;
    map<string,string> labels =2;
}

message ListUserRoleClassesResponse {
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.UserRoleClassList items = 1;
}

message GetUserRoleClassRequest {
    string name        = 1;
    string namespace   = 2;
}

message GetUserRoleClassResponse {
    github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.UserRoleClass item = 1;
}

//////////////////////////////////////////////////// Service ///////////////////////////////////

service CatalogService {
    rpc ListAlgorithm(ListAlgorithmsRequest) returns (ListAlgorithmsResponse) {
        option (google.api.http).get = "/v1/algorithms";
    }

    rpc GetAlgorithm(GetAlgorithmRequest) returns (GetAlgorithmResponse) {
        option (google.api.http).get = "/v1/algorithms/{name}";
    }

    rpc ListMLFrameworks(ListMLFrameworksRequest) returns (ListMLFrameworksResponse) {
        option (google.api.http).get = "/v1/mlframeworks";
    }

    rpc GetMLFramework(GetMLFrameworkRequest) returns (GetMLFrameworkResponse) {
        option (google.api.http).get = "/v1/mlframeworks/{name}";
    }


    rpc ListClouds(ListCloudsRequest) returns (ListCloudsResponse) {
        option (google.api.http).get = "/v1/clouds";
    }

    rpc GetCloud(GetCloudRequest) returns (GetCloudResponse) {
        option (google.api.http).get = "/v1/clouds/{name}";
    }

    rpc ListWorkloadClasses(ListWorkloadClassesRequest) returns (ListWorkloadClassesResponse) {
        option (google.api.http).get = "/v1/workloadclasses";
    }

    rpc GetWorkloadClass(GetWorkloadClassRequest) returns (GetWorkloadClassResponse) {
        option (google.api.http).get = "/v1/workloadclasses/{name}";
    }

    rpc ListUserRoleClasses(ListUserRoleClassesRequest) returns (ListUserRoleClassesResponse) {
        option (google.api.http).get = "/v1/userroleclasses";
    }

    rpc GetUserRoleClass(GetUserRoleClassRequest) returns (GetUserRoleClassResponse) {
        option (google.api.http).get = "/v1/userroleclasses/{name}";
    }

    rpc ListPublicDataset(ListPublicDatasetsRequest) returns (ListPublicDatasetsResponse) {
        option (google.api.http).get = "/v1/publicdatasets";
    }

    rpc GetPublicDataset(GetPublicDatasetRequest) returns (GetPublicDatasetResponse) {
        option (google.api.http).get = "/v1/publicdatasets/{name}";
    }

    rpc DownloadPublicDataset(DownloadPublicDatasetRequest) returns (DownloadPublicDatasetResponse) {
        option (google.api.http).get = "/v1/publicdatasets/{name}:download";
    }

    rpc PreviewPublicDataset(PreviewPublicDatasetRequest) returns (PreviewPublicDatasetResponse) {
        option (google.api.http).get = "/v1/publicdatasets/{name}:preview";
    }

    rpc ApplyPublicDatasetCR(ApplyPublicDatasetCRRequest) returns (ApplyPublicDatasetCRResponse) {
        option (google.api.http).get = "/v1/publicdatasets/{name}:apply";
    }





}