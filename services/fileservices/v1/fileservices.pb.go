// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: github.com/metaprov/modelaapi/services/fileservices/v1/fileservices.proto

package v1

import (
	context "context"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1"
	_ "github.com/metaprov/modelaapi/services/common/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DataBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Data               []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Md5Hash            string `protobuf:"bytes,3,opt,name=md5_hash,json=md5Hash,proto3" json:"md5_hash,omitempty"`
	Tenant             string `protobuf:"bytes,4,opt,name=tenant,proto3" json:"tenant,omitempty"`
	DataProductName    string `protobuf:"bytes,5,opt,name=dataProductName,proto3" json:"dataProductName,omitempty"`
	DataProductVersion string `protobuf:"bytes,6,opt,name=dataProductVersion,proto3" json:"dataProductVersion,omitempty"`
	Bucket             string `protobuf:"bytes,7,opt,name=bucket,proto3" json:"bucket,omitempty"`
	ResourceType       string `protobuf:"bytes,8,opt,name=resourceType,proto3" json:"resourceType,omitempty"`
	ResourceName       string `protobuf:"bytes,9,opt,name=resourceName,proto3" json:"resourceName,omitempty"`
}

func (x *DataBlock) Reset() {
	*x = DataBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_fileservices_v1_fileservices_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataBlock) ProtoMessage() {}

func (x *DataBlock) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_fileservices_v1_fileservices_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataBlock.ProtoReflect.Descriptor instead.
func (*DataBlock) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_fileservices_v1_fileservices_proto_rawDescGZIP(), []int{0}
}

func (x *DataBlock) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataBlock) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DataBlock) GetMd5Hash() string {
	if x != nil {
		return x.Md5Hash
	}
	return ""
}

func (x *DataBlock) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *DataBlock) GetDataProductName() string {
	if x != nil {
		return x.DataProductName
	}
	return ""
}

func (x *DataBlock) GetDataProductVersion() string {
	if x != nil {
		return x.DataProductVersion
	}
	return ""
}

func (x *DataBlock) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *DataBlock) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *DataBlock) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

var File_github_com_metaprov_modelaapi_services_fileservices_v1_fileservices_proto protoreflect.FileDescriptor

var file_github_com_metaprov_modelaapi_services_fileservices_v1_fileservices_proto_rawDesc = []byte{
	0x0a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x36, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa0, 0x02, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x6d,
	0x64, 0x35, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x64, 0x35, 0x48, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x28,
	0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x64, 0x61, 0x74, 0x61,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0x83, 0x01, 0x0a, 0x13, 0x46, 0x69, 0x6c,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x6c, 0x0a, 0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12,
	0x41, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x28, 0x01, 0x42, 0x38,
	0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_metaprov_modelaapi_services_fileservices_v1_fileservices_proto_rawDescOnce sync.Once
	file_github_com_metaprov_modelaapi_services_fileservices_v1_fileservices_proto_rawDescData = file_github_com_metaprov_modelaapi_services_fileservices_v1_fileservices_proto_rawDesc
)

func file_github_com_metaprov_modelaapi_services_fileservices_v1_fileservices_proto_rawDescGZIP() []byte {
	file_github_com_metaprov_modelaapi_services_fileservices_v1_fileservices_proto_rawDescOnce.Do(func() {
		file_github_com_metaprov_modelaapi_services_fileservices_v1_fileservices_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_metaprov_modelaapi_services_fileservices_v1_fileservices_proto_rawDescData)
	})
	return file_github_com_metaprov_modelaapi_services_fileservices_v1_fileservices_proto_rawDescData
}

var file_github_com_metaprov_modelaapi_services_fileservices_v1_fileservices_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_github_com_metaprov_modelaapi_services_fileservices_v1_fileservices_proto_goTypes = []interface{}{
	(*DataBlock)(nil),   // 0: github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock
	(*empty.Empty)(nil), // 1: google.protobuf.Empty
}
var file_github_com_metaprov_modelaapi_services_fileservices_v1_fileservices_proto_depIdxs = []int32{
	0, // 0: github.com.metaprov.modelaapi.services.fileservices.v1.FileServicesService.UploadChunk:input_type -> github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock
	1, // 1: github.com.metaprov.modelaapi.services.fileservices.v1.FileServicesService.UploadChunk:output_type -> google.protobuf.Empty
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_github_com_metaprov_modelaapi_services_fileservices_v1_fileservices_proto_init() }
func file_github_com_metaprov_modelaapi_services_fileservices_v1_fileservices_proto_init() {
	if File_github_com_metaprov_modelaapi_services_fileservices_v1_fileservices_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_metaprov_modelaapi_services_fileservices_v1_fileservices_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_metaprov_modelaapi_services_fileservices_v1_fileservices_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_metaprov_modelaapi_services_fileservices_v1_fileservices_proto_goTypes,
		DependencyIndexes: file_github_com_metaprov_modelaapi_services_fileservices_v1_fileservices_proto_depIdxs,
		MessageInfos:      file_github_com_metaprov_modelaapi_services_fileservices_v1_fileservices_proto_msgTypes,
	}.Build()
	File_github_com_metaprov_modelaapi_services_fileservices_v1_fileservices_proto = out.File
	file_github_com_metaprov_modelaapi_services_fileservices_v1_fileservices_proto_rawDesc = nil
	file_github_com_metaprov_modelaapi_services_fileservices_v1_fileservices_proto_goTypes = nil
	file_github_com_metaprov_modelaapi_services_fileservices_v1_fileservices_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FileServicesServiceClient is the client API for FileServicesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FileServicesServiceClient interface {
	UploadChunk(ctx context.Context, opts ...grpc.CallOption) (FileServicesService_UploadChunkClient, error)
}

type fileServicesServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFileServicesServiceClient(cc grpc.ClientConnInterface) FileServicesServiceClient {
	return &fileServicesServiceClient{cc}
}

func (c *fileServicesServiceClient) UploadChunk(ctx context.Context, opts ...grpc.CallOption) (FileServicesService_UploadChunkClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FileServicesService_serviceDesc.Streams[0], "/github.com.metaprov.modelaapi.services.fileservices.v1.FileServicesService/UploadChunk", opts...)
	if err != nil {
		return nil, err
	}
	x := &fileServicesServiceUploadChunkClient{stream}
	return x, nil
}

type FileServicesService_UploadChunkClient interface {
	Send(*DataBlock) error
	CloseAndRecv() (*empty.Empty, error)
	grpc.ClientStream
}

type fileServicesServiceUploadChunkClient struct {
	grpc.ClientStream
}

func (x *fileServicesServiceUploadChunkClient) Send(m *DataBlock) error {
	return x.ClientStream.SendMsg(m)
}

func (x *fileServicesServiceUploadChunkClient) CloseAndRecv() (*empty.Empty, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(empty.Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FileServicesServiceServer is the server API for FileServicesService service.
type FileServicesServiceServer interface {
	UploadChunk(FileServicesService_UploadChunkServer) error
}

// UnimplementedFileServicesServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFileServicesServiceServer struct {
}

func (*UnimplementedFileServicesServiceServer) UploadChunk(FileServicesService_UploadChunkServer) error {
	return status.Errorf(codes.Unimplemented, "method UploadChunk not implemented")
}

func RegisterFileServicesServiceServer(s *grpc.Server, srv FileServicesServiceServer) {
	s.RegisterService(&_FileServicesService_serviceDesc, srv)
}

func _FileServicesService_UploadChunk_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(FileServicesServiceServer).UploadChunk(&fileServicesServiceUploadChunkServer{stream})
}

type FileServicesService_UploadChunkServer interface {
	SendAndClose(*empty.Empty) error
	Recv() (*DataBlock, error)
	grpc.ServerStream
}

type fileServicesServiceUploadChunkServer struct {
	grpc.ServerStream
}

func (x *fileServicesServiceUploadChunkServer) SendAndClose(m *empty.Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *fileServicesServiceUploadChunkServer) Recv() (*DataBlock, error) {
	m := new(DataBlock)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _FileServicesService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.metaprov.modelaapi.services.fileservices.v1.FileServicesService",
	HandlerType: (*FileServicesServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "UploadChunk",
			Handler:       _FileServicesService_UploadChunk_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "github.com/metaprov/modelaapi/services/fileservices/v1/fileservices.proto",
}
