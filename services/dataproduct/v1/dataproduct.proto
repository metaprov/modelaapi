syntax = "proto3";
option go_package = "github.com/metaprov/modelaapi/services/dataproduct/v1";
package github.com.metaprov.modelaapi.services.dataproduct.v1;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "github.com/metaprov/modelaapi/pkg/apis/infra/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/pkg/apis/training/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/pkg/apis/inference/v1alpha1/generated.proto";


message ListDataProductsRequest {
    string namespace = 1;
    map<string,string> labels =2;
    int32              page_size  = 3;
    string             page_token = 4;
    string             order_by   = 5;
}

message ListDataProductsResponse {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProductList dataproducts = 1;
    string next_page_token = 2;
}

message CreateDataProductRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct dataproduct = 1;
}

message CreateDataProductResponse {

}

message UpdateDataProductRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct item = 1;
    google.protobuf.FieldMask field_mask = 2;
}

message UpdateDataProductResponse {

}

message GetDataProductRequest {
    string namespace = 1;
    string name      = 2;
    
}


message GetDataProductResponse {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataProduct item = 1;
    repeated github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert alerts = 2;
    repeated github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset datasets = 3;
    repeated github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study studies = 4;
    repeated github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Model models = 5;
    repeated github.com.metaprov.modelaapi.pkg.apis.inference.v1alpha1.Predictor predictors = 6;
    string yaml = 7;
}

message DeleteDataProductRequest {
    string namespace = 1;
    string name      = 2;
}

message DeleteDataProductResponse {

}


service DataProductService {
    rpc ListDataProducts(ListDataProductsRequest) returns (ListDataProductsResponse) {
        option (google.api.http).get = "/v1/dataproducts/{namespace}";
    }
    rpc CreateDataProduct(CreateDataProductRequest) returns (CreateDataProductResponse) {
        option (google.api.http) = {
			post: "/v1/dataproducts"
			body: "*"
		};
    }
    rpc GetDataProduct(GetDataProductRequest) returns (GetDataProductResponse) {
        option (google.api.http).get = "/v1/dataproducts/{namespace}/{name}";
    }
    rpc UpdateDataProduct(UpdateDataProductRequest) returns (UpdateDataProductResponse) {
        option (google.api.http) = {
			put: "/v1/dataproducts/{item.metadata.namespace}/{item.metadata.name}"
			body: "*"
		};
    }
    rpc DeleteDataProduct(DeleteDataProductRequest) returns (DeleteDataProductResponse) {
        option (google.api.http).delete = "/v1/dataproducts/{namespace}/{name}";
    }
}