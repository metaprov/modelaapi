// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: services/postmortem/v1/postmortem.proto

package v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	v1alpha1 "github.com/metaprov/modeldapi/pkg/apis/team/v1alpha1"
	v1 "github.com/metaprov/modeldapi/services/common/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PostMortemQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Labels    map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PostMortemQuery) Reset() {
	*x = PostMortemQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_postmortem_v1_postmortem_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostMortemQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostMortemQuery) ProtoMessage() {}

func (x *PostMortemQuery) ProtoReflect() protoreflect.Message {
	mi := &file_services_postmortem_v1_postmortem_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostMortemQuery.ProtoReflect.Descriptor instead.
func (*PostMortemQuery) Descriptor() ([]byte, []int) {
	return file_services_postmortem_v1_postmortem_proto_rawDescGZIP(), []int{0}
}

func (x *PostMortemQuery) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PostMortemQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PostMortemQuery) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type PostMortemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PostMortemResponse) Reset() {
	*x = PostMortemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_postmortem_v1_postmortem_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostMortemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostMortemResponse) ProtoMessage() {}

func (x *PostMortemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_postmortem_v1_postmortem_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostMortemResponse.ProtoReflect.Descriptor instead.
func (*PostMortemResponse) Descriptor() ([]byte, []int) {
	return file_services_postmortem_v1_postmortem_proto_rawDescGZIP(), []int{1}
}

type PostMortemCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string                   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string                   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Labels    map[string]string        `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Spec      *v1alpha1.PostMortemSpec `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
	Password  string                   `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	Upsert    bool                     `protobuf:"varint,7,opt,name=upsert,proto3" json:"upsert,omitempty"`
}

func (x *PostMortemCreateRequest) Reset() {
	*x = PostMortemCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_postmortem_v1_postmortem_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostMortemCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostMortemCreateRequest) ProtoMessage() {}

func (x *PostMortemCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_postmortem_v1_postmortem_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostMortemCreateRequest.ProtoReflect.Descriptor instead.
func (*PostMortemCreateRequest) Descriptor() ([]byte, []int) {
	return file_services_postmortem_v1_postmortem_proto_rawDescGZIP(), []int{2}
}

func (x *PostMortemCreateRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PostMortemCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PostMortemCreateRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *PostMortemCreateRequest) GetSpec() *v1alpha1.PostMortemSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *PostMortemCreateRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *PostMortemCreateRequest) GetUpsert() bool {
	if x != nil {
		return x.Upsert
	}
	return false
}

type PostMortemUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string                   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string                   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Labels    map[string]string        `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Spec      *v1alpha1.PostMortemSpec `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *PostMortemUpdateRequest) Reset() {
	*x = PostMortemUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_postmortem_v1_postmortem_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostMortemUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostMortemUpdateRequest) ProtoMessage() {}

func (x *PostMortemUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_postmortem_v1_postmortem_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostMortemUpdateRequest.ProtoReflect.Descriptor instead.
func (*PostMortemUpdateRequest) Descriptor() ([]byte, []int) {
	return file_services_postmortem_v1_postmortem_proto_rawDescGZIP(), []int{3}
}

func (x *PostMortemUpdateRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PostMortemUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PostMortemUpdateRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *PostMortemUpdateRequest) GetSpec() *v1alpha1.PostMortemSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type PostMortemGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Postmortem *v1alpha1.PostMortem `protobuf:"bytes,1,opt,name=postmortem,proto3" json:"postmortem,omitempty"`
	Yaml       string               `protobuf:"bytes,2,opt,name=yaml,proto3" json:"yaml,omitempty"`
}

func (x *PostMortemGetResponse) Reset() {
	*x = PostMortemGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_postmortem_v1_postmortem_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostMortemGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostMortemGetResponse) ProtoMessage() {}

func (x *PostMortemGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_postmortem_v1_postmortem_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostMortemGetResponse.ProtoReflect.Descriptor instead.
func (*PostMortemGetResponse) Descriptor() ([]byte, []int) {
	return file_services_postmortem_v1_postmortem_proto_rawDescGZIP(), []int{4}
}

func (x *PostMortemGetResponse) GetPostmortem() *v1alpha1.PostMortem {
	if x != nil {
		return x.Postmortem
	}
	return nil
}

func (x *PostMortemGetResponse) GetYaml() string {
	if x != nil {
		return x.Yaml
	}
	return ""
}

type PostMortemGetNamespacesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PostMortemGetNamespacesRequest) Reset() {
	*x = PostMortemGetNamespacesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_postmortem_v1_postmortem_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostMortemGetNamespacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostMortemGetNamespacesRequest) ProtoMessage() {}

func (x *PostMortemGetNamespacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_postmortem_v1_postmortem_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostMortemGetNamespacesRequest.ProtoReflect.Descriptor instead.
func (*PostMortemGetNamespacesRequest) Descriptor() ([]byte, []int) {
	return file_services_postmortem_v1_postmortem_proto_rawDescGZIP(), []int{5}
}

func (x *PostMortemGetNamespacesRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PostMortemGetNamespacesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PostMortemGetNamespacesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespaces []*v1.NamespaceInfo `protobuf:"bytes,1,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
}

func (x *PostMortemGetNamespacesResponse) Reset() {
	*x = PostMortemGetNamespacesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_postmortem_v1_postmortem_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostMortemGetNamespacesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostMortemGetNamespacesResponse) ProtoMessage() {}

func (x *PostMortemGetNamespacesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_postmortem_v1_postmortem_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostMortemGetNamespacesResponse.ProtoReflect.Descriptor instead.
func (*PostMortemGetNamespacesResponse) Descriptor() ([]byte, []int) {
	return file_services_postmortem_v1_postmortem_proto_rawDescGZIP(), []int{6}
}

func (x *PostMortemGetNamespacesResponse) GetNamespaces() []*v1.NamespaceInfo {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

var File_services_postmortem_v1_postmortem_proto protoreflect.FileDescriptor

var file_services_postmortem_v1_postmortem_proto_rawDesc = []byte{
	0x0a, 0x27, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x6d,
	0x6f, 0x72, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x6f, 0x72,
	0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70,
	0x6f, 0x73, 0x74, 0x6d, 0x6f, 0x72, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x74, 0x65, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3d, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe6, 0x01, 0x0a,
	0x0f, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x6f, 0x72, 0x74, 0x65, 0x6d, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x66, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x6f, 0x72,
	0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x6f, 0x72, 0x74, 0x65,
	0x6d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x14, 0x0a, 0x12, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x6f, 0x72,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x84, 0x03, 0x0a, 0x17,
	0x50, 0x6f, 0x73, 0x74, 0x4d, 0x6f, 0x72, 0x74, 0x65, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x6e, 0x0a, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x56, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x70, 0x6f, 0x73, 0x74, 0x6d, 0x6f, 0x72, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x4d, 0x6f, 0x72, 0x74, 0x65, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x58, 0x0a, 0x04, 0x73, 0x70, 0x65,
	0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x4d, 0x6f, 0x72, 0x74, 0x65, 0x6d, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73,
	0x70, 0x65, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x70, 0x73, 0x65, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x75, 0x70, 0x73, 0x65, 0x72, 0x74, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xd0, 0x02, 0x0a, 0x17, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x6f, 0x72, 0x74, 0x65,
	0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x6e, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x56, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x6f, 0x72, 0x74, 0x65,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x6f, 0x72, 0x74, 0x65, 0x6d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x12, 0x58, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x6f, 0x72, 0x74, 0x65, 0x6d,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8d, 0x01, 0x0a, 0x15, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x6f,
	0x72, 0x74, 0x65, 0x6d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x60, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x6f, 0x72, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x74, 0x65, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4d,
	0x6f, 0x72, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x6f, 0x72, 0x74, 0x65,
	0x6d, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x79, 0x61, 0x6d, 0x6c, 0x22, 0x52, 0x0a, 0x1e, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x6f, 0x72,
	0x74, 0x65, 0x6d, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x1f, 0x50, 0x6f,
	0x73, 0x74, 0x4d, 0x6f, 0x72, 0x74, 0x65, 0x6d, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a,
	0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x32, 0xc8,
	0x06, 0x0a, 0x11, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x6f, 0x72, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0xb3, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x42, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70,
	0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x6f, 0x72, 0x74, 0x65, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x6f, 0x72, 0x74, 0x65, 0x6d, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x1a, 0x44, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x6f, 0x72,
	0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12,
	0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x70,
	0x6f, 0x73, 0x74, 0x6d, 0x6f, 0x72, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x9b, 0x01, 0x0a, 0x06, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x4a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x74,
	0x6d, 0x6f, 0x72, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x6f,
	0x72, 0x74, 0x65, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x27, 0x22, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2f, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x6f, 0x72, 0x74, 0x65, 0x6d, 0x73, 0x3a, 0x0a, 0x70, 0x6f,
	0x73, 0x74, 0x6d, 0x6f, 0x72, 0x74, 0x65, 0x6d, 0x12, 0xbd, 0x01, 0x0a, 0x03, 0x47, 0x65, 0x74,
	0x12, 0x42, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x6f, 0x72, 0x74, 0x65,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x6f, 0x72, 0x74, 0x65, 0x6d, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x1a, 0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x6d,
	0x6f, 0x72, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x6f, 0x72,
	0x74, 0x65, 0x6d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x6f, 0x72, 0x74, 0x65, 0x6d,
	0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0xb6, 0x01, 0x0a, 0x06, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x4a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x6f,
	0x72, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x6f, 0x72, 0x74,
	0x65, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x48, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x42, 0x1a,
	0x34, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x70,
	0x6f, 0x73, 0x74, 0x6d, 0x6f, 0x72, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x70, 0x6f, 0x73, 0x74,
	0x6d, 0x6f, 0x72, 0x74, 0x65, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x6f, 0x72, 0x74, 0x65,
	0x6d, 0x12, 0x66, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x42, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x6f, 0x72, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x4d, 0x6f, 0x72, 0x74, 0x65, 0x6d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x6f, 0x72, 0x74, 0x65, 0x6d, 0x2f, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_postmortem_v1_postmortem_proto_rawDescOnce sync.Once
	file_services_postmortem_v1_postmortem_proto_rawDescData = file_services_postmortem_v1_postmortem_proto_rawDesc
)

func file_services_postmortem_v1_postmortem_proto_rawDescGZIP() []byte {
	file_services_postmortem_v1_postmortem_proto_rawDescOnce.Do(func() {
		file_services_postmortem_v1_postmortem_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_postmortem_v1_postmortem_proto_rawDescData)
	})
	return file_services_postmortem_v1_postmortem_proto_rawDescData
}

var file_services_postmortem_v1_postmortem_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_services_postmortem_v1_postmortem_proto_goTypes = []interface{}{
	(*PostMortemQuery)(nil),                 // 0: github.com.metaprov.modeld.services.postmortem.v1.PostMortemQuery
	(*PostMortemResponse)(nil),              // 1: github.com.metaprov.modeld.services.postmortem.v1.PostMortemResponse
	(*PostMortemCreateRequest)(nil),         // 2: github.com.metaprov.modeld.services.postmortem.v1.PostMortemCreateRequest
	(*PostMortemUpdateRequest)(nil),         // 3: github.com.metaprov.modeld.services.postmortem.v1.PostMortemUpdateRequest
	(*PostMortemGetResponse)(nil),           // 4: github.com.metaprov.modeld.services.postmortem.v1.PostMortemGetResponse
	(*PostMortemGetNamespacesRequest)(nil),  // 5: github.com.metaprov.modeld.services.postmortem.v1.PostMortemGetNamespacesRequest
	(*PostMortemGetNamespacesResponse)(nil), // 6: github.com.metaprov.modeld.services.postmortem.v1.PostMortemGetNamespacesResponse
	nil,                                     // 7: github.com.metaprov.modeld.services.postmortem.v1.PostMortemQuery.LabelsEntry
	nil,                                     // 8: github.com.metaprov.modeld.services.postmortem.v1.PostMortemCreateRequest.LabelsEntry
	nil,                                     // 9: github.com.metaprov.modeld.services.postmortem.v1.PostMortemUpdateRequest.LabelsEntry
	(*v1alpha1.PostMortemSpec)(nil),         // 10: github.com.metaprov.modeldapi.pkg.apis.team.v1alpha1.PostMortemSpec
	(*v1alpha1.PostMortem)(nil),             // 11: github.com.metaprov.modeldapi.pkg.apis.team.v1alpha1.PostMortem
	(*v1.NamespaceInfo)(nil),                // 12: github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo
	(*v1alpha1.PostMortemList)(nil),         // 13: github.com.metaprov.modeldapi.pkg.apis.team.v1alpha1.PostMortemList
	(*empty.Empty)(nil),                     // 14: google.protobuf.Empty
}
var file_services_postmortem_v1_postmortem_proto_depIdxs = []int32{
	7,  // 0: github.com.metaprov.modeld.services.postmortem.v1.PostMortemQuery.labels:type_name -> github.com.metaprov.modeld.services.postmortem.v1.PostMortemQuery.LabelsEntry
	8,  // 1: github.com.metaprov.modeld.services.postmortem.v1.PostMortemCreateRequest.labels:type_name -> github.com.metaprov.modeld.services.postmortem.v1.PostMortemCreateRequest.LabelsEntry
	10, // 2: github.com.metaprov.modeld.services.postmortem.v1.PostMortemCreateRequest.spec:type_name -> github.com.metaprov.modeldapi.pkg.apis.team.v1alpha1.PostMortemSpec
	9,  // 3: github.com.metaprov.modeld.services.postmortem.v1.PostMortemUpdateRequest.labels:type_name -> github.com.metaprov.modeld.services.postmortem.v1.PostMortemUpdateRequest.LabelsEntry
	10, // 4: github.com.metaprov.modeld.services.postmortem.v1.PostMortemUpdateRequest.spec:type_name -> github.com.metaprov.modeldapi.pkg.apis.team.v1alpha1.PostMortemSpec
	11, // 5: github.com.metaprov.modeld.services.postmortem.v1.PostMortemGetResponse.postmortem:type_name -> github.com.metaprov.modeldapi.pkg.apis.team.v1alpha1.PostMortem
	12, // 6: github.com.metaprov.modeld.services.postmortem.v1.PostMortemGetNamespacesResponse.namespaces:type_name -> github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo
	0,  // 7: github.com.metaprov.modeld.services.postmortem.v1.PostMortemService.List:input_type -> github.com.metaprov.modeld.services.postmortem.v1.PostMortemQuery
	2,  // 8: github.com.metaprov.modeld.services.postmortem.v1.PostMortemService.Create:input_type -> github.com.metaprov.modeld.services.postmortem.v1.PostMortemCreateRequest
	0,  // 9: github.com.metaprov.modeld.services.postmortem.v1.PostMortemService.Get:input_type -> github.com.metaprov.modeld.services.postmortem.v1.PostMortemQuery
	3,  // 10: github.com.metaprov.modeld.services.postmortem.v1.PostMortemService.Update:input_type -> github.com.metaprov.modeld.services.postmortem.v1.PostMortemUpdateRequest
	0,  // 11: github.com.metaprov.modeld.services.postmortem.v1.PostMortemService.Delete:input_type -> github.com.metaprov.modeld.services.postmortem.v1.PostMortemQuery
	13, // 12: github.com.metaprov.modeld.services.postmortem.v1.PostMortemService.List:output_type -> github.com.metaprov.modeldapi.pkg.apis.team.v1alpha1.PostMortemList
	14, // 13: github.com.metaprov.modeld.services.postmortem.v1.PostMortemService.Create:output_type -> google.protobuf.Empty
	4,  // 14: github.com.metaprov.modeld.services.postmortem.v1.PostMortemService.Get:output_type -> github.com.metaprov.modeld.services.postmortem.v1.PostMortemGetResponse
	14, // 15: github.com.metaprov.modeld.services.postmortem.v1.PostMortemService.Update:output_type -> google.protobuf.Empty
	14, // 16: github.com.metaprov.modeld.services.postmortem.v1.PostMortemService.Delete:output_type -> google.protobuf.Empty
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_services_postmortem_v1_postmortem_proto_init() }
func file_services_postmortem_v1_postmortem_proto_init() {
	if File_services_postmortem_v1_postmortem_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_postmortem_v1_postmortem_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostMortemQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_postmortem_v1_postmortem_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostMortemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_postmortem_v1_postmortem_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostMortemCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_postmortem_v1_postmortem_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostMortemUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_postmortem_v1_postmortem_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostMortemGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_postmortem_v1_postmortem_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostMortemGetNamespacesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_postmortem_v1_postmortem_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostMortemGetNamespacesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_postmortem_v1_postmortem_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_postmortem_v1_postmortem_proto_goTypes,
		DependencyIndexes: file_services_postmortem_v1_postmortem_proto_depIdxs,
		MessageInfos:      file_services_postmortem_v1_postmortem_proto_msgTypes,
	}.Build()
	File_services_postmortem_v1_postmortem_proto = out.File
	file_services_postmortem_v1_postmortem_proto_rawDesc = nil
	file_services_postmortem_v1_postmortem_proto_goTypes = nil
	file_services_postmortem_v1_postmortem_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PostMortemServiceClient is the client API for PostMortemService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PostMortemServiceClient interface {
	List(ctx context.Context, in *PostMortemQuery, opts ...grpc.CallOption) (*v1alpha1.PostMortemList, error)
	Create(ctx context.Context, in *PostMortemCreateRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Get(ctx context.Context, in *PostMortemQuery, opts ...grpc.CallOption) (*PostMortemGetResponse, error)
	Update(ctx context.Context, in *PostMortemUpdateRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Delete(ctx context.Context, in *PostMortemQuery, opts ...grpc.CallOption) (*empty.Empty, error)
}

type postMortemServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPostMortemServiceClient(cc grpc.ClientConnInterface) PostMortemServiceClient {
	return &postMortemServiceClient{cc}
}

func (c *postMortemServiceClient) List(ctx context.Context, in *PostMortemQuery, opts ...grpc.CallOption) (*v1alpha1.PostMortemList, error) {
	out := new(v1alpha1.PostMortemList)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.postmortem.v1.PostMortemService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postMortemServiceClient) Create(ctx context.Context, in *PostMortemCreateRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.postmortem.v1.PostMortemService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postMortemServiceClient) Get(ctx context.Context, in *PostMortemQuery, opts ...grpc.CallOption) (*PostMortemGetResponse, error) {
	out := new(PostMortemGetResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.postmortem.v1.PostMortemService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postMortemServiceClient) Update(ctx context.Context, in *PostMortemUpdateRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.postmortem.v1.PostMortemService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postMortemServiceClient) Delete(ctx context.Context, in *PostMortemQuery, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.postmortem.v1.PostMortemService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PostMortemServiceServer is the server API for PostMortemService service.
type PostMortemServiceServer interface {
	List(context.Context, *PostMortemQuery) (*v1alpha1.PostMortemList, error)
	Create(context.Context, *PostMortemCreateRequest) (*empty.Empty, error)
	Get(context.Context, *PostMortemQuery) (*PostMortemGetResponse, error)
	Update(context.Context, *PostMortemUpdateRequest) (*empty.Empty, error)
	Delete(context.Context, *PostMortemQuery) (*empty.Empty, error)
}

// UnimplementedPostMortemServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPostMortemServiceServer struct {
}

func (*UnimplementedPostMortemServiceServer) List(context.Context, *PostMortemQuery) (*v1alpha1.PostMortemList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedPostMortemServiceServer) Create(context.Context, *PostMortemCreateRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedPostMortemServiceServer) Get(context.Context, *PostMortemQuery) (*PostMortemGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedPostMortemServiceServer) Update(context.Context, *PostMortemUpdateRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedPostMortemServiceServer) Delete(context.Context, *PostMortemQuery) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterPostMortemServiceServer(s *grpc.Server, srv PostMortemServiceServer) {
	s.RegisterService(&_PostMortemService_serviceDesc, srv)
}

func _PostMortemService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostMortemQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostMortemServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.postmortem.v1.PostMortemService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostMortemServiceServer).List(ctx, req.(*PostMortemQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostMortemService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostMortemCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostMortemServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.postmortem.v1.PostMortemService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostMortemServiceServer).Create(ctx, req.(*PostMortemCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostMortemService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostMortemQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostMortemServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.postmortem.v1.PostMortemService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostMortemServiceServer).Get(ctx, req.(*PostMortemQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostMortemService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostMortemUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostMortemServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.postmortem.v1.PostMortemService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostMortemServiceServer).Update(ctx, req.(*PostMortemUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostMortemService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostMortemQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostMortemServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.postmortem.v1.PostMortemService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostMortemServiceServer).Delete(ctx, req.(*PostMortemQuery))
	}
	return interceptor(ctx, in, info, handler)
}

var _PostMortemService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.metaprov.modeld.services.postmortem.v1.PostMortemService",
	HandlerType: (*PostMortemServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _PostMortemService_List_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _PostMortemService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _PostMortemService_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _PostMortemService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _PostMortemService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/postmortem/v1/postmortem.proto",
}
