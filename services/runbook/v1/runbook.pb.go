// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: services/runbook/v1/runbook.proto

package v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	v1alpha1 "github.com/metaprov/modeldapi/pkg/apis/team/v1alpha1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ListRunBooksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Labels    map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListRunBooksRequest) Reset() {
	*x = ListRunBooksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_runbook_v1_runbook_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRunBooksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRunBooksRequest) ProtoMessage() {}

func (x *ListRunBooksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_runbook_v1_runbook_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRunBooksRequest.ProtoReflect.Descriptor instead.
func (*ListRunBooksRequest) Descriptor() ([]byte, []int) {
	return file_services_runbook_v1_runbook_proto_rawDescGZIP(), []int{0}
}

func (x *ListRunBooksRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListRunBooksRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ListRunBooksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items *v1alpha1.RunBookList `protobuf:"bytes,1,opt,name=items,proto3" json:"items,omitempty"`
}

func (x *ListRunBooksResponse) Reset() {
	*x = ListRunBooksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_runbook_v1_runbook_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRunBooksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRunBooksResponse) ProtoMessage() {}

func (x *ListRunBooksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_runbook_v1_runbook_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRunBooksResponse.ProtoReflect.Descriptor instead.
func (*ListRunBooksResponse) Descriptor() ([]byte, []int) {
	return file_services_runbook_v1_runbook_proto_rawDescGZIP(), []int{1}
}

func (x *ListRunBooksResponse) GetItems() *v1alpha1.RunBookList {
	if x != nil {
		return x.Items
	}
	return nil
}

type CreateRunBookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string                `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Labels    map[string]string     `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Spec      *v1alpha1.RunBookSpec `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CreateRunBookRequest) Reset() {
	*x = CreateRunBookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_runbook_v1_runbook_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRunBookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRunBookRequest) ProtoMessage() {}

func (x *CreateRunBookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_runbook_v1_runbook_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRunBookRequest.ProtoReflect.Descriptor instead.
func (*CreateRunBookRequest) Descriptor() ([]byte, []int) {
	return file_services_runbook_v1_runbook_proto_rawDescGZIP(), []int{2}
}

func (x *CreateRunBookRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateRunBookRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRunBookRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateRunBookRequest) GetSpec() *v1alpha1.RunBookSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type CreateRunBookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateRunBookResponse) Reset() {
	*x = CreateRunBookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_runbook_v1_runbook_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRunBookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRunBookResponse) ProtoMessage() {}

func (x *CreateRunBookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_runbook_v1_runbook_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRunBookResponse.ProtoReflect.Descriptor instead.
func (*CreateRunBookResponse) Descriptor() ([]byte, []int) {
	return file_services_runbook_v1_runbook_proto_rawDescGZIP(), []int{3}
}

type UpdateRunBookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string                `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Labels    map[string]string     `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Spec      *v1alpha1.RunBookSpec `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *UpdateRunBookRequest) Reset() {
	*x = UpdateRunBookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_runbook_v1_runbook_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRunBookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRunBookRequest) ProtoMessage() {}

func (x *UpdateRunBookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_runbook_v1_runbook_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRunBookRequest.ProtoReflect.Descriptor instead.
func (*UpdateRunBookRequest) Descriptor() ([]byte, []int) {
	return file_services_runbook_v1_runbook_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateRunBookRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UpdateRunBookRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateRunBookRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UpdateRunBookRequest) GetSpec() *v1alpha1.RunBookSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type UpdateRunBookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateRunBookResponse) Reset() {
	*x = UpdateRunBookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_runbook_v1_runbook_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRunBookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRunBookResponse) ProtoMessage() {}

func (x *UpdateRunBookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_runbook_v1_runbook_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRunBookResponse.ProtoReflect.Descriptor instead.
func (*UpdateRunBookResponse) Descriptor() ([]byte, []int) {
	return file_services_runbook_v1_runbook_proto_rawDescGZIP(), []int{5}
}

type GetRunBookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetRunBookRequest) Reset() {
	*x = GetRunBookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_runbook_v1_runbook_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRunBookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRunBookRequest) ProtoMessage() {}

func (x *GetRunBookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_runbook_v1_runbook_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRunBookRequest.ProtoReflect.Descriptor instead.
func (*GetRunBookRequest) Descriptor() ([]byte, []int) {
	return file_services_runbook_v1_runbook_proto_rawDescGZIP(), []int{6}
}

func (x *GetRunBookRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetRunBookRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetRunBookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.RunBook `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Yaml string            `protobuf:"bytes,2,opt,name=yaml,proto3" json:"yaml,omitempty"`
}

func (x *GetRunBookResponse) Reset() {
	*x = GetRunBookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_runbook_v1_runbook_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRunBookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRunBookResponse) ProtoMessage() {}

func (x *GetRunBookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_runbook_v1_runbook_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRunBookResponse.ProtoReflect.Descriptor instead.
func (*GetRunBookResponse) Descriptor() ([]byte, []int) {
	return file_services_runbook_v1_runbook_proto_rawDescGZIP(), []int{7}
}

func (x *GetRunBookResponse) GetItem() *v1alpha1.RunBook {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *GetRunBookResponse) GetYaml() string {
	if x != nil {
		return x.Yaml
	}
	return ""
}

type DeleteRunBookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteRunBookRequest) Reset() {
	*x = DeleteRunBookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_runbook_v1_runbook_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRunBookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRunBookRequest) ProtoMessage() {}

func (x *DeleteRunBookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_runbook_v1_runbook_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRunBookRequest.ProtoReflect.Descriptor instead.
func (*DeleteRunBookRequest) Descriptor() ([]byte, []int) {
	return file_services_runbook_v1_runbook_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteRunBookRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeleteRunBookRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteRunBookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRunBookResponse) Reset() {
	*x = DeleteRunBookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_runbook_v1_runbook_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRunBookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRunBookResponse) ProtoMessage() {}

func (x *DeleteRunBookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_runbook_v1_runbook_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRunBookResponse.ProtoReflect.Descriptor instead.
func (*DeleteRunBookResponse) Descriptor() ([]byte, []int) {
	return file_services_runbook_v1_runbook_proto_rawDescGZIP(), []int{9}
}

var File_services_runbook_v1_runbook_proto protoreflect.FileDescriptor

var file_services_runbook_v1_runbook_proto_rawDesc = []byte{
	0x0a, 0x21, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x72, 0x75, 0x6e, 0x62, 0x6f,
	0x6f, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x75, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x75, 0x6e, 0x62,
	0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64,
	0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x74, 0x65, 0x61,
	0x6d, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xda, 0x01, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x6a, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x52, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x75, 0x6e, 0x62, 0x6f, 0x6f,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x42, 0x6f, 0x6f, 0x6b,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6f, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x75, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x57, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xc7, 0x02, 0x0a, 0x14, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x6b, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x75, 0x6e,
	0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x75,
	0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x12, 0x55, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x53, 0x70, 0x65,
	0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x17, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x42,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc7, 0x02, 0x0a, 0x14,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x6b, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x72, 0x75, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x75, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x12, 0x55, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x41, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x42, 0x6f, 0x6f, 0x6b,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x75, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x7b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6e, 0x42,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x52, 0x75, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x61,
	0x6d, 0x6c, 0x22, 0x48, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x42,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x17, 0x0a, 0x15,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xc8, 0x07, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x42, 0x6f, 0x6f,
	0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xb5, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x75, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x46, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x72, 0x75, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x75, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x75, 0x6e, 0x62, 0x6f,
	0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x42, 0x6f, 0x6f,
	0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x75, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x73,
	0x12, 0xc1, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x42, 0x6f,
	0x6f, 0x6b, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x75, 0x6e, 0x62,
	0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6e,
	0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x48, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x75, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x0c, 0x2f,
	0x76, 0x31, 0x2f, 0x72, 0x75, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x3a, 0x07, 0x72, 0x75, 0x6e,
	0x62, 0x6f, 0x6f, 0x6b, 0x12, 0xb6, 0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6e, 0x42,
	0x6f, 0x6f, 0x6b, 0x12, 0x44, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x75, 0x6e,
	0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6e, 0x42, 0x6f,
	0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x72, 0x75, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x75, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x75,
	0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0xd9, 0x01,
	0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x12,
	0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x75, 0x6e, 0x62, 0x6f, 0x6f, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x42, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x72, 0x75, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x1a, 0x24, 0x2f, 0x76, 0x31, 0x2f,
	0x72, 0x75, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2f, 0x7b, 0x72, 0x75, 0x6e, 0x62, 0x6f, 0x6f,
	0x6b, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x7d,
	0x3a, 0x07, 0x72, 0x75, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0xa4, 0x01, 0x0a, 0x0d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x47, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x75, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x75,
	0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x75, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70,
	0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x72, 0x75, 0x6e, 0x62, 0x6f,
	0x6f, 0x6b, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_runbook_v1_runbook_proto_rawDescOnce sync.Once
	file_services_runbook_v1_runbook_proto_rawDescData = file_services_runbook_v1_runbook_proto_rawDesc
)

func file_services_runbook_v1_runbook_proto_rawDescGZIP() []byte {
	file_services_runbook_v1_runbook_proto_rawDescOnce.Do(func() {
		file_services_runbook_v1_runbook_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_runbook_v1_runbook_proto_rawDescData)
	})
	return file_services_runbook_v1_runbook_proto_rawDescData
}

var file_services_runbook_v1_runbook_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_services_runbook_v1_runbook_proto_goTypes = []interface{}{
	(*ListRunBooksRequest)(nil),   // 0: github.com.metaprov.modeldapi.services.runbook.v1.ListRunBooksRequest
	(*ListRunBooksResponse)(nil),  // 1: github.com.metaprov.modeldapi.services.runbook.v1.ListRunBooksResponse
	(*CreateRunBookRequest)(nil),  // 2: github.com.metaprov.modeldapi.services.runbook.v1.CreateRunBookRequest
	(*CreateRunBookResponse)(nil), // 3: github.com.metaprov.modeldapi.services.runbook.v1.CreateRunBookResponse
	(*UpdateRunBookRequest)(nil),  // 4: github.com.metaprov.modeldapi.services.runbook.v1.UpdateRunBookRequest
	(*UpdateRunBookResponse)(nil), // 5: github.com.metaprov.modeldapi.services.runbook.v1.UpdateRunBookResponse
	(*GetRunBookRequest)(nil),     // 6: github.com.metaprov.modeldapi.services.runbook.v1.GetRunBookRequest
	(*GetRunBookResponse)(nil),    // 7: github.com.metaprov.modeldapi.services.runbook.v1.GetRunBookResponse
	(*DeleteRunBookRequest)(nil),  // 8: github.com.metaprov.modeldapi.services.runbook.v1.DeleteRunBookRequest
	(*DeleteRunBookResponse)(nil), // 9: github.com.metaprov.modeldapi.services.runbook.v1.DeleteRunBookResponse
	nil,                           // 10: github.com.metaprov.modeldapi.services.runbook.v1.ListRunBooksRequest.LabelsEntry
	nil,                           // 11: github.com.metaprov.modeldapi.services.runbook.v1.CreateRunBookRequest.LabelsEntry
	nil,                           // 12: github.com.metaprov.modeldapi.services.runbook.v1.UpdateRunBookRequest.LabelsEntry
	(*v1alpha1.RunBookList)(nil),  // 13: github.com.metaprov.modeldapi.pkg.apis.team.v1alpha1.RunBookList
	(*v1alpha1.RunBookSpec)(nil),  // 14: github.com.metaprov.modeldapi.pkg.apis.team.v1alpha1.RunBookSpec
	(*v1alpha1.RunBook)(nil),      // 15: github.com.metaprov.modeldapi.pkg.apis.team.v1alpha1.RunBook
}
var file_services_runbook_v1_runbook_proto_depIdxs = []int32{
	10, // 0: github.com.metaprov.modeldapi.services.runbook.v1.ListRunBooksRequest.labels:type_name -> github.com.metaprov.modeldapi.services.runbook.v1.ListRunBooksRequest.LabelsEntry
	13, // 1: github.com.metaprov.modeldapi.services.runbook.v1.ListRunBooksResponse.items:type_name -> github.com.metaprov.modeldapi.pkg.apis.team.v1alpha1.RunBookList
	11, // 2: github.com.metaprov.modeldapi.services.runbook.v1.CreateRunBookRequest.labels:type_name -> github.com.metaprov.modeldapi.services.runbook.v1.CreateRunBookRequest.LabelsEntry
	14, // 3: github.com.metaprov.modeldapi.services.runbook.v1.CreateRunBookRequest.spec:type_name -> github.com.metaprov.modeldapi.pkg.apis.team.v1alpha1.RunBookSpec
	12, // 4: github.com.metaprov.modeldapi.services.runbook.v1.UpdateRunBookRequest.labels:type_name -> github.com.metaprov.modeldapi.services.runbook.v1.UpdateRunBookRequest.LabelsEntry
	14, // 5: github.com.metaprov.modeldapi.services.runbook.v1.UpdateRunBookRequest.spec:type_name -> github.com.metaprov.modeldapi.pkg.apis.team.v1alpha1.RunBookSpec
	15, // 6: github.com.metaprov.modeldapi.services.runbook.v1.GetRunBookResponse.item:type_name -> github.com.metaprov.modeldapi.pkg.apis.team.v1alpha1.RunBook
	0,  // 7: github.com.metaprov.modeldapi.services.runbook.v1.RunBookService.ListRunBooks:input_type -> github.com.metaprov.modeldapi.services.runbook.v1.ListRunBooksRequest
	2,  // 8: github.com.metaprov.modeldapi.services.runbook.v1.RunBookService.CreateRunBook:input_type -> github.com.metaprov.modeldapi.services.runbook.v1.CreateRunBookRequest
	6,  // 9: github.com.metaprov.modeldapi.services.runbook.v1.RunBookService.GetRunBook:input_type -> github.com.metaprov.modeldapi.services.runbook.v1.GetRunBookRequest
	4,  // 10: github.com.metaprov.modeldapi.services.runbook.v1.RunBookService.UpdateRunBook:input_type -> github.com.metaprov.modeldapi.services.runbook.v1.UpdateRunBookRequest
	8,  // 11: github.com.metaprov.modeldapi.services.runbook.v1.RunBookService.DeleteRunBook:input_type -> github.com.metaprov.modeldapi.services.runbook.v1.DeleteRunBookRequest
	1,  // 12: github.com.metaprov.modeldapi.services.runbook.v1.RunBookService.ListRunBooks:output_type -> github.com.metaprov.modeldapi.services.runbook.v1.ListRunBooksResponse
	3,  // 13: github.com.metaprov.modeldapi.services.runbook.v1.RunBookService.CreateRunBook:output_type -> github.com.metaprov.modeldapi.services.runbook.v1.CreateRunBookResponse
	7,  // 14: github.com.metaprov.modeldapi.services.runbook.v1.RunBookService.GetRunBook:output_type -> github.com.metaprov.modeldapi.services.runbook.v1.GetRunBookResponse
	5,  // 15: github.com.metaprov.modeldapi.services.runbook.v1.RunBookService.UpdateRunBook:output_type -> github.com.metaprov.modeldapi.services.runbook.v1.UpdateRunBookResponse
	9,  // 16: github.com.metaprov.modeldapi.services.runbook.v1.RunBookService.DeleteRunBook:output_type -> github.com.metaprov.modeldapi.services.runbook.v1.DeleteRunBookResponse
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_services_runbook_v1_runbook_proto_init() }
func file_services_runbook_v1_runbook_proto_init() {
	if File_services_runbook_v1_runbook_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_runbook_v1_runbook_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRunBooksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_runbook_v1_runbook_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRunBooksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_runbook_v1_runbook_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRunBookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_runbook_v1_runbook_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRunBookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_runbook_v1_runbook_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRunBookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_runbook_v1_runbook_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRunBookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_runbook_v1_runbook_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRunBookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_runbook_v1_runbook_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRunBookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_runbook_v1_runbook_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRunBookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_runbook_v1_runbook_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRunBookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_runbook_v1_runbook_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_runbook_v1_runbook_proto_goTypes,
		DependencyIndexes: file_services_runbook_v1_runbook_proto_depIdxs,
		MessageInfos:      file_services_runbook_v1_runbook_proto_msgTypes,
	}.Build()
	File_services_runbook_v1_runbook_proto = out.File
	file_services_runbook_v1_runbook_proto_rawDesc = nil
	file_services_runbook_v1_runbook_proto_goTypes = nil
	file_services_runbook_v1_runbook_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RunBookServiceClient is the client API for RunBookService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RunBookServiceClient interface {
	ListRunBooks(ctx context.Context, in *ListRunBooksRequest, opts ...grpc.CallOption) (*ListRunBooksResponse, error)
	CreateRunBook(ctx context.Context, in *CreateRunBookRequest, opts ...grpc.CallOption) (*CreateRunBookResponse, error)
	GetRunBook(ctx context.Context, in *GetRunBookRequest, opts ...grpc.CallOption) (*GetRunBookResponse, error)
	UpdateRunBook(ctx context.Context, in *UpdateRunBookRequest, opts ...grpc.CallOption) (*UpdateRunBookResponse, error)
	DeleteRunBook(ctx context.Context, in *DeleteRunBookRequest, opts ...grpc.CallOption) (*DeleteRunBookResponse, error)
}

type runBookServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRunBookServiceClient(cc grpc.ClientConnInterface) RunBookServiceClient {
	return &runBookServiceClient{cc}
}

func (c *runBookServiceClient) ListRunBooks(ctx context.Context, in *ListRunBooksRequest, opts ...grpc.CallOption) (*ListRunBooksResponse, error) {
	out := new(ListRunBooksResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.runbook.v1.RunBookService/ListRunBooks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runBookServiceClient) CreateRunBook(ctx context.Context, in *CreateRunBookRequest, opts ...grpc.CallOption) (*CreateRunBookResponse, error) {
	out := new(CreateRunBookResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.runbook.v1.RunBookService/CreateRunBook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runBookServiceClient) GetRunBook(ctx context.Context, in *GetRunBookRequest, opts ...grpc.CallOption) (*GetRunBookResponse, error) {
	out := new(GetRunBookResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.runbook.v1.RunBookService/GetRunBook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runBookServiceClient) UpdateRunBook(ctx context.Context, in *UpdateRunBookRequest, opts ...grpc.CallOption) (*UpdateRunBookResponse, error) {
	out := new(UpdateRunBookResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.runbook.v1.RunBookService/UpdateRunBook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runBookServiceClient) DeleteRunBook(ctx context.Context, in *DeleteRunBookRequest, opts ...grpc.CallOption) (*DeleteRunBookResponse, error) {
	out := new(DeleteRunBookResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.runbook.v1.RunBookService/DeleteRunBook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RunBookServiceServer is the server API for RunBookService service.
type RunBookServiceServer interface {
	ListRunBooks(context.Context, *ListRunBooksRequest) (*ListRunBooksResponse, error)
	CreateRunBook(context.Context, *CreateRunBookRequest) (*CreateRunBookResponse, error)
	GetRunBook(context.Context, *GetRunBookRequest) (*GetRunBookResponse, error)
	UpdateRunBook(context.Context, *UpdateRunBookRequest) (*UpdateRunBookResponse, error)
	DeleteRunBook(context.Context, *DeleteRunBookRequest) (*DeleteRunBookResponse, error)
}

// UnimplementedRunBookServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRunBookServiceServer struct {
}

func (*UnimplementedRunBookServiceServer) ListRunBooks(context.Context, *ListRunBooksRequest) (*ListRunBooksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRunBooks not implemented")
}
func (*UnimplementedRunBookServiceServer) CreateRunBook(context.Context, *CreateRunBookRequest) (*CreateRunBookResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRunBook not implemented")
}
func (*UnimplementedRunBookServiceServer) GetRunBook(context.Context, *GetRunBookRequest) (*GetRunBookResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRunBook not implemented")
}
func (*UnimplementedRunBookServiceServer) UpdateRunBook(context.Context, *UpdateRunBookRequest) (*UpdateRunBookResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRunBook not implemented")
}
func (*UnimplementedRunBookServiceServer) DeleteRunBook(context.Context, *DeleteRunBookRequest) (*DeleteRunBookResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRunBook not implemented")
}

func RegisterRunBookServiceServer(s *grpc.Server, srv RunBookServiceServer) {
	s.RegisterService(&_RunBookService_serviceDesc, srv)
}

func _RunBookService_ListRunBooks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRunBooksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RunBookServiceServer).ListRunBooks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.runbook.v1.RunBookService/ListRunBooks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RunBookServiceServer).ListRunBooks(ctx, req.(*ListRunBooksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RunBookService_CreateRunBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRunBookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RunBookServiceServer).CreateRunBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.runbook.v1.RunBookService/CreateRunBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RunBookServiceServer).CreateRunBook(ctx, req.(*CreateRunBookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RunBookService_GetRunBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRunBookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RunBookServiceServer).GetRunBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.runbook.v1.RunBookService/GetRunBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RunBookServiceServer).GetRunBook(ctx, req.(*GetRunBookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RunBookService_UpdateRunBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRunBookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RunBookServiceServer).UpdateRunBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.runbook.v1.RunBookService/UpdateRunBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RunBookServiceServer).UpdateRunBook(ctx, req.(*UpdateRunBookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RunBookService_DeleteRunBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRunBookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RunBookServiceServer).DeleteRunBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.runbook.v1.RunBookService/DeleteRunBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RunBookServiceServer).DeleteRunBook(ctx, req.(*DeleteRunBookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RunBookService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.metaprov.modeldapi.services.runbook.v1.RunBookService",
	HandlerType: (*RunBookServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListRunBooks",
			Handler:    _RunBookService_ListRunBooks_Handler,
		},
		{
			MethodName: "CreateRunBook",
			Handler:    _RunBookService_CreateRunBook_Handler,
		},
		{
			MethodName: "GetRunBook",
			Handler:    _RunBookService_GetRunBook_Handler,
		},
		{
			MethodName: "UpdateRunBook",
			Handler:    _RunBookService_UpdateRunBook_Handler,
		},
		{
			MethodName: "DeleteRunBook",
			Handler:    _RunBookService_DeleteRunBook_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/runbook/v1/runbook.proto",
}
