// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.7
// source: github.com/metaprov/modeldapi/services/servingsite/v1/servingsite.proto

package v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	v1alpha1 "github.com/metaprov/modeldapi/pkg/apis/infra/v1alpha1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ListServingSitesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Labels    map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListServingSitesRequest) Reset() {
	*x = ListServingSitesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServingSitesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServingSitesRequest) ProtoMessage() {}

func (x *ListServingSitesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServingSitesRequest.ProtoReflect.Descriptor instead.
func (*ListServingSitesRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_rawDescGZIP(), []int{0}
}

func (x *ListServingSitesRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListServingSitesRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ListServingSitesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items *v1alpha1.ServingSiteList `protobuf:"bytes,1,opt,name=items,proto3" json:"items,omitempty"`
}

func (x *ListServingSitesResponse) Reset() {
	*x = ListServingSitesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServingSitesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServingSitesResponse) ProtoMessage() {}

func (x *ListServingSitesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServingSitesResponse.ProtoReflect.Descriptor instead.
func (*ListServingSitesResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_rawDescGZIP(), []int{1}
}

func (x *ListServingSitesResponse) GetItems() *v1alpha1.ServingSiteList {
	if x != nil {
		return x.Items
	}
	return nil
}

type CreateServingSiteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.ServingSite `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *CreateServingSiteRequest) Reset() {
	*x = CreateServingSiteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServingSiteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServingSiteRequest) ProtoMessage() {}

func (x *CreateServingSiteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServingSiteRequest.ProtoReflect.Descriptor instead.
func (*CreateServingSiteRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_rawDescGZIP(), []int{2}
}

func (x *CreateServingSiteRequest) GetItem() *v1alpha1.ServingSite {
	if x != nil {
		return x.Item
	}
	return nil
}

type CreateServingSiteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateServingSiteResponse) Reset() {
	*x = CreateServingSiteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServingSiteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServingSiteResponse) ProtoMessage() {}

func (x *CreateServingSiteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServingSiteResponse.ProtoReflect.Descriptor instead.
func (*CreateServingSiteResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_rawDescGZIP(), []int{3}
}

type UpdateServingSiteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.ServingSite `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *UpdateServingSiteRequest) Reset() {
	*x = UpdateServingSiteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServingSiteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServingSiteRequest) ProtoMessage() {}

func (x *UpdateServingSiteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServingSiteRequest.ProtoReflect.Descriptor instead.
func (*UpdateServingSiteRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateServingSiteRequest) GetItem() *v1alpha1.ServingSite {
	if x != nil {
		return x.Item
	}
	return nil
}

type UpdateServingSiteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateServingSiteResponse) Reset() {
	*x = UpdateServingSiteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServingSiteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServingSiteResponse) ProtoMessage() {}

func (x *UpdateServingSiteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServingSiteResponse.ProtoReflect.Descriptor instead.
func (*UpdateServingSiteResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_rawDescGZIP(), []int{5}
}

type GetServingSiteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetServingSiteRequest) Reset() {
	*x = GetServingSiteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServingSiteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServingSiteRequest) ProtoMessage() {}

func (x *GetServingSiteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServingSiteRequest.ProtoReflect.Descriptor instead.
func (*GetServingSiteRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_rawDescGZIP(), []int{6}
}

func (x *GetServingSiteRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetServingSiteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetServingSiteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.ServingSite `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Yaml string                `protobuf:"bytes,2,opt,name=yaml,proto3" json:"yaml,omitempty"`
}

func (x *GetServingSiteResponse) Reset() {
	*x = GetServingSiteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServingSiteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServingSiteResponse) ProtoMessage() {}

func (x *GetServingSiteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServingSiteResponse.ProtoReflect.Descriptor instead.
func (*GetServingSiteResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_rawDescGZIP(), []int{7}
}

func (x *GetServingSiteResponse) GetItem() *v1alpha1.ServingSite {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *GetServingSiteResponse) GetYaml() string {
	if x != nil {
		return x.Yaml
	}
	return ""
}

type DeleteServingSiteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteServingSiteRequest) Reset() {
	*x = DeleteServingSiteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServingSiteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServingSiteRequest) ProtoMessage() {}

func (x *DeleteServingSiteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServingSiteRequest.ProtoReflect.Descriptor instead.
func (*DeleteServingSiteRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteServingSiteRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeleteServingSiteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteServingSiteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteServingSiteResponse) Reset() {
	*x = DeleteServingSiteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServingSiteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServingSiteResponse) ProtoMessage() {}

func (x *DeleteServingSiteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServingSiteResponse.ProtoReflect.Descriptor instead.
func (*DeleteServingSiteResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_rawDescGZIP(), []int{9}
}

var File_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto protoreflect.FileDescriptor

var file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_rawDesc = []byte{
	0x0a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67,
	0x73, 0x69, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x73,
	0x69, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x31,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x45,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70,
	0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe6, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x72, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67,
	0x73, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x78,
	0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x72, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x1b, 0x0a, 0x19,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x72, 0x0a, 0x18, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x1b, 0x0a,
	0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x49, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x56, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x69,
	0x74, 0x65, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x61, 0x6d, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x22, 0x4c, 0x0a, 0x18,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xec, 0x08, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xcd,
	0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x69,
	0x74, 0x65, 0x73, 0x12, 0x4e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x6e, 0x67, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x4f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x6e, 0x67, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x73, 0x69, 0x74, 0x65, 0x73, 0x12, 0xd3,
	0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67,
	0x53, 0x69, 0x74, 0x65, 0x12, 0x4f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x6e, 0x67, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x50, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22,
	0x10, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x73, 0x69, 0x74, 0x65,
	0x73, 0x3a, 0x01, 0x2a, 0x12, 0xce, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x12, 0x4c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x73, 0x69, 0x74, 0x65, 0x73, 0x2f, 0x7b,
	0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0xef, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x12, 0x4f, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x73, 0x69, 0x74, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e,
	0x67, 0x53, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x50, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x73, 0x69, 0x74,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x1a, 0x2c, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x6e, 0x67, 0x73, 0x69, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e,
	0x67, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x6e,
	0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0xec, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x12, 0x4f, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70,
	0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x73, 0x69,
	0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x50,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x73,
	0x69, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x2a, 0x2c, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x6e, 0x67, 0x73, 0x69, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x6e, 0x67, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x73, 0x69, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_rawDescOnce sync.Once
	file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_rawDescData = file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_rawDesc
)

func file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_rawDescGZIP() []byte {
	file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_rawDescOnce.Do(func() {
		file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_rawDescData)
	})
	return file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_rawDescData
}

var file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_goTypes = []interface{}{
	(*ListServingSitesRequest)(nil),   // 0: github.com.metaprov.modeldapi.services.servingsite.v1.ListServingSitesRequest
	(*ListServingSitesResponse)(nil),  // 1: github.com.metaprov.modeldapi.services.servingsite.v1.ListServingSitesResponse
	(*CreateServingSiteRequest)(nil),  // 2: github.com.metaprov.modeldapi.services.servingsite.v1.CreateServingSiteRequest
	(*CreateServingSiteResponse)(nil), // 3: github.com.metaprov.modeldapi.services.servingsite.v1.CreateServingSiteResponse
	(*UpdateServingSiteRequest)(nil),  // 4: github.com.metaprov.modeldapi.services.servingsite.v1.UpdateServingSiteRequest
	(*UpdateServingSiteResponse)(nil), // 5: github.com.metaprov.modeldapi.services.servingsite.v1.UpdateServingSiteResponse
	(*GetServingSiteRequest)(nil),     // 6: github.com.metaprov.modeldapi.services.servingsite.v1.GetServingSiteRequest
	(*GetServingSiteResponse)(nil),    // 7: github.com.metaprov.modeldapi.services.servingsite.v1.GetServingSiteResponse
	(*DeleteServingSiteRequest)(nil),  // 8: github.com.metaprov.modeldapi.services.servingsite.v1.DeleteServingSiteRequest
	(*DeleteServingSiteResponse)(nil), // 9: github.com.metaprov.modeldapi.services.servingsite.v1.DeleteServingSiteResponse
	nil,                               // 10: github.com.metaprov.modeldapi.services.servingsite.v1.ListServingSitesRequest.LabelsEntry
	(*v1alpha1.ServingSiteList)(nil),  // 11: github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.ServingSiteList
	(*v1alpha1.ServingSite)(nil),      // 12: github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.ServingSite
}
var file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_depIdxs = []int32{
	10, // 0: github.com.metaprov.modeldapi.services.servingsite.v1.ListServingSitesRequest.labels:type_name -> github.com.metaprov.modeldapi.services.servingsite.v1.ListServingSitesRequest.LabelsEntry
	11, // 1: github.com.metaprov.modeldapi.services.servingsite.v1.ListServingSitesResponse.items:type_name -> github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.ServingSiteList
	12, // 2: github.com.metaprov.modeldapi.services.servingsite.v1.CreateServingSiteRequest.item:type_name -> github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.ServingSite
	12, // 3: github.com.metaprov.modeldapi.services.servingsite.v1.UpdateServingSiteRequest.item:type_name -> github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.ServingSite
	12, // 4: github.com.metaprov.modeldapi.services.servingsite.v1.GetServingSiteResponse.item:type_name -> github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.ServingSite
	0,  // 5: github.com.metaprov.modeldapi.services.servingsite.v1.ServingSiteService.ListServingSites:input_type -> github.com.metaprov.modeldapi.services.servingsite.v1.ListServingSitesRequest
	2,  // 6: github.com.metaprov.modeldapi.services.servingsite.v1.ServingSiteService.CreateServingSite:input_type -> github.com.metaprov.modeldapi.services.servingsite.v1.CreateServingSiteRequest
	6,  // 7: github.com.metaprov.modeldapi.services.servingsite.v1.ServingSiteService.GetServingSite:input_type -> github.com.metaprov.modeldapi.services.servingsite.v1.GetServingSiteRequest
	4,  // 8: github.com.metaprov.modeldapi.services.servingsite.v1.ServingSiteService.UpdateServingSite:input_type -> github.com.metaprov.modeldapi.services.servingsite.v1.UpdateServingSiteRequest
	8,  // 9: github.com.metaprov.modeldapi.services.servingsite.v1.ServingSiteService.DeleteServingSite:input_type -> github.com.metaprov.modeldapi.services.servingsite.v1.DeleteServingSiteRequest
	1,  // 10: github.com.metaprov.modeldapi.services.servingsite.v1.ServingSiteService.ListServingSites:output_type -> github.com.metaprov.modeldapi.services.servingsite.v1.ListServingSitesResponse
	3,  // 11: github.com.metaprov.modeldapi.services.servingsite.v1.ServingSiteService.CreateServingSite:output_type -> github.com.metaprov.modeldapi.services.servingsite.v1.CreateServingSiteResponse
	7,  // 12: github.com.metaprov.modeldapi.services.servingsite.v1.ServingSiteService.GetServingSite:output_type -> github.com.metaprov.modeldapi.services.servingsite.v1.GetServingSiteResponse
	5,  // 13: github.com.metaprov.modeldapi.services.servingsite.v1.ServingSiteService.UpdateServingSite:output_type -> github.com.metaprov.modeldapi.services.servingsite.v1.UpdateServingSiteResponse
	9,  // 14: github.com.metaprov.modeldapi.services.servingsite.v1.ServingSiteService.DeleteServingSite:output_type -> github.com.metaprov.modeldapi.services.servingsite.v1.DeleteServingSiteResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_init() }
func file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_init() {
	if File_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServingSitesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServingSitesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateServingSiteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateServingSiteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServingSiteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServingSiteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServingSiteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServingSiteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteServingSiteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteServingSiteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_goTypes,
		DependencyIndexes: file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_depIdxs,
		MessageInfos:      file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_msgTypes,
	}.Build()
	File_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto = out.File
	file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_rawDesc = nil
	file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_goTypes = nil
	file_github_com_metaprov_modeldapi_services_servingsite_v1_servingsite_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ServingSiteServiceClient is the client API for ServingSiteService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServingSiteServiceClient interface {
	ListServingSites(ctx context.Context, in *ListServingSitesRequest, opts ...grpc.CallOption) (*ListServingSitesResponse, error)
	CreateServingSite(ctx context.Context, in *CreateServingSiteRequest, opts ...grpc.CallOption) (*CreateServingSiteResponse, error)
	GetServingSite(ctx context.Context, in *GetServingSiteRequest, opts ...grpc.CallOption) (*GetServingSiteResponse, error)
	UpdateServingSite(ctx context.Context, in *UpdateServingSiteRequest, opts ...grpc.CallOption) (*UpdateServingSiteResponse, error)
	DeleteServingSite(ctx context.Context, in *DeleteServingSiteRequest, opts ...grpc.CallOption) (*DeleteServingSiteResponse, error)
}

type servingSiteServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewServingSiteServiceClient(cc grpc.ClientConnInterface) ServingSiteServiceClient {
	return &servingSiteServiceClient{cc}
}

func (c *servingSiteServiceClient) ListServingSites(ctx context.Context, in *ListServingSitesRequest, opts ...grpc.CallOption) (*ListServingSitesResponse, error) {
	out := new(ListServingSitesResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.servingsite.v1.ServingSiteService/ListServingSites", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servingSiteServiceClient) CreateServingSite(ctx context.Context, in *CreateServingSiteRequest, opts ...grpc.CallOption) (*CreateServingSiteResponse, error) {
	out := new(CreateServingSiteResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.servingsite.v1.ServingSiteService/CreateServingSite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servingSiteServiceClient) GetServingSite(ctx context.Context, in *GetServingSiteRequest, opts ...grpc.CallOption) (*GetServingSiteResponse, error) {
	out := new(GetServingSiteResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.servingsite.v1.ServingSiteService/GetServingSite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servingSiteServiceClient) UpdateServingSite(ctx context.Context, in *UpdateServingSiteRequest, opts ...grpc.CallOption) (*UpdateServingSiteResponse, error) {
	out := new(UpdateServingSiteResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.servingsite.v1.ServingSiteService/UpdateServingSite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servingSiteServiceClient) DeleteServingSite(ctx context.Context, in *DeleteServingSiteRequest, opts ...grpc.CallOption) (*DeleteServingSiteResponse, error) {
	out := new(DeleteServingSiteResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.servingsite.v1.ServingSiteService/DeleteServingSite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServingSiteServiceServer is the server API for ServingSiteService service.
type ServingSiteServiceServer interface {
	ListServingSites(context.Context, *ListServingSitesRequest) (*ListServingSitesResponse, error)
	CreateServingSite(context.Context, *CreateServingSiteRequest) (*CreateServingSiteResponse, error)
	GetServingSite(context.Context, *GetServingSiteRequest) (*GetServingSiteResponse, error)
	UpdateServingSite(context.Context, *UpdateServingSiteRequest) (*UpdateServingSiteResponse, error)
	DeleteServingSite(context.Context, *DeleteServingSiteRequest) (*DeleteServingSiteResponse, error)
}

// UnimplementedServingSiteServiceServer can be embedded to have forward compatible implementations.
type UnimplementedServingSiteServiceServer struct {
}

func (*UnimplementedServingSiteServiceServer) ListServingSites(context.Context, *ListServingSitesRequest) (*ListServingSitesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListServingSites not implemented")
}
func (*UnimplementedServingSiteServiceServer) CreateServingSite(context.Context, *CreateServingSiteRequest) (*CreateServingSiteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateServingSite not implemented")
}
func (*UnimplementedServingSiteServiceServer) GetServingSite(context.Context, *GetServingSiteRequest) (*GetServingSiteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServingSite not implemented")
}
func (*UnimplementedServingSiteServiceServer) UpdateServingSite(context.Context, *UpdateServingSiteRequest) (*UpdateServingSiteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateServingSite not implemented")
}
func (*UnimplementedServingSiteServiceServer) DeleteServingSite(context.Context, *DeleteServingSiteRequest) (*DeleteServingSiteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteServingSite not implemented")
}

func RegisterServingSiteServiceServer(s *grpc.Server, srv ServingSiteServiceServer) {
	s.RegisterService(&_ServingSiteService_serviceDesc, srv)
}

func _ServingSiteService_ListServingSites_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListServingSitesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServingSiteServiceServer).ListServingSites(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.servingsite.v1.ServingSiteService/ListServingSites",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServingSiteServiceServer).ListServingSites(ctx, req.(*ListServingSitesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServingSiteService_CreateServingSite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateServingSiteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServingSiteServiceServer).CreateServingSite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.servingsite.v1.ServingSiteService/CreateServingSite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServingSiteServiceServer).CreateServingSite(ctx, req.(*CreateServingSiteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServingSiteService_GetServingSite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServingSiteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServingSiteServiceServer).GetServingSite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.servingsite.v1.ServingSiteService/GetServingSite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServingSiteServiceServer).GetServingSite(ctx, req.(*GetServingSiteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServingSiteService_UpdateServingSite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateServingSiteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServingSiteServiceServer).UpdateServingSite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.servingsite.v1.ServingSiteService/UpdateServingSite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServingSiteServiceServer).UpdateServingSite(ctx, req.(*UpdateServingSiteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServingSiteService_DeleteServingSite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteServingSiteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServingSiteServiceServer).DeleteServingSite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.servingsite.v1.ServingSiteService/DeleteServingSite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServingSiteServiceServer).DeleteServingSite(ctx, req.(*DeleteServingSiteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServingSiteService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.metaprov.modeldapi.services.servingsite.v1.ServingSiteService",
	HandlerType: (*ServingSiteServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListServingSites",
			Handler:    _ServingSiteService_ListServingSites_Handler,
		},
		{
			MethodName: "CreateServingSite",
			Handler:    _ServingSiteService_CreateServingSite_Handler,
		},
		{
			MethodName: "GetServingSite",
			Handler:    _ServingSiteService_GetServingSite_Handler,
		},
		{
			MethodName: "UpdateServingSite",
			Handler:    _ServingSiteService_UpdateServingSite_Handler,
		},
		{
			MethodName: "DeleteServingSite",
			Handler:    _ServingSiteService_DeleteServingSite_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/metaprov/modeldapi/services/servingsite/v1/servingsite.proto",
}
