// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.7
// source: github.com/metaprov/modelaapi/services/sqlquery/v1/sqlquery.proto

package v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	v1alpha1 "github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ListSqlQueriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Labels    map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListSqlQueriesRequest) Reset() {
	*x = ListSqlQueriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSqlQueriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSqlQueriesRequest) ProtoMessage() {}

func (x *ListSqlQueriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSqlQueriesRequest.ProtoReflect.Descriptor instead.
func (*ListSqlQueriesRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_rawDescGZIP(), []int{0}
}

func (x *ListSqlQueriesRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListSqlQueriesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListSqlQueriesRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ListSqlQueriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items *v1alpha1.SqlQueryList `protobuf:"bytes,1,opt,name=items,proto3" json:"items,omitempty"`
}

func (x *ListSqlQueriesResponse) Reset() {
	*x = ListSqlQueriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSqlQueriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSqlQueriesResponse) ProtoMessage() {}

func (x *ListSqlQueriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSqlQueriesResponse.ProtoReflect.Descriptor instead.
func (*ListSqlQueriesResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_rawDescGZIP(), []int{1}
}

func (x *ListSqlQueriesResponse) GetItems() *v1alpha1.SqlQueryList {
	if x != nil {
		return x.Items
	}
	return nil
}

type CreateSqlQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateSqlQueryResponse) Reset() {
	*x = CreateSqlQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSqlQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSqlQueryResponse) ProtoMessage() {}

func (x *CreateSqlQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSqlQueryResponse.ProtoReflect.Descriptor instead.
func (*CreateSqlQueryResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_rawDescGZIP(), []int{2}
}

type CreateSqlQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.SqlQuery `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *CreateSqlQueryRequest) Reset() {
	*x = CreateSqlQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSqlQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSqlQueryRequest) ProtoMessage() {}

func (x *CreateSqlQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSqlQueryRequest.ProtoReflect.Descriptor instead.
func (*CreateSqlQueryRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_rawDescGZIP(), []int{3}
}

func (x *CreateSqlQueryRequest) GetItem() *v1alpha1.SqlQuery {
	if x != nil {
		return x.Item
	}
	return nil
}

type UpdateSqlQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.SqlQuery `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *UpdateSqlQueryRequest) Reset() {
	*x = UpdateSqlQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSqlQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSqlQueryRequest) ProtoMessage() {}

func (x *UpdateSqlQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSqlQueryRequest.ProtoReflect.Descriptor instead.
func (*UpdateSqlQueryRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateSqlQueryRequest) GetItem() *v1alpha1.SqlQuery {
	if x != nil {
		return x.Item
	}
	return nil
}

type UpdateSqlQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSqlQueryResponse) Reset() {
	*x = UpdateSqlQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSqlQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSqlQueryResponse) ProtoMessage() {}

func (x *UpdateSqlQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSqlQueryResponse.ProtoReflect.Descriptor instead.
func (*UpdateSqlQueryResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_rawDescGZIP(), []int{5}
}

type GetSqlQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetSqlQueryRequest) Reset() {
	*x = GetSqlQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSqlQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSqlQueryRequest) ProtoMessage() {}

func (x *GetSqlQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSqlQueryRequest.ProtoReflect.Descriptor instead.
func (*GetSqlQueryRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_rawDescGZIP(), []int{6}
}

func (x *GetSqlQueryRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetSqlQueryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetSqlQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.SqlQuery `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Yaml string             `protobuf:"bytes,2,opt,name=yaml,proto3" json:"yaml,omitempty"`
}

func (x *GetSqlQueryResponse) Reset() {
	*x = GetSqlQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSqlQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSqlQueryResponse) ProtoMessage() {}

func (x *GetSqlQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSqlQueryResponse.ProtoReflect.Descriptor instead.
func (*GetSqlQueryResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_rawDescGZIP(), []int{7}
}

func (x *GetSqlQueryResponse) GetItem() *v1alpha1.SqlQuery {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *GetSqlQueryResponse) GetYaml() string {
	if x != nil {
		return x.Yaml
	}
	return ""
}

type DeleteSqlQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteSqlQueryRequest) Reset() {
	*x = DeleteSqlQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSqlQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSqlQueryRequest) ProtoMessage() {}

func (x *DeleteSqlQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSqlQueryRequest.ProtoReflect.Descriptor instead.
func (*DeleteSqlQueryRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteSqlQueryRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeleteSqlQueryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteSqlQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSqlQueryResponse) Reset() {
	*x = DeleteSqlQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSqlQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSqlQueryResponse) ProtoMessage() {}

func (x *DeleteSqlQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSqlQueryResponse.ProtoReflect.Descriptor instead.
func (*DeleteSqlQueryResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_rawDescGZIP(), []int{9}
}

type PauseSqlQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PauseSqlQueryRequest) Reset() {
	*x = PauseSqlQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseSqlQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseSqlQueryRequest) ProtoMessage() {}

func (x *PauseSqlQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseSqlQueryRequest.ProtoReflect.Descriptor instead.
func (*PauseSqlQueryRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_rawDescGZIP(), []int{10}
}

func (x *PauseSqlQueryRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PauseSqlQueryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PauseSqlQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PauseSqlQueryResponse) Reset() {
	*x = PauseSqlQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseSqlQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseSqlQueryResponse) ProtoMessage() {}

func (x *PauseSqlQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseSqlQueryResponse.ProtoReflect.Descriptor instead.
func (*PauseSqlQueryResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_rawDescGZIP(), []int{11}
}

type ResumeSqlQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ResumeSqlQueryRequest) Reset() {
	*x = ResumeSqlQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeSqlQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeSqlQueryRequest) ProtoMessage() {}

func (x *ResumeSqlQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeSqlQueryRequest.ProtoReflect.Descriptor instead.
func (*ResumeSqlQueryRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_rawDescGZIP(), []int{12}
}

func (x *ResumeSqlQueryRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ResumeSqlQueryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ResumeSqlQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResumeSqlQueryResponse) Reset() {
	*x = ResumeSqlQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeSqlQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeSqlQueryResponse) ProtoMessage() {}

func (x *ResumeSqlQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeSqlQueryResponse.ProtoReflect.Descriptor instead.
func (*ResumeSqlQueryResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_rawDescGZIP(), []int{13}
}

type RunSqlQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.SqlQuery `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *RunSqlQueryRequest) Reset() {
	*x = RunSqlQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunSqlQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunSqlQueryRequest) ProtoMessage() {}

func (x *RunSqlQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunSqlQueryRequest.ProtoReflect.Descriptor instead.
func (*RunSqlQueryRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_rawDescGZIP(), []int{14}
}

func (x *RunSqlQueryRequest) GetItem() *v1alpha1.SqlQuery {
	if x != nil {
		return x.Item
	}
	return nil
}

type RunSqlQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunSqlQueryResponse) Reset() {
	*x = RunSqlQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunSqlQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunSqlQueryResponse) ProtoMessage() {}

func (x *RunSqlQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunSqlQueryResponse.ProtoReflect.Descriptor instead.
func (*RunSqlQueryResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_rawDescGZIP(), []int{15}
}

var File_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto protoreflect.FileDescriptor

var file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_rawDesc = []byte{
	0x0a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x71, 0x6c, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x71, 0x6c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x73, 0x71, 0x6c, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x61, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x61,
	0x74, 0x61, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf3, 0x01, 0x0a, 0x15,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x6d, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x55, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x73, 0x71, 0x6c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x72, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x18, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x6b, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x71,
	0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x6b, 0x0a, 0x15,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x71, 0x6c, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x18, 0x0a, 0x16, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x46, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x7d, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x52, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x22, 0x49, 0x0a, 0x15, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x48, 0x0a, 0x14, 0x50, 0x61, 0x75, 0x73, 0x65, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x50, 0x61, 0x75,
	0x73, 0x65, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x49, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x71, 0x6c, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x18, 0x0a,
	0x16, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x68, 0x0a, 0x12, 0x52, 0x75, 0x6e, 0x53, 0x71,
	0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a,
	0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x22, 0x15, 0x0a, 0x13, 0x52, 0x75, 0x6e, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x8f, 0x0b, 0x0a, 0x0f, 0x53, 0x71, 0x6c,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xbd, 0x01, 0x0a,
	0x0e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x49, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x73, 0x71, 0x6c, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4a, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x73, 0x71, 0x6c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0xc0, 0x01, 0x0a,
	0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x49, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x73, 0x71, 0x6c, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x71, 0x6c, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4a, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x73, 0x71, 0x6c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x22, 0x0c,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x3a, 0x01, 0x2a, 0x12,
	0xbb, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x46, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x73, 0x71, 0x6c, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x73, 0x71, 0x6c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70,
	0x69, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0xdb, 0x01,
	0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x49, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x73, 0x71, 0x6c, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x71, 0x6c, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4a, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x73, 0x71, 0x6c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x1a,
	0x27, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x2f, 0x7b, 0x77,
	0x65, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0xc4, 0x01, 0x0a, 0x0e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x49,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x73, 0x71, 0x6c, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4a, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x73, 0x71, 0x6c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x2a, 0x13, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d,
	0x65, 0x7d, 0x12, 0xc7, 0x01, 0x0a, 0x0d, 0x50, 0x61, 0x75, 0x73, 0x65, 0x53, 0x71, 0x6c, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x73, 0x71,
	0x6c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x53,
	0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x49,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x73, 0x71, 0x6c, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1b, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x2f,
	0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x70, 0x61, 0x75, 0x73, 0x65, 0x12, 0xcb, 0x01, 0x0a,
	0x0e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x49, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x73, 0x71, 0x6c, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x71, 0x6c, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4a, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x73, 0x71, 0x6c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x1a,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x7d, 0x3a, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x71, 0x6c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_rawDescOnce sync.Once
	file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_rawDescData = file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_rawDesc
)

func file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_rawDescGZIP() []byte {
	file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_rawDescOnce.Do(func() {
		file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_rawDescData)
	})
	return file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_rawDescData
}

var file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_goTypes = []interface{}{
	(*ListSqlQueriesRequest)(nil),  // 0: github.com.metaprov.modelaapi.services.sqlquery.v1.ListSqlQueriesRequest
	(*ListSqlQueriesResponse)(nil), // 1: github.com.metaprov.modelaapi.services.sqlquery.v1.ListSqlQueriesResponse
	(*CreateSqlQueryResponse)(nil), // 2: github.com.metaprov.modelaapi.services.sqlquery.v1.CreateSqlQueryResponse
	(*CreateSqlQueryRequest)(nil),  // 3: github.com.metaprov.modelaapi.services.sqlquery.v1.CreateSqlQueryRequest
	(*UpdateSqlQueryRequest)(nil),  // 4: github.com.metaprov.modelaapi.services.sqlquery.v1.UpdateSqlQueryRequest
	(*UpdateSqlQueryResponse)(nil), // 5: github.com.metaprov.modelaapi.services.sqlquery.v1.UpdateSqlQueryResponse
	(*GetSqlQueryRequest)(nil),     // 6: github.com.metaprov.modelaapi.services.sqlquery.v1.GetSqlQueryRequest
	(*GetSqlQueryResponse)(nil),    // 7: github.com.metaprov.modelaapi.services.sqlquery.v1.GetSqlQueryResponse
	(*DeleteSqlQueryRequest)(nil),  // 8: github.com.metaprov.modelaapi.services.sqlquery.v1.DeleteSqlQueryRequest
	(*DeleteSqlQueryResponse)(nil), // 9: github.com.metaprov.modelaapi.services.sqlquery.v1.DeleteSqlQueryResponse
	(*PauseSqlQueryRequest)(nil),   // 10: github.com.metaprov.modelaapi.services.sqlquery.v1.PauseSqlQueryRequest
	(*PauseSqlQueryResponse)(nil),  // 11: github.com.metaprov.modelaapi.services.sqlquery.v1.PauseSqlQueryResponse
	(*ResumeSqlQueryRequest)(nil),  // 12: github.com.metaprov.modelaapi.services.sqlquery.v1.ResumeSqlQueryRequest
	(*ResumeSqlQueryResponse)(nil), // 13: github.com.metaprov.modelaapi.services.sqlquery.v1.ResumeSqlQueryResponse
	(*RunSqlQueryRequest)(nil),     // 14: github.com.metaprov.modelaapi.services.sqlquery.v1.RunSqlQueryRequest
	(*RunSqlQueryResponse)(nil),    // 15: github.com.metaprov.modelaapi.services.sqlquery.v1.RunSqlQueryResponse
	nil,                            // 16: github.com.metaprov.modelaapi.services.sqlquery.v1.ListSqlQueriesRequest.LabelsEntry
	(*v1alpha1.SqlQueryList)(nil),  // 17: github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.SqlQueryList
	(*v1alpha1.SqlQuery)(nil),      // 18: github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.SqlQuery
}
var file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_depIdxs = []int32{
	16, // 0: github.com.metaprov.modelaapi.services.sqlquery.v1.ListSqlQueriesRequest.labels:type_name -> github.com.metaprov.modelaapi.services.sqlquery.v1.ListSqlQueriesRequest.LabelsEntry
	17, // 1: github.com.metaprov.modelaapi.services.sqlquery.v1.ListSqlQueriesResponse.items:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.SqlQueryList
	18, // 2: github.com.metaprov.modelaapi.services.sqlquery.v1.CreateSqlQueryRequest.item:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.SqlQuery
	18, // 3: github.com.metaprov.modelaapi.services.sqlquery.v1.UpdateSqlQueryRequest.item:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.SqlQuery
	18, // 4: github.com.metaprov.modelaapi.services.sqlquery.v1.GetSqlQueryResponse.item:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.SqlQuery
	18, // 5: github.com.metaprov.modelaapi.services.sqlquery.v1.RunSqlQueryRequest.item:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.SqlQuery
	0,  // 6: github.com.metaprov.modelaapi.services.sqlquery.v1.SqlQueryService.ListSqlQueries:input_type -> github.com.metaprov.modelaapi.services.sqlquery.v1.ListSqlQueriesRequest
	3,  // 7: github.com.metaprov.modelaapi.services.sqlquery.v1.SqlQueryService.CreateSqlQuery:input_type -> github.com.metaprov.modelaapi.services.sqlquery.v1.CreateSqlQueryRequest
	6,  // 8: github.com.metaprov.modelaapi.services.sqlquery.v1.SqlQueryService.GetSqlQuery:input_type -> github.com.metaprov.modelaapi.services.sqlquery.v1.GetSqlQueryRequest
	4,  // 9: github.com.metaprov.modelaapi.services.sqlquery.v1.SqlQueryService.UpdateSqlQuery:input_type -> github.com.metaprov.modelaapi.services.sqlquery.v1.UpdateSqlQueryRequest
	8,  // 10: github.com.metaprov.modelaapi.services.sqlquery.v1.SqlQueryService.DeleteSqlQuery:input_type -> github.com.metaprov.modelaapi.services.sqlquery.v1.DeleteSqlQueryRequest
	10, // 11: github.com.metaprov.modelaapi.services.sqlquery.v1.SqlQueryService.PauseSqlQuery:input_type -> github.com.metaprov.modelaapi.services.sqlquery.v1.PauseSqlQueryRequest
	12, // 12: github.com.metaprov.modelaapi.services.sqlquery.v1.SqlQueryService.ResumeSqlQuery:input_type -> github.com.metaprov.modelaapi.services.sqlquery.v1.ResumeSqlQueryRequest
	1,  // 13: github.com.metaprov.modelaapi.services.sqlquery.v1.SqlQueryService.ListSqlQueries:output_type -> github.com.metaprov.modelaapi.services.sqlquery.v1.ListSqlQueriesResponse
	2,  // 14: github.com.metaprov.modelaapi.services.sqlquery.v1.SqlQueryService.CreateSqlQuery:output_type -> github.com.metaprov.modelaapi.services.sqlquery.v1.CreateSqlQueryResponse
	7,  // 15: github.com.metaprov.modelaapi.services.sqlquery.v1.SqlQueryService.GetSqlQuery:output_type -> github.com.metaprov.modelaapi.services.sqlquery.v1.GetSqlQueryResponse
	5,  // 16: github.com.metaprov.modelaapi.services.sqlquery.v1.SqlQueryService.UpdateSqlQuery:output_type -> github.com.metaprov.modelaapi.services.sqlquery.v1.UpdateSqlQueryResponse
	9,  // 17: github.com.metaprov.modelaapi.services.sqlquery.v1.SqlQueryService.DeleteSqlQuery:output_type -> github.com.metaprov.modelaapi.services.sqlquery.v1.DeleteSqlQueryResponse
	11, // 18: github.com.metaprov.modelaapi.services.sqlquery.v1.SqlQueryService.PauseSqlQuery:output_type -> github.com.metaprov.modelaapi.services.sqlquery.v1.PauseSqlQueryResponse
	13, // 19: github.com.metaprov.modelaapi.services.sqlquery.v1.SqlQueryService.ResumeSqlQuery:output_type -> github.com.metaprov.modelaapi.services.sqlquery.v1.ResumeSqlQueryResponse
	13, // [13:20] is the sub-list for method output_type
	6,  // [6:13] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_init() }
func file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_init() {
	if File_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSqlQueriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSqlQueriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSqlQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSqlQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSqlQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSqlQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSqlQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSqlQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSqlQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSqlQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseSqlQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseSqlQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeSqlQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeSqlQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunSqlQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunSqlQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_goTypes,
		DependencyIndexes: file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_depIdxs,
		MessageInfos:      file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_msgTypes,
	}.Build()
	File_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto = out.File
	file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_rawDesc = nil
	file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_goTypes = nil
	file_github_com_metaprov_modelaapi_services_sqlquery_v1_sqlquery_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SqlQueryServiceClient is the client API for SqlQueryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SqlQueryServiceClient interface {
	ListSqlQueries(ctx context.Context, in *ListSqlQueriesRequest, opts ...grpc.CallOption) (*ListSqlQueriesResponse, error)
	CreateSqlQuery(ctx context.Context, in *CreateSqlQueryRequest, opts ...grpc.CallOption) (*CreateSqlQueryResponse, error)
	GetSqlQuery(ctx context.Context, in *GetSqlQueryRequest, opts ...grpc.CallOption) (*GetSqlQueryResponse, error)
	UpdateSqlQuery(ctx context.Context, in *UpdateSqlQueryRequest, opts ...grpc.CallOption) (*UpdateSqlQueryResponse, error)
	DeleteSqlQuery(ctx context.Context, in *DeleteSqlQueryRequest, opts ...grpc.CallOption) (*DeleteSqlQueryResponse, error)
	PauseSqlQuery(ctx context.Context, in *PauseSqlQueryRequest, opts ...grpc.CallOption) (*PauseSqlQueryResponse, error)
	ResumeSqlQuery(ctx context.Context, in *ResumeSqlQueryRequest, opts ...grpc.CallOption) (*ResumeSqlQueryResponse, error)
}

type sqlQueryServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSqlQueryServiceClient(cc grpc.ClientConnInterface) SqlQueryServiceClient {
	return &sqlQueryServiceClient{cc}
}

func (c *sqlQueryServiceClient) ListSqlQueries(ctx context.Context, in *ListSqlQueriesRequest, opts ...grpc.CallOption) (*ListSqlQueriesResponse, error) {
	out := new(ListSqlQueriesResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.sqlquery.v1.SqlQueryService/ListSqlQueries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sqlQueryServiceClient) CreateSqlQuery(ctx context.Context, in *CreateSqlQueryRequest, opts ...grpc.CallOption) (*CreateSqlQueryResponse, error) {
	out := new(CreateSqlQueryResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.sqlquery.v1.SqlQueryService/CreateSqlQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sqlQueryServiceClient) GetSqlQuery(ctx context.Context, in *GetSqlQueryRequest, opts ...grpc.CallOption) (*GetSqlQueryResponse, error) {
	out := new(GetSqlQueryResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.sqlquery.v1.SqlQueryService/GetSqlQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sqlQueryServiceClient) UpdateSqlQuery(ctx context.Context, in *UpdateSqlQueryRequest, opts ...grpc.CallOption) (*UpdateSqlQueryResponse, error) {
	out := new(UpdateSqlQueryResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.sqlquery.v1.SqlQueryService/UpdateSqlQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sqlQueryServiceClient) DeleteSqlQuery(ctx context.Context, in *DeleteSqlQueryRequest, opts ...grpc.CallOption) (*DeleteSqlQueryResponse, error) {
	out := new(DeleteSqlQueryResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.sqlquery.v1.SqlQueryService/DeleteSqlQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sqlQueryServiceClient) PauseSqlQuery(ctx context.Context, in *PauseSqlQueryRequest, opts ...grpc.CallOption) (*PauseSqlQueryResponse, error) {
	out := new(PauseSqlQueryResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.sqlquery.v1.SqlQueryService/PauseSqlQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sqlQueryServiceClient) ResumeSqlQuery(ctx context.Context, in *ResumeSqlQueryRequest, opts ...grpc.CallOption) (*ResumeSqlQueryResponse, error) {
	out := new(ResumeSqlQueryResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.sqlquery.v1.SqlQueryService/ResumeSqlQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SqlQueryServiceServer is the server API for SqlQueryService service.
type SqlQueryServiceServer interface {
	ListSqlQueries(context.Context, *ListSqlQueriesRequest) (*ListSqlQueriesResponse, error)
	CreateSqlQuery(context.Context, *CreateSqlQueryRequest) (*CreateSqlQueryResponse, error)
	GetSqlQuery(context.Context, *GetSqlQueryRequest) (*GetSqlQueryResponse, error)
	UpdateSqlQuery(context.Context, *UpdateSqlQueryRequest) (*UpdateSqlQueryResponse, error)
	DeleteSqlQuery(context.Context, *DeleteSqlQueryRequest) (*DeleteSqlQueryResponse, error)
	PauseSqlQuery(context.Context, *PauseSqlQueryRequest) (*PauseSqlQueryResponse, error)
	ResumeSqlQuery(context.Context, *ResumeSqlQueryRequest) (*ResumeSqlQueryResponse, error)
}

// UnimplementedSqlQueryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSqlQueryServiceServer struct {
}

func (*UnimplementedSqlQueryServiceServer) ListSqlQueries(context.Context, *ListSqlQueriesRequest) (*ListSqlQueriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSqlQueries not implemented")
}
func (*UnimplementedSqlQueryServiceServer) CreateSqlQuery(context.Context, *CreateSqlQueryRequest) (*CreateSqlQueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSqlQuery not implemented")
}
func (*UnimplementedSqlQueryServiceServer) GetSqlQuery(context.Context, *GetSqlQueryRequest) (*GetSqlQueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSqlQuery not implemented")
}
func (*UnimplementedSqlQueryServiceServer) UpdateSqlQuery(context.Context, *UpdateSqlQueryRequest) (*UpdateSqlQueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSqlQuery not implemented")
}
func (*UnimplementedSqlQueryServiceServer) DeleteSqlQuery(context.Context, *DeleteSqlQueryRequest) (*DeleteSqlQueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSqlQuery not implemented")
}
func (*UnimplementedSqlQueryServiceServer) PauseSqlQuery(context.Context, *PauseSqlQueryRequest) (*PauseSqlQueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PauseSqlQuery not implemented")
}
func (*UnimplementedSqlQueryServiceServer) ResumeSqlQuery(context.Context, *ResumeSqlQueryRequest) (*ResumeSqlQueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResumeSqlQuery not implemented")
}

func RegisterSqlQueryServiceServer(s *grpc.Server, srv SqlQueryServiceServer) {
	s.RegisterService(&_SqlQueryService_serviceDesc, srv)
}

func _SqlQueryService_ListSqlQueries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSqlQueriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SqlQueryServiceServer).ListSqlQueries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.sqlquery.v1.SqlQueryService/ListSqlQueries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SqlQueryServiceServer).ListSqlQueries(ctx, req.(*ListSqlQueriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SqlQueryService_CreateSqlQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSqlQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SqlQueryServiceServer).CreateSqlQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.sqlquery.v1.SqlQueryService/CreateSqlQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SqlQueryServiceServer).CreateSqlQuery(ctx, req.(*CreateSqlQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SqlQueryService_GetSqlQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSqlQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SqlQueryServiceServer).GetSqlQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.sqlquery.v1.SqlQueryService/GetSqlQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SqlQueryServiceServer).GetSqlQuery(ctx, req.(*GetSqlQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SqlQueryService_UpdateSqlQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSqlQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SqlQueryServiceServer).UpdateSqlQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.sqlquery.v1.SqlQueryService/UpdateSqlQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SqlQueryServiceServer).UpdateSqlQuery(ctx, req.(*UpdateSqlQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SqlQueryService_DeleteSqlQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSqlQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SqlQueryServiceServer).DeleteSqlQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.sqlquery.v1.SqlQueryService/DeleteSqlQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SqlQueryServiceServer).DeleteSqlQuery(ctx, req.(*DeleteSqlQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SqlQueryService_PauseSqlQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PauseSqlQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SqlQueryServiceServer).PauseSqlQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.sqlquery.v1.SqlQueryService/PauseSqlQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SqlQueryServiceServer).PauseSqlQuery(ctx, req.(*PauseSqlQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SqlQueryService_ResumeSqlQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResumeSqlQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SqlQueryServiceServer).ResumeSqlQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.sqlquery.v1.SqlQueryService/ResumeSqlQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SqlQueryServiceServer).ResumeSqlQuery(ctx, req.(*ResumeSqlQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SqlQueryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.metaprov.modelaapi.services.sqlquery.v1.SqlQueryService",
	HandlerType: (*SqlQueryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListSqlQueries",
			Handler:    _SqlQueryService_ListSqlQueries_Handler,
		},
		{
			MethodName: "CreateSqlQuery",
			Handler:    _SqlQueryService_CreateSqlQuery_Handler,
		},
		{
			MethodName: "GetSqlQuery",
			Handler:    _SqlQueryService_GetSqlQuery_Handler,
		},
		{
			MethodName: "UpdateSqlQuery",
			Handler:    _SqlQueryService_UpdateSqlQuery_Handler,
		},
		{
			MethodName: "DeleteSqlQuery",
			Handler:    _SqlQueryService_DeleteSqlQuery_Handler,
		},
		{
			MethodName: "PauseSqlQuery",
			Handler:    _SqlQueryService_PauseSqlQuery_Handler,
		},
		{
			MethodName: "ResumeSqlQuery",
			Handler:    _SqlQueryService_ResumeSqlQuery_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/metaprov/modelaapi/services/sqlquery/v1/sqlquery.proto",
}
