syntax = "proto3";

option go_package = "github.com/metaprov/modelaapi/services/lab/v1";
package github.com.metaprov.modelaapi.services.lab.v1;

import "google/api/annotations.proto";
import "github.com/metaprov/modelaapi/pkg/apis/infra/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/services/common/v1/common.proto";

message ListLabsRequest {
    string namespace = 1;
    map<string,string> labels =3;
}

message ListLabsResponse {
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList items = 1;
}

message LabResponse {}

message CreateLabRequest {
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab item = 1;
}

message CreateLabResponse {

}

message UpdateLabRequest {
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab item = 1;
}

message UpdateLabResponse {

}

message GetLabRequest {
    string namespace = 1;
    string name      = 2;
}


message GetLabResponse {
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab item = 1;
    string yaml = 2;
}



message GetLabNamespacesRequest {
    string namespace = 1;
    string name      = 2;
}


message GetLabNamespacesResponse {
    repeated github.com.metaprov.modelaapi.services.common.v1.NamespaceInfo namespaces= 1;
}

message DeleteLabRequest {
    string namespace = 1;
    string name      = 2;
}

message DeleteLabResponse {

}

service LabService {
    rpc ListLabs(ListLabsRequest) returns (ListLabsResponse) {
        option (google.api.http).get = "/v1/labs/{namespace}";
    }

    rpc CreateLab(CreateLabRequest) returns (CreateLabResponse) {
        option (google.api.http) = {
			post: "/v1/labs"
			body: "*"
		};
    }

    rpc GetLab(GetLabRequest) returns (GetLabResponse) {
        option (google.api.http).get = "/v1/labs/{namespace}/{name}";
    }

    rpc UpdateLab(UpdateLabRequest) returns (UpdateLabResponse) {
        option (google.api.http) = {
			put: "/v1/labs/{item.metadata.namespace}/{item.metadata.name}"
			body: "*"
		};
    }

    rpc DeleteLab(DeleteLabRequest) returns (DeleteLabResponse) {
        option (google.api.http) = {
			delete: "/v1/labs/{namespace}/{name}"
		};
    }


}