// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: github.com/metaprov/modelaapi/services/lab/v1/lab.proto

package v1

import (
	context "context"
	v1alpha1 "github.com/metaprov/modelaapi/pkg/apis/infra/v1alpha1"
	v1 "github.com/metaprov/modelaapi/services/common/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListLabsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Labels    map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListLabsRequest) Reset() {
	*x = ListLabsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLabsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLabsRequest) ProtoMessage() {}

func (x *ListLabsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLabsRequest.ProtoReflect.Descriptor instead.
func (*ListLabsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_rawDescGZIP(), []int{0}
}

func (x *ListLabsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListLabsRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ListLabsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items *v1alpha1.LabList `protobuf:"bytes,1,opt,name=items,proto3" json:"items,omitempty"`
}

func (x *ListLabsResponse) Reset() {
	*x = ListLabsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLabsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLabsResponse) ProtoMessage() {}

func (x *ListLabsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLabsResponse.ProtoReflect.Descriptor instead.
func (*ListLabsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_rawDescGZIP(), []int{1}
}

func (x *ListLabsResponse) GetItems() *v1alpha1.LabList {
	if x != nil {
		return x.Items
	}
	return nil
}

type LabResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LabResponse) Reset() {
	*x = LabResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabResponse) ProtoMessage() {}

func (x *LabResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabResponse.ProtoReflect.Descriptor instead.
func (*LabResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_rawDescGZIP(), []int{2}
}

type CreateLabRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.Lab `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *CreateLabRequest) Reset() {
	*x = CreateLabRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLabRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLabRequest) ProtoMessage() {}

func (x *CreateLabRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLabRequest.ProtoReflect.Descriptor instead.
func (*CreateLabRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_rawDescGZIP(), []int{3}
}

func (x *CreateLabRequest) GetItem() *v1alpha1.Lab {
	if x != nil {
		return x.Item
	}
	return nil
}

type CreateLabResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateLabResponse) Reset() {
	*x = CreateLabResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLabResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLabResponse) ProtoMessage() {}

func (x *CreateLabResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLabResponse.ProtoReflect.Descriptor instead.
func (*CreateLabResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_rawDescGZIP(), []int{4}
}

type UpdateLabRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.Lab `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *UpdateLabRequest) Reset() {
	*x = UpdateLabRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLabRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLabRequest) ProtoMessage() {}

func (x *UpdateLabRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLabRequest.ProtoReflect.Descriptor instead.
func (*UpdateLabRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateLabRequest) GetItem() *v1alpha1.Lab {
	if x != nil {
		return x.Item
	}
	return nil
}

type UpdateLabResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateLabResponse) Reset() {
	*x = UpdateLabResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLabResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLabResponse) ProtoMessage() {}

func (x *UpdateLabResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLabResponse.ProtoReflect.Descriptor instead.
func (*UpdateLabResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_rawDescGZIP(), []int{6}
}

type GetLabRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetLabRequest) Reset() {
	*x = GetLabRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLabRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLabRequest) ProtoMessage() {}

func (x *GetLabRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLabRequest.ProtoReflect.Descriptor instead.
func (*GetLabRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_rawDescGZIP(), []int{7}
}

func (x *GetLabRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetLabRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetLabResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.Lab `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Yaml string        `protobuf:"bytes,2,opt,name=yaml,proto3" json:"yaml,omitempty"`
}

func (x *GetLabResponse) Reset() {
	*x = GetLabResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLabResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLabResponse) ProtoMessage() {}

func (x *GetLabResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLabResponse.ProtoReflect.Descriptor instead.
func (*GetLabResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_rawDescGZIP(), []int{8}
}

func (x *GetLabResponse) GetItem() *v1alpha1.Lab {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *GetLabResponse) GetYaml() string {
	if x != nil {
		return x.Yaml
	}
	return ""
}

type GetLabNamespacesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetLabNamespacesRequest) Reset() {
	*x = GetLabNamespacesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLabNamespacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLabNamespacesRequest) ProtoMessage() {}

func (x *GetLabNamespacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLabNamespacesRequest.ProtoReflect.Descriptor instead.
func (*GetLabNamespacesRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_rawDescGZIP(), []int{9}
}

func (x *GetLabNamespacesRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetLabNamespacesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetLabNamespacesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespaces []*v1.NamespaceInfo `protobuf:"bytes,1,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
}

func (x *GetLabNamespacesResponse) Reset() {
	*x = GetLabNamespacesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLabNamespacesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLabNamespacesResponse) ProtoMessage() {}

func (x *GetLabNamespacesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLabNamespacesResponse.ProtoReflect.Descriptor instead.
func (*GetLabNamespacesResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_rawDescGZIP(), []int{10}
}

func (x *GetLabNamespacesResponse) GetNamespaces() []*v1.NamespaceInfo {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

type DeleteLabRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteLabRequest) Reset() {
	*x = DeleteLabRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLabRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLabRequest) ProtoMessage() {}

func (x *DeleteLabRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLabRequest.ProtoReflect.Descriptor instead.
func (*DeleteLabRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteLabRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeleteLabRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteLabResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteLabResponse) Reset() {
	*x = DeleteLabResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLabResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLabResponse) ProtoMessage() {}

func (x *DeleteLabResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLabResponse.ProtoReflect.Descriptor instead.
func (*DeleteLabResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_rawDescGZIP(), []int{12}
}

var File_github_com_metaprov_modelaapi_services_lab_v1_lab_proto protoreflect.FileDescriptor

var file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_rawDesc = []byte{
	0x0a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x6c, 0x61, 0x62, 0x2f, 0x76, 0x31, 0x2f,
	0x6c, 0x61, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x6c, 0x61, 0x62, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3d, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xce, 0x01, 0x0a,
	0x0f, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x62,
	0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4a,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6c, 0x61, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x68, 0x0a,
	0x10, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x54, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x61, 0x62, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x0d, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x62, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4c, 0x61, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x4c, 0x61, 0x62, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x62, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x61, 0x62, 0x52, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4c,
	0x61, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x74, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x4c, 0x61, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a,
	0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x4c, 0x61, 0x62, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x61, 0x6d,
	0x6c, 0x22, 0x4b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x7b,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x0a, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x22, 0x44, 0x0a, 0x10, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xdf, 0x06, 0x0a, 0x0a, 0x4c, 0x61, 0x62, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xa1, 0x01, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x61,
	0x62, 0x73, 0x12, 0x3e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6c, 0x61, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6c, 0x61, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x61, 0x62, 0x73, 0x12, 0xa3, 0x01, 0x0a, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x12, 0x3f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x6c, 0x61, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x6c, 0x61, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c,
	0x61, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0d, 0x22, 0x08, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x61, 0x62, 0x73, 0x3a, 0x01, 0x2a, 0x12,
	0xaf, 0x01, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x12, 0x3c, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x6c, 0x61, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x6c, 0x61, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12,
	0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x7b, 0x6c,
	0x61, 0x62, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x6e, 0x61, 0x6d, 0x65,
	0x7d, 0x12, 0xaa, 0x01, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x12,
	0x3f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6c, 0x61, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x40, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6c, 0x61, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x1a, 0x0f, 0x2f, 0x76, 0x31, 0x2f,
	0x6c, 0x61, 0x62, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0xa7,
	0x01, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x12, 0x3f, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6c, 0x61, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70,
	0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6c, 0x61, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x2a, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x61, 0x62,
	0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2f, 0x6c, 0x61, 0x62, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_rawDescOnce sync.Once
	file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_rawDescData = file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_rawDesc
)

func file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_rawDescGZIP() []byte {
	file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_rawDescOnce.Do(func() {
		file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_rawDescData)
	})
	return file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_rawDescData
}

var file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_goTypes = []interface{}{
	(*ListLabsRequest)(nil),          // 0: github.com.metaprov.modelaapi.services.lab.v1.ListLabsRequest
	(*ListLabsResponse)(nil),         // 1: github.com.metaprov.modelaapi.services.lab.v1.ListLabsResponse
	(*LabResponse)(nil),              // 2: github.com.metaprov.modelaapi.services.lab.v1.LabResponse
	(*CreateLabRequest)(nil),         // 3: github.com.metaprov.modelaapi.services.lab.v1.CreateLabRequest
	(*CreateLabResponse)(nil),        // 4: github.com.metaprov.modelaapi.services.lab.v1.CreateLabResponse
	(*UpdateLabRequest)(nil),         // 5: github.com.metaprov.modelaapi.services.lab.v1.UpdateLabRequest
	(*UpdateLabResponse)(nil),        // 6: github.com.metaprov.modelaapi.services.lab.v1.UpdateLabResponse
	(*GetLabRequest)(nil),            // 7: github.com.metaprov.modelaapi.services.lab.v1.GetLabRequest
	(*GetLabResponse)(nil),           // 8: github.com.metaprov.modelaapi.services.lab.v1.GetLabResponse
	(*GetLabNamespacesRequest)(nil),  // 9: github.com.metaprov.modelaapi.services.lab.v1.GetLabNamespacesRequest
	(*GetLabNamespacesResponse)(nil), // 10: github.com.metaprov.modelaapi.services.lab.v1.GetLabNamespacesResponse
	(*DeleteLabRequest)(nil),         // 11: github.com.metaprov.modelaapi.services.lab.v1.DeleteLabRequest
	(*DeleteLabResponse)(nil),        // 12: github.com.metaprov.modelaapi.services.lab.v1.DeleteLabResponse
	nil,                              // 13: github.com.metaprov.modelaapi.services.lab.v1.ListLabsRequest.LabelsEntry
	(*v1alpha1.LabList)(nil),         // 14: github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList
	(*v1alpha1.Lab)(nil),             // 15: github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab
	(*v1.NamespaceInfo)(nil),         // 16: github.com.metaprov.modelaapi.services.common.v1.NamespaceInfo
}
var file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_depIdxs = []int32{
	13, // 0: github.com.metaprov.modelaapi.services.lab.v1.ListLabsRequest.labels:type_name -> github.com.metaprov.modelaapi.services.lab.v1.ListLabsRequest.LabelsEntry
	14, // 1: github.com.metaprov.modelaapi.services.lab.v1.ListLabsResponse.items:type_name -> github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList
	15, // 2: github.com.metaprov.modelaapi.services.lab.v1.CreateLabRequest.item:type_name -> github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab
	15, // 3: github.com.metaprov.modelaapi.services.lab.v1.UpdateLabRequest.item:type_name -> github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab
	15, // 4: github.com.metaprov.modelaapi.services.lab.v1.GetLabResponse.item:type_name -> github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab
	16, // 5: github.com.metaprov.modelaapi.services.lab.v1.GetLabNamespacesResponse.namespaces:type_name -> github.com.metaprov.modelaapi.services.common.v1.NamespaceInfo
	0,  // 6: github.com.metaprov.modelaapi.services.lab.v1.LabService.ListLabs:input_type -> github.com.metaprov.modelaapi.services.lab.v1.ListLabsRequest
	3,  // 7: github.com.metaprov.modelaapi.services.lab.v1.LabService.CreateLab:input_type -> github.com.metaprov.modelaapi.services.lab.v1.CreateLabRequest
	7,  // 8: github.com.metaprov.modelaapi.services.lab.v1.LabService.GetLab:input_type -> github.com.metaprov.modelaapi.services.lab.v1.GetLabRequest
	5,  // 9: github.com.metaprov.modelaapi.services.lab.v1.LabService.UpdateLab:input_type -> github.com.metaprov.modelaapi.services.lab.v1.UpdateLabRequest
	11, // 10: github.com.metaprov.modelaapi.services.lab.v1.LabService.DeleteLab:input_type -> github.com.metaprov.modelaapi.services.lab.v1.DeleteLabRequest
	1,  // 11: github.com.metaprov.modelaapi.services.lab.v1.LabService.ListLabs:output_type -> github.com.metaprov.modelaapi.services.lab.v1.ListLabsResponse
	4,  // 12: github.com.metaprov.modelaapi.services.lab.v1.LabService.CreateLab:output_type -> github.com.metaprov.modelaapi.services.lab.v1.CreateLabResponse
	8,  // 13: github.com.metaprov.modelaapi.services.lab.v1.LabService.GetLab:output_type -> github.com.metaprov.modelaapi.services.lab.v1.GetLabResponse
	6,  // 14: github.com.metaprov.modelaapi.services.lab.v1.LabService.UpdateLab:output_type -> github.com.metaprov.modelaapi.services.lab.v1.UpdateLabResponse
	12, // 15: github.com.metaprov.modelaapi.services.lab.v1.LabService.DeleteLab:output_type -> github.com.metaprov.modelaapi.services.lab.v1.DeleteLabResponse
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_init() }
func file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_init() {
	if File_github_com_metaprov_modelaapi_services_lab_v1_lab_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLabsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLabsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLabRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLabResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLabRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLabResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLabRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLabResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLabNamespacesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLabNamespacesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLabRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLabResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_goTypes,
		DependencyIndexes: file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_depIdxs,
		MessageInfos:      file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_msgTypes,
	}.Build()
	File_github_com_metaprov_modelaapi_services_lab_v1_lab_proto = out.File
	file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_rawDesc = nil
	file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_goTypes = nil
	file_github_com_metaprov_modelaapi_services_lab_v1_lab_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LabServiceClient is the client API for LabService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LabServiceClient interface {
	ListLabs(ctx context.Context, in *ListLabsRequest, opts ...grpc.CallOption) (*ListLabsResponse, error)
	CreateLab(ctx context.Context, in *CreateLabRequest, opts ...grpc.CallOption) (*CreateLabResponse, error)
	GetLab(ctx context.Context, in *GetLabRequest, opts ...grpc.CallOption) (*GetLabResponse, error)
	UpdateLab(ctx context.Context, in *UpdateLabRequest, opts ...grpc.CallOption) (*UpdateLabResponse, error)
	DeleteLab(ctx context.Context, in *DeleteLabRequest, opts ...grpc.CallOption) (*DeleteLabResponse, error)
}

type labServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewLabServiceClient(cc grpc.ClientConnInterface) LabServiceClient {
	return &labServiceClient{cc}
}

func (c *labServiceClient) ListLabs(ctx context.Context, in *ListLabsRequest, opts ...grpc.CallOption) (*ListLabsResponse, error) {
	out := new(ListLabsResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.lab.v1.LabService/ListLabs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *labServiceClient) CreateLab(ctx context.Context, in *CreateLabRequest, opts ...grpc.CallOption) (*CreateLabResponse, error) {
	out := new(CreateLabResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.lab.v1.LabService/CreateLab", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *labServiceClient) GetLab(ctx context.Context, in *GetLabRequest, opts ...grpc.CallOption) (*GetLabResponse, error) {
	out := new(GetLabResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.lab.v1.LabService/GetLab", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *labServiceClient) UpdateLab(ctx context.Context, in *UpdateLabRequest, opts ...grpc.CallOption) (*UpdateLabResponse, error) {
	out := new(UpdateLabResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.lab.v1.LabService/UpdateLab", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *labServiceClient) DeleteLab(ctx context.Context, in *DeleteLabRequest, opts ...grpc.CallOption) (*DeleteLabResponse, error) {
	out := new(DeleteLabResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.lab.v1.LabService/DeleteLab", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LabServiceServer is the server API for LabService service.
type LabServiceServer interface {
	ListLabs(context.Context, *ListLabsRequest) (*ListLabsResponse, error)
	CreateLab(context.Context, *CreateLabRequest) (*CreateLabResponse, error)
	GetLab(context.Context, *GetLabRequest) (*GetLabResponse, error)
	UpdateLab(context.Context, *UpdateLabRequest) (*UpdateLabResponse, error)
	DeleteLab(context.Context, *DeleteLabRequest) (*DeleteLabResponse, error)
}

// UnimplementedLabServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLabServiceServer struct {
}

func (*UnimplementedLabServiceServer) ListLabs(context.Context, *ListLabsRequest) (*ListLabsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListLabs not implemented")
}
func (*UnimplementedLabServiceServer) CreateLab(context.Context, *CreateLabRequest) (*CreateLabResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLab not implemented")
}
func (*UnimplementedLabServiceServer) GetLab(context.Context, *GetLabRequest) (*GetLabResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLab not implemented")
}
func (*UnimplementedLabServiceServer) UpdateLab(context.Context, *UpdateLabRequest) (*UpdateLabResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateLab not implemented")
}
func (*UnimplementedLabServiceServer) DeleteLab(context.Context, *DeleteLabRequest) (*DeleteLabResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteLab not implemented")
}

func RegisterLabServiceServer(s *grpc.Server, srv LabServiceServer) {
	s.RegisterService(&_LabService_serviceDesc, srv)
}

func _LabService_ListLabs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListLabsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LabServiceServer).ListLabs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.lab.v1.LabService/ListLabs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LabServiceServer).ListLabs(ctx, req.(*ListLabsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LabService_CreateLab_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLabRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LabServiceServer).CreateLab(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.lab.v1.LabService/CreateLab",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LabServiceServer).CreateLab(ctx, req.(*CreateLabRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LabService_GetLab_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLabRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LabServiceServer).GetLab(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.lab.v1.LabService/GetLab",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LabServiceServer).GetLab(ctx, req.(*GetLabRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LabService_UpdateLab_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateLabRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LabServiceServer).UpdateLab(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.lab.v1.LabService/UpdateLab",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LabServiceServer).UpdateLab(ctx, req.(*UpdateLabRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LabService_DeleteLab_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteLabRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LabServiceServer).DeleteLab(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.lab.v1.LabService/DeleteLab",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LabServiceServer).DeleteLab(ctx, req.(*DeleteLabRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LabService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.metaprov.modelaapi.services.lab.v1.LabService",
	HandlerType: (*LabServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListLabs",
			Handler:    _LabService_ListLabs_Handler,
		},
		{
			MethodName: "CreateLab",
			Handler:    _LabService_CreateLab_Handler,
		},
		{
			MethodName: "GetLab",
			Handler:    _LabService_GetLab_Handler,
		},
		{
			MethodName: "UpdateLab",
			Handler:    _LabService_UpdateLab_Handler,
		},
		{
			MethodName: "DeleteLab",
			Handler:    _LabService_DeleteLab_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/metaprov/modelaapi/services/lab/v1/lab.proto",
}
