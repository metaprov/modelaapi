// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: services/predictor/v1/predictor.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	v1alpha1 "github.com/metaprov/modeldapi/pkg/apis/inference/v1alpha1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ListPredictorsRequest struct {
	Namespace            string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Labels               map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListPredictorsRequest) Reset()         { *m = ListPredictorsRequest{} }
func (m *ListPredictorsRequest) String() string { return proto.CompactTextString(m) }
func (*ListPredictorsRequest) ProtoMessage()    {}
func (*ListPredictorsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f50090fabde5c10, []int{0}
}
func (m *ListPredictorsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPredictorsRequest.Unmarshal(m, b)
}
func (m *ListPredictorsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPredictorsRequest.Marshal(b, m, deterministic)
}
func (m *ListPredictorsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPredictorsRequest.Merge(m, src)
}
func (m *ListPredictorsRequest) XXX_Size() int {
	return xxx_messageInfo_ListPredictorsRequest.Size(m)
}
func (m *ListPredictorsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPredictorsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPredictorsRequest proto.InternalMessageInfo

func (m *ListPredictorsRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ListPredictorsRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type ListPredictorsResponse struct {
	Items                *v1alpha1.PredictorList `protobuf:"bytes,1,opt,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ListPredictorsResponse) Reset()         { *m = ListPredictorsResponse{} }
func (m *ListPredictorsResponse) String() string { return proto.CompactTextString(m) }
func (*ListPredictorsResponse) ProtoMessage()    {}
func (*ListPredictorsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f50090fabde5c10, []int{1}
}
func (m *ListPredictorsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPredictorsResponse.Unmarshal(m, b)
}
func (m *ListPredictorsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPredictorsResponse.Marshal(b, m, deterministic)
}
func (m *ListPredictorsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPredictorsResponse.Merge(m, src)
}
func (m *ListPredictorsResponse) XXX_Size() int {
	return xxx_messageInfo_ListPredictorsResponse.Size(m)
}
func (m *ListPredictorsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPredictorsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListPredictorsResponse proto.InternalMessageInfo

func (m *ListPredictorsResponse) GetItems() *v1alpha1.PredictorList {
	if m != nil {
		return m.Items
	}
	return nil
}

type CreatePredictorResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePredictorResponse) Reset()         { *m = CreatePredictorResponse{} }
func (m *CreatePredictorResponse) String() string { return proto.CompactTextString(m) }
func (*CreatePredictorResponse) ProtoMessage()    {}
func (*CreatePredictorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f50090fabde5c10, []int{2}
}
func (m *CreatePredictorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePredictorResponse.Unmarshal(m, b)
}
func (m *CreatePredictorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePredictorResponse.Marshal(b, m, deterministic)
}
func (m *CreatePredictorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePredictorResponse.Merge(m, src)
}
func (m *CreatePredictorResponse) XXX_Size() int {
	return xxx_messageInfo_CreatePredictorResponse.Size(m)
}
func (m *CreatePredictorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePredictorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePredictorResponse proto.InternalMessageInfo

type CreatePredictorRequest struct {
	Namespace            string                  `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Labels               map[string]string       `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Spec                 *v1alpha1.PredictorSpec `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CreatePredictorRequest) Reset()         { *m = CreatePredictorRequest{} }
func (m *CreatePredictorRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePredictorRequest) ProtoMessage()    {}
func (*CreatePredictorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f50090fabde5c10, []int{3}
}
func (m *CreatePredictorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePredictorRequest.Unmarshal(m, b)
}
func (m *CreatePredictorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePredictorRequest.Marshal(b, m, deterministic)
}
func (m *CreatePredictorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePredictorRequest.Merge(m, src)
}
func (m *CreatePredictorRequest) XXX_Size() int {
	return xxx_messageInfo_CreatePredictorRequest.Size(m)
}
func (m *CreatePredictorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePredictorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePredictorRequest proto.InternalMessageInfo

func (m *CreatePredictorRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *CreatePredictorRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreatePredictorRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreatePredictorRequest) GetSpec() *v1alpha1.PredictorSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type UpdatePredictorRequest struct {
	Namespace            string                  `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Labels               map[string]string       `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Spec                 *v1alpha1.PredictorSpec `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *UpdatePredictorRequest) Reset()         { *m = UpdatePredictorRequest{} }
func (m *UpdatePredictorRequest) String() string { return proto.CompactTextString(m) }
func (*UpdatePredictorRequest) ProtoMessage()    {}
func (*UpdatePredictorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f50090fabde5c10, []int{4}
}
func (m *UpdatePredictorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePredictorRequest.Unmarshal(m, b)
}
func (m *UpdatePredictorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePredictorRequest.Marshal(b, m, deterministic)
}
func (m *UpdatePredictorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePredictorRequest.Merge(m, src)
}
func (m *UpdatePredictorRequest) XXX_Size() int {
	return xxx_messageInfo_UpdatePredictorRequest.Size(m)
}
func (m *UpdatePredictorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePredictorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePredictorRequest proto.InternalMessageInfo

func (m *UpdatePredictorRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *UpdatePredictorRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdatePredictorRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *UpdatePredictorRequest) GetSpec() *v1alpha1.PredictorSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type UpdatePredictorResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePredictorResponse) Reset()         { *m = UpdatePredictorResponse{} }
func (m *UpdatePredictorResponse) String() string { return proto.CompactTextString(m) }
func (*UpdatePredictorResponse) ProtoMessage()    {}
func (*UpdatePredictorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f50090fabde5c10, []int{5}
}
func (m *UpdatePredictorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePredictorResponse.Unmarshal(m, b)
}
func (m *UpdatePredictorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePredictorResponse.Marshal(b, m, deterministic)
}
func (m *UpdatePredictorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePredictorResponse.Merge(m, src)
}
func (m *UpdatePredictorResponse) XXX_Size() int {
	return xxx_messageInfo_UpdatePredictorResponse.Size(m)
}
func (m *UpdatePredictorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePredictorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePredictorResponse proto.InternalMessageInfo

type GetPredictorRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPredictorRequest) Reset()         { *m = GetPredictorRequest{} }
func (m *GetPredictorRequest) String() string { return proto.CompactTextString(m) }
func (*GetPredictorRequest) ProtoMessage()    {}
func (*GetPredictorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f50090fabde5c10, []int{6}
}
func (m *GetPredictorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPredictorRequest.Unmarshal(m, b)
}
func (m *GetPredictorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPredictorRequest.Marshal(b, m, deterministic)
}
func (m *GetPredictorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPredictorRequest.Merge(m, src)
}
func (m *GetPredictorRequest) XXX_Size() int {
	return xxx_messageInfo_GetPredictorRequest.Size(m)
}
func (m *GetPredictorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPredictorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPredictorRequest proto.InternalMessageInfo

func (m *GetPredictorRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *GetPredictorRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetPredictorResponse struct {
	Item                 *v1alpha1.Predictor `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Yaml                 string              `protobuf:"bytes,2,opt,name=yaml,proto3" json:"yaml,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetPredictorResponse) Reset()         { *m = GetPredictorResponse{} }
func (m *GetPredictorResponse) String() string { return proto.CompactTextString(m) }
func (*GetPredictorResponse) ProtoMessage()    {}
func (*GetPredictorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f50090fabde5c10, []int{7}
}
func (m *GetPredictorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPredictorResponse.Unmarshal(m, b)
}
func (m *GetPredictorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPredictorResponse.Marshal(b, m, deterministic)
}
func (m *GetPredictorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPredictorResponse.Merge(m, src)
}
func (m *GetPredictorResponse) XXX_Size() int {
	return xxx_messageInfo_GetPredictorResponse.Size(m)
}
func (m *GetPredictorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPredictorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPredictorResponse proto.InternalMessageInfo

func (m *GetPredictorResponse) GetItem() *v1alpha1.Predictor {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *GetPredictorResponse) GetYaml() string {
	if m != nil {
		return m.Yaml
	}
	return ""
}

type DeletePredictorRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePredictorRequest) Reset()         { *m = DeletePredictorRequest{} }
func (m *DeletePredictorRequest) String() string { return proto.CompactTextString(m) }
func (*DeletePredictorRequest) ProtoMessage()    {}
func (*DeletePredictorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f50090fabde5c10, []int{8}
}
func (m *DeletePredictorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePredictorRequest.Unmarshal(m, b)
}
func (m *DeletePredictorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePredictorRequest.Marshal(b, m, deterministic)
}
func (m *DeletePredictorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePredictorRequest.Merge(m, src)
}
func (m *DeletePredictorRequest) XXX_Size() int {
	return xxx_messageInfo_DeletePredictorRequest.Size(m)
}
func (m *DeletePredictorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePredictorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePredictorRequest proto.InternalMessageInfo

func (m *DeletePredictorRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *DeletePredictorRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DeletePredictorResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePredictorResponse) Reset()         { *m = DeletePredictorResponse{} }
func (m *DeletePredictorResponse) String() string { return proto.CompactTextString(m) }
func (*DeletePredictorResponse) ProtoMessage()    {}
func (*DeletePredictorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f50090fabde5c10, []int{9}
}
func (m *DeletePredictorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePredictorResponse.Unmarshal(m, b)
}
func (m *DeletePredictorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePredictorResponse.Marshal(b, m, deterministic)
}
func (m *DeletePredictorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePredictorResponse.Merge(m, src)
}
func (m *DeletePredictorResponse) XXX_Size() int {
	return xxx_messageInfo_DeletePredictorResponse.Size(m)
}
func (m *DeletePredictorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePredictorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePredictorResponse proto.InternalMessageInfo

type PredictOneRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Fields               string   `protobuf:"bytes,3,opt,name=fields,proto3" json:"fields,omitempty"`
	Values               string   `protobuf:"bytes,4,opt,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PredictOneRequest) Reset()         { *m = PredictOneRequest{} }
func (m *PredictOneRequest) String() string { return proto.CompactTextString(m) }
func (*PredictOneRequest) ProtoMessage()    {}
func (*PredictOneRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f50090fabde5c10, []int{10}
}
func (m *PredictOneRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PredictOneRequest.Unmarshal(m, b)
}
func (m *PredictOneRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PredictOneRequest.Marshal(b, m, deterministic)
}
func (m *PredictOneRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PredictOneRequest.Merge(m, src)
}
func (m *PredictOneRequest) XXX_Size() int {
	return xxx_messageInfo_PredictOneRequest.Size(m)
}
func (m *PredictOneRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PredictOneRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PredictOneRequest proto.InternalMessageInfo

func (m *PredictOneRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *PredictOneRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PredictOneRequest) GetFields() string {
	if m != nil {
		return m.Fields
	}
	return ""
}

func (m *PredictOneRequest) GetValues() string {
	if m != nil {
		return m.Values
	}
	return ""
}

type PredictOneResponse struct {
	Namespace            string             `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Label                string             `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	Score                float32            `protobuf:"fixed32,4,opt,name=score,proto3" json:"score,omitempty"`
	Proba                map[string]float32 `protobuf:"bytes,5,rep,name=proba,proto3" json:"proba,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PredictOneResponse) Reset()         { *m = PredictOneResponse{} }
func (m *PredictOneResponse) String() string { return proto.CompactTextString(m) }
func (*PredictOneResponse) ProtoMessage()    {}
func (*PredictOneResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f50090fabde5c10, []int{11}
}
func (m *PredictOneResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PredictOneResponse.Unmarshal(m, b)
}
func (m *PredictOneResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PredictOneResponse.Marshal(b, m, deterministic)
}
func (m *PredictOneResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PredictOneResponse.Merge(m, src)
}
func (m *PredictOneResponse) XXX_Size() int {
	return xxx_messageInfo_PredictOneResponse.Size(m)
}
func (m *PredictOneResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PredictOneResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PredictOneResponse proto.InternalMessageInfo

func (m *PredictOneResponse) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *PredictOneResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PredictOneResponse) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *PredictOneResponse) GetScore() float32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *PredictOneResponse) GetProba() map[string]float32 {
	if m != nil {
		return m.Proba
	}
	return nil
}

func init() {
	proto.RegisterType((*ListPredictorsRequest)(nil), "github.com.metaprov.modeld.services.predictor.v1.ListPredictorsRequest")
	proto.RegisterMapType((map[string]string)(nil), "github.com.metaprov.modeld.services.predictor.v1.ListPredictorsRequest.LabelsEntry")
	proto.RegisterType((*ListPredictorsResponse)(nil), "github.com.metaprov.modeld.services.predictor.v1.ListPredictorsResponse")
	proto.RegisterType((*CreatePredictorResponse)(nil), "github.com.metaprov.modeld.services.predictor.v1.CreatePredictorResponse")
	proto.RegisterType((*CreatePredictorRequest)(nil), "github.com.metaprov.modeld.services.predictor.v1.CreatePredictorRequest")
	proto.RegisterMapType((map[string]string)(nil), "github.com.metaprov.modeld.services.predictor.v1.CreatePredictorRequest.LabelsEntry")
	proto.RegisterType((*UpdatePredictorRequest)(nil), "github.com.metaprov.modeld.services.predictor.v1.UpdatePredictorRequest")
	proto.RegisterMapType((map[string]string)(nil), "github.com.metaprov.modeld.services.predictor.v1.UpdatePredictorRequest.LabelsEntry")
	proto.RegisterType((*UpdatePredictorResponse)(nil), "github.com.metaprov.modeld.services.predictor.v1.UpdatePredictorResponse")
	proto.RegisterType((*GetPredictorRequest)(nil), "github.com.metaprov.modeld.services.predictor.v1.GetPredictorRequest")
	proto.RegisterType((*GetPredictorResponse)(nil), "github.com.metaprov.modeld.services.predictor.v1.GetPredictorResponse")
	proto.RegisterType((*DeletePredictorRequest)(nil), "github.com.metaprov.modeld.services.predictor.v1.DeletePredictorRequest")
	proto.RegisterType((*DeletePredictorResponse)(nil), "github.com.metaprov.modeld.services.predictor.v1.DeletePredictorResponse")
	proto.RegisterType((*PredictOneRequest)(nil), "github.com.metaprov.modeld.services.predictor.v1.PredictOneRequest")
	proto.RegisterType((*PredictOneResponse)(nil), "github.com.metaprov.modeld.services.predictor.v1.PredictOneResponse")
	proto.RegisterMapType((map[string]float32)(nil), "github.com.metaprov.modeld.services.predictor.v1.PredictOneResponse.ProbaEntry")
}

func init() {
	proto.RegisterFile("services/predictor/v1/predictor.proto", fileDescriptor_6f50090fabde5c10)
}

var fileDescriptor_6f50090fabde5c10 = []byte{
	// 777 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x57, 0x4f, 0x4f, 0x13, 0x41,
	0x14, 0xcf, 0x2e, 0x2d, 0x49, 0x1f, 0x06, 0x70, 0x84, 0x52, 0x56, 0x4c, 0x70, 0x13, 0x93, 0xc6,
	0xc3, 0xac, 0x85, 0x90, 0x20, 0xde, 0x04, 0x04, 0x0c, 0x09, 0xa4, 0x68, 0x62, 0x8c, 0x31, 0x99,
	0x6e, 0x1f, 0x65, 0xd3, 0xed, 0xee, 0xba, 0xb3, 0x6d, 0x24, 0xc6, 0x8b, 0xf1, 0x1b, 0xf0, 0x71,
	0xf4, 0xe2, 0xc1, 0x83, 0x07, 0x0f, 0xc6, 0xb3, 0x27, 0xfd, 0x20, 0x66, 0x66, 0x67, 0xfb, 0x77,
	0x41, 0xfb, 0xe7, 0xa0, 0xb7, 0x79, 0xaf, 0x99, 0xdf, 0x7b, 0xbf, 0xdf, 0xfb, 0x33, 0x5d, 0xb8,
	0xc3, 0x31, 0x6c, 0x39, 0x36, 0x72, 0x2b, 0x08, 0xb1, 0xea, 0xd8, 0x91, 0x1f, 0x5a, 0xad, 0x52,
	0xc7, 0xa0, 0x41, 0xe8, 0x47, 0x3e, 0xb9, 0x57, 0x73, 0xa2, 0xb3, 0x66, 0x85, 0xda, 0x7e, 0x83,
	0x36, 0x30, 0x62, 0x41, 0xe8, 0xb7, 0x68, 0xc3, 0xaf, 0xa2, 0x5b, 0xa5, 0x09, 0x02, 0xed, 0x5c,
	0x6a, 0x95, 0x8c, 0x95, 0x9a, 0xef, 0xd7, 0x5c, 0xb4, 0x58, 0xe0, 0x58, 0xcc, 0xf3, 0xfc, 0x88,
	0x45, 0x8e, 0xef, 0xf1, 0x18, 0xcf, 0x38, 0xe8, 0xe0, 0x59, 0x09, 0x9e, 0x15, 0xe3, 0x89, 0x0b,
	0x41, 0xbd, 0x26, 0x2e, 0x72, 0xcb, 0xf1, 0x4e, 0x31, 0x44, 0xcf, 0x46, 0xab, 0x55, 0x62, 0x6e,
	0x70, 0xc6, 0x4a, 0x56, 0x0d, 0x3d, 0x0c, 0x59, 0x84, 0xd5, 0x18, 0xca, 0xfc, 0xa1, 0xc1, 0xe2,
	0xa1, 0xc3, 0xa3, 0xe3, 0x24, 0x3a, 0x2f, 0xe3, 0xab, 0x26, 0xf2, 0x88, 0xac, 0x40, 0xce, 0x63,
	0x0d, 0xe4, 0x01, 0xb3, 0xb1, 0xa0, 0xad, 0x6a, 0xc5, 0x5c, 0xb9, 0xe3, 0x20, 0x75, 0x98, 0x76,
	0x59, 0x05, 0x5d, 0x5e, 0xd0, 0x57, 0xa7, 0x8a, 0x33, 0x6b, 0x27, 0x74, 0x58, 0x8e, 0x34, 0x35,
	0x2c, 0x3d, 0x94, 0xa8, 0xbb, 0x5e, 0x14, 0x9e, 0x97, 0x55, 0x08, 0xe3, 0x3e, 0xcc, 0x74, 0xb9,
	0xc9, 0x3c, 0x4c, 0xd5, 0xf1, 0x5c, 0xe5, 0x24, 0x8e, 0x64, 0x01, 0xb2, 0x2d, 0xe6, 0x36, 0xb1,
	0xa0, 0x4b, 0x5f, 0x6c, 0x6c, 0xe9, 0x9b, 0x9a, 0xf9, 0x1a, 0xf2, 0xfd, 0x71, 0x78, 0xe0, 0x7b,
	0x1c, 0xc9, 0x4b, 0xc8, 0x3a, 0x11, 0x36, 0xb8, 0xc4, 0x99, 0x59, 0xdb, 0xbf, 0x82, 0x00, 0x0b,
	0x1c, 0x1a, 0xd4, 0x6b, 0x54, 0x88, 0x4a, 0xdb, 0xa2, 0xd2, 0x44, 0x54, 0xda, 0x46, 0x17, 0xa1,
	0xca, 0x31, 0xac, 0xb9, 0x0c, 0x4b, 0xdb, 0x21, 0xb2, 0x08, 0xdb, 0xbf, 0x26, 0xa1, 0xcd, 0x6f,
	0x3a, 0xe4, 0x07, 0x7e, 0xfb, 0x1b, 0xd5, 0x09, 0x64, 0x84, 0xa1, 0x68, 0xca, 0x33, 0x71, 0xdb,
	0x95, 0x98, 0x92, 0x95, 0x78, 0x32, 0x7c, 0x25, 0xd2, 0x73, 0x49, 0x2b, 0x05, 0x79, 0x01, 0x19,
	0x1e, 0xa0, 0x5d, 0xc8, 0x4e, 0x4e, 0xb4, 0x93, 0x00, 0xed, 0xb2, 0x44, 0x1d, 0xa7, 0xd0, 0x42,
	0xd3, 0xa7, 0x41, 0xf5, 0x9f, 0xd1, 0x34, 0x3d, 0x97, 0xff, 0x4b, 0xd3, 0x65, 0x58, 0x1a, 0xa0,
	0xa1, 0x5a, 0x78, 0x0f, 0x6e, 0xec, 0x61, 0x34, 0xbe, 0xd4, 0xe6, 0x7b, 0x0d, 0x16, 0x7a, 0x91,
	0xd4, 0x7c, 0x3e, 0x83, 0x8c, 0x18, 0x24, 0x35, 0x9e, 0x3b, 0x93, 0x50, 0xa5, 0x2c, 0x11, 0x45,
	0x1a, 0xe7, 0xac, 0xe1, 0x26, 0x69, 0x88, 0xb3, 0xf9, 0x18, 0xf2, 0x3b, 0xe8, 0xe2, 0x24, 0xba,
	0x47, 0xc8, 0x36, 0x80, 0xa5, 0x64, 0x6b, 0xc2, 0x75, 0xe5, 0x3c, 0xf2, 0x70, 0xf4, 0xfe, 0xcc,
	0xc3, 0xf4, 0xa9, 0x83, 0x6e, 0x55, 0xf4, 0xa7, 0xf0, 0x2a, 0x4b, 0xf8, 0x65, 0xf5, 0x78, 0x21,
	0x13, 0xfb, 0x63, 0xcb, 0xbc, 0xd0, 0x81, 0x74, 0xc7, 0x55, 0x12, 0x0f, 0x1f, 0x78, 0x01, 0xb2,
	0xb2, 0x69, 0x55, 0xdc, 0xd8, 0x10, 0x5e, 0x6e, 0xfb, 0x21, 0xca, 0xa8, 0x7a, 0x39, 0x36, 0x08,
	0x42, 0x36, 0x08, 0xfd, 0x0a, 0x2b, 0x64, 0xe5, 0x0c, 0x1d, 0x0d, 0x3f, 0x43, 0x83, 0x29, 0xd3,
	0x63, 0x81, 0x18, 0x8f, 0x4f, 0x8c, 0x6e, 0x6c, 0x02, 0x74, 0x9c, 0x7f, 0x6a, 0x6f, 0xbd, 0xab,
	0xbd, 0xd7, 0xbe, 0xe6, 0x60, 0xbe, 0x33, 0x31, 0x71, 0x06, 0xe4, 0x83, 0x06, 0xb3, 0xbd, 0x2f,
	0x06, 0xd9, 0x9b, 0xd0, 0xdb, 0x66, 0xec, 0x8f, 0x0f, 0xa4, 0xfa, 0x28, 0xff, 0xee, 0xfb, 0xaf,
	0x0b, 0x7d, 0x9e, 0xcc, 0xf6, 0xfc, 0xdd, 0xe0, 0xe4, 0x8b, 0x06, 0x73, 0x7d, 0xdb, 0x9c, 0xec,
	0x4f, 0xea, 0x41, 0x30, 0x0e, 0x26, 0x80, 0xa4, 0x08, 0xdc, 0x96, 0x04, 0x6e, 0x9a, 0x7d, 0x04,
	0xb6, 0x72, 0xed, 0x33, 0xf9, 0xa8, 0xc1, 0xb5, 0xee, 0xcd, 0x40, 0x76, 0x87, 0x0f, 0x9f, 0xb2,
	0xa3, 0x8c, 0x47, 0xe3, 0xc2, 0x28, 0x0a, 0xb7, 0x24, 0x85, 0x25, 0xb2, 0xd8, 0x4b, 0xc1, 0x7a,
	0x23, 0x26, 0xe5, 0x2d, 0xf9, 0xa9, 0xc1, 0x5c, 0xdf, 0xf6, 0x1c, 0xa5, 0x14, 0xe9, 0xef, 0xc8,
	0x28, 0xa5, 0xb8, 0x6c, 0x95, 0x3f, 0x90, 0x3c, 0x36, 0x8c, 0x62, 0x3f, 0x8f, 0xce, 0x6d, 0x11,
	0xa0, 0xca, 0x22, 0x46, 0x25, 0xb5, 0xee, 0x22, 0x7d, 0xd6, 0x60, 0xae, 0x6f, 0xd9, 0x8d, 0xc2,
	0x32, 0x7d, 0xf7, 0x8e, 0xc2, 0xf2, 0xb2, 0xcd, 0xab, 0xaa, 0x75, 0xf7, 0x92, 0x6a, 0x7d, 0xd2,
	0xc4, 0x1a, 0x49, 0xd6, 0x0d, 0xd9, 0x1e, 0x6f, 0x59, 0xc5, 0xd9, 0xef, 0x4c, 0x62, 0xe3, 0x99,
	0x45, 0x99, 0xb8, 0x69, 0xae, 0xa6, 0x26, 0xbe, 0x95, 0x78, 0x3c, 0x7c, 0xb8, 0xf1, 0x7c, 0xfd,
	0xea, 0x0f, 0x83, 0xd4, 0xaf, 0x95, 0xca, 0xb4, 0xfc, 0x12, 0x58, 0xff, 0x1d, 0x00, 0x00, 0xff,
	0xff, 0xbe, 0x3c, 0xa2, 0x8a, 0xcd, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PredictorServiceClient is the client API for PredictorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PredictorServiceClient interface {
	ListPredictors(ctx context.Context, in *ListPredictorsRequest, opts ...grpc.CallOption) (*ListPredictorsResponse, error)
	CreatePredictor(ctx context.Context, in *CreatePredictorRequest, opts ...grpc.CallOption) (*CreatePredictorResponse, error)
	GetPredictor(ctx context.Context, in *GetPredictorRequest, opts ...grpc.CallOption) (*GetPredictorResponse, error)
	UpdatePredictor(ctx context.Context, in *UpdatePredictorRequest, opts ...grpc.CallOption) (*UpdatePredictorResponse, error)
	DeletePredictor(ctx context.Context, in *DeletePredictorRequest, opts ...grpc.CallOption) (*DeletePredictorResponse, error)
	PredictOne(ctx context.Context, in *PredictOneRequest, opts ...grpc.CallOption) (*PredictOneResponse, error)
}

type predictorServiceClient struct {
	cc *grpc.ClientConn
}

func NewPredictorServiceClient(cc *grpc.ClientConn) PredictorServiceClient {
	return &predictorServiceClient{cc}
}

func (c *predictorServiceClient) ListPredictors(ctx context.Context, in *ListPredictorsRequest, opts ...grpc.CallOption) (*ListPredictorsResponse, error) {
	out := new(ListPredictorsResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.predictor.v1.PredictorService/ListPredictors", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *predictorServiceClient) CreatePredictor(ctx context.Context, in *CreatePredictorRequest, opts ...grpc.CallOption) (*CreatePredictorResponse, error) {
	out := new(CreatePredictorResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.predictor.v1.PredictorService/CreatePredictor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *predictorServiceClient) GetPredictor(ctx context.Context, in *GetPredictorRequest, opts ...grpc.CallOption) (*GetPredictorResponse, error) {
	out := new(GetPredictorResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.predictor.v1.PredictorService/GetPredictor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *predictorServiceClient) UpdatePredictor(ctx context.Context, in *UpdatePredictorRequest, opts ...grpc.CallOption) (*UpdatePredictorResponse, error) {
	out := new(UpdatePredictorResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.predictor.v1.PredictorService/UpdatePredictor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *predictorServiceClient) DeletePredictor(ctx context.Context, in *DeletePredictorRequest, opts ...grpc.CallOption) (*DeletePredictorResponse, error) {
	out := new(DeletePredictorResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.predictor.v1.PredictorService/DeletePredictor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *predictorServiceClient) PredictOne(ctx context.Context, in *PredictOneRequest, opts ...grpc.CallOption) (*PredictOneResponse, error) {
	out := new(PredictOneResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.predictor.v1.PredictorService/PredictOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PredictorServiceServer is the server API for PredictorService service.
type PredictorServiceServer interface {
	ListPredictors(context.Context, *ListPredictorsRequest) (*ListPredictorsResponse, error)
	CreatePredictor(context.Context, *CreatePredictorRequest) (*CreatePredictorResponse, error)
	GetPredictor(context.Context, *GetPredictorRequest) (*GetPredictorResponse, error)
	UpdatePredictor(context.Context, *UpdatePredictorRequest) (*UpdatePredictorResponse, error)
	DeletePredictor(context.Context, *DeletePredictorRequest) (*DeletePredictorResponse, error)
	PredictOne(context.Context, *PredictOneRequest) (*PredictOneResponse, error)
}

// UnimplementedPredictorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPredictorServiceServer struct {
}

func (*UnimplementedPredictorServiceServer) ListPredictors(ctx context.Context, req *ListPredictorsRequest) (*ListPredictorsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPredictors not implemented")
}
func (*UnimplementedPredictorServiceServer) CreatePredictor(ctx context.Context, req *CreatePredictorRequest) (*CreatePredictorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePredictor not implemented")
}
func (*UnimplementedPredictorServiceServer) GetPredictor(ctx context.Context, req *GetPredictorRequest) (*GetPredictorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPredictor not implemented")
}
func (*UnimplementedPredictorServiceServer) UpdatePredictor(ctx context.Context, req *UpdatePredictorRequest) (*UpdatePredictorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePredictor not implemented")
}
func (*UnimplementedPredictorServiceServer) DeletePredictor(ctx context.Context, req *DeletePredictorRequest) (*DeletePredictorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePredictor not implemented")
}
func (*UnimplementedPredictorServiceServer) PredictOne(ctx context.Context, req *PredictOneRequest) (*PredictOneResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PredictOne not implemented")
}

func RegisterPredictorServiceServer(s *grpc.Server, srv PredictorServiceServer) {
	s.RegisterService(&_PredictorService_serviceDesc, srv)
}

func _PredictorService_ListPredictors_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPredictorsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PredictorServiceServer).ListPredictors(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.predictor.v1.PredictorService/ListPredictors",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PredictorServiceServer).ListPredictors(ctx, req.(*ListPredictorsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PredictorService_CreatePredictor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePredictorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PredictorServiceServer).CreatePredictor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.predictor.v1.PredictorService/CreatePredictor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PredictorServiceServer).CreatePredictor(ctx, req.(*CreatePredictorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PredictorService_GetPredictor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPredictorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PredictorServiceServer).GetPredictor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.predictor.v1.PredictorService/GetPredictor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PredictorServiceServer).GetPredictor(ctx, req.(*GetPredictorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PredictorService_UpdatePredictor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePredictorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PredictorServiceServer).UpdatePredictor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.predictor.v1.PredictorService/UpdatePredictor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PredictorServiceServer).UpdatePredictor(ctx, req.(*UpdatePredictorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PredictorService_DeletePredictor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePredictorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PredictorServiceServer).DeletePredictor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.predictor.v1.PredictorService/DeletePredictor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PredictorServiceServer).DeletePredictor(ctx, req.(*DeletePredictorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PredictorService_PredictOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PredictOneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PredictorServiceServer).PredictOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.predictor.v1.PredictorService/PredictOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PredictorServiceServer).PredictOne(ctx, req.(*PredictOneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PredictorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.metaprov.modeld.services.predictor.v1.PredictorService",
	HandlerType: (*PredictorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListPredictors",
			Handler:    _PredictorService_ListPredictors_Handler,
		},
		{
			MethodName: "CreatePredictor",
			Handler:    _PredictorService_CreatePredictor_Handler,
		},
		{
			MethodName: "GetPredictor",
			Handler:    _PredictorService_GetPredictor_Handler,
		},
		{
			MethodName: "UpdatePredictor",
			Handler:    _PredictorService_UpdatePredictor_Handler,
		},
		{
			MethodName: "DeletePredictor",
			Handler:    _PredictorService_DeletePredictor_Handler,
		},
		{
			MethodName: "PredictOne",
			Handler:    _PredictorService_PredictOne_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/predictor/v1/predictor.proto",
}
