// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.7
// source: github.com/metaprov/modelaapi/services/virtualvolume/v1/virtualvolume.proto

package v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	v1alpha1 "github.com/metaprov/modelaapi/pkg/apis/infra/v1alpha1"
	_ "github.com/metaprov/modelaapi/services/common/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ListVirtualVolumesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Labels    map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListVirtualVolumesRequest) Reset() {
	*x = ListVirtualVolumesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVirtualVolumesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtualVolumesRequest) ProtoMessage() {}

func (x *ListVirtualVolumesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVirtualVolumesRequest.ProtoReflect.Descriptor instead.
func (*ListVirtualVolumesRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_rawDescGZIP(), []int{0}
}

func (x *ListVirtualVolumesRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListVirtualVolumesRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ListVirtualVolumesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items *v1alpha1.VirtualVolumeList `protobuf:"bytes,1,opt,name=items,proto3" json:"items,omitempty"`
}

func (x *ListVirtualVolumesResponse) Reset() {
	*x = ListVirtualVolumesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVirtualVolumesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtualVolumesResponse) ProtoMessage() {}

func (x *ListVirtualVolumesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVirtualVolumesResponse.ProtoReflect.Descriptor instead.
func (*ListVirtualVolumesResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_rawDescGZIP(), []int{1}
}

func (x *ListVirtualVolumesResponse) GetItems() *v1alpha1.VirtualVolumeList {
	if x != nil {
		return x.Items
	}
	return nil
}

type VirtualVolumeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VirtualVolumeResponse) Reset() {
	*x = VirtualVolumeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualVolumeResponse) ProtoMessage() {}

func (x *VirtualVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualVolumeResponse.ProtoReflect.Descriptor instead.
func (*VirtualVolumeResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_rawDescGZIP(), []int{2}
}

type CreateVirtualVolumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.VirtualVolume `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *CreateVirtualVolumeRequest) Reset() {
	*x = CreateVirtualVolumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVirtualVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVirtualVolumeRequest) ProtoMessage() {}

func (x *CreateVirtualVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVirtualVolumeRequest.ProtoReflect.Descriptor instead.
func (*CreateVirtualVolumeRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_rawDescGZIP(), []int{3}
}

func (x *CreateVirtualVolumeRequest) GetItem() *v1alpha1.VirtualVolume {
	if x != nil {
		return x.Item
	}
	return nil
}

type CreateVirtualVolumeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateVirtualVolumeResponse) Reset() {
	*x = CreateVirtualVolumeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVirtualVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVirtualVolumeResponse) ProtoMessage() {}

func (x *CreateVirtualVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVirtualVolumeResponse.ProtoReflect.Descriptor instead.
func (*CreateVirtualVolumeResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_rawDescGZIP(), []int{4}
}

type UpdateVirtualVolumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.VirtualVolume `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *UpdateVirtualVolumeRequest) Reset() {
	*x = UpdateVirtualVolumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVirtualVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVirtualVolumeRequest) ProtoMessage() {}

func (x *UpdateVirtualVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVirtualVolumeRequest.ProtoReflect.Descriptor instead.
func (*UpdateVirtualVolumeRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateVirtualVolumeRequest) GetItem() *v1alpha1.VirtualVolume {
	if x != nil {
		return x.Item
	}
	return nil
}

type UpdateVirtualVolumeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateVirtualVolumeResponse) Reset() {
	*x = UpdateVirtualVolumeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVirtualVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVirtualVolumeResponse) ProtoMessage() {}

func (x *UpdateVirtualVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVirtualVolumeResponse.ProtoReflect.Descriptor instead.
func (*UpdateVirtualVolumeResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_rawDescGZIP(), []int{6}
}

type GetVirtualVolumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetVirtualVolumeRequest) Reset() {
	*x = GetVirtualVolumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVirtualVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtualVolumeRequest) ProtoMessage() {}

func (x *GetVirtualVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVirtualVolumeRequest.ProtoReflect.Descriptor instead.
func (*GetVirtualVolumeRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_rawDescGZIP(), []int{7}
}

func (x *GetVirtualVolumeRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetVirtualVolumeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetVirtualVolumeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.VirtualVolume `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Yaml string                  `protobuf:"bytes,2,opt,name=yaml,proto3" json:"yaml,omitempty"`
}

func (x *GetVirtualVolumeResponse) Reset() {
	*x = GetVirtualVolumeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVirtualVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtualVolumeResponse) ProtoMessage() {}

func (x *GetVirtualVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVirtualVolumeResponse.ProtoReflect.Descriptor instead.
func (*GetVirtualVolumeResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_rawDescGZIP(), []int{8}
}

func (x *GetVirtualVolumeResponse) GetItem() *v1alpha1.VirtualVolume {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *GetVirtualVolumeResponse) GetYaml() string {
	if x != nil {
		return x.Yaml
	}
	return ""
}

type DeleteVirtualVolumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteVirtualVolumeRequest) Reset() {
	*x = DeleteVirtualVolumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVirtualVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVirtualVolumeRequest) ProtoMessage() {}

func (x *DeleteVirtualVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVirtualVolumeRequest.ProtoReflect.Descriptor instead.
func (*DeleteVirtualVolumeRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteVirtualVolumeRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeleteVirtualVolumeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteVirtualVolumeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteVirtualVolumeResponse) Reset() {
	*x = DeleteVirtualVolumeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVirtualVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVirtualVolumeResponse) ProtoMessage() {}

func (x *DeleteVirtualVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVirtualVolumeResponse.ProtoReflect.Descriptor instead.
func (*DeleteVirtualVolumeResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_rawDescGZIP(), []int{10}
}

var File_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto protoreflect.FileDescriptor

var file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_rawDesc = []byte{
	0x0a, 0x4b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x37, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61,
	0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3d, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xec, 0x01, 0x0a, 0x19, 0x4c,
	0x69, 0x73, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x76, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39,
	0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7c, 0x0a, 0x1a, 0x4c, 0x69, 0x73,
	0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x56,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x76, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x58,
	0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x76, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22,
	0x1d, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x56,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x22, 0x4e, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x88, 0x09, 0x0a, 0x14, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xdd,
	0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x73, 0x12, 0x52, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x12, 0xdf,
	0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x54, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x76,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x3a, 0x01, 0x2a,
	0x12, 0xde, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x50, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x51, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65,
	0x7d, 0x12, 0xe6, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x54,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x1a, 0x19, 0x2f, 0x76,
	0x31, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0xe3, 0x01, 0x0a, 0x13, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x12, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x54, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x2a, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d,
	0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70,
	0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_rawDescOnce sync.Once
	file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_rawDescData = file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_rawDesc
)

func file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_rawDescGZIP() []byte {
	file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_rawDescOnce.Do(func() {
		file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_rawDescData)
	})
	return file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_rawDescData
}

var file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_goTypes = []interface{}{
	(*ListVirtualVolumesRequest)(nil),   // 0: github.com.metaprov.modelaapi.services.virtualvolume.v1.ListVirtualVolumesRequest
	(*ListVirtualVolumesResponse)(nil),  // 1: github.com.metaprov.modelaapi.services.virtualvolume.v1.ListVirtualVolumesResponse
	(*VirtualVolumeResponse)(nil),       // 2: github.com.metaprov.modelaapi.services.virtualvolume.v1.VirtualVolumeResponse
	(*CreateVirtualVolumeRequest)(nil),  // 3: github.com.metaprov.modelaapi.services.virtualvolume.v1.CreateVirtualVolumeRequest
	(*CreateVirtualVolumeResponse)(nil), // 4: github.com.metaprov.modelaapi.services.virtualvolume.v1.CreateVirtualVolumeResponse
	(*UpdateVirtualVolumeRequest)(nil),  // 5: github.com.metaprov.modelaapi.services.virtualvolume.v1.UpdateVirtualVolumeRequest
	(*UpdateVirtualVolumeResponse)(nil), // 6: github.com.metaprov.modelaapi.services.virtualvolume.v1.UpdateVirtualVolumeResponse
	(*GetVirtualVolumeRequest)(nil),     // 7: github.com.metaprov.modelaapi.services.virtualvolume.v1.GetVirtualVolumeRequest
	(*GetVirtualVolumeResponse)(nil),    // 8: github.com.metaprov.modelaapi.services.virtualvolume.v1.GetVirtualVolumeResponse
	(*DeleteVirtualVolumeRequest)(nil),  // 9: github.com.metaprov.modelaapi.services.virtualvolume.v1.DeleteVirtualVolumeRequest
	(*DeleteVirtualVolumeResponse)(nil), // 10: github.com.metaprov.modelaapi.services.virtualvolume.v1.DeleteVirtualVolumeResponse
	nil,                                 // 11: github.com.metaprov.modelaapi.services.virtualvolume.v1.ListVirtualVolumesRequest.LabelsEntry
	(*v1alpha1.VirtualVolumeList)(nil),  // 12: github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualVolumeList
	(*v1alpha1.VirtualVolume)(nil),      // 13: github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualVolume
}
var file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_depIdxs = []int32{
	11, // 0: github.com.metaprov.modelaapi.services.virtualvolume.v1.ListVirtualVolumesRequest.labels:type_name -> github.com.metaprov.modelaapi.services.virtualvolume.v1.ListVirtualVolumesRequest.LabelsEntry
	12, // 1: github.com.metaprov.modelaapi.services.virtualvolume.v1.ListVirtualVolumesResponse.items:type_name -> github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualVolumeList
	13, // 2: github.com.metaprov.modelaapi.services.virtualvolume.v1.CreateVirtualVolumeRequest.item:type_name -> github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualVolume
	13, // 3: github.com.metaprov.modelaapi.services.virtualvolume.v1.UpdateVirtualVolumeRequest.item:type_name -> github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualVolume
	13, // 4: github.com.metaprov.modelaapi.services.virtualvolume.v1.GetVirtualVolumeResponse.item:type_name -> github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualVolume
	0,  // 5: github.com.metaprov.modelaapi.services.virtualvolume.v1.VirtualVolumeService.ListVirtualVolumes:input_type -> github.com.metaprov.modelaapi.services.virtualvolume.v1.ListVirtualVolumesRequest
	3,  // 6: github.com.metaprov.modelaapi.services.virtualvolume.v1.VirtualVolumeService.CreateVirtualVolume:input_type -> github.com.metaprov.modelaapi.services.virtualvolume.v1.CreateVirtualVolumeRequest
	7,  // 7: github.com.metaprov.modelaapi.services.virtualvolume.v1.VirtualVolumeService.GetVirtualVolume:input_type -> github.com.metaprov.modelaapi.services.virtualvolume.v1.GetVirtualVolumeRequest
	5,  // 8: github.com.metaprov.modelaapi.services.virtualvolume.v1.VirtualVolumeService.UpdateVirtualVolume:input_type -> github.com.metaprov.modelaapi.services.virtualvolume.v1.UpdateVirtualVolumeRequest
	9,  // 9: github.com.metaprov.modelaapi.services.virtualvolume.v1.VirtualVolumeService.DeleteVirtualVolume:input_type -> github.com.metaprov.modelaapi.services.virtualvolume.v1.DeleteVirtualVolumeRequest
	1,  // 10: github.com.metaprov.modelaapi.services.virtualvolume.v1.VirtualVolumeService.ListVirtualVolumes:output_type -> github.com.metaprov.modelaapi.services.virtualvolume.v1.ListVirtualVolumesResponse
	4,  // 11: github.com.metaprov.modelaapi.services.virtualvolume.v1.VirtualVolumeService.CreateVirtualVolume:output_type -> github.com.metaprov.modelaapi.services.virtualvolume.v1.CreateVirtualVolumeResponse
	8,  // 12: github.com.metaprov.modelaapi.services.virtualvolume.v1.VirtualVolumeService.GetVirtualVolume:output_type -> github.com.metaprov.modelaapi.services.virtualvolume.v1.GetVirtualVolumeResponse
	6,  // 13: github.com.metaprov.modelaapi.services.virtualvolume.v1.VirtualVolumeService.UpdateVirtualVolume:output_type -> github.com.metaprov.modelaapi.services.virtualvolume.v1.UpdateVirtualVolumeResponse
	10, // 14: github.com.metaprov.modelaapi.services.virtualvolume.v1.VirtualVolumeService.DeleteVirtualVolume:output_type -> github.com.metaprov.modelaapi.services.virtualvolume.v1.DeleteVirtualVolumeResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_init() }
func file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_init() {
	if File_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVirtualVolumesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVirtualVolumesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualVolumeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVirtualVolumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVirtualVolumeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVirtualVolumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVirtualVolumeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVirtualVolumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVirtualVolumeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVirtualVolumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVirtualVolumeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_goTypes,
		DependencyIndexes: file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_depIdxs,
		MessageInfos:      file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_msgTypes,
	}.Build()
	File_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto = out.File
	file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_rawDesc = nil
	file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_goTypes = nil
	file_github_com_metaprov_modelaapi_services_virtualvolume_v1_virtualvolume_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// VirtualVolumeServiceClient is the client API for VirtualVolumeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VirtualVolumeServiceClient interface {
	ListVirtualVolumes(ctx context.Context, in *ListVirtualVolumesRequest, opts ...grpc.CallOption) (*ListVirtualVolumesResponse, error)
	CreateVirtualVolume(ctx context.Context, in *CreateVirtualVolumeRequest, opts ...grpc.CallOption) (*CreateVirtualVolumeResponse, error)
	GetVirtualVolume(ctx context.Context, in *GetVirtualVolumeRequest, opts ...grpc.CallOption) (*GetVirtualVolumeResponse, error)
	UpdateVirtualVolume(ctx context.Context, in *UpdateVirtualVolumeRequest, opts ...grpc.CallOption) (*UpdateVirtualVolumeResponse, error)
	DeleteVirtualVolume(ctx context.Context, in *DeleteVirtualVolumeRequest, opts ...grpc.CallOption) (*DeleteVirtualVolumeResponse, error)
}

type virtualVolumeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewVirtualVolumeServiceClient(cc grpc.ClientConnInterface) VirtualVolumeServiceClient {
	return &virtualVolumeServiceClient{cc}
}

func (c *virtualVolumeServiceClient) ListVirtualVolumes(ctx context.Context, in *ListVirtualVolumesRequest, opts ...grpc.CallOption) (*ListVirtualVolumesResponse, error) {
	out := new(ListVirtualVolumesResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.virtualvolume.v1.VirtualVolumeService/ListVirtualVolumes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualVolumeServiceClient) CreateVirtualVolume(ctx context.Context, in *CreateVirtualVolumeRequest, opts ...grpc.CallOption) (*CreateVirtualVolumeResponse, error) {
	out := new(CreateVirtualVolumeResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.virtualvolume.v1.VirtualVolumeService/CreateVirtualVolume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualVolumeServiceClient) GetVirtualVolume(ctx context.Context, in *GetVirtualVolumeRequest, opts ...grpc.CallOption) (*GetVirtualVolumeResponse, error) {
	out := new(GetVirtualVolumeResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.virtualvolume.v1.VirtualVolumeService/GetVirtualVolume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualVolumeServiceClient) UpdateVirtualVolume(ctx context.Context, in *UpdateVirtualVolumeRequest, opts ...grpc.CallOption) (*UpdateVirtualVolumeResponse, error) {
	out := new(UpdateVirtualVolumeResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.virtualvolume.v1.VirtualVolumeService/UpdateVirtualVolume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualVolumeServiceClient) DeleteVirtualVolume(ctx context.Context, in *DeleteVirtualVolumeRequest, opts ...grpc.CallOption) (*DeleteVirtualVolumeResponse, error) {
	out := new(DeleteVirtualVolumeResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.virtualvolume.v1.VirtualVolumeService/DeleteVirtualVolume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VirtualVolumeServiceServer is the server API for VirtualVolumeService service.
type VirtualVolumeServiceServer interface {
	ListVirtualVolumes(context.Context, *ListVirtualVolumesRequest) (*ListVirtualVolumesResponse, error)
	CreateVirtualVolume(context.Context, *CreateVirtualVolumeRequest) (*CreateVirtualVolumeResponse, error)
	GetVirtualVolume(context.Context, *GetVirtualVolumeRequest) (*GetVirtualVolumeResponse, error)
	UpdateVirtualVolume(context.Context, *UpdateVirtualVolumeRequest) (*UpdateVirtualVolumeResponse, error)
	DeleteVirtualVolume(context.Context, *DeleteVirtualVolumeRequest) (*DeleteVirtualVolumeResponse, error)
}

// UnimplementedVirtualVolumeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedVirtualVolumeServiceServer struct {
}

func (*UnimplementedVirtualVolumeServiceServer) ListVirtualVolumes(context.Context, *ListVirtualVolumesRequest) (*ListVirtualVolumesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListVirtualVolumes not implemented")
}
func (*UnimplementedVirtualVolumeServiceServer) CreateVirtualVolume(context.Context, *CreateVirtualVolumeRequest) (*CreateVirtualVolumeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVirtualVolume not implemented")
}
func (*UnimplementedVirtualVolumeServiceServer) GetVirtualVolume(context.Context, *GetVirtualVolumeRequest) (*GetVirtualVolumeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVirtualVolume not implemented")
}
func (*UnimplementedVirtualVolumeServiceServer) UpdateVirtualVolume(context.Context, *UpdateVirtualVolumeRequest) (*UpdateVirtualVolumeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateVirtualVolume not implemented")
}
func (*UnimplementedVirtualVolumeServiceServer) DeleteVirtualVolume(context.Context, *DeleteVirtualVolumeRequest) (*DeleteVirtualVolumeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteVirtualVolume not implemented")
}

func RegisterVirtualVolumeServiceServer(s *grpc.Server, srv VirtualVolumeServiceServer) {
	s.RegisterService(&_VirtualVolumeService_serviceDesc, srv)
}

func _VirtualVolumeService_ListVirtualVolumes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListVirtualVolumesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualVolumeServiceServer).ListVirtualVolumes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.virtualvolume.v1.VirtualVolumeService/ListVirtualVolumes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualVolumeServiceServer).ListVirtualVolumes(ctx, req.(*ListVirtualVolumesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualVolumeService_CreateVirtualVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateVirtualVolumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualVolumeServiceServer).CreateVirtualVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.virtualvolume.v1.VirtualVolumeService/CreateVirtualVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualVolumeServiceServer).CreateVirtualVolume(ctx, req.(*CreateVirtualVolumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualVolumeService_GetVirtualVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVirtualVolumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualVolumeServiceServer).GetVirtualVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.virtualvolume.v1.VirtualVolumeService/GetVirtualVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualVolumeServiceServer).GetVirtualVolume(ctx, req.(*GetVirtualVolumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualVolumeService_UpdateVirtualVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateVirtualVolumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualVolumeServiceServer).UpdateVirtualVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.virtualvolume.v1.VirtualVolumeService/UpdateVirtualVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualVolumeServiceServer).UpdateVirtualVolume(ctx, req.(*UpdateVirtualVolumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualVolumeService_DeleteVirtualVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteVirtualVolumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualVolumeServiceServer).DeleteVirtualVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.virtualvolume.v1.VirtualVolumeService/DeleteVirtualVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualVolumeServiceServer).DeleteVirtualVolume(ctx, req.(*DeleteVirtualVolumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VirtualVolumeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.metaprov.modelaapi.services.virtualvolume.v1.VirtualVolumeService",
	HandlerType: (*VirtualVolumeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListVirtualVolumes",
			Handler:    _VirtualVolumeService_ListVirtualVolumes_Handler,
		},
		{
			MethodName: "CreateVirtualVolume",
			Handler:    _VirtualVolumeService_CreateVirtualVolume_Handler,
		},
		{
			MethodName: "GetVirtualVolume",
			Handler:    _VirtualVolumeService_GetVirtualVolume_Handler,
		},
		{
			MethodName: "UpdateVirtualVolume",
			Handler:    _VirtualVolumeService_UpdateVirtualVolume_Handler,
		},
		{
			MethodName: "DeleteVirtualVolume",
			Handler:    _VirtualVolumeService_DeleteVirtualVolume_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/metaprov/modelaapi/services/virtualvolume/v1/virtualvolume.proto",
}
