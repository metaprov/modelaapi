// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: github.com/metaprov/modeldapi/services/featureset/v1/featureset.proto

package v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	v1alpha1 "github.com/metaprov/modeldapi/pkg/apis/data/v1alpha1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ListFeaturesetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Labels    map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListFeaturesetRequest) Reset() {
	*x = ListFeaturesetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeaturesetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeaturesetRequest) ProtoMessage() {}

func (x *ListFeaturesetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeaturesetRequest.ProtoReflect.Descriptor instead.
func (*ListFeaturesetRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_rawDescGZIP(), []int{0}
}

func (x *ListFeaturesetRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListFeaturesetRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ListFeaturesetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items *v1alpha1.FeaturesetList `protobuf:"bytes,1,opt,name=items,proto3" json:"items,omitempty"`
}

func (x *ListFeaturesetResponse) Reset() {
	*x = ListFeaturesetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeaturesetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeaturesetResponse) ProtoMessage() {}

func (x *ListFeaturesetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeaturesetResponse.ProtoReflect.Descriptor instead.
func (*ListFeaturesetResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_rawDescGZIP(), []int{1}
}

func (x *ListFeaturesetResponse) GetItems() *v1alpha1.FeaturesetList {
	if x != nil {
		return x.Items
	}
	return nil
}

type CreateFeaturesetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.Featureset `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *CreateFeaturesetRequest) Reset() {
	*x = CreateFeaturesetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFeaturesetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeaturesetRequest) ProtoMessage() {}

func (x *CreateFeaturesetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeaturesetRequest.ProtoReflect.Descriptor instead.
func (*CreateFeaturesetRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_rawDescGZIP(), []int{2}
}

func (x *CreateFeaturesetRequest) GetItem() *v1alpha1.Featureset {
	if x != nil {
		return x.Item
	}
	return nil
}

type CreateFeaturesetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateFeaturesetResponse) Reset() {
	*x = CreateFeaturesetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFeaturesetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeaturesetResponse) ProtoMessage() {}

func (x *CreateFeaturesetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeaturesetResponse.ProtoReflect.Descriptor instead.
func (*CreateFeaturesetResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_rawDescGZIP(), []int{3}
}

type UpdateFeaturesetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.Featureset `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *UpdateFeaturesetRequest) Reset() {
	*x = UpdateFeaturesetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFeaturesetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFeaturesetRequest) ProtoMessage() {}

func (x *UpdateFeaturesetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFeaturesetRequest.ProtoReflect.Descriptor instead.
func (*UpdateFeaturesetRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateFeaturesetRequest) GetItem() *v1alpha1.Featureset {
	if x != nil {
		return x.Item
	}
	return nil
}

type UpdateFeaturesetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateFeaturesetResponse) Reset() {
	*x = UpdateFeaturesetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFeaturesetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFeaturesetResponse) ProtoMessage() {}

func (x *UpdateFeaturesetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFeaturesetResponse.ProtoReflect.Descriptor instead.
func (*UpdateFeaturesetResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_rawDescGZIP(), []int{5}
}

type GetFeaturesetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetFeaturesetRequest) Reset() {
	*x = GetFeaturesetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeaturesetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeaturesetRequest) ProtoMessage() {}

func (x *GetFeaturesetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeaturesetRequest.ProtoReflect.Descriptor instead.
func (*GetFeaturesetRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_rawDescGZIP(), []int{6}
}

func (x *GetFeaturesetRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetFeaturesetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetFeaturesetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.Featureset `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Yaml string               `protobuf:"bytes,2,opt,name=yaml,proto3" json:"yaml,omitempty"`
}

func (x *GetFeaturesetResponse) Reset() {
	*x = GetFeaturesetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeaturesetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeaturesetResponse) ProtoMessage() {}

func (x *GetFeaturesetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeaturesetResponse.ProtoReflect.Descriptor instead.
func (*GetFeaturesetResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_rawDescGZIP(), []int{7}
}

func (x *GetFeaturesetResponse) GetItem() *v1alpha1.Featureset {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *GetFeaturesetResponse) GetYaml() string {
	if x != nil {
		return x.Yaml
	}
	return ""
}

type DeleteFeaturesetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteFeaturesetRequest) Reset() {
	*x = DeleteFeaturesetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFeaturesetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFeaturesetRequest) ProtoMessage() {}

func (x *DeleteFeaturesetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFeaturesetRequest.ProtoReflect.Descriptor instead.
func (*DeleteFeaturesetRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteFeaturesetRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeleteFeaturesetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteFeaturesetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteFeaturesetResponse) Reset() {
	*x = DeleteFeaturesetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFeaturesetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFeaturesetResponse) ProtoMessage() {}

func (x *DeleteFeaturesetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFeaturesetResponse.ProtoReflect.Descriptor instead.
func (*DeleteFeaturesetResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_rawDescGZIP(), []int{9}
}

var File_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto protoreflect.FileDescriptor

var file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_rawDesc = []byte{
	0x0a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x44, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xe1, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x6f, 0x0a, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x57, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x74, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x6f, 0x0a, 0x17, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x64, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x1a, 0x0a, 0x18,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6f, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x40, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x1a, 0x0a, 0x18, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x48, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x81, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79,
	0x61, 0x6d, 0x6c, 0x22, 0x4b, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x1a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x97, 0x08, 0x0a,
	0x11, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0xc5, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x73, 0x12, 0x4b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x4c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x73, 0x12, 0xcd, 0x01, 0x0a, 0x10, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x12,
	0x4d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4e,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0xc8, 0x01, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x12, 0x4a, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f,
	0x76, 0x31, 0x2f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x73, 0x2f, 0x7b,
	0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0xe8, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x12, 0x4d, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4e, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2f, 0x1a, 0x2a, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x73, 0x2f, 0x7b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x01, 0x2a,
	0x12, 0xb3, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x12, 0x4d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x4e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2f, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_rawDescOnce sync.Once
	file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_rawDescData = file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_rawDesc
)

func file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_rawDescGZIP() []byte {
	file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_rawDescOnce.Do(func() {
		file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_rawDescData)
	})
	return file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_rawDescData
}

var file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_goTypes = []interface{}{
	(*ListFeaturesetRequest)(nil),    // 0: github.com.metaprov.modeldapi.services.featureset.v1.ListFeaturesetRequest
	(*ListFeaturesetResponse)(nil),   // 1: github.com.metaprov.modeldapi.services.featureset.v1.ListFeaturesetResponse
	(*CreateFeaturesetRequest)(nil),  // 2: github.com.metaprov.modeldapi.services.featureset.v1.CreateFeaturesetRequest
	(*CreateFeaturesetResponse)(nil), // 3: github.com.metaprov.modeldapi.services.featureset.v1.CreateFeaturesetResponse
	(*UpdateFeaturesetRequest)(nil),  // 4: github.com.metaprov.modeldapi.services.featureset.v1.UpdateFeaturesetRequest
	(*UpdateFeaturesetResponse)(nil), // 5: github.com.metaprov.modeldapi.services.featureset.v1.UpdateFeaturesetResponse
	(*GetFeaturesetRequest)(nil),     // 6: github.com.metaprov.modeldapi.services.featureset.v1.GetFeaturesetRequest
	(*GetFeaturesetResponse)(nil),    // 7: github.com.metaprov.modeldapi.services.featureset.v1.GetFeaturesetResponse
	(*DeleteFeaturesetRequest)(nil),  // 8: github.com.metaprov.modeldapi.services.featureset.v1.DeleteFeaturesetRequest
	(*DeleteFeaturesetResponse)(nil), // 9: github.com.metaprov.modeldapi.services.featureset.v1.DeleteFeaturesetResponse
	nil,                              // 10: github.com.metaprov.modeldapi.services.featureset.v1.ListFeaturesetRequest.LabelsEntry
	(*v1alpha1.FeaturesetList)(nil),  // 11: github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.FeaturesetList
	(*v1alpha1.Featureset)(nil),      // 12: github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.Featureset
}
var file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_depIdxs = []int32{
	10, // 0: github.com.metaprov.modeldapi.services.featureset.v1.ListFeaturesetRequest.labels:type_name -> github.com.metaprov.modeldapi.services.featureset.v1.ListFeaturesetRequest.LabelsEntry
	11, // 1: github.com.metaprov.modeldapi.services.featureset.v1.ListFeaturesetResponse.items:type_name -> github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.FeaturesetList
	12, // 2: github.com.metaprov.modeldapi.services.featureset.v1.CreateFeaturesetRequest.item:type_name -> github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.Featureset
	12, // 3: github.com.metaprov.modeldapi.services.featureset.v1.UpdateFeaturesetRequest.item:type_name -> github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.Featureset
	12, // 4: github.com.metaprov.modeldapi.services.featureset.v1.GetFeaturesetResponse.item:type_name -> github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.Featureset
	0,  // 5: github.com.metaprov.modeldapi.services.featureset.v1.FeaturesetService.ListFeaturesets:input_type -> github.com.metaprov.modeldapi.services.featureset.v1.ListFeaturesetRequest
	2,  // 6: github.com.metaprov.modeldapi.services.featureset.v1.FeaturesetService.CreateFeatureset:input_type -> github.com.metaprov.modeldapi.services.featureset.v1.CreateFeaturesetRequest
	6,  // 7: github.com.metaprov.modeldapi.services.featureset.v1.FeaturesetService.GetFeatureset:input_type -> github.com.metaprov.modeldapi.services.featureset.v1.GetFeaturesetRequest
	4,  // 8: github.com.metaprov.modeldapi.services.featureset.v1.FeaturesetService.UpdateFeatureset:input_type -> github.com.metaprov.modeldapi.services.featureset.v1.UpdateFeaturesetRequest
	8,  // 9: github.com.metaprov.modeldapi.services.featureset.v1.FeaturesetService.DeleteFeatureset:input_type -> github.com.metaprov.modeldapi.services.featureset.v1.DeleteFeaturesetRequest
	1,  // 10: github.com.metaprov.modeldapi.services.featureset.v1.FeaturesetService.ListFeaturesets:output_type -> github.com.metaprov.modeldapi.services.featureset.v1.ListFeaturesetResponse
	3,  // 11: github.com.metaprov.modeldapi.services.featureset.v1.FeaturesetService.CreateFeatureset:output_type -> github.com.metaprov.modeldapi.services.featureset.v1.CreateFeaturesetResponse
	7,  // 12: github.com.metaprov.modeldapi.services.featureset.v1.FeaturesetService.GetFeatureset:output_type -> github.com.metaprov.modeldapi.services.featureset.v1.GetFeaturesetResponse
	5,  // 13: github.com.metaprov.modeldapi.services.featureset.v1.FeaturesetService.UpdateFeatureset:output_type -> github.com.metaprov.modeldapi.services.featureset.v1.UpdateFeaturesetResponse
	9,  // 14: github.com.metaprov.modeldapi.services.featureset.v1.FeaturesetService.DeleteFeatureset:output_type -> github.com.metaprov.modeldapi.services.featureset.v1.DeleteFeaturesetResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_init() }
func file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_init() {
	if File_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeaturesetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeaturesetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFeaturesetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFeaturesetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFeaturesetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFeaturesetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeaturesetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeaturesetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFeaturesetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFeaturesetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_goTypes,
		DependencyIndexes: file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_depIdxs,
		MessageInfos:      file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_msgTypes,
	}.Build()
	File_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto = out.File
	file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_rawDesc = nil
	file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_goTypes = nil
	file_github_com_metaprov_modeldapi_services_featureset_v1_featureset_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FeaturesetServiceClient is the client API for FeaturesetService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FeaturesetServiceClient interface {
	ListFeaturesets(ctx context.Context, in *ListFeaturesetRequest, opts ...grpc.CallOption) (*ListFeaturesetResponse, error)
	CreateFeatureset(ctx context.Context, in *CreateFeaturesetRequest, opts ...grpc.CallOption) (*CreateFeaturesetResponse, error)
	GetFeatureset(ctx context.Context, in *GetFeaturesetRequest, opts ...grpc.CallOption) (*GetFeaturesetResponse, error)
	UpdateFeatureset(ctx context.Context, in *UpdateFeaturesetRequest, opts ...grpc.CallOption) (*UpdateFeaturesetResponse, error)
	DeleteFeatureset(ctx context.Context, in *DeleteFeaturesetRequest, opts ...grpc.CallOption) (*DeleteFeaturesetResponse, error)
}

type featuresetServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFeaturesetServiceClient(cc grpc.ClientConnInterface) FeaturesetServiceClient {
	return &featuresetServiceClient{cc}
}

func (c *featuresetServiceClient) ListFeaturesets(ctx context.Context, in *ListFeaturesetRequest, opts ...grpc.CallOption) (*ListFeaturesetResponse, error) {
	out := new(ListFeaturesetResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.featureset.v1.FeaturesetService/ListFeaturesets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresetServiceClient) CreateFeatureset(ctx context.Context, in *CreateFeaturesetRequest, opts ...grpc.CallOption) (*CreateFeaturesetResponse, error) {
	out := new(CreateFeaturesetResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.featureset.v1.FeaturesetService/CreateFeatureset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresetServiceClient) GetFeatureset(ctx context.Context, in *GetFeaturesetRequest, opts ...grpc.CallOption) (*GetFeaturesetResponse, error) {
	out := new(GetFeaturesetResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.featureset.v1.FeaturesetService/GetFeatureset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresetServiceClient) UpdateFeatureset(ctx context.Context, in *UpdateFeaturesetRequest, opts ...grpc.CallOption) (*UpdateFeaturesetResponse, error) {
	out := new(UpdateFeaturesetResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.featureset.v1.FeaturesetService/UpdateFeatureset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featuresetServiceClient) DeleteFeatureset(ctx context.Context, in *DeleteFeaturesetRequest, opts ...grpc.CallOption) (*DeleteFeaturesetResponse, error) {
	out := new(DeleteFeaturesetResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.featureset.v1.FeaturesetService/DeleteFeatureset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FeaturesetServiceServer is the server API for FeaturesetService service.
type FeaturesetServiceServer interface {
	ListFeaturesets(context.Context, *ListFeaturesetRequest) (*ListFeaturesetResponse, error)
	CreateFeatureset(context.Context, *CreateFeaturesetRequest) (*CreateFeaturesetResponse, error)
	GetFeatureset(context.Context, *GetFeaturesetRequest) (*GetFeaturesetResponse, error)
	UpdateFeatureset(context.Context, *UpdateFeaturesetRequest) (*UpdateFeaturesetResponse, error)
	DeleteFeatureset(context.Context, *DeleteFeaturesetRequest) (*DeleteFeaturesetResponse, error)
}

// UnimplementedFeaturesetServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFeaturesetServiceServer struct {
}

func (*UnimplementedFeaturesetServiceServer) ListFeaturesets(context.Context, *ListFeaturesetRequest) (*ListFeaturesetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListFeaturesets not implemented")
}
func (*UnimplementedFeaturesetServiceServer) CreateFeatureset(context.Context, *CreateFeaturesetRequest) (*CreateFeaturesetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFeatureset not implemented")
}
func (*UnimplementedFeaturesetServiceServer) GetFeatureset(context.Context, *GetFeaturesetRequest) (*GetFeaturesetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFeatureset not implemented")
}
func (*UnimplementedFeaturesetServiceServer) UpdateFeatureset(context.Context, *UpdateFeaturesetRequest) (*UpdateFeaturesetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFeatureset not implemented")
}
func (*UnimplementedFeaturesetServiceServer) DeleteFeatureset(context.Context, *DeleteFeaturesetRequest) (*DeleteFeaturesetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFeatureset not implemented")
}

func RegisterFeaturesetServiceServer(s *grpc.Server, srv FeaturesetServiceServer) {
	s.RegisterService(&_FeaturesetService_serviceDesc, srv)
}

func _FeaturesetService_ListFeaturesets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFeaturesetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeaturesetServiceServer).ListFeaturesets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.featureset.v1.FeaturesetService/ListFeaturesets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeaturesetServiceServer).ListFeaturesets(ctx, req.(*ListFeaturesetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeaturesetService_CreateFeatureset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFeaturesetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeaturesetServiceServer).CreateFeatureset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.featureset.v1.FeaturesetService/CreateFeatureset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeaturesetServiceServer).CreateFeatureset(ctx, req.(*CreateFeaturesetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeaturesetService_GetFeatureset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFeaturesetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeaturesetServiceServer).GetFeatureset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.featureset.v1.FeaturesetService/GetFeatureset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeaturesetServiceServer).GetFeatureset(ctx, req.(*GetFeaturesetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeaturesetService_UpdateFeatureset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFeaturesetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeaturesetServiceServer).UpdateFeatureset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.featureset.v1.FeaturesetService/UpdateFeatureset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeaturesetServiceServer).UpdateFeatureset(ctx, req.(*UpdateFeaturesetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeaturesetService_DeleteFeatureset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFeaturesetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeaturesetServiceServer).DeleteFeatureset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.featureset.v1.FeaturesetService/DeleteFeatureset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeaturesetServiceServer).DeleteFeatureset(ctx, req.(*DeleteFeaturesetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FeaturesetService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.metaprov.modeldapi.services.featureset.v1.FeaturesetService",
	HandlerType: (*FeaturesetServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListFeaturesets",
			Handler:    _FeaturesetService_ListFeaturesets_Handler,
		},
		{
			MethodName: "CreateFeatureset",
			Handler:    _FeaturesetService_CreateFeatureset_Handler,
		},
		{
			MethodName: "GetFeatureset",
			Handler:    _FeaturesetService_GetFeatureset_Handler,
		},
		{
			MethodName: "UpdateFeatureset",
			Handler:    _FeaturesetService_UpdateFeatureset_Handler,
		},
		{
			MethodName: "DeleteFeatureset",
			Handler:    _FeaturesetService_DeleteFeatureset_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/metaprov/modeldapi/services/featureset/v1/featureset.proto",
}
