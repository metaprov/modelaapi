syntax = "proto3";
option go_package = "github.com/metaprov/modelaapi/services/featureset/v1";
package github.com.metaprov.modelaapi.services.featureset.v1;

import "google/protobuf/field_mask.proto";
import "google/api/annotations.proto";
import "github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1/generated.proto";

message ListFeaturesetRequest {
    string namespace = 1;
    map<string,string> labels =2;
    int32              page_size  = 3;
    string             page_token = 4;
    string             order_by   = 5;
}

message ListFeaturesetResponse {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.FeaturesetList featuresets = 1;
    string next_page_token = 2;
}

message CreateFeaturesetRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Featureset featureset = 1;
}

message CreateFeaturesetResponse {

}

message UpdateFeaturesetRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Featureset featureset = 1;
    google.protobuf.FieldMask field_mask = 2;
}

message UpdateFeaturesetResponse {

}

message GetFeaturesetRequest {
    string namespace = 1;
    string name      = 2;
    
}


message GetFeaturesetResponse {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Featureset item = 1;
    string yaml = 2;
}


message DeleteFeaturesetRequest {
    string namespace = 1;
    string name      = 2;
}

message DeleteFeaturesetResponse {

}


service FeaturesetService {
    rpc ListFeaturesets(ListFeaturesetRequest) returns (ListFeaturesetResponse) {
        option (google.api.http).get = "/v1/featuresets/{namespace}";
    }
    rpc CreateFeatureset(CreateFeaturesetRequest) returns (CreateFeaturesetResponse) {
        option (google.api.http) = {
			post: "/v1/featuresets"
			body: "*"
		};
    }
    rpc GetFeatureset(GetFeaturesetRequest) returns (GetFeaturesetResponse) {
        option (google.api.http).get = "/v1/featuresets/{namespace}/{name}";
    }
    rpc UpdateFeatureset(UpdateFeaturesetRequest) returns (UpdateFeaturesetResponse) {
        option (google.api.http) = {
			put: "/v1/featuresets/{item.metadata.namespace}/{item.metadata.name}"
			body: "*"
		};
    }
    rpc DeleteFeatureset(DeleteFeaturesetRequest) returns (DeleteFeaturesetResponse) {
        option (google.api.http).delete = "/v1/featuresets/{namespace}/{name}";
    }
}