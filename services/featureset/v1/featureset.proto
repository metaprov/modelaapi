syntax = "proto3";
option go_package = "github.com/metaprov/modeldapi/services/featureset/v1";
package github.com.metaprov.modeldapi.services.featureset.v1;

import "google/api/annotations.proto";
import "github.com/metaprov/modeldapi/pkg/apis/data/v1alpha1/generated.proto";

message ListFeaturesetRequest {
    string namespace = 1;
    map<string,string> labels =2;
}

message ListFeaturesetResponse {
    github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.FeaturesetList items = 1;
}

message CreateFeaturesetRequest {
    github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.Featureset item = 1;
}

message CreateFeaturesetResponse {

}

message UpdateFeaturesetRequest {
    github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.Featureset item = 1;
}

message UpdateFeaturesetResponse {

}

message GetFeaturesetRequest {
    string namespace = 1;
    string name      = 2;
}


message GetFeaturesetResponse {
    github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.Featureset item = 1;
    string yaml = 2;
}


message DeleteFeaturesetRequest {
    string namespace = 1;
    string name      = 2;
}

message DeleteFeaturesetResponse {

}


service FeaturesetService {
    rpc ListFeaturesets(ListFeaturesetRequest) returns (ListFeaturesetResponse) {
        option (google.api.http).get = "/v1/featuresets";
    }
    rpc CreateFeatureset(CreateFeaturesetRequest) returns (CreateFeaturesetResponse) {
        option (google.api.http) = {
			post: "/v1/featuresets"
			body: "*"
		};
    }
    rpc GetFeatureset(GetFeaturesetRequest) returns (GetFeaturesetResponse) {
        option (google.api.http).get = "/v1/featuresets/{name}";
    }
    rpc UpdateFeatureset(UpdateFeaturesetRequest) returns (UpdateFeaturesetResponse) {
        option (google.api.http) = {
			put: "/v1/featuresets/{featureset.metadata.name}"
			body: "*"
		};
    }
    rpc DeleteFeatureset(DeleteFeaturesetRequest) returns (DeleteFeaturesetResponse) {}
}