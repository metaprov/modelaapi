syntax = "proto3";
option go_package = "github.com/metaprov/modelaapi/services/labelingpipelinerun/v1";
package github.com.metaprov.modelaapi.services.labelingpipelinerun.v1;

import "google/protobuf/field_mask.proto";
import "google/api/annotations.proto";
import "github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1/generated.proto";

message ListLabelingPipelineRunRequest {
    string namespace = 1;
    map<string,string> labels =2;
    int32              page_size  = 3;
    string             page_token = 4;
    string             order_by   = 5;
}

message ListLabelingPipelineRunResponse {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.LabelingPipelineRunList labelingpipelineruns = 1;
    string next_page_token = 2;
}

message CreateLabelingPipelineRunRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.LabelingPipelineRun labelingpipelinerun = 1;
}

message CreateLabelingPipelineRunResponse {

}

message UpdateLabelingPipelineRunRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.LabelingPipelineRun labelingpipelinerun = 1;
    google.protobuf.FieldMask field_mask = 2;
}

message UpdateLabelingPipelineRunResponse {

}

message GetLabelingPipelineRunRequest {
    string namespace = 1;
    string name      = 2;
    
}


message GetLabelingPipelineRunResponse {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.LabelingPipelineRun labelingpipelinerun = 1;
    string yaml = 2;
}

message DeleteLabelingPipelineRunRequest {
    string namespace = 1;
    string name      = 2;
}

message DeleteLabelingPipelineRunResponse {

}

service LabelingPipelineRunService {
    rpc ListLabelingPipelineRuns(ListLabelingPipelineRunRequest) returns (ListLabelingPipelineRunResponse) {
        option (google.api.http).get = "/v1/labelingpipelineruns/{namespace}";
    }
    rpc CreateLabelingPipelineRun(CreateLabelingPipelineRunRequest) returns (CreateLabelingPipelineRunResponse) {
        option (google.api.http) = {
			post: "/v1/labelingpipelineruns"
			body: "*"
		};
    }
    rpc GetLabelingPipelineRun(GetLabelingPipelineRunRequest) returns (GetLabelingPipelineRunResponse) {
        option (google.api.http).get = "/v1/labelingpipelineruns/{namespace}/{name}";
    }
    rpc UpdateLabelingPipelineRun(UpdateLabelingPipelineRunRequest) returns (UpdateLabelingPipelineRunResponse) {
        option (google.api.http) = {
			put: "/v1/labelingpipelineruns/{item.metadata.namespace}/{item.metadata.name}"
			body: "*"
		};
    }

    rpc DeleteLabelingPipelineRun(DeleteLabelingPipelineRunRequest) returns (DeleteLabelingPipelineRunResponse) {
        option (google.api.http).delete = "/v1/labelingpipelineruns/{namespace}/{name}";
    }
}