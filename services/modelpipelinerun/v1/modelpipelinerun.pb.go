// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: services/modelpipelinerun/v1/modelpipelinerun.proto

package v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	v1alpha1 "github.com/metaprov/modeldapi/pkg/apis/training/v1alpha1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ListModelPipelineRunsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Labels    map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListModelPipelineRunsRequest) Reset() {
	*x = ListModelPipelineRunsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListModelPipelineRunsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModelPipelineRunsRequest) ProtoMessage() {}

func (x *ListModelPipelineRunsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModelPipelineRunsRequest.ProtoReflect.Descriptor instead.
func (*ListModelPipelineRunsRequest) Descriptor() ([]byte, []int) {
	return file_services_modelpipelinerun_v1_modelpipelinerun_proto_rawDescGZIP(), []int{0}
}

func (x *ListModelPipelineRunsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListModelPipelineRunsRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ListModelPipelineRunsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items *v1alpha1.ModelPipelineRunList `protobuf:"bytes,1,opt,name=items,proto3" json:"items,omitempty"`
}

func (x *ListModelPipelineRunsResponse) Reset() {
	*x = ListModelPipelineRunsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListModelPipelineRunsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModelPipelineRunsResponse) ProtoMessage() {}

func (x *ListModelPipelineRunsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModelPipelineRunsResponse.ProtoReflect.Descriptor instead.
func (*ListModelPipelineRunsResponse) Descriptor() ([]byte, []int) {
	return file_services_modelpipelinerun_v1_modelpipelinerun_proto_rawDescGZIP(), []int{1}
}

func (x *ListModelPipelineRunsResponse) GetItems() *v1alpha1.ModelPipelineRunList {
	if x != nil {
		return x.Items
	}
	return nil
}

type ModelPipelineRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModelPipelineRunResponse) Reset() {
	*x = ModelPipelineRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelPipelineRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelPipelineRunResponse) ProtoMessage() {}

func (x *ModelPipelineRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelPipelineRunResponse.ProtoReflect.Descriptor instead.
func (*ModelPipelineRunResponse) Descriptor() ([]byte, []int) {
	return file_services_modelpipelinerun_v1_modelpipelinerun_proto_rawDescGZIP(), []int{2}
}

type CreateModelPipelineRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.ModelPipelineRun `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *CreateModelPipelineRunRequest) Reset() {
	*x = CreateModelPipelineRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateModelPipelineRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateModelPipelineRunRequest) ProtoMessage() {}

func (x *CreateModelPipelineRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateModelPipelineRunRequest.ProtoReflect.Descriptor instead.
func (*CreateModelPipelineRunRequest) Descriptor() ([]byte, []int) {
	return file_services_modelpipelinerun_v1_modelpipelinerun_proto_rawDescGZIP(), []int{3}
}

func (x *CreateModelPipelineRunRequest) GetItem() *v1alpha1.ModelPipelineRun {
	if x != nil {
		return x.Item
	}
	return nil
}

type CreateModelPipelineRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateModelPipelineRunResponse) Reset() {
	*x = CreateModelPipelineRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateModelPipelineRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateModelPipelineRunResponse) ProtoMessage() {}

func (x *CreateModelPipelineRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateModelPipelineRunResponse.ProtoReflect.Descriptor instead.
func (*CreateModelPipelineRunResponse) Descriptor() ([]byte, []int) {
	return file_services_modelpipelinerun_v1_modelpipelinerun_proto_rawDescGZIP(), []int{4}
}

type UpdateModelPipelineRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.ModelPipelineRun `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *UpdateModelPipelineRunRequest) Reset() {
	*x = UpdateModelPipelineRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateModelPipelineRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateModelPipelineRunRequest) ProtoMessage() {}

func (x *UpdateModelPipelineRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateModelPipelineRunRequest.ProtoReflect.Descriptor instead.
func (*UpdateModelPipelineRunRequest) Descriptor() ([]byte, []int) {
	return file_services_modelpipelinerun_v1_modelpipelinerun_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateModelPipelineRunRequest) GetItem() *v1alpha1.ModelPipelineRun {
	if x != nil {
		return x.Item
	}
	return nil
}

type UpdateModelPipelineRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateModelPipelineRunResponse) Reset() {
	*x = UpdateModelPipelineRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateModelPipelineRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateModelPipelineRunResponse) ProtoMessage() {}

func (x *UpdateModelPipelineRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateModelPipelineRunResponse.ProtoReflect.Descriptor instead.
func (*UpdateModelPipelineRunResponse) Descriptor() ([]byte, []int) {
	return file_services_modelpipelinerun_v1_modelpipelinerun_proto_rawDescGZIP(), []int{6}
}

type GetModelPipelineRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetModelPipelineRunRequest) Reset() {
	*x = GetModelPipelineRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModelPipelineRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModelPipelineRunRequest) ProtoMessage() {}

func (x *GetModelPipelineRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModelPipelineRunRequest.ProtoReflect.Descriptor instead.
func (*GetModelPipelineRunRequest) Descriptor() ([]byte, []int) {
	return file_services_modelpipelinerun_v1_modelpipelinerun_proto_rawDescGZIP(), []int{7}
}

func (x *GetModelPipelineRunRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetModelPipelineRunRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetModelPipelineRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.ModelPipelineRun `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Yaml string                     `protobuf:"bytes,2,opt,name=yaml,proto3" json:"yaml,omitempty"`
}

func (x *GetModelPipelineRunResponse) Reset() {
	*x = GetModelPipelineRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModelPipelineRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModelPipelineRunResponse) ProtoMessage() {}

func (x *GetModelPipelineRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModelPipelineRunResponse.ProtoReflect.Descriptor instead.
func (*GetModelPipelineRunResponse) Descriptor() ([]byte, []int) {
	return file_services_modelpipelinerun_v1_modelpipelinerun_proto_rawDescGZIP(), []int{8}
}

func (x *GetModelPipelineRunResponse) GetItem() *v1alpha1.ModelPipelineRun {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *GetModelPipelineRunResponse) GetYaml() string {
	if x != nil {
		return x.Yaml
	}
	return ""
}

type DeleteModelPipelineRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteModelPipelineRunRequest) Reset() {
	*x = DeleteModelPipelineRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteModelPipelineRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteModelPipelineRunRequest) ProtoMessage() {}

func (x *DeleteModelPipelineRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteModelPipelineRunRequest.ProtoReflect.Descriptor instead.
func (*DeleteModelPipelineRunRequest) Descriptor() ([]byte, []int) {
	return file_services_modelpipelinerun_v1_modelpipelinerun_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteModelPipelineRunRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeleteModelPipelineRunRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteModelPipelineRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteModelPipelineRunResponse) Reset() {
	*x = DeleteModelPipelineRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteModelPipelineRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteModelPipelineRunResponse) ProtoMessage() {}

func (x *DeleteModelPipelineRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteModelPipelineRunResponse.ProtoReflect.Descriptor instead.
func (*DeleteModelPipelineRunResponse) Descriptor() ([]byte, []int) {
	return file_services_modelpipelinerun_v1_modelpipelinerun_proto_rawDescGZIP(), []int{10}
}

var File_services_modelpipelinerun_v1_modelpipelinerun_proto protoreflect.FileDescriptor

var file_services_modelpipelinerun_v1_modelpipelinerun_proto_rawDesc = []byte{
	0x0a, 0x33, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x2e, 0x76,
	0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf5, 0x01, 0x0a, 0x1c, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x75, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x7c, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x64, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72,
	0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x85, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7f, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5e, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x64, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x20, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7f, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5e, 0x0a, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x75, 0x6e, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x20, 0x0a, 0x1e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4e, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x79,
	0x61, 0x6d, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x22,
	0x51, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x20, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0x99, 0x0a, 0x0a, 0x17, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0xf5, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x73, 0x12, 0x58, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x59, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x73, 0x12, 0x8a, 0x02, 0x0a, 0x16, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x75, 0x6e, 0x12, 0x59, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x5a,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x70, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x33, 0x22, 0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72,
	0x75, 0x6e, 0x73, 0x3a, 0x10, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x72, 0x75, 0x6e, 0x12, 0xf6, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x12, 0x56, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70,
	0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x57, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0xab,
	0x02, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x12, 0x59, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x5a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x54, 0x1a, 0x40, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x70, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x73, 0x2f, 0x7b, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x10, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x12, 0xd1, 0x01, 0x0a,
	0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x12, 0x59, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70,
	0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x75, 0x6e, 0x2f, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_modelpipelinerun_v1_modelpipelinerun_proto_rawDescOnce sync.Once
	file_services_modelpipelinerun_v1_modelpipelinerun_proto_rawDescData = file_services_modelpipelinerun_v1_modelpipelinerun_proto_rawDesc
)

func file_services_modelpipelinerun_v1_modelpipelinerun_proto_rawDescGZIP() []byte {
	file_services_modelpipelinerun_v1_modelpipelinerun_proto_rawDescOnce.Do(func() {
		file_services_modelpipelinerun_v1_modelpipelinerun_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_modelpipelinerun_v1_modelpipelinerun_proto_rawDescData)
	})
	return file_services_modelpipelinerun_v1_modelpipelinerun_proto_rawDescData
}

var file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_services_modelpipelinerun_v1_modelpipelinerun_proto_goTypes = []interface{}{
	(*ListModelPipelineRunsRequest)(nil),   // 0: github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ListModelPipelineRunsRequest
	(*ListModelPipelineRunsResponse)(nil),  // 1: github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ListModelPipelineRunsResponse
	(*ModelPipelineRunResponse)(nil),       // 2: github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ModelPipelineRunResponse
	(*CreateModelPipelineRunRequest)(nil),  // 3: github.com.metaprov.modeldapi.services.modelpipelinerun.v1.CreateModelPipelineRunRequest
	(*CreateModelPipelineRunResponse)(nil), // 4: github.com.metaprov.modeldapi.services.modelpipelinerun.v1.CreateModelPipelineRunResponse
	(*UpdateModelPipelineRunRequest)(nil),  // 5: github.com.metaprov.modeldapi.services.modelpipelinerun.v1.UpdateModelPipelineRunRequest
	(*UpdateModelPipelineRunResponse)(nil), // 6: github.com.metaprov.modeldapi.services.modelpipelinerun.v1.UpdateModelPipelineRunResponse
	(*GetModelPipelineRunRequest)(nil),     // 7: github.com.metaprov.modeldapi.services.modelpipelinerun.v1.GetModelPipelineRunRequest
	(*GetModelPipelineRunResponse)(nil),    // 8: github.com.metaprov.modeldapi.services.modelpipelinerun.v1.GetModelPipelineRunResponse
	(*DeleteModelPipelineRunRequest)(nil),  // 9: github.com.metaprov.modeldapi.services.modelpipelinerun.v1.DeleteModelPipelineRunRequest
	(*DeleteModelPipelineRunResponse)(nil), // 10: github.com.metaprov.modeldapi.services.modelpipelinerun.v1.DeleteModelPipelineRunResponse
	nil,                                    // 11: github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ListModelPipelineRunsRequest.LabelsEntry
	(*v1alpha1.ModelPipelineRunList)(nil),  // 12: github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.ModelPipelineRunList
	(*v1alpha1.ModelPipelineRun)(nil),      // 13: github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.ModelPipelineRun
}
var file_services_modelpipelinerun_v1_modelpipelinerun_proto_depIdxs = []int32{
	11, // 0: github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ListModelPipelineRunsRequest.labels:type_name -> github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ListModelPipelineRunsRequest.LabelsEntry
	12, // 1: github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ListModelPipelineRunsResponse.items:type_name -> github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.ModelPipelineRunList
	13, // 2: github.com.metaprov.modeldapi.services.modelpipelinerun.v1.CreateModelPipelineRunRequest.item:type_name -> github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.ModelPipelineRun
	13, // 3: github.com.metaprov.modeldapi.services.modelpipelinerun.v1.UpdateModelPipelineRunRequest.item:type_name -> github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.ModelPipelineRun
	13, // 4: github.com.metaprov.modeldapi.services.modelpipelinerun.v1.GetModelPipelineRunResponse.item:type_name -> github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.ModelPipelineRun
	0,  // 5: github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ModelPipelineRunService.ListModelPipelineRuns:input_type -> github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ListModelPipelineRunsRequest
	3,  // 6: github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ModelPipelineRunService.CreateModelPipelineRun:input_type -> github.com.metaprov.modeldapi.services.modelpipelinerun.v1.CreateModelPipelineRunRequest
	7,  // 7: github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ModelPipelineRunService.GetModelPipelineRun:input_type -> github.com.metaprov.modeldapi.services.modelpipelinerun.v1.GetModelPipelineRunRequest
	5,  // 8: github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ModelPipelineRunService.UpdateModelPipelineRun:input_type -> github.com.metaprov.modeldapi.services.modelpipelinerun.v1.UpdateModelPipelineRunRequest
	9,  // 9: github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ModelPipelineRunService.DeleteModelPipelineRun:input_type -> github.com.metaprov.modeldapi.services.modelpipelinerun.v1.DeleteModelPipelineRunRequest
	1,  // 10: github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ModelPipelineRunService.ListModelPipelineRuns:output_type -> github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ListModelPipelineRunsResponse
	4,  // 11: github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ModelPipelineRunService.CreateModelPipelineRun:output_type -> github.com.metaprov.modeldapi.services.modelpipelinerun.v1.CreateModelPipelineRunResponse
	8,  // 12: github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ModelPipelineRunService.GetModelPipelineRun:output_type -> github.com.metaprov.modeldapi.services.modelpipelinerun.v1.GetModelPipelineRunResponse
	6,  // 13: github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ModelPipelineRunService.UpdateModelPipelineRun:output_type -> github.com.metaprov.modeldapi.services.modelpipelinerun.v1.UpdateModelPipelineRunResponse
	10, // 14: github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ModelPipelineRunService.DeleteModelPipelineRun:output_type -> github.com.metaprov.modeldapi.services.modelpipelinerun.v1.DeleteModelPipelineRunResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_services_modelpipelinerun_v1_modelpipelinerun_proto_init() }
func file_services_modelpipelinerun_v1_modelpipelinerun_proto_init() {
	if File_services_modelpipelinerun_v1_modelpipelinerun_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListModelPipelineRunsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListModelPipelineRunsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelPipelineRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateModelPipelineRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateModelPipelineRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateModelPipelineRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateModelPipelineRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModelPipelineRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModelPipelineRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteModelPipelineRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteModelPipelineRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_modelpipelinerun_v1_modelpipelinerun_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_modelpipelinerun_v1_modelpipelinerun_proto_goTypes,
		DependencyIndexes: file_services_modelpipelinerun_v1_modelpipelinerun_proto_depIdxs,
		MessageInfos:      file_services_modelpipelinerun_v1_modelpipelinerun_proto_msgTypes,
	}.Build()
	File_services_modelpipelinerun_v1_modelpipelinerun_proto = out.File
	file_services_modelpipelinerun_v1_modelpipelinerun_proto_rawDesc = nil
	file_services_modelpipelinerun_v1_modelpipelinerun_proto_goTypes = nil
	file_services_modelpipelinerun_v1_modelpipelinerun_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ModelPipelineRunServiceClient is the client API for ModelPipelineRunService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ModelPipelineRunServiceClient interface {
	ListModelPipelineRuns(ctx context.Context, in *ListModelPipelineRunsRequest, opts ...grpc.CallOption) (*ListModelPipelineRunsResponse, error)
	CreateModelPipelineRun(ctx context.Context, in *CreateModelPipelineRunRequest, opts ...grpc.CallOption) (*CreateModelPipelineRunResponse, error)
	GetModelPipelineRun(ctx context.Context, in *GetModelPipelineRunRequest, opts ...grpc.CallOption) (*GetModelPipelineRunResponse, error)
	UpdateModelPipelineRun(ctx context.Context, in *UpdateModelPipelineRunRequest, opts ...grpc.CallOption) (*UpdateModelPipelineRunResponse, error)
	DeleteModelPipelineRun(ctx context.Context, in *DeleteModelPipelineRunRequest, opts ...grpc.CallOption) (*DeleteModelPipelineRunResponse, error)
}

type modelPipelineRunServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewModelPipelineRunServiceClient(cc grpc.ClientConnInterface) ModelPipelineRunServiceClient {
	return &modelPipelineRunServiceClient{cc}
}

func (c *modelPipelineRunServiceClient) ListModelPipelineRuns(ctx context.Context, in *ListModelPipelineRunsRequest, opts ...grpc.CallOption) (*ListModelPipelineRunsResponse, error) {
	out := new(ListModelPipelineRunsResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ModelPipelineRunService/ListModelPipelineRuns", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelPipelineRunServiceClient) CreateModelPipelineRun(ctx context.Context, in *CreateModelPipelineRunRequest, opts ...grpc.CallOption) (*CreateModelPipelineRunResponse, error) {
	out := new(CreateModelPipelineRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ModelPipelineRunService/CreateModelPipelineRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelPipelineRunServiceClient) GetModelPipelineRun(ctx context.Context, in *GetModelPipelineRunRequest, opts ...grpc.CallOption) (*GetModelPipelineRunResponse, error) {
	out := new(GetModelPipelineRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ModelPipelineRunService/GetModelPipelineRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelPipelineRunServiceClient) UpdateModelPipelineRun(ctx context.Context, in *UpdateModelPipelineRunRequest, opts ...grpc.CallOption) (*UpdateModelPipelineRunResponse, error) {
	out := new(UpdateModelPipelineRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ModelPipelineRunService/UpdateModelPipelineRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelPipelineRunServiceClient) DeleteModelPipelineRun(ctx context.Context, in *DeleteModelPipelineRunRequest, opts ...grpc.CallOption) (*DeleteModelPipelineRunResponse, error) {
	out := new(DeleteModelPipelineRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ModelPipelineRunService/DeleteModelPipelineRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ModelPipelineRunServiceServer is the server API for ModelPipelineRunService service.
type ModelPipelineRunServiceServer interface {
	ListModelPipelineRuns(context.Context, *ListModelPipelineRunsRequest) (*ListModelPipelineRunsResponse, error)
	CreateModelPipelineRun(context.Context, *CreateModelPipelineRunRequest) (*CreateModelPipelineRunResponse, error)
	GetModelPipelineRun(context.Context, *GetModelPipelineRunRequest) (*GetModelPipelineRunResponse, error)
	UpdateModelPipelineRun(context.Context, *UpdateModelPipelineRunRequest) (*UpdateModelPipelineRunResponse, error)
	DeleteModelPipelineRun(context.Context, *DeleteModelPipelineRunRequest) (*DeleteModelPipelineRunResponse, error)
}

// UnimplementedModelPipelineRunServiceServer can be embedded to have forward compatible implementations.
type UnimplementedModelPipelineRunServiceServer struct {
}

func (*UnimplementedModelPipelineRunServiceServer) ListModelPipelineRuns(context.Context, *ListModelPipelineRunsRequest) (*ListModelPipelineRunsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListModelPipelineRuns not implemented")
}
func (*UnimplementedModelPipelineRunServiceServer) CreateModelPipelineRun(context.Context, *CreateModelPipelineRunRequest) (*CreateModelPipelineRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateModelPipelineRun not implemented")
}
func (*UnimplementedModelPipelineRunServiceServer) GetModelPipelineRun(context.Context, *GetModelPipelineRunRequest) (*GetModelPipelineRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetModelPipelineRun not implemented")
}
func (*UnimplementedModelPipelineRunServiceServer) UpdateModelPipelineRun(context.Context, *UpdateModelPipelineRunRequest) (*UpdateModelPipelineRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateModelPipelineRun not implemented")
}
func (*UnimplementedModelPipelineRunServiceServer) DeleteModelPipelineRun(context.Context, *DeleteModelPipelineRunRequest) (*DeleteModelPipelineRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteModelPipelineRun not implemented")
}

func RegisterModelPipelineRunServiceServer(s *grpc.Server, srv ModelPipelineRunServiceServer) {
	s.RegisterService(&_ModelPipelineRunService_serviceDesc, srv)
}

func _ModelPipelineRunService_ListModelPipelineRuns_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListModelPipelineRunsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelPipelineRunServiceServer).ListModelPipelineRuns(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ModelPipelineRunService/ListModelPipelineRuns",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelPipelineRunServiceServer).ListModelPipelineRuns(ctx, req.(*ListModelPipelineRunsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelPipelineRunService_CreateModelPipelineRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateModelPipelineRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelPipelineRunServiceServer).CreateModelPipelineRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ModelPipelineRunService/CreateModelPipelineRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelPipelineRunServiceServer).CreateModelPipelineRun(ctx, req.(*CreateModelPipelineRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelPipelineRunService_GetModelPipelineRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetModelPipelineRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelPipelineRunServiceServer).GetModelPipelineRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ModelPipelineRunService/GetModelPipelineRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelPipelineRunServiceServer).GetModelPipelineRun(ctx, req.(*GetModelPipelineRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelPipelineRunService_UpdateModelPipelineRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateModelPipelineRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelPipelineRunServiceServer).UpdateModelPipelineRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ModelPipelineRunService/UpdateModelPipelineRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelPipelineRunServiceServer).UpdateModelPipelineRun(ctx, req.(*UpdateModelPipelineRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelPipelineRunService_DeleteModelPipelineRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteModelPipelineRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelPipelineRunServiceServer).DeleteModelPipelineRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ModelPipelineRunService/DeleteModelPipelineRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelPipelineRunServiceServer).DeleteModelPipelineRun(ctx, req.(*DeleteModelPipelineRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ModelPipelineRunService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.metaprov.modeldapi.services.modelpipelinerun.v1.ModelPipelineRunService",
	HandlerType: (*ModelPipelineRunServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListModelPipelineRuns",
			Handler:    _ModelPipelineRunService_ListModelPipelineRuns_Handler,
		},
		{
			MethodName: "CreateModelPipelineRun",
			Handler:    _ModelPipelineRunService_CreateModelPipelineRun_Handler,
		},
		{
			MethodName: "GetModelPipelineRun",
			Handler:    _ModelPipelineRunService_GetModelPipelineRun_Handler,
		},
		{
			MethodName: "UpdateModelPipelineRun",
			Handler:    _ModelPipelineRunService_UpdateModelPipelineRun_Handler,
		},
		{
			MethodName: "DeleteModelPipelineRun",
			Handler:    _ModelPipelineRunService_DeleteModelPipelineRun_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/modelpipelinerun/v1/modelpipelinerun.proto",
}
