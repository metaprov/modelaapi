syntax = "proto3";
option go_package = "github.com/metaprov/modelaapi/services/common/v1";
package github.com.metaprov.modelaapi.services.common.v1;

message DatasetProfile {
    int32    cols                      = 1;
    int32    rows                      = 2;
    int32    filesize                  = 3;
    // return true if this dataset is imbalance.
    bool     imbalance                 = 4;
    repeated Plot plots                = 5;
    repeated ColumnProfile   columns   = 6;
    TableView    table                 = 7;
    string       hash                   = 8; // signature of the dataset profile.
}

/////////////////////////////////////////////////////////////////////////
///// Model profile
////////////////////////////////////////////////////////////////////////
message ModelProfile {
    string name                            = 1;
    repeated Plot plots                    = 2;
    map<string,float> importance           = 3; // hold the feature importance
    
}

/////////////////////////////////////////////////////////////////////////
///// Forecast profile
////////////////////////////////////////////////////////////////////////
message ForecastProfile {
    string name                            = 1;
    repeated Plot plots                    = 2;
}


/////////////////////////////////////////////////////////////////////////
///// Study profile
////////////////////////////////////////////////////////////////////////
message StudyProfile {
    repeated Plot plots          = 1;
    repeated ModelProfile models = 2;
    string trainingHash          = 3; 
    string testingHash           = 4;
    string validationHash        = 5;
}

message Plot {
    string name = 1;
    // The visualization title
    string title = 2;
    // image as bin
    bytes  img        = 3;
    // image file name
    string fname      = 4;
    // The url in the bucket
    string url        = 5;
}


message ColumnProfile {
	
    string    name            = 1;
    int32     count           = 2;
    string    type            = 3;
    int32     missing         = 4;
    float     percentMissing  = 5;
    int32     distinct        = 6;
    double    mean            = 7;
    string    mode            = 8;
    double    stddev          = 9;
    double    variance        = 10;
    double    min             = 11;
    double    max             = 12;
    double    kurtosis        = 13;
    double    skewness        = 14;
    double    sum             = 15;
    double    mad             = 16;
    double    zeros           = 17;
    double    p25             = 18;
    double    p50             = 19;
    double    p75             = 20;
    double    p100            = 21;
    double    iqr             = 22;
    double    cv              = 23;
    int32     top             = 24;
    int32     freq            = 25;
    bool      ignore          = 26;
    bool      label           = 27;
    Histogram histogram       = 29;
	int32     invalid         = 32; 
	double    importance      = 33; 
	bool      target          = 34; 
	bool      ignored         = 35; 
	bool      nullable        = 36; 
	bool      highCardinality = 37; 
	bool      highCorrWithOtherFeatures =38;   
	bool      lowCorrWithTarget =39;   
	bool      highMissingPct  = 40;   
	bool      skewed          = 41;   
	bool      id              = 42;   
	bool      constant        = 43;   
	bool      duplicate       = 44;   
	bool      reserved        = 45;  
    int32     outliers        = 46;	 
	bool      completeness    = 47;   
	double    distinctValueCount = 48;    
	double    mostFreqValuesRatio = 49;   
	double    indexOfPeculiarity = 50;   

}

message HistogramValue {
    string name = 1;
    float  v    = 2;
}

message Histogram {
    repeated HistogramValue values = 1;
}


/////////////////////////////////////////////////////////////////////
//// Namespace Info
////////////////////////////////////////////////////////////////////

message NamespaceInfo {
    enum NamespaceType {
        TENANT = 0;
        DATAPRODUCT = 1;
        LAB   = 2;
        SERVINGSITE = 3;
        MODELASYSTEM = 4;
        MODELACATALOG = 5;
    }
    NamespaceType type = 1;
    string Name        = 2;
    int32 accounts     = 3;
    int32 buckets      = 4;
    int32 labs         = 5;
    int32 servingsites = 6;
    int32 datasets     = 7;
    int32 datasources  = 8;
    int32 studies      = 9;
    int32 models       = 10;
}

message TableView {
    repeated string        cols = 1;
    repeated TableViewRow  rows = 2;
    repeated ColumnProfile profiles = 3;
}

message TableViewRow {
    repeated string values = 1;
}
