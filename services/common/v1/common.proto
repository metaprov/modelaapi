syntax = "proto3";
option go_package = "github.com/metaprov/modelaapi/services/common/v1";
package github.com.metaprov.modelaapi.services.common.v1;

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1/generated.proto";

message DatasetProfile {
  int32 cols = 1;
  int32 rows = 2;
  int32 filesize = 3;
  bool imbalance = 4;

  repeated Plot plots = 5;
  repeated github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.FeatureStatistics columns = 6;
  TableView table = 7;

  string hash = 8; // signature of the dataset profile.

  TableView groups = 10;  // return the list of group datasets in this dataset profile. only for datasets of type group forecast
  TimeSeriesProfile ts = 11;// if the dataset is a group dataset series, this is one profile of a single time series.
}

/////// Model Profile ///////

message ModelProfile {
  string name = 1;
  repeated Plot plots = 2;
  map<string, float> importance = 3; // hold the feature importance. only relevant for classification
  ROCCurve rocauc = 4; // roc auc curve . only relevant for classification
  PrecisionRecallCurve pr = 5; // precision recall curve. only relevant for classification
  repeated ROCCurve multiclassRocAuc = 6; // multi class roc curve.  only relevant for classification
  repeated PrecisionRecallCurve multiclassPR = 7; // multi class pr curve /. only relevant for classification
  repeated ForecastingAlgProfile algs = 8; // for group profile, we have this information about each algorithm
  TableView features = 10; // those are the tsfresh features computed over the group or the time series.
  TableView groups = 11; // in cast of group forecast those are the groups table view
}


message ForecastingAlgProfile {
  string algorithm = 1;
  TableView series = 2;
  TimeStat timeStat = 3; // statistics about the time column
  TableView valueStat = 4; // statistics about the value column
  TableView cv = 5; // cross validation result
  TableView forecast = 6;
  TableView metrics = 7;
  TableView changePoints = 8;
  repeated Plot plots = 10; // plots for this time series.
}

message TimeStat  {
    TableView gaps = 1;
    int32 added_timepoints = 2;
    int32 dropped_timepoints = 3;
    int32 data_points = 4;
    float mean_increments_secs = 5;
    google.protobuf.Timestamp min_timestamp = 6;
    google.protobuf.Timestamp max_timestamp = 7;
}

message ROCCurve {
  string classname = 1;
  int32  classid = 2;
  repeated double fpr = 3;
  repeated double tpr = 4;
  repeated double thresholds = 5;
}

message PrecisionRecallCurve {
  string classname = 1;
  int32  classid = 2;
  repeated double precision = 3;
  repeated double recall = 4;
  repeated double thresholds = 5;
}

/////// Forecast Profile ///////

message TimeSeriesProfile {
    KPSS kpss = 1;
    ADF  adf  = 2;
    ZivotAndrew zivot = 3;
    MannKendall kendall = 4;
    DurbinWatson dw = 5;
    string key = 6;
    TableView series = 7; // the series itself
    TableView valueStat = 8; // stat about the value column
    TableView featuresView = 9; // stat about the value column
    map<string,float> features = 10;  // return the list of features per group. only for datasets of type group forecast
}

// KPSS test
message KPSS {
  float kpss_stat = 1;
  float pvalue = 2;
  float lags = 3;
  map<string,float> crit = 4;
}

// ADF Test
message ADF {
  float adf = 1;
  float pvalue = 2;
  int32 usedlag = 3;
  int32 nobs = 4;
  map<string,float> crit = 5;

}

message ZivotAndrew {
  float zastat = 1;
  float pvalue = 2;
  map<string,float> crit = 3;
  int32 baselag = 4;
  int32 bpidx = 5;

}

message MannKendall {
  string trend = 1;
  float h = 2;
  float p = 3;
  float z = 4;
  float tau = 5;
  float s = 6;
  float var_s = 7;
  float slope = 8;
  float intercept = 9;

}

message DurbinWatson {
  float dw = 1;

}

message ForecastProfile {
  string name = 1;
  repeated Plot plots = 2;
}

/////// Study Profile ///////

message StudyProfile {
  repeated Plot plots = 1;
  repeated ModelProfile models = 2;
  string trainingHash = 3;
  string testingHash = 4;
  string validationHash = 5;
}

message Plot {
  // The name of the visualization
  string name = 1;
  // The title of the visualization
  string title = 2;
  // The binary image data
  bytes  img = 3;
  // The image file name
  string fname = 4;
  string url = 5;
}

message Histogram {
  repeated double values = 1;
  repeated double bins = 2;
  repeated string categories = 3;
}

/////// Namespace Info ///////

message NamespaceInfo {
  enum NamespaceType {
    TENANT = 0;
    DATAPRODUCT = 1;
    LAB = 2;
    SERVINGSITE = 3;
    MODELASYSTEM = 4;
    MODELACATALOG = 5;
  }
  NamespaceType type = 1;
  string Name = 2;
  int32 accounts = 3;
  int32 buckets = 4;
  int32 labs = 5;
  int32 servingsites = 6;
  int32 datasets = 7;
  int32 datasources = 8;
  int32 studies = 9;
  int32 models = 10;
}

message TableView {
  repeated string cols = 1;
  repeated TableViewRow rows = 2;
  repeated github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.FeatureStatistics profiles = 3;
}

message TableViewRow {
  repeated string values = 1;
}
