syntax = 'proto2';

option go_package = "github.com.metaprov.modeld.services";

package github.com.metaprov.modeld.services;


message ListMeta {
    // selfLink is a URL representing this object.
    // Populated by the system.
    // Read-only.
    // +optional
    optional string selfLink = 1;

    // String that identifies the server's internal version of this object that
    // can be used by clients to determine when objects have changed.
    // Value must be treated as opaque by clients and passed unmodified back to the server.
    // Populated by the system.
    // Read-only.
    // More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
    // +optional
    optional string resourceVersion = 2;

    // continue may be set if the user set a limit on the number of items returned, and indicates that
    // the server has more data available. The value is opaque and may be used to issue another request
    // to the endpoint that served this list to retrieve the next set of available objects. Continuing a
    // consistent list may not be possible if the server configuration has changed or more than a few
    // minutes have passed. The resourceVersion field returned when using this continue value will be
    // identical to the value in the first response, unless you have received this token from an error
    // message.
    optional string continue = 3;

    // remainingItemCount is the number of subsequent items in the list which are not included in this
    // list response. If the list request contained label or field selectors, then the number of
    // remaining items is unknown and the field will be left unset and omitted during serialization.
    // If the list is complete (either because it is not chunking or because this is the last chunk),
    // then there are no more remaining items and this field will be left unset and omitted during
    // serialization.
    // Servers older than v1.15 do not set this field.
    // The intended use of the remainingItemCount is *estimating* the size of a collection. Clients
    // should not rely on the remainingItemCount to be set or to be exact.
    //
    // This field is alpha and can be changed or removed without notice.
    //
    // +optional
    optional int64 remainingItemCount = 4;
}


message ObjectMeta {
    // Name must be unique within a namespace. Is required when creating resources, although
    // some resources may allow a client to request the generation of an appropriate name
    // automatically. Name is primarily intended for creation idempotence and configuration
    // definition.
    // Cannot be updated.
    // More info: http://kubernetes.io/docs/user-guide/identifiers#names
    // +optional
    optional string name = 1;

    // GenerateName is an optional prefix, used by the server, to generate a unique
    // name ONLY IF the Name field has not been provided.
    // If this field is used, the name returned to the client will be different
    // than the name passed. This value will also be combined with a unique suffix.
    // The provided value has the same validation rules as the Name field,
    // and may be truncated by the length of the suffix required to make the value
    // unique on the server.
    //
    // If this field is specified and the generated name exists, the server will
    // NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
    // ServerTimeout indicating a unique name could not be found in the time allotted, and the client
    // should retry (optionally after the time indicated in the Retry-After header).
    //
    // Applied only if Name is not specified.
    // More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
    // +optional
    optional string generateName = 2;

    // Namespace defines the space within each name must be unique. An empty namespace is
    // equivalent to the "default" namespace, but "default" is the canonical representation.
    // Not all objects are required to be scoped to a namespace - the value of this field for
    // those objects will be empty.
    //
    // Must be a DNS_LABEL.
    // Cannot be updated.
    // More info: http://kubernetes.io/docs/user-guide/namespaces
    // +optional
    optional string namespace = 3;

    // SelfLink is a URL representing this object.
    // Populated by the system.
    // Read-only.
    // +optional
    optional string selfLink = 4;

    // UID is the unique in time and space value for this object. It is typically generated by
    // the server on successful creation of a resource and is not allowed to change on PUT
    // operations.
    //
    // Populated by the system.
    // Read-only.
    // More info: http://kubernetes.io/docs/user-guide/identifiers#uids
    // +optional
    optional string uid = 5;

    // An opaque value that represents the internal version of this object that can
    // be used by clients to determine when objects have changed. May be used for optimistic
    // concurrency, change detection, and the watch operation on a resource or set of resources.
    // Clients must treat these values as opaque and passed unmodified back to the server.
    // They may only be valid for a particular resource or set of resources.
    //
    // Populated by the system.
    // Read-only.
    // Value must be treated as opaque by clients and .
    // More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
    // +optional
    optional string resourceVersion = 6;

    // A sequence number representing a specific generation of the desired state.
    // Populated by the system. Read-only.
    // +optional
    optional int64 generation = 7;

    // CreationTimestamp is a timestamp representing the server time when this object was
    // created. It is not guaranteed to be set in happens-before order across separate operations.
    // Clients may not set this value. It is represented in RFC3339 form and is in UTC.
    //
    // Populated by the system.
    // Read-only.
    // Null for lists.
    // More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
    // +optional
    optional Time creationTimestamp = 8;

    // DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
    // field is set by the server when a graceful deletion is requested by the user, and is not
    // directly settable by a client. The resource is expected to be deleted (no longer visible
    // from resource lists, and not reachable by name) after the time in this field, once the
    // finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
    // Once the deletionTimestamp is set, this value may not be unset or be set further into the
    // future, although it may be shortened or the resource may be deleted prior to this time.
    // For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
    // by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
    // the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
    // remove the pod from the API. In the presence of network partitions, this object may still
    // exist after this timestamp, until an administrator or automated process can determine the
    // resource is fully terminated.
    // If not set, graceful deletion of the object has not been requested.
    //
    // Populated by the system when a graceful deletion is requested.
    // Read-only.
    // More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
    // +optional
    optional Time deletionTimestamp = 9;

    // Number of seconds allowed for this object to gracefully terminate before
    // it will be removed from the system. Only set when deletionTimestamp is also set.
    // May only be shortened.
    // Read-only.
    // +optional
    optional int64 deletionGracePeriodSeconds = 10;

    // Map of string keys and values that can be used to organize and categorize
    // (scope and select) objects. May match selectors of replication controllers
    // and services.
    // More info: http://kubernetes.io/docs/user-guide/labels
    // +optional
    map<string, string> labels = 11;

    // Annotations is an unstructured key value map stored with a resource that may be
    // set by external tools to store and retrieve arbitrary metadata. They are not
    // queryable and should be preserved when modifying objects.
    // More info: http://kubernetes.io/docs/user-guide/annotations
    // +optional
    map<string, string> annotations = 12;


    // Must be empty before the object is deleted from the registry. Each entry
    // is an identifier for the responsible component that will remove the entry
    // from the list. If the deletionTimestamp of the object is non-nil, entries
    // in this list can only be removed.
    // +optional
    // +patchStrategy=merge
    repeated string finalizers = 14;

    // The name of the cluster which the object belongs to.
    // This is used to distinguish resources with same name and namespace in different clusters.
    // This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
    // +optional
    optional string clusterName = 15;
}

// Time is a wrapper around time.Time which supports correct
// marshaling to YAML and JSON.  Wrappers are provided for many
// of the factory methods that the time package offers.
//
// +protobuf.options.marshal=false
// +protobuf.as=Timestamp
// +protobuf.options.(gogoproto.goproto_stringer)=false
message Time {
    // Represents seconds of UTC time since Unix epoch
    // 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
    // 9999-12-31T23:59:59Z inclusive.
    optional int64 seconds = 1;

    // Non-negative fractions of a second at nanosecond resolution. Negative
    // second values with fractions must still have non-negative nanos values
    // that count forward in time. Must be from 0 to 999,999,999
    // inclusive. This field may be limited in precision depending on context.
    optional int32 nanos = 2;
}

// Timestamp is a struct that is equivalent to Time, but intended for
// protobuf marshalling/unmarshalling. It is generated into a serialization
// that matches Time. Do not use in Go structs.
message Timestamp {
    // Represents seconds of UTC time since Unix epoch
    // 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
    // 9999-12-31T23:59:59Z inclusive.
    optional int64 seconds = 1;

    // Non-negative fractions of a second at nanosecond resolution. Negative
    // second values with fractions must still have non-negative nanos values
    // that count forward in time. Must be from 0 to 999,999,999
    // inclusive. This field may be limited in precision depending on context.
    optional int32 nanos = 2;
}

// TypeMeta describes an individual object in an API response or request
// with strings representing the type of the object and its API schema version.
// Structures that are versioned or persisted should inline TypeMeta.
//
// +k8s:deepcopy-gen=false
message TypeMeta {
    // Kind is a string value representing the REST resource this object represents.
    // Servers may infer this from the endpoint the client submits requests to.
    // Cannot be updated.
    // In CamelCase.
    // More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
    // +optional
    optional string kind = 1;

    // APIVersion defines the versioned schema of this representation of an object.
    // Servers should convert recognized schemas to the latest internal value, and
    // may reject unrecognized values.
    // More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
    // +optional
    optional string apiVersion = 2;
}


message LocalObjectReference {
    // Name of the referent.
    // More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    // TODO: Add other useful fields. apiVersion, kind, uid?
    // +optional
    optional string name = 1;
}


message ObjectReference {
    // Kind of the referent.
    // More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
    // +optional
    optional string kind = 1;

    // Namespace of the referent.
    // More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    // +optional
    optional string namespace = 2;

    // Name of the referent.
    // More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    // +optional
    optional string name = 3;

    // UID of the referent.
    // More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    // +optional
    optional string uid = 4;

    // API version of the referent.
    // +optional
    optional string apiVersion = 5;

    // Specific resourceVersion to which this reference is made, if any.
    // More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
    // +optional
    optional string resourceVersion = 6;

    // If referring to a piece of an object instead of an entire object, this string
    // should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
    // For example, if the object reference is to a container within a pod, this would take on a value like:
    // "spec.containers{name}" (where "name" refers to the name of the container that triggered
    // the event) or if no container name is specified "spec.containers[2]" (container with
    // index 2 in this pod). This syntax is chosen only to have some well-defined way of
    // referencing a part of an object.
    // TODO: this design is not final and this field is subject to change in the future.
    // +optional
    optional string fieldPath = 7;
}


