// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: github.com/metaprov/modeldapi/services/curtain/v1/curtain.proto

package v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	v1alpha1 "github.com/metaprov/modeldapi/pkg/apis/inference/v1alpha1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ListCurtainsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Labels    map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PageSize  int32             `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string            `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListCurtainsRequest) Reset() {
	*x = ListCurtainsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCurtainsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCurtainsRequest) ProtoMessage() {}

func (x *ListCurtainsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCurtainsRequest.ProtoReflect.Descriptor instead.
func (*ListCurtainsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_rawDescGZIP(), []int{0}
}

func (x *ListCurtainsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListCurtainsRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ListCurtainsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListCurtainsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListCurtainsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items         *v1alpha1.CurtainList `protobuf:"bytes,1,opt,name=items,proto3" json:"items,omitempty"`
	NextPageToken string                `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListCurtainsResponse) Reset() {
	*x = ListCurtainsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCurtainsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCurtainsResponse) ProtoMessage() {}

func (x *ListCurtainsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCurtainsResponse.ProtoReflect.Descriptor instead.
func (*ListCurtainsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_rawDescGZIP(), []int{1}
}

func (x *ListCurtainsResponse) GetItems() *v1alpha1.CurtainList {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListCurtainsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateCurtainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateCurtainResponse) Reset() {
	*x = CreateCurtainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCurtainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCurtainResponse) ProtoMessage() {}

func (x *CreateCurtainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCurtainResponse.ProtoReflect.Descriptor instead.
func (*CreateCurtainResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_rawDescGZIP(), []int{2}
}

type CreateCurtainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.Curtain `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *CreateCurtainRequest) Reset() {
	*x = CreateCurtainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCurtainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCurtainRequest) ProtoMessage() {}

func (x *CreateCurtainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCurtainRequest.ProtoReflect.Descriptor instead.
func (*CreateCurtainRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_rawDescGZIP(), []int{3}
}

func (x *CreateCurtainRequest) GetItem() *v1alpha1.Curtain {
	if x != nil {
		return x.Item
	}
	return nil
}

type UpdateCurtainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.Curtain `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *UpdateCurtainRequest) Reset() {
	*x = UpdateCurtainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCurtainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCurtainRequest) ProtoMessage() {}

func (x *UpdateCurtainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCurtainRequest.ProtoReflect.Descriptor instead.
func (*UpdateCurtainRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateCurtainRequest) GetItem() *v1alpha1.Curtain {
	if x != nil {
		return x.Item
	}
	return nil
}

type UpdateCurtainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCurtainResponse) Reset() {
	*x = UpdateCurtainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCurtainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCurtainResponse) ProtoMessage() {}

func (x *UpdateCurtainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCurtainResponse.ProtoReflect.Descriptor instead.
func (*UpdateCurtainResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_rawDescGZIP(), []int{5}
}

type GetCurtainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetCurtainRequest) Reset() {
	*x = GetCurtainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurtainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurtainRequest) ProtoMessage() {}

func (x *GetCurtainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurtainRequest.ProtoReflect.Descriptor instead.
func (*GetCurtainRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_rawDescGZIP(), []int{6}
}

func (x *GetCurtainRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetCurtainRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetCurtainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.Curtain `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Yaml string            `protobuf:"bytes,2,opt,name=yaml,proto3" json:"yaml,omitempty"`
}

func (x *GetCurtainResponse) Reset() {
	*x = GetCurtainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurtainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurtainResponse) ProtoMessage() {}

func (x *GetCurtainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurtainResponse.ProtoReflect.Descriptor instead.
func (*GetCurtainResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_rawDescGZIP(), []int{7}
}

func (x *GetCurtainResponse) GetItem() *v1alpha1.Curtain {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *GetCurtainResponse) GetYaml() string {
	if x != nil {
		return x.Yaml
	}
	return ""
}

type DeleteCurtainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteCurtainRequest) Reset() {
	*x = DeleteCurtainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCurtainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCurtainRequest) ProtoMessage() {}

func (x *DeleteCurtainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCurtainRequest.ProtoReflect.Descriptor instead.
func (*DeleteCurtainRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteCurtainRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeleteCurtainRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteCurtainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCurtainResponse) Reset() {
	*x = DeleteCurtainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCurtainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCurtainResponse) ProtoMessage() {}

func (x *DeleteCurtainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCurtainResponse.ProtoReflect.Descriptor instead.
func (*DeleteCurtainResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_rawDescGZIP(), []int{9}
}

var File_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto protoreflect.FileDescriptor

var file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_rawDesc = []byte{
	0x0a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x75, 0x72, 0x74, 0x61, 0x69,
	0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70,
	0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x69, 0x6e, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96, 0x02,
	0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x6a, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x52, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x75, 0x72,
	0x74, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x72, 0x74,
	0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x39, 0x0a, 0x0b, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9c, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x74, 0x61,
	0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x26, 0x0a,
	0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x17, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6e,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x64, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x43, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x6e,
	0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x64, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x43, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x17,
	0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x72, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x80,
	0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x43, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x61, 0x6d,
	0x6c, 0x22, 0x48, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x72, 0x74, 0x61,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0x98, 0x08, 0x0a, 0x0e, 0x43, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xb5, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x46, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x63, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x75, 0x72, 0x74, 0x61, 0x69,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0e, 0x12, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x12,
	0xc1, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x72, 0x74, 0x61, 0x69,
	0x6e, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x75, 0x72, 0x74, 0x61,
	0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x72, 0x74,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x48, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x63, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x0c, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x3a, 0x07, 0x63, 0x75, 0x72, 0x74,
	0x61, 0x69, 0x6e, 0x12, 0xc2, 0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x74, 0x61,
	0x69, 0x6e, 0x12, 0x44, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x75, 0x72, 0x74,
	0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x74, 0x61, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x63, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x75, 0x72,
	0x74, 0x61, 0x69, 0x6e, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x7d, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0xf6, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x63, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x75, 0x72,
	0x74, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75,
	0x72, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x52, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x4c, 0x1a, 0x41, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x75, 0x72, 0x74, 0x61,
	0x69, 0x6e, 0x73, 0x2f, 0x7b, 0x63, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x7d,
	0x2f, 0x7b, 0x63, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x07, 0x63, 0x75, 0x72, 0x74, 0x61, 0x69,
	0x6e, 0x12, 0xcb, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x72, 0x74,
	0x61, 0x69, 0x6e, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x75, 0x72,
	0x74, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75,
	0x72, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x48, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x2a, 0x1f,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x75, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x7d, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x42,
	0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x75, 0x72, 0x74, 0x61, 0x69,
	0x6e, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_rawDescOnce sync.Once
	file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_rawDescData = file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_rawDesc
)

func file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_rawDescGZIP() []byte {
	file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_rawDescOnce.Do(func() {
		file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_rawDescData)
	})
	return file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_rawDescData
}

var file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_goTypes = []interface{}{
	(*ListCurtainsRequest)(nil),   // 0: github.com.metaprov.modeldapi.services.curtain.v1.ListCurtainsRequest
	(*ListCurtainsResponse)(nil),  // 1: github.com.metaprov.modeldapi.services.curtain.v1.ListCurtainsResponse
	(*CreateCurtainResponse)(nil), // 2: github.com.metaprov.modeldapi.services.curtain.v1.CreateCurtainResponse
	(*CreateCurtainRequest)(nil),  // 3: github.com.metaprov.modeldapi.services.curtain.v1.CreateCurtainRequest
	(*UpdateCurtainRequest)(nil),  // 4: github.com.metaprov.modeldapi.services.curtain.v1.UpdateCurtainRequest
	(*UpdateCurtainResponse)(nil), // 5: github.com.metaprov.modeldapi.services.curtain.v1.UpdateCurtainResponse
	(*GetCurtainRequest)(nil),     // 6: github.com.metaprov.modeldapi.services.curtain.v1.GetCurtainRequest
	(*GetCurtainResponse)(nil),    // 7: github.com.metaprov.modeldapi.services.curtain.v1.GetCurtainResponse
	(*DeleteCurtainRequest)(nil),  // 8: github.com.metaprov.modeldapi.services.curtain.v1.DeleteCurtainRequest
	(*DeleteCurtainResponse)(nil), // 9: github.com.metaprov.modeldapi.services.curtain.v1.DeleteCurtainResponse
	nil,                           // 10: github.com.metaprov.modeldapi.services.curtain.v1.ListCurtainsRequest.LabelsEntry
	(*v1alpha1.CurtainList)(nil),  // 11: github.com.metaprov.modeldapi.pkg.apis.inference.v1alpha1.CurtainList
	(*v1alpha1.Curtain)(nil),      // 12: github.com.metaprov.modeldapi.pkg.apis.inference.v1alpha1.Curtain
}
var file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_depIdxs = []int32{
	10, // 0: github.com.metaprov.modeldapi.services.curtain.v1.ListCurtainsRequest.labels:type_name -> github.com.metaprov.modeldapi.services.curtain.v1.ListCurtainsRequest.LabelsEntry
	11, // 1: github.com.metaprov.modeldapi.services.curtain.v1.ListCurtainsResponse.items:type_name -> github.com.metaprov.modeldapi.pkg.apis.inference.v1alpha1.CurtainList
	12, // 2: github.com.metaprov.modeldapi.services.curtain.v1.CreateCurtainRequest.item:type_name -> github.com.metaprov.modeldapi.pkg.apis.inference.v1alpha1.Curtain
	12, // 3: github.com.metaprov.modeldapi.services.curtain.v1.UpdateCurtainRequest.item:type_name -> github.com.metaprov.modeldapi.pkg.apis.inference.v1alpha1.Curtain
	12, // 4: github.com.metaprov.modeldapi.services.curtain.v1.GetCurtainResponse.item:type_name -> github.com.metaprov.modeldapi.pkg.apis.inference.v1alpha1.Curtain
	0,  // 5: github.com.metaprov.modeldapi.services.curtain.v1.CurtainService.ListCurtains:input_type -> github.com.metaprov.modeldapi.services.curtain.v1.ListCurtainsRequest
	3,  // 6: github.com.metaprov.modeldapi.services.curtain.v1.CurtainService.CreateCurtain:input_type -> github.com.metaprov.modeldapi.services.curtain.v1.CreateCurtainRequest
	6,  // 7: github.com.metaprov.modeldapi.services.curtain.v1.CurtainService.GetCurtain:input_type -> github.com.metaprov.modeldapi.services.curtain.v1.GetCurtainRequest
	4,  // 8: github.com.metaprov.modeldapi.services.curtain.v1.CurtainService.UpdateCurtain:input_type -> github.com.metaprov.modeldapi.services.curtain.v1.UpdateCurtainRequest
	8,  // 9: github.com.metaprov.modeldapi.services.curtain.v1.CurtainService.DeleteCurtain:input_type -> github.com.metaprov.modeldapi.services.curtain.v1.DeleteCurtainRequest
	1,  // 10: github.com.metaprov.modeldapi.services.curtain.v1.CurtainService.ListCurtains:output_type -> github.com.metaprov.modeldapi.services.curtain.v1.ListCurtainsResponse
	2,  // 11: github.com.metaprov.modeldapi.services.curtain.v1.CurtainService.CreateCurtain:output_type -> github.com.metaprov.modeldapi.services.curtain.v1.CreateCurtainResponse
	7,  // 12: github.com.metaprov.modeldapi.services.curtain.v1.CurtainService.GetCurtain:output_type -> github.com.metaprov.modeldapi.services.curtain.v1.GetCurtainResponse
	5,  // 13: github.com.metaprov.modeldapi.services.curtain.v1.CurtainService.UpdateCurtain:output_type -> github.com.metaprov.modeldapi.services.curtain.v1.UpdateCurtainResponse
	9,  // 14: github.com.metaprov.modeldapi.services.curtain.v1.CurtainService.DeleteCurtain:output_type -> github.com.metaprov.modeldapi.services.curtain.v1.DeleteCurtainResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_init() }
func file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_init() {
	if File_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCurtainsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCurtainsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCurtainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCurtainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCurtainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCurtainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurtainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurtainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCurtainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCurtainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_goTypes,
		DependencyIndexes: file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_depIdxs,
		MessageInfos:      file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_msgTypes,
	}.Build()
	File_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto = out.File
	file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_rawDesc = nil
	file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_goTypes = nil
	file_github_com_metaprov_modeldapi_services_curtain_v1_curtain_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CurtainServiceClient is the client API for CurtainService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CurtainServiceClient interface {
	ListCurtains(ctx context.Context, in *ListCurtainsRequest, opts ...grpc.CallOption) (*ListCurtainsResponse, error)
	CreateCurtain(ctx context.Context, in *CreateCurtainRequest, opts ...grpc.CallOption) (*CreateCurtainResponse, error)
	GetCurtain(ctx context.Context, in *GetCurtainRequest, opts ...grpc.CallOption) (*GetCurtainResponse, error)
	UpdateCurtain(ctx context.Context, in *UpdateCurtainRequest, opts ...grpc.CallOption) (*UpdateCurtainResponse, error)
	DeleteCurtain(ctx context.Context, in *DeleteCurtainRequest, opts ...grpc.CallOption) (*DeleteCurtainResponse, error)
}

type curtainServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCurtainServiceClient(cc grpc.ClientConnInterface) CurtainServiceClient {
	return &curtainServiceClient{cc}
}

func (c *curtainServiceClient) ListCurtains(ctx context.Context, in *ListCurtainsRequest, opts ...grpc.CallOption) (*ListCurtainsResponse, error) {
	out := new(ListCurtainsResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.curtain.v1.CurtainService/ListCurtains", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *curtainServiceClient) CreateCurtain(ctx context.Context, in *CreateCurtainRequest, opts ...grpc.CallOption) (*CreateCurtainResponse, error) {
	out := new(CreateCurtainResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.curtain.v1.CurtainService/CreateCurtain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *curtainServiceClient) GetCurtain(ctx context.Context, in *GetCurtainRequest, opts ...grpc.CallOption) (*GetCurtainResponse, error) {
	out := new(GetCurtainResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.curtain.v1.CurtainService/GetCurtain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *curtainServiceClient) UpdateCurtain(ctx context.Context, in *UpdateCurtainRequest, opts ...grpc.CallOption) (*UpdateCurtainResponse, error) {
	out := new(UpdateCurtainResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.curtain.v1.CurtainService/UpdateCurtain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *curtainServiceClient) DeleteCurtain(ctx context.Context, in *DeleteCurtainRequest, opts ...grpc.CallOption) (*DeleteCurtainResponse, error) {
	out := new(DeleteCurtainResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.curtain.v1.CurtainService/DeleteCurtain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CurtainServiceServer is the server API for CurtainService service.
type CurtainServiceServer interface {
	ListCurtains(context.Context, *ListCurtainsRequest) (*ListCurtainsResponse, error)
	CreateCurtain(context.Context, *CreateCurtainRequest) (*CreateCurtainResponse, error)
	GetCurtain(context.Context, *GetCurtainRequest) (*GetCurtainResponse, error)
	UpdateCurtain(context.Context, *UpdateCurtainRequest) (*UpdateCurtainResponse, error)
	DeleteCurtain(context.Context, *DeleteCurtainRequest) (*DeleteCurtainResponse, error)
}

// UnimplementedCurtainServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCurtainServiceServer struct {
}

func (*UnimplementedCurtainServiceServer) ListCurtains(context.Context, *ListCurtainsRequest) (*ListCurtainsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCurtains not implemented")
}
func (*UnimplementedCurtainServiceServer) CreateCurtain(context.Context, *CreateCurtainRequest) (*CreateCurtainResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCurtain not implemented")
}
func (*UnimplementedCurtainServiceServer) GetCurtain(context.Context, *GetCurtainRequest) (*GetCurtainResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCurtain not implemented")
}
func (*UnimplementedCurtainServiceServer) UpdateCurtain(context.Context, *UpdateCurtainRequest) (*UpdateCurtainResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCurtain not implemented")
}
func (*UnimplementedCurtainServiceServer) DeleteCurtain(context.Context, *DeleteCurtainRequest) (*DeleteCurtainResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCurtain not implemented")
}

func RegisterCurtainServiceServer(s *grpc.Server, srv CurtainServiceServer) {
	s.RegisterService(&_CurtainService_serviceDesc, srv)
}

func _CurtainService_ListCurtains_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCurtainsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CurtainServiceServer).ListCurtains(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.curtain.v1.CurtainService/ListCurtains",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CurtainServiceServer).ListCurtains(ctx, req.(*ListCurtainsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CurtainService_CreateCurtain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCurtainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CurtainServiceServer).CreateCurtain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.curtain.v1.CurtainService/CreateCurtain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CurtainServiceServer).CreateCurtain(ctx, req.(*CreateCurtainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CurtainService_GetCurtain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCurtainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CurtainServiceServer).GetCurtain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.curtain.v1.CurtainService/GetCurtain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CurtainServiceServer).GetCurtain(ctx, req.(*GetCurtainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CurtainService_UpdateCurtain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCurtainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CurtainServiceServer).UpdateCurtain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.curtain.v1.CurtainService/UpdateCurtain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CurtainServiceServer).UpdateCurtain(ctx, req.(*UpdateCurtainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CurtainService_DeleteCurtain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCurtainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CurtainServiceServer).DeleteCurtain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.curtain.v1.CurtainService/DeleteCurtain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CurtainServiceServer).DeleteCurtain(ctx, req.(*DeleteCurtainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CurtainService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.metaprov.modeldapi.services.curtain.v1.CurtainService",
	HandlerType: (*CurtainServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListCurtains",
			Handler:    _CurtainService_ListCurtains_Handler,
		},
		{
			MethodName: "CreateCurtain",
			Handler:    _CurtainService_CreateCurtain_Handler,
		},
		{
			MethodName: "GetCurtain",
			Handler:    _CurtainService_GetCurtain_Handler,
		},
		{
			MethodName: "UpdateCurtain",
			Handler:    _CurtainService_UpdateCurtain_Handler,
		},
		{
			MethodName: "DeleteCurtain",
			Handler:    _CurtainService_DeleteCurtain_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/metaprov/modeldapi/services/curtain/v1/curtain.proto",
}
