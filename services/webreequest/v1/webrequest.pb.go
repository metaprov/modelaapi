// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.7
// source: github.com/metaprov/modelaapi/services/webrequest/v1/webrequest.proto

package v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	v1alpha1 "github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ListWebRequestsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Labels    map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListWebRequestsRequest) Reset() {
	*x = ListWebRequestsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWebRequestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWebRequestsRequest) ProtoMessage() {}

func (x *ListWebRequestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWebRequestsRequest.ProtoReflect.Descriptor instead.
func (*ListWebRequestsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_rawDescGZIP(), []int{0}
}

func (x *ListWebRequestsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListWebRequestsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListWebRequestsRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ListWebRequestsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items *v1alpha1.WebRequestList `protobuf:"bytes,1,opt,name=items,proto3" json:"items,omitempty"`
}

func (x *ListWebRequestsResponse) Reset() {
	*x = ListWebRequestsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWebRequestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWebRequestsResponse) ProtoMessage() {}

func (x *ListWebRequestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWebRequestsResponse.ProtoReflect.Descriptor instead.
func (*ListWebRequestsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_rawDescGZIP(), []int{1}
}

func (x *ListWebRequestsResponse) GetItems() *v1alpha1.WebRequestList {
	if x != nil {
		return x.Items
	}
	return nil
}

type CreateWebRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateWebRequestResponse) Reset() {
	*x = CreateWebRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWebRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWebRequestResponse) ProtoMessage() {}

func (x *CreateWebRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWebRequestResponse.ProtoReflect.Descriptor instead.
func (*CreateWebRequestResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_rawDescGZIP(), []int{2}
}

type CreateWebRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.WebRequest `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *CreateWebRequestRequest) Reset() {
	*x = CreateWebRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWebRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWebRequestRequest) ProtoMessage() {}

func (x *CreateWebRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWebRequestRequest.ProtoReflect.Descriptor instead.
func (*CreateWebRequestRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_rawDescGZIP(), []int{3}
}

func (x *CreateWebRequestRequest) GetItem() *v1alpha1.WebRequest {
	if x != nil {
		return x.Item
	}
	return nil
}

type UpdateWebRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.WebRequest `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *UpdateWebRequestRequest) Reset() {
	*x = UpdateWebRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWebRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWebRequestRequest) ProtoMessage() {}

func (x *UpdateWebRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWebRequestRequest.ProtoReflect.Descriptor instead.
func (*UpdateWebRequestRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateWebRequestRequest) GetItem() *v1alpha1.WebRequest {
	if x != nil {
		return x.Item
	}
	return nil
}

type UpdateWebRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateWebRequestResponse) Reset() {
	*x = UpdateWebRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWebRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWebRequestResponse) ProtoMessage() {}

func (x *UpdateWebRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWebRequestResponse.ProtoReflect.Descriptor instead.
func (*UpdateWebRequestResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_rawDescGZIP(), []int{5}
}

type GetWebRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetWebRequestRequest) Reset() {
	*x = GetWebRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWebRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWebRequestRequest) ProtoMessage() {}

func (x *GetWebRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWebRequestRequest.ProtoReflect.Descriptor instead.
func (*GetWebRequestRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_rawDescGZIP(), []int{6}
}

func (x *GetWebRequestRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetWebRequestRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetWebRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.WebRequest `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Yaml string               `protobuf:"bytes,2,opt,name=yaml,proto3" json:"yaml,omitempty"`
}

func (x *GetWebRequestResponse) Reset() {
	*x = GetWebRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWebRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWebRequestResponse) ProtoMessage() {}

func (x *GetWebRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWebRequestResponse.ProtoReflect.Descriptor instead.
func (*GetWebRequestResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_rawDescGZIP(), []int{7}
}

func (x *GetWebRequestResponse) GetItem() *v1alpha1.WebRequest {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *GetWebRequestResponse) GetYaml() string {
	if x != nil {
		return x.Yaml
	}
	return ""
}

type DeleteWebRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteWebRequestRequest) Reset() {
	*x = DeleteWebRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWebRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWebRequestRequest) ProtoMessage() {}

func (x *DeleteWebRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWebRequestRequest.ProtoReflect.Descriptor instead.
func (*DeleteWebRequestRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteWebRequestRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeleteWebRequestRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteWebRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteWebRequestResponse) Reset() {
	*x = DeleteWebRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWebRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWebRequestResponse) ProtoMessage() {}

func (x *DeleteWebRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWebRequestResponse.ProtoReflect.Descriptor instead.
func (*DeleteWebRequestResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_rawDescGZIP(), []int{9}
}

type PauseWebRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PauseWebRequestRequest) Reset() {
	*x = PauseWebRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseWebRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseWebRequestRequest) ProtoMessage() {}

func (x *PauseWebRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseWebRequestRequest.ProtoReflect.Descriptor instead.
func (*PauseWebRequestRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_rawDescGZIP(), []int{10}
}

func (x *PauseWebRequestRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PauseWebRequestRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PauseWebRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PauseWebRequestResponse) Reset() {
	*x = PauseWebRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseWebRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseWebRequestResponse) ProtoMessage() {}

func (x *PauseWebRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseWebRequestResponse.ProtoReflect.Descriptor instead.
func (*PauseWebRequestResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_rawDescGZIP(), []int{11}
}

type ResumeWebRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ResumeWebRequestRequest) Reset() {
	*x = ResumeWebRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeWebRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeWebRequestRequest) ProtoMessage() {}

func (x *ResumeWebRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeWebRequestRequest.ProtoReflect.Descriptor instead.
func (*ResumeWebRequestRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_rawDescGZIP(), []int{12}
}

func (x *ResumeWebRequestRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ResumeWebRequestRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ResumeWebRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResumeWebRequestResponse) Reset() {
	*x = ResumeWebRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeWebRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeWebRequestResponse) ProtoMessage() {}

func (x *ResumeWebRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeWebRequestResponse.ProtoReflect.Descriptor instead.
func (*ResumeWebRequestResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_rawDescGZIP(), []int{13}
}

type RunWebRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.WebRequest `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *RunWebRequestRequest) Reset() {
	*x = RunWebRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunWebRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunWebRequestRequest) ProtoMessage() {}

func (x *RunWebRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunWebRequestRequest.ProtoReflect.Descriptor instead.
func (*RunWebRequestRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_rawDescGZIP(), []int{14}
}

func (x *RunWebRequestRequest) GetItem() *v1alpha1.WebRequest {
	if x != nil {
		return x.Item
	}
	return nil
}

type RunWebRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunWebRequestResponse) Reset() {
	*x = RunWebRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunWebRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunWebRequestResponse) ProtoMessage() {}

func (x *RunWebRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunWebRequestResponse.ProtoReflect.Descriptor instead.
func (*RunWebRequestResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_rawDescGZIP(), []int{15}
}

var File_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto protoreflect.FileDescriptor

var file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_rawDesc = []byte{
	0x0a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x77, 0x65, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x44, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xf7, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x70,
	0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x58,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x75, 0x0a, 0x17, 0x4c,
	0x69, 0x73, 0x74, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x57, 0x65, 0x62,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6f,
	0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x57,
	0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22,
	0x6f, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x22, 0x1a, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x48, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x57, 0x65,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x54, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x22, 0x4b, 0x0a, 0x17, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x4a, 0x0a, 0x16, 0x50, 0x61, 0x75, 0x73, 0x65, 0x57, 0x65, 0x62, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x19, 0x0a, 0x17, 0x50, 0x61, 0x75, 0x73, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x0a, 0x17, 0x52, 0x65,
	0x73, 0x75, 0x6d, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x75, 0x6d,
	0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x6c, 0x0a, 0x14, 0x52, 0x75, 0x6e, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x75, 0x6e, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xe9, 0x0b, 0x0a, 0x11, 0x57,
	0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0xc7, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x12, 0x4c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x65,
	0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x4d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x77,
	0x65, 0x62, 0x65, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0xcd, 0x01, 0x0a, 0x10, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x4d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4e,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x65, 0x62, 0x65,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0xc8, 0x01, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f,
	0x76, 0x31, 0x2f, 0x77, 0x65, 0x62, 0x65, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x7b,
	0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0xe8, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4d, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4e, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2f, 0x1a, 0x2a, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x65, 0x62, 0x65, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x2f, 0x7b, 0x77, 0x65, 0x62, 0x65, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x01, 0x2a,
	0x12, 0xd1, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77,
	0x65, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x4e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x65,
	0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x2a, 0x16, 0x2f, 0x76,
	0x31, 0x2f, 0x77, 0x65, 0x62, 0x65, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x7b, 0x6e,
	0x61, 0x6d, 0x65, 0x7d, 0x12, 0xd4, 0x01, 0x0a, 0x0f, 0x50, 0x61, 0x75, 0x73, 0x65, 0x57, 0x65,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x75, 0x73, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x77, 0x65, 0x62, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x75, 0x73, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x1c, 0x2f,
	0x76, 0x31, 0x2f, 0x77, 0x65, 0x62, 0x65, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x7b,
	0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x70, 0x61, 0x75, 0x73, 0x65, 0x12, 0xd8, 0x01, 0x0a, 0x10,
	0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x57, 0x65, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x4d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x57, 0x65,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x4e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x57, 0x65, 0x62,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x65, 0x62,
	0x65, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x3a,
	0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x77, 0x65, 0x62, 0x72, 0x65, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_rawDescOnce sync.Once
	file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_rawDescData = file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_rawDesc
)

func file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_rawDescGZIP() []byte {
	file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_rawDescOnce.Do(func() {
		file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_rawDescData)
	})
	return file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_rawDescData
}

var file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_goTypes = []interface{}{
	(*ListWebRequestsRequest)(nil),   // 0: github.com.metaprov.modelaapi.services.webrequest.v1.ListWebRequestsRequest
	(*ListWebRequestsResponse)(nil),  // 1: github.com.metaprov.modelaapi.services.webrequest.v1.ListWebRequestsResponse
	(*CreateWebRequestResponse)(nil), // 2: github.com.metaprov.modelaapi.services.webrequest.v1.CreateWebRequestResponse
	(*CreateWebRequestRequest)(nil),  // 3: github.com.metaprov.modelaapi.services.webrequest.v1.CreateWebRequestRequest
	(*UpdateWebRequestRequest)(nil),  // 4: github.com.metaprov.modelaapi.services.webrequest.v1.UpdateWebRequestRequest
	(*UpdateWebRequestResponse)(nil), // 5: github.com.metaprov.modelaapi.services.webrequest.v1.UpdateWebRequestResponse
	(*GetWebRequestRequest)(nil),     // 6: github.com.metaprov.modelaapi.services.webrequest.v1.GetWebRequestRequest
	(*GetWebRequestResponse)(nil),    // 7: github.com.metaprov.modelaapi.services.webrequest.v1.GetWebRequestResponse
	(*DeleteWebRequestRequest)(nil),  // 8: github.com.metaprov.modelaapi.services.webrequest.v1.DeleteWebRequestRequest
	(*DeleteWebRequestResponse)(nil), // 9: github.com.metaprov.modelaapi.services.webrequest.v1.DeleteWebRequestResponse
	(*PauseWebRequestRequest)(nil),   // 10: github.com.metaprov.modelaapi.services.webrequest.v1.PauseWebRequestRequest
	(*PauseWebRequestResponse)(nil),  // 11: github.com.metaprov.modelaapi.services.webrequest.v1.PauseWebRequestResponse
	(*ResumeWebRequestRequest)(nil),  // 12: github.com.metaprov.modelaapi.services.webrequest.v1.ResumeWebRequestRequest
	(*ResumeWebRequestResponse)(nil), // 13: github.com.metaprov.modelaapi.services.webrequest.v1.ResumeWebRequestResponse
	(*RunWebRequestRequest)(nil),     // 14: github.com.metaprov.modelaapi.services.webrequest.v1.RunWebRequestRequest
	(*RunWebRequestResponse)(nil),    // 15: github.com.metaprov.modelaapi.services.webrequest.v1.RunWebRequestResponse
	nil,                              // 16: github.com.metaprov.modelaapi.services.webrequest.v1.ListWebRequestsRequest.LabelsEntry
	(*v1alpha1.WebRequestList)(nil),  // 17: github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.WebRequestList
	(*v1alpha1.WebRequest)(nil),      // 18: github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.WebRequest
}
var file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_depIdxs = []int32{
	16, // 0: github.com.metaprov.modelaapi.services.webrequest.v1.ListWebRequestsRequest.labels:type_name -> github.com.metaprov.modelaapi.services.webrequest.v1.ListWebRequestsRequest.LabelsEntry
	17, // 1: github.com.metaprov.modelaapi.services.webrequest.v1.ListWebRequestsResponse.items:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.WebRequestList
	18, // 2: github.com.metaprov.modelaapi.services.webrequest.v1.CreateWebRequestRequest.item:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.WebRequest
	18, // 3: github.com.metaprov.modelaapi.services.webrequest.v1.UpdateWebRequestRequest.item:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.WebRequest
	18, // 4: github.com.metaprov.modelaapi.services.webrequest.v1.GetWebRequestResponse.item:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.WebRequest
	18, // 5: github.com.metaprov.modelaapi.services.webrequest.v1.RunWebRequestRequest.item:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.WebRequest
	0,  // 6: github.com.metaprov.modelaapi.services.webrequest.v1.WebRequestService.ListWebRequests:input_type -> github.com.metaprov.modelaapi.services.webrequest.v1.ListWebRequestsRequest
	3,  // 7: github.com.metaprov.modelaapi.services.webrequest.v1.WebRequestService.CreateWebRequest:input_type -> github.com.metaprov.modelaapi.services.webrequest.v1.CreateWebRequestRequest
	6,  // 8: github.com.metaprov.modelaapi.services.webrequest.v1.WebRequestService.GetWebRequest:input_type -> github.com.metaprov.modelaapi.services.webrequest.v1.GetWebRequestRequest
	4,  // 9: github.com.metaprov.modelaapi.services.webrequest.v1.WebRequestService.UpdateWebRequest:input_type -> github.com.metaprov.modelaapi.services.webrequest.v1.UpdateWebRequestRequest
	8,  // 10: github.com.metaprov.modelaapi.services.webrequest.v1.WebRequestService.DeleteWebRequest:input_type -> github.com.metaprov.modelaapi.services.webrequest.v1.DeleteWebRequestRequest
	10, // 11: github.com.metaprov.modelaapi.services.webrequest.v1.WebRequestService.PauseWebRequest:input_type -> github.com.metaprov.modelaapi.services.webrequest.v1.PauseWebRequestRequest
	12, // 12: github.com.metaprov.modelaapi.services.webrequest.v1.WebRequestService.ResumeWebRequest:input_type -> github.com.metaprov.modelaapi.services.webrequest.v1.ResumeWebRequestRequest
	1,  // 13: github.com.metaprov.modelaapi.services.webrequest.v1.WebRequestService.ListWebRequests:output_type -> github.com.metaprov.modelaapi.services.webrequest.v1.ListWebRequestsResponse
	2,  // 14: github.com.metaprov.modelaapi.services.webrequest.v1.WebRequestService.CreateWebRequest:output_type -> github.com.metaprov.modelaapi.services.webrequest.v1.CreateWebRequestResponse
	7,  // 15: github.com.metaprov.modelaapi.services.webrequest.v1.WebRequestService.GetWebRequest:output_type -> github.com.metaprov.modelaapi.services.webrequest.v1.GetWebRequestResponse
	5,  // 16: github.com.metaprov.modelaapi.services.webrequest.v1.WebRequestService.UpdateWebRequest:output_type -> github.com.metaprov.modelaapi.services.webrequest.v1.UpdateWebRequestResponse
	9,  // 17: github.com.metaprov.modelaapi.services.webrequest.v1.WebRequestService.DeleteWebRequest:output_type -> github.com.metaprov.modelaapi.services.webrequest.v1.DeleteWebRequestResponse
	11, // 18: github.com.metaprov.modelaapi.services.webrequest.v1.WebRequestService.PauseWebRequest:output_type -> github.com.metaprov.modelaapi.services.webrequest.v1.PauseWebRequestResponse
	13, // 19: github.com.metaprov.modelaapi.services.webrequest.v1.WebRequestService.ResumeWebRequest:output_type -> github.com.metaprov.modelaapi.services.webrequest.v1.ResumeWebRequestResponse
	13, // [13:20] is the sub-list for method output_type
	6,  // [6:13] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_init() }
func file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_init() {
	if File_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWebRequestsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWebRequestsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWebRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWebRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWebRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWebRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWebRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWebRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWebRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWebRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseWebRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseWebRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeWebRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeWebRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunWebRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunWebRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_goTypes,
		DependencyIndexes: file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_depIdxs,
		MessageInfos:      file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_msgTypes,
	}.Build()
	File_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto = out.File
	file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_rawDesc = nil
	file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_goTypes = nil
	file_github_com_metaprov_modelaapi_services_webrequest_v1_webrequest_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// WebRequestServiceClient is the client API for WebRequestService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WebRequestServiceClient interface {
	ListWebRequests(ctx context.Context, in *ListWebRequestsRequest, opts ...grpc.CallOption) (*ListWebRequestsResponse, error)
	CreateWebRequest(ctx context.Context, in *CreateWebRequestRequest, opts ...grpc.CallOption) (*CreateWebRequestResponse, error)
	GetWebRequest(ctx context.Context, in *GetWebRequestRequest, opts ...grpc.CallOption) (*GetWebRequestResponse, error)
	UpdateWebRequest(ctx context.Context, in *UpdateWebRequestRequest, opts ...grpc.CallOption) (*UpdateWebRequestResponse, error)
	DeleteWebRequest(ctx context.Context, in *DeleteWebRequestRequest, opts ...grpc.CallOption) (*DeleteWebRequestResponse, error)
	PauseWebRequest(ctx context.Context, in *PauseWebRequestRequest, opts ...grpc.CallOption) (*PauseWebRequestResponse, error)
	ResumeWebRequest(ctx context.Context, in *ResumeWebRequestRequest, opts ...grpc.CallOption) (*ResumeWebRequestResponse, error)
}

type webRequestServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewWebRequestServiceClient(cc grpc.ClientConnInterface) WebRequestServiceClient {
	return &webRequestServiceClient{cc}
}

func (c *webRequestServiceClient) ListWebRequests(ctx context.Context, in *ListWebRequestsRequest, opts ...grpc.CallOption) (*ListWebRequestsResponse, error) {
	out := new(ListWebRequestsResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.webrequest.v1.WebRequestService/ListWebRequests", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webRequestServiceClient) CreateWebRequest(ctx context.Context, in *CreateWebRequestRequest, opts ...grpc.CallOption) (*CreateWebRequestResponse, error) {
	out := new(CreateWebRequestResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.webrequest.v1.WebRequestService/CreateWebRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webRequestServiceClient) GetWebRequest(ctx context.Context, in *GetWebRequestRequest, opts ...grpc.CallOption) (*GetWebRequestResponse, error) {
	out := new(GetWebRequestResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.webrequest.v1.WebRequestService/GetWebRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webRequestServiceClient) UpdateWebRequest(ctx context.Context, in *UpdateWebRequestRequest, opts ...grpc.CallOption) (*UpdateWebRequestResponse, error) {
	out := new(UpdateWebRequestResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.webrequest.v1.WebRequestService/UpdateWebRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webRequestServiceClient) DeleteWebRequest(ctx context.Context, in *DeleteWebRequestRequest, opts ...grpc.CallOption) (*DeleteWebRequestResponse, error) {
	out := new(DeleteWebRequestResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.webrequest.v1.WebRequestService/DeleteWebRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webRequestServiceClient) PauseWebRequest(ctx context.Context, in *PauseWebRequestRequest, opts ...grpc.CallOption) (*PauseWebRequestResponse, error) {
	out := new(PauseWebRequestResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.webrequest.v1.WebRequestService/PauseWebRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webRequestServiceClient) ResumeWebRequest(ctx context.Context, in *ResumeWebRequestRequest, opts ...grpc.CallOption) (*ResumeWebRequestResponse, error) {
	out := new(ResumeWebRequestResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.webrequest.v1.WebRequestService/ResumeWebRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WebRequestServiceServer is the server API for WebRequestService service.
type WebRequestServiceServer interface {
	ListWebRequests(context.Context, *ListWebRequestsRequest) (*ListWebRequestsResponse, error)
	CreateWebRequest(context.Context, *CreateWebRequestRequest) (*CreateWebRequestResponse, error)
	GetWebRequest(context.Context, *GetWebRequestRequest) (*GetWebRequestResponse, error)
	UpdateWebRequest(context.Context, *UpdateWebRequestRequest) (*UpdateWebRequestResponse, error)
	DeleteWebRequest(context.Context, *DeleteWebRequestRequest) (*DeleteWebRequestResponse, error)
	PauseWebRequest(context.Context, *PauseWebRequestRequest) (*PauseWebRequestResponse, error)
	ResumeWebRequest(context.Context, *ResumeWebRequestRequest) (*ResumeWebRequestResponse, error)
}

// UnimplementedWebRequestServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWebRequestServiceServer struct {
}

func (*UnimplementedWebRequestServiceServer) ListWebRequests(context.Context, *ListWebRequestsRequest) (*ListWebRequestsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListWebRequests not implemented")
}
func (*UnimplementedWebRequestServiceServer) CreateWebRequest(context.Context, *CreateWebRequestRequest) (*CreateWebRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWebRequest not implemented")
}
func (*UnimplementedWebRequestServiceServer) GetWebRequest(context.Context, *GetWebRequestRequest) (*GetWebRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWebRequest not implemented")
}
func (*UnimplementedWebRequestServiceServer) UpdateWebRequest(context.Context, *UpdateWebRequestRequest) (*UpdateWebRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateWebRequest not implemented")
}
func (*UnimplementedWebRequestServiceServer) DeleteWebRequest(context.Context, *DeleteWebRequestRequest) (*DeleteWebRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteWebRequest not implemented")
}
func (*UnimplementedWebRequestServiceServer) PauseWebRequest(context.Context, *PauseWebRequestRequest) (*PauseWebRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PauseWebRequest not implemented")
}
func (*UnimplementedWebRequestServiceServer) ResumeWebRequest(context.Context, *ResumeWebRequestRequest) (*ResumeWebRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResumeWebRequest not implemented")
}

func RegisterWebRequestServiceServer(s *grpc.Server, srv WebRequestServiceServer) {
	s.RegisterService(&_WebRequestService_serviceDesc, srv)
}

func _WebRequestService_ListWebRequests_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListWebRequestsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebRequestServiceServer).ListWebRequests(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.webrequest.v1.WebRequestService/ListWebRequests",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebRequestServiceServer).ListWebRequests(ctx, req.(*ListWebRequestsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebRequestService_CreateWebRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWebRequestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebRequestServiceServer).CreateWebRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.webrequest.v1.WebRequestService/CreateWebRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebRequestServiceServer).CreateWebRequest(ctx, req.(*CreateWebRequestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebRequestService_GetWebRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWebRequestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebRequestServiceServer).GetWebRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.webrequest.v1.WebRequestService/GetWebRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebRequestServiceServer).GetWebRequest(ctx, req.(*GetWebRequestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebRequestService_UpdateWebRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateWebRequestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebRequestServiceServer).UpdateWebRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.webrequest.v1.WebRequestService/UpdateWebRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebRequestServiceServer).UpdateWebRequest(ctx, req.(*UpdateWebRequestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebRequestService_DeleteWebRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteWebRequestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebRequestServiceServer).DeleteWebRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.webrequest.v1.WebRequestService/DeleteWebRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebRequestServiceServer).DeleteWebRequest(ctx, req.(*DeleteWebRequestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebRequestService_PauseWebRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PauseWebRequestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebRequestServiceServer).PauseWebRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.webrequest.v1.WebRequestService/PauseWebRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebRequestServiceServer).PauseWebRequest(ctx, req.(*PauseWebRequestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebRequestService_ResumeWebRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResumeWebRequestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebRequestServiceServer).ResumeWebRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.webrequest.v1.WebRequestService/ResumeWebRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebRequestServiceServer).ResumeWebRequest(ctx, req.(*ResumeWebRequestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WebRequestService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.metaprov.modelaapi.services.webrequest.v1.WebRequestService",
	HandlerType: (*WebRequestServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListWebRequests",
			Handler:    _WebRequestService_ListWebRequests_Handler,
		},
		{
			MethodName: "CreateWebRequest",
			Handler:    _WebRequestService_CreateWebRequest_Handler,
		},
		{
			MethodName: "GetWebRequest",
			Handler:    _WebRequestService_GetWebRequest_Handler,
		},
		{
			MethodName: "UpdateWebRequest",
			Handler:    _WebRequestService_UpdateWebRequest_Handler,
		},
		{
			MethodName: "DeleteWebRequest",
			Handler:    _WebRequestService_DeleteWebRequest_Handler,
		},
		{
			MethodName: "PauseWebRequest",
			Handler:    _WebRequestService_PauseWebRequest_Handler,
		},
		{
			MethodName: "ResumeWebRequest",
			Handler:    _WebRequestService_ResumeWebRequest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/metaprov/modelaapi/services/webrequest/v1/webrequest.proto",
}
