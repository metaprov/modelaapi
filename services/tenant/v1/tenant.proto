syntax = "proto3";
option go_package = "github.com/metaprov/modelaapi/services/tenant/v1";
package github.com.metaprov.modelaapi.services.tenant.v1;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "github.com/metaprov/modelaapi/pkg/apis/infra/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/pkg/apis/training/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/pkg/apis/inference/v1alpha1/generated.proto";

message ListTenantsRequest {
    string namespace = 1;
    map<string,string> labels =3;
}

message ListTenantsResponse {
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList tenants = 1;
    string next_page_token = 2;
}

message CreateTenantRequest {
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant tenant = 4;
}

message CreateTenantResponse {

}

message UpdateTenantRequest {
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant tenant = 1;
    google.protobuf.FieldMask field_mask = 2;
}

message UpdateTenantResponse {

}

message GetTenantRequest {
    string namespace = 1;
    string name      = 2;
}


message GetTenantResponse {
    github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant  tenant = 1;
    repeated github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert alerts = 2;
    repeated github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset datasets = 3;
    repeated github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study studies = 4;
    repeated github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Model models = 5;
    repeated github.com.metaprov.modelaapi.pkg.apis.inference.v1alpha1.Predictor predictors = 6;
    string yaml = 7;
}


message DeleteTenantRequest {
    string namespace = 1;
    string name      = 2;
}

message DeleteTenantResponse {

}


service TenantService {
    rpc ListTenants(ListTenantsRequest) returns (ListTenantsResponse) {
        option (google.api.http).get = "/v1/tenants/{namespace}";
    }
    rpc CreateTenant(CreateTenantRequest) returns (CreateTenantResponse) {
        option (google.api.http) = {
			post: "/v1/tenants"
			body: "*"
		};
    }
    rpc GetTenant(GetTenantRequest) returns (GetTenantResponse) {
        option (google.api.http).get = "/v1/tenants/{namespace}/{name}";
    }
    rpc UpdateTenant(UpdateTenantRequest) returns (UpdateTenantResponse) {
        option (google.api.http) = {
			put: "/v1/tenants/{tenant.metadata.namespace}/{tenant.metadata.name}"
			body: "*"
		};
    }

    rpc DeleteTenant(DeleteTenantRequest) returns (DeleteTenantResponse) {}
}