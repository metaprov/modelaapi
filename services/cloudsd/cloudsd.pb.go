// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: services/cloudsd/cloudsd.proto

package cloudsd

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	v1alpha1 "github.com/metaprov/modeldapi/pkg/apis/infra/v1alpha1"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ShutdownRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShutdownRequest) Reset()         { *m = ShutdownRequest{} }
func (m *ShutdownRequest) String() string { return proto.CompactTextString(m) }
func (*ShutdownRequest) ProtoMessage()    {}
func (*ShutdownRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7fdf04388c023e2c, []int{0}
}
func (m *ShutdownRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShutdownRequest.Unmarshal(m, b)
}
func (m *ShutdownRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShutdownRequest.Marshal(b, m, deterministic)
}
func (m *ShutdownRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShutdownRequest.Merge(m, src)
}
func (m *ShutdownRequest) XXX_Size() int {
	return xxx_messageInfo_ShutdownRequest.Size(m)
}
func (m *ShutdownRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShutdownRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShutdownRequest proto.InternalMessageInfo

type ShutdownResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShutdownResponse) Reset()         { *m = ShutdownResponse{} }
func (m *ShutdownResponse) String() string { return proto.CompactTextString(m) }
func (*ShutdownResponse) ProtoMessage()    {}
func (*ShutdownResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7fdf04388c023e2c, []int{1}
}
func (m *ShutdownResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShutdownResponse.Unmarshal(m, b)
}
func (m *ShutdownResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShutdownResponse.Marshal(b, m, deterministic)
}
func (m *ShutdownResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShutdownResponse.Merge(m, src)
}
func (m *ShutdownResponse) XXX_Size() int {
	return xxx_messageInfo_ShutdownResponse.Size(m)
}
func (m *ShutdownResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ShutdownResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ShutdownResponse proto.InternalMessageInfo

type VirtualBucketExistRequest struct {
	Name                 string                   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CredNamespace        string                   `protobuf:"bytes,2,opt,name=credNamespace,proto3" json:"credNamespace,omitempty"`
	CredName             string                   `protobuf:"bytes,3,opt,name=credName,proto3" json:"credName,omitempty"`
	ConnectionSpec       *v1alpha1.ConnectionSpec `protobuf:"bytes,4,opt,name=connectionSpec,proto3" json:"connectionSpec,omitempty"`
	Secret               map[string][]byte        `protobuf:"bytes,5,rep,name=secret,proto3" json:"secret,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *VirtualBucketExistRequest) Reset()         { *m = VirtualBucketExistRequest{} }
func (m *VirtualBucketExistRequest) String() string { return proto.CompactTextString(m) }
func (*VirtualBucketExistRequest) ProtoMessage()    {}
func (*VirtualBucketExistRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7fdf04388c023e2c, []int{2}
}
func (m *VirtualBucketExistRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualBucketExistRequest.Unmarshal(m, b)
}
func (m *VirtualBucketExistRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualBucketExistRequest.Marshal(b, m, deterministic)
}
func (m *VirtualBucketExistRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualBucketExistRequest.Merge(m, src)
}
func (m *VirtualBucketExistRequest) XXX_Size() int {
	return xxx_messageInfo_VirtualBucketExistRequest.Size(m)
}
func (m *VirtualBucketExistRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualBucketExistRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualBucketExistRequest proto.InternalMessageInfo

func (m *VirtualBucketExistRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VirtualBucketExistRequest) GetCredNamespace() string {
	if m != nil {
		return m.CredNamespace
	}
	return ""
}

func (m *VirtualBucketExistRequest) GetCredName() string {
	if m != nil {
		return m.CredName
	}
	return ""
}

func (m *VirtualBucketExistRequest) GetConnectionSpec() *v1alpha1.ConnectionSpec {
	if m != nil {
		return m.ConnectionSpec
	}
	return nil
}

func (m *VirtualBucketExistRequest) GetSecret() map[string][]byte {
	if m != nil {
		return m.Secret
	}
	return nil
}

type VirtualBucketExistResponse struct {
	Exist                bool     `protobuf:"varint,1,opt,name=exist,proto3" json:"exist,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VirtualBucketExistResponse) Reset()         { *m = VirtualBucketExistResponse{} }
func (m *VirtualBucketExistResponse) String() string { return proto.CompactTextString(m) }
func (*VirtualBucketExistResponse) ProtoMessage()    {}
func (*VirtualBucketExistResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7fdf04388c023e2c, []int{3}
}
func (m *VirtualBucketExistResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualBucketExistResponse.Unmarshal(m, b)
}
func (m *VirtualBucketExistResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualBucketExistResponse.Marshal(b, m, deterministic)
}
func (m *VirtualBucketExistResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualBucketExistResponse.Merge(m, src)
}
func (m *VirtualBucketExistResponse) XXX_Size() int {
	return xxx_messageInfo_VirtualBucketExistResponse.Size(m)
}
func (m *VirtualBucketExistResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualBucketExistResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualBucketExistResponse proto.InternalMessageInfo

func (m *VirtualBucketExistResponse) GetExist() bool {
	if m != nil {
		return m.Exist
	}
	return false
}

type KeyExistInVirtualBucketRequest struct {
	Region               string                   `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Name                 string                   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Key                  string                   `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	CredNamespace        string                   `protobuf:"bytes,4,opt,name=credNamespace,proto3" json:"credNamespace,omitempty"`
	CredName             string                   `protobuf:"bytes,5,opt,name=credName,proto3" json:"credName,omitempty"`
	ConnectionSpec       *v1alpha1.ConnectionSpec `protobuf:"bytes,6,opt,name=connectionSpec,proto3" json:"connectionSpec,omitempty"`
	Secret               map[string][]byte        `protobuf:"bytes,7,rep,name=secret,proto3" json:"secret,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *KeyExistInVirtualBucketRequest) Reset()         { *m = KeyExistInVirtualBucketRequest{} }
func (m *KeyExistInVirtualBucketRequest) String() string { return proto.CompactTextString(m) }
func (*KeyExistInVirtualBucketRequest) ProtoMessage()    {}
func (*KeyExistInVirtualBucketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7fdf04388c023e2c, []int{4}
}
func (m *KeyExistInVirtualBucketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyExistInVirtualBucketRequest.Unmarshal(m, b)
}
func (m *KeyExistInVirtualBucketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyExistInVirtualBucketRequest.Marshal(b, m, deterministic)
}
func (m *KeyExistInVirtualBucketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyExistInVirtualBucketRequest.Merge(m, src)
}
func (m *KeyExistInVirtualBucketRequest) XXX_Size() int {
	return xxx_messageInfo_KeyExistInVirtualBucketRequest.Size(m)
}
func (m *KeyExistInVirtualBucketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyExistInVirtualBucketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_KeyExistInVirtualBucketRequest proto.InternalMessageInfo

func (m *KeyExistInVirtualBucketRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *KeyExistInVirtualBucketRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *KeyExistInVirtualBucketRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KeyExistInVirtualBucketRequest) GetCredNamespace() string {
	if m != nil {
		return m.CredNamespace
	}
	return ""
}

func (m *KeyExistInVirtualBucketRequest) GetCredName() string {
	if m != nil {
		return m.CredName
	}
	return ""
}

func (m *KeyExistInVirtualBucketRequest) GetConnectionSpec() *v1alpha1.ConnectionSpec {
	if m != nil {
		return m.ConnectionSpec
	}
	return nil
}

func (m *KeyExistInVirtualBucketRequest) GetSecret() map[string][]byte {
	if m != nil {
		return m.Secret
	}
	return nil
}

type KeyExistInVirtualBucketResponse struct {
	Exist                bool     `protobuf:"varint,1,opt,name=exist,proto3" json:"exist,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyExistInVirtualBucketResponse) Reset()         { *m = KeyExistInVirtualBucketResponse{} }
func (m *KeyExistInVirtualBucketResponse) String() string { return proto.CompactTextString(m) }
func (*KeyExistInVirtualBucketResponse) ProtoMessage()    {}
func (*KeyExistInVirtualBucketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7fdf04388c023e2c, []int{5}
}
func (m *KeyExistInVirtualBucketResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyExistInVirtualBucketResponse.Unmarshal(m, b)
}
func (m *KeyExistInVirtualBucketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyExistInVirtualBucketResponse.Marshal(b, m, deterministic)
}
func (m *KeyExistInVirtualBucketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyExistInVirtualBucketResponse.Merge(m, src)
}
func (m *KeyExistInVirtualBucketResponse) XXX_Size() int {
	return xxx_messageInfo_KeyExistInVirtualBucketResponse.Size(m)
}
func (m *KeyExistInVirtualBucketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyExistInVirtualBucketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_KeyExistInVirtualBucketResponse proto.InternalMessageInfo

func (m *KeyExistInVirtualBucketResponse) GetExist() bool {
	if m != nil {
		return m.Exist
	}
	return false
}

type CloudVirtualBucketResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloudVirtualBucketResponse) Reset()         { *m = CloudVirtualBucketResponse{} }
func (m *CloudVirtualBucketResponse) String() string { return proto.CompactTextString(m) }
func (*CloudVirtualBucketResponse) ProtoMessage()    {}
func (*CloudVirtualBucketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7fdf04388c023e2c, []int{6}
}
func (m *CloudVirtualBucketResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudVirtualBucketResponse.Unmarshal(m, b)
}
func (m *CloudVirtualBucketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudVirtualBucketResponse.Marshal(b, m, deterministic)
}
func (m *CloudVirtualBucketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudVirtualBucketResponse.Merge(m, src)
}
func (m *CloudVirtualBucketResponse) XXX_Size() int {
	return xxx_messageInfo_CloudVirtualBucketResponse.Size(m)
}
func (m *CloudVirtualBucketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudVirtualBucketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CloudVirtualBucketResponse proto.InternalMessageInfo

// Ask the bucket to download a file
type FileDownloadRequest struct {
	Bucket               string                   `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Key                  string                   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Path                 string                   `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	CredNamespace        string                   `protobuf:"bytes,4,opt,name=credNamespace,proto3" json:"credNamespace,omitempty"`
	CredName             string                   `protobuf:"bytes,5,opt,name=credName,proto3" json:"credName,omitempty"`
	ConnectionSpec       *v1alpha1.ConnectionSpec `protobuf:"bytes,6,opt,name=connectionSpec,proto3" json:"connectionSpec,omitempty"`
	Secret               map[string][]byte        `protobuf:"bytes,7,rep,name=secret,proto3" json:"secret,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *FileDownloadRequest) Reset()         { *m = FileDownloadRequest{} }
func (m *FileDownloadRequest) String() string { return proto.CompactTextString(m) }
func (*FileDownloadRequest) ProtoMessage()    {}
func (*FileDownloadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7fdf04388c023e2c, []int{7}
}
func (m *FileDownloadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileDownloadRequest.Unmarshal(m, b)
}
func (m *FileDownloadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileDownloadRequest.Marshal(b, m, deterministic)
}
func (m *FileDownloadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileDownloadRequest.Merge(m, src)
}
func (m *FileDownloadRequest) XXX_Size() int {
	return xxx_messageInfo_FileDownloadRequest.Size(m)
}
func (m *FileDownloadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FileDownloadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FileDownloadRequest proto.InternalMessageInfo

func (m *FileDownloadRequest) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *FileDownloadRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *FileDownloadRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *FileDownloadRequest) GetCredNamespace() string {
	if m != nil {
		return m.CredNamespace
	}
	return ""
}

func (m *FileDownloadRequest) GetCredName() string {
	if m != nil {
		return m.CredName
	}
	return ""
}

func (m *FileDownloadRequest) GetConnectionSpec() *v1alpha1.ConnectionSpec {
	if m != nil {
		return m.ConnectionSpec
	}
	return nil
}

func (m *FileDownloadRequest) GetSecret() map[string][]byte {
	if m != nil {
		return m.Secret
	}
	return nil
}

type FileDownloadResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileDownloadResponse) Reset()         { *m = FileDownloadResponse{} }
func (m *FileDownloadResponse) String() string { return proto.CompactTextString(m) }
func (*FileDownloadResponse) ProtoMessage()    {}
func (*FileDownloadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7fdf04388c023e2c, []int{8}
}
func (m *FileDownloadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileDownloadResponse.Unmarshal(m, b)
}
func (m *FileDownloadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileDownloadResponse.Marshal(b, m, deterministic)
}
func (m *FileDownloadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileDownloadResponse.Merge(m, src)
}
func (m *FileDownloadResponse) XXX_Size() int {
	return xxx_messageInfo_FileDownloadResponse.Size(m)
}
func (m *FileDownloadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FileDownloadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FileDownloadResponse proto.InternalMessageInfo

type FileUploadRequest struct {
	Bucket               string                   `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Key                  string                   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Path                 string                   `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	CredNamespace        string                   `protobuf:"bytes,4,opt,name=credNamespace,proto3" json:"credNamespace,omitempty"`
	CredName             string                   `protobuf:"bytes,5,opt,name=credName,proto3" json:"credName,omitempty"`
	ConnectionSpec       *v1alpha1.ConnectionSpec `protobuf:"bytes,6,opt,name=connectionSpec,proto3" json:"connectionSpec,omitempty"`
	Secret               map[string][]byte        `protobuf:"bytes,7,rep,name=secret,proto3" json:"secret,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *FileUploadRequest) Reset()         { *m = FileUploadRequest{} }
func (m *FileUploadRequest) String() string { return proto.CompactTextString(m) }
func (*FileUploadRequest) ProtoMessage()    {}
func (*FileUploadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7fdf04388c023e2c, []int{9}
}
func (m *FileUploadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileUploadRequest.Unmarshal(m, b)
}
func (m *FileUploadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileUploadRequest.Marshal(b, m, deterministic)
}
func (m *FileUploadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileUploadRequest.Merge(m, src)
}
func (m *FileUploadRequest) XXX_Size() int {
	return xxx_messageInfo_FileUploadRequest.Size(m)
}
func (m *FileUploadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FileUploadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FileUploadRequest proto.InternalMessageInfo

func (m *FileUploadRequest) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *FileUploadRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *FileUploadRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *FileUploadRequest) GetCredNamespace() string {
	if m != nil {
		return m.CredNamespace
	}
	return ""
}

func (m *FileUploadRequest) GetCredName() string {
	if m != nil {
		return m.CredName
	}
	return ""
}

func (m *FileUploadRequest) GetConnectionSpec() *v1alpha1.ConnectionSpec {
	if m != nil {
		return m.ConnectionSpec
	}
	return nil
}

func (m *FileUploadRequest) GetSecret() map[string][]byte {
	if m != nil {
		return m.Secret
	}
	return nil
}

type FileUploadResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileUploadResponse) Reset()         { *m = FileUploadResponse{} }
func (m *FileUploadResponse) String() string { return proto.CompactTextString(m) }
func (*FileUploadResponse) ProtoMessage()    {}
func (*FileUploadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7fdf04388c023e2c, []int{10}
}
func (m *FileUploadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileUploadResponse.Unmarshal(m, b)
}
func (m *FileUploadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileUploadResponse.Marshal(b, m, deterministic)
}
func (m *FileUploadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileUploadResponse.Merge(m, src)
}
func (m *FileUploadResponse) XXX_Size() int {
	return xxx_messageInfo_FileUploadResponse.Size(m)
}
func (m *FileUploadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FileUploadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FileUploadResponse proto.InternalMessageInfo

type CreateVirtualBucketRequest struct {
	BucketName           string                      `protobuf:"bytes,1,opt,name=bucketName,proto3" json:"bucketName,omitempty"`
	BucketSpec           *v1alpha1.VirtualBucketSpec `protobuf:"bytes,2,opt,name=bucketSpec,proto3" json:"bucketSpec,omitempty"`
	CredNamespace        string                      `protobuf:"bytes,3,opt,name=credNamespace,proto3" json:"credNamespace,omitempty"`
	CredName             string                      `protobuf:"bytes,4,opt,name=credName,proto3" json:"credName,omitempty"`
	ConnectionSpec       *v1alpha1.ConnectionSpec    `protobuf:"bytes,5,opt,name=connectionSpec,proto3" json:"connectionSpec,omitempty"`
	Secret               map[string][]byte           `protobuf:"bytes,7,rep,name=secret,proto3" json:"secret,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *CreateVirtualBucketRequest) Reset()         { *m = CreateVirtualBucketRequest{} }
func (m *CreateVirtualBucketRequest) String() string { return proto.CompactTextString(m) }
func (*CreateVirtualBucketRequest) ProtoMessage()    {}
func (*CreateVirtualBucketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7fdf04388c023e2c, []int{11}
}
func (m *CreateVirtualBucketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVirtualBucketRequest.Unmarshal(m, b)
}
func (m *CreateVirtualBucketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVirtualBucketRequest.Marshal(b, m, deterministic)
}
func (m *CreateVirtualBucketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVirtualBucketRequest.Merge(m, src)
}
func (m *CreateVirtualBucketRequest) XXX_Size() int {
	return xxx_messageInfo_CreateVirtualBucketRequest.Size(m)
}
func (m *CreateVirtualBucketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVirtualBucketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVirtualBucketRequest proto.InternalMessageInfo

func (m *CreateVirtualBucketRequest) GetBucketName() string {
	if m != nil {
		return m.BucketName
	}
	return ""
}

func (m *CreateVirtualBucketRequest) GetBucketSpec() *v1alpha1.VirtualBucketSpec {
	if m != nil {
		return m.BucketSpec
	}
	return nil
}

func (m *CreateVirtualBucketRequest) GetCredNamespace() string {
	if m != nil {
		return m.CredNamespace
	}
	return ""
}

func (m *CreateVirtualBucketRequest) GetCredName() string {
	if m != nil {
		return m.CredName
	}
	return ""
}

func (m *CreateVirtualBucketRequest) GetConnectionSpec() *v1alpha1.ConnectionSpec {
	if m != nil {
		return m.ConnectionSpec
	}
	return nil
}

func (m *CreateVirtualBucketRequest) GetSecret() map[string][]byte {
	if m != nil {
		return m.Secret
	}
	return nil
}

type CreateVirtualBucketResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateVirtualBucketResponse) Reset()         { *m = CreateVirtualBucketResponse{} }
func (m *CreateVirtualBucketResponse) String() string { return proto.CompactTextString(m) }
func (*CreateVirtualBucketResponse) ProtoMessage()    {}
func (*CreateVirtualBucketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7fdf04388c023e2c, []int{12}
}
func (m *CreateVirtualBucketResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVirtualBucketResponse.Unmarshal(m, b)
}
func (m *CreateVirtualBucketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVirtualBucketResponse.Marshal(b, m, deterministic)
}
func (m *CreateVirtualBucketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVirtualBucketResponse.Merge(m, src)
}
func (m *CreateVirtualBucketResponse) XXX_Size() int {
	return xxx_messageInfo_CreateVirtualBucketResponse.Size(m)
}
func (m *CreateVirtualBucketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVirtualBucketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVirtualBucketResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ShutdownRequest)(nil), "github.com.metaprov.modeld.services.cloudsd.ShutdownRequest")
	proto.RegisterType((*ShutdownResponse)(nil), "github.com.metaprov.modeld.services.cloudsd.ShutdownResponse")
	proto.RegisterType((*VirtualBucketExistRequest)(nil), "github.com.metaprov.modeld.services.cloudsd.VirtualBucketExistRequest")
	proto.RegisterMapType((map[string][]byte)(nil), "github.com.metaprov.modeld.services.cloudsd.VirtualBucketExistRequest.SecretEntry")
	proto.RegisterType((*VirtualBucketExistResponse)(nil), "github.com.metaprov.modeld.services.cloudsd.VirtualBucketExistResponse")
	proto.RegisterType((*KeyExistInVirtualBucketRequest)(nil), "github.com.metaprov.modeld.services.cloudsd.KeyExistInVirtualBucketRequest")
	proto.RegisterMapType((map[string][]byte)(nil), "github.com.metaprov.modeld.services.cloudsd.KeyExistInVirtualBucketRequest.SecretEntry")
	proto.RegisterType((*KeyExistInVirtualBucketResponse)(nil), "github.com.metaprov.modeld.services.cloudsd.KeyExistInVirtualBucketResponse")
	proto.RegisterType((*CloudVirtualBucketResponse)(nil), "github.com.metaprov.modeld.services.cloudsd.CloudVirtualBucketResponse")
	proto.RegisterType((*FileDownloadRequest)(nil), "github.com.metaprov.modeld.services.cloudsd.FileDownloadRequest")
	proto.RegisterMapType((map[string][]byte)(nil), "github.com.metaprov.modeld.services.cloudsd.FileDownloadRequest.SecretEntry")
	proto.RegisterType((*FileDownloadResponse)(nil), "github.com.metaprov.modeld.services.cloudsd.FileDownloadResponse")
	proto.RegisterType((*FileUploadRequest)(nil), "github.com.metaprov.modeld.services.cloudsd.FileUploadRequest")
	proto.RegisterMapType((map[string][]byte)(nil), "github.com.metaprov.modeld.services.cloudsd.FileUploadRequest.SecretEntry")
	proto.RegisterType((*FileUploadResponse)(nil), "github.com.metaprov.modeld.services.cloudsd.FileUploadResponse")
	proto.RegisterType((*CreateVirtualBucketRequest)(nil), "github.com.metaprov.modeld.services.cloudsd.CreateVirtualBucketRequest")
	proto.RegisterMapType((map[string][]byte)(nil), "github.com.metaprov.modeld.services.cloudsd.CreateVirtualBucketRequest.SecretEntry")
	proto.RegisterType((*CreateVirtualBucketResponse)(nil), "github.com.metaprov.modeld.services.cloudsd.CreateVirtualBucketResponse")
}

func init() { proto.RegisterFile("services/cloudsd/cloudsd.proto", fileDescriptor_7fdf04388c023e2c) }

var fileDescriptor_7fdf04388c023e2c = []byte{
	// 760 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x57, 0xcb, 0x6e, 0xd3, 0x4c,
	0x14, 0xfe, 0x1d, 0x27, 0x69, 0xfe, 0x53, 0x0a, 0xed, 0x50, 0x95, 0x60, 0x68, 0xa9, 0x22, 0x16,
	0x95, 0x90, 0xc6, 0x34, 0x2c, 0xb8, 0x88, 0x6b, 0x4b, 0x7a, 0xa1, 0x55, 0x17, 0x8e, 0x00, 0x89,
	0xdd, 0xc4, 0x9e, 0x26, 0x26, 0x8e, 0xc7, 0xd8, 0xe3, 0x94, 0x3e, 0x01, 0x42, 0xac, 0x78, 0x04,
	0x16, 0x88, 0x17, 0x40, 0x6c, 0x78, 0x10, 0x1e, 0x07, 0x94, 0xf1, 0xd8, 0xb9, 0x34, 0x69, 0x94,
	0xc6, 0x5d, 0x20, 0x56, 0x99, 0x39, 0x73, 0x2e, 0xdf, 0x9c, 0xef, 0xcb, 0x8c, 0x07, 0x56, 0x02,
	0xea, 0xb7, 0x6d, 0x93, 0x06, 0xba, 0xe9, 0xb0, 0xd0, 0x0a, 0xac, 0xf8, 0x17, 0x7b, 0x3e, 0xe3,
	0x0c, 0xdd, 0xaa, 0xdb, 0xbc, 0x11, 0xd6, 0xb0, 0xc9, 0x5a, 0xb8, 0x45, 0x39, 0xf1, 0x7c, 0xd6,
	0xc6, 0x2d, 0x66, 0x51, 0xc7, 0xc2, 0x71, 0x28, 0x96, 0x21, 0x5a, 0xa5, 0xeb, 0xac, 0xc7, 0xce,
	0x7a, 0xe4, 0x4c, 0x3c, 0x5b, 0xf7, 0x9a, 0x75, 0x9d, 0x78, 0x76, 0xa0, 0xdb, 0xee, 0xa1, 0x4f,
	0xf4, 0xf6, 0x3a, 0x71, 0xbc, 0x06, 0x59, 0xd7, 0xeb, 0xd4, 0xa5, 0x3e, 0xe1, 0x54, 0xd6, 0x2c,
	0x2d, 0xc0, 0xa5, 0x6a, 0x23, 0xe4, 0x16, 0x3b, 0x72, 0x0d, 0xfa, 0x2e, 0xa4, 0x01, 0x2f, 0x21,
	0x98, 0xef, 0x9a, 0x02, 0x8f, 0xb9, 0x01, 0x2d, 0x7d, 0x50, 0xe1, 0xea, 0x2b, 0xdb, 0xe7, 0x21,
	0x71, 0x36, 0x42, 0xb3, 0x49, 0x79, 0xe5, 0xbd, 0x1d, 0x70, 0x19, 0x81, 0x10, 0x64, 0x5d, 0xd2,
	0xa2, 0x45, 0x65, 0x55, 0x59, 0xfb, 0xdf, 0x10, 0x63, 0x74, 0x13, 0xe6, 0x4c, 0x9f, 0x5a, 0x07,
	0xa4, 0x45, 0x03, 0x8f, 0x98, 0xb4, 0x98, 0x11, 0x8b, 0xfd, 0x46, 0xa4, 0x41, 0x21, 0x36, 0x14,
	0x55, 0xe1, 0x90, 0xcc, 0x51, 0x0b, 0x2e, 0x9a, 0xcc, 0x75, 0xa9, 0xc9, 0x6d, 0xe6, 0x56, 0x3d,
	0x6a, 0x16, 0xb3, 0xab, 0xca, 0xda, 0x6c, 0xb9, 0x82, 0x47, 0xf7, 0x89, 0x78, 0x36, 0xf6, 0x9a,
	0x75, 0xdc, 0xd9, 0x3a, 0x16, 0x5b, 0xc7, 0xf1, 0xd6, 0xf1, 0x66, 0x5f, 0x32, 0x63, 0x20, 0x39,
	0x7a, 0x0b, 0xf9, 0x80, 0x9a, 0x3e, 0xe5, 0xc5, 0xdc, 0xaa, 0xba, 0x36, 0x5b, 0x36, 0xf0, 0x04,
	0x74, 0xe0, 0x91, 0xcd, 0xc1, 0x55, 0x91, 0xb4, 0xe2, 0x72, 0xff, 0xd8, 0x90, 0x15, 0xb4, 0xfb,
	0x30, 0xdb, 0x63, 0x46, 0xf3, 0xa0, 0x36, 0xe9, 0xb1, 0x6c, 0x5f, 0x67, 0x88, 0x16, 0x21, 0xd7,
	0x26, 0x4e, 0x18, 0x75, 0xed, 0x82, 0x11, 0x4d, 0x1e, 0x64, 0xee, 0x29, 0xa5, 0x32, 0x68, 0xc3,
	0x6a, 0x45, 0x3c, 0x75, 0xe2, 0x68, 0xc7, 0x20, 0x72, 0x15, 0x8c, 0x68, 0x52, 0xfa, 0xa9, 0xc2,
	0xca, 0x1e, 0x3d, 0x16, 0xae, 0xbb, 0x6e, 0x5f, 0x78, 0x4c, 0xe1, 0x12, 0xe4, 0x7d, 0x5a, 0xb7,
	0x99, 0x2b, 0x51, 0xc8, 0x59, 0x42, 0x6d, 0xa6, 0x87, 0x5a, 0x09, 0x57, 0xed, 0xc2, 0x3d, 0x41,
	0x76, 0x76, 0x1c, 0xd9, 0xb9, 0xb1, 0x64, 0xe7, 0xcf, 0x93, 0x6c, 0x96, 0x90, 0x3d, 0x23, 0xc8,
	0x7e, 0x3d, 0x11, 0xd9, 0xa7, 0xf7, 0x32, 0x6d, 0xc6, 0xef, 0xc2, 0x8d, 0x91, 0x05, 0x4f, 0xa5,
	0xfd, 0x3a, 0x68, 0x9b, 0x1d, 0xc4, 0x43, 0x63, 0x4a, 0x5f, 0x55, 0xb8, 0xbc, 0x65, 0x3b, 0xf4,
	0x39, 0x3b, 0x72, 0x1d, 0x46, 0xac, 0x1e, 0x25, 0xd4, 0x84, 0x67, 0xac, 0x84, 0x68, 0x16, 0x43,
	0xce, 0x74, 0x21, 0x23, 0xc8, 0x7a, 0x84, 0x37, 0xa4, 0x10, 0xc4, 0xf8, 0xef, 0x53, 0x82, 0x35,
	0xa0, 0x84, 0xfd, 0x89, 0x94, 0x30, 0xa4, 0x81, 0x69, 0xd3, 0xbf, 0x04, 0x8b, 0xfd, 0x55, 0x24,
	0x7f, 0x5f, 0x54, 0x58, 0xe8, 0x2c, 0xbc, 0xf4, 0xfe, 0x61, 0xf6, 0x6a, 0x03, 0xec, 0xbd, 0x98,
	0x98, 0xbd, 0xbe, 0xf6, 0xa5, 0xcd, 0xdd, 0x22, 0xa0, 0xde, 0x1a, 0x92, 0xb9, 0xdf, 0x2a, 0x68,
	0x9b, 0x3e, 0x25, 0x9c, 0x0e, 0x3d, 0x8a, 0x57, 0x00, 0x22, 0xd2, 0x0e, 0xba, 0x77, 0x6a, 0x8f,
	0x05, 0x35, 0xe2, 0x75, 0xd1, 0xde, 0x8c, 0x68, 0xef, 0xce, 0x19, 0xdb, 0xdb, 0x07, 0x40, 0x74,
	0xb8, 0x27, 0xf7, 0x49, 0x39, 0xa8, 0xe3, 0xe4, 0x90, 0x1d, 0x2b, 0x87, 0xdc, 0x79, 0xca, 0xa1,
	0x39, 0x20, 0x87, 0xea, 0x44, 0x72, 0x18, 0xcd, 0x49, 0xda, 0xba, 0x58, 0x86, 0x6b, 0x43, 0x8b,
	0x45, 0x02, 0x29, 0xff, 0x9a, 0x81, 0x39, 0x71, 0x72, 0x07, 0xd5, 0x08, 0x23, 0xfa, 0xac, 0x40,
	0x21, 0x3e, 0x01, 0xd0, 0xd3, 0x69, 0x8f, 0x28, 0xed, 0xd9, 0x14, 0x19, 0xa4, 0x88, 0xff, 0x43,
	0x9f, 0x14, 0xc8, 0x47, 0xca, 0x46, 0x8f, 0xa7, 0xfb, 0xdb, 0x69, 0x4f, 0xce, 0x1c, 0x9f, 0xa0,
	0xf9, 0xa1, 0xc0, 0x95, 0x11, 0xd7, 0x24, 0xda, 0x4b, 0xf1, 0x76, 0xd7, 0xf6, 0xd3, 0x49, 0x96,
	0x00, 0xff, 0xa6, 0x00, 0x3a, 0xf9, 0x45, 0x87, 0xb6, 0xd2, 0xf9, 0xfc, 0xd4, 0xb6, 0xa7, 0xce,
	0x93, 0x20, 0xfd, 0xae, 0xc0, 0xf2, 0x10, 0xd9, 0xee, 0x1e, 0x1e, 0x30, 0x09, 0x7a, 0x3b, 0xa5,
	0xff, 0x9b, 0xb6, 0x33, 0x7d, 0xa2, 0x04, 0xf6, 0x47, 0x05, 0x0a, 0xf1, 0x83, 0x06, 0x3d, 0x9c,
	0x28, 0xf1, 0xc0, 0xd3, 0x48, 0x7b, 0x74, 0xc6, 0xe8, 0x18, 0xcb, 0xc6, 0xed, 0x37, 0xf8, 0xf4,
	0x77, 0xdb, 0xe0, 0x13, 0xb1, 0x96, 0x17, 0xef, 0xb4, 0x3b, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff,
	0xea, 0xd5, 0xf8, 0x18, 0x3d, 0x0e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CloudsServiceClient is the client API for CloudsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CloudsServiceClient interface {
	Download(ctx context.Context, in *FileDownloadRequest, opts ...grpc.CallOption) (*FileDownloadResponse, error)
	Upload(ctx context.Context, in *FileUploadRequest, opts ...grpc.CallOption) (*FileUploadResponse, error)
	KeyExistInVirtualBucket(ctx context.Context, in *KeyExistInVirtualBucketRequest, opts ...grpc.CallOption) (*KeyExistInVirtualBucketResponse, error)
	VirtualBucketExist(ctx context.Context, in *VirtualBucketExistRequest, opts ...grpc.CallOption) (*VirtualBucketExistResponse, error)
	CreateVirtualBucketIfNotExist(ctx context.Context, in *CreateVirtualBucketRequest, opts ...grpc.CallOption) (*CreateVirtualBucketResponse, error)
	Shutdown(ctx context.Context, in *ShutdownRequest, opts ...grpc.CallOption) (*ShutdownResponse, error)
}

type cloudsServiceClient struct {
	cc *grpc.ClientConn
}

func NewCloudsServiceClient(cc *grpc.ClientConn) CloudsServiceClient {
	return &cloudsServiceClient{cc}
}

func (c *cloudsServiceClient) Download(ctx context.Context, in *FileDownloadRequest, opts ...grpc.CallOption) (*FileDownloadResponse, error) {
	out := new(FileDownloadResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.cloudsd.CloudsService/Download", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudsServiceClient) Upload(ctx context.Context, in *FileUploadRequest, opts ...grpc.CallOption) (*FileUploadResponse, error) {
	out := new(FileUploadResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.cloudsd.CloudsService/Upload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudsServiceClient) KeyExistInVirtualBucket(ctx context.Context, in *KeyExistInVirtualBucketRequest, opts ...grpc.CallOption) (*KeyExistInVirtualBucketResponse, error) {
	out := new(KeyExistInVirtualBucketResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.cloudsd.CloudsService/KeyExistInVirtualBucket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudsServiceClient) VirtualBucketExist(ctx context.Context, in *VirtualBucketExistRequest, opts ...grpc.CallOption) (*VirtualBucketExistResponse, error) {
	out := new(VirtualBucketExistResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.cloudsd.CloudsService/VirtualBucketExist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudsServiceClient) CreateVirtualBucketIfNotExist(ctx context.Context, in *CreateVirtualBucketRequest, opts ...grpc.CallOption) (*CreateVirtualBucketResponse, error) {
	out := new(CreateVirtualBucketResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.cloudsd.CloudsService/CreateVirtualBucketIfNotExist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudsServiceClient) Shutdown(ctx context.Context, in *ShutdownRequest, opts ...grpc.CallOption) (*ShutdownResponse, error) {
	out := new(ShutdownResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.cloudsd.CloudsService/Shutdown", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CloudsServiceServer is the server API for CloudsService service.
type CloudsServiceServer interface {
	Download(context.Context, *FileDownloadRequest) (*FileDownloadResponse, error)
	Upload(context.Context, *FileUploadRequest) (*FileUploadResponse, error)
	KeyExistInVirtualBucket(context.Context, *KeyExistInVirtualBucketRequest) (*KeyExistInVirtualBucketResponse, error)
	VirtualBucketExist(context.Context, *VirtualBucketExistRequest) (*VirtualBucketExistResponse, error)
	CreateVirtualBucketIfNotExist(context.Context, *CreateVirtualBucketRequest) (*CreateVirtualBucketResponse, error)
	Shutdown(context.Context, *ShutdownRequest) (*ShutdownResponse, error)
}

// UnimplementedCloudsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCloudsServiceServer struct {
}

func (*UnimplementedCloudsServiceServer) Download(ctx context.Context, req *FileDownloadRequest) (*FileDownloadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Download not implemented")
}
func (*UnimplementedCloudsServiceServer) Upload(ctx context.Context, req *FileUploadRequest) (*FileUploadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Upload not implemented")
}
func (*UnimplementedCloudsServiceServer) KeyExistInVirtualBucket(ctx context.Context, req *KeyExistInVirtualBucketRequest) (*KeyExistInVirtualBucketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KeyExistInVirtualBucket not implemented")
}
func (*UnimplementedCloudsServiceServer) VirtualBucketExist(ctx context.Context, req *VirtualBucketExistRequest) (*VirtualBucketExistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VirtualBucketExist not implemented")
}
func (*UnimplementedCloudsServiceServer) CreateVirtualBucketIfNotExist(ctx context.Context, req *CreateVirtualBucketRequest) (*CreateVirtualBucketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVirtualBucketIfNotExist not implemented")
}
func (*UnimplementedCloudsServiceServer) Shutdown(ctx context.Context, req *ShutdownRequest) (*ShutdownResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Shutdown not implemented")
}

func RegisterCloudsServiceServer(s *grpc.Server, srv CloudsServiceServer) {
	s.RegisterService(&_CloudsService_serviceDesc, srv)
}

func _CloudsService_Download_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileDownloadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudsServiceServer).Download(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.cloudsd.CloudsService/Download",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudsServiceServer).Download(ctx, req.(*FileDownloadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudsService_Upload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileUploadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudsServiceServer).Upload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.cloudsd.CloudsService/Upload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudsServiceServer).Upload(ctx, req.(*FileUploadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudsService_KeyExistInVirtualBucket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyExistInVirtualBucketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudsServiceServer).KeyExistInVirtualBucket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.cloudsd.CloudsService/KeyExistInVirtualBucket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudsServiceServer).KeyExistInVirtualBucket(ctx, req.(*KeyExistInVirtualBucketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudsService_VirtualBucketExist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VirtualBucketExistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudsServiceServer).VirtualBucketExist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.cloudsd.CloudsService/VirtualBucketExist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudsServiceServer).VirtualBucketExist(ctx, req.(*VirtualBucketExistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudsService_CreateVirtualBucketIfNotExist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateVirtualBucketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudsServiceServer).CreateVirtualBucketIfNotExist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.cloudsd.CloudsService/CreateVirtualBucketIfNotExist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudsServiceServer).CreateVirtualBucketIfNotExist(ctx, req.(*CreateVirtualBucketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudsService_Shutdown_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShutdownRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudsServiceServer).Shutdown(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.cloudsd.CloudsService/Shutdown",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudsServiceServer).Shutdown(ctx, req.(*ShutdownRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CloudsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.metaprov.modeld.services.cloudsd.CloudsService",
	HandlerType: (*CloudsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Download",
			Handler:    _CloudsService_Download_Handler,
		},
		{
			MethodName: "Upload",
			Handler:    _CloudsService_Upload_Handler,
		},
		{
			MethodName: "KeyExistInVirtualBucket",
			Handler:    _CloudsService_KeyExistInVirtualBucket_Handler,
		},
		{
			MethodName: "VirtualBucketExist",
			Handler:    _CloudsService_VirtualBucketExist_Handler,
		},
		{
			MethodName: "CreateVirtualBucketIfNotExist",
			Handler:    _CloudsService_CreateVirtualBucketIfNotExist_Handler,
		},
		{
			MethodName: "Shutdown",
			Handler:    _CloudsService_Shutdown_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/cloudsd/cloudsd.proto",
}
