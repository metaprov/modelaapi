// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.7
// source: github.com/metaprov/modelaapi/services/featurepipeline/v1/featurepipeline.proto

package v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	v1alpha1 "github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ListFeaturePipelineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Labels    map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListFeaturePipelineRequest) Reset() {
	*x = ListFeaturePipelineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeaturePipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeaturePipelineRequest) ProtoMessage() {}

func (x *ListFeaturePipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeaturePipelineRequest.ProtoReflect.Descriptor instead.
func (*ListFeaturePipelineRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_rawDescGZIP(), []int{0}
}

func (x *ListFeaturePipelineRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListFeaturePipelineRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ListFeaturePipelineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items *v1alpha1.FeaturePipelineList `protobuf:"bytes,1,opt,name=items,proto3" json:"items,omitempty"`
}

func (x *ListFeaturePipelineResponse) Reset() {
	*x = ListFeaturePipelineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeaturePipelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeaturePipelineResponse) ProtoMessage() {}

func (x *ListFeaturePipelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeaturePipelineResponse.ProtoReflect.Descriptor instead.
func (*ListFeaturePipelineResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_rawDescGZIP(), []int{1}
}

func (x *ListFeaturePipelineResponse) GetItems() *v1alpha1.FeaturePipelineList {
	if x != nil {
		return x.Items
	}
	return nil
}

type CreateFeaturePipelineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.FeaturePipeline `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *CreateFeaturePipelineRequest) Reset() {
	*x = CreateFeaturePipelineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFeaturePipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeaturePipelineRequest) ProtoMessage() {}

func (x *CreateFeaturePipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeaturePipelineRequest.ProtoReflect.Descriptor instead.
func (*CreateFeaturePipelineRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_rawDescGZIP(), []int{2}
}

func (x *CreateFeaturePipelineRequest) GetItem() *v1alpha1.FeaturePipeline {
	if x != nil {
		return x.Item
	}
	return nil
}

type CreateFeaturePipelineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateFeaturePipelineResponse) Reset() {
	*x = CreateFeaturePipelineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFeaturePipelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeaturePipelineResponse) ProtoMessage() {}

func (x *CreateFeaturePipelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeaturePipelineResponse.ProtoReflect.Descriptor instead.
func (*CreateFeaturePipelineResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_rawDescGZIP(), []int{3}
}

type UpdateFeaturePipelineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.FeaturePipeline `protobuf:"bytes,5,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *UpdateFeaturePipelineRequest) Reset() {
	*x = UpdateFeaturePipelineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFeaturePipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFeaturePipelineRequest) ProtoMessage() {}

func (x *UpdateFeaturePipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFeaturePipelineRequest.ProtoReflect.Descriptor instead.
func (*UpdateFeaturePipelineRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateFeaturePipelineRequest) GetItem() *v1alpha1.FeaturePipeline {
	if x != nil {
		return x.Item
	}
	return nil
}

type UpdateFeaturePipelineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateFeaturePipelineResponse) Reset() {
	*x = UpdateFeaturePipelineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFeaturePipelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFeaturePipelineResponse) ProtoMessage() {}

func (x *UpdateFeaturePipelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFeaturePipelineResponse.ProtoReflect.Descriptor instead.
func (*UpdateFeaturePipelineResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_rawDescGZIP(), []int{5}
}

type GetFeaturePipelineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetFeaturePipelineRequest) Reset() {
	*x = GetFeaturePipelineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeaturePipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeaturePipelineRequest) ProtoMessage() {}

func (x *GetFeaturePipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeaturePipelineRequest.ProtoReflect.Descriptor instead.
func (*GetFeaturePipelineRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_rawDescGZIP(), []int{6}
}

func (x *GetFeaturePipelineRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetFeaturePipelineRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetFeaturePipelineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.FeaturePipeline `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Yaml string                    `protobuf:"bytes,2,opt,name=yaml,proto3" json:"yaml,omitempty"`
}

func (x *GetFeaturePipelineResponse) Reset() {
	*x = GetFeaturePipelineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeaturePipelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeaturePipelineResponse) ProtoMessage() {}

func (x *GetFeaturePipelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeaturePipelineResponse.ProtoReflect.Descriptor instead.
func (*GetFeaturePipelineResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_rawDescGZIP(), []int{7}
}

func (x *GetFeaturePipelineResponse) GetItem() *v1alpha1.FeaturePipeline {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *GetFeaturePipelineResponse) GetYaml() string {
	if x != nil {
		return x.Yaml
	}
	return ""
}

type DeleteFeaturePipelineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteFeaturePipelineRequest) Reset() {
	*x = DeleteFeaturePipelineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFeaturePipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFeaturePipelineRequest) ProtoMessage() {}

func (x *DeleteFeaturePipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFeaturePipelineRequest.ProtoReflect.Descriptor instead.
func (*DeleteFeaturePipelineRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteFeaturePipelineRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeleteFeaturePipelineRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteFeaturePipelineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteFeaturePipelineResponse) Reset() {
	*x = DeleteFeaturePipelineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFeaturePipelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFeaturePipelineResponse) ProtoMessage() {}

func (x *DeleteFeaturePipelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFeaturePipelineResponse.ProtoReflect.Descriptor instead.
func (*DeleteFeaturePipelineResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_rawDescGZIP(), []int{9}
}

type PauseFeaturePipelineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PauseFeaturePipelineResponse) Reset() {
	*x = PauseFeaturePipelineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseFeaturePipelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseFeaturePipelineResponse) ProtoMessage() {}

func (x *PauseFeaturePipelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseFeaturePipelineResponse.ProtoReflect.Descriptor instead.
func (*PauseFeaturePipelineResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_rawDescGZIP(), []int{10}
}

type PauseFeaturePipelineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PauseFeaturePipelineRequest) Reset() {
	*x = PauseFeaturePipelineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseFeaturePipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseFeaturePipelineRequest) ProtoMessage() {}

func (x *PauseFeaturePipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseFeaturePipelineRequest.ProtoReflect.Descriptor instead.
func (*PauseFeaturePipelineRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_rawDescGZIP(), []int{11}
}

func (x *PauseFeaturePipelineRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PauseFeaturePipelineRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ResumeFeaturePipelineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResumeFeaturePipelineResponse) Reset() {
	*x = ResumeFeaturePipelineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeFeaturePipelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeFeaturePipelineResponse) ProtoMessage() {}

func (x *ResumeFeaturePipelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeFeaturePipelineResponse.ProtoReflect.Descriptor instead.
func (*ResumeFeaturePipelineResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_rawDescGZIP(), []int{12}
}

type ResumeFeaturePipelineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ResumeFeaturePipelineRequest) Reset() {
	*x = ResumeFeaturePipelineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeFeaturePipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeFeaturePipelineRequest) ProtoMessage() {}

func (x *ResumeFeaturePipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeFeaturePipelineRequest.ProtoReflect.Descriptor instead.
func (*ResumeFeaturePipelineRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_rawDescGZIP(), []int{13}
}

func (x *ResumeFeaturePipelineRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ResumeFeaturePipelineRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto protoreflect.FileDescriptor

var file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_rawDesc = []byte{
	0x0a, 0x4f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x44, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70,
	0x69, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xf0, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x79, 0x0a,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x61, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70,
	0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x7e, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x49, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x79, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x1f,
	0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x79, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x59, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70,
	0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x1f, 0x0a, 0x1d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4d, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x04,
	0x69, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x22, 0x50, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1f, 0x0a, 0x1d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x50,
	0x61, 0x75, 0x73, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4f, 0x0a, 0x1b, 0x50,
	0x61, 0x75, 0x73, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1f, 0x0a, 0x1d,
	0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50, 0x0a,
	0x1c, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x32,
	0x97, 0x0d, 0x0a, 0x16, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xe3, 0x01, 0x0a, 0x14, 0x4c,
	0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x73, 0x12, 0x55, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x56, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73,
	0x12, 0xeb, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x57, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x58, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0xe6,
	0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x54, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x55, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x76, 0x31, 0x2f,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0x83, 0x02, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x12, 0x57, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x58, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x1a, 0x2c, 0x2f, 0x76,
	0x31, 0x2f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x73, 0x2f, 0x7b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0xcc, 0x01,
	0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x57, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x58, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xf2, 0x01, 0x0a,
	0x14, 0x50, 0x61, 0x75, 0x73, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x56, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x57, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70,
	0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x22, 0x21,
	0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x70, 0x61, 0x75, 0x73,
	0x65, 0x12, 0xf5, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x57, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x58, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x22, 0x21, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x7d, 0x3a, 0x70, 0x61, 0x75, 0x73, 0x65, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_rawDescOnce sync.Once
	file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_rawDescData = file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_rawDesc
)

func file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_rawDescGZIP() []byte {
	file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_rawDescOnce.Do(func() {
		file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_rawDescData)
	})
	return file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_rawDescData
}

var file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_goTypes = []interface{}{
	(*ListFeaturePipelineRequest)(nil),    // 0: github.com.metaprov.modelaapi.services.featurepipeline.v1.ListFeaturePipelineRequest
	(*ListFeaturePipelineResponse)(nil),   // 1: github.com.metaprov.modelaapi.services.featurepipeline.v1.ListFeaturePipelineResponse
	(*CreateFeaturePipelineRequest)(nil),  // 2: github.com.metaprov.modelaapi.services.featurepipeline.v1.CreateFeaturePipelineRequest
	(*CreateFeaturePipelineResponse)(nil), // 3: github.com.metaprov.modelaapi.services.featurepipeline.v1.CreateFeaturePipelineResponse
	(*UpdateFeaturePipelineRequest)(nil),  // 4: github.com.metaprov.modelaapi.services.featurepipeline.v1.UpdateFeaturePipelineRequest
	(*UpdateFeaturePipelineResponse)(nil), // 5: github.com.metaprov.modelaapi.services.featurepipeline.v1.UpdateFeaturePipelineResponse
	(*GetFeaturePipelineRequest)(nil),     // 6: github.com.metaprov.modelaapi.services.featurepipeline.v1.GetFeaturePipelineRequest
	(*GetFeaturePipelineResponse)(nil),    // 7: github.com.metaprov.modelaapi.services.featurepipeline.v1.GetFeaturePipelineResponse
	(*DeleteFeaturePipelineRequest)(nil),  // 8: github.com.metaprov.modelaapi.services.featurepipeline.v1.DeleteFeaturePipelineRequest
	(*DeleteFeaturePipelineResponse)(nil), // 9: github.com.metaprov.modelaapi.services.featurepipeline.v1.DeleteFeaturePipelineResponse
	(*PauseFeaturePipelineResponse)(nil),  // 10: github.com.metaprov.modelaapi.services.featurepipeline.v1.PauseFeaturePipelineResponse
	(*PauseFeaturePipelineRequest)(nil),   // 11: github.com.metaprov.modelaapi.services.featurepipeline.v1.PauseFeaturePipelineRequest
	(*ResumeFeaturePipelineResponse)(nil), // 12: github.com.metaprov.modelaapi.services.featurepipeline.v1.ResumeFeaturePipelineResponse
	(*ResumeFeaturePipelineRequest)(nil),  // 13: github.com.metaprov.modelaapi.services.featurepipeline.v1.ResumeFeaturePipelineRequest
	nil,                                   // 14: github.com.metaprov.modelaapi.services.featurepipeline.v1.ListFeaturePipelineRequest.LabelsEntry
	(*v1alpha1.FeaturePipelineList)(nil),  // 15: github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.FeaturePipelineList
	(*v1alpha1.FeaturePipeline)(nil),      // 16: github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.FeaturePipeline
}
var file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_depIdxs = []int32{
	14, // 0: github.com.metaprov.modelaapi.services.featurepipeline.v1.ListFeaturePipelineRequest.labels:type_name -> github.com.metaprov.modelaapi.services.featurepipeline.v1.ListFeaturePipelineRequest.LabelsEntry
	15, // 1: github.com.metaprov.modelaapi.services.featurepipeline.v1.ListFeaturePipelineResponse.items:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.FeaturePipelineList
	16, // 2: github.com.metaprov.modelaapi.services.featurepipeline.v1.CreateFeaturePipelineRequest.item:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.FeaturePipeline
	16, // 3: github.com.metaprov.modelaapi.services.featurepipeline.v1.UpdateFeaturePipelineRequest.item:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.FeaturePipeline
	16, // 4: github.com.metaprov.modelaapi.services.featurepipeline.v1.GetFeaturePipelineResponse.item:type_name -> github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.FeaturePipeline
	0,  // 5: github.com.metaprov.modelaapi.services.featurepipeline.v1.FeaturePipelineService.ListFeaturePipelines:input_type -> github.com.metaprov.modelaapi.services.featurepipeline.v1.ListFeaturePipelineRequest
	2,  // 6: github.com.metaprov.modelaapi.services.featurepipeline.v1.FeaturePipelineService.CreateFeaturePipeline:input_type -> github.com.metaprov.modelaapi.services.featurepipeline.v1.CreateFeaturePipelineRequest
	6,  // 7: github.com.metaprov.modelaapi.services.featurepipeline.v1.FeaturePipelineService.GetFeaturePipeline:input_type -> github.com.metaprov.modelaapi.services.featurepipeline.v1.GetFeaturePipelineRequest
	4,  // 8: github.com.metaprov.modelaapi.services.featurepipeline.v1.FeaturePipelineService.UpdateFeaturePipeline:input_type -> github.com.metaprov.modelaapi.services.featurepipeline.v1.UpdateFeaturePipelineRequest
	8,  // 9: github.com.metaprov.modelaapi.services.featurepipeline.v1.FeaturePipelineService.DeleteFeaturePipeline:input_type -> github.com.metaprov.modelaapi.services.featurepipeline.v1.DeleteFeaturePipelineRequest
	11, // 10: github.com.metaprov.modelaapi.services.featurepipeline.v1.FeaturePipelineService.PauseFeaturePipeline:input_type -> github.com.metaprov.modelaapi.services.featurepipeline.v1.PauseFeaturePipelineRequest
	13, // 11: github.com.metaprov.modelaapi.services.featurepipeline.v1.FeaturePipelineService.ResumeFeaturePipeline:input_type -> github.com.metaprov.modelaapi.services.featurepipeline.v1.ResumeFeaturePipelineRequest
	1,  // 12: github.com.metaprov.modelaapi.services.featurepipeline.v1.FeaturePipelineService.ListFeaturePipelines:output_type -> github.com.metaprov.modelaapi.services.featurepipeline.v1.ListFeaturePipelineResponse
	3,  // 13: github.com.metaprov.modelaapi.services.featurepipeline.v1.FeaturePipelineService.CreateFeaturePipeline:output_type -> github.com.metaprov.modelaapi.services.featurepipeline.v1.CreateFeaturePipelineResponse
	7,  // 14: github.com.metaprov.modelaapi.services.featurepipeline.v1.FeaturePipelineService.GetFeaturePipeline:output_type -> github.com.metaprov.modelaapi.services.featurepipeline.v1.GetFeaturePipelineResponse
	5,  // 15: github.com.metaprov.modelaapi.services.featurepipeline.v1.FeaturePipelineService.UpdateFeaturePipeline:output_type -> github.com.metaprov.modelaapi.services.featurepipeline.v1.UpdateFeaturePipelineResponse
	9,  // 16: github.com.metaprov.modelaapi.services.featurepipeline.v1.FeaturePipelineService.DeleteFeaturePipeline:output_type -> github.com.metaprov.modelaapi.services.featurepipeline.v1.DeleteFeaturePipelineResponse
	10, // 17: github.com.metaprov.modelaapi.services.featurepipeline.v1.FeaturePipelineService.PauseFeaturePipeline:output_type -> github.com.metaprov.modelaapi.services.featurepipeline.v1.PauseFeaturePipelineResponse
	12, // 18: github.com.metaprov.modelaapi.services.featurepipeline.v1.FeaturePipelineService.ResumeFeaturePipeline:output_type -> github.com.metaprov.modelaapi.services.featurepipeline.v1.ResumeFeaturePipelineResponse
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() {
	file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_init()
}
func file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_init() {
	if File_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeaturePipelineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeaturePipelineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFeaturePipelineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFeaturePipelineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFeaturePipelineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFeaturePipelineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeaturePipelineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeaturePipelineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFeaturePipelineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFeaturePipelineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseFeaturePipelineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseFeaturePipelineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeFeaturePipelineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeFeaturePipelineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_goTypes,
		DependencyIndexes: file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_depIdxs,
		MessageInfos:      file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_msgTypes,
	}.Build()
	File_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto = out.File
	file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_rawDesc = nil
	file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_goTypes = nil
	file_github_com_metaprov_modelaapi_services_featurepipeline_v1_featurepipeline_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FeaturePipelineServiceClient is the client API for FeaturePipelineService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FeaturePipelineServiceClient interface {
	ListFeaturePipelines(ctx context.Context, in *ListFeaturePipelineRequest, opts ...grpc.CallOption) (*ListFeaturePipelineResponse, error)
	CreateFeaturePipeline(ctx context.Context, in *CreateFeaturePipelineRequest, opts ...grpc.CallOption) (*CreateFeaturePipelineResponse, error)
	GetFeaturePipeline(ctx context.Context, in *GetFeaturePipelineRequest, opts ...grpc.CallOption) (*GetFeaturePipelineResponse, error)
	UpdateFeaturePipeline(ctx context.Context, in *UpdateFeaturePipelineRequest, opts ...grpc.CallOption) (*UpdateFeaturePipelineResponse, error)
	DeleteFeaturePipeline(ctx context.Context, in *DeleteFeaturePipelineRequest, opts ...grpc.CallOption) (*DeleteFeaturePipelineResponse, error)
	PauseFeaturePipeline(ctx context.Context, in *PauseFeaturePipelineRequest, opts ...grpc.CallOption) (*PauseFeaturePipelineResponse, error)
	ResumeFeaturePipeline(ctx context.Context, in *ResumeFeaturePipelineRequest, opts ...grpc.CallOption) (*ResumeFeaturePipelineResponse, error)
}

type featurePipelineServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFeaturePipelineServiceClient(cc grpc.ClientConnInterface) FeaturePipelineServiceClient {
	return &featurePipelineServiceClient{cc}
}

func (c *featurePipelineServiceClient) ListFeaturePipelines(ctx context.Context, in *ListFeaturePipelineRequest, opts ...grpc.CallOption) (*ListFeaturePipelineResponse, error) {
	out := new(ListFeaturePipelineResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.featurepipeline.v1.FeaturePipelineService/ListFeaturePipelines", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featurePipelineServiceClient) CreateFeaturePipeline(ctx context.Context, in *CreateFeaturePipelineRequest, opts ...grpc.CallOption) (*CreateFeaturePipelineResponse, error) {
	out := new(CreateFeaturePipelineResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.featurepipeline.v1.FeaturePipelineService/CreateFeaturePipeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featurePipelineServiceClient) GetFeaturePipeline(ctx context.Context, in *GetFeaturePipelineRequest, opts ...grpc.CallOption) (*GetFeaturePipelineResponse, error) {
	out := new(GetFeaturePipelineResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.featurepipeline.v1.FeaturePipelineService/GetFeaturePipeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featurePipelineServiceClient) UpdateFeaturePipeline(ctx context.Context, in *UpdateFeaturePipelineRequest, opts ...grpc.CallOption) (*UpdateFeaturePipelineResponse, error) {
	out := new(UpdateFeaturePipelineResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.featurepipeline.v1.FeaturePipelineService/UpdateFeaturePipeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featurePipelineServiceClient) DeleteFeaturePipeline(ctx context.Context, in *DeleteFeaturePipelineRequest, opts ...grpc.CallOption) (*DeleteFeaturePipelineResponse, error) {
	out := new(DeleteFeaturePipelineResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.featurepipeline.v1.FeaturePipelineService/DeleteFeaturePipeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featurePipelineServiceClient) PauseFeaturePipeline(ctx context.Context, in *PauseFeaturePipelineRequest, opts ...grpc.CallOption) (*PauseFeaturePipelineResponse, error) {
	out := new(PauseFeaturePipelineResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.featurepipeline.v1.FeaturePipelineService/PauseFeaturePipeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featurePipelineServiceClient) ResumeFeaturePipeline(ctx context.Context, in *ResumeFeaturePipelineRequest, opts ...grpc.CallOption) (*ResumeFeaturePipelineResponse, error) {
	out := new(ResumeFeaturePipelineResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.featurepipeline.v1.FeaturePipelineService/ResumeFeaturePipeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FeaturePipelineServiceServer is the server API for FeaturePipelineService service.
type FeaturePipelineServiceServer interface {
	ListFeaturePipelines(context.Context, *ListFeaturePipelineRequest) (*ListFeaturePipelineResponse, error)
	CreateFeaturePipeline(context.Context, *CreateFeaturePipelineRequest) (*CreateFeaturePipelineResponse, error)
	GetFeaturePipeline(context.Context, *GetFeaturePipelineRequest) (*GetFeaturePipelineResponse, error)
	UpdateFeaturePipeline(context.Context, *UpdateFeaturePipelineRequest) (*UpdateFeaturePipelineResponse, error)
	DeleteFeaturePipeline(context.Context, *DeleteFeaturePipelineRequest) (*DeleteFeaturePipelineResponse, error)
	PauseFeaturePipeline(context.Context, *PauseFeaturePipelineRequest) (*PauseFeaturePipelineResponse, error)
	ResumeFeaturePipeline(context.Context, *ResumeFeaturePipelineRequest) (*ResumeFeaturePipelineResponse, error)
}

// UnimplementedFeaturePipelineServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFeaturePipelineServiceServer struct {
}

func (*UnimplementedFeaturePipelineServiceServer) ListFeaturePipelines(context.Context, *ListFeaturePipelineRequest) (*ListFeaturePipelineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListFeaturePipelines not implemented")
}
func (*UnimplementedFeaturePipelineServiceServer) CreateFeaturePipeline(context.Context, *CreateFeaturePipelineRequest) (*CreateFeaturePipelineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFeaturePipeline not implemented")
}
func (*UnimplementedFeaturePipelineServiceServer) GetFeaturePipeline(context.Context, *GetFeaturePipelineRequest) (*GetFeaturePipelineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFeaturePipeline not implemented")
}
func (*UnimplementedFeaturePipelineServiceServer) UpdateFeaturePipeline(context.Context, *UpdateFeaturePipelineRequest) (*UpdateFeaturePipelineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFeaturePipeline not implemented")
}
func (*UnimplementedFeaturePipelineServiceServer) DeleteFeaturePipeline(context.Context, *DeleteFeaturePipelineRequest) (*DeleteFeaturePipelineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFeaturePipeline not implemented")
}
func (*UnimplementedFeaturePipelineServiceServer) PauseFeaturePipeline(context.Context, *PauseFeaturePipelineRequest) (*PauseFeaturePipelineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PauseFeaturePipeline not implemented")
}
func (*UnimplementedFeaturePipelineServiceServer) ResumeFeaturePipeline(context.Context, *ResumeFeaturePipelineRequest) (*ResumeFeaturePipelineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResumeFeaturePipeline not implemented")
}

func RegisterFeaturePipelineServiceServer(s *grpc.Server, srv FeaturePipelineServiceServer) {
	s.RegisterService(&_FeaturePipelineService_serviceDesc, srv)
}

func _FeaturePipelineService_ListFeaturePipelines_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFeaturePipelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeaturePipelineServiceServer).ListFeaturePipelines(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.featurepipeline.v1.FeaturePipelineService/ListFeaturePipelines",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeaturePipelineServiceServer).ListFeaturePipelines(ctx, req.(*ListFeaturePipelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeaturePipelineService_CreateFeaturePipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFeaturePipelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeaturePipelineServiceServer).CreateFeaturePipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.featurepipeline.v1.FeaturePipelineService/CreateFeaturePipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeaturePipelineServiceServer).CreateFeaturePipeline(ctx, req.(*CreateFeaturePipelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeaturePipelineService_GetFeaturePipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFeaturePipelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeaturePipelineServiceServer).GetFeaturePipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.featurepipeline.v1.FeaturePipelineService/GetFeaturePipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeaturePipelineServiceServer).GetFeaturePipeline(ctx, req.(*GetFeaturePipelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeaturePipelineService_UpdateFeaturePipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFeaturePipelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeaturePipelineServiceServer).UpdateFeaturePipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.featurepipeline.v1.FeaturePipelineService/UpdateFeaturePipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeaturePipelineServiceServer).UpdateFeaturePipeline(ctx, req.(*UpdateFeaturePipelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeaturePipelineService_DeleteFeaturePipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFeaturePipelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeaturePipelineServiceServer).DeleteFeaturePipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.featurepipeline.v1.FeaturePipelineService/DeleteFeaturePipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeaturePipelineServiceServer).DeleteFeaturePipeline(ctx, req.(*DeleteFeaturePipelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeaturePipelineService_PauseFeaturePipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PauseFeaturePipelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeaturePipelineServiceServer).PauseFeaturePipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.featurepipeline.v1.FeaturePipelineService/PauseFeaturePipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeaturePipelineServiceServer).PauseFeaturePipeline(ctx, req.(*PauseFeaturePipelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeaturePipelineService_ResumeFeaturePipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResumeFeaturePipelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeaturePipelineServiceServer).ResumeFeaturePipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.featurepipeline.v1.FeaturePipelineService/ResumeFeaturePipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeaturePipelineServiceServer).ResumeFeaturePipeline(ctx, req.(*ResumeFeaturePipelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FeaturePipelineService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.metaprov.modelaapi.services.featurepipeline.v1.FeaturePipelineService",
	HandlerType: (*FeaturePipelineServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListFeaturePipelines",
			Handler:    _FeaturePipelineService_ListFeaturePipelines_Handler,
		},
		{
			MethodName: "CreateFeaturePipeline",
			Handler:    _FeaturePipelineService_CreateFeaturePipeline_Handler,
		},
		{
			MethodName: "GetFeaturePipeline",
			Handler:    _FeaturePipelineService_GetFeaturePipeline_Handler,
		},
		{
			MethodName: "UpdateFeaturePipeline",
			Handler:    _FeaturePipelineService_UpdateFeaturePipeline_Handler,
		},
		{
			MethodName: "DeleteFeaturePipeline",
			Handler:    _FeaturePipelineService_DeleteFeaturePipeline_Handler,
		},
		{
			MethodName: "PauseFeaturePipeline",
			Handler:    _FeaturePipelineService_PauseFeaturePipeline_Handler,
		},
		{
			MethodName: "ResumeFeaturePipeline",
			Handler:    _FeaturePipelineService_ResumeFeaturePipeline_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/metaprov/modelaapi/services/featurepipeline/v1/featurepipeline.proto",
}
