// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.7
// source: github.com/metaprov/modeldapi/services/featurehistogram/v1/featurehistogram.proto

package v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	v1alpha1 "github.com/metaprov/modeldapi/pkg/apis/data/v1alpha1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ListFeatureHistogramsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Labels    map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListFeatureHistogramsRequest) Reset() {
	*x = ListFeatureHistogramsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeatureHistogramsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeatureHistogramsRequest) ProtoMessage() {}

func (x *ListFeatureHistogramsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeatureHistogramsRequest.ProtoReflect.Descriptor instead.
func (*ListFeatureHistogramsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_rawDescGZIP(), []int{0}
}

func (x *ListFeatureHistogramsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListFeatureHistogramsRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ListFeatureHistogramsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items *v1alpha1.FeatureHistogramList `protobuf:"bytes,1,opt,name=items,proto3" json:"items,omitempty"`
}

func (x *ListFeatureHistogramsResponse) Reset() {
	*x = ListFeatureHistogramsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeatureHistogramsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeatureHistogramsResponse) ProtoMessage() {}

func (x *ListFeatureHistogramsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeatureHistogramsResponse.ProtoReflect.Descriptor instead.
func (*ListFeatureHistogramsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_rawDescGZIP(), []int{1}
}

func (x *ListFeatureHistogramsResponse) GetItems() *v1alpha1.FeatureHistogramList {
	if x != nil {
		return x.Items
	}
	return nil
}

type CreateFeatureHistogramRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.FeatureHistogram `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *CreateFeatureHistogramRequest) Reset() {
	*x = CreateFeatureHistogramRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFeatureHistogramRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeatureHistogramRequest) ProtoMessage() {}

func (x *CreateFeatureHistogramRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeatureHistogramRequest.ProtoReflect.Descriptor instead.
func (*CreateFeatureHistogramRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_rawDescGZIP(), []int{2}
}

func (x *CreateFeatureHistogramRequest) GetItem() *v1alpha1.FeatureHistogram {
	if x != nil {
		return x.Item
	}
	return nil
}

type CreateFeatureHistogramResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateFeatureHistogramResponse) Reset() {
	*x = CreateFeatureHistogramResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFeatureHistogramResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeatureHistogramResponse) ProtoMessage() {}

func (x *CreateFeatureHistogramResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeatureHistogramResponse.ProtoReflect.Descriptor instead.
func (*CreateFeatureHistogramResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_rawDescGZIP(), []int{3}
}

type UpdateFeatureHistogramRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.FeatureHistogram `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *UpdateFeatureHistogramRequest) Reset() {
	*x = UpdateFeatureHistogramRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFeatureHistogramRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFeatureHistogramRequest) ProtoMessage() {}

func (x *UpdateFeatureHistogramRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFeatureHistogramRequest.ProtoReflect.Descriptor instead.
func (*UpdateFeatureHistogramRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateFeatureHistogramRequest) GetItem() *v1alpha1.FeatureHistogram {
	if x != nil {
		return x.Item
	}
	return nil
}

type UpdateFeatureHistogramResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateFeatureHistogramResponse) Reset() {
	*x = UpdateFeatureHistogramResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFeatureHistogramResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFeatureHistogramResponse) ProtoMessage() {}

func (x *UpdateFeatureHistogramResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFeatureHistogramResponse.ProtoReflect.Descriptor instead.
func (*UpdateFeatureHistogramResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_rawDescGZIP(), []int{5}
}

type GetFeatureHistogramRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetFeatureHistogramRequest) Reset() {
	*x = GetFeatureHistogramRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeatureHistogramRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeatureHistogramRequest) ProtoMessage() {}

func (x *GetFeatureHistogramRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeatureHistogramRequest.ProtoReflect.Descriptor instead.
func (*GetFeatureHistogramRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_rawDescGZIP(), []int{6}
}

func (x *GetFeatureHistogramRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetFeatureHistogramRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetFeatureHistogramResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v1alpha1.FeatureHistogram `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Yaml string                     `protobuf:"bytes,2,opt,name=yaml,proto3" json:"yaml,omitempty"`
}

func (x *GetFeatureHistogramResponse) Reset() {
	*x = GetFeatureHistogramResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeatureHistogramResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeatureHistogramResponse) ProtoMessage() {}

func (x *GetFeatureHistogramResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeatureHistogramResponse.ProtoReflect.Descriptor instead.
func (*GetFeatureHistogramResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_rawDescGZIP(), []int{7}
}

func (x *GetFeatureHistogramResponse) GetItem() *v1alpha1.FeatureHistogram {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *GetFeatureHistogramResponse) GetYaml() string {
	if x != nil {
		return x.Yaml
	}
	return ""
}

type DeleteFeatureHistogramRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteFeatureHistogramRequest) Reset() {
	*x = DeleteFeatureHistogramRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFeatureHistogramRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFeatureHistogramRequest) ProtoMessage() {}

func (x *DeleteFeatureHistogramRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFeatureHistogramRequest.ProtoReflect.Descriptor instead.
func (*DeleteFeatureHistogramRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteFeatureHistogramRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeleteFeatureHistogramRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteFeatureHistogramResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteFeatureHistogramResponse) Reset() {
	*x = DeleteFeatureHistogramResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFeatureHistogramResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFeatureHistogramResponse) ProtoMessage() {}

func (x *DeleteFeatureHistogramResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFeatureHistogramResponse.ProtoReflect.Descriptor instead.
func (*DeleteFeatureHistogramResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_rawDescGZIP(), []int{9}
}

var File_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto protoreflect.FileDescriptor

var file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_rawDesc = []byte{
	0x0a, 0x51, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x44, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xf5, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x7c, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x64, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x81, 0x01, 0x0a, 0x1d,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x7b, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x5a, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x20, 0x0a, 0x1e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7b,
	0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x5a, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70,
	0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x20, 0x0a, 0x1e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4e, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x8d, 0x01,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a,
	0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x61, 0x6d,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x22, 0x51, 0x0a,
	0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x20, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0xd3, 0x09, 0x0a, 0x17, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xeb,
	0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x58, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x59, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x12, 0xf1, 0x01, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x59, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x3a, 0x01, 0x2a,
	0x12, 0xec, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x56, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x57, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1e, 0x12, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x68, 0x69,
	0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12,
	0x92, 0x02, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x59, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x68, 0x69, 0x73, 0x74, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3b, 0x1a, 0x36, 0x2f, 0x76, 0x31, 0x2f, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73,
	0x2f, 0x7b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x6e, 0x61, 0x6d, 0x65,
	0x7d, 0x3a, 0x01, 0x2a, 0x12, 0xd1, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12,
	0x59, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x5a, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x68, 0x69, 0x73, 0x74, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_rawDescOnce sync.Once
	file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_rawDescData = file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_rawDesc
)

func file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_rawDescGZIP() []byte {
	file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_rawDescOnce.Do(func() {
		file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_rawDescData)
	})
	return file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_rawDescData
}

var file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_goTypes = []interface{}{
	(*ListFeatureHistogramsRequest)(nil),   // 0: github.com.metaprov.modeldapi.services.featurehistogram.v1.ListFeatureHistogramsRequest
	(*ListFeatureHistogramsResponse)(nil),  // 1: github.com.metaprov.modeldapi.services.featurehistogram.v1.ListFeatureHistogramsResponse
	(*CreateFeatureHistogramRequest)(nil),  // 2: github.com.metaprov.modeldapi.services.featurehistogram.v1.CreateFeatureHistogramRequest
	(*CreateFeatureHistogramResponse)(nil), // 3: github.com.metaprov.modeldapi.services.featurehistogram.v1.CreateFeatureHistogramResponse
	(*UpdateFeatureHistogramRequest)(nil),  // 4: github.com.metaprov.modeldapi.services.featurehistogram.v1.UpdateFeatureHistogramRequest
	(*UpdateFeatureHistogramResponse)(nil), // 5: github.com.metaprov.modeldapi.services.featurehistogram.v1.UpdateFeatureHistogramResponse
	(*GetFeatureHistogramRequest)(nil),     // 6: github.com.metaprov.modeldapi.services.featurehistogram.v1.GetFeatureHistogramRequest
	(*GetFeatureHistogramResponse)(nil),    // 7: github.com.metaprov.modeldapi.services.featurehistogram.v1.GetFeatureHistogramResponse
	(*DeleteFeatureHistogramRequest)(nil),  // 8: github.com.metaprov.modeldapi.services.featurehistogram.v1.DeleteFeatureHistogramRequest
	(*DeleteFeatureHistogramResponse)(nil), // 9: github.com.metaprov.modeldapi.services.featurehistogram.v1.DeleteFeatureHistogramResponse
	nil,                                    // 10: github.com.metaprov.modeldapi.services.featurehistogram.v1.ListFeatureHistogramsRequest.LabelsEntry
	(*v1alpha1.FeatureHistogramList)(nil),  // 11: github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.FeatureHistogramList
	(*v1alpha1.FeatureHistogram)(nil),      // 12: github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.FeatureHistogram
}
var file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_depIdxs = []int32{
	10, // 0: github.com.metaprov.modeldapi.services.featurehistogram.v1.ListFeatureHistogramsRequest.labels:type_name -> github.com.metaprov.modeldapi.services.featurehistogram.v1.ListFeatureHistogramsRequest.LabelsEntry
	11, // 1: github.com.metaprov.modeldapi.services.featurehistogram.v1.ListFeatureHistogramsResponse.items:type_name -> github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.FeatureHistogramList
	12, // 2: github.com.metaprov.modeldapi.services.featurehistogram.v1.CreateFeatureHistogramRequest.item:type_name -> github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.FeatureHistogram
	12, // 3: github.com.metaprov.modeldapi.services.featurehistogram.v1.UpdateFeatureHistogramRequest.item:type_name -> github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.FeatureHistogram
	12, // 4: github.com.metaprov.modeldapi.services.featurehistogram.v1.GetFeatureHistogramResponse.item:type_name -> github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.FeatureHistogram
	0,  // 5: github.com.metaprov.modeldapi.services.featurehistogram.v1.FeatureHistogramService.ListFeatureHistograms:input_type -> github.com.metaprov.modeldapi.services.featurehistogram.v1.ListFeatureHistogramsRequest
	2,  // 6: github.com.metaprov.modeldapi.services.featurehistogram.v1.FeatureHistogramService.CreateFeatureHistogram:input_type -> github.com.metaprov.modeldapi.services.featurehistogram.v1.CreateFeatureHistogramRequest
	6,  // 7: github.com.metaprov.modeldapi.services.featurehistogram.v1.FeatureHistogramService.GetFeatureHistogram:input_type -> github.com.metaprov.modeldapi.services.featurehistogram.v1.GetFeatureHistogramRequest
	4,  // 8: github.com.metaprov.modeldapi.services.featurehistogram.v1.FeatureHistogramService.UpdateFeatureHistogram:input_type -> github.com.metaprov.modeldapi.services.featurehistogram.v1.UpdateFeatureHistogramRequest
	8,  // 9: github.com.metaprov.modeldapi.services.featurehistogram.v1.FeatureHistogramService.DeleteFeatureHistogram:input_type -> github.com.metaprov.modeldapi.services.featurehistogram.v1.DeleteFeatureHistogramRequest
	1,  // 10: github.com.metaprov.modeldapi.services.featurehistogram.v1.FeatureHistogramService.ListFeatureHistograms:output_type -> github.com.metaprov.modeldapi.services.featurehistogram.v1.ListFeatureHistogramsResponse
	3,  // 11: github.com.metaprov.modeldapi.services.featurehistogram.v1.FeatureHistogramService.CreateFeatureHistogram:output_type -> github.com.metaprov.modeldapi.services.featurehistogram.v1.CreateFeatureHistogramResponse
	7,  // 12: github.com.metaprov.modeldapi.services.featurehistogram.v1.FeatureHistogramService.GetFeatureHistogram:output_type -> github.com.metaprov.modeldapi.services.featurehistogram.v1.GetFeatureHistogramResponse
	5,  // 13: github.com.metaprov.modeldapi.services.featurehistogram.v1.FeatureHistogramService.UpdateFeatureHistogram:output_type -> github.com.metaprov.modeldapi.services.featurehistogram.v1.UpdateFeatureHistogramResponse
	9,  // 14: github.com.metaprov.modeldapi.services.featurehistogram.v1.FeatureHistogramService.DeleteFeatureHistogram:output_type -> github.com.metaprov.modeldapi.services.featurehistogram.v1.DeleteFeatureHistogramResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() {
	file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_init()
}
func file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_init() {
	if File_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeatureHistogramsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeatureHistogramsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFeatureHistogramRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFeatureHistogramResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFeatureHistogramRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFeatureHistogramResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeatureHistogramRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeatureHistogramResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFeatureHistogramRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFeatureHistogramResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_goTypes,
		DependencyIndexes: file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_depIdxs,
		MessageInfos:      file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_msgTypes,
	}.Build()
	File_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto = out.File
	file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_rawDesc = nil
	file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_goTypes = nil
	file_github_com_metaprov_modeldapi_services_featurehistogram_v1_featurehistogram_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FeatureHistogramServiceClient is the client API for FeatureHistogramService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FeatureHistogramServiceClient interface {
	ListFeatureHistograms(ctx context.Context, in *ListFeatureHistogramsRequest, opts ...grpc.CallOption) (*ListFeatureHistogramsResponse, error)
	CreateFeatureHistogram(ctx context.Context, in *CreateFeatureHistogramRequest, opts ...grpc.CallOption) (*CreateFeatureHistogramResponse, error)
	GetFeatureHistogram(ctx context.Context, in *GetFeatureHistogramRequest, opts ...grpc.CallOption) (*GetFeatureHistogramResponse, error)
	UpdateFeatureHistogram(ctx context.Context, in *UpdateFeatureHistogramRequest, opts ...grpc.CallOption) (*UpdateFeatureHistogramResponse, error)
	DeleteFeatureHistogram(ctx context.Context, in *DeleteFeatureHistogramRequest, opts ...grpc.CallOption) (*DeleteFeatureHistogramResponse, error)
}

type featureHistogramServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFeatureHistogramServiceClient(cc grpc.ClientConnInterface) FeatureHistogramServiceClient {
	return &featureHistogramServiceClient{cc}
}

func (c *featureHistogramServiceClient) ListFeatureHistograms(ctx context.Context, in *ListFeatureHistogramsRequest, opts ...grpc.CallOption) (*ListFeatureHistogramsResponse, error) {
	out := new(ListFeatureHistogramsResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.featurehistogram.v1.FeatureHistogramService/ListFeatureHistograms", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featureHistogramServiceClient) CreateFeatureHistogram(ctx context.Context, in *CreateFeatureHistogramRequest, opts ...grpc.CallOption) (*CreateFeatureHistogramResponse, error) {
	out := new(CreateFeatureHistogramResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.featurehistogram.v1.FeatureHistogramService/CreateFeatureHistogram", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featureHistogramServiceClient) GetFeatureHistogram(ctx context.Context, in *GetFeatureHistogramRequest, opts ...grpc.CallOption) (*GetFeatureHistogramResponse, error) {
	out := new(GetFeatureHistogramResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.featurehistogram.v1.FeatureHistogramService/GetFeatureHistogram", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featureHistogramServiceClient) UpdateFeatureHistogram(ctx context.Context, in *UpdateFeatureHistogramRequest, opts ...grpc.CallOption) (*UpdateFeatureHistogramResponse, error) {
	out := new(UpdateFeatureHistogramResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.featurehistogram.v1.FeatureHistogramService/UpdateFeatureHistogram", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *featureHistogramServiceClient) DeleteFeatureHistogram(ctx context.Context, in *DeleteFeatureHistogramRequest, opts ...grpc.CallOption) (*DeleteFeatureHistogramResponse, error) {
	out := new(DeleteFeatureHistogramResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.featurehistogram.v1.FeatureHistogramService/DeleteFeatureHistogram", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FeatureHistogramServiceServer is the server API for FeatureHistogramService service.
type FeatureHistogramServiceServer interface {
	ListFeatureHistograms(context.Context, *ListFeatureHistogramsRequest) (*ListFeatureHistogramsResponse, error)
	CreateFeatureHistogram(context.Context, *CreateFeatureHistogramRequest) (*CreateFeatureHistogramResponse, error)
	GetFeatureHistogram(context.Context, *GetFeatureHistogramRequest) (*GetFeatureHistogramResponse, error)
	UpdateFeatureHistogram(context.Context, *UpdateFeatureHistogramRequest) (*UpdateFeatureHistogramResponse, error)
	DeleteFeatureHistogram(context.Context, *DeleteFeatureHistogramRequest) (*DeleteFeatureHistogramResponse, error)
}

// UnimplementedFeatureHistogramServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFeatureHistogramServiceServer struct {
}

func (*UnimplementedFeatureHistogramServiceServer) ListFeatureHistograms(context.Context, *ListFeatureHistogramsRequest) (*ListFeatureHistogramsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListFeatureHistograms not implemented")
}
func (*UnimplementedFeatureHistogramServiceServer) CreateFeatureHistogram(context.Context, *CreateFeatureHistogramRequest) (*CreateFeatureHistogramResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFeatureHistogram not implemented")
}
func (*UnimplementedFeatureHistogramServiceServer) GetFeatureHistogram(context.Context, *GetFeatureHistogramRequest) (*GetFeatureHistogramResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFeatureHistogram not implemented")
}
func (*UnimplementedFeatureHistogramServiceServer) UpdateFeatureHistogram(context.Context, *UpdateFeatureHistogramRequest) (*UpdateFeatureHistogramResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFeatureHistogram not implemented")
}
func (*UnimplementedFeatureHistogramServiceServer) DeleteFeatureHistogram(context.Context, *DeleteFeatureHistogramRequest) (*DeleteFeatureHistogramResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFeatureHistogram not implemented")
}

func RegisterFeatureHistogramServiceServer(s *grpc.Server, srv FeatureHistogramServiceServer) {
	s.RegisterService(&_FeatureHistogramService_serviceDesc, srv)
}

func _FeatureHistogramService_ListFeatureHistograms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFeatureHistogramsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeatureHistogramServiceServer).ListFeatureHistograms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.featurehistogram.v1.FeatureHistogramService/ListFeatureHistograms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeatureHistogramServiceServer).ListFeatureHistograms(ctx, req.(*ListFeatureHistogramsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeatureHistogramService_CreateFeatureHistogram_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFeatureHistogramRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeatureHistogramServiceServer).CreateFeatureHistogram(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.featurehistogram.v1.FeatureHistogramService/CreateFeatureHistogram",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeatureHistogramServiceServer).CreateFeatureHistogram(ctx, req.(*CreateFeatureHistogramRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeatureHistogramService_GetFeatureHistogram_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFeatureHistogramRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeatureHistogramServiceServer).GetFeatureHistogram(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.featurehistogram.v1.FeatureHistogramService/GetFeatureHistogram",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeatureHistogramServiceServer).GetFeatureHistogram(ctx, req.(*GetFeatureHistogramRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeatureHistogramService_UpdateFeatureHistogram_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFeatureHistogramRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeatureHistogramServiceServer).UpdateFeatureHistogram(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.featurehistogram.v1.FeatureHistogramService/UpdateFeatureHistogram",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeatureHistogramServiceServer).UpdateFeatureHistogram(ctx, req.(*UpdateFeatureHistogramRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeatureHistogramService_DeleteFeatureHistogram_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFeatureHistogramRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeatureHistogramServiceServer).DeleteFeatureHistogram(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.featurehistogram.v1.FeatureHistogramService/DeleteFeatureHistogram",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeatureHistogramServiceServer).DeleteFeatureHistogram(ctx, req.(*DeleteFeatureHistogramRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FeatureHistogramService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.metaprov.modeldapi.services.featurehistogram.v1.FeatureHistogramService",
	HandlerType: (*FeatureHistogramServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListFeatureHistograms",
			Handler:    _FeatureHistogramService_ListFeatureHistograms_Handler,
		},
		{
			MethodName: "CreateFeatureHistogram",
			Handler:    _FeatureHistogramService_CreateFeatureHistogram_Handler,
		},
		{
			MethodName: "GetFeatureHistogram",
			Handler:    _FeatureHistogramService_GetFeatureHistogram_Handler,
		},
		{
			MethodName: "UpdateFeatureHistogram",
			Handler:    _FeatureHistogramService_UpdateFeatureHistogram_Handler,
		},
		{
			MethodName: "DeleteFeatureHistogram",
			Handler:    _FeatureHistogramService_DeleteFeatureHistogram_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/metaprov/modeldapi/services/featurehistogram/v1/featurehistogram.proto",
}
