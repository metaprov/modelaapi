syntax = "proto3";
option go_package = "github.com/metaprov/modelaapi/services/study/v1";
package github.com.metaprov.modelaapi.services.study.v1;

import "google/protobuf/field_mask.proto";
import "google/api/annotations.proto";
import "github.com/metaprov/modelaapi/pkg/apis/training/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/services/common/v1/common.proto";

message GetStudyRequest {
    string namespace = 1;
    string name      = 2;
}

message GetStudyResponse {
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study item = 1;
    string yaml = 2;
}


message ListStudyRequest {
    string namespace = 1;
    map<string,string> labels =3;
}

message ListStudyResponse {
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.StudyList items = 1;
}


message CreateStudyRequest {
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study item = 1;
}

message CreateStudyResponse {}


message UpdateStudyRequest {
    github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study item = 1;
    google.protobuf.FieldMask field_mask = 2;
}


message CreateStudyProfileRequest {
    string namespace = 1;
    string name      = 2;
    repeated github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Model models   = 3;
}

message CreateStudyProfileResponse {
    string namespace = 1;
    string name      = 2;
    string uri       = 3;
}

// Ask for the actual profile.
message GetStudyProfileRequest {
    string namespace = 1;
    string name      = 2;
    int32  models    = 3; // the number of models.
}

message GetStudyProfileResponse {
    github.com.metaprov.modelaapi.services.common.v1.StudyProfile profile = 1;
    repeated github.com.metaprov.modelaapi.services.common.v1.ModelProfile modelsProfile = 2;
}

message AbortStudyRequest {
    string namespace = 1;
    string name      = 2;
}

message AbortStudyResponse {

}

message PauseStudyRequest {
    string namespace = 1;
    string name      = 2;
}

message PauseStudyResponse {

}

message ResumeStudyRequest {
    string namespace = 1;
    string name      = 2;
}

message ResumeStudyResponse {

}

message DeleteStudyRequest {
    string namespace = 1;
    string name      = 2;
}

message DeleteStudyResponse {

}


message UpdateStudyResponse {

}


service StudyService {

    rpc ListStudies(ListStudyRequest) returns (ListStudyResponse) {
        option (google.api.http).get = "/v1/studies/{namespace}";
    }

    rpc CreateStudy(CreateStudyRequest) returns (CreateStudyResponse) {
        option (google.api.http) = {
			post: "/v1/studies"
			body: "*"
		};
    }

    rpc GetStudy(GetStudyRequest) returns (GetStudyResponse) {
        option (google.api.http).get = "/v1/studies/{namespace}/{name}";
    }

    rpc UpdateStudy(UpdateStudyRequest) returns (UpdateStudyResponse) {
        option (google.api.http) = {
			put: "/v1/studies/{item.metadata.namespace}/{item.metadata.name}"
			body: "*"
		};
    }

    rpc DeleteStudy(DeleteStudyRequest) returns (DeleteStudyResponse) {
        option (google.api.http).delete = "/v1/studies/{namespace}/{name}";
    }

    rpc CreateStudyProfile(CreateStudyProfileRequest) returns (CreateStudyProfileResponse) {
        option (google.api.http).post = "/v1/studies/{namespace}/{name}/profile";
    }

    rpc GetStudyProfile(GetStudyProfileRequest) returns (GetStudyProfileResponse) {
        option (google.api.http).get = "/v1/studies/{namespace}/{name}/profile";
    }

    rpc AbortStudy(AbortStudyRequest) returns (AbortStudyResponse) {
        option (google.api.http).post = "/v1/studies/{namespace}/{name}:abort";
    }

    rpc PauseStudy(PauseStudyRequest) returns (PauseStudyResponse) {
        option (google.api.http).post = "/v1/studies/{namespace}/{name}:pause";
    }

    rpc ResumeStudy(ResumeStudyRequest) returns (ResumeStudyResponse) {
        option (google.api.http).post = "/v1/studies/{namespace}/{name}:resume";
    }
}