// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: services/humans/v1/humans.proto

package v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	v1alpha1 "github.com/metaprov/modelaapi/pkg/apis/infra/v1alpha1"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type LabelCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *v1alpha1.Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Upsert  bool              `protobuf:"varint,2,opt,name=upsert,proto3" json:"upsert,omitempty"`
}

func (x *LabelCreateRequest) Reset() {
	*x = LabelCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_humans_v1_humans_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelCreateRequest) ProtoMessage() {}

func (x *LabelCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_humans_v1_humans_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelCreateRequest.ProtoReflect.Descriptor instead.
func (*LabelCreateRequest) Descriptor() ([]byte, []int) {
	return file_services_humans_v1_humans_proto_rawDescGZIP(), []int{0}
}

func (x *LabelCreateRequest) GetAccount() *v1alpha1.Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *LabelCreateRequest) GetUpsert() bool {
	if x != nil {
		return x.Upsert
	}
	return false
}

type LabelCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LabelCreateResponse) Reset() {
	*x = LabelCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_humans_v1_humans_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelCreateResponse) ProtoMessage() {}

func (x *LabelCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_humans_v1_humans_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelCreateResponse.ProtoReflect.Descriptor instead.
func (*LabelCreateResponse) Descriptor() ([]byte, []int) {
	return file_services_humans_v1_humans_proto_rawDescGZIP(), []int{1}
}

type NotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// one or more notifiers might be involved
	Notifiers *v1alpha1.Notifier `protobuf:"bytes,1,opt,name=notifiers,proto3" json:"notifiers,omitempty"`
	// the msg to send
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	// Any attachments.
	Attachment []byte `protobuf:"bytes,3,opt,name=attachment,proto3" json:"attachment,omitempty"`
}

func (x *NotificationRequest) Reset() {
	*x = NotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_humans_v1_humans_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationRequest) ProtoMessage() {}

func (x *NotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_humans_v1_humans_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationRequest.ProtoReflect.Descriptor instead.
func (*NotificationRequest) Descriptor() ([]byte, []int) {
	return file_services_humans_v1_humans_proto_rawDescGZIP(), []int{2}
}

func (x *NotificationRequest) GetNotifiers() *v1alpha1.Notifier {
	if x != nil {
		return x.Notifiers
	}
	return nil
}

func (x *NotificationRequest) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *NotificationRequest) GetAttachment() []byte {
	if x != nil {
		return x.Attachment
	}
	return nil
}

type NotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NotificationResponse) Reset() {
	*x = NotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_humans_v1_humans_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationResponse) ProtoMessage() {}

func (x *NotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_humans_v1_humans_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationResponse.ProtoReflect.Descriptor instead.
func (*NotificationResponse) Descriptor() ([]byte, []int) {
	return file_services_humans_v1_humans_proto_rawDescGZIP(), []int{3}
}

var File_services_humans_v1_humans_proto protoreflect.FileDescriptor

var file_services_humans_v1_humans_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x68, 0x75, 0x6d, 0x61, 0x6e,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x1a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x86, 0x01, 0x0a, 0x12, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x58, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x70, 0x73, 0x65, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x13, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x5d, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xc4, 0x02, 0x0a, 0x0d,
	0x48, 0x75, 0x6d, 0x61, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x96, 0x01,
	0x0a, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x44, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70,
	0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x99, 0x01, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x46, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64,
	0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x68, 0x75, 0x6d,
	0x61, 0x6e, 0x73, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_humans_v1_humans_proto_rawDescOnce sync.Once
	file_services_humans_v1_humans_proto_rawDescData = file_services_humans_v1_humans_proto_rawDesc
)

func file_services_humans_v1_humans_proto_rawDescGZIP() []byte {
	file_services_humans_v1_humans_proto_rawDescOnce.Do(func() {
		file_services_humans_v1_humans_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_humans_v1_humans_proto_rawDescData)
	})
	return file_services_humans_v1_humans_proto_rawDescData
}

var file_services_humans_v1_humans_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_services_humans_v1_humans_proto_goTypes = []interface{}{
	(*LabelCreateRequest)(nil),   // 0: github.com.metaprov.modelaapi.services.humans.v1.LabelCreateRequest
	(*LabelCreateResponse)(nil),  // 1: github.com.metaprov.modelaapi.services.humans.v1.LabelCreateResponse
	(*NotificationRequest)(nil),  // 2: github.com.metaprov.modelaapi.services.humans.v1.NotificationRequest
	(*NotificationResponse)(nil), // 3: github.com.metaprov.modelaapi.services.humans.v1.NotificationResponse
	(*v1alpha1.Account)(nil),     // 4: github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account
	(*v1alpha1.Notifier)(nil),    // 5: github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier
}
var file_services_humans_v1_humans_proto_depIdxs = []int32{
	4, // 0: github.com.metaprov.modelaapi.services.humans.v1.LabelCreateRequest.account:type_name -> github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account
	5, // 1: github.com.metaprov.modelaapi.services.humans.v1.NotificationRequest.notifiers:type_name -> github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier
	0, // 2: github.com.metaprov.modelaapi.services.humans.v1.HumansService.Label:input_type -> github.com.metaprov.modelaapi.services.humans.v1.LabelCreateRequest
	2, // 3: github.com.metaprov.modelaapi.services.humans.v1.HumansService.Notify:input_type -> github.com.metaprov.modelaapi.services.humans.v1.NotificationRequest
	1, // 4: github.com.metaprov.modelaapi.services.humans.v1.HumansService.Label:output_type -> github.com.metaprov.modelaapi.services.humans.v1.LabelCreateResponse
	3, // 5: github.com.metaprov.modelaapi.services.humans.v1.HumansService.Notify:output_type -> github.com.metaprov.modelaapi.services.humans.v1.NotificationResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_services_humans_v1_humans_proto_init() }
func file_services_humans_v1_humans_proto_init() {
	if File_services_humans_v1_humans_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_humans_v1_humans_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_humans_v1_humans_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_humans_v1_humans_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_humans_v1_humans_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_humans_v1_humans_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_humans_v1_humans_proto_goTypes,
		DependencyIndexes: file_services_humans_v1_humans_proto_depIdxs,
		MessageInfos:      file_services_humans_v1_humans_proto_msgTypes,
	}.Build()
	File_services_humans_v1_humans_proto = out.File
	file_services_humans_v1_humans_proto_rawDesc = nil
	file_services_humans_v1_humans_proto_goTypes = nil
	file_services_humans_v1_humans_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HumansServiceClient is the client API for HumansService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HumansServiceClient interface {
	Label(ctx context.Context, in *LabelCreateRequest, opts ...grpc.CallOption) (*LabelCreateResponse, error)
	Notify(ctx context.Context, in *NotificationRequest, opts ...grpc.CallOption) (*NotificationResponse, error)
}

type humansServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewHumansServiceClient(cc grpc.ClientConnInterface) HumansServiceClient {
	return &humansServiceClient{cc}
}

func (c *humansServiceClient) Label(ctx context.Context, in *LabelCreateRequest, opts ...grpc.CallOption) (*LabelCreateResponse, error) {
	out := new(LabelCreateResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.humans.v1.HumansService/Label", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *humansServiceClient) Notify(ctx context.Context, in *NotificationRequest, opts ...grpc.CallOption) (*NotificationResponse, error) {
	out := new(NotificationResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modelaapi.services.humans.v1.HumansService/Notify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HumansServiceServer is the server API for HumansService service.
type HumansServiceServer interface {
	Label(context.Context, *LabelCreateRequest) (*LabelCreateResponse, error)
	Notify(context.Context, *NotificationRequest) (*NotificationResponse, error)
}

// UnimplementedHumansServiceServer can be embedded to have forward compatible implementations.
type UnimplementedHumansServiceServer struct {
}

func (*UnimplementedHumansServiceServer) Label(context.Context, *LabelCreateRequest) (*LabelCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Label not implemented")
}
func (*UnimplementedHumansServiceServer) Notify(context.Context, *NotificationRequest) (*NotificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Notify not implemented")
}

func RegisterHumansServiceServer(s *grpc.Server, srv HumansServiceServer) {
	s.RegisterService(&_HumansService_serviceDesc, srv)
}

func _HumansService_Label_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LabelCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HumansServiceServer).Label(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.humans.v1.HumansService/Label",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HumansServiceServer).Label(ctx, req.(*LabelCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HumansService_Notify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HumansServiceServer).Notify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modelaapi.services.humans.v1.HumansService/Notify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HumansServiceServer).Notify(ctx, req.(*NotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HumansService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.metaprov.modelaapi.services.humans.v1.HumansService",
	HandlerType: (*HumansServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Label",
			Handler:    _HumansService_Label_Handler,
		},
		{
			MethodName: "Notify",
			Handler:    _HumansService_Notify_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/humans/v1/humans.proto",
}
