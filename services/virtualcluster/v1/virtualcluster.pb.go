// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: services/virtualcluster/v1/virtualcluster.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	v1alpha1 "github.com/metaprov/modeldapi/pkg/apis/infra/v1alpha1"
	v1 "github.com/metaprov/modeldapi/services/common/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ListVirtualClustersRequest struct {
	Namespace            string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Virtualclusterels    map[string]string `protobuf:"bytes,3,rep,name=virtualclusterels,proto3" json:"virtualclusterels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListVirtualClustersRequest) Reset()         { *m = ListVirtualClustersRequest{} }
func (m *ListVirtualClustersRequest) String() string { return proto.CompactTextString(m) }
func (*ListVirtualClustersRequest) ProtoMessage()    {}
func (*ListVirtualClustersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b780136f99c7a0af, []int{0}
}
func (m *ListVirtualClustersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVirtualClustersRequest.Unmarshal(m, b)
}
func (m *ListVirtualClustersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVirtualClustersRequest.Marshal(b, m, deterministic)
}
func (m *ListVirtualClustersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVirtualClustersRequest.Merge(m, src)
}
func (m *ListVirtualClustersRequest) XXX_Size() int {
	return xxx_messageInfo_ListVirtualClustersRequest.Size(m)
}
func (m *ListVirtualClustersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVirtualClustersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListVirtualClustersRequest proto.InternalMessageInfo

func (m *ListVirtualClustersRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ListVirtualClustersRequest) GetVirtualclusterels() map[string]string {
	if m != nil {
		return m.Virtualclusterels
	}
	return nil
}

type ListVirtualClustersResponse struct {
	Items                *v1alpha1.VirtualClusterList `protobuf:"bytes,1,opt,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ListVirtualClustersResponse) Reset()         { *m = ListVirtualClustersResponse{} }
func (m *ListVirtualClustersResponse) String() string { return proto.CompactTextString(m) }
func (*ListVirtualClustersResponse) ProtoMessage()    {}
func (*ListVirtualClustersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b780136f99c7a0af, []int{1}
}
func (m *ListVirtualClustersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVirtualClustersResponse.Unmarshal(m, b)
}
func (m *ListVirtualClustersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVirtualClustersResponse.Marshal(b, m, deterministic)
}
func (m *ListVirtualClustersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVirtualClustersResponse.Merge(m, src)
}
func (m *ListVirtualClustersResponse) XXX_Size() int {
	return xxx_messageInfo_ListVirtualClustersResponse.Size(m)
}
func (m *ListVirtualClustersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVirtualClustersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListVirtualClustersResponse proto.InternalMessageInfo

func (m *ListVirtualClustersResponse) GetItems() *v1alpha1.VirtualClusterList {
	if m != nil {
		return m.Items
	}
	return nil
}

type VirtualClusterResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VirtualClusterResponse) Reset()         { *m = VirtualClusterResponse{} }
func (m *VirtualClusterResponse) String() string { return proto.CompactTextString(m) }
func (*VirtualClusterResponse) ProtoMessage()    {}
func (*VirtualClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b780136f99c7a0af, []int{2}
}
func (m *VirtualClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualClusterResponse.Unmarshal(m, b)
}
func (m *VirtualClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualClusterResponse.Marshal(b, m, deterministic)
}
func (m *VirtualClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualClusterResponse.Merge(m, src)
}
func (m *VirtualClusterResponse) XXX_Size() int {
	return xxx_messageInfo_VirtualClusterResponse.Size(m)
}
func (m *VirtualClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualClusterResponse proto.InternalMessageInfo

type CreateVirtualClusterRequest struct {
	Namespace            string                       `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string                       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Labels               map[string]string            `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Spec                 *v1alpha1.VirtualClusterSpec `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *CreateVirtualClusterRequest) Reset()         { *m = CreateVirtualClusterRequest{} }
func (m *CreateVirtualClusterRequest) String() string { return proto.CompactTextString(m) }
func (*CreateVirtualClusterRequest) ProtoMessage()    {}
func (*CreateVirtualClusterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b780136f99c7a0af, []int{3}
}
func (m *CreateVirtualClusterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVirtualClusterRequest.Unmarshal(m, b)
}
func (m *CreateVirtualClusterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVirtualClusterRequest.Marshal(b, m, deterministic)
}
func (m *CreateVirtualClusterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVirtualClusterRequest.Merge(m, src)
}
func (m *CreateVirtualClusterRequest) XXX_Size() int {
	return xxx_messageInfo_CreateVirtualClusterRequest.Size(m)
}
func (m *CreateVirtualClusterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVirtualClusterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVirtualClusterRequest proto.InternalMessageInfo

func (m *CreateVirtualClusterRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *CreateVirtualClusterRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateVirtualClusterRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateVirtualClusterRequest) GetSpec() *v1alpha1.VirtualClusterSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type CreateVirtualClusterResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateVirtualClusterResponse) Reset()         { *m = CreateVirtualClusterResponse{} }
func (m *CreateVirtualClusterResponse) String() string { return proto.CompactTextString(m) }
func (*CreateVirtualClusterResponse) ProtoMessage()    {}
func (*CreateVirtualClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b780136f99c7a0af, []int{4}
}
func (m *CreateVirtualClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVirtualClusterResponse.Unmarshal(m, b)
}
func (m *CreateVirtualClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVirtualClusterResponse.Marshal(b, m, deterministic)
}
func (m *CreateVirtualClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVirtualClusterResponse.Merge(m, src)
}
func (m *CreateVirtualClusterResponse) XXX_Size() int {
	return xxx_messageInfo_CreateVirtualClusterResponse.Size(m)
}
func (m *CreateVirtualClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVirtualClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVirtualClusterResponse proto.InternalMessageInfo

type UpdateVirtualClusterRequest struct {
	Namespace            string                       `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string                       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Labels               map[string]string            `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Spec                 *v1alpha1.VirtualClusterSpec `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *UpdateVirtualClusterRequest) Reset()         { *m = UpdateVirtualClusterRequest{} }
func (m *UpdateVirtualClusterRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateVirtualClusterRequest) ProtoMessage()    {}
func (*UpdateVirtualClusterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b780136f99c7a0af, []int{5}
}
func (m *UpdateVirtualClusterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateVirtualClusterRequest.Unmarshal(m, b)
}
func (m *UpdateVirtualClusterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateVirtualClusterRequest.Marshal(b, m, deterministic)
}
func (m *UpdateVirtualClusterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateVirtualClusterRequest.Merge(m, src)
}
func (m *UpdateVirtualClusterRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateVirtualClusterRequest.Size(m)
}
func (m *UpdateVirtualClusterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateVirtualClusterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateVirtualClusterRequest proto.InternalMessageInfo

func (m *UpdateVirtualClusterRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *UpdateVirtualClusterRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateVirtualClusterRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *UpdateVirtualClusterRequest) GetSpec() *v1alpha1.VirtualClusterSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type UpdateVirtualClusterResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateVirtualClusterResponse) Reset()         { *m = UpdateVirtualClusterResponse{} }
func (m *UpdateVirtualClusterResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateVirtualClusterResponse) ProtoMessage()    {}
func (*UpdateVirtualClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b780136f99c7a0af, []int{6}
}
func (m *UpdateVirtualClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateVirtualClusterResponse.Unmarshal(m, b)
}
func (m *UpdateVirtualClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateVirtualClusterResponse.Marshal(b, m, deterministic)
}
func (m *UpdateVirtualClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateVirtualClusterResponse.Merge(m, src)
}
func (m *UpdateVirtualClusterResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateVirtualClusterResponse.Size(m)
}
func (m *UpdateVirtualClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateVirtualClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateVirtualClusterResponse proto.InternalMessageInfo

type GetVirtualClusterRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVirtualClusterRequest) Reset()         { *m = GetVirtualClusterRequest{} }
func (m *GetVirtualClusterRequest) String() string { return proto.CompactTextString(m) }
func (*GetVirtualClusterRequest) ProtoMessage()    {}
func (*GetVirtualClusterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b780136f99c7a0af, []int{7}
}
func (m *GetVirtualClusterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVirtualClusterRequest.Unmarshal(m, b)
}
func (m *GetVirtualClusterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVirtualClusterRequest.Marshal(b, m, deterministic)
}
func (m *GetVirtualClusterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVirtualClusterRequest.Merge(m, src)
}
func (m *GetVirtualClusterRequest) XXX_Size() int {
	return xxx_messageInfo_GetVirtualClusterRequest.Size(m)
}
func (m *GetVirtualClusterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVirtualClusterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVirtualClusterRequest proto.InternalMessageInfo

func (m *GetVirtualClusterRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *GetVirtualClusterRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetVirtualClusterResponse struct {
	Item                 *v1alpha1.VirtualCluster `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Yaml                 string                   `protobuf:"bytes,2,opt,name=yaml,proto3" json:"yaml,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetVirtualClusterResponse) Reset()         { *m = GetVirtualClusterResponse{} }
func (m *GetVirtualClusterResponse) String() string { return proto.CompactTextString(m) }
func (*GetVirtualClusterResponse) ProtoMessage()    {}
func (*GetVirtualClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b780136f99c7a0af, []int{8}
}
func (m *GetVirtualClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVirtualClusterResponse.Unmarshal(m, b)
}
func (m *GetVirtualClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVirtualClusterResponse.Marshal(b, m, deterministic)
}
func (m *GetVirtualClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVirtualClusterResponse.Merge(m, src)
}
func (m *GetVirtualClusterResponse) XXX_Size() int {
	return xxx_messageInfo_GetVirtualClusterResponse.Size(m)
}
func (m *GetVirtualClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVirtualClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVirtualClusterResponse proto.InternalMessageInfo

func (m *GetVirtualClusterResponse) GetItem() *v1alpha1.VirtualCluster {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *GetVirtualClusterResponse) GetYaml() string {
	if m != nil {
		return m.Yaml
	}
	return ""
}

type GetVirtualClusterNamespacesRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVirtualClusterNamespacesRequest) Reset()         { *m = GetVirtualClusterNamespacesRequest{} }
func (m *GetVirtualClusterNamespacesRequest) String() string { return proto.CompactTextString(m) }
func (*GetVirtualClusterNamespacesRequest) ProtoMessage()    {}
func (*GetVirtualClusterNamespacesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b780136f99c7a0af, []int{9}
}
func (m *GetVirtualClusterNamespacesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVirtualClusterNamespacesRequest.Unmarshal(m, b)
}
func (m *GetVirtualClusterNamespacesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVirtualClusterNamespacesRequest.Marshal(b, m, deterministic)
}
func (m *GetVirtualClusterNamespacesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVirtualClusterNamespacesRequest.Merge(m, src)
}
func (m *GetVirtualClusterNamespacesRequest) XXX_Size() int {
	return xxx_messageInfo_GetVirtualClusterNamespacesRequest.Size(m)
}
func (m *GetVirtualClusterNamespacesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVirtualClusterNamespacesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVirtualClusterNamespacesRequest proto.InternalMessageInfo

func (m *GetVirtualClusterNamespacesRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *GetVirtualClusterNamespacesRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetVirtualClusterNamespacesResponse struct {
	Namespaces           []*v1.NamespaceInfo `protobuf:"bytes,1,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetVirtualClusterNamespacesResponse) Reset()         { *m = GetVirtualClusterNamespacesResponse{} }
func (m *GetVirtualClusterNamespacesResponse) String() string { return proto.CompactTextString(m) }
func (*GetVirtualClusterNamespacesResponse) ProtoMessage()    {}
func (*GetVirtualClusterNamespacesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b780136f99c7a0af, []int{10}
}
func (m *GetVirtualClusterNamespacesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVirtualClusterNamespacesResponse.Unmarshal(m, b)
}
func (m *GetVirtualClusterNamespacesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVirtualClusterNamespacesResponse.Marshal(b, m, deterministic)
}
func (m *GetVirtualClusterNamespacesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVirtualClusterNamespacesResponse.Merge(m, src)
}
func (m *GetVirtualClusterNamespacesResponse) XXX_Size() int {
	return xxx_messageInfo_GetVirtualClusterNamespacesResponse.Size(m)
}
func (m *GetVirtualClusterNamespacesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVirtualClusterNamespacesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVirtualClusterNamespacesResponse proto.InternalMessageInfo

func (m *GetVirtualClusterNamespacesResponse) GetNamespaces() []*v1.NamespaceInfo {
	if m != nil {
		return m.Namespaces
	}
	return nil
}

type DeleteVirtualClusterRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVirtualClusterRequest) Reset()         { *m = DeleteVirtualClusterRequest{} }
func (m *DeleteVirtualClusterRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteVirtualClusterRequest) ProtoMessage()    {}
func (*DeleteVirtualClusterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b780136f99c7a0af, []int{11}
}
func (m *DeleteVirtualClusterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVirtualClusterRequest.Unmarshal(m, b)
}
func (m *DeleteVirtualClusterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVirtualClusterRequest.Marshal(b, m, deterministic)
}
func (m *DeleteVirtualClusterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVirtualClusterRequest.Merge(m, src)
}
func (m *DeleteVirtualClusterRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteVirtualClusterRequest.Size(m)
}
func (m *DeleteVirtualClusterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVirtualClusterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVirtualClusterRequest proto.InternalMessageInfo

func (m *DeleteVirtualClusterRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *DeleteVirtualClusterRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DeleteVirtualClusterResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVirtualClusterResponse) Reset()         { *m = DeleteVirtualClusterResponse{} }
func (m *DeleteVirtualClusterResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteVirtualClusterResponse) ProtoMessage()    {}
func (*DeleteVirtualClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b780136f99c7a0af, []int{12}
}
func (m *DeleteVirtualClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVirtualClusterResponse.Unmarshal(m, b)
}
func (m *DeleteVirtualClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVirtualClusterResponse.Marshal(b, m, deterministic)
}
func (m *DeleteVirtualClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVirtualClusterResponse.Merge(m, src)
}
func (m *DeleteVirtualClusterResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteVirtualClusterResponse.Size(m)
}
func (m *DeleteVirtualClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVirtualClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVirtualClusterResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ListVirtualClustersRequest)(nil), "github.com.metaprov.modeld.services.virtualcluster.v1.ListVirtualClustersRequest")
	proto.RegisterMapType((map[string]string)(nil), "github.com.metaprov.modeld.services.virtualcluster.v1.ListVirtualClustersRequest.VirtualclusterelsEntry")
	proto.RegisterType((*ListVirtualClustersResponse)(nil), "github.com.metaprov.modeld.services.virtualcluster.v1.ListVirtualClustersResponse")
	proto.RegisterType((*VirtualClusterResponse)(nil), "github.com.metaprov.modeld.services.virtualcluster.v1.VirtualClusterResponse")
	proto.RegisterType((*CreateVirtualClusterRequest)(nil), "github.com.metaprov.modeld.services.virtualcluster.v1.CreateVirtualClusterRequest")
	proto.RegisterMapType((map[string]string)(nil), "github.com.metaprov.modeld.services.virtualcluster.v1.CreateVirtualClusterRequest.LabelsEntry")
	proto.RegisterType((*CreateVirtualClusterResponse)(nil), "github.com.metaprov.modeld.services.virtualcluster.v1.CreateVirtualClusterResponse")
	proto.RegisterType((*UpdateVirtualClusterRequest)(nil), "github.com.metaprov.modeld.services.virtualcluster.v1.UpdateVirtualClusterRequest")
	proto.RegisterMapType((map[string]string)(nil), "github.com.metaprov.modeld.services.virtualcluster.v1.UpdateVirtualClusterRequest.LabelsEntry")
	proto.RegisterType((*UpdateVirtualClusterResponse)(nil), "github.com.metaprov.modeld.services.virtualcluster.v1.UpdateVirtualClusterResponse")
	proto.RegisterType((*GetVirtualClusterRequest)(nil), "github.com.metaprov.modeld.services.virtualcluster.v1.GetVirtualClusterRequest")
	proto.RegisterType((*GetVirtualClusterResponse)(nil), "github.com.metaprov.modeld.services.virtualcluster.v1.GetVirtualClusterResponse")
	proto.RegisterType((*GetVirtualClusterNamespacesRequest)(nil), "github.com.metaprov.modeld.services.virtualcluster.v1.GetVirtualClusterNamespacesRequest")
	proto.RegisterType((*GetVirtualClusterNamespacesResponse)(nil), "github.com.metaprov.modeld.services.virtualcluster.v1.GetVirtualClusterNamespacesResponse")
	proto.RegisterType((*DeleteVirtualClusterRequest)(nil), "github.com.metaprov.modeld.services.virtualcluster.v1.DeleteVirtualClusterRequest")
	proto.RegisterType((*DeleteVirtualClusterResponse)(nil), "github.com.metaprov.modeld.services.virtualcluster.v1.DeleteVirtualClusterResponse")
}

func init() {
	proto.RegisterFile("services/virtualcluster/v1/virtualcluster.proto", fileDescriptor_b780136f99c7a0af)
}

var fileDescriptor_b780136f99c7a0af = []byte{
	// 746 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x57, 0xcf, 0x6b, 0xd4, 0x40,
	0x14, 0x26, 0xdb, 0x6d, 0xa1, 0xaf, 0x20, 0x76, 0xba, 0xea, 0x36, 0x2d, 0x5a, 0x22, 0x42, 0xb5,
	0x30, 0x61, 0x2b, 0x4a, 0xad, 0xa8, 0x68, 0x5b, 0xa4, 0x50, 0xac, 0xa6, 0x58, 0x50, 0xd0, 0x32,
	0xcd, 0xbe, 0x6e, 0x43, 0xf3, 0xcb, 0xcc, 0x6c, 0xa0, 0x88, 0x1e, 0x7a, 0xf0, 0xe0, 0x55, 0x10,
	0xfc, 0xbb, 0x3c, 0x79, 0xf0, 0x20, 0x78, 0xf4, 0xe4, 0xc1, 0xb3, 0xcc, 0x24, 0xbb, 0x6d, 0x77,
	0xb3, 0x71, 0x0d, 0x39, 0xe8, 0x6d, 0x32, 0xc9, 0x7c, 0xef, 0xfb, 0xde, 0x37, 0xef, 0x4d, 0x06,
	0x4c, 0x8e, 0x51, 0xec, 0xd8, 0xc8, 0xcd, 0xd8, 0x89, 0x44, 0x9b, 0xb9, 0xb6, 0xdb, 0xe6, 0x02,
	0x23, 0x33, 0x6e, 0xf4, 0xcc, 0xd0, 0x30, 0x0a, 0x44, 0x40, 0x6e, 0xb4, 0x1c, 0xb1, 0xdf, 0xde,
	0xa5, 0x76, 0xe0, 0x51, 0x0f, 0x05, 0x0b, 0xa3, 0x20, 0xa6, 0x5e, 0xd0, 0x44, 0xb7, 0x49, 0x3b,
	0x58, 0xb4, 0x67, 0x65, 0xdc, 0xd0, 0x67, 0x5b, 0x41, 0xd0, 0x72, 0xd1, 0x64, 0xa1, 0x63, 0x32,
	0xdf, 0x0f, 0x04, 0x13, 0x4e, 0xe0, 0xf3, 0x04, 0x54, 0x5f, 0x3b, 0x06, 0x35, 0x3b, 0xa0, 0x66,
	0x02, 0x2a, 0x17, 0x84, 0x07, 0x2d, 0xb9, 0x90, 0x9b, 0x8e, 0xbf, 0x17, 0x31, 0x33, 0x6e, 0x30,
	0x37, 0xdc, 0x67, 0x0d, 0xb3, 0x85, 0x3e, 0x46, 0x4c, 0x60, 0x33, 0x85, 0xb9, 0x93, 0x0f, 0xd3,
	0x95, 0x6a, 0x07, 0x9e, 0x17, 0xf8, 0x52, 0x62, 0x32, 0x4a, 0x96, 0x1b, 0x9f, 0x2a, 0xa0, 0x6f,
	0x38, 0x5c, 0x6c, 0x27, 0xec, 0x57, 0x12, 0xf6, 0xdc, 0xc2, 0x57, 0x6d, 0xe4, 0x82, 0xcc, 0xc2,
	0xb8, 0xcf, 0x3c, 0xe4, 0x21, 0xb3, 0xb1, 0xae, 0xcd, 0x69, 0xf3, 0xe3, 0xd6, 0xf1, 0x04, 0xf9,
	0xa8, 0xc1, 0xe4, 0x69, 0xd9, 0xe8, 0xf2, 0xfa, 0xc8, 0xdc, 0xc8, 0xfc, 0xc4, 0xe2, 0x3e, 0x2d,
	0x94, 0x34, 0x3a, 0x98, 0x0c, 0xdd, 0xee, 0x0d, 0xb5, 0xe6, 0x8b, 0xe8, 0xd0, 0xea, 0xa7, 0xa0,
	0xaf, 0xc2, 0xf9, 0xec, 0x8f, 0xc9, 0x59, 0x18, 0x39, 0xc0, 0xc3, 0x54, 0x8a, 0x1c, 0x92, 0x1a,
	0x8c, 0xc6, 0xcc, 0x6d, 0x63, 0xbd, 0xa2, 0xe6, 0x92, 0x87, 0xe5, 0xca, 0x92, 0x66, 0xbc, 0x85,
	0x99, 0x4c, 0x36, 0x3c, 0x0c, 0x7c, 0x8e, 0x64, 0x07, 0x46, 0x1d, 0x81, 0x1e, 0x57, 0x60, 0x13,
	0x8b, 0xeb, 0x39, 0x82, 0x59, 0xe8, 0xd0, 0xf0, 0xa0, 0x45, 0xa5, 0xa1, 0x54, 0x19, 0x4a, 0x3b,
	0x86, 0xd2, 0xd3, 0xf0, 0x32, 0xa0, 0x95, 0xe0, 0x1a, 0xf5, 0xae, 0x8a, 0xf4, 0x65, 0x27, 0xb4,
	0xf1, 0xad, 0x02, 0x33, 0x2b, 0x11, 0x32, 0x81, 0xbd, 0x1f, 0x0c, 0x63, 0x1b, 0x81, 0xaa, 0x7c,
	0x48, 0x05, 0xab, 0x31, 0x89, 0x61, 0xcc, 0x65, 0xbb, 0xc7, 0xf6, 0xbd, 0x2c, 0x68, 0x5f, 0x0e,
	0x2b, 0xba, 0xa1, 0x02, 0x24, 0xa6, 0xa5, 0xd1, 0xc8, 0x0b, 0xa8, 0xf2, 0x10, 0xed, 0x7a, 0xb5,
	0xc4, 0x1c, 0x6e, 0x85, 0x68, 0x5b, 0x0a, 0x56, 0xbf, 0x05, 0x13, 0x27, 0xa2, 0xfe, 0x95, 0xfb,
	0x17, 0x61, 0x36, 0x5b, 0xcc, 0x09, 0x0f, 0x9e, 0x86, 0xcd, 0x7f, 0xd0, 0x83, 0x1c, 0x56, 0xff,
	0x9f, 0x07, 0xd9, 0x62, 0x52, 0x0f, 0x36, 0xa0, 0xfe, 0x10, 0x45, 0x49, 0xf9, 0x37, 0xde, 0x6b,
	0x30, 0x9d, 0x01, 0x97, 0x96, 0xfb, 0x33, 0xa8, 0xca, 0xb2, 0x4c, 0xab, 0x7d, 0xad, 0x94, 0x2c,
	0x59, 0x0a, 0x52, 0x92, 0x39, 0x64, 0x9e, 0xdb, 0x21, 0x23, 0xc7, 0xc6, 0x36, 0x18, 0x7d, 0x5c,
	0x1e, 0x75, 0xe8, 0xf3, 0xe2, 0x22, 0xdf, 0x69, 0x70, 0x39, 0x17, 0xb8, 0xdb, 0xdd, 0xa0, 0x0b,
	0x24, 0x5b, 0x9c, 0xdc, 0x90, 0xf7, 0xfe, 0x20, 0xba, 0xbb, 0x27, 0xd3, 0x23, 0x26, 0x6e, 0xd0,
	0x2e, 0xf2, 0xba, 0xbf, 0x17, 0x58, 0x27, 0x20, 0x8d, 0x4d, 0x98, 0x59, 0x45, 0x17, 0x4b, 0x2b,
	0x1f, 0xb9, 0x59, 0xb2, 0x01, 0x13, 0x45, 0x8b, 0x5f, 0xc6, 0xe1, 0x5c, 0xcf, 0x26, 0x4d, 0xf8,
	0x92, 0xaf, 0x1a, 0x4c, 0x65, 0x74, 0x7a, 0xf2, 0xa4, 0xf4, 0x33, 0x4c, 0xb7, 0xca, 0x84, 0x4c,
	0xab, 0xe0, 0xd2, 0xd1, 0xe7, 0xef, 0x1f, 0x2a, 0xd3, 0xe4, 0x82, 0xfa, 0xd3, 0xe8, 0xfb, 0x89,
	0xe1, 0xe4, 0x87, 0x06, 0xb5, 0xac, 0x5e, 0x46, 0xac, 0xf2, 0xbb, 0xbc, 0xbe, 0x55, 0x2a, 0x66,
	0x2a, 0x71, 0x41, 0x49, 0xbc, 0x62, 0x4c, 0x65, 0xc8, 0x5b, 0x3e, 0x73, 0x7a, 0x82, 0xfc, 0xd2,
	0x60, 0xb2, 0x6f, 0x8b, 0x93, 0xcd, 0x82, 0xbc, 0x06, 0x35, 0x18, 0xfd, 0x71, 0x79, 0x80, 0xa9,
	0xca, 0xbb, 0x4a, 0xe5, 0x12, 0xb9, 0x39, 0xc0, 0x48, 0xf3, 0x75, 0x0f, 0x9a, 0x8c, 0xda, 0x64,
	0x82, 0x51, 0x59, 0x00, 0x6f, 0xc8, 0x51, 0x05, 0x6a, 0x59, 0xfd, 0xb2, 0xb0, 0xcf, 0x39, 0x27,
	0x49, 0x61, 0x9f, 0x73, 0x1b, 0xfa, 0x7d, 0x95, 0x81, 0xdb, 0xfa, 0xd5, 0x21, 0xd4, 0xef, 0x28,
	0xd1, 0x7d, 0xee, 0xff, 0xd4, 0xa0, 0x96, 0xd5, 0x07, 0x0a, 0x27, 0x21, 0xa7, 0x4b, 0x15, 0x4e,
	0x42, 0x5e, 0xa3, 0x32, 0x1a, 0x2a, 0x09, 0x0b, 0xd7, 0x86, 0x4f, 0xc2, 0x83, 0xe5, 0xe7, 0x4b,
	0x43, 0xde, 0x03, 0xfa, 0xae, 0x3c, 0xbb, 0x63, 0xea, 0x26, 0x70, 0xfd, 0x77, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xd5, 0x1c, 0x18, 0x06, 0x17, 0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VirtualClusterServiceClient is the client API for VirtualClusterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VirtualClusterServiceClient interface {
	ListVirtualClusters(ctx context.Context, in *ListVirtualClustersRequest, opts ...grpc.CallOption) (*ListVirtualClustersResponse, error)
	CreateVirtualCluster(ctx context.Context, in *CreateVirtualClusterRequest, opts ...grpc.CallOption) (*CreateVirtualClusterResponse, error)
	GetVirtualCluster(ctx context.Context, in *GetVirtualClusterRequest, opts ...grpc.CallOption) (*GetVirtualClusterResponse, error)
	UpdateVirtualCluster(ctx context.Context, in *UpdateVirtualClusterRequest, opts ...grpc.CallOption) (*UpdateVirtualClusterResponse, error)
	DeleteVirtualCluster(ctx context.Context, in *DeleteVirtualClusterRequest, opts ...grpc.CallOption) (*DeleteVirtualClusterResponse, error)
}

type virtualClusterServiceClient struct {
	cc *grpc.ClientConn
}

func NewVirtualClusterServiceClient(cc *grpc.ClientConn) VirtualClusterServiceClient {
	return &virtualClusterServiceClient{cc}
}

func (c *virtualClusterServiceClient) ListVirtualClusters(ctx context.Context, in *ListVirtualClustersRequest, opts ...grpc.CallOption) (*ListVirtualClustersResponse, error) {
	out := new(ListVirtualClustersResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.virtualcluster.v1.VirtualClusterService/ListVirtualClusters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualClusterServiceClient) CreateVirtualCluster(ctx context.Context, in *CreateVirtualClusterRequest, opts ...grpc.CallOption) (*CreateVirtualClusterResponse, error) {
	out := new(CreateVirtualClusterResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.virtualcluster.v1.VirtualClusterService/CreateVirtualCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualClusterServiceClient) GetVirtualCluster(ctx context.Context, in *GetVirtualClusterRequest, opts ...grpc.CallOption) (*GetVirtualClusterResponse, error) {
	out := new(GetVirtualClusterResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.virtualcluster.v1.VirtualClusterService/GetVirtualCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualClusterServiceClient) UpdateVirtualCluster(ctx context.Context, in *UpdateVirtualClusterRequest, opts ...grpc.CallOption) (*UpdateVirtualClusterResponse, error) {
	out := new(UpdateVirtualClusterResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.virtualcluster.v1.VirtualClusterService/UpdateVirtualCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualClusterServiceClient) DeleteVirtualCluster(ctx context.Context, in *DeleteVirtualClusterRequest, opts ...grpc.CallOption) (*DeleteVirtualClusterResponse, error) {
	out := new(DeleteVirtualClusterResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.virtualcluster.v1.VirtualClusterService/DeleteVirtualCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VirtualClusterServiceServer is the server API for VirtualClusterService service.
type VirtualClusterServiceServer interface {
	ListVirtualClusters(context.Context, *ListVirtualClustersRequest) (*ListVirtualClustersResponse, error)
	CreateVirtualCluster(context.Context, *CreateVirtualClusterRequest) (*CreateVirtualClusterResponse, error)
	GetVirtualCluster(context.Context, *GetVirtualClusterRequest) (*GetVirtualClusterResponse, error)
	UpdateVirtualCluster(context.Context, *UpdateVirtualClusterRequest) (*UpdateVirtualClusterResponse, error)
	DeleteVirtualCluster(context.Context, *DeleteVirtualClusterRequest) (*DeleteVirtualClusterResponse, error)
}

// UnimplementedVirtualClusterServiceServer can be embedded to have forward compatible implementations.
type UnimplementedVirtualClusterServiceServer struct {
}

func (*UnimplementedVirtualClusterServiceServer) ListVirtualClusters(ctx context.Context, req *ListVirtualClustersRequest) (*ListVirtualClustersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListVirtualClusters not implemented")
}
func (*UnimplementedVirtualClusterServiceServer) CreateVirtualCluster(ctx context.Context, req *CreateVirtualClusterRequest) (*CreateVirtualClusterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVirtualCluster not implemented")
}
func (*UnimplementedVirtualClusterServiceServer) GetVirtualCluster(ctx context.Context, req *GetVirtualClusterRequest) (*GetVirtualClusterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVirtualCluster not implemented")
}
func (*UnimplementedVirtualClusterServiceServer) UpdateVirtualCluster(ctx context.Context, req *UpdateVirtualClusterRequest) (*UpdateVirtualClusterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateVirtualCluster not implemented")
}
func (*UnimplementedVirtualClusterServiceServer) DeleteVirtualCluster(ctx context.Context, req *DeleteVirtualClusterRequest) (*DeleteVirtualClusterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteVirtualCluster not implemented")
}

func RegisterVirtualClusterServiceServer(s *grpc.Server, srv VirtualClusterServiceServer) {
	s.RegisterService(&_VirtualClusterService_serviceDesc, srv)
}

func _VirtualClusterService_ListVirtualClusters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListVirtualClustersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualClusterServiceServer).ListVirtualClusters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.virtualcluster.v1.VirtualClusterService/ListVirtualClusters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualClusterServiceServer).ListVirtualClusters(ctx, req.(*ListVirtualClustersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualClusterService_CreateVirtualCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateVirtualClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualClusterServiceServer).CreateVirtualCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.virtualcluster.v1.VirtualClusterService/CreateVirtualCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualClusterServiceServer).CreateVirtualCluster(ctx, req.(*CreateVirtualClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualClusterService_GetVirtualCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVirtualClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualClusterServiceServer).GetVirtualCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.virtualcluster.v1.VirtualClusterService/GetVirtualCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualClusterServiceServer).GetVirtualCluster(ctx, req.(*GetVirtualClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualClusterService_UpdateVirtualCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateVirtualClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualClusterServiceServer).UpdateVirtualCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.virtualcluster.v1.VirtualClusterService/UpdateVirtualCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualClusterServiceServer).UpdateVirtualCluster(ctx, req.(*UpdateVirtualClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualClusterService_DeleteVirtualCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteVirtualClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualClusterServiceServer).DeleteVirtualCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.virtualcluster.v1.VirtualClusterService/DeleteVirtualCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualClusterServiceServer).DeleteVirtualCluster(ctx, req.(*DeleteVirtualClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VirtualClusterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.metaprov.modeld.services.virtualcluster.v1.VirtualClusterService",
	HandlerType: (*VirtualClusterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListVirtualClusters",
			Handler:    _VirtualClusterService_ListVirtualClusters_Handler,
		},
		{
			MethodName: "CreateVirtualCluster",
			Handler:    _VirtualClusterService_CreateVirtualCluster_Handler,
		},
		{
			MethodName: "GetVirtualCluster",
			Handler:    _VirtualClusterService_GetVirtualCluster_Handler,
		},
		{
			MethodName: "UpdateVirtualCluster",
			Handler:    _VirtualClusterService_UpdateVirtualCluster_Handler,
		},
		{
			MethodName: "DeleteVirtualCluster",
			Handler:    _VirtualClusterService_DeleteVirtualCluster_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/virtualcluster/v1/virtualcluster.proto",
}
