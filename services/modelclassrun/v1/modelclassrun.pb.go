// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.1
// source: github.com/metaprov/modelaapi/services/modelclassrun/v1/modelclassrun.proto

package v1

import (
	v1alpha1 "github.com/metaprov/modelaapi/pkg/apis/training/v1alpha1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListModelClassRunsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Labels    map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PageSize  int32             `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string            `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	OrderBy   string            `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
}

func (x *ListModelClassRunsRequest) Reset() {
	*x = ListModelClassRunsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListModelClassRunsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModelClassRunsRequest) ProtoMessage() {}

func (x *ListModelClassRunsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModelClassRunsRequest.ProtoReflect.Descriptor instead.
func (*ListModelClassRunsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDescGZIP(), []int{0}
}

func (x *ListModelClassRunsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListModelClassRunsRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ListModelClassRunsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListModelClassRunsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListModelClassRunsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type ListModelClassRunsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modelclassruns *v1alpha1.ModelClassRunList `protobuf:"bytes,1,opt,name=modelclassruns,proto3" json:"modelclassruns,omitempty"`
	NextPageToken  string                      `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListModelClassRunsResponse) Reset() {
	*x = ListModelClassRunsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListModelClassRunsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModelClassRunsResponse) ProtoMessage() {}

func (x *ListModelClassRunsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModelClassRunsResponse.ProtoReflect.Descriptor instead.
func (*ListModelClassRunsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDescGZIP(), []int{1}
}

func (x *ListModelClassRunsResponse) GetModelclassruns() *v1alpha1.ModelClassRunList {
	if x != nil {
		return x.Modelclassruns
	}
	return nil
}

func (x *ListModelClassRunsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type ModelClassRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModelClassRunResponse) Reset() {
	*x = ModelClassRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelClassRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelClassRunResponse) ProtoMessage() {}

func (x *ModelClassRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelClassRunResponse.ProtoReflect.Descriptor instead.
func (*ModelClassRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDescGZIP(), []int{2}
}

type CreateModelClassRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modelclassrun *v1alpha1.ModelClassRun `protobuf:"bytes,1,opt,name=modelclassrun,proto3" json:"modelclassrun,omitempty"`
}

func (x *CreateModelClassRunRequest) Reset() {
	*x = CreateModelClassRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateModelClassRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateModelClassRunRequest) ProtoMessage() {}

func (x *CreateModelClassRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateModelClassRunRequest.ProtoReflect.Descriptor instead.
func (*CreateModelClassRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDescGZIP(), []int{3}
}

func (x *CreateModelClassRunRequest) GetModelclassrun() *v1alpha1.ModelClassRun {
	if x != nil {
		return x.Modelclassrun
	}
	return nil
}

type CreateModelClassRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateModelClassRunResponse) Reset() {
	*x = CreateModelClassRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateModelClassRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateModelClassRunResponse) ProtoMessage() {}

func (x *CreateModelClassRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateModelClassRunResponse.ProtoReflect.Descriptor instead.
func (*CreateModelClassRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDescGZIP(), []int{4}
}

type UpdateModelClassRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modelclassrun *v1alpha1.ModelClassRun `protobuf:"bytes,1,opt,name=modelclassrun,proto3" json:"modelclassrun,omitempty"`
	FieldMask     *field_mask.FieldMask   `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
}

func (x *UpdateModelClassRunRequest) Reset() {
	*x = UpdateModelClassRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateModelClassRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateModelClassRunRequest) ProtoMessage() {}

func (x *UpdateModelClassRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateModelClassRunRequest.ProtoReflect.Descriptor instead.
func (*UpdateModelClassRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateModelClassRunRequest) GetModelclassrun() *v1alpha1.ModelClassRun {
	if x != nil {
		return x.Modelclassrun
	}
	return nil
}

func (x *UpdateModelClassRunRequest) GetFieldMask() *field_mask.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

type UpdateModelClassRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateModelClassRunResponse) Reset() {
	*x = UpdateModelClassRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateModelClassRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateModelClassRunResponse) ProtoMessage() {}

func (x *UpdateModelClassRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateModelClassRunResponse.ProtoReflect.Descriptor instead.
func (*UpdateModelClassRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDescGZIP(), []int{6}
}

type GetModelClassRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetModelClassRunRequest) Reset() {
	*x = GetModelClassRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModelClassRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModelClassRunRequest) ProtoMessage() {}

func (x *GetModelClassRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModelClassRunRequest.ProtoReflect.Descriptor instead.
func (*GetModelClassRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDescGZIP(), []int{7}
}

func (x *GetModelClassRunRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetModelClassRunRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetModelClassRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modelclassrun *v1alpha1.ModelClassRun `protobuf:"bytes,1,opt,name=modelclassrun,proto3" json:"modelclassrun,omitempty"`
	Yaml          string                  `protobuf:"bytes,2,opt,name=yaml,proto3" json:"yaml,omitempty"`
}

func (x *GetModelClassRunResponse) Reset() {
	*x = GetModelClassRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModelClassRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModelClassRunResponse) ProtoMessage() {}

func (x *GetModelClassRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModelClassRunResponse.ProtoReflect.Descriptor instead.
func (*GetModelClassRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDescGZIP(), []int{8}
}

func (x *GetModelClassRunResponse) GetModelclassrun() *v1alpha1.ModelClassRun {
	if x != nil {
		return x.Modelclassrun
	}
	return nil
}

func (x *GetModelClassRunResponse) GetYaml() string {
	if x != nil {
		return x.Yaml
	}
	return ""
}

type DeleteModelClassRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteModelClassRunRequest) Reset() {
	*x = DeleteModelClassRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteModelClassRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteModelClassRunRequest) ProtoMessage() {}

func (x *DeleteModelClassRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteModelClassRunRequest.ProtoReflect.Descriptor instead.
func (*DeleteModelClassRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteModelClassRunRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeleteModelClassRunRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteModelClassRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteModelClassRunResponse) Reset() {
	*x = DeleteModelClassRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteModelClassRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteModelClassRunResponse) ProtoMessage() {}

func (x *DeleteModelClassRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteModelClassRunResponse.ProtoReflect.Descriptor instead.
func (*DeleteModelClassRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDescGZIP(), []int{10}
}

type ApproveModelClassRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Stage     string `protobuf:"bytes,3,opt,name=stage,proto3" json:"stage,omitempty"`
	Account   string `protobuf:"bytes,4,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *ApproveModelClassRunRequest) Reset() {
	*x = ApproveModelClassRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveModelClassRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveModelClassRunRequest) ProtoMessage() {}

func (x *ApproveModelClassRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveModelClassRunRequest.ProtoReflect.Descriptor instead.
func (*ApproveModelClassRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDescGZIP(), []int{11}
}

func (x *ApproveModelClassRunRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ApproveModelClassRunRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApproveModelClassRunRequest) GetStage() string {
	if x != nil {
		return x.Stage
	}
	return ""
}

func (x *ApproveModelClassRunRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

type ApproveModelClassRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ApproveModelClassRunResponse) Reset() {
	*x = ApproveModelClassRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveModelClassRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveModelClassRunResponse) ProtoMessage() {}

func (x *ApproveModelClassRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveModelClassRunResponse.ProtoReflect.Descriptor instead.
func (*ApproveModelClassRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDescGZIP(), []int{12}
}

type DenyModelClassRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Stage     string `protobuf:"bytes,3,opt,name=stage,proto3" json:"stage,omitempty"`
	Account   string `protobuf:"bytes,4,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *DenyModelClassRunRequest) Reset() {
	*x = DenyModelClassRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DenyModelClassRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DenyModelClassRunRequest) ProtoMessage() {}

func (x *DenyModelClassRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DenyModelClassRunRequest.ProtoReflect.Descriptor instead.
func (*DenyModelClassRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDescGZIP(), []int{13}
}

func (x *DenyModelClassRunRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DenyModelClassRunRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DenyModelClassRunRequest) GetStage() string {
	if x != nil {
		return x.Stage
	}
	return ""
}

func (x *DenyModelClassRunRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

type DenyModelClassRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DenyModelClassRunResponse) Reset() {
	*x = DenyModelClassRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DenyModelClassRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DenyModelClassRunResponse) ProtoMessage() {}

func (x *DenyModelClassRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DenyModelClassRunResponse.ProtoReflect.Descriptor instead.
func (*DenyModelClassRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDescGZIP(), []int{14}
}

type PauseModelClassRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PauseModelClassRunResponse) Reset() {
	*x = PauseModelClassRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseModelClassRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseModelClassRunResponse) ProtoMessage() {}

func (x *PauseModelClassRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseModelClassRunResponse.ProtoReflect.Descriptor instead.
func (*PauseModelClassRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDescGZIP(), []int{15}
}

type PauseModelClassRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PauseModelClassRunRequest) Reset() {
	*x = PauseModelClassRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseModelClassRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseModelClassRunRequest) ProtoMessage() {}

func (x *PauseModelClassRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseModelClassRunRequest.ProtoReflect.Descriptor instead.
func (*PauseModelClassRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDescGZIP(), []int{16}
}

func (x *PauseModelClassRunRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PauseModelClassRunRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ResumeModelClassRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResumeModelClassRunResponse) Reset() {
	*x = ResumeModelClassRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeModelClassRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeModelClassRunResponse) ProtoMessage() {}

func (x *ResumeModelClassRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeModelClassRunResponse.ProtoReflect.Descriptor instead.
func (*ResumeModelClassRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDescGZIP(), []int{17}
}

type ResumeModelClassRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ResumeModelClassRunRequest) Reset() {
	*x = ResumeModelClassRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeModelClassRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeModelClassRunRequest) ProtoMessage() {}

func (x *ResumeModelClassRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeModelClassRunRequest.ProtoReflect.Descriptor instead.
func (*ResumeModelClassRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDescGZIP(), []int{18}
}

func (x *ResumeModelClassRunRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ResumeModelClassRunRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AbortModelClassRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AbortModelClassRunResponse) Reset() {
	*x = AbortModelClassRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbortModelClassRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbortModelClassRunResponse) ProtoMessage() {}

func (x *AbortModelClassRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbortModelClassRunResponse.ProtoReflect.Descriptor instead.
func (*AbortModelClassRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDescGZIP(), []int{19}
}

type AbortModelClassRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AbortModelClassRunRequest) Reset() {
	*x = AbortModelClassRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbortModelClassRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbortModelClassRunRequest) ProtoMessage() {}

func (x *AbortModelClassRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbortModelClassRunRequest.ProtoReflect.Descriptor instead.
func (*AbortModelClassRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDescGZIP(), []int{20}
}

func (x *AbortModelClassRunRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AbortModelClassRunRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto protoreflect.FileDescriptor

var file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDesc = []byte{
	0x0a, 0x4b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x37, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61,
	0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xc3, 0x02, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x76, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5e, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x1a, 0x39, 0x0a, 0x0b, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb9, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70,
	0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x17, 0x0a, 0x15, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x1a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6d, 0x0a, 0x0d, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc6, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6d, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73,
	0x6b, 0x22, 0x1d, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x4b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x9d, 0x01,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52,
	0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x0d, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x61, 0x6d,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x22, 0x4e, 0x0a,
	0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1d, 0x0a,
	0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7f, 0x0a, 0x1b,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x1e, 0x0a,
	0x1c, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7c, 0x0a,
	0x18, 0x44, 0x65, 0x6e, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52,
	0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x44,
	0x65, 0x6e, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x50, 0x61, 0x75, 0x73,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4d, 0x0a, 0x19, 0x50, 0x61, 0x75, 0x73, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4e, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x4d, 0x0a, 0x19, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x32, 0xaf, 0x13, 0x0a, 0x14, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x52, 0x75, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xe5, 0x01, 0x0a, 0x12, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e,
	0x73, 0x12, 0x52, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x20, 0x12, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x72, 0x75, 0x6e, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x7d, 0x12, 0xdf, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x12, 0x53, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x75,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x54, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f,
	0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e,
	0x73, 0x3a, 0x01, 0x2a, 0x12, 0xe6, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x12, 0x50, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x51, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72,
	0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x7d, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0xa0, 0x02,
	0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x52, 0x75, 0x6e, 0x12, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x54, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x75,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x5e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x58, 0x1a, 0x53, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x73, 0x2f, 0x7b, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x7d, 0x2f,
	0x7b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x01, 0x2a,
	0x12, 0xef, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x12, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x54, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70,
	0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x2a, 0x25, 0x2f, 0x76, 0x31,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x73, 0x2f,
	0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x7d, 0x2f, 0x7b, 0x6e, 0x61, 0x6d,
	0x65, 0x7d, 0x12, 0xfa, 0x01, 0x0a, 0x14, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x12, 0x54, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72,
	0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x55, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f,
	0x1a, 0x2d, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x72, 0x75, 0x6e, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x7d,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x12,
	0xee, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x6e, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x52, 0x75, 0x6e, 0x12, 0x51, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6e, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x52, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6e, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2c, 0x1a, 0x2a, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x7d, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x64, 0x65, 0x6e, 0x79,
	0x12, 0xf2, 0x01, 0x0a, 0x12, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x12, 0x52, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x53, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72,
	0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x1a, 0x2b, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x73, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x7d, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x3a,
	0x61, 0x62, 0x6f, 0x72, 0x74, 0x12, 0xf2, 0x01, 0x0a, 0x12, 0x50, 0x61, 0x75, 0x73, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x12, 0x52, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x1a, 0x2b, 0x2f,
	0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e,
	0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x7d, 0x2f, 0x7b, 0x6e,
	0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x70, 0x61, 0x75, 0x73, 0x65, 0x12, 0xf6, 0x01, 0x0a, 0x13, 0x52,
	0x65, 0x73, 0x75, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52,
	0x75, 0x6e, 0x12, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x75, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x54, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x1a, 0x2c, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x7d, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x72, 0x65, 0x73,
	0x75, 0x6d, 0x65, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x61, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x75, 0x6e, 0x2f, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDescOnce sync.Once
	file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDescData = file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDesc
)

func file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDescGZIP() []byte {
	file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDescOnce.Do(func() {
		file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDescData)
	})
	return file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDescData
}

var file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_goTypes = []interface{}{
	(*ListModelClassRunsRequest)(nil),    // 0: github.com.metaprov.modelaapi.services.modelclassrun.v1.ListModelClassRunsRequest
	(*ListModelClassRunsResponse)(nil),   // 1: github.com.metaprov.modelaapi.services.modelclassrun.v1.ListModelClassRunsResponse
	(*ModelClassRunResponse)(nil),        // 2: github.com.metaprov.modelaapi.services.modelclassrun.v1.ModelClassRunResponse
	(*CreateModelClassRunRequest)(nil),   // 3: github.com.metaprov.modelaapi.services.modelclassrun.v1.CreateModelClassRunRequest
	(*CreateModelClassRunResponse)(nil),  // 4: github.com.metaprov.modelaapi.services.modelclassrun.v1.CreateModelClassRunResponse
	(*UpdateModelClassRunRequest)(nil),   // 5: github.com.metaprov.modelaapi.services.modelclassrun.v1.UpdateModelClassRunRequest
	(*UpdateModelClassRunResponse)(nil),  // 6: github.com.metaprov.modelaapi.services.modelclassrun.v1.UpdateModelClassRunResponse
	(*GetModelClassRunRequest)(nil),      // 7: github.com.metaprov.modelaapi.services.modelclassrun.v1.GetModelClassRunRequest
	(*GetModelClassRunResponse)(nil),     // 8: github.com.metaprov.modelaapi.services.modelclassrun.v1.GetModelClassRunResponse
	(*DeleteModelClassRunRequest)(nil),   // 9: github.com.metaprov.modelaapi.services.modelclassrun.v1.DeleteModelClassRunRequest
	(*DeleteModelClassRunResponse)(nil),  // 10: github.com.metaprov.modelaapi.services.modelclassrun.v1.DeleteModelClassRunResponse
	(*ApproveModelClassRunRequest)(nil),  // 11: github.com.metaprov.modelaapi.services.modelclassrun.v1.ApproveModelClassRunRequest
	(*ApproveModelClassRunResponse)(nil), // 12: github.com.metaprov.modelaapi.services.modelclassrun.v1.ApproveModelClassRunResponse
	(*DenyModelClassRunRequest)(nil),     // 13: github.com.metaprov.modelaapi.services.modelclassrun.v1.DenyModelClassRunRequest
	(*DenyModelClassRunResponse)(nil),    // 14: github.com.metaprov.modelaapi.services.modelclassrun.v1.DenyModelClassRunResponse
	(*PauseModelClassRunResponse)(nil),   // 15: github.com.metaprov.modelaapi.services.modelclassrun.v1.PauseModelClassRunResponse
	(*PauseModelClassRunRequest)(nil),    // 16: github.com.metaprov.modelaapi.services.modelclassrun.v1.PauseModelClassRunRequest
	(*ResumeModelClassRunResponse)(nil),  // 17: github.com.metaprov.modelaapi.services.modelclassrun.v1.ResumeModelClassRunResponse
	(*ResumeModelClassRunRequest)(nil),   // 18: github.com.metaprov.modelaapi.services.modelclassrun.v1.ResumeModelClassRunRequest
	(*AbortModelClassRunResponse)(nil),   // 19: github.com.metaprov.modelaapi.services.modelclassrun.v1.AbortModelClassRunResponse
	(*AbortModelClassRunRequest)(nil),    // 20: github.com.metaprov.modelaapi.services.modelclassrun.v1.AbortModelClassRunRequest
	nil,                                  // 21: github.com.metaprov.modelaapi.services.modelclassrun.v1.ListModelClassRunsRequest.LabelsEntry
	(*v1alpha1.ModelClassRunList)(nil),   // 22: github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassRunList
	(*v1alpha1.ModelClassRun)(nil),       // 23: github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassRun
	(*field_mask.FieldMask)(nil),         // 24: google.protobuf.FieldMask
}
var file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_depIdxs = []int32{
	21, // 0: github.com.metaprov.modelaapi.services.modelclassrun.v1.ListModelClassRunsRequest.labels:type_name -> github.com.metaprov.modelaapi.services.modelclassrun.v1.ListModelClassRunsRequest.LabelsEntry
	22, // 1: github.com.metaprov.modelaapi.services.modelclassrun.v1.ListModelClassRunsResponse.modelclassruns:type_name -> github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassRunList
	23, // 2: github.com.metaprov.modelaapi.services.modelclassrun.v1.CreateModelClassRunRequest.modelclassrun:type_name -> github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassRun
	23, // 3: github.com.metaprov.modelaapi.services.modelclassrun.v1.UpdateModelClassRunRequest.modelclassrun:type_name -> github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassRun
	24, // 4: github.com.metaprov.modelaapi.services.modelclassrun.v1.UpdateModelClassRunRequest.field_mask:type_name -> google.protobuf.FieldMask
	23, // 5: github.com.metaprov.modelaapi.services.modelclassrun.v1.GetModelClassRunResponse.modelclassrun:type_name -> github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassRun
	0,  // 6: github.com.metaprov.modelaapi.services.modelclassrun.v1.ModelClassRunService.ListModelClassRuns:input_type -> github.com.metaprov.modelaapi.services.modelclassrun.v1.ListModelClassRunsRequest
	3,  // 7: github.com.metaprov.modelaapi.services.modelclassrun.v1.ModelClassRunService.CreateModelClassRun:input_type -> github.com.metaprov.modelaapi.services.modelclassrun.v1.CreateModelClassRunRequest
	7,  // 8: github.com.metaprov.modelaapi.services.modelclassrun.v1.ModelClassRunService.GetModelClassRun:input_type -> github.com.metaprov.modelaapi.services.modelclassrun.v1.GetModelClassRunRequest
	5,  // 9: github.com.metaprov.modelaapi.services.modelclassrun.v1.ModelClassRunService.UpdateModelClassRun:input_type -> github.com.metaprov.modelaapi.services.modelclassrun.v1.UpdateModelClassRunRequest
	9,  // 10: github.com.metaprov.modelaapi.services.modelclassrun.v1.ModelClassRunService.DeleteModelClassRun:input_type -> github.com.metaprov.modelaapi.services.modelclassrun.v1.DeleteModelClassRunRequest
	11, // 11: github.com.metaprov.modelaapi.services.modelclassrun.v1.ModelClassRunService.ApproveModelClassRun:input_type -> github.com.metaprov.modelaapi.services.modelclassrun.v1.ApproveModelClassRunRequest
	13, // 12: github.com.metaprov.modelaapi.services.modelclassrun.v1.ModelClassRunService.DenyModelClassRun:input_type -> github.com.metaprov.modelaapi.services.modelclassrun.v1.DenyModelClassRunRequest
	20, // 13: github.com.metaprov.modelaapi.services.modelclassrun.v1.ModelClassRunService.AbortModelClassRun:input_type -> github.com.metaprov.modelaapi.services.modelclassrun.v1.AbortModelClassRunRequest
	16, // 14: github.com.metaprov.modelaapi.services.modelclassrun.v1.ModelClassRunService.PauseModelClassRun:input_type -> github.com.metaprov.modelaapi.services.modelclassrun.v1.PauseModelClassRunRequest
	18, // 15: github.com.metaprov.modelaapi.services.modelclassrun.v1.ModelClassRunService.ResumeModelClassRun:input_type -> github.com.metaprov.modelaapi.services.modelclassrun.v1.ResumeModelClassRunRequest
	1,  // 16: github.com.metaprov.modelaapi.services.modelclassrun.v1.ModelClassRunService.ListModelClassRuns:output_type -> github.com.metaprov.modelaapi.services.modelclassrun.v1.ListModelClassRunsResponse
	4,  // 17: github.com.metaprov.modelaapi.services.modelclassrun.v1.ModelClassRunService.CreateModelClassRun:output_type -> github.com.metaprov.modelaapi.services.modelclassrun.v1.CreateModelClassRunResponse
	8,  // 18: github.com.metaprov.modelaapi.services.modelclassrun.v1.ModelClassRunService.GetModelClassRun:output_type -> github.com.metaprov.modelaapi.services.modelclassrun.v1.GetModelClassRunResponse
	6,  // 19: github.com.metaprov.modelaapi.services.modelclassrun.v1.ModelClassRunService.UpdateModelClassRun:output_type -> github.com.metaprov.modelaapi.services.modelclassrun.v1.UpdateModelClassRunResponse
	10, // 20: github.com.metaprov.modelaapi.services.modelclassrun.v1.ModelClassRunService.DeleteModelClassRun:output_type -> github.com.metaprov.modelaapi.services.modelclassrun.v1.DeleteModelClassRunResponse
	12, // 21: github.com.metaprov.modelaapi.services.modelclassrun.v1.ModelClassRunService.ApproveModelClassRun:output_type -> github.com.metaprov.modelaapi.services.modelclassrun.v1.ApproveModelClassRunResponse
	14, // 22: github.com.metaprov.modelaapi.services.modelclassrun.v1.ModelClassRunService.DenyModelClassRun:output_type -> github.com.metaprov.modelaapi.services.modelclassrun.v1.DenyModelClassRunResponse
	19, // 23: github.com.metaprov.modelaapi.services.modelclassrun.v1.ModelClassRunService.AbortModelClassRun:output_type -> github.com.metaprov.modelaapi.services.modelclassrun.v1.AbortModelClassRunResponse
	15, // 24: github.com.metaprov.modelaapi.services.modelclassrun.v1.ModelClassRunService.PauseModelClassRun:output_type -> github.com.metaprov.modelaapi.services.modelclassrun.v1.PauseModelClassRunResponse
	17, // 25: github.com.metaprov.modelaapi.services.modelclassrun.v1.ModelClassRunService.ResumeModelClassRun:output_type -> github.com.metaprov.modelaapi.services.modelclassrun.v1.ResumeModelClassRunResponse
	16, // [16:26] is the sub-list for method output_type
	6,  // [6:16] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_init() }
func file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_init() {
	if File_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListModelClassRunsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListModelClassRunsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelClassRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateModelClassRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateModelClassRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateModelClassRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateModelClassRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModelClassRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModelClassRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteModelClassRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteModelClassRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveModelClassRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveModelClassRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DenyModelClassRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DenyModelClassRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseModelClassRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseModelClassRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeModelClassRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeModelClassRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbortModelClassRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbortModelClassRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_goTypes,
		DependencyIndexes: file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_depIdxs,
		MessageInfos:      file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_msgTypes,
	}.Build()
	File_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto = out.File
	file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_rawDesc = nil
	file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_goTypes = nil
	file_github_com_metaprov_modelaapi_services_modelclassrun_v1_modelclassrun_proto_depIdxs = nil
}
