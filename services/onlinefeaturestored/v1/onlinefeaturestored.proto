syntax = "proto3";

option go_package = "github.com/metaprov/modelaapi/services/onlinefeaturestored/v1";
package github.com.metaprov.modelaapi.services.onlinefeaturestored.v1;

import "github.com/metaprov/modelaapi/pkg/apis/infra/v1alpha1/generated.proto";
import "github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1/generated.proto";



service OnlineFeatureStoreService {
    rpc OnlineGet(OnlineGetRequest)  returns (OnlineGetResponse)     {}
    rpc OnlineMultiGet(OnlineMultiGetRequest)  returns (OnlineMultiGetResponse)     {}
    rpc Import(ImportRequest)  returns (ImportResponse)     {}
}

message Value {
    oneof value {
        int64 int64 = 1;
        double double = 2;
        string string = 3;
        bool bool = 4;
        int64 unix_milli = 5;
        bytes bytes = 6;
    }
}

// For real time infernece, ask the store for one row features
message OnlineGetRequest {
    string key = 1;
    repeated string features = 2;
}

// Answer one row
message OnlineGetResponse {
    map<string,Value> row=1;
}

// For real time inference, ask the store for multple rows.
message OnlineMultiGetRequest {
    repeated string key = 1;
    repeated string features = 2;
}

// Answer multiple rows.
message OnlineMultiGetResponse {
    map<string, Value> result = 1;
}

// Import data from a location to the online store.
message ImportRequest {
    github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataLocation location = 1;
}

message ImportResponse {
    string key = 1;
    repeated string features = 2;
}

