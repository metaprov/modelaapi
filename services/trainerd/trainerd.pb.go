// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: services/trainerd/trainerd.proto

package trainerd

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	v1alpha1 "github.com/metaprov/modeldapi/pkg/apis/data/v1alpha1"
	v1alpha11 "github.com/metaprov/modeldapi/pkg/apis/infra/v1alpha1"
	v1alpha12 "github.com/metaprov/modeldapi/pkg/apis/training/v1alpha1"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	v1 "k8s.io/api/core/v1"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type TrainRequest struct {
	Product              *v1alpha1.DataProduct        `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	Version              *v1alpha1.DataProductVersion `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Bucket               *v1alpha11.VirtualBucket     `protobuf:"bytes,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Model                *v1alpha12.Model             `protobuf:"bytes,5,opt,name=model,proto3" json:"model,omitempty"`
	Study                *v1alpha12.Study             `protobuf:"bytes,6,opt,name=study,proto3" json:"study,omitempty"`
	Datasource           *v1alpha1.DataSource         `protobuf:"bytes,7,opt,name=datasource,proto3" json:"datasource,omitempty"`
	Dataset              *v1alpha1.Dataset            `protobuf:"bytes,8,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Connection           *v1alpha11.Connection        `protobuf:"bytes,9,opt,name=connection,proto3" json:"connection,omitempty"`
	Secret               *v1.Secret                   `protobuf:"bytes,10,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *TrainRequest) Reset()         { *m = TrainRequest{} }
func (m *TrainRequest) String() string { return proto.CompactTextString(m) }
func (*TrainRequest) ProtoMessage()    {}
func (*TrainRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bb9234c9501b5ff, []int{0}
}
func (m *TrainRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrainRequest.Unmarshal(m, b)
}
func (m *TrainRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrainRequest.Marshal(b, m, deterministic)
}
func (m *TrainRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrainRequest.Merge(m, src)
}
func (m *TrainRequest) XXX_Size() int {
	return xxx_messageInfo_TrainRequest.Size(m)
}
func (m *TrainRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TrainRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TrainRequest proto.InternalMessageInfo

func (m *TrainRequest) GetProduct() *v1alpha1.DataProduct {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *TrainRequest) GetVersion() *v1alpha1.DataProductVersion {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *TrainRequest) GetBucket() *v1alpha11.VirtualBucket {
	if m != nil {
		return m.Bucket
	}
	return nil
}

func (m *TrainRequest) GetModel() *v1alpha12.Model {
	if m != nil {
		return m.Model
	}
	return nil
}

func (m *TrainRequest) GetStudy() *v1alpha12.Study {
	if m != nil {
		return m.Study
	}
	return nil
}

func (m *TrainRequest) GetDatasource() *v1alpha1.DataSource {
	if m != nil {
		return m.Datasource
	}
	return nil
}

func (m *TrainRequest) GetDataset() *v1alpha1.Dataset {
	if m != nil {
		return m.Dataset
	}
	return nil
}

func (m *TrainRequest) GetConnection() *v1alpha11.Connection {
	if m != nil {
		return m.Connection
	}
	return nil
}

func (m *TrainRequest) GetSecret() *v1.Secret {
	if m != nil {
		return m.Secret
	}
	return nil
}

type TrainResponse struct {
	Result []*v1alpha12.Measurement `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	// The location in the bucket of the trained bin model
	WeightsCloudUri string `protobuf:"bytes,2,opt,name=weightsCloudUri,proto3" json:"weightsCloudUri,omitempty"`
	// The location in the bucket of the cloud manifest.
	ManifestCloudUri string `protobuf:"bytes,3,opt,name=manifestCloudUri,proto3" json:"manifestCloudUri,omitempty"`
	// The location in the bucket of the logs.
	LogsCloudUri string `protobuf:"bytes,4,opt,name=logsCloudUri,proto3" json:"logsCloudUri,omitempty"`
	// The uri for the label encoder, in case of a categorical class.
	LabelEncoder         string   `protobuf:"bytes,5,opt,name=labelEncoder,proto3" json:"labelEncoder,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrainResponse) Reset()         { *m = TrainResponse{} }
func (m *TrainResponse) String() string { return proto.CompactTextString(m) }
func (*TrainResponse) ProtoMessage()    {}
func (*TrainResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bb9234c9501b5ff, []int{1}
}
func (m *TrainResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrainResponse.Unmarshal(m, b)
}
func (m *TrainResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrainResponse.Marshal(b, m, deterministic)
}
func (m *TrainResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrainResponse.Merge(m, src)
}
func (m *TrainResponse) XXX_Size() int {
	return xxx_messageInfo_TrainResponse.Size(m)
}
func (m *TrainResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TrainResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TrainResponse proto.InternalMessageInfo

func (m *TrainResponse) GetResult() []*v1alpha12.Measurement {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *TrainResponse) GetWeightsCloudUri() string {
	if m != nil {
		return m.WeightsCloudUri
	}
	return ""
}

func (m *TrainResponse) GetManifestCloudUri() string {
	if m != nil {
		return m.ManifestCloudUri
	}
	return ""
}

func (m *TrainResponse) GetLogsCloudUri() string {
	if m != nil {
		return m.LogsCloudUri
	}
	return ""
}

func (m *TrainResponse) GetLabelEncoder() string {
	if m != nil {
		return m.LabelEncoder
	}
	return ""
}

type TestRequest struct {
	Product              *v1alpha1.DataProduct        `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	Version              *v1alpha1.DataProductVersion `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Bucket               *v1alpha11.VirtualBucket     `protobuf:"bytes,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Model                *v1alpha12.Model             `protobuf:"bytes,5,opt,name=model,proto3" json:"model,omitempty"`
	Study                *v1alpha12.Study             `protobuf:"bytes,6,opt,name=study,proto3" json:"study,omitempty"`
	Datasource           *v1alpha1.DataSource         `protobuf:"bytes,7,opt,name=datasource,proto3" json:"datasource,omitempty"`
	Dataset              *v1alpha1.Dataset            `protobuf:"bytes,8,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Connection           *v1alpha11.Connection        `protobuf:"bytes,9,opt,name=connection,proto3" json:"connection,omitempty"`
	Secret               *v1.Secret                   `protobuf:"bytes,10,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *TestRequest) Reset()         { *m = TestRequest{} }
func (m *TestRequest) String() string { return proto.CompactTextString(m) }
func (*TestRequest) ProtoMessage()    {}
func (*TestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bb9234c9501b5ff, []int{2}
}
func (m *TestRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestRequest.Unmarshal(m, b)
}
func (m *TestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestRequest.Marshal(b, m, deterministic)
}
func (m *TestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestRequest.Merge(m, src)
}
func (m *TestRequest) XXX_Size() int {
	return xxx_messageInfo_TestRequest.Size(m)
}
func (m *TestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TestRequest proto.InternalMessageInfo

func (m *TestRequest) GetProduct() *v1alpha1.DataProduct {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *TestRequest) GetVersion() *v1alpha1.DataProductVersion {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *TestRequest) GetBucket() *v1alpha11.VirtualBucket {
	if m != nil {
		return m.Bucket
	}
	return nil
}

func (m *TestRequest) GetModel() *v1alpha12.Model {
	if m != nil {
		return m.Model
	}
	return nil
}

func (m *TestRequest) GetStudy() *v1alpha12.Study {
	if m != nil {
		return m.Study
	}
	return nil
}

func (m *TestRequest) GetDatasource() *v1alpha1.DataSource {
	if m != nil {
		return m.Datasource
	}
	return nil
}

func (m *TestRequest) GetDataset() *v1alpha1.Dataset {
	if m != nil {
		return m.Dataset
	}
	return nil
}

func (m *TestRequest) GetConnection() *v1alpha11.Connection {
	if m != nil {
		return m.Connection
	}
	return nil
}

func (m *TestRequest) GetSecret() *v1.Secret {
	if m != nil {
		return m.Secret
	}
	return nil
}

type TestResponse struct {
	// measurements on the training set
	TrainResult []*v1alpha12.Measurement `protobuf:"bytes,1,rep,name=train_result,json=trainResult,proto3" json:"train_result,omitempty"`
	// measurements on the testing set
	TestResult []*v1alpha12.Measurement `protobuf:"bytes,2,rep,name=test_result,json=testResult,proto3" json:"test_result,omitempty"`
	// The location in the bucket of the trained bin model
	ModelWeightsCloudUri string `protobuf:"bytes,3,opt,name=modelWeightsCloudUri,proto3" json:"modelWeightsCloudUri,omitempty"`
	// The location in the bucket of the cloud manifest.
	ModelManifestCloudUri string `protobuf:"bytes,4,opt,name=modelManifestCloudUri,proto3" json:"modelManifestCloudUri,omitempty"`
	// The location in the bucket of the logs.
	ModelLogsCloudUri string `protobuf:"bytes,5,opt,name=modelLogsCloudUri,proto3" json:"modelLogsCloudUri,omitempty"`
	// The location in the bucket of the trained bin model
	PreWeightsCloudUri string `protobuf:"bytes,6,opt,name=preWeightsCloudUri,proto3" json:"preWeightsCloudUri,omitempty"`
	// The location in the bucket of the cloud manifest.
	PreManifestCloudUri string `protobuf:"bytes,7,opt,name=preManifestCloudUri,proto3" json:"preManifestCloudUri,omitempty"`
	// The location in the bucket of the logs.
	PreLogsCloudUri string `protobuf:"bytes,8,opt,name=preLogsCloudUri,proto3" json:"preLogsCloudUri,omitempty"`
	// The label encoder uri.
	LabelEncoder string `protobuf:"bytes,9,opt,name=labelEncoder,proto3" json:"labelEncoder,omitempty"`
	// Misclassfied uri
	MisclassUri          string   `protobuf:"bytes,10,opt,name=misclassUri,proto3" json:"misclassUri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestResponse) Reset()         { *m = TestResponse{} }
func (m *TestResponse) String() string { return proto.CompactTextString(m) }
func (*TestResponse) ProtoMessage()    {}
func (*TestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bb9234c9501b5ff, []int{3}
}
func (m *TestResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestResponse.Unmarshal(m, b)
}
func (m *TestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestResponse.Marshal(b, m, deterministic)
}
func (m *TestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestResponse.Merge(m, src)
}
func (m *TestResponse) XXX_Size() int {
	return xxx_messageInfo_TestResponse.Size(m)
}
func (m *TestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TestResponse proto.InternalMessageInfo

func (m *TestResponse) GetTrainResult() []*v1alpha12.Measurement {
	if m != nil {
		return m.TrainResult
	}
	return nil
}

func (m *TestResponse) GetTestResult() []*v1alpha12.Measurement {
	if m != nil {
		return m.TestResult
	}
	return nil
}

func (m *TestResponse) GetModelWeightsCloudUri() string {
	if m != nil {
		return m.ModelWeightsCloudUri
	}
	return ""
}

func (m *TestResponse) GetModelManifestCloudUri() string {
	if m != nil {
		return m.ModelManifestCloudUri
	}
	return ""
}

func (m *TestResponse) GetModelLogsCloudUri() string {
	if m != nil {
		return m.ModelLogsCloudUri
	}
	return ""
}

func (m *TestResponse) GetPreWeightsCloudUri() string {
	if m != nil {
		return m.PreWeightsCloudUri
	}
	return ""
}

func (m *TestResponse) GetPreManifestCloudUri() string {
	if m != nil {
		return m.PreManifestCloudUri
	}
	return ""
}

func (m *TestResponse) GetPreLogsCloudUri() string {
	if m != nil {
		return m.PreLogsCloudUri
	}
	return ""
}

func (m *TestResponse) GetLabelEncoder() string {
	if m != nil {
		return m.LabelEncoder
	}
	return ""
}

func (m *TestResponse) GetMisclassUri() string {
	if m != nil {
		return m.MisclassUri
	}
	return ""
}

// used for ensable training
type TrainEnsembleRequest struct {
	Product *v1alpha1.DataProduct        `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	Version *v1alpha1.DataProductVersion `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Bucket  *v1alpha11.VirtualBucket     `protobuf:"bytes,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
	// the spec for the base models
	Base                 []*v1alpha12.Model    `protobuf:"bytes,5,rep,name=base,proto3" json:"base,omitempty"`
	Model                *v1alpha12.Model      `protobuf:"bytes,6,opt,name=model,proto3" json:"model,omitempty"`
	Study                *v1alpha12.Study      `protobuf:"bytes,7,opt,name=study,proto3" json:"study,omitempty"`
	Datasource           *v1alpha1.DataSource  `protobuf:"bytes,8,opt,name=datasource,proto3" json:"datasource,omitempty"`
	Dataset              *v1alpha1.Dataset     `protobuf:"bytes,9,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Connection           *v1alpha11.Connection `protobuf:"bytes,10,opt,name=connection,proto3" json:"connection,omitempty"`
	Secret               *v1.Secret            `protobuf:"bytes,11,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TrainEnsembleRequest) Reset()         { *m = TrainEnsembleRequest{} }
func (m *TrainEnsembleRequest) String() string { return proto.CompactTextString(m) }
func (*TrainEnsembleRequest) ProtoMessage()    {}
func (*TrainEnsembleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bb9234c9501b5ff, []int{4}
}
func (m *TrainEnsembleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrainEnsembleRequest.Unmarshal(m, b)
}
func (m *TrainEnsembleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrainEnsembleRequest.Marshal(b, m, deterministic)
}
func (m *TrainEnsembleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrainEnsembleRequest.Merge(m, src)
}
func (m *TrainEnsembleRequest) XXX_Size() int {
	return xxx_messageInfo_TrainEnsembleRequest.Size(m)
}
func (m *TrainEnsembleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TrainEnsembleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TrainEnsembleRequest proto.InternalMessageInfo

func (m *TrainEnsembleRequest) GetProduct() *v1alpha1.DataProduct {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *TrainEnsembleRequest) GetVersion() *v1alpha1.DataProductVersion {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *TrainEnsembleRequest) GetBucket() *v1alpha11.VirtualBucket {
	if m != nil {
		return m.Bucket
	}
	return nil
}

func (m *TrainEnsembleRequest) GetBase() []*v1alpha12.Model {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *TrainEnsembleRequest) GetModel() *v1alpha12.Model {
	if m != nil {
		return m.Model
	}
	return nil
}

func (m *TrainEnsembleRequest) GetStudy() *v1alpha12.Study {
	if m != nil {
		return m.Study
	}
	return nil
}

func (m *TrainEnsembleRequest) GetDatasource() *v1alpha1.DataSource {
	if m != nil {
		return m.Datasource
	}
	return nil
}

func (m *TrainEnsembleRequest) GetDataset() *v1alpha1.Dataset {
	if m != nil {
		return m.Dataset
	}
	return nil
}

func (m *TrainEnsembleRequest) GetConnection() *v1alpha11.Connection {
	if m != nil {
		return m.Connection
	}
	return nil
}

func (m *TrainEnsembleRequest) GetSecret() *v1.Secret {
	if m != nil {
		return m.Secret
	}
	return nil
}

type TestEnsembleRequest struct {
	Product *v1alpha1.DataProduct        `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	Version *v1alpha1.DataProductVersion `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Bucket  *v1alpha11.VirtualBucket     `protobuf:"bytes,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
	// the spec for the base models
	Base                 []*v1alpha12.Model    `protobuf:"bytes,5,rep,name=base,proto3" json:"base,omitempty"`
	Model                *v1alpha12.Model      `protobuf:"bytes,6,opt,name=model,proto3" json:"model,omitempty"`
	Study                *v1alpha12.Study      `protobuf:"bytes,7,opt,name=study,proto3" json:"study,omitempty"`
	Datasource           *v1alpha1.DataSource  `protobuf:"bytes,8,opt,name=datasource,proto3" json:"datasource,omitempty"`
	Dataset              *v1alpha1.Dataset     `protobuf:"bytes,9,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Connection           *v1alpha11.Connection `protobuf:"bytes,10,opt,name=connection,proto3" json:"connection,omitempty"`
	Secret               *v1.Secret            `protobuf:"bytes,11,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TestEnsembleRequest) Reset()         { *m = TestEnsembleRequest{} }
func (m *TestEnsembleRequest) String() string { return proto.CompactTextString(m) }
func (*TestEnsembleRequest) ProtoMessage()    {}
func (*TestEnsembleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bb9234c9501b5ff, []int{5}
}
func (m *TestEnsembleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestEnsembleRequest.Unmarshal(m, b)
}
func (m *TestEnsembleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestEnsembleRequest.Marshal(b, m, deterministic)
}
func (m *TestEnsembleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestEnsembleRequest.Merge(m, src)
}
func (m *TestEnsembleRequest) XXX_Size() int {
	return xxx_messageInfo_TestEnsembleRequest.Size(m)
}
func (m *TestEnsembleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TestEnsembleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TestEnsembleRequest proto.InternalMessageInfo

func (m *TestEnsembleRequest) GetProduct() *v1alpha1.DataProduct {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *TestEnsembleRequest) GetVersion() *v1alpha1.DataProductVersion {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *TestEnsembleRequest) GetBucket() *v1alpha11.VirtualBucket {
	if m != nil {
		return m.Bucket
	}
	return nil
}

func (m *TestEnsembleRequest) GetBase() []*v1alpha12.Model {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *TestEnsembleRequest) GetModel() *v1alpha12.Model {
	if m != nil {
		return m.Model
	}
	return nil
}

func (m *TestEnsembleRequest) GetStudy() *v1alpha12.Study {
	if m != nil {
		return m.Study
	}
	return nil
}

func (m *TestEnsembleRequest) GetDatasource() *v1alpha1.DataSource {
	if m != nil {
		return m.Datasource
	}
	return nil
}

func (m *TestEnsembleRequest) GetDataset() *v1alpha1.Dataset {
	if m != nil {
		return m.Dataset
	}
	return nil
}

func (m *TestEnsembleRequest) GetConnection() *v1alpha11.Connection {
	if m != nil {
		return m.Connection
	}
	return nil
}

func (m *TestEnsembleRequest) GetSecret() *v1.Secret {
	if m != nil {
		return m.Secret
	}
	return nil
}

type ForecastRequest struct {
	Product              *v1alpha1.DataProduct        `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	Version              *v1alpha1.DataProductVersion `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Bucket               *v1alpha11.VirtualBucket     `protobuf:"bytes,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Model                *v1alpha12.Model             `protobuf:"bytes,5,opt,name=model,proto3" json:"model,omitempty"`
	Study                *v1alpha12.Study             `protobuf:"bytes,6,opt,name=study,proto3" json:"study,omitempty"`
	Datasource           *v1alpha1.DataSource         `protobuf:"bytes,7,opt,name=datasource,proto3" json:"datasource,omitempty"`
	Dataset              *v1alpha1.Dataset            `protobuf:"bytes,8,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Connection           *v1alpha11.Connection        `protobuf:"bytes,9,opt,name=connection,proto3" json:"connection,omitempty"`
	Secret               *v1.Secret                   `protobuf:"bytes,10,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ForecastRequest) Reset()         { *m = ForecastRequest{} }
func (m *ForecastRequest) String() string { return proto.CompactTextString(m) }
func (*ForecastRequest) ProtoMessage()    {}
func (*ForecastRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bb9234c9501b5ff, []int{6}
}
func (m *ForecastRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForecastRequest.Unmarshal(m, b)
}
func (m *ForecastRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForecastRequest.Marshal(b, m, deterministic)
}
func (m *ForecastRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForecastRequest.Merge(m, src)
}
func (m *ForecastRequest) XXX_Size() int {
	return xxx_messageInfo_ForecastRequest.Size(m)
}
func (m *ForecastRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ForecastRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ForecastRequest proto.InternalMessageInfo

func (m *ForecastRequest) GetProduct() *v1alpha1.DataProduct {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *ForecastRequest) GetVersion() *v1alpha1.DataProductVersion {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *ForecastRequest) GetBucket() *v1alpha11.VirtualBucket {
	if m != nil {
		return m.Bucket
	}
	return nil
}

func (m *ForecastRequest) GetModel() *v1alpha12.Model {
	if m != nil {
		return m.Model
	}
	return nil
}

func (m *ForecastRequest) GetStudy() *v1alpha12.Study {
	if m != nil {
		return m.Study
	}
	return nil
}

func (m *ForecastRequest) GetDatasource() *v1alpha1.DataSource {
	if m != nil {
		return m.Datasource
	}
	return nil
}

func (m *ForecastRequest) GetDataset() *v1alpha1.Dataset {
	if m != nil {
		return m.Dataset
	}
	return nil
}

func (m *ForecastRequest) GetConnection() *v1alpha11.Connection {
	if m != nil {
		return m.Connection
	}
	return nil
}

func (m *ForecastRequest) GetSecret() *v1.Secret {
	if m != nil {
		return m.Secret
	}
	return nil
}

type ForecastResponse struct {
	// The location in the bucket of the forecast
	ForecastCloudUri     string   `protobuf:"bytes,2,opt,name=forecastCloudUri,proto3" json:"forecastCloudUri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ForecastResponse) Reset()         { *m = ForecastResponse{} }
func (m *ForecastResponse) String() string { return proto.CompactTextString(m) }
func (*ForecastResponse) ProtoMessage()    {}
func (*ForecastResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bb9234c9501b5ff, []int{7}
}
func (m *ForecastResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForecastResponse.Unmarshal(m, b)
}
func (m *ForecastResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForecastResponse.Marshal(b, m, deterministic)
}
func (m *ForecastResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForecastResponse.Merge(m, src)
}
func (m *ForecastResponse) XXX_Size() int {
	return xxx_messageInfo_ForecastResponse.Size(m)
}
func (m *ForecastResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ForecastResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ForecastResponse proto.InternalMessageInfo

func (m *ForecastResponse) GetForecastCloudUri() string {
	if m != nil {
		return m.ForecastCloudUri
	}
	return ""
}

type ShutdownRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShutdownRequest) Reset()         { *m = ShutdownRequest{} }
func (m *ShutdownRequest) String() string { return proto.CompactTextString(m) }
func (*ShutdownRequest) ProtoMessage()    {}
func (*ShutdownRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bb9234c9501b5ff, []int{8}
}
func (m *ShutdownRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShutdownRequest.Unmarshal(m, b)
}
func (m *ShutdownRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShutdownRequest.Marshal(b, m, deterministic)
}
func (m *ShutdownRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShutdownRequest.Merge(m, src)
}
func (m *ShutdownRequest) XXX_Size() int {
	return xxx_messageInfo_ShutdownRequest.Size(m)
}
func (m *ShutdownRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShutdownRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShutdownRequest proto.InternalMessageInfo

type ShutdownResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShutdownResponse) Reset()         { *m = ShutdownResponse{} }
func (m *ShutdownResponse) String() string { return proto.CompactTextString(m) }
func (*ShutdownResponse) ProtoMessage()    {}
func (*ShutdownResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bb9234c9501b5ff, []int{9}
}
func (m *ShutdownResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShutdownResponse.Unmarshal(m, b)
}
func (m *ShutdownResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShutdownResponse.Marshal(b, m, deterministic)
}
func (m *ShutdownResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShutdownResponse.Merge(m, src)
}
func (m *ShutdownResponse) XXX_Size() int {
	return xxx_messageInfo_ShutdownResponse.Size(m)
}
func (m *ShutdownResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ShutdownResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ShutdownResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*TrainRequest)(nil), "github.com.metaprov.modeld.services.trainerd.TrainRequest")
	proto.RegisterType((*TrainResponse)(nil), "github.com.metaprov.modeld.services.trainerd.TrainResponse")
	proto.RegisterType((*TestRequest)(nil), "github.com.metaprov.modeld.services.trainerd.TestRequest")
	proto.RegisterType((*TestResponse)(nil), "github.com.metaprov.modeld.services.trainerd.TestResponse")
	proto.RegisterType((*TrainEnsembleRequest)(nil), "github.com.metaprov.modeld.services.trainerd.TrainEnsembleRequest")
	proto.RegisterType((*TestEnsembleRequest)(nil), "github.com.metaprov.modeld.services.trainerd.TestEnsembleRequest")
	proto.RegisterType((*ForecastRequest)(nil), "github.com.metaprov.modeld.services.trainerd.ForecastRequest")
	proto.RegisterType((*ForecastResponse)(nil), "github.com.metaprov.modeld.services.trainerd.ForecastResponse")
	proto.RegisterType((*ShutdownRequest)(nil), "github.com.metaprov.modeld.services.trainerd.ShutdownRequest")
	proto.RegisterType((*ShutdownResponse)(nil), "github.com.metaprov.modeld.services.trainerd.ShutdownResponse")
}

func init() { proto.RegisterFile("services/trainerd/trainerd.proto", fileDescriptor_0bb9234c9501b5ff) }

var fileDescriptor_0bb9234c9501b5ff = []byte{
	// 954 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x99, 0xdd, 0x6e, 0xdb, 0x36,
	0x14, 0xc7, 0xeb, 0x7c, 0xc8, 0xc9, 0x71, 0x86, 0xa4, 0x6c, 0x07, 0x08, 0xbe, 0x0a, 0x74, 0x15,
	0x14, 0x05, 0xb5, 0x78, 0xbb, 0xd8, 0x3a, 0xb4, 0x5b, 0xd3, 0x64, 0xe8, 0xc5, 0x0a, 0x0c, 0x72,
	0xda, 0x02, 0xfb, 0xc0, 0x46, 0x4b, 0x27, 0xb6, 0x10, 0x59, 0xd4, 0x48, 0xca, 0xc5, 0xae, 0x06,
	0xec, 0x6e, 0x1f, 0xc0, 0x80, 0x3d, 0xc7, 0x06, 0xec, 0x39, 0xf6, 0x08, 0x7b, 0x9a, 0x81, 0xa4,
	0x64, 0xbb, 0xb2, 0x9b, 0xf9, 0x63, 0xc6, 0x6e, 0x74, 0x97, 0x1c, 0x1e, 0xfe, 0x78, 0x48, 0x9d,
	0xf3, 0xb7, 0x78, 0x04, 0xc7, 0x12, 0xc5, 0x28, 0x0e, 0x51, 0xfa, 0x4a, 0xb0, 0x38, 0x45, 0x11,
	0x8d, 0xff, 0xa0, 0x99, 0xe0, 0x8a, 0x93, 0xfb, 0xfd, 0x58, 0x0d, 0xf2, 0x1e, 0x0d, 0xf9, 0x90,
	0x0e, 0x51, 0xb1, 0x4c, 0xf0, 0x11, 0x1d, 0xf2, 0x08, 0x93, 0x88, 0x96, 0x93, 0x69, 0x39, 0xa7,
	0xfd, 0x74, 0xe2, 0xed, 0x97, 0xde, 0xbe, 0xf5, 0x66, 0x59, 0xec, 0x67, 0xd7, 0x7d, 0x9f, 0x65,
	0x71, 0xb1, 0x5a, 0x9c, 0xf6, 0xfd, 0xd1, 0x29, 0x4b, 0xb2, 0x01, 0x3b, 0xf5, 0xfb, 0x98, 0xa2,
	0x60, 0x0a, 0x8b, 0x75, 0xdb, 0xe7, 0x0b, 0x92, 0x22, 0xa6, 0xd8, 0x9b, 0x29, 0x17, 0x0b, 0x52,
	0xe2, 0xf4, 0x4a, 0xdc, 0x80, 0xf1, 0xae, 0xdf, 0x97, 0x34, 0xe6, 0xda, 0xd7, 0x0f, 0xb9, 0x40,
	0x7f, 0x34, 0xe3, 0xe3, 0xfd, 0xe1, 0xc0, 0xc1, 0xa5, 0xde, 0x56, 0x80, 0xdf, 0xe6, 0x28, 0x15,
	0xf9, 0x02, 0x9a, 0x99, 0xe0, 0x51, 0x1e, 0x2a, 0xb7, 0x71, 0xdc, 0x38, 0x69, 0x75, 0x1e, 0xd3,
	0x37, 0x9f, 0x25, 0xcb, 0x62, 0x9a, 0x5d, 0xf7, 0xa9, 0x8e, 0x86, 0xea, 0x3d, 0xd1, 0x32, 0x18,
	0x7a, 0xce, 0x14, 0xfb, 0xcc, 0x82, 0x82, 0x92, 0x48, 0x7a, 0xd0, 0x1c, 0xa1, 0x90, 0x31, 0x4f,
	0xdd, 0x2d, 0x03, 0x7f, 0xba, 0x36, 0xfc, 0x85, 0xe5, 0x05, 0x25, 0x98, 0x7c, 0x09, 0x4e, 0x2f,
	0x0f, 0xaf, 0x51, 0xb9, 0xdb, 0x66, 0x89, 0xf3, 0x45, 0x97, 0x30, 0xa7, 0x39, 0x59, 0xe3, 0x45,
	0x2c, 0x54, 0xce, 0x92, 0x33, 0xc3, 0x0a, 0x0a, 0x26, 0x79, 0x0e, 0xbb, 0x66, 0xaa, 0xbb, 0x6b,
	0xe0, 0x1f, 0x2d, 0x0a, 0x2f, 0x53, 0x67, 0xc2, 0x7f, 0xa6, 0x9d, 0x02, 0x4b, 0xd3, 0x58, 0xa9,
	0xf2, 0xe8, 0x3b, 0xd7, 0x59, 0x17, 0xdb, 0xd5, 0x98, 0xc0, 0xd2, 0xc8, 0x37, 0x00, 0xfa, 0xe0,
	0x24, 0xcf, 0x45, 0x88, 0x6e, 0xd3, 0xb0, 0x3f, 0x5e, 0xfd, 0xc8, 0xbb, 0x86, 0x13, 0x4c, 0x31,
	0xc9, 0x4b, 0x68, 0x9a, 0xff, 0x50, 0xb9, 0x7b, 0x06, 0xff, 0x70, 0x75, 0xbc, 0x44, 0x15, 0x94,
	0x34, 0xc2, 0x00, 0x42, 0x9e, 0xa6, 0x18, 0x2a, 0x9d, 0x2d, 0xfb, 0xcb, 0xa5, 0x62, 0xe5, 0x51,
	0x3e, 0x19, 0x83, 0x82, 0x29, 0x28, 0xe9, 0x80, 0x23, 0x31, 0x14, 0xa8, 0x5c, 0x30, 0xf8, 0x36,
	0xb5, 0x05, 0xa3, 0x19, 0x54, 0x17, 0x0c, 0x1d, 0x9d, 0xd2, 0xae, 0xf1, 0x08, 0x0a, 0x4f, 0xef,
	0x97, 0x2d, 0x78, 0xab, 0xa8, 0x17, 0x99, 0xf1, 0x54, 0x22, 0xf9, 0x0a, 0x1c, 0x81, 0x32, 0x4f,
	0x74, 0xbd, 0x6c, 0x9f, 0xb4, 0x3a, 0x17, 0x6b, 0xa4, 0x04, 0x32, 0x99, 0x0b, 0x1c, 0x62, 0xaa,
	0x82, 0x02, 0x4a, 0x4e, 0xe0, 0xf0, 0x15, 0xc6, 0xfd, 0x81, 0x92, 0x4f, 0x12, 0x9e, 0x47, 0xcf,
	0x45, 0x6c, 0x4a, 0x67, 0x3f, 0xa8, 0x9a, 0xc9, 0x3d, 0x38, 0x1a, 0xb2, 0x34, 0xbe, 0x42, 0xa9,
	0xc6, 0xae, 0xdb, 0xc6, 0x75, 0xc6, 0x4e, 0x3c, 0x38, 0x48, 0x78, 0x7f, 0x82, 0xdc, 0x31, 0x7e,
	0xaf, 0xd9, 0x8c, 0x0f, 0xeb, 0x61, 0x72, 0x91, 0x86, 0x3c, 0x42, 0x61, 0x32, 0x5e, 0xfb, 0x4c,
	0xd9, 0xbc, 0xdf, 0x1d, 0x68, 0x5d, 0xa2, 0x54, 0xb5, 0x7a, 0xd4, 0xea, 0x51, 0xab, 0xc7, 0xbf,
	0xaa, 0xc7, 0x5f, 0x3b, 0x70, 0x60, 0xcb, 0xa5, 0x10, 0x8f, 0x01, 0x1c, 0x98, 0x87, 0xf0, 0xf5,
	0x26, 0x24, 0xa4, 0xa5, 0x0a, 0xa1, 0xd2, 0x3a, 0x72, 0x05, 0x2d, 0x85, 0x52, 0x95, 0x0b, 0x6d,
	0xfd, 0x97, 0x0b, 0x81, 0xb2, 0x7b, 0xd2, 0xeb, 0x74, 0xe0, 0xae, 0x99, 0xff, 0xb2, 0x22, 0x5a,
	0x56, 0x89, 0xe6, 0x8e, 0x91, 0xf7, 0xe0, 0x6d, 0x63, 0x7f, 0x56, 0x95, 0x2f, 0x2b, 0x4b, 0xf3,
	0x07, 0xc9, 0x7d, 0xb8, 0x6d, 0x06, 0x3e, 0x9d, 0x16, 0x32, 0x2b, 0x52, 0xb3, 0x03, 0x84, 0x02,
	0xc9, 0x04, 0x56, 0xa3, 0x72, 0x8c, 0xfb, 0x9c, 0x11, 0xf2, 0x0e, 0xdc, 0xc9, 0x04, 0xce, 0x44,
	0xd4, 0x34, 0x13, 0xe6, 0x0d, 0x69, 0xa5, 0xce, 0x04, 0xbe, 0x16, 0xcd, 0x9e, 0x55, 0xea, 0x8a,
	0x79, 0x46, 0x59, 0xf7, 0x67, 0x95, 0x95, 0x1c, 0x43, 0x6b, 0x18, 0xcb, 0x30, 0x61, 0x52, 0x6a,
	0x12, 0x18, 0x97, 0x69, 0x93, 0xf7, 0x53, 0x13, 0xee, 0x9a, 0x9f, 0xa2, 0x8b, 0x54, 0xe2, 0xb0,
	0x97, 0x60, 0x2d, 0xc2, 0x0b, 0x89, 0x70, 0x17, 0x76, 0x7a, 0x4c, 0xa2, 0xbb, 0x6b, 0x4a, 0x60,
	0x6d, 0x0d, 0x36, 0xb0, 0x89, 0xb2, 0x3b, 0x9b, 0x51, 0xf6, 0xe6, 0x06, 0x95, 0x7d, 0x6f, 0xb3,
	0xca, 0xbe, 0xbf, 0x41, 0x65, 0x87, 0xcd, 0x2a, 0x7b, 0x6b, 0x61, 0x65, 0xff, 0xb1, 0x09, 0x77,
	0xb4, 0xb2, 0xd7, 0xb5, 0x58, 0xd7, 0x62, 0x5d, 0x8b, 0xff, 0x6f, 0x2d, 0xfe, 0xe9, 0xc0, 0xe1,
	0x27, 0x5c, 0x60, 0xc8, 0xea, 0x8b, 0x49, 0x7d, 0x31, 0xa9, 0x2f, 0x26, 0x0b, 0x94, 0xcc, 0x23,
	0x38, 0x9a, 0x54, 0x4c, 0x71, 0x37, 0xb9, 0x07, 0x47, 0x57, 0x85, 0xad, 0xd2, 0x7a, 0x98, 0xb1,
	0x7b, 0xb7, 0xe1, 0xb0, 0x3b, 0xc8, 0x55, 0xc4, 0x5f, 0x95, 0x8d, 0x44, 0x8f, 0xc0, 0xd1, 0xc4,
	0x64, 0x91, 0x9d, 0xbf, 0x1d, 0x38, 0xbc, 0x2c, 0xba, 0xae, 0x5d, 0xdb, 0x86, 0x25, 0x3f, 0x34,
	0x60, 0xd7, 0xd8, 0xc8, 0x03, 0xba, 0x4c, 0xd7, 0x96, 0x4e, 0xb7, 0x2d, 0xdb, 0x1f, 0xae, 0x34,
	0xd7, 0x86, 0xe5, 0xdd, 0x22, 0x3f, 0x37, 0x60, 0xaf, 0x3c, 0x00, 0xf2, 0x70, 0x39, 0x56, 0x45,
	0x6a, 0xda, 0x8f, 0x56, 0x9d, 0x3e, 0x8e, 0xe6, 0x7b, 0xd8, 0xd1, 0xef, 0x12, 0xe4, 0x83, 0x25,
	0x37, 0x35, 0x69, 0xc4, 0xb4, 0x1f, 0xac, 0x32, 0x75, 0x1c, 0xc0, 0x6f, 0x8d, 0xa2, 0xcb, 0x55,
	0xbe, 0xce, 0x90, 0xb3, 0x15, 0xce, 0xb7, 0xf2, 0x2e, 0xb4, 0xee, 0x33, 0xfa, 0xb5, 0x61, 0x2f,
	0xcf, 0xe3, 0x98, 0x1e, 0x2f, 0xbf, 0xc7, 0x6a, 0x48, 0xeb, 0x1d, 0x93, 0xce, 0x9a, 0x32, 0xc7,
	0x97, 0xcd, 0x9a, 0x4a, 0xb9, 0x2c, 0x9b, 0x35, 0xd5, 0xd2, 0xf2, 0x6e, 0x9d, 0x9d, 0x7e, 0xee,
	0xdf, 0xfc, 0xdd, 0x60, 0xe6, 0xab, 0x49, 0xcf, 0x31, 0x1f, 0x01, 0xde, 0xfd, 0x27, 0x00, 0x00,
	0xff, 0xff, 0x89, 0xb6, 0x19, 0x3d, 0x51, 0x19, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TrainerdServiceClient is the client API for TrainerdService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TrainerdServiceClient interface {
	Train(ctx context.Context, in *TrainRequest, opts ...grpc.CallOption) (*TrainResponse, error)
	Forecast(ctx context.Context, in *ForecastRequest, opts ...grpc.CallOption) (*ForecastResponse, error)
	Test(ctx context.Context, in *TestRequest, opts ...grpc.CallOption) (*TestResponse, error)
	TrainEnsemble(ctx context.Context, in *TrainEnsembleRequest, opts ...grpc.CallOption) (*TrainResponse, error)
	TestEnsemble(ctx context.Context, in *TestEnsembleRequest, opts ...grpc.CallOption) (*TestResponse, error)
	Shutdown(ctx context.Context, in *ShutdownRequest, opts ...grpc.CallOption) (*ShutdownResponse, error)
}

type trainerdServiceClient struct {
	cc *grpc.ClientConn
}

func NewTrainerdServiceClient(cc *grpc.ClientConn) TrainerdServiceClient {
	return &trainerdServiceClient{cc}
}

func (c *trainerdServiceClient) Train(ctx context.Context, in *TrainRequest, opts ...grpc.CallOption) (*TrainResponse, error) {
	out := new(TrainResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.trainerd.TrainerdService/Train", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trainerdServiceClient) Forecast(ctx context.Context, in *ForecastRequest, opts ...grpc.CallOption) (*ForecastResponse, error) {
	out := new(ForecastResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.trainerd.TrainerdService/Forecast", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trainerdServiceClient) Test(ctx context.Context, in *TestRequest, opts ...grpc.CallOption) (*TestResponse, error) {
	out := new(TestResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.trainerd.TrainerdService/Test", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trainerdServiceClient) TrainEnsemble(ctx context.Context, in *TrainEnsembleRequest, opts ...grpc.CallOption) (*TrainResponse, error) {
	out := new(TrainResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.trainerd.TrainerdService/TrainEnsemble", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trainerdServiceClient) TestEnsemble(ctx context.Context, in *TestEnsembleRequest, opts ...grpc.CallOption) (*TestResponse, error) {
	out := new(TestResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.trainerd.TrainerdService/TestEnsemble", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trainerdServiceClient) Shutdown(ctx context.Context, in *ShutdownRequest, opts ...grpc.CallOption) (*ShutdownResponse, error) {
	out := new(ShutdownResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeld.services.trainerd.TrainerdService/Shutdown", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TrainerdServiceServer is the server API for TrainerdService service.
type TrainerdServiceServer interface {
	Train(context.Context, *TrainRequest) (*TrainResponse, error)
	Forecast(context.Context, *ForecastRequest) (*ForecastResponse, error)
	Test(context.Context, *TestRequest) (*TestResponse, error)
	TrainEnsemble(context.Context, *TrainEnsembleRequest) (*TrainResponse, error)
	TestEnsemble(context.Context, *TestEnsembleRequest) (*TestResponse, error)
	Shutdown(context.Context, *ShutdownRequest) (*ShutdownResponse, error)
}

// UnimplementedTrainerdServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTrainerdServiceServer struct {
}

func (*UnimplementedTrainerdServiceServer) Train(ctx context.Context, req *TrainRequest) (*TrainResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Train not implemented")
}
func (*UnimplementedTrainerdServiceServer) Forecast(ctx context.Context, req *ForecastRequest) (*ForecastResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Forecast not implemented")
}
func (*UnimplementedTrainerdServiceServer) Test(ctx context.Context, req *TestRequest) (*TestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Test not implemented")
}
func (*UnimplementedTrainerdServiceServer) TrainEnsemble(ctx context.Context, req *TrainEnsembleRequest) (*TrainResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TrainEnsemble not implemented")
}
func (*UnimplementedTrainerdServiceServer) TestEnsemble(ctx context.Context, req *TestEnsembleRequest) (*TestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TestEnsemble not implemented")
}
func (*UnimplementedTrainerdServiceServer) Shutdown(ctx context.Context, req *ShutdownRequest) (*ShutdownResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Shutdown not implemented")
}

func RegisterTrainerdServiceServer(s *grpc.Server, srv TrainerdServiceServer) {
	s.RegisterService(&_TrainerdService_serviceDesc, srv)
}

func _TrainerdService_Train_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TrainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainerdServiceServer).Train(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.trainerd.TrainerdService/Train",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainerdServiceServer).Train(ctx, req.(*TrainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TrainerdService_Forecast_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ForecastRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainerdServiceServer).Forecast(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.trainerd.TrainerdService/Forecast",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainerdServiceServer).Forecast(ctx, req.(*ForecastRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TrainerdService_Test_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainerdServiceServer).Test(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.trainerd.TrainerdService/Test",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainerdServiceServer).Test(ctx, req.(*TestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TrainerdService_TrainEnsemble_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TrainEnsembleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainerdServiceServer).TrainEnsemble(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.trainerd.TrainerdService/TrainEnsemble",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainerdServiceServer).TrainEnsemble(ctx, req.(*TrainEnsembleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TrainerdService_TestEnsemble_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TestEnsembleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainerdServiceServer).TestEnsemble(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.trainerd.TrainerdService/TestEnsemble",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainerdServiceServer).TestEnsemble(ctx, req.(*TestEnsembleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TrainerdService_Shutdown_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShutdownRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainerdServiceServer).Shutdown(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeld.services.trainerd.TrainerdService/Shutdown",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainerdServiceServer).Shutdown(ctx, req.(*ShutdownRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TrainerdService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.metaprov.modeld.services.trainerd.TrainerdService",
	HandlerType: (*TrainerdServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Train",
			Handler:    _TrainerdService_Train_Handler,
		},
		{
			MethodName: "Forecast",
			Handler:    _TrainerdService_Forecast_Handler,
		},
		{
			MethodName: "Test",
			Handler:    _TrainerdService_Test_Handler,
		},
		{
			MethodName: "TrainEnsemble",
			Handler:    _TrainerdService_TrainEnsemble_Handler,
		},
		{
			MethodName: "TestEnsemble",
			Handler:    _TrainerdService_TestEnsemble_Handler,
		},
		{
			MethodName: "Shutdown",
			Handler:    _TrainerdService_Shutdown_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/trainerd/trainerd.proto",
}
