// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.7
// source: github.com/metaprov/modeldapi/services/archived/v1/archived.proto

package v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	v1alpha1 "github.com/metaprov/modeldapi/pkg/apis/data/v1alpha1"
	v1alpha12 "github.com/metaprov/modeldapi/pkg/apis/inference/v1alpha1"
	_ "github.com/metaprov/modeldapi/pkg/apis/infra/v1alpha1"
	_ "github.com/metaprov/modeldapi/pkg/apis/team/v1alpha1"
	v1alpha11 "github.com/metaprov/modeldapi/pkg/apis/training/v1alpha1"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// A Modeld object represent a object in the system (e.g. account, virtual bucket)
// Object are stored as blobs
type ModeldBlob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Kind      string `protobuf:"bytes,3,opt,name=kind,proto3" json:"kind,omitempty"`
	Blob      string `protobuf:"bytes,4,opt,name=blob,proto3" json:"blob,omitempty"`
}

func (x *ModeldBlob) Reset() {
	*x = ModeldBlob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModeldBlob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModeldBlob) ProtoMessage() {}

func (x *ModeldBlob) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModeldBlob.ProtoReflect.Descriptor instead.
func (*ModeldBlob) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{0}
}

func (x *ModeldBlob) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ModeldBlob) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModeldBlob) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ModeldBlob) GetBlob() string {
	if x != nil {
		return x.Blob
	}
	return ""
}

type RecordObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *ModeldBlob `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *RecordObjectRequest) Reset() {
	*x = RecordObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordObjectRequest) ProtoMessage() {}

func (x *RecordObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordObjectRequest.ProtoReflect.Descriptor instead.
func (*RecordObjectRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{1}
}

func (x *RecordObjectRequest) GetItem() *ModeldBlob {
	if x != nil {
		return x.Item
	}
	return nil
}

type GetObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetObjectRequest) Reset() {
	*x = GetObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectRequest) ProtoMessage() {}

func (x *GetObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectRequest.ProtoReflect.Descriptor instead.
func (*GetObjectRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{2}
}

func (x *GetObjectRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetObjectRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *ModeldBlob `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *GetObjectResponse) Reset() {
	*x = GetObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectResponse) ProtoMessage() {}

func (x *GetObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectResponse.ProtoReflect.Descriptor instead.
func (*GetObjectResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{3}
}

func (x *GetObjectResponse) GetItem() *ModeldBlob {
	if x != nil {
		return x.Item
	}
	return nil
}

type ListObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Selector  map[string]string `protobuf:"bytes,2,rep,name=selector,proto3" json:"selector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListObjectRequest) Reset() {
	*x = ListObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectRequest) ProtoMessage() {}

func (x *ListObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectRequest.ProtoReflect.Descriptor instead.
func (*ListObjectRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{4}
}

func (x *ListObjectRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListObjectRequest) GetSelector() map[string]string {
	if x != nil {
		return x.Selector
	}
	return nil
}

type ListObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ModeldBlob `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListObjectResponse) Reset() {
	*x = ListObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectResponse) ProtoMessage() {}

func (x *ListObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectResponse.ProtoReflect.Descriptor instead.
func (*ListObjectResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{5}
}

func (x *ListObjectResponse) GetItems() []*ModeldBlob {
	if x != nil {
		return x.Items
	}
	return nil
}

type DeleteObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteObjectRequest) Reset() {
	*x = DeleteObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteObjectRequest) ProtoMessage() {}

func (x *DeleteObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteObjectRequest.ProtoReflect.Descriptor instead.
func (*DeleteObjectRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteObjectRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeleteObjectRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListDatasetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Selector  map[string]string `protobuf:"bytes,2,rep,name=selector,proto3" json:"selector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListDatasetRequest) Reset() {
	*x = ListDatasetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDatasetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatasetRequest) ProtoMessage() {}

func (x *ListDatasetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatasetRequest.ProtoReflect.Descriptor instead.
func (*ListDatasetRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{7}
}

func (x *ListDatasetRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListDatasetRequest) GetSelector() map[string]string {
	if x != nil {
		return x.Selector
	}
	return nil
}

type ListDatasetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*v1alpha1.Dataset `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListDatasetResponse) Reset() {
	*x = ListDatasetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDatasetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatasetResponse) ProtoMessage() {}

func (x *ListDatasetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatasetResponse.ProtoReflect.Descriptor instead.
func (*ListDatasetResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{8}
}

func (x *ListDatasetResponse) GetItems() []*v1alpha1.Dataset {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListFeaturePipelineRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListFeaturePipelineRunRequest) Reset() {
	*x = ListFeaturePipelineRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeaturePipelineRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeaturePipelineRunRequest) ProtoMessage() {}

func (x *ListFeaturePipelineRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeaturePipelineRunRequest.ProtoReflect.Descriptor instead.
func (*ListFeaturePipelineRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{9}
}

type ListFeaturePipelineRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*v1alpha1.FeaturePipelineRun `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListFeaturePipelineRunResponse) Reset() {
	*x = ListFeaturePipelineRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeaturePipelineRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeaturePipelineRunResponse) ProtoMessage() {}

func (x *ListFeaturePipelineRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeaturePipelineRunResponse.ProtoReflect.Descriptor instead.
func (*ListFeaturePipelineRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{10}
}

func (x *ListFeaturePipelineRunResponse) GetItems() []*v1alpha1.FeaturePipelineRun {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListLabelingPipelineRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Selector  map[string]string `protobuf:"bytes,2,rep,name=selector,proto3" json:"selector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListLabelingPipelineRunRequest) Reset() {
	*x = ListLabelingPipelineRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLabelingPipelineRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLabelingPipelineRunRequest) ProtoMessage() {}

func (x *ListLabelingPipelineRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLabelingPipelineRunRequest.ProtoReflect.Descriptor instead.
func (*ListLabelingPipelineRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{11}
}

func (x *ListLabelingPipelineRunRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListLabelingPipelineRunRequest) GetSelector() map[string]string {
	if x != nil {
		return x.Selector
	}
	return nil
}

type ListLabelingPipelineRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*v1alpha1.LabelingPipelineRun `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListLabelingPipelineRunResponse) Reset() {
	*x = ListLabelingPipelineRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLabelingPipelineRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLabelingPipelineRunResponse) ProtoMessage() {}

func (x *ListLabelingPipelineRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLabelingPipelineRunResponse.ProtoReflect.Descriptor instead.
func (*ListLabelingPipelineRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{12}
}

func (x *ListLabelingPipelineRunResponse) GetItems() []*v1alpha1.LabelingPipelineRun {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListRecipeRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Selector  map[string]string `protobuf:"bytes,2,rep,name=selector,proto3" json:"selector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListRecipeRunRequest) Reset() {
	*x = ListRecipeRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRecipeRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRecipeRunRequest) ProtoMessage() {}

func (x *ListRecipeRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRecipeRunRequest.ProtoReflect.Descriptor instead.
func (*ListRecipeRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{13}
}

func (x *ListRecipeRunRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListRecipeRunRequest) GetSelector() map[string]string {
	if x != nil {
		return x.Selector
	}
	return nil
}

type ListRecipeRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*v1alpha1.RecipeRun `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListRecipeRunResponse) Reset() {
	*x = ListRecipeRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRecipeRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRecipeRunResponse) ProtoMessage() {}

func (x *ListRecipeRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRecipeRunResponse.ProtoReflect.Descriptor instead.
func (*ListRecipeRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{14}
}

func (x *ListRecipeRunResponse) GetItems() []*v1alpha1.RecipeRun {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Selector  map[string]string `protobuf:"bytes,2,rep,name=selector,proto3" json:"selector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListReportRequest) Reset() {
	*x = ListReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReportRequest) ProtoMessage() {}

func (x *ListReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReportRequest.ProtoReflect.Descriptor instead.
func (*ListReportRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{15}
}

func (x *ListReportRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListReportRequest) GetSelector() map[string]string {
	if x != nil {
		return x.Selector
	}
	return nil
}

type ListReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*v1alpha11.Report `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListReportResponse) Reset() {
	*x = ListReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReportResponse) ProtoMessage() {}

func (x *ListReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReportResponse.ProtoReflect.Descriptor instead.
func (*ListReportResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{16}
}

func (x *ListReportResponse) GetItems() []*v1alpha11.Report {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Selector  map[string]string `protobuf:"bytes,2,rep,name=selector,proto3" json:"selector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListModelRequest) Reset() {
	*x = ListModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModelRequest) ProtoMessage() {}

func (x *ListModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModelRequest.ProtoReflect.Descriptor instead.
func (*ListModelRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{17}
}

func (x *ListModelRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListModelRequest) GetSelector() map[string]string {
	if x != nil {
		return x.Selector
	}
	return nil
}

type ListModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*v1alpha11.Model `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListModelResponse) Reset() {
	*x = ListModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModelResponse) ProtoMessage() {}

func (x *ListModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModelResponse.ProtoReflect.Descriptor instead.
func (*ListModelResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{18}
}

func (x *ListModelResponse) GetItems() []*v1alpha11.Model {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListStudyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Selector  map[string]string `protobuf:"bytes,2,rep,name=selector,proto3" json:"selector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListStudyRequest) Reset() {
	*x = ListStudyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStudyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStudyRequest) ProtoMessage() {}

func (x *ListStudyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStudyRequest.ProtoReflect.Descriptor instead.
func (*ListStudyRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{19}
}

func (x *ListStudyRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListStudyRequest) GetSelector() map[string]string {
	if x != nil {
		return x.Selector
	}
	return nil
}

type ListStudyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*v1alpha11.Study `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListStudyResponse) Reset() {
	*x = ListStudyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStudyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStudyResponse) ProtoMessage() {}

func (x *ListStudyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStudyResponse.ProtoReflect.Descriptor instead.
func (*ListStudyResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{20}
}

func (x *ListStudyResponse) GetItems() []*v1alpha11.Study {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListPredictionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Selector  map[string]string `protobuf:"bytes,2,rep,name=selector,proto3" json:"selector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListPredictionRequest) Reset() {
	*x = ListPredictionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPredictionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPredictionRequest) ProtoMessage() {}

func (x *ListPredictionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPredictionRequest.ProtoReflect.Descriptor instead.
func (*ListPredictionRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{21}
}

func (x *ListPredictionRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListPredictionRequest) GetSelector() map[string]string {
	if x != nil {
		return x.Selector
	}
	return nil
}

type ListPredictionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*v1alpha12.Prediction `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListPredictionResponse) Reset() {
	*x = ListPredictionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPredictionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPredictionResponse) ProtoMessage() {}

func (x *ListPredictionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPredictionResponse.ProtoReflect.Descriptor instead.
func (*ListPredictionResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{22}
}

func (x *ListPredictionResponse) GetItems() []*v1alpha12.Prediction {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListModelAutoBuilderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Selector  map[string]string `protobuf:"bytes,2,rep,name=selector,proto3" json:"selector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListModelAutoBuilderRequest) Reset() {
	*x = ListModelAutoBuilderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListModelAutoBuilderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModelAutoBuilderRequest) ProtoMessage() {}

func (x *ListModelAutoBuilderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModelAutoBuilderRequest.ProtoReflect.Descriptor instead.
func (*ListModelAutoBuilderRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{23}
}

func (x *ListModelAutoBuilderRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListModelAutoBuilderRequest) GetSelector() map[string]string {
	if x != nil {
		return x.Selector
	}
	return nil
}

type ListModelAutoBuilderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*v1alpha11.ModelAutobuilder `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListModelAutoBuilderResponse) Reset() {
	*x = ListModelAutoBuilderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListModelAutoBuilderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModelAutoBuilderResponse) ProtoMessage() {}

func (x *ListModelAutoBuilderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModelAutoBuilderResponse.ProtoReflect.Descriptor instead.
func (*ListModelAutoBuilderResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{24}
}

func (x *ListModelAutoBuilderResponse) GetItems() []*v1alpha11.ModelAutobuilder {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListModelPipelineRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Selector  map[string]string `protobuf:"bytes,2,rep,name=selector,proto3" json:"selector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListModelPipelineRunRequest) Reset() {
	*x = ListModelPipelineRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListModelPipelineRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModelPipelineRunRequest) ProtoMessage() {}

func (x *ListModelPipelineRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModelPipelineRunRequest.ProtoReflect.Descriptor instead.
func (*ListModelPipelineRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{25}
}

func (x *ListModelPipelineRunRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListModelPipelineRunRequest) GetSelector() map[string]string {
	if x != nil {
		return x.Selector
	}
	return nil
}

type ListModelPipelineRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*v1alpha11.ModelPipelineRun `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListModelPipelineRunResponse) Reset() {
	*x = ListModelPipelineRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListModelPipelineRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModelPipelineRunResponse) ProtoMessage() {}

func (x *ListModelPipelineRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModelPipelineRunResponse.ProtoReflect.Descriptor instead.
func (*ListModelPipelineRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{26}
}

func (x *ListModelPipelineRunResponse) GetItems() []*v1alpha11.ModelPipelineRun {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListNotebookRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Selector  map[string]string `protobuf:"bytes,2,rep,name=selector,proto3" json:"selector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListNotebookRunRequest) Reset() {
	*x = ListNotebookRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNotebookRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotebookRunRequest) ProtoMessage() {}

func (x *ListNotebookRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotebookRunRequest.ProtoReflect.Descriptor instead.
func (*ListNotebookRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{27}
}

func (x *ListNotebookRunRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListNotebookRunRequest) GetSelector() map[string]string {
	if x != nil {
		return x.Selector
	}
	return nil
}

type ListNotebookRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*v1alpha11.NotebookRun `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListNotebookRunResponse) Reset() {
	*x = ListNotebookRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNotebookRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotebookRunResponse) ProtoMessage() {}

func (x *ListNotebookRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotebookRunResponse.ProtoReflect.Descriptor instead.
func (*ListNotebookRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{28}
}

func (x *ListNotebookRunResponse) GetItems() []*v1alpha11.NotebookRun {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListCronPredictionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Selector  map[string]string `protobuf:"bytes,2,rep,name=selector,proto3" json:"selector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListCronPredictionsRequest) Reset() {
	*x = ListCronPredictionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCronPredictionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCronPredictionsRequest) ProtoMessage() {}

func (x *ListCronPredictionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCronPredictionsRequest.ProtoReflect.Descriptor instead.
func (*ListCronPredictionsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{29}
}

func (x *ListCronPredictionsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListCronPredictionsRequest) GetSelector() map[string]string {
	if x != nil {
		return x.Selector
	}
	return nil
}

type ListCronPredictionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*v1alpha12.CronPrediction `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListCronPredictionsResponse) Reset() {
	*x = ListCronPredictionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCronPredictionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCronPredictionsResponse) ProtoMessage() {}

func (x *ListCronPredictionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCronPredictionsResponse.ProtoReflect.Descriptor instead.
func (*ListCronPredictionsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP(), []int{30}
}

func (x *ListCronPredictionsResponse) GetItems() []*v1alpha12.CronPrediction {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_github_com_metaprov_modeldapi_services_archived_v1_archived_proto protoreflect.FileDescriptor

var file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDesc = []byte{
	0x0a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x64, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x44,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70,
	0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64,
	0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x69, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69,
	0x73, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x66, 0x0a, 0x0a,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x62, 0x6c, 0x6f, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x62, 0x6c, 0x6f, 0x62, 0x22, 0x69, 0x0a, 0x13, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x42, 0x6c, 0x6f, 0x62, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22,
	0x44, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x67, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x64, 0x42, 0x6c, 0x6f, 0x62, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0xdf,
	0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x6f, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x1a, 0x3b, 0x0a, 0x0d, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x6a, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x64, 0x42, 0x6c, 0x6f, 0x62, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x47, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xe1, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x70, 0x0a, 0x08, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x1a, 0x3b, 0x0a, 0x0d,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6a, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x53, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x1f, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x75, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xf9, 0x01, 0x0a, 0x1e, 0x4c, 0x69,
	0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x7c, 0x0a, 0x08, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x60, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x1a, 0x3b, 0x0a, 0x0d, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x82, 0x01, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x75, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xe5, 0x01, 0x0a, 0x14, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x72, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x56, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x1a, 0x3b, 0x0a, 0x0d, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x6e, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65,
	0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0xdf, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x6f, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x1a, 0x3b, 0x0a, 0x0d, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x6c, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0xdd, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x6e, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x52, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x1a, 0x3b, 0x0a, 0x0d, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x6a, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xdd,
	0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x6e, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x52, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x1a, 0x3b, 0x0a, 0x0d, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6a,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74,
	0x75, 0x64, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xe7, 0x01, 0x0a, 0x15, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x73, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x57, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x1a, 0x3b, 0x0a, 0x0d, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x75, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65, 0x64,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70,
	0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xf3, 0x01, 0x0a, 0x1b,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x79, 0x0a, 0x08, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5d, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x1a, 0x3b, 0x0a, 0x0d, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x80, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41,
	0x75, 0x74, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x60, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x4a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0xf3, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x79, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x5d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x1a, 0x3b, 0x0a,
	0x0d, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x80, 0x01, 0x0a, 0x1c, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xe9, 0x01,
	0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x75,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x74, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x58, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x1a, 0x3b, 0x0a, 0x0d,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x76, 0x0a, 0x17, 0x4c, 0x69, 0x73,
	0x74, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e,
	0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x75, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0xf1, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x6f, 0x6e, 0x50, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x78,
	0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x5c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x6f, 0x6e, 0x50, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x1a, 0x3b, 0x0a, 0x0d, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7e, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x6f,
	0x6e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x43, 0x72, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x32, 0xff, 0x14, 0x0a, 0x0f, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x71, 0x0a, 0x0c, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x9a, 0x01, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x44, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9e, 0x01, 0x0a, 0x0b, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x46, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x0c, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x47, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0xa1, 0x01,
	0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x12, 0x46,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0xc1, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x12, 0x51, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x52, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xc4, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75,
	0x6e, 0x12, 0x52, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x69, 0x6e, 0x67, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa6, 0x01, 0x0a,
	0x0d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x75, 0x6e, 0x12, 0x48,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x75,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x49, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xbc, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x4f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x75,
	0x74, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x50, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41,
	0x75, 0x74, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x9b, 0x01, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x12, 0x44, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0xbc, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x73, 0x12, 0x4f, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x50, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70,
	0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0xad, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x52, 0x75, 0x6e, 0x73, 0x12, 0x4a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x4b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x9e, 0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x12, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x46, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x9c, 0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x69,
	0x65, 0x73, 0x12, 0x44, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0xa9, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x4a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xb7, 0x01,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72,
	0x6f, 0x6e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x4f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x64, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72,
	0x6f, 0x6e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x76, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescOnce sync.Once
	file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescData = file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDesc
)

func file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescGZIP() []byte {
	file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescOnce.Do(func() {
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescData)
	})
	return file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDescData
}

var file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_goTypes = []interface{}{
	(*ModeldBlob)(nil),                      // 0: github.com.metaprov.modeldapi.services.archived.v1.ModeldBlob
	(*RecordObjectRequest)(nil),             // 1: github.com.metaprov.modeldapi.services.archived.v1.RecordObjectRequest
	(*GetObjectRequest)(nil),                // 2: github.com.metaprov.modeldapi.services.archived.v1.GetObjectRequest
	(*GetObjectResponse)(nil),               // 3: github.com.metaprov.modeldapi.services.archived.v1.GetObjectResponse
	(*ListObjectRequest)(nil),               // 4: github.com.metaprov.modeldapi.services.archived.v1.ListObjectRequest
	(*ListObjectResponse)(nil),              // 5: github.com.metaprov.modeldapi.services.archived.v1.ListObjectResponse
	(*DeleteObjectRequest)(nil),             // 6: github.com.metaprov.modeldapi.services.archived.v1.DeleteObjectRequest
	(*ListDatasetRequest)(nil),              // 7: github.com.metaprov.modeldapi.services.archived.v1.ListDatasetRequest
	(*ListDatasetResponse)(nil),             // 8: github.com.metaprov.modeldapi.services.archived.v1.ListDatasetResponse
	(*ListFeaturePipelineRunRequest)(nil),   // 9: github.com.metaprov.modeldapi.services.archived.v1.ListFeaturePipelineRunRequest
	(*ListFeaturePipelineRunResponse)(nil),  // 10: github.com.metaprov.modeldapi.services.archived.v1.ListFeaturePipelineRunResponse
	(*ListLabelingPipelineRunRequest)(nil),  // 11: github.com.metaprov.modeldapi.services.archived.v1.ListLabelingPipelineRunRequest
	(*ListLabelingPipelineRunResponse)(nil), // 12: github.com.metaprov.modeldapi.services.archived.v1.ListLabelingPipelineRunResponse
	(*ListRecipeRunRequest)(nil),            // 13: github.com.metaprov.modeldapi.services.archived.v1.ListRecipeRunRequest
	(*ListRecipeRunResponse)(nil),           // 14: github.com.metaprov.modeldapi.services.archived.v1.ListRecipeRunResponse
	(*ListReportRequest)(nil),               // 15: github.com.metaprov.modeldapi.services.archived.v1.ListReportRequest
	(*ListReportResponse)(nil),              // 16: github.com.metaprov.modeldapi.services.archived.v1.ListReportResponse
	(*ListModelRequest)(nil),                // 17: github.com.metaprov.modeldapi.services.archived.v1.ListModelRequest
	(*ListModelResponse)(nil),               // 18: github.com.metaprov.modeldapi.services.archived.v1.ListModelResponse
	(*ListStudyRequest)(nil),                // 19: github.com.metaprov.modeldapi.services.archived.v1.ListStudyRequest
	(*ListStudyResponse)(nil),               // 20: github.com.metaprov.modeldapi.services.archived.v1.ListStudyResponse
	(*ListPredictionRequest)(nil),           // 21: github.com.metaprov.modeldapi.services.archived.v1.ListPredictionRequest
	(*ListPredictionResponse)(nil),          // 22: github.com.metaprov.modeldapi.services.archived.v1.ListPredictionResponse
	(*ListModelAutoBuilderRequest)(nil),     // 23: github.com.metaprov.modeldapi.services.archived.v1.ListModelAutoBuilderRequest
	(*ListModelAutoBuilderResponse)(nil),    // 24: github.com.metaprov.modeldapi.services.archived.v1.ListModelAutoBuilderResponse
	(*ListModelPipelineRunRequest)(nil),     // 25: github.com.metaprov.modeldapi.services.archived.v1.ListModelPipelineRunRequest
	(*ListModelPipelineRunResponse)(nil),    // 26: github.com.metaprov.modeldapi.services.archived.v1.ListModelPipelineRunResponse
	(*ListNotebookRunRequest)(nil),          // 27: github.com.metaprov.modeldapi.services.archived.v1.ListNotebookRunRequest
	(*ListNotebookRunResponse)(nil),         // 28: github.com.metaprov.modeldapi.services.archived.v1.ListNotebookRunResponse
	(*ListCronPredictionsRequest)(nil),      // 29: github.com.metaprov.modeldapi.services.archived.v1.ListCronPredictionsRequest
	(*ListCronPredictionsResponse)(nil),     // 30: github.com.metaprov.modeldapi.services.archived.v1.ListCronPredictionsResponse
	nil,                                     // 31: github.com.metaprov.modeldapi.services.archived.v1.ListObjectRequest.SelectorEntry
	nil,                                     // 32: github.com.metaprov.modeldapi.services.archived.v1.ListDatasetRequest.SelectorEntry
	nil,                                     // 33: github.com.metaprov.modeldapi.services.archived.v1.ListLabelingPipelineRunRequest.SelectorEntry
	nil,                                     // 34: github.com.metaprov.modeldapi.services.archived.v1.ListRecipeRunRequest.SelectorEntry
	nil,                                     // 35: github.com.metaprov.modeldapi.services.archived.v1.ListReportRequest.SelectorEntry
	nil,                                     // 36: github.com.metaprov.modeldapi.services.archived.v1.ListModelRequest.SelectorEntry
	nil,                                     // 37: github.com.metaprov.modeldapi.services.archived.v1.ListStudyRequest.SelectorEntry
	nil,                                     // 38: github.com.metaprov.modeldapi.services.archived.v1.ListPredictionRequest.SelectorEntry
	nil,                                     // 39: github.com.metaprov.modeldapi.services.archived.v1.ListModelAutoBuilderRequest.SelectorEntry
	nil,                                     // 40: github.com.metaprov.modeldapi.services.archived.v1.ListModelPipelineRunRequest.SelectorEntry
	nil,                                     // 41: github.com.metaprov.modeldapi.services.archived.v1.ListNotebookRunRequest.SelectorEntry
	nil,                                     // 42: github.com.metaprov.modeldapi.services.archived.v1.ListCronPredictionsRequest.SelectorEntry
	(*v1alpha1.Dataset)(nil),                // 43: github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.Dataset
	(*v1alpha1.FeaturePipelineRun)(nil),     // 44: github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.FeaturePipelineRun
	(*v1alpha1.LabelingPipelineRun)(nil),    // 45: github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.LabelingPipelineRun
	(*v1alpha1.RecipeRun)(nil),              // 46: github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.RecipeRun
	(*v1alpha11.Report)(nil),                // 47: github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.Report
	(*v1alpha11.Model)(nil),                 // 48: github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.Model
	(*v1alpha11.Study)(nil),                 // 49: github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.Study
	(*v1alpha12.Prediction)(nil),            // 50: github.com.metaprov.modeldapi.pkg.apis.inference.v1alpha1.Prediction
	(*v1alpha11.ModelAutobuilder)(nil),      // 51: github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.ModelAutobuilder
	(*v1alpha11.ModelPipelineRun)(nil),      // 52: github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.ModelPipelineRun
	(*v1alpha11.NotebookRun)(nil),           // 53: github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.NotebookRun
	(*v1alpha12.CronPrediction)(nil),        // 54: github.com.metaprov.modeldapi.pkg.apis.inference.v1alpha1.CronPrediction
	(*empty.Empty)(nil),                     // 55: google.protobuf.Empty
}
var file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_depIdxs = []int32{
	0,  // 0: github.com.metaprov.modeldapi.services.archived.v1.RecordObjectRequest.item:type_name -> github.com.metaprov.modeldapi.services.archived.v1.ModeldBlob
	0,  // 1: github.com.metaprov.modeldapi.services.archived.v1.GetObjectResponse.item:type_name -> github.com.metaprov.modeldapi.services.archived.v1.ModeldBlob
	31, // 2: github.com.metaprov.modeldapi.services.archived.v1.ListObjectRequest.selector:type_name -> github.com.metaprov.modeldapi.services.archived.v1.ListObjectRequest.SelectorEntry
	0,  // 3: github.com.metaprov.modeldapi.services.archived.v1.ListObjectResponse.items:type_name -> github.com.metaprov.modeldapi.services.archived.v1.ModeldBlob
	32, // 4: github.com.metaprov.modeldapi.services.archived.v1.ListDatasetRequest.selector:type_name -> github.com.metaprov.modeldapi.services.archived.v1.ListDatasetRequest.SelectorEntry
	43, // 5: github.com.metaprov.modeldapi.services.archived.v1.ListDatasetResponse.items:type_name -> github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.Dataset
	44, // 6: github.com.metaprov.modeldapi.services.archived.v1.ListFeaturePipelineRunResponse.items:type_name -> github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.FeaturePipelineRun
	33, // 7: github.com.metaprov.modeldapi.services.archived.v1.ListLabelingPipelineRunRequest.selector:type_name -> github.com.metaprov.modeldapi.services.archived.v1.ListLabelingPipelineRunRequest.SelectorEntry
	45, // 8: github.com.metaprov.modeldapi.services.archived.v1.ListLabelingPipelineRunResponse.items:type_name -> github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.LabelingPipelineRun
	34, // 9: github.com.metaprov.modeldapi.services.archived.v1.ListRecipeRunRequest.selector:type_name -> github.com.metaprov.modeldapi.services.archived.v1.ListRecipeRunRequest.SelectorEntry
	46, // 10: github.com.metaprov.modeldapi.services.archived.v1.ListRecipeRunResponse.items:type_name -> github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.RecipeRun
	35, // 11: github.com.metaprov.modeldapi.services.archived.v1.ListReportRequest.selector:type_name -> github.com.metaprov.modeldapi.services.archived.v1.ListReportRequest.SelectorEntry
	47, // 12: github.com.metaprov.modeldapi.services.archived.v1.ListReportResponse.items:type_name -> github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.Report
	36, // 13: github.com.metaprov.modeldapi.services.archived.v1.ListModelRequest.selector:type_name -> github.com.metaprov.modeldapi.services.archived.v1.ListModelRequest.SelectorEntry
	48, // 14: github.com.metaprov.modeldapi.services.archived.v1.ListModelResponse.items:type_name -> github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.Model
	37, // 15: github.com.metaprov.modeldapi.services.archived.v1.ListStudyRequest.selector:type_name -> github.com.metaprov.modeldapi.services.archived.v1.ListStudyRequest.SelectorEntry
	49, // 16: github.com.metaprov.modeldapi.services.archived.v1.ListStudyResponse.items:type_name -> github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.Study
	38, // 17: github.com.metaprov.modeldapi.services.archived.v1.ListPredictionRequest.selector:type_name -> github.com.metaprov.modeldapi.services.archived.v1.ListPredictionRequest.SelectorEntry
	50, // 18: github.com.metaprov.modeldapi.services.archived.v1.ListPredictionResponse.items:type_name -> github.com.metaprov.modeldapi.pkg.apis.inference.v1alpha1.Prediction
	39, // 19: github.com.metaprov.modeldapi.services.archived.v1.ListModelAutoBuilderRequest.selector:type_name -> github.com.metaprov.modeldapi.services.archived.v1.ListModelAutoBuilderRequest.SelectorEntry
	51, // 20: github.com.metaprov.modeldapi.services.archived.v1.ListModelAutoBuilderResponse.items:type_name -> github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.ModelAutobuilder
	40, // 21: github.com.metaprov.modeldapi.services.archived.v1.ListModelPipelineRunRequest.selector:type_name -> github.com.metaprov.modeldapi.services.archived.v1.ListModelPipelineRunRequest.SelectorEntry
	52, // 22: github.com.metaprov.modeldapi.services.archived.v1.ListModelPipelineRunResponse.items:type_name -> github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.ModelPipelineRun
	41, // 23: github.com.metaprov.modeldapi.services.archived.v1.ListNotebookRunRequest.selector:type_name -> github.com.metaprov.modeldapi.services.archived.v1.ListNotebookRunRequest.SelectorEntry
	53, // 24: github.com.metaprov.modeldapi.services.archived.v1.ListNotebookRunResponse.items:type_name -> github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.NotebookRun
	42, // 25: github.com.metaprov.modeldapi.services.archived.v1.ListCronPredictionsRequest.selector:type_name -> github.com.metaprov.modeldapi.services.archived.v1.ListCronPredictionsRequest.SelectorEntry
	54, // 26: github.com.metaprov.modeldapi.services.archived.v1.ListCronPredictionsResponse.items:type_name -> github.com.metaprov.modeldapi.pkg.apis.inference.v1alpha1.CronPrediction
	1,  // 27: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.RecordObject:input_type -> github.com.metaprov.modeldapi.services.archived.v1.RecordObjectRequest
	2,  // 28: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.GetObject:input_type -> github.com.metaprov.modeldapi.services.archived.v1.GetObjectRequest
	4,  // 29: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.ListObjects:input_type -> github.com.metaprov.modeldapi.services.archived.v1.ListObjectRequest
	6,  // 30: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.DeleteObject:input_type -> github.com.metaprov.modeldapi.services.archived.v1.DeleteObjectRequest
	7,  // 31: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.ListDatasets:input_type -> github.com.metaprov.modeldapi.services.archived.v1.ListDatasetRequest
	9,  // 32: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.ListFeaturePipelineRun:input_type -> github.com.metaprov.modeldapi.services.archived.v1.ListFeaturePipelineRunRequest
	11, // 33: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.ListLabelingPipelineRun:input_type -> github.com.metaprov.modeldapi.services.archived.v1.ListLabelingPipelineRunRequest
	13, // 34: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.ListRecipeRun:input_type -> github.com.metaprov.modeldapi.services.archived.v1.ListRecipeRunRequest
	23, // 35: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.ListModelAutoBuilders:input_type -> github.com.metaprov.modeldapi.services.archived.v1.ListModelAutoBuilderRequest
	17, // 36: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.ListModels:input_type -> github.com.metaprov.modeldapi.services.archived.v1.ListModelRequest
	25, // 37: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.ListModelPipelineRuns:input_type -> github.com.metaprov.modeldapi.services.archived.v1.ListModelPipelineRunRequest
	27, // 38: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.ListNotebookRuns:input_type -> github.com.metaprov.modeldapi.services.archived.v1.ListNotebookRunRequest
	15, // 39: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.ListReports:input_type -> github.com.metaprov.modeldapi.services.archived.v1.ListReportRequest
	19, // 40: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.ListStudies:input_type -> github.com.metaprov.modeldapi.services.archived.v1.ListStudyRequest
	21, // 41: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.ListPrediction:input_type -> github.com.metaprov.modeldapi.services.archived.v1.ListPredictionRequest
	29, // 42: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.ListCronPrediction:input_type -> github.com.metaprov.modeldapi.services.archived.v1.ListCronPredictionsRequest
	55, // 43: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.RecordObject:output_type -> google.protobuf.Empty
	3,  // 44: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.GetObject:output_type -> github.com.metaprov.modeldapi.services.archived.v1.GetObjectResponse
	5,  // 45: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.ListObjects:output_type -> github.com.metaprov.modeldapi.services.archived.v1.ListObjectResponse
	55, // 46: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.DeleteObject:output_type -> google.protobuf.Empty
	8,  // 47: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.ListDatasets:output_type -> github.com.metaprov.modeldapi.services.archived.v1.ListDatasetResponse
	10, // 48: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.ListFeaturePipelineRun:output_type -> github.com.metaprov.modeldapi.services.archived.v1.ListFeaturePipelineRunResponse
	12, // 49: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.ListLabelingPipelineRun:output_type -> github.com.metaprov.modeldapi.services.archived.v1.ListLabelingPipelineRunResponse
	14, // 50: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.ListRecipeRun:output_type -> github.com.metaprov.modeldapi.services.archived.v1.ListRecipeRunResponse
	24, // 51: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.ListModelAutoBuilders:output_type -> github.com.metaprov.modeldapi.services.archived.v1.ListModelAutoBuilderResponse
	18, // 52: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.ListModels:output_type -> github.com.metaprov.modeldapi.services.archived.v1.ListModelResponse
	26, // 53: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.ListModelPipelineRuns:output_type -> github.com.metaprov.modeldapi.services.archived.v1.ListModelPipelineRunResponse
	28, // 54: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.ListNotebookRuns:output_type -> github.com.metaprov.modeldapi.services.archived.v1.ListNotebookRunResponse
	16, // 55: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.ListReports:output_type -> github.com.metaprov.modeldapi.services.archived.v1.ListReportResponse
	20, // 56: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.ListStudies:output_type -> github.com.metaprov.modeldapi.services.archived.v1.ListStudyResponse
	22, // 57: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.ListPrediction:output_type -> github.com.metaprov.modeldapi.services.archived.v1.ListPredictionResponse
	30, // 58: github.com.metaprov.modeldapi.services.archived.v1.ArchivedService.ListCronPrediction:output_type -> github.com.metaprov.modeldapi.services.archived.v1.ListCronPredictionsResponse
	43, // [43:59] is the sub-list for method output_type
	27, // [27:43] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_init() }
func file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_init() {
	if File_github_com_metaprov_modeldapi_services_archived_v1_archived_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModeldBlob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDatasetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDatasetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeaturePipelineRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeaturePipelineRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLabelingPipelineRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLabelingPipelineRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRecipeRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRecipeRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStudyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStudyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPredictionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPredictionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListModelAutoBuilderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListModelAutoBuilderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListModelPipelineRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListModelPipelineRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNotebookRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNotebookRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCronPredictionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCronPredictionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_goTypes,
		DependencyIndexes: file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_depIdxs,
		MessageInfos:      file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_msgTypes,
	}.Build()
	File_github_com_metaprov_modeldapi_services_archived_v1_archived_proto = out.File
	file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_rawDesc = nil
	file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_goTypes = nil
	file_github_com_metaprov_modeldapi_services_archived_v1_archived_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ArchivedServiceClient is the client API for ArchivedService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ArchivedServiceClient interface {
	// Record all objects in a blob
	RecordObject(ctx context.Context, in *RecordObjectRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetObject(ctx context.Context, in *GetObjectRequest, opts ...grpc.CallOption) (*GetObjectResponse, error)
	ListObjects(ctx context.Context, in *ListObjectRequest, opts ...grpc.CallOption) (*ListObjectResponse, error)
	DeleteObject(ctx context.Context, in *DeleteObjectRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// records the operational objects
	ListDatasets(ctx context.Context, in *ListDatasetRequest, opts ...grpc.CallOption) (*ListDatasetResponse, error)
	ListFeaturePipelineRun(ctx context.Context, in *ListFeaturePipelineRunRequest, opts ...grpc.CallOption) (*ListFeaturePipelineRunResponse, error)
	ListLabelingPipelineRun(ctx context.Context, in *ListLabelingPipelineRunRequest, opts ...grpc.CallOption) (*ListLabelingPipelineRunResponse, error)
	ListRecipeRun(ctx context.Context, in *ListRecipeRunRequest, opts ...grpc.CallOption) (*ListRecipeRunResponse, error)
	ListModelAutoBuilders(ctx context.Context, in *ListModelAutoBuilderRequest, opts ...grpc.CallOption) (*ListModelAutoBuilderResponse, error)
	ListModels(ctx context.Context, in *ListModelRequest, opts ...grpc.CallOption) (*ListModelResponse, error)
	ListModelPipelineRuns(ctx context.Context, in *ListModelPipelineRunRequest, opts ...grpc.CallOption) (*ListModelPipelineRunResponse, error)
	ListNotebookRuns(ctx context.Context, in *ListNotebookRunRequest, opts ...grpc.CallOption) (*ListNotebookRunResponse, error)
	ListReports(ctx context.Context, in *ListReportRequest, opts ...grpc.CallOption) (*ListReportResponse, error)
	ListStudies(ctx context.Context, in *ListStudyRequest, opts ...grpc.CallOption) (*ListStudyResponse, error)
	ListPrediction(ctx context.Context, in *ListPredictionRequest, opts ...grpc.CallOption) (*ListPredictionResponse, error)
	ListCronPrediction(ctx context.Context, in *ListCronPredictionsRequest, opts ...grpc.CallOption) (*ListCronPredictionsResponse, error)
}

type archivedServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewArchivedServiceClient(cc grpc.ClientConnInterface) ArchivedServiceClient {
	return &archivedServiceClient{cc}
}

func (c *archivedServiceClient) RecordObject(ctx context.Context, in *RecordObjectRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/RecordObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *archivedServiceClient) GetObject(ctx context.Context, in *GetObjectRequest, opts ...grpc.CallOption) (*GetObjectResponse, error) {
	out := new(GetObjectResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/GetObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *archivedServiceClient) ListObjects(ctx context.Context, in *ListObjectRequest, opts ...grpc.CallOption) (*ListObjectResponse, error) {
	out := new(ListObjectResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/ListObjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *archivedServiceClient) DeleteObject(ctx context.Context, in *DeleteObjectRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/DeleteObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *archivedServiceClient) ListDatasets(ctx context.Context, in *ListDatasetRequest, opts ...grpc.CallOption) (*ListDatasetResponse, error) {
	out := new(ListDatasetResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/ListDatasets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *archivedServiceClient) ListFeaturePipelineRun(ctx context.Context, in *ListFeaturePipelineRunRequest, opts ...grpc.CallOption) (*ListFeaturePipelineRunResponse, error) {
	out := new(ListFeaturePipelineRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/ListFeaturePipelineRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *archivedServiceClient) ListLabelingPipelineRun(ctx context.Context, in *ListLabelingPipelineRunRequest, opts ...grpc.CallOption) (*ListLabelingPipelineRunResponse, error) {
	out := new(ListLabelingPipelineRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/ListLabelingPipelineRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *archivedServiceClient) ListRecipeRun(ctx context.Context, in *ListRecipeRunRequest, opts ...grpc.CallOption) (*ListRecipeRunResponse, error) {
	out := new(ListRecipeRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/ListRecipeRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *archivedServiceClient) ListModelAutoBuilders(ctx context.Context, in *ListModelAutoBuilderRequest, opts ...grpc.CallOption) (*ListModelAutoBuilderResponse, error) {
	out := new(ListModelAutoBuilderResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/ListModelAutoBuilders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *archivedServiceClient) ListModels(ctx context.Context, in *ListModelRequest, opts ...grpc.CallOption) (*ListModelResponse, error) {
	out := new(ListModelResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/ListModels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *archivedServiceClient) ListModelPipelineRuns(ctx context.Context, in *ListModelPipelineRunRequest, opts ...grpc.CallOption) (*ListModelPipelineRunResponse, error) {
	out := new(ListModelPipelineRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/ListModelPipelineRuns", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *archivedServiceClient) ListNotebookRuns(ctx context.Context, in *ListNotebookRunRequest, opts ...grpc.CallOption) (*ListNotebookRunResponse, error) {
	out := new(ListNotebookRunResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/ListNotebookRuns", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *archivedServiceClient) ListReports(ctx context.Context, in *ListReportRequest, opts ...grpc.CallOption) (*ListReportResponse, error) {
	out := new(ListReportResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/ListReports", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *archivedServiceClient) ListStudies(ctx context.Context, in *ListStudyRequest, opts ...grpc.CallOption) (*ListStudyResponse, error) {
	out := new(ListStudyResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/ListStudies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *archivedServiceClient) ListPrediction(ctx context.Context, in *ListPredictionRequest, opts ...grpc.CallOption) (*ListPredictionResponse, error) {
	out := new(ListPredictionResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/ListPrediction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *archivedServiceClient) ListCronPrediction(ctx context.Context, in *ListCronPredictionsRequest, opts ...grpc.CallOption) (*ListCronPredictionsResponse, error) {
	out := new(ListCronPredictionsResponse)
	err := c.cc.Invoke(ctx, "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/ListCronPrediction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ArchivedServiceServer is the server API for ArchivedService service.
type ArchivedServiceServer interface {
	// Record all objects in a blob
	RecordObject(context.Context, *RecordObjectRequest) (*empty.Empty, error)
	GetObject(context.Context, *GetObjectRequest) (*GetObjectResponse, error)
	ListObjects(context.Context, *ListObjectRequest) (*ListObjectResponse, error)
	DeleteObject(context.Context, *DeleteObjectRequest) (*empty.Empty, error)
	// records the operational objects
	ListDatasets(context.Context, *ListDatasetRequest) (*ListDatasetResponse, error)
	ListFeaturePipelineRun(context.Context, *ListFeaturePipelineRunRequest) (*ListFeaturePipelineRunResponse, error)
	ListLabelingPipelineRun(context.Context, *ListLabelingPipelineRunRequest) (*ListLabelingPipelineRunResponse, error)
	ListRecipeRun(context.Context, *ListRecipeRunRequest) (*ListRecipeRunResponse, error)
	ListModelAutoBuilders(context.Context, *ListModelAutoBuilderRequest) (*ListModelAutoBuilderResponse, error)
	ListModels(context.Context, *ListModelRequest) (*ListModelResponse, error)
	ListModelPipelineRuns(context.Context, *ListModelPipelineRunRequest) (*ListModelPipelineRunResponse, error)
	ListNotebookRuns(context.Context, *ListNotebookRunRequest) (*ListNotebookRunResponse, error)
	ListReports(context.Context, *ListReportRequest) (*ListReportResponse, error)
	ListStudies(context.Context, *ListStudyRequest) (*ListStudyResponse, error)
	ListPrediction(context.Context, *ListPredictionRequest) (*ListPredictionResponse, error)
	ListCronPrediction(context.Context, *ListCronPredictionsRequest) (*ListCronPredictionsResponse, error)
}

// UnimplementedArchivedServiceServer can be embedded to have forward compatible implementations.
type UnimplementedArchivedServiceServer struct {
}

func (*UnimplementedArchivedServiceServer) RecordObject(context.Context, *RecordObjectRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RecordObject not implemented")
}
func (*UnimplementedArchivedServiceServer) GetObject(context.Context, *GetObjectRequest) (*GetObjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetObject not implemented")
}
func (*UnimplementedArchivedServiceServer) ListObjects(context.Context, *ListObjectRequest) (*ListObjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListObjects not implemented")
}
func (*UnimplementedArchivedServiceServer) DeleteObject(context.Context, *DeleteObjectRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteObject not implemented")
}
func (*UnimplementedArchivedServiceServer) ListDatasets(context.Context, *ListDatasetRequest) (*ListDatasetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDatasets not implemented")
}
func (*UnimplementedArchivedServiceServer) ListFeaturePipelineRun(context.Context, *ListFeaturePipelineRunRequest) (*ListFeaturePipelineRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListFeaturePipelineRun not implemented")
}
func (*UnimplementedArchivedServiceServer) ListLabelingPipelineRun(context.Context, *ListLabelingPipelineRunRequest) (*ListLabelingPipelineRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListLabelingPipelineRun not implemented")
}
func (*UnimplementedArchivedServiceServer) ListRecipeRun(context.Context, *ListRecipeRunRequest) (*ListRecipeRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRecipeRun not implemented")
}
func (*UnimplementedArchivedServiceServer) ListModelAutoBuilders(context.Context, *ListModelAutoBuilderRequest) (*ListModelAutoBuilderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListModelAutoBuilders not implemented")
}
func (*UnimplementedArchivedServiceServer) ListModels(context.Context, *ListModelRequest) (*ListModelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListModels not implemented")
}
func (*UnimplementedArchivedServiceServer) ListModelPipelineRuns(context.Context, *ListModelPipelineRunRequest) (*ListModelPipelineRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListModelPipelineRuns not implemented")
}
func (*UnimplementedArchivedServiceServer) ListNotebookRuns(context.Context, *ListNotebookRunRequest) (*ListNotebookRunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNotebookRuns not implemented")
}
func (*UnimplementedArchivedServiceServer) ListReports(context.Context, *ListReportRequest) (*ListReportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListReports not implemented")
}
func (*UnimplementedArchivedServiceServer) ListStudies(context.Context, *ListStudyRequest) (*ListStudyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListStudies not implemented")
}
func (*UnimplementedArchivedServiceServer) ListPrediction(context.Context, *ListPredictionRequest) (*ListPredictionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPrediction not implemented")
}
func (*UnimplementedArchivedServiceServer) ListCronPrediction(context.Context, *ListCronPredictionsRequest) (*ListCronPredictionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCronPrediction not implemented")
}

func RegisterArchivedServiceServer(s *grpc.Server, srv ArchivedServiceServer) {
	s.RegisterService(&_ArchivedService_serviceDesc, srv)
}

func _ArchivedService_RecordObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecordObjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArchivedServiceServer).RecordObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/RecordObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArchivedServiceServer).RecordObject(ctx, req.(*RecordObjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArchivedService_GetObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetObjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArchivedServiceServer).GetObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/GetObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArchivedServiceServer).GetObject(ctx, req.(*GetObjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArchivedService_ListObjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListObjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArchivedServiceServer).ListObjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/ListObjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArchivedServiceServer).ListObjects(ctx, req.(*ListObjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArchivedService_DeleteObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteObjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArchivedServiceServer).DeleteObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/DeleteObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArchivedServiceServer).DeleteObject(ctx, req.(*DeleteObjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArchivedService_ListDatasets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDatasetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArchivedServiceServer).ListDatasets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/ListDatasets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArchivedServiceServer).ListDatasets(ctx, req.(*ListDatasetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArchivedService_ListFeaturePipelineRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFeaturePipelineRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArchivedServiceServer).ListFeaturePipelineRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/ListFeaturePipelineRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArchivedServiceServer).ListFeaturePipelineRun(ctx, req.(*ListFeaturePipelineRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArchivedService_ListLabelingPipelineRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListLabelingPipelineRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArchivedServiceServer).ListLabelingPipelineRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/ListLabelingPipelineRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArchivedServiceServer).ListLabelingPipelineRun(ctx, req.(*ListLabelingPipelineRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArchivedService_ListRecipeRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRecipeRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArchivedServiceServer).ListRecipeRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/ListRecipeRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArchivedServiceServer).ListRecipeRun(ctx, req.(*ListRecipeRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArchivedService_ListModelAutoBuilders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListModelAutoBuilderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArchivedServiceServer).ListModelAutoBuilders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/ListModelAutoBuilders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArchivedServiceServer).ListModelAutoBuilders(ctx, req.(*ListModelAutoBuilderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArchivedService_ListModels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListModelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArchivedServiceServer).ListModels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/ListModels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArchivedServiceServer).ListModels(ctx, req.(*ListModelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArchivedService_ListModelPipelineRuns_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListModelPipelineRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArchivedServiceServer).ListModelPipelineRuns(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/ListModelPipelineRuns",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArchivedServiceServer).ListModelPipelineRuns(ctx, req.(*ListModelPipelineRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArchivedService_ListNotebookRuns_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNotebookRunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArchivedServiceServer).ListNotebookRuns(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/ListNotebookRuns",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArchivedServiceServer).ListNotebookRuns(ctx, req.(*ListNotebookRunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArchivedService_ListReports_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArchivedServiceServer).ListReports(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/ListReports",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArchivedServiceServer).ListReports(ctx, req.(*ListReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArchivedService_ListStudies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListStudyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArchivedServiceServer).ListStudies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/ListStudies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArchivedServiceServer).ListStudies(ctx, req.(*ListStudyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArchivedService_ListPrediction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPredictionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArchivedServiceServer).ListPrediction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/ListPrediction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArchivedServiceServer).ListPrediction(ctx, req.(*ListPredictionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArchivedService_ListCronPrediction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCronPredictionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArchivedServiceServer).ListCronPrediction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.metaprov.modeldapi.services.archived.v1.ArchivedService/ListCronPrediction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArchivedServiceServer).ListCronPrediction(ctx, req.(*ListCronPredictionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ArchivedService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.metaprov.modeldapi.services.archived.v1.ArchivedService",
	HandlerType: (*ArchivedServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RecordObject",
			Handler:    _ArchivedService_RecordObject_Handler,
		},
		{
			MethodName: "GetObject",
			Handler:    _ArchivedService_GetObject_Handler,
		},
		{
			MethodName: "ListObjects",
			Handler:    _ArchivedService_ListObjects_Handler,
		},
		{
			MethodName: "DeleteObject",
			Handler:    _ArchivedService_DeleteObject_Handler,
		},
		{
			MethodName: "ListDatasets",
			Handler:    _ArchivedService_ListDatasets_Handler,
		},
		{
			MethodName: "ListFeaturePipelineRun",
			Handler:    _ArchivedService_ListFeaturePipelineRun_Handler,
		},
		{
			MethodName: "ListLabelingPipelineRun",
			Handler:    _ArchivedService_ListLabelingPipelineRun_Handler,
		},
		{
			MethodName: "ListRecipeRun",
			Handler:    _ArchivedService_ListRecipeRun_Handler,
		},
		{
			MethodName: "ListModelAutoBuilders",
			Handler:    _ArchivedService_ListModelAutoBuilders_Handler,
		},
		{
			MethodName: "ListModels",
			Handler:    _ArchivedService_ListModels_Handler,
		},
		{
			MethodName: "ListModelPipelineRuns",
			Handler:    _ArchivedService_ListModelPipelineRuns_Handler,
		},
		{
			MethodName: "ListNotebookRuns",
			Handler:    _ArchivedService_ListNotebookRuns_Handler,
		},
		{
			MethodName: "ListReports",
			Handler:    _ArchivedService_ListReports_Handler,
		},
		{
			MethodName: "ListStudies",
			Handler:    _ArchivedService_ListStudies_Handler,
		},
		{
			MethodName: "ListPrediction",
			Handler:    _ArchivedService_ListPrediction_Handler,
		},
		{
			MethodName: "ListCronPrediction",
			Handler:    _ArchivedService_ListCronPrediction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/metaprov/modeldapi/services/archived/v1/archived.proto",
}
