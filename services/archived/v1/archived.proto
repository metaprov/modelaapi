syntax = "proto3";
option go_package = "github.com/metaprov/modeldapi/services/archived/v1";
import "google/api/annotations.proto";
package github.com.metaprov.modeldapi.services.archived.v1;

import "github.com/metaprov/modeldapi/pkg/apis/infra/v1alpha1/generated.proto";
import "github.com/metaprov/modeldapi/pkg/apis/data/v1alpha1/generated.proto";
import "github.com/metaprov/modeldapi/pkg/apis/inference/v1alpha1/generated.proto";
import "github.com/metaprov/modeldapi/pkg/apis/training/v1alpha1/generated.proto";
import "github.com/metaprov/modeldapi/pkg/apis/team/v1alpha1/generated.proto";
import "google/protobuf/empty.proto";


message ListAccountsRequest {
    // The account namespace
    string namespace = 1;
    // The maximum number of items to return.
    int32 page_size = 2;
    string page_token = 3;
}

message ListAccountsResponse {
    repeated github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Account accounts = 1;
    string next_page_token = 2;
}

message GetAccountRequest {
    // The field will contain name of the resource requested, for example:
    // "shelves/shelf1/books/book2"
    string namespace = 1;
    string name = 2;
}

message CreateAccountRequest {
    string namespace = 1;
    github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Account account = 2;
}


message UpdateAccountRequest {
    github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Account account = 2;
}

message DeleteAccountRequest {
    // The resource name of the book to be deleted, for example:
    // "shelves/shelf1/books/book2"
    string namespace = 1;
    string name = 2;
}


service ArchivedService {
    rpc ListAccounts(ListAccountsRequest) returns (ListAccountsResponse) {
        option (google.api.http) = {
            get: "/v1/{parent=tenants/*}/books"
        };
    }

    rpc GetAccount(GetAccountRequest) returns (github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Account) {
        option (google.api.http) = {
            get: "/v1/{name=tenants/*/accounts/*}"
        };
    }

    rpc CreateAccount(CreateAccountRequest) returns (github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Account) {
        option (google.api.http) = {
            post: "/v1/accounts"
            body: "account"
        };
    }

    // Updates a book.
    rpc UpdateAccount(UpdateAccountRequest) returns (github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Account) {
        option (google.api.http) = {
            patch: "/v1/{book.name=tenants/*/accounts/*}"
            body: "account"
        };
    }

    // Deletes a book.
    rpc DeleteAccount(DeleteAccountRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/{name=tenants/*/accounts/*}"
        };
    }



}



