// source: github.com/metaprov/modeldapi/services/feature/v1/feature.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck
var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();
var google_api_annotations_pb = require('../../../../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb = require('../../../../../../github.com/metaprov/modeldapi/pkg/apis/data/v1alpha1/generated_pb.js');
goog.object.extend(proto, github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureResponse', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureRequest', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureResponse', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureRequest', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureResponse', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesRequest', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesResponse', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesRequest.displayName = 'proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesResponse.displayName = 'proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest.displayName = 'proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureResponse.displayName = 'proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest.displayName = 'proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureResponse.displayName = 'proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureRequest.displayName = 'proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureResponse.displayName = 'proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureRequest.displayName = 'proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureResponse.displayName = 'proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureResponse';
}
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            namespace: jspb.Message.getFieldWithDefault(msg, 1, ""),
            labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : []
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesRequest}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesRequest;
    return proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesRequest}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setNamespace(value);
                break;
            case 2:
                var value = msg.getLabelsMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
                });
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getNamespace();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getLabelsMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
    }
};
/**
 * optional string namespace = 1;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesRequest.prototype.getNamespace = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesRequest.prototype.setNamespace = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * map<string, string> labels = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesRequest.prototype.getLabelsMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,string>} */ (jspb.Message.getMapField(this, 2, opt_noLazyCreate, null));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesRequest.prototype.clearLabelsMap = function () {
    this.getLabelsMap().clear();
    return this;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesResponse.toObject = function (includeInstance, msg) {
        var f, obj = {
            items: (f = msg.getItems()) && github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.FeatureList.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesResponse}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesResponse;
    return proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesResponse}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.FeatureList;
                reader.readMessage(value, github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.FeatureList.deserializeBinaryFromReader);
                msg.setItems(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getItems();
    if (f != null) {
        writer.writeMessage(1, f, github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.FeatureList.serializeBinaryToWriter);
    }
};
/**
 * optional github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.FeatureList items = 1;
 * @return {?proto.github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.FeatureList}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesResponse.prototype.getItems = function () {
    return /** @type{?proto.github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.FeatureList} */ (jspb.Message.getWrapperField(this, github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.FeatureList, 1));
};
/**
 * @param {?proto.github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.FeatureList|undefined} value
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesResponse} returns this
*/
proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesResponse.prototype.setItems = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesResponse} returns this
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesResponse.prototype.clearItems = function () {
    return this.setItems(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.ListFeaturesResponse.prototype.hasItems = function () {
    return jspb.Message.getField(this, 1) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            namespace: jspb.Message.getFieldWithDefault(msg, 1, ""),
            name: jspb.Message.getFieldWithDefault(msg, 2, ""),
            labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
            spec: (f = msg.getSpec()) && github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.FeatureSpec.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest;
    return proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setNamespace(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 3:
                var value = msg.getLabelsMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
                });
                break;
            case 4:
                var value = new github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.FeatureSpec;
                reader.readMessage(value, github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.FeatureSpec.deserializeBinaryFromReader);
                msg.setSpec(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getNamespace();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getName();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getLabelsMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
    }
    f = message.getSpec();
    if (f != null) {
        writer.writeMessage(4, f, github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.FeatureSpec.serializeBinaryToWriter);
    }
};
/**
 * optional string namespace = 1;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest.prototype.getNamespace = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest.prototype.setNamespace = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string name = 2;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest.prototype.setName = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * map<string, string> labels = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest.prototype.getLabelsMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,string>} */ (jspb.Message.getMapField(this, 3, opt_noLazyCreate, null));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest.prototype.clearLabelsMap = function () {
    this.getLabelsMap().clear();
    return this;
};
/**
 * optional github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.FeatureSpec spec = 4;
 * @return {?proto.github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.FeatureSpec}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest.prototype.getSpec = function () {
    return /** @type{?proto.github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.FeatureSpec} */ (jspb.Message.getWrapperField(this, github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.FeatureSpec, 4));
};
/**
 * @param {?proto.github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.FeatureSpec|undefined} value
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest} returns this
*/
proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest.prototype.setSpec = function (value) {
    return jspb.Message.setWrapperField(this, 4, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest.prototype.clearSpec = function () {
    return this.setSpec(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureRequest.prototype.hasSpec = function () {
    return jspb.Message.getField(this, 4) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureResponse.toObject = function (includeInstance, msg) {
        var f, obj = {};
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureResponse}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureResponse;
    return proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureResponse}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.CreateFeatureResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            namespace: jspb.Message.getFieldWithDefault(msg, 1, ""),
            name: jspb.Message.getFieldWithDefault(msg, 2, ""),
            labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
            spec: (f = msg.getSpec()) && github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.FeatureSpec.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest;
    return proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setNamespace(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 3:
                var value = msg.getLabelsMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
                });
                break;
            case 5:
                var value = new github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.FeatureSpec;
                reader.readMessage(value, github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.FeatureSpec.deserializeBinaryFromReader);
                msg.setSpec(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getNamespace();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getName();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getLabelsMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
    }
    f = message.getSpec();
    if (f != null) {
        writer.writeMessage(5, f, github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.FeatureSpec.serializeBinaryToWriter);
    }
};
/**
 * optional string namespace = 1;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest.prototype.getNamespace = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest.prototype.setNamespace = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string name = 2;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest.prototype.setName = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * map<string, string> labels = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest.prototype.getLabelsMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,string>} */ (jspb.Message.getMapField(this, 3, opt_noLazyCreate, null));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest.prototype.clearLabelsMap = function () {
    this.getLabelsMap().clear();
    return this;
};
/**
 * optional github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.FeatureSpec spec = 5;
 * @return {?proto.github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.FeatureSpec}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest.prototype.getSpec = function () {
    return /** @type{?proto.github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.FeatureSpec} */ (jspb.Message.getWrapperField(this, github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.FeatureSpec, 5));
};
/**
 * @param {?proto.github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.FeatureSpec|undefined} value
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest} returns this
*/
proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest.prototype.setSpec = function (value) {
    return jspb.Message.setWrapperField(this, 5, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest.prototype.clearSpec = function () {
    return this.setSpec(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureRequest.prototype.hasSpec = function () {
    return jspb.Message.getField(this, 5) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureResponse.toObject = function (includeInstance, msg) {
        var f, obj = {};
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureResponse}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureResponse;
    return proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureResponse}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.UpdateFeatureResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            namespace: jspb.Message.getFieldWithDefault(msg, 1, ""),
            name: jspb.Message.getFieldWithDefault(msg, 2, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureRequest}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureRequest;
    return proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureRequest}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setNamespace(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getNamespace();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getName();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
};
/**
 * optional string namespace = 1;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureRequest.prototype.getNamespace = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureRequest.prototype.setNamespace = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string name = 2;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureRequest.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureRequest.prototype.setName = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureResponse.toObject = function (includeInstance, msg) {
        var f, obj = {
            item: (f = msg.getItem()) && github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.Feature.toObject(includeInstance, f),
            yaml: jspb.Message.getFieldWithDefault(msg, 2, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureResponse}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureResponse;
    return proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureResponse}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.Feature;
                reader.readMessage(value, github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.Feature.deserializeBinaryFromReader);
                msg.setItem(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setYaml(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getItem();
    if (f != null) {
        writer.writeMessage(1, f, github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.Feature.serializeBinaryToWriter);
    }
    f = message.getYaml();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
};
/**
 * optional github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.Feature item = 1;
 * @return {?proto.github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.Feature}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureResponse.prototype.getItem = function () {
    return /** @type{?proto.github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.Feature} */ (jspb.Message.getWrapperField(this, github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.Feature, 1));
};
/**
 * @param {?proto.github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.Feature|undefined} value
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureResponse} returns this
*/
proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureResponse.prototype.setItem = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureResponse} returns this
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureResponse.prototype.clearItem = function () {
    return this.setItem(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureResponse.prototype.hasItem = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string yaml = 2;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureResponse.prototype.getYaml = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureResponse} returns this
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.GetFeatureResponse.prototype.setYaml = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            namespace: jspb.Message.getFieldWithDefault(msg, 1, ""),
            name: jspb.Message.getFieldWithDefault(msg, 2, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureRequest}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureRequest;
    return proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureRequest}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setNamespace(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getNamespace();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getName();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
};
/**
 * optional string namespace = 1;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureRequest.prototype.getNamespace = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureRequest.prototype.setNamespace = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string name = 2;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureRequest.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureRequest.prototype.setName = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureResponse.toObject = function (includeInstance, msg) {
        var f, obj = {};
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureResponse}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureResponse;
    return proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureResponse}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.feature.v1.DeleteFeatureResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
};
goog.object.extend(exports, proto.github.com.metaprov.modeldapi.services.feature.v1);
//# sourceMappingURL=feature_pb.js.map