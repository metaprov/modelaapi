// source: github.com/metaprov/modeldapi/services/virtualbucket/v1/virtualbucket.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck
var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();
var google_api_annotations_pb = require('../../../../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb = require('../../../../../../github.com/metaprov/modeldapi/pkg/apis/infra/v1alpha1/generated_pb.js');
goog.object.extend(proto, github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketResponse', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketRequest', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketResponse', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketRequest', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketResponse', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsRequest', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsResponse', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsRequest.displayName = 'proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsResponse.displayName = 'proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest.displayName = 'proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketResponse.displayName = 'proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest.displayName = 'proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketResponse.displayName = 'proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketRequest.displayName = 'proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketResponse.displayName = 'proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketRequest.displayName = 'proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketResponse.displayName = 'proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketResponse';
}
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            namespace: jspb.Message.getFieldWithDefault(msg, 1, ""),
            labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : []
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsRequest}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsRequest;
    return proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsRequest}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setNamespace(value);
                break;
            case 2:
                var value = msg.getLabelsMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
                });
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getNamespace();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getLabelsMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
    }
};
/**
 * optional string namespace = 1;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsRequest.prototype.getNamespace = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsRequest.prototype.setNamespace = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * map<string, string> labels = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsRequest.prototype.getLabelsMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,string>} */ (jspb.Message.getMapField(this, 2, opt_noLazyCreate, null));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsRequest.prototype.clearLabelsMap = function () {
    this.getLabelsMap().clear();
    return this;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsResponse.toObject = function (includeInstance, msg) {
        var f, obj = {
            items: (f = msg.getItems()) && github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.VirtualBucketList.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsResponse}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsResponse;
    return proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsResponse}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.VirtualBucketList;
                reader.readMessage(value, github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.VirtualBucketList.deserializeBinaryFromReader);
                msg.setItems(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getItems();
    if (f != null) {
        writer.writeMessage(1, f, github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.VirtualBucketList.serializeBinaryToWriter);
    }
};
/**
 * optional github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.VirtualBucketList items = 1;
 * @return {?proto.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.VirtualBucketList}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsResponse.prototype.getItems = function () {
    return /** @type{?proto.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.VirtualBucketList} */ (jspb.Message.getWrapperField(this, github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.VirtualBucketList, 1));
};
/**
 * @param {?proto.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.VirtualBucketList|undefined} value
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsResponse} returns this
*/
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsResponse.prototype.setItems = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsResponse} returns this
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsResponse.prototype.clearItems = function () {
    return this.setItems(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.ListVirtualBucketsResponse.prototype.hasItems = function () {
    return jspb.Message.getField(this, 1) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            namespace: jspb.Message.getFieldWithDefault(msg, 1, ""),
            name: jspb.Message.getFieldWithDefault(msg, 2, ""),
            labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
            spec: (f = msg.getSpec()) && github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.VirtualBucketSpec.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest;
    return proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setNamespace(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 3:
                var value = msg.getLabelsMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
                });
                break;
            case 4:
                var value = new github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.VirtualBucketSpec;
                reader.readMessage(value, github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.VirtualBucketSpec.deserializeBinaryFromReader);
                msg.setSpec(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getNamespace();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getName();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getLabelsMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
    }
    f = message.getSpec();
    if (f != null) {
        writer.writeMessage(4, f, github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.VirtualBucketSpec.serializeBinaryToWriter);
    }
};
/**
 * optional string namespace = 1;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest.prototype.getNamespace = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest.prototype.setNamespace = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string name = 2;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest.prototype.setName = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * map<string, string> labels = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest.prototype.getLabelsMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,string>} */ (jspb.Message.getMapField(this, 3, opt_noLazyCreate, null));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest.prototype.clearLabelsMap = function () {
    this.getLabelsMap().clear();
    return this;
};
/**
 * optional github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec spec = 4;
 * @return {?proto.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest.prototype.getSpec = function () {
    return /** @type{?proto.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec} */ (jspb.Message.getWrapperField(this, github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.VirtualBucketSpec, 4));
};
/**
 * @param {?proto.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec|undefined} value
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest} returns this
*/
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest.prototype.setSpec = function (value) {
    return jspb.Message.setWrapperField(this, 4, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest.prototype.clearSpec = function () {
    return this.setSpec(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketRequest.prototype.hasSpec = function () {
    return jspb.Message.getField(this, 4) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketResponse.toObject = function (includeInstance, msg) {
        var f, obj = {};
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketResponse}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketResponse;
    return proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketResponse}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.CreateVirtualBucketResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            namespace: jspb.Message.getFieldWithDefault(msg, 1, ""),
            name: jspb.Message.getFieldWithDefault(msg, 2, ""),
            labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
            spec: (f = msg.getSpec()) && github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.VirtualBucketSpec.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest;
    return proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setNamespace(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 3:
                var value = msg.getLabelsMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
                });
                break;
            case 4:
                var value = new github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.VirtualBucketSpec;
                reader.readMessage(value, github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.VirtualBucketSpec.deserializeBinaryFromReader);
                msg.setSpec(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getNamespace();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getName();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getLabelsMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
    }
    f = message.getSpec();
    if (f != null) {
        writer.writeMessage(4, f, github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.VirtualBucketSpec.serializeBinaryToWriter);
    }
};
/**
 * optional string namespace = 1;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest.prototype.getNamespace = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest.prototype.setNamespace = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string name = 2;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest.prototype.setName = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * map<string, string> labels = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest.prototype.getLabelsMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,string>} */ (jspb.Message.getMapField(this, 3, opt_noLazyCreate, null));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest.prototype.clearLabelsMap = function () {
    this.getLabelsMap().clear();
    return this;
};
/**
 * optional github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec spec = 4;
 * @return {?proto.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest.prototype.getSpec = function () {
    return /** @type{?proto.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec} */ (jspb.Message.getWrapperField(this, github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.VirtualBucketSpec, 4));
};
/**
 * @param {?proto.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec|undefined} value
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest} returns this
*/
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest.prototype.setSpec = function (value) {
    return jspb.Message.setWrapperField(this, 4, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest.prototype.clearSpec = function () {
    return this.setSpec(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketRequest.prototype.hasSpec = function () {
    return jspb.Message.getField(this, 4) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketResponse.toObject = function (includeInstance, msg) {
        var f, obj = {};
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketResponse}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketResponse;
    return proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketResponse}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.UpdateVirtualBucketResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            namespace: jspb.Message.getFieldWithDefault(msg, 1, ""),
            name: jspb.Message.getFieldWithDefault(msg, 2, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketRequest}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketRequest;
    return proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketRequest}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setNamespace(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getNamespace();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getName();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
};
/**
 * optional string namespace = 1;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketRequest.prototype.getNamespace = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketRequest.prototype.setNamespace = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string name = 2;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketRequest.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketRequest.prototype.setName = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketResponse.toObject = function (includeInstance, msg) {
        var f, obj = {
            item: (f = msg.getItem()) && github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.VirtualBucket.toObject(includeInstance, f),
            yaml: jspb.Message.getFieldWithDefault(msg, 2, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketResponse}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketResponse;
    return proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketResponse}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.VirtualBucket;
                reader.readMessage(value, github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.VirtualBucket.deserializeBinaryFromReader);
                msg.setItem(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setYaml(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getItem();
    if (f != null) {
        writer.writeMessage(1, f, github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.VirtualBucket.serializeBinaryToWriter);
    }
    f = message.getYaml();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
};
/**
 * optional github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.VirtualBucket item = 1;
 * @return {?proto.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.VirtualBucket}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketResponse.prototype.getItem = function () {
    return /** @type{?proto.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.VirtualBucket} */ (jspb.Message.getWrapperField(this, github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.VirtualBucket, 1));
};
/**
 * @param {?proto.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.VirtualBucket|undefined} value
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketResponse} returns this
*/
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketResponse.prototype.setItem = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketResponse} returns this
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketResponse.prototype.clearItem = function () {
    return this.setItem(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketResponse.prototype.hasItem = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string yaml = 2;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketResponse.prototype.getYaml = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketResponse} returns this
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.GetVirtualBucketResponse.prototype.setYaml = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            namespace: jspb.Message.getFieldWithDefault(msg, 1, ""),
            name: jspb.Message.getFieldWithDefault(msg, 2, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketRequest}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketRequest;
    return proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketRequest}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setNamespace(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getNamespace();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getName();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
};
/**
 * optional string namespace = 1;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketRequest.prototype.getNamespace = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketRequest.prototype.setNamespace = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string name = 2;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketRequest.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketRequest.prototype.setName = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketResponse.toObject = function (includeInstance, msg) {
        var f, obj = {};
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketResponse}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketResponse;
    return proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketResponse}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.virtualbucket.v1.DeleteVirtualBucketResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
};
goog.object.extend(exports, proto.github.com.metaprov.modeldapi.services.virtualbucket.v1);
//# sourceMappingURL=virtualbucket_pb.js.map