// source: k8s.io/api/core/v1/generated.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck
var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();
var k8s_io_apimachinery_pkg_api_resource_generated_pb = require('../../../../k8s.io/apimachinery/pkg/api/resource/generated_pb.js');
goog.object.extend(proto, k8s_io_apimachinery_pkg_api_resource_generated_pb);
var k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb = require('../../../../k8s.io/apimachinery/pkg/apis/meta/v1/generated_pb.js');
goog.object.extend(proto, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb);
var k8s_io_apimachinery_pkg_runtime_generated_pb = require('../../../../k8s.io/apimachinery/pkg/runtime/generated_pb.js');
goog.object.extend(proto, k8s_io_apimachinery_pkg_runtime_generated_pb);
var k8s_io_apimachinery_pkg_runtime_schema_generated_pb = require('../../../../k8s.io/apimachinery/pkg/runtime/schema/generated_pb.js');
goog.object.extend(proto, k8s_io_apimachinery_pkg_runtime_schema_generated_pb);
var k8s_io_apimachinery_pkg_util_intstr_generated_pb = require('../../../../k8s.io/apimachinery/pkg/util/intstr/generated_pb.js');
goog.object.extend(proto, k8s_io_apimachinery_pkg_util_intstr_generated_pb);
goog.exportSymbol('proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.Affinity', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.AttachedVolume', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.AvoidPods', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.AzureDiskVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.AzureFileVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.Binding', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.CSIPersistentVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.CSIVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.Capabilities', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.CephFSVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.CinderPersistentVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.CinderVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ClientIPConfig', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ComponentCondition', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ComponentStatus', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ComponentStatusList', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ConfigMap', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ConfigMapEnvSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ConfigMapKeySelector', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ConfigMapList', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ConfigMapProjection', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ConfigMapVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.Container', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ContainerImage', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ContainerPort', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ContainerState', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ContainerStateRunning', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ContainerStateTerminated', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ContainerStateWaiting', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ContainerStatus', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.DaemonEndpoint', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.DownwardAPIProjection', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.DownwardAPIVolumeFile', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.DownwardAPIVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.EmptyDirVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.EndpointAddress', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.EndpointPort', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.EndpointSubset', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.Endpoints', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.EndpointsList', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.EnvFromSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.EnvVar', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.EnvVarSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.EphemeralContainer', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.EphemeralContainerCommon', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.EphemeralContainers', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.EphemeralVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.Event', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.EventList', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.EventSeries', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.EventSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ExecAction', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.FCVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.FlexPersistentVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.FlexVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.FlockerVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.GitRepoVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.GlusterfsVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.HTTPGetAction', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.HTTPHeader', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.Handler', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.HostAlias', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.HostPathVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ISCSIVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.KeyToPath', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.Lifecycle', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.LimitRange', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.LimitRangeItem', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.LimitRangeList', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.LimitRangeSpec', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.List', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.LoadBalancerIngress', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.LoadBalancerStatus', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.LocalObjectReference', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.LocalVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.NFSVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.Namespace', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.NamespaceCondition', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.NamespaceList', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.NamespaceSpec', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.NamespaceStatus', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.Node', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.NodeAddress', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.NodeAffinity', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.NodeCondition', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.NodeConfigSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.NodeConfigStatus', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.NodeDaemonEndpoints', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.NodeList', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.NodeProxyOptions', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.NodeResources', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.NodeSelector', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.NodeSelectorRequirement', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.NodeSelectorTerm', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.NodeSpec', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.NodeStatus', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.NodeSystemInfo', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ObjectFieldSelector', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ObjectReference', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PersistentVolume', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PersistentVolumeClaim', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PersistentVolumeClaimList', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PersistentVolumeList', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PersistentVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PersistentVolumeSpec', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PersistentVolumeStatus', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.Pod', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PodAffinity', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PodAffinityTerm', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PodAntiAffinity', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PodAttachOptions', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PodCondition', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PodDNSConfig', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PodDNSConfigOption', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PodExecOptions', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PodIP', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PodList', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PodLogOptions', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PodPortForwardOptions', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PodProxyOptions', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PodReadinessGate', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PodSecurityContext', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PodSignature', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PodSpec', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PodStatus', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PodStatusResult', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PodTemplate', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PodTemplateList', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PodTemplateSpec', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PortStatus', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PortworxVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.Preconditions', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PreferAvoidPodsEntry', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.PreferredSchedulingTerm', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.Probe', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ProjectedVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.QuobyteVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.RBDPersistentVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.RBDVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.RangeAllocation', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ReplicationController', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ReplicationControllerCondition', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ReplicationControllerList', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ReplicationControllerSpec', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ReplicationControllerStatus', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ResourceFieldSelector', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ResourceQuota', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ResourceQuotaList', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ResourceQuotaSpec', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ResourceQuotaStatus', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ResourceRequirements', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.SELinuxOptions', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ScaleIOVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ScopeSelector', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.SeccompProfile', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.Secret', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.SecretEnvSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.SecretKeySelector', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.SecretList', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.SecretProjection', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.SecretReference', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.SecretVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.SecurityContext', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.SerializedReference', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.Service', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ServiceAccount', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ServiceAccountList', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ServiceAccountTokenProjection', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ServiceList', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ServicePort', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ServiceProxyOptions', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ServiceSpec', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.ServiceStatus', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.SessionAffinityConfig', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.StorageOSVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.Sysctl', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.TCPSocketAction', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.Taint', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.Toleration', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.TopologySelectorTerm', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.TopologySpreadConstraint', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.TypedLocalObjectReference', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.Volume', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.VolumeDevice', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.VolumeMount', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.VolumeNodeAffinity', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.VolumeProjection', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.VolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.WeightedPodAffinityTerm', null, global);
goog.exportSymbol('proto.k8s.io.api.core.v1.WindowsSecurityContextOptions', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.displayName = 'proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.Affinity = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.Affinity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.Affinity.displayName = 'proto.k8s.io.api.core.v1.Affinity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.AttachedVolume = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.AttachedVolume, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.AttachedVolume.displayName = 'proto.k8s.io.api.core.v1.AttachedVolume';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.AvoidPods = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.AvoidPods.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.AvoidPods, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.AvoidPods.displayName = 'proto.k8s.io.api.core.v1.AvoidPods';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.AzureDiskVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.AzureDiskVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.AzureDiskVolumeSource.displayName = 'proto.k8s.io.api.core.v1.AzureDiskVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.displayName = 'proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.AzureFileVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.AzureFileVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.AzureFileVolumeSource.displayName = 'proto.k8s.io.api.core.v1.AzureFileVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.Binding = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.Binding, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.Binding.displayName = 'proto.k8s.io.api.core.v1.Binding';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.CSIPersistentVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.displayName = 'proto.k8s.io.api.core.v1.CSIPersistentVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.CSIVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.CSIVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.CSIVolumeSource.displayName = 'proto.k8s.io.api.core.v1.CSIVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.Capabilities = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.Capabilities.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.Capabilities, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.Capabilities.displayName = 'proto.k8s.io.api.core.v1.Capabilities';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.displayName = 'proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.CephFSVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.CephFSVolumeSource.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.CephFSVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.CephFSVolumeSource.displayName = 'proto.k8s.io.api.core.v1.CephFSVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.CinderPersistentVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.CinderPersistentVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.displayName = 'proto.k8s.io.api.core.v1.CinderPersistentVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.CinderVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.CinderVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.CinderVolumeSource.displayName = 'proto.k8s.io.api.core.v1.CinderVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ClientIPConfig = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ClientIPConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ClientIPConfig.displayName = 'proto.k8s.io.api.core.v1.ClientIPConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ComponentCondition = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ComponentCondition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ComponentCondition.displayName = 'proto.k8s.io.api.core.v1.ComponentCondition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ComponentStatus = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.ComponentStatus.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ComponentStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ComponentStatus.displayName = 'proto.k8s.io.api.core.v1.ComponentStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ComponentStatusList = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.ComponentStatusList.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ComponentStatusList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ComponentStatusList.displayName = 'proto.k8s.io.api.core.v1.ComponentStatusList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ConfigMap = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ConfigMap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ConfigMap.displayName = 'proto.k8s.io.api.core.v1.ConfigMap';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ConfigMapEnvSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ConfigMapEnvSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ConfigMapEnvSource.displayName = 'proto.k8s.io.api.core.v1.ConfigMapEnvSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ConfigMapKeySelector = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ConfigMapKeySelector, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ConfigMapKeySelector.displayName = 'proto.k8s.io.api.core.v1.ConfigMapKeySelector';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ConfigMapList = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.ConfigMapList.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ConfigMapList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ConfigMapList.displayName = 'proto.k8s.io.api.core.v1.ConfigMapList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.displayName = 'proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ConfigMapProjection = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.ConfigMapProjection.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ConfigMapProjection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ConfigMapProjection.displayName = 'proto.k8s.io.api.core.v1.ConfigMapProjection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ConfigMapVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.ConfigMapVolumeSource.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ConfigMapVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ConfigMapVolumeSource.displayName = 'proto.k8s.io.api.core.v1.ConfigMapVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.Container = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.Container.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.Container, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.Container.displayName = 'proto.k8s.io.api.core.v1.Container';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ContainerImage = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.ContainerImage.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ContainerImage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ContainerImage.displayName = 'proto.k8s.io.api.core.v1.ContainerImage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ContainerPort = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ContainerPort, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ContainerPort.displayName = 'proto.k8s.io.api.core.v1.ContainerPort';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ContainerState = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ContainerState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ContainerState.displayName = 'proto.k8s.io.api.core.v1.ContainerState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ContainerStateRunning = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ContainerStateRunning, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ContainerStateRunning.displayName = 'proto.k8s.io.api.core.v1.ContainerStateRunning';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ContainerStateTerminated, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ContainerStateTerminated.displayName = 'proto.k8s.io.api.core.v1.ContainerStateTerminated';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ContainerStateWaiting = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ContainerStateWaiting, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ContainerStateWaiting.displayName = 'proto.k8s.io.api.core.v1.ContainerStateWaiting';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ContainerStatus = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ContainerStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ContainerStatus.displayName = 'proto.k8s.io.api.core.v1.ContainerStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.DaemonEndpoint = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.DaemonEndpoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.DaemonEndpoint.displayName = 'proto.k8s.io.api.core.v1.DaemonEndpoint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.DownwardAPIProjection = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.DownwardAPIProjection.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.DownwardAPIProjection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.DownwardAPIProjection.displayName = 'proto.k8s.io.api.core.v1.DownwardAPIProjection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeFile = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.DownwardAPIVolumeFile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.displayName = 'proto.k8s.io.api.core.v1.DownwardAPIVolumeFile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.DownwardAPIVolumeSource.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.DownwardAPIVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.DownwardAPIVolumeSource.displayName = 'proto.k8s.io.api.core.v1.DownwardAPIVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.EmptyDirVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.EmptyDirVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.EmptyDirVolumeSource.displayName = 'proto.k8s.io.api.core.v1.EmptyDirVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.EndpointAddress = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.EndpointAddress, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.EndpointAddress.displayName = 'proto.k8s.io.api.core.v1.EndpointAddress';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.EndpointPort = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.EndpointPort, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.EndpointPort.displayName = 'proto.k8s.io.api.core.v1.EndpointPort';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.EndpointSubset = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.EndpointSubset.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.EndpointSubset, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.EndpointSubset.displayName = 'proto.k8s.io.api.core.v1.EndpointSubset';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.Endpoints = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.Endpoints.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.Endpoints, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.Endpoints.displayName = 'proto.k8s.io.api.core.v1.Endpoints';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.EndpointsList = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.EndpointsList.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.EndpointsList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.EndpointsList.displayName = 'proto.k8s.io.api.core.v1.EndpointsList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.EnvFromSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.EnvFromSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.EnvFromSource.displayName = 'proto.k8s.io.api.core.v1.EnvFromSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.EnvVar = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.EnvVar, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.EnvVar.displayName = 'proto.k8s.io.api.core.v1.EnvVar';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.EnvVarSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.EnvVarSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.EnvVarSource.displayName = 'proto.k8s.io.api.core.v1.EnvVarSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.EphemeralContainer = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.EphemeralContainer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.EphemeralContainer.displayName = 'proto.k8s.io.api.core.v1.EphemeralContainer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.EphemeralContainerCommon.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.EphemeralContainerCommon, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.EphemeralContainerCommon.displayName = 'proto.k8s.io.api.core.v1.EphemeralContainerCommon';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.EphemeralContainers = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.EphemeralContainers.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.EphemeralContainers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.EphemeralContainers.displayName = 'proto.k8s.io.api.core.v1.EphemeralContainers';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.EphemeralVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.EphemeralVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.EphemeralVolumeSource.displayName = 'proto.k8s.io.api.core.v1.EphemeralVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.Event = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.Event.displayName = 'proto.k8s.io.api.core.v1.Event';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.EventList = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.EventList.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.EventList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.EventList.displayName = 'proto.k8s.io.api.core.v1.EventList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.EventSeries = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.EventSeries, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.EventSeries.displayName = 'proto.k8s.io.api.core.v1.EventSeries';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.EventSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.EventSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.EventSource.displayName = 'proto.k8s.io.api.core.v1.EventSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ExecAction = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.ExecAction.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ExecAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ExecAction.displayName = 'proto.k8s.io.api.core.v1.ExecAction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.FCVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.FCVolumeSource.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.FCVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.FCVolumeSource.displayName = 'proto.k8s.io.api.core.v1.FCVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.FlexPersistentVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.FlexPersistentVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.displayName = 'proto.k8s.io.api.core.v1.FlexPersistentVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.FlexVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.FlexVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.FlexVolumeSource.displayName = 'proto.k8s.io.api.core.v1.FlexVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.FlockerVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.FlockerVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.FlockerVolumeSource.displayName = 'proto.k8s.io.api.core.v1.FlockerVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.displayName = 'proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.GitRepoVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.GitRepoVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.GitRepoVolumeSource.displayName = 'proto.k8s.io.api.core.v1.GitRepoVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.displayName = 'proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.GlusterfsVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.GlusterfsVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.GlusterfsVolumeSource.displayName = 'proto.k8s.io.api.core.v1.GlusterfsVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.HTTPGetAction = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.HTTPGetAction.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.HTTPGetAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.HTTPGetAction.displayName = 'proto.k8s.io.api.core.v1.HTTPGetAction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.HTTPHeader = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.HTTPHeader, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.HTTPHeader.displayName = 'proto.k8s.io.api.core.v1.HTTPHeader';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.Handler = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.Handler, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.Handler.displayName = 'proto.k8s.io.api.core.v1.Handler';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.HostAlias = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.HostAlias.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.HostAlias, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.HostAlias.displayName = 'proto.k8s.io.api.core.v1.HostAlias';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.HostPathVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.HostPathVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.HostPathVolumeSource.displayName = 'proto.k8s.io.api.core.v1.HostPathVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.displayName = 'proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.ISCSIVolumeSource.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ISCSIVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ISCSIVolumeSource.displayName = 'proto.k8s.io.api.core.v1.ISCSIVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.KeyToPath = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.KeyToPath, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.KeyToPath.displayName = 'proto.k8s.io.api.core.v1.KeyToPath';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.Lifecycle = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.Lifecycle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.Lifecycle.displayName = 'proto.k8s.io.api.core.v1.Lifecycle';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.LimitRange = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.LimitRange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.LimitRange.displayName = 'proto.k8s.io.api.core.v1.LimitRange';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.LimitRangeItem = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.LimitRangeItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.LimitRangeItem.displayName = 'proto.k8s.io.api.core.v1.LimitRangeItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.LimitRangeList = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.LimitRangeList.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.LimitRangeList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.LimitRangeList.displayName = 'proto.k8s.io.api.core.v1.LimitRangeList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.LimitRangeSpec = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.LimitRangeSpec.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.LimitRangeSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.LimitRangeSpec.displayName = 'proto.k8s.io.api.core.v1.LimitRangeSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.List = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.List.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.List, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.List.displayName = 'proto.k8s.io.api.core.v1.List';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.LoadBalancerIngress = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.LoadBalancerIngress.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.LoadBalancerIngress, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.LoadBalancerIngress.displayName = 'proto.k8s.io.api.core.v1.LoadBalancerIngress';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.LoadBalancerStatus = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.LoadBalancerStatus.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.LoadBalancerStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.LoadBalancerStatus.displayName = 'proto.k8s.io.api.core.v1.LoadBalancerStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.LocalObjectReference = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.LocalObjectReference, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.LocalObjectReference.displayName = 'proto.k8s.io.api.core.v1.LocalObjectReference';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.LocalVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.LocalVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.LocalVolumeSource.displayName = 'proto.k8s.io.api.core.v1.LocalVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.NFSVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.NFSVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.NFSVolumeSource.displayName = 'proto.k8s.io.api.core.v1.NFSVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.Namespace = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.Namespace, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.Namespace.displayName = 'proto.k8s.io.api.core.v1.Namespace';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.NamespaceCondition = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.NamespaceCondition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.NamespaceCondition.displayName = 'proto.k8s.io.api.core.v1.NamespaceCondition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.NamespaceList = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.NamespaceList.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.NamespaceList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.NamespaceList.displayName = 'proto.k8s.io.api.core.v1.NamespaceList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.NamespaceSpec = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.NamespaceSpec.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.NamespaceSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.NamespaceSpec.displayName = 'proto.k8s.io.api.core.v1.NamespaceSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.NamespaceStatus = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.NamespaceStatus.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.NamespaceStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.NamespaceStatus.displayName = 'proto.k8s.io.api.core.v1.NamespaceStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.Node = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.Node, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.Node.displayName = 'proto.k8s.io.api.core.v1.Node';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.NodeAddress = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.NodeAddress, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.NodeAddress.displayName = 'proto.k8s.io.api.core.v1.NodeAddress';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.NodeAffinity = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.NodeAffinity.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.NodeAffinity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.NodeAffinity.displayName = 'proto.k8s.io.api.core.v1.NodeAffinity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.NodeCondition = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.NodeCondition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.NodeCondition.displayName = 'proto.k8s.io.api.core.v1.NodeCondition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.NodeConfigSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.NodeConfigSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.NodeConfigSource.displayName = 'proto.k8s.io.api.core.v1.NodeConfigSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.NodeConfigStatus = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.NodeConfigStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.NodeConfigStatus.displayName = 'proto.k8s.io.api.core.v1.NodeConfigStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.NodeDaemonEndpoints = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.NodeDaemonEndpoints, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.NodeDaemonEndpoints.displayName = 'proto.k8s.io.api.core.v1.NodeDaemonEndpoints';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.NodeList = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.NodeList.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.NodeList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.NodeList.displayName = 'proto.k8s.io.api.core.v1.NodeList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.NodeProxyOptions = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.NodeProxyOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.NodeProxyOptions.displayName = 'proto.k8s.io.api.core.v1.NodeProxyOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.NodeResources = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.NodeResources, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.NodeResources.displayName = 'proto.k8s.io.api.core.v1.NodeResources';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.NodeSelector = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.NodeSelector.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.NodeSelector, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.NodeSelector.displayName = 'proto.k8s.io.api.core.v1.NodeSelector';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.NodeSelectorRequirement = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.NodeSelectorRequirement.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.NodeSelectorRequirement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.NodeSelectorRequirement.displayName = 'proto.k8s.io.api.core.v1.NodeSelectorRequirement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.NodeSelectorTerm = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.NodeSelectorTerm.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.NodeSelectorTerm, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.NodeSelectorTerm.displayName = 'proto.k8s.io.api.core.v1.NodeSelectorTerm';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.NodeSpec = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.NodeSpec.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.NodeSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.NodeSpec.displayName = 'proto.k8s.io.api.core.v1.NodeSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.NodeStatus = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.NodeStatus.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.NodeStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.NodeStatus.displayName = 'proto.k8s.io.api.core.v1.NodeStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.NodeSystemInfo = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.NodeSystemInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.NodeSystemInfo.displayName = 'proto.k8s.io.api.core.v1.NodeSystemInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ObjectFieldSelector = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ObjectFieldSelector, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ObjectFieldSelector.displayName = 'proto.k8s.io.api.core.v1.ObjectFieldSelector';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ObjectReference = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ObjectReference, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ObjectReference.displayName = 'proto.k8s.io.api.core.v1.ObjectReference';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PersistentVolume = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PersistentVolume, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PersistentVolume.displayName = 'proto.k8s.io.api.core.v1.PersistentVolume';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaim = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PersistentVolumeClaim, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PersistentVolumeClaim.displayName = 'proto.k8s.io.api.core.v1.PersistentVolumeClaim';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.displayName = 'proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimList = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.PersistentVolumeClaimList.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PersistentVolumeClaimList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PersistentVolumeClaimList.displayName = 'proto.k8s.io.api.core.v1.PersistentVolumeClaimList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.displayName = 'proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus.displayName = 'proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate.displayName = 'proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource.displayName = 'proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PersistentVolumeList = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.PersistentVolumeList.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PersistentVolumeList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PersistentVolumeList.displayName = 'proto.k8s.io.api.core.v1.PersistentVolumeList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PersistentVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PersistentVolumeSource.displayName = 'proto.k8s.io.api.core.v1.PersistentVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.PersistentVolumeSpec.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PersistentVolumeSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PersistentVolumeSpec.displayName = 'proto.k8s.io.api.core.v1.PersistentVolumeSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PersistentVolumeStatus = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PersistentVolumeStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PersistentVolumeStatus.displayName = 'proto.k8s.io.api.core.v1.PersistentVolumeStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource.displayName = 'proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.Pod = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.Pod, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.Pod.displayName = 'proto.k8s.io.api.core.v1.Pod';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PodAffinity = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.PodAffinity.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PodAffinity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PodAffinity.displayName = 'proto.k8s.io.api.core.v1.PodAffinity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PodAffinityTerm = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.PodAffinityTerm.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PodAffinityTerm, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PodAffinityTerm.displayName = 'proto.k8s.io.api.core.v1.PodAffinityTerm';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PodAntiAffinity = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.PodAntiAffinity.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PodAntiAffinity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PodAntiAffinity.displayName = 'proto.k8s.io.api.core.v1.PodAntiAffinity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PodAttachOptions = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PodAttachOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PodAttachOptions.displayName = 'proto.k8s.io.api.core.v1.PodAttachOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PodCondition = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PodCondition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PodCondition.displayName = 'proto.k8s.io.api.core.v1.PodCondition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PodDNSConfig = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.PodDNSConfig.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PodDNSConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PodDNSConfig.displayName = 'proto.k8s.io.api.core.v1.PodDNSConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PodDNSConfigOption = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PodDNSConfigOption, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PodDNSConfigOption.displayName = 'proto.k8s.io.api.core.v1.PodDNSConfigOption';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PodExecOptions = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.PodExecOptions.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PodExecOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PodExecOptions.displayName = 'proto.k8s.io.api.core.v1.PodExecOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PodIP = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PodIP, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PodIP.displayName = 'proto.k8s.io.api.core.v1.PodIP';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PodList = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.PodList.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PodList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PodList.displayName = 'proto.k8s.io.api.core.v1.PodList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PodLogOptions = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PodLogOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PodLogOptions.displayName = 'proto.k8s.io.api.core.v1.PodLogOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PodPortForwardOptions = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.PodPortForwardOptions.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PodPortForwardOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PodPortForwardOptions.displayName = 'proto.k8s.io.api.core.v1.PodPortForwardOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PodProxyOptions = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PodProxyOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PodProxyOptions.displayName = 'proto.k8s.io.api.core.v1.PodProxyOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PodReadinessGate = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PodReadinessGate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PodReadinessGate.displayName = 'proto.k8s.io.api.core.v1.PodReadinessGate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PodSecurityContext = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.PodSecurityContext.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PodSecurityContext, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PodSecurityContext.displayName = 'proto.k8s.io.api.core.v1.PodSecurityContext';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PodSignature = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PodSignature, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PodSignature.displayName = 'proto.k8s.io.api.core.v1.PodSignature';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PodSpec = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.PodSpec.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PodSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PodSpec.displayName = 'proto.k8s.io.api.core.v1.PodSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PodStatus = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.PodStatus.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PodStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PodStatus.displayName = 'proto.k8s.io.api.core.v1.PodStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PodStatusResult = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PodStatusResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PodStatusResult.displayName = 'proto.k8s.io.api.core.v1.PodStatusResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PodTemplate = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PodTemplate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PodTemplate.displayName = 'proto.k8s.io.api.core.v1.PodTemplate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PodTemplateList = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.PodTemplateList.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PodTemplateList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PodTemplateList.displayName = 'proto.k8s.io.api.core.v1.PodTemplateList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PodTemplateSpec = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PodTemplateSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PodTemplateSpec.displayName = 'proto.k8s.io.api.core.v1.PodTemplateSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PortStatus = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PortStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PortStatus.displayName = 'proto.k8s.io.api.core.v1.PortStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PortworxVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PortworxVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PortworxVolumeSource.displayName = 'proto.k8s.io.api.core.v1.PortworxVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.Preconditions = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.Preconditions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.Preconditions.displayName = 'proto.k8s.io.api.core.v1.Preconditions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PreferAvoidPodsEntry = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PreferAvoidPodsEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PreferAvoidPodsEntry.displayName = 'proto.k8s.io.api.core.v1.PreferAvoidPodsEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.PreferredSchedulingTerm = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.PreferredSchedulingTerm, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.PreferredSchedulingTerm.displayName = 'proto.k8s.io.api.core.v1.PreferredSchedulingTerm';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.Probe = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.Probe, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.Probe.displayName = 'proto.k8s.io.api.core.v1.Probe';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ProjectedVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.ProjectedVolumeSource.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ProjectedVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ProjectedVolumeSource.displayName = 'proto.k8s.io.api.core.v1.ProjectedVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.QuobyteVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.QuobyteVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.QuobyteVolumeSource.displayName = 'proto.k8s.io.api.core.v1.QuobyteVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.RBDPersistentVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.displayName = 'proto.k8s.io.api.core.v1.RBDPersistentVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.RBDVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.RBDVolumeSource.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.RBDVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.RBDVolumeSource.displayName = 'proto.k8s.io.api.core.v1.RBDVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.RangeAllocation = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.RangeAllocation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.RangeAllocation.displayName = 'proto.k8s.io.api.core.v1.RangeAllocation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ReplicationController = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ReplicationController, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ReplicationController.displayName = 'proto.k8s.io.api.core.v1.ReplicationController';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ReplicationControllerCondition = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ReplicationControllerCondition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ReplicationControllerCondition.displayName = 'proto.k8s.io.api.core.v1.ReplicationControllerCondition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ReplicationControllerList = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.ReplicationControllerList.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ReplicationControllerList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ReplicationControllerList.displayName = 'proto.k8s.io.api.core.v1.ReplicationControllerList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ReplicationControllerSpec = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ReplicationControllerSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ReplicationControllerSpec.displayName = 'proto.k8s.io.api.core.v1.ReplicationControllerSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ReplicationControllerStatus = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.ReplicationControllerStatus.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ReplicationControllerStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ReplicationControllerStatus.displayName = 'proto.k8s.io.api.core.v1.ReplicationControllerStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ResourceFieldSelector = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ResourceFieldSelector, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ResourceFieldSelector.displayName = 'proto.k8s.io.api.core.v1.ResourceFieldSelector';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ResourceQuota = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ResourceQuota, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ResourceQuota.displayName = 'proto.k8s.io.api.core.v1.ResourceQuota';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ResourceQuotaList = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.ResourceQuotaList.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ResourceQuotaList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ResourceQuotaList.displayName = 'proto.k8s.io.api.core.v1.ResourceQuotaList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ResourceQuotaSpec = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.ResourceQuotaSpec.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ResourceQuotaSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ResourceQuotaSpec.displayName = 'proto.k8s.io.api.core.v1.ResourceQuotaSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ResourceQuotaStatus = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ResourceQuotaStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ResourceQuotaStatus.displayName = 'proto.k8s.io.api.core.v1.ResourceQuotaStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ResourceRequirements = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ResourceRequirements, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ResourceRequirements.displayName = 'proto.k8s.io.api.core.v1.ResourceRequirements';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.SELinuxOptions = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.SELinuxOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.SELinuxOptions.displayName = 'proto.k8s.io.api.core.v1.SELinuxOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.displayName = 'proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ScaleIOVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ScaleIOVolumeSource.displayName = 'proto.k8s.io.api.core.v1.ScaleIOVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ScopeSelector = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.ScopeSelector.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ScopeSelector, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ScopeSelector.displayName = 'proto.k8s.io.api.core.v1.ScopeSelector';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement.displayName = 'proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.SeccompProfile = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.SeccompProfile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.SeccompProfile.displayName = 'proto.k8s.io.api.core.v1.SeccompProfile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.Secret = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.Secret, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.Secret.displayName = 'proto.k8s.io.api.core.v1.Secret';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.SecretEnvSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.SecretEnvSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.SecretEnvSource.displayName = 'proto.k8s.io.api.core.v1.SecretEnvSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.SecretKeySelector = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.SecretKeySelector, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.SecretKeySelector.displayName = 'proto.k8s.io.api.core.v1.SecretKeySelector';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.SecretList = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.SecretList.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.SecretList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.SecretList.displayName = 'proto.k8s.io.api.core.v1.SecretList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.SecretProjection = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.SecretProjection.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.SecretProjection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.SecretProjection.displayName = 'proto.k8s.io.api.core.v1.SecretProjection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.SecretReference = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.SecretReference, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.SecretReference.displayName = 'proto.k8s.io.api.core.v1.SecretReference';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.SecretVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.SecretVolumeSource.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.SecretVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.SecretVolumeSource.displayName = 'proto.k8s.io.api.core.v1.SecretVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.SecurityContext = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.SecurityContext, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.SecurityContext.displayName = 'proto.k8s.io.api.core.v1.SecurityContext';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.SerializedReference = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.SerializedReference, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.SerializedReference.displayName = 'proto.k8s.io.api.core.v1.SerializedReference';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.Service = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.Service, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.Service.displayName = 'proto.k8s.io.api.core.v1.Service';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ServiceAccount = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.ServiceAccount.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ServiceAccount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ServiceAccount.displayName = 'proto.k8s.io.api.core.v1.ServiceAccount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ServiceAccountList = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.ServiceAccountList.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ServiceAccountList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ServiceAccountList.displayName = 'proto.k8s.io.api.core.v1.ServiceAccountList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ServiceAccountTokenProjection = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ServiceAccountTokenProjection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ServiceAccountTokenProjection.displayName = 'proto.k8s.io.api.core.v1.ServiceAccountTokenProjection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ServiceList = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.ServiceList.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ServiceList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ServiceList.displayName = 'proto.k8s.io.api.core.v1.ServiceList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ServicePort = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ServicePort, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ServicePort.displayName = 'proto.k8s.io.api.core.v1.ServicePort';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ServiceProxyOptions = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ServiceProxyOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ServiceProxyOptions.displayName = 'proto.k8s.io.api.core.v1.ServiceProxyOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ServiceSpec = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.ServiceSpec.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ServiceSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ServiceSpec.displayName = 'proto.k8s.io.api.core.v1.ServiceSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.ServiceStatus = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.ServiceStatus.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.ServiceStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.ServiceStatus.displayName = 'proto.k8s.io.api.core.v1.ServiceStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.SessionAffinityConfig = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.SessionAffinityConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.SessionAffinityConfig.displayName = 'proto.k8s.io.api.core.v1.SessionAffinityConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.displayName = 'proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.StorageOSVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.StorageOSVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.StorageOSVolumeSource.displayName = 'proto.k8s.io.api.core.v1.StorageOSVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.Sysctl = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.Sysctl, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.Sysctl.displayName = 'proto.k8s.io.api.core.v1.Sysctl';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.TCPSocketAction = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.TCPSocketAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.TCPSocketAction.displayName = 'proto.k8s.io.api.core.v1.TCPSocketAction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.Taint = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.Taint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.Taint.displayName = 'proto.k8s.io.api.core.v1.Taint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.Toleration = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.Toleration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.Toleration.displayName = 'proto.k8s.io.api.core.v1.Toleration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement.displayName = 'proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.TopologySelectorTerm = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.api.core.v1.TopologySelectorTerm.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.api.core.v1.TopologySelectorTerm, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.TopologySelectorTerm.displayName = 'proto.k8s.io.api.core.v1.TopologySelectorTerm';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.TopologySpreadConstraint = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.TopologySpreadConstraint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.TopologySpreadConstraint.displayName = 'proto.k8s.io.api.core.v1.TopologySpreadConstraint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.TypedLocalObjectReference = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.TypedLocalObjectReference, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.TypedLocalObjectReference.displayName = 'proto.k8s.io.api.core.v1.TypedLocalObjectReference';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.Volume = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.Volume, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.Volume.displayName = 'proto.k8s.io.api.core.v1.Volume';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.VolumeDevice = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.VolumeDevice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.VolumeDevice.displayName = 'proto.k8s.io.api.core.v1.VolumeDevice';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.VolumeMount = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.VolumeMount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.VolumeMount.displayName = 'proto.k8s.io.api.core.v1.VolumeMount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.VolumeNodeAffinity = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.VolumeNodeAffinity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.VolumeNodeAffinity.displayName = 'proto.k8s.io.api.core.v1.VolumeNodeAffinity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.VolumeProjection = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.VolumeProjection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.VolumeProjection.displayName = 'proto.k8s.io.api.core.v1.VolumeProjection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.VolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.VolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.VolumeSource.displayName = 'proto.k8s.io.api.core.v1.VolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.displayName = 'proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.WeightedPodAffinityTerm = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.WeightedPodAffinityTerm, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.WeightedPodAffinityTerm.displayName = 'proto.k8s.io.api.core.v1.WeightedPodAffinityTerm';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.api.core.v1.WindowsSecurityContextOptions = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.api.core.v1.WindowsSecurityContextOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.k8s.io.api.core.v1.WindowsSecurityContextOptions.displayName = 'proto.k8s.io.api.core.v1.WindowsSecurityContextOptions';
}
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            volumeid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            fstype: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            partition: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            readonly: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource}
 */
proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource;
    return proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource}
 */
proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setVolumeid(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setFstype(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setPartition(value);
                break;
            case 4:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeInt32(3, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeBool(4, f);
    }
};
/**
 * optional string volumeID = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.prototype.getVolumeid = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.prototype.setVolumeid = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.prototype.clearVolumeid = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.prototype.hasVolumeid = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string fsType = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.prototype.getFstype = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.prototype.setFstype = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.prototype.clearFstype = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.prototype.hasFstype = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional int32 partition = 3;
 * @return {number}
 */
proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.prototype.getPartition = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.prototype.setPartition = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.prototype.clearPartition = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.prototype.hasPartition = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional bool readOnly = 4;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 4) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.Affinity.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.Affinity.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.Affinity} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.Affinity.toObject = function (includeInstance, msg) {
        var f, obj = {
            nodeaffinity: (f = msg.getNodeaffinity()) && proto.k8s.io.api.core.v1.NodeAffinity.toObject(includeInstance, f),
            podaffinity: (f = msg.getPodaffinity()) && proto.k8s.io.api.core.v1.PodAffinity.toObject(includeInstance, f),
            podantiaffinity: (f = msg.getPodantiaffinity()) && proto.k8s.io.api.core.v1.PodAntiAffinity.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.Affinity}
 */
proto.k8s.io.api.core.v1.Affinity.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.Affinity;
    return proto.k8s.io.api.core.v1.Affinity.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.Affinity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.Affinity}
 */
proto.k8s.io.api.core.v1.Affinity.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.NodeAffinity;
                reader.readMessage(value, proto.k8s.io.api.core.v1.NodeAffinity.deserializeBinaryFromReader);
                msg.setNodeaffinity(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.PodAffinity;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PodAffinity.deserializeBinaryFromReader);
                msg.setPodaffinity(value);
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.PodAntiAffinity;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PodAntiAffinity.deserializeBinaryFromReader);
                msg.setPodantiaffinity(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.Affinity.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.Affinity.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.Affinity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.Affinity.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getNodeaffinity();
    if (f != null) {
        writer.writeMessage(1, f, proto.k8s.io.api.core.v1.NodeAffinity.serializeBinaryToWriter);
    }
    f = message.getPodaffinity();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.PodAffinity.serializeBinaryToWriter);
    }
    f = message.getPodantiaffinity();
    if (f != null) {
        writer.writeMessage(3, f, proto.k8s.io.api.core.v1.PodAntiAffinity.serializeBinaryToWriter);
    }
};
/**
 * optional NodeAffinity nodeAffinity = 1;
 * @return {?proto.k8s.io.api.core.v1.NodeAffinity}
 */
proto.k8s.io.api.core.v1.Affinity.prototype.getNodeaffinity = function () {
    return /** @type{?proto.k8s.io.api.core.v1.NodeAffinity} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.NodeAffinity, 1));
};
/**
 * @param {?proto.k8s.io.api.core.v1.NodeAffinity|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Affinity} returns this
*/
proto.k8s.io.api.core.v1.Affinity.prototype.setNodeaffinity = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Affinity} returns this
 */
proto.k8s.io.api.core.v1.Affinity.prototype.clearNodeaffinity = function () {
    return this.setNodeaffinity(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Affinity.prototype.hasNodeaffinity = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional PodAffinity podAffinity = 2;
 * @return {?proto.k8s.io.api.core.v1.PodAffinity}
 */
proto.k8s.io.api.core.v1.Affinity.prototype.getPodaffinity = function () {
    return /** @type{?proto.k8s.io.api.core.v1.PodAffinity} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.PodAffinity, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.PodAffinity|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Affinity} returns this
*/
proto.k8s.io.api.core.v1.Affinity.prototype.setPodaffinity = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Affinity} returns this
 */
proto.k8s.io.api.core.v1.Affinity.prototype.clearPodaffinity = function () {
    return this.setPodaffinity(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Affinity.prototype.hasPodaffinity = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional PodAntiAffinity podAntiAffinity = 3;
 * @return {?proto.k8s.io.api.core.v1.PodAntiAffinity}
 */
proto.k8s.io.api.core.v1.Affinity.prototype.getPodantiaffinity = function () {
    return /** @type{?proto.k8s.io.api.core.v1.PodAntiAffinity} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.PodAntiAffinity, 3));
};
/**
 * @param {?proto.k8s.io.api.core.v1.PodAntiAffinity|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Affinity} returns this
*/
proto.k8s.io.api.core.v1.Affinity.prototype.setPodantiaffinity = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Affinity} returns this
 */
proto.k8s.io.api.core.v1.Affinity.prototype.clearPodantiaffinity = function () {
    return this.setPodantiaffinity(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Affinity.prototype.hasPodantiaffinity = function () {
    return jspb.Message.getField(this, 3) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.AttachedVolume.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.AttachedVolume.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.AttachedVolume} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.AttachedVolume.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            devicepath: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.AttachedVolume}
 */
proto.k8s.io.api.core.v1.AttachedVolume.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.AttachedVolume;
    return proto.k8s.io.api.core.v1.AttachedVolume.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.AttachedVolume} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.AttachedVolume}
 */
proto.k8s.io.api.core.v1.AttachedVolume.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setDevicepath(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.AttachedVolume.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.AttachedVolume.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.AttachedVolume} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.AttachedVolume.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
};
/**
 * optional string name = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.AttachedVolume.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.AttachedVolume} returns this
 */
proto.k8s.io.api.core.v1.AttachedVolume.prototype.setName = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.AttachedVolume} returns this
 */
proto.k8s.io.api.core.v1.AttachedVolume.prototype.clearName = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.AttachedVolume.prototype.hasName = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string devicePath = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.AttachedVolume.prototype.getDevicepath = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.AttachedVolume} returns this
 */
proto.k8s.io.api.core.v1.AttachedVolume.prototype.setDevicepath = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.AttachedVolume} returns this
 */
proto.k8s.io.api.core.v1.AttachedVolume.prototype.clearDevicepath = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.AttachedVolume.prototype.hasDevicepath = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.AvoidPods.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.AvoidPods.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.AvoidPods.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.AvoidPods} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.AvoidPods.toObject = function (includeInstance, msg) {
        var f, obj = {
            preferavoidpodsList: jspb.Message.toObjectList(msg.getPreferavoidpodsList(), proto.k8s.io.api.core.v1.PreferAvoidPodsEntry.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.AvoidPods}
 */
proto.k8s.io.api.core.v1.AvoidPods.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.AvoidPods;
    return proto.k8s.io.api.core.v1.AvoidPods.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.AvoidPods} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.AvoidPods}
 */
proto.k8s.io.api.core.v1.AvoidPods.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.PreferAvoidPodsEntry;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PreferAvoidPodsEntry.deserializeBinaryFromReader);
                msg.addPreferavoidpods(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.AvoidPods.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.AvoidPods.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.AvoidPods} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.AvoidPods.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getPreferavoidpodsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, proto.k8s.io.api.core.v1.PreferAvoidPodsEntry.serializeBinaryToWriter);
    }
};
/**
 * repeated PreferAvoidPodsEntry preferAvoidPods = 1;
 * @return {!Array<!proto.k8s.io.api.core.v1.PreferAvoidPodsEntry>}
 */
proto.k8s.io.api.core.v1.AvoidPods.prototype.getPreferavoidpodsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.PreferAvoidPodsEntry>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.PreferAvoidPodsEntry, 1));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.PreferAvoidPodsEntry>} value
 * @return {!proto.k8s.io.api.core.v1.AvoidPods} returns this
*/
proto.k8s.io.api.core.v1.AvoidPods.prototype.setPreferavoidpodsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.PreferAvoidPodsEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.PreferAvoidPodsEntry}
 */
proto.k8s.io.api.core.v1.AvoidPods.prototype.addPreferavoidpods = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.k8s.io.api.core.v1.PreferAvoidPodsEntry, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.AvoidPods} returns this
 */
proto.k8s.io.api.core.v1.AvoidPods.prototype.clearPreferavoidpodsList = function () {
    return this.setPreferavoidpodsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.AzureDiskVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.AzureDiskVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.AzureDiskVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.AzureDiskVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            diskname: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            diskuri: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            cachingmode: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            fstype: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
            readonly: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
            kind: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.AzureDiskVolumeSource}
 */
proto.k8s.io.api.core.v1.AzureDiskVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.AzureDiskVolumeSource;
    return proto.k8s.io.api.core.v1.AzureDiskVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.AzureDiskVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.AzureDiskVolumeSource}
 */
proto.k8s.io.api.core.v1.AzureDiskVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setDiskname(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setDiskuri(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setCachingmode(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setFstype(value);
                break;
            case 5:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.setKind(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.AzureDiskVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.AzureDiskVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.AzureDiskVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.AzureDiskVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeBool(5, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 6));
    if (f != null) {
        writer.writeString(6, f);
    }
};
/**
 * optional string diskName = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.AzureDiskVolumeSource.prototype.getDiskname = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.AzureDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AzureDiskVolumeSource.prototype.setDiskname = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.AzureDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AzureDiskVolumeSource.prototype.clearDiskname = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.AzureDiskVolumeSource.prototype.hasDiskname = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string diskURI = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.AzureDiskVolumeSource.prototype.getDiskuri = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.AzureDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AzureDiskVolumeSource.prototype.setDiskuri = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.AzureDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AzureDiskVolumeSource.prototype.clearDiskuri = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.AzureDiskVolumeSource.prototype.hasDiskuri = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string cachingMode = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.AzureDiskVolumeSource.prototype.getCachingmode = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.AzureDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AzureDiskVolumeSource.prototype.setCachingmode = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.AzureDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AzureDiskVolumeSource.prototype.clearCachingmode = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.AzureDiskVolumeSource.prototype.hasCachingmode = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string fsType = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.AzureDiskVolumeSource.prototype.getFstype = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.AzureDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AzureDiskVolumeSource.prototype.setFstype = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.AzureDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AzureDiskVolumeSource.prototype.clearFstype = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.AzureDiskVolumeSource.prototype.hasFstype = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional bool readOnly = 5;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.AzureDiskVolumeSource.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.AzureDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AzureDiskVolumeSource.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.AzureDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AzureDiskVolumeSource.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.AzureDiskVolumeSource.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional string kind = 6;
 * @return {string}
 */
proto.k8s.io.api.core.v1.AzureDiskVolumeSource.prototype.getKind = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.AzureDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AzureDiskVolumeSource.prototype.setKind = function (value) {
    return jspb.Message.setField(this, 6, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.AzureDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AzureDiskVolumeSource.prototype.clearKind = function () {
    return jspb.Message.setField(this, 6, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.AzureDiskVolumeSource.prototype.hasKind = function () {
    return jspb.Message.getField(this, 6) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            secretname: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            sharename: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            readonly: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
            secretnamespace: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource;
    return proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setSecretname(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setSharename(value);
                break;
            case 3:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setSecretnamespace(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeBool(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
};
/**
 * optional string secretName = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.prototype.getSecretname = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.prototype.setSecretname = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.prototype.clearSecretname = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.prototype.hasSecretname = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string shareName = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.prototype.getSharename = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.prototype.setSharename = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.prototype.clearSharename = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.prototype.hasSharename = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional bool readOnly = 3;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string secretNamespace = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.prototype.getSecretnamespace = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.prototype.setSecretnamespace = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.prototype.clearSecretnamespace = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.prototype.hasSecretnamespace = function () {
    return jspb.Message.getField(this, 4) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.AzureFileVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.AzureFileVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.AzureFileVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.AzureFileVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            secretname: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            sharename: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            readonly: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.AzureFileVolumeSource}
 */
proto.k8s.io.api.core.v1.AzureFileVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.AzureFileVolumeSource;
    return proto.k8s.io.api.core.v1.AzureFileVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.AzureFileVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.AzureFileVolumeSource}
 */
proto.k8s.io.api.core.v1.AzureFileVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setSecretname(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setSharename(value);
                break;
            case 3:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.AzureFileVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.AzureFileVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.AzureFileVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.AzureFileVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeBool(3, f);
    }
};
/**
 * optional string secretName = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.AzureFileVolumeSource.prototype.getSecretname = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.AzureFileVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AzureFileVolumeSource.prototype.setSecretname = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.AzureFileVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AzureFileVolumeSource.prototype.clearSecretname = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.AzureFileVolumeSource.prototype.hasSecretname = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string shareName = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.AzureFileVolumeSource.prototype.getSharename = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.AzureFileVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AzureFileVolumeSource.prototype.setSharename = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.AzureFileVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AzureFileVolumeSource.prototype.clearSharename = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.AzureFileVolumeSource.prototype.hasSharename = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional bool readOnly = 3;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.AzureFileVolumeSource.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.AzureFileVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AzureFileVolumeSource.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.AzureFileVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.AzureFileVolumeSource.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.AzureFileVolumeSource.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 3) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.Binding.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.Binding.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.Binding} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.Binding.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
            target: (f = msg.getTarget()) && proto.k8s.io.api.core.v1.ObjectReference.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.Binding}
 */
proto.k8s.io.api.core.v1.Binding.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.Binding;
    return proto.k8s.io.api.core.v1.Binding.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.Binding} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.Binding}
 */
proto.k8s.io.api.core.v1.Binding.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.ObjectReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ObjectReference.deserializeBinaryFromReader);
                msg.setTarget(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.Binding.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.Binding.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.Binding} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.Binding.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter);
    }
    f = message.getTarget();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.ObjectReference.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.k8s.io.api.core.v1.Binding.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Binding} returns this
*/
proto.k8s.io.api.core.v1.Binding.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Binding} returns this
 */
proto.k8s.io.api.core.v1.Binding.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Binding.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional ObjectReference target = 2;
 * @return {?proto.k8s.io.api.core.v1.ObjectReference}
 */
proto.k8s.io.api.core.v1.Binding.prototype.getTarget = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ObjectReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ObjectReference, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ObjectReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Binding} returns this
*/
proto.k8s.io.api.core.v1.Binding.prototype.setTarget = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Binding} returns this
 */
proto.k8s.io.api.core.v1.Binding.prototype.clearTarget = function () {
    return this.setTarget(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Binding.prototype.hasTarget = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.CSIPersistentVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            driver: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            volumehandle: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            readonly: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
            fstype: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
            volumeattributesMap: (f = msg.getVolumeattributesMap()) ? f.toObject(includeInstance, undefined) : [],
            controllerpublishsecretref: (f = msg.getControllerpublishsecretref()) && proto.k8s.io.api.core.v1.SecretReference.toObject(includeInstance, f),
            nodestagesecretref: (f = msg.getNodestagesecretref()) && proto.k8s.io.api.core.v1.SecretReference.toObject(includeInstance, f),
            nodepublishsecretref: (f = msg.getNodepublishsecretref()) && proto.k8s.io.api.core.v1.SecretReference.toObject(includeInstance, f),
            controllerexpandsecretref: (f = msg.getControllerexpandsecretref()) && proto.k8s.io.api.core.v1.SecretReference.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.CSIPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.CSIPersistentVolumeSource;
    return proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.CSIPersistentVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.CSIPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setDriver(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setVolumehandle(value);
                break;
            case 3:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setFstype(value);
                break;
            case 5:
                var value = msg.getVolumeattributesMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
                });
                break;
            case 6:
                var value = new proto.k8s.io.api.core.v1.SecretReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.SecretReference.deserializeBinaryFromReader);
                msg.setControllerpublishsecretref(value);
                break;
            case 7:
                var value = new proto.k8s.io.api.core.v1.SecretReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.SecretReference.deserializeBinaryFromReader);
                msg.setNodestagesecretref(value);
                break;
            case 8:
                var value = new proto.k8s.io.api.core.v1.SecretReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.SecretReference.deserializeBinaryFromReader);
                msg.setNodepublishsecretref(value);
                break;
            case 9:
                var value = new proto.k8s.io.api.core.v1.SecretReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.SecretReference.deserializeBinaryFromReader);
                msg.setControllerexpandsecretref(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.CSIPersistentVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeBool(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
    f = message.getVolumeattributesMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
    }
    f = message.getControllerpublishsecretref();
    if (f != null) {
        writer.writeMessage(6, f, proto.k8s.io.api.core.v1.SecretReference.serializeBinaryToWriter);
    }
    f = message.getNodestagesecretref();
    if (f != null) {
        writer.writeMessage(7, f, proto.k8s.io.api.core.v1.SecretReference.serializeBinaryToWriter);
    }
    f = message.getNodepublishsecretref();
    if (f != null) {
        writer.writeMessage(8, f, proto.k8s.io.api.core.v1.SecretReference.serializeBinaryToWriter);
    }
    f = message.getControllerexpandsecretref();
    if (f != null) {
        writer.writeMessage(9, f, proto.k8s.io.api.core.v1.SecretReference.serializeBinaryToWriter);
    }
};
/**
 * optional string driver = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.getDriver = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.CSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.setDriver = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.clearDriver = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.hasDriver = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string volumeHandle = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.getVolumehandle = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.CSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.setVolumehandle = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.clearVolumehandle = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.hasVolumehandle = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional bool readOnly = 3;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.CSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string fsType = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.getFstype = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.CSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.setFstype = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.clearFstype = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.hasFstype = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * map<string, string> volumeAttributes = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.getVolumeattributesMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,string>} */ (jspb.Message.getMapField(this, 5, opt_noLazyCreate, null));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.k8s.io.api.core.v1.CSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.clearVolumeattributesMap = function () {
    this.getVolumeattributesMap().clear();
    return this;
};
/**
 * optional SecretReference controllerPublishSecretRef = 6;
 * @return {?proto.k8s.io.api.core.v1.SecretReference}
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.getControllerpublishsecretref = function () {
    return /** @type{?proto.k8s.io.api.core.v1.SecretReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.SecretReference, 6));
};
/**
 * @param {?proto.k8s.io.api.core.v1.SecretReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.CSIPersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.setControllerpublishsecretref = function (value) {
    return jspb.Message.setWrapperField(this, 6, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.clearControllerpublishsecretref = function () {
    return this.setControllerpublishsecretref(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.hasControllerpublishsecretref = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * optional SecretReference nodeStageSecretRef = 7;
 * @return {?proto.k8s.io.api.core.v1.SecretReference}
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.getNodestagesecretref = function () {
    return /** @type{?proto.k8s.io.api.core.v1.SecretReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.SecretReference, 7));
};
/**
 * @param {?proto.k8s.io.api.core.v1.SecretReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.CSIPersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.setNodestagesecretref = function (value) {
    return jspb.Message.setWrapperField(this, 7, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.clearNodestagesecretref = function () {
    return this.setNodestagesecretref(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.hasNodestagesecretref = function () {
    return jspb.Message.getField(this, 7) != null;
};
/**
 * optional SecretReference nodePublishSecretRef = 8;
 * @return {?proto.k8s.io.api.core.v1.SecretReference}
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.getNodepublishsecretref = function () {
    return /** @type{?proto.k8s.io.api.core.v1.SecretReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.SecretReference, 8));
};
/**
 * @param {?proto.k8s.io.api.core.v1.SecretReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.CSIPersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.setNodepublishsecretref = function (value) {
    return jspb.Message.setWrapperField(this, 8, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.clearNodepublishsecretref = function () {
    return this.setNodepublishsecretref(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.hasNodepublishsecretref = function () {
    return jspb.Message.getField(this, 8) != null;
};
/**
 * optional SecretReference controllerExpandSecretRef = 9;
 * @return {?proto.k8s.io.api.core.v1.SecretReference}
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.getControllerexpandsecretref = function () {
    return /** @type{?proto.k8s.io.api.core.v1.SecretReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.SecretReference, 9));
};
/**
 * @param {?proto.k8s.io.api.core.v1.SecretReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.CSIPersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.setControllerexpandsecretref = function (value) {
    return jspb.Message.setWrapperField(this, 9, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.clearControllerexpandsecretref = function () {
    return this.setControllerexpandsecretref(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.prototype.hasControllerexpandsecretref = function () {
    return jspb.Message.getField(this, 9) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.CSIVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.CSIVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.CSIVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.CSIVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            driver: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            readonly: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
            fstype: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            volumeattributesMap: (f = msg.getVolumeattributesMap()) ? f.toObject(includeInstance, undefined) : [],
            nodepublishsecretref: (f = msg.getNodepublishsecretref()) && proto.k8s.io.api.core.v1.LocalObjectReference.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.CSIVolumeSource}
 */
proto.k8s.io.api.core.v1.CSIVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.CSIVolumeSource;
    return proto.k8s.io.api.core.v1.CSIVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.CSIVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.CSIVolumeSource}
 */
proto.k8s.io.api.core.v1.CSIVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setDriver(value);
                break;
            case 2:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setFstype(value);
                break;
            case 4:
                var value = msg.getVolumeattributesMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
                });
                break;
            case 5:
                var value = new proto.k8s.io.api.core.v1.LocalObjectReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.LocalObjectReference.deserializeBinaryFromReader);
                msg.setNodepublishsecretref(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.CSIVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.CSIVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.CSIVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.CSIVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeBool(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = message.getVolumeattributesMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
    }
    f = message.getNodepublishsecretref();
    if (f != null) {
        writer.writeMessage(5, f, proto.k8s.io.api.core.v1.LocalObjectReference.serializeBinaryToWriter);
    }
};
/**
 * optional string driver = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.CSIVolumeSource.prototype.getDriver = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.CSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CSIVolumeSource.prototype.setDriver = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CSIVolumeSource.prototype.clearDriver = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CSIVolumeSource.prototype.hasDriver = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional bool readOnly = 2;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CSIVolumeSource.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.CSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CSIVolumeSource.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CSIVolumeSource.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CSIVolumeSource.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string fsType = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.CSIVolumeSource.prototype.getFstype = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.CSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CSIVolumeSource.prototype.setFstype = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CSIVolumeSource.prototype.clearFstype = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CSIVolumeSource.prototype.hasFstype = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * map<string, string> volumeAttributes = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.k8s.io.api.core.v1.CSIVolumeSource.prototype.getVolumeattributesMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,string>} */ (jspb.Message.getMapField(this, 4, opt_noLazyCreate, null));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.k8s.io.api.core.v1.CSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CSIVolumeSource.prototype.clearVolumeattributesMap = function () {
    this.getVolumeattributesMap().clear();
    return this;
};
/**
 * optional LocalObjectReference nodePublishSecretRef = 5;
 * @return {?proto.k8s.io.api.core.v1.LocalObjectReference}
 */
proto.k8s.io.api.core.v1.CSIVolumeSource.prototype.getNodepublishsecretref = function () {
    return /** @type{?proto.k8s.io.api.core.v1.LocalObjectReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.LocalObjectReference, 5));
};
/**
 * @param {?proto.k8s.io.api.core.v1.LocalObjectReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.CSIVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.CSIVolumeSource.prototype.setNodepublishsecretref = function (value) {
    return jspb.Message.setWrapperField(this, 5, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CSIVolumeSource.prototype.clearNodepublishsecretref = function () {
    return this.setNodepublishsecretref(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CSIVolumeSource.prototype.hasNodepublishsecretref = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.Capabilities.repeatedFields_ = [1, 2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.Capabilities.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.Capabilities.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.Capabilities} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.Capabilities.toObject = function (includeInstance, msg) {
        var f, obj = {
            addList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
            dropList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.Capabilities}
 */
proto.k8s.io.api.core.v1.Capabilities.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.Capabilities;
    return proto.k8s.io.api.core.v1.Capabilities.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.Capabilities} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.Capabilities}
 */
proto.k8s.io.api.core.v1.Capabilities.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.addAdd(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.addDrop(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.Capabilities.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.Capabilities.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.Capabilities} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.Capabilities.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getAddList();
    if (f.length > 0) {
        writer.writeRepeatedString(1, f);
    }
    f = message.getDropList();
    if (f.length > 0) {
        writer.writeRepeatedString(2, f);
    }
};
/**
 * repeated string add = 1;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.Capabilities.prototype.getAddList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.Capabilities} returns this
 */
proto.k8s.io.api.core.v1.Capabilities.prototype.setAddList = function (value) {
    return jspb.Message.setField(this, 1, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.Capabilities} returns this
 */
proto.k8s.io.api.core.v1.Capabilities.prototype.addAdd = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.Capabilities} returns this
 */
proto.k8s.io.api.core.v1.Capabilities.prototype.clearAddList = function () {
    return this.setAddList([]);
};
/**
 * repeated string drop = 2;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.Capabilities.prototype.getDropList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.Capabilities} returns this
 */
proto.k8s.io.api.core.v1.Capabilities.prototype.setDropList = function (value) {
    return jspb.Message.setField(this, 2, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.Capabilities} returns this
 */
proto.k8s.io.api.core.v1.Capabilities.prototype.addDrop = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.Capabilities} returns this
 */
proto.k8s.io.api.core.v1.Capabilities.prototype.clearDropList = function () {
    return this.setDropList([]);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            monitorsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
            path: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            user: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            secretfile: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
            secretref: (f = msg.getSecretref()) && proto.k8s.io.api.core.v1.SecretReference.toObject(includeInstance, f),
            readonly: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource;
    return proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.addMonitors(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setPath(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setUser(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setSecretfile(value);
                break;
            case 5:
                var value = new proto.k8s.io.api.core.v1.SecretReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.SecretReference.deserializeBinaryFromReader);
                msg.setSecretref(value);
                break;
            case 6:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMonitorsList();
    if (f.length > 0) {
        writer.writeRepeatedString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
    f = message.getSecretref();
    if (f != null) {
        writer.writeMessage(5, f, proto.k8s.io.api.core.v1.SecretReference.serializeBinaryToWriter);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
    if (f != null) {
        writer.writeBool(6, f);
    }
};
/**
 * repeated string monitors = 1;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.prototype.getMonitorsList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.prototype.setMonitorsList = function (value) {
    return jspb.Message.setField(this, 1, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.prototype.addMonitors = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.prototype.clearMonitorsList = function () {
    return this.setMonitorsList([]);
};
/**
 * optional string path = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.prototype.getPath = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.prototype.setPath = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.prototype.clearPath = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.prototype.hasPath = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string user = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.prototype.getUser = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.prototype.setUser = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.prototype.clearUser = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.prototype.hasUser = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string secretFile = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.prototype.getSecretfile = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.prototype.setSecretfile = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.prototype.clearSecretfile = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.prototype.hasSecretfile = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional SecretReference secretRef = 5;
 * @return {?proto.k8s.io.api.core.v1.SecretReference}
 */
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.prototype.getSecretref = function () {
    return /** @type{?proto.k8s.io.api.core.v1.SecretReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.SecretReference, 5));
};
/**
 * @param {?proto.k8s.io.api.core.v1.SecretReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.prototype.setSecretref = function (value) {
    return jspb.Message.setWrapperField(this, 5, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.prototype.clearSecretref = function () {
    return this.setSecretref(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.prototype.hasSecretref = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional bool readOnly = 6;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 6, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 6, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.CephFSVolumeSource.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.CephFSVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.CephFSVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.CephFSVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.CephFSVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            monitorsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
            path: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            user: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            secretfile: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
            secretref: (f = msg.getSecretref()) && proto.k8s.io.api.core.v1.LocalObjectReference.toObject(includeInstance, f),
            readonly: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.CephFSVolumeSource}
 */
proto.k8s.io.api.core.v1.CephFSVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.CephFSVolumeSource;
    return proto.k8s.io.api.core.v1.CephFSVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.CephFSVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.CephFSVolumeSource}
 */
proto.k8s.io.api.core.v1.CephFSVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.addMonitors(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setPath(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setUser(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setSecretfile(value);
                break;
            case 5:
                var value = new proto.k8s.io.api.core.v1.LocalObjectReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.LocalObjectReference.deserializeBinaryFromReader);
                msg.setSecretref(value);
                break;
            case 6:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.CephFSVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.CephFSVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.CephFSVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.CephFSVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMonitorsList();
    if (f.length > 0) {
        writer.writeRepeatedString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
    f = message.getSecretref();
    if (f != null) {
        writer.writeMessage(5, f, proto.k8s.io.api.core.v1.LocalObjectReference.serializeBinaryToWriter);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
    if (f != null) {
        writer.writeBool(6, f);
    }
};
/**
 * repeated string monitors = 1;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.CephFSVolumeSource.prototype.getMonitorsList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.CephFSVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CephFSVolumeSource.prototype.setMonitorsList = function (value) {
    return jspb.Message.setField(this, 1, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.CephFSVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CephFSVolumeSource.prototype.addMonitors = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.CephFSVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CephFSVolumeSource.prototype.clearMonitorsList = function () {
    return this.setMonitorsList([]);
};
/**
 * optional string path = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.CephFSVolumeSource.prototype.getPath = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.CephFSVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CephFSVolumeSource.prototype.setPath = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CephFSVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CephFSVolumeSource.prototype.clearPath = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CephFSVolumeSource.prototype.hasPath = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string user = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.CephFSVolumeSource.prototype.getUser = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.CephFSVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CephFSVolumeSource.prototype.setUser = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CephFSVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CephFSVolumeSource.prototype.clearUser = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CephFSVolumeSource.prototype.hasUser = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string secretFile = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.CephFSVolumeSource.prototype.getSecretfile = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.CephFSVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CephFSVolumeSource.prototype.setSecretfile = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CephFSVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CephFSVolumeSource.prototype.clearSecretfile = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CephFSVolumeSource.prototype.hasSecretfile = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional LocalObjectReference secretRef = 5;
 * @return {?proto.k8s.io.api.core.v1.LocalObjectReference}
 */
proto.k8s.io.api.core.v1.CephFSVolumeSource.prototype.getSecretref = function () {
    return /** @type{?proto.k8s.io.api.core.v1.LocalObjectReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.LocalObjectReference, 5));
};
/**
 * @param {?proto.k8s.io.api.core.v1.LocalObjectReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.CephFSVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.CephFSVolumeSource.prototype.setSecretref = function (value) {
    return jspb.Message.setWrapperField(this, 5, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CephFSVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CephFSVolumeSource.prototype.clearSecretref = function () {
    return this.setSecretref(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CephFSVolumeSource.prototype.hasSecretref = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional bool readOnly = 6;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CephFSVolumeSource.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.CephFSVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CephFSVolumeSource.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 6, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CephFSVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CephFSVolumeSource.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 6, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CephFSVolumeSource.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 6) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.CinderPersistentVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            volumeid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            fstype: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            readonly: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
            secretref: (f = msg.getSecretref()) && proto.k8s.io.api.core.v1.SecretReference.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.CinderPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.CinderPersistentVolumeSource;
    return proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.CinderPersistentVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.CinderPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setVolumeid(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setFstype(value);
                break;
            case 3:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            case 4:
                var value = new proto.k8s.io.api.core.v1.SecretReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.SecretReference.deserializeBinaryFromReader);
                msg.setSecretref(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.CinderPersistentVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeBool(3, f);
    }
    f = message.getSecretref();
    if (f != null) {
        writer.writeMessage(4, f, proto.k8s.io.api.core.v1.SecretReference.serializeBinaryToWriter);
    }
};
/**
 * optional string volumeID = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.prototype.getVolumeid = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.CinderPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.prototype.setVolumeid = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CinderPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.prototype.clearVolumeid = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.prototype.hasVolumeid = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string fsType = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.prototype.getFstype = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.CinderPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.prototype.setFstype = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CinderPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.prototype.clearFstype = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.prototype.hasFstype = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional bool readOnly = 3;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.CinderPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CinderPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional SecretReference secretRef = 4;
 * @return {?proto.k8s.io.api.core.v1.SecretReference}
 */
proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.prototype.getSecretref = function () {
    return /** @type{?proto.k8s.io.api.core.v1.SecretReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.SecretReference, 4));
};
/**
 * @param {?proto.k8s.io.api.core.v1.SecretReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.CinderPersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.prototype.setSecretref = function (value) {
    return jspb.Message.setWrapperField(this, 4, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CinderPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.prototype.clearSecretref = function () {
    return this.setSecretref(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.prototype.hasSecretref = function () {
    return jspb.Message.getField(this, 4) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.CinderVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.CinderVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.CinderVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.CinderVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            volumeid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            fstype: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            readonly: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
            secretref: (f = msg.getSecretref()) && proto.k8s.io.api.core.v1.LocalObjectReference.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.CinderVolumeSource}
 */
proto.k8s.io.api.core.v1.CinderVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.CinderVolumeSource;
    return proto.k8s.io.api.core.v1.CinderVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.CinderVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.CinderVolumeSource}
 */
proto.k8s.io.api.core.v1.CinderVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setVolumeid(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setFstype(value);
                break;
            case 3:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            case 4:
                var value = new proto.k8s.io.api.core.v1.LocalObjectReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.LocalObjectReference.deserializeBinaryFromReader);
                msg.setSecretref(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.CinderVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.CinderVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.CinderVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.CinderVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeBool(3, f);
    }
    f = message.getSecretref();
    if (f != null) {
        writer.writeMessage(4, f, proto.k8s.io.api.core.v1.LocalObjectReference.serializeBinaryToWriter);
    }
};
/**
 * optional string volumeID = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.CinderVolumeSource.prototype.getVolumeid = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.CinderVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CinderVolumeSource.prototype.setVolumeid = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CinderVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CinderVolumeSource.prototype.clearVolumeid = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CinderVolumeSource.prototype.hasVolumeid = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string fsType = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.CinderVolumeSource.prototype.getFstype = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.CinderVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CinderVolumeSource.prototype.setFstype = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CinderVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CinderVolumeSource.prototype.clearFstype = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CinderVolumeSource.prototype.hasFstype = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional bool readOnly = 3;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CinderVolumeSource.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.CinderVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CinderVolumeSource.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CinderVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CinderVolumeSource.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CinderVolumeSource.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional LocalObjectReference secretRef = 4;
 * @return {?proto.k8s.io.api.core.v1.LocalObjectReference}
 */
proto.k8s.io.api.core.v1.CinderVolumeSource.prototype.getSecretref = function () {
    return /** @type{?proto.k8s.io.api.core.v1.LocalObjectReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.LocalObjectReference, 4));
};
/**
 * @param {?proto.k8s.io.api.core.v1.LocalObjectReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.CinderVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.CinderVolumeSource.prototype.setSecretref = function (value) {
    return jspb.Message.setWrapperField(this, 4, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.CinderVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.CinderVolumeSource.prototype.clearSecretref = function () {
    return this.setSecretref(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.CinderVolumeSource.prototype.hasSecretref = function () {
    return jspb.Message.getField(this, 4) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ClientIPConfig.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ClientIPConfig.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ClientIPConfig} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ClientIPConfig.toObject = function (includeInstance, msg) {
        var f, obj = {
            timeoutseconds: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ClientIPConfig}
 */
proto.k8s.io.api.core.v1.ClientIPConfig.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ClientIPConfig;
    return proto.k8s.io.api.core.v1.ClientIPConfig.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ClientIPConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ClientIPConfig}
 */
proto.k8s.io.api.core.v1.ClientIPConfig.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setTimeoutseconds(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ClientIPConfig.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ClientIPConfig.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ClientIPConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ClientIPConfig.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {number} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeInt32(1, f);
    }
};
/**
 * optional int32 timeoutSeconds = 1;
 * @return {number}
 */
proto.k8s.io.api.core.v1.ClientIPConfig.prototype.getTimeoutseconds = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.ClientIPConfig} returns this
 */
proto.k8s.io.api.core.v1.ClientIPConfig.prototype.setTimeoutseconds = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ClientIPConfig} returns this
 */
proto.k8s.io.api.core.v1.ClientIPConfig.prototype.clearTimeoutseconds = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ClientIPConfig.prototype.hasTimeoutseconds = function () {
    return jspb.Message.getField(this, 1) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ComponentCondition.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ComponentCondition.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ComponentCondition} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ComponentCondition.toObject = function (includeInstance, msg) {
        var f, obj = {
            type: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            status: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            message: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            error: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ComponentCondition}
 */
proto.k8s.io.api.core.v1.ComponentCondition.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ComponentCondition;
    return proto.k8s.io.api.core.v1.ComponentCondition.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ComponentCondition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ComponentCondition}
 */
proto.k8s.io.api.core.v1.ComponentCondition.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setType(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setStatus(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setMessage(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setError(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ComponentCondition.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ComponentCondition.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ComponentCondition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ComponentCondition.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
};
/**
 * optional string type = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ComponentCondition.prototype.getType = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ComponentCondition} returns this
 */
proto.k8s.io.api.core.v1.ComponentCondition.prototype.setType = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ComponentCondition} returns this
 */
proto.k8s.io.api.core.v1.ComponentCondition.prototype.clearType = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ComponentCondition.prototype.hasType = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string status = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ComponentCondition.prototype.getStatus = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ComponentCondition} returns this
 */
proto.k8s.io.api.core.v1.ComponentCondition.prototype.setStatus = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ComponentCondition} returns this
 */
proto.k8s.io.api.core.v1.ComponentCondition.prototype.clearStatus = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ComponentCondition.prototype.hasStatus = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string message = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ComponentCondition.prototype.getMessage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ComponentCondition} returns this
 */
proto.k8s.io.api.core.v1.ComponentCondition.prototype.setMessage = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ComponentCondition} returns this
 */
proto.k8s.io.api.core.v1.ComponentCondition.prototype.clearMessage = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ComponentCondition.prototype.hasMessage = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string error = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ComponentCondition.prototype.getError = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ComponentCondition} returns this
 */
proto.k8s.io.api.core.v1.ComponentCondition.prototype.setError = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ComponentCondition} returns this
 */
proto.k8s.io.api.core.v1.ComponentCondition.prototype.clearError = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ComponentCondition.prototype.hasError = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.ComponentStatus.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ComponentStatus.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ComponentStatus.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ComponentStatus} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ComponentStatus.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
            conditionsList: jspb.Message.toObjectList(msg.getConditionsList(), proto.k8s.io.api.core.v1.ComponentCondition.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ComponentStatus}
 */
proto.k8s.io.api.core.v1.ComponentStatus.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ComponentStatus;
    return proto.k8s.io.api.core.v1.ComponentStatus.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ComponentStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ComponentStatus}
 */
proto.k8s.io.api.core.v1.ComponentStatus.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.ComponentCondition;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ComponentCondition.deserializeBinaryFromReader);
                msg.addConditions(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ComponentStatus.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ComponentStatus.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ComponentStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ComponentStatus.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter);
    }
    f = message.getConditionsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.ComponentCondition.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.k8s.io.api.core.v1.ComponentStatus.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ComponentStatus} returns this
*/
proto.k8s.io.api.core.v1.ComponentStatus.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ComponentStatus} returns this
 */
proto.k8s.io.api.core.v1.ComponentStatus.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ComponentStatus.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated ComponentCondition conditions = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.ComponentCondition>}
 */
proto.k8s.io.api.core.v1.ComponentStatus.prototype.getConditionsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.ComponentCondition>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.ComponentCondition, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.ComponentCondition>} value
 * @return {!proto.k8s.io.api.core.v1.ComponentStatus} returns this
*/
proto.k8s.io.api.core.v1.ComponentStatus.prototype.setConditionsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.ComponentCondition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ComponentCondition}
 */
proto.k8s.io.api.core.v1.ComponentStatus.prototype.addConditions = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.ComponentCondition, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.ComponentStatus} returns this
 */
proto.k8s.io.api.core.v1.ComponentStatus.prototype.clearConditionsList = function () {
    return this.setConditionsList([]);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.ComponentStatusList.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ComponentStatusList.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ComponentStatusList.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ComponentStatusList} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ComponentStatusList.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
            itemsList: jspb.Message.toObjectList(msg.getItemsList(), proto.k8s.io.api.core.v1.ComponentStatus.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ComponentStatusList}
 */
proto.k8s.io.api.core.v1.ComponentStatusList.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ComponentStatusList;
    return proto.k8s.io.api.core.v1.ComponentStatusList.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ComponentStatusList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ComponentStatusList}
 */
proto.k8s.io.api.core.v1.ComponentStatusList.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.ComponentStatus;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ComponentStatus.deserializeBinaryFromReader);
                msg.addItems(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ComponentStatusList.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ComponentStatusList.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ComponentStatusList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ComponentStatusList.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter);
    }
    f = message.getItemsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.ComponentStatus.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.k8s.io.api.core.v1.ComponentStatusList.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ComponentStatusList} returns this
*/
proto.k8s.io.api.core.v1.ComponentStatusList.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ComponentStatusList} returns this
 */
proto.k8s.io.api.core.v1.ComponentStatusList.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ComponentStatusList.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated ComponentStatus items = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.ComponentStatus>}
 */
proto.k8s.io.api.core.v1.ComponentStatusList.prototype.getItemsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.ComponentStatus>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.ComponentStatus, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.ComponentStatus>} value
 * @return {!proto.k8s.io.api.core.v1.ComponentStatusList} returns this
*/
proto.k8s.io.api.core.v1.ComponentStatusList.prototype.setItemsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.ComponentStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ComponentStatus}
 */
proto.k8s.io.api.core.v1.ComponentStatusList.prototype.addItems = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.ComponentStatus, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.ComponentStatusList} returns this
 */
proto.k8s.io.api.core.v1.ComponentStatusList.prototype.clearItemsList = function () {
    return this.setItemsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ConfigMap.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ConfigMap.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ConfigMap} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ConfigMap.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
            immutable: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
            dataMap: (f = msg.getDataMap()) ? f.toObject(includeInstance, undefined) : [],
            binarydataMap: (f = msg.getBinarydataMap()) ? f.toObject(includeInstance, undefined) : []
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ConfigMap}
 */
proto.k8s.io.api.core.v1.ConfigMap.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ConfigMap;
    return proto.k8s.io.api.core.v1.ConfigMap.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ConfigMap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ConfigMap}
 */
proto.k8s.io.api.core.v1.ConfigMap.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 4:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setImmutable(value);
                break;
            case 2:
                var value = msg.getDataMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
                });
                break;
            case 3:
                var value = msg.getBinarydataMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBytes, null, "", "");
                });
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ConfigMap.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ConfigMap.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ConfigMap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ConfigMap.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeBool(4, f);
    }
    f = message.getDataMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
    }
    f = message.getBinarydataMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBytes);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.k8s.io.api.core.v1.ConfigMap.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ConfigMap} returns this
*/
proto.k8s.io.api.core.v1.ConfigMap.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ConfigMap} returns this
 */
proto.k8s.io.api.core.v1.ConfigMap.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ConfigMap.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional bool immutable = 4;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ConfigMap.prototype.getImmutable = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.ConfigMap} returns this
 */
proto.k8s.io.api.core.v1.ConfigMap.prototype.setImmutable = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ConfigMap} returns this
 */
proto.k8s.io.api.core.v1.ConfigMap.prototype.clearImmutable = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ConfigMap.prototype.hasImmutable = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * map<string, string> data = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.k8s.io.api.core.v1.ConfigMap.prototype.getDataMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,string>} */ (jspb.Message.getMapField(this, 2, opt_noLazyCreate, null));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.k8s.io.api.core.v1.ConfigMap} returns this
 */
proto.k8s.io.api.core.v1.ConfigMap.prototype.clearDataMap = function () {
    this.getDataMap().clear();
    return this;
};
/**
 * map<string, bytes> binaryData = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!(string|Uint8Array)>}
 */
proto.k8s.io.api.core.v1.ConfigMap.prototype.getBinarydataMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,!(string|Uint8Array)>} */ (jspb.Message.getMapField(this, 3, opt_noLazyCreate, null));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.k8s.io.api.core.v1.ConfigMap} returns this
 */
proto.k8s.io.api.core.v1.ConfigMap.prototype.clearBinarydataMap = function () {
    this.getBinarydataMap().clear();
    return this;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ConfigMapEnvSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ConfigMapEnvSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ConfigMapEnvSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ConfigMapEnvSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            localobjectreference: (f = msg.getLocalobjectreference()) && proto.k8s.io.api.core.v1.LocalObjectReference.toObject(includeInstance, f),
            optional: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapEnvSource}
 */
proto.k8s.io.api.core.v1.ConfigMapEnvSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ConfigMapEnvSource;
    return proto.k8s.io.api.core.v1.ConfigMapEnvSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ConfigMapEnvSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapEnvSource}
 */
proto.k8s.io.api.core.v1.ConfigMapEnvSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.LocalObjectReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.LocalObjectReference.deserializeBinaryFromReader);
                msg.setLocalobjectreference(value);
                break;
            case 2:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setOptional(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ConfigMapEnvSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ConfigMapEnvSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ConfigMapEnvSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ConfigMapEnvSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getLocalobjectreference();
    if (f != null) {
        writer.writeMessage(1, f, proto.k8s.io.api.core.v1.LocalObjectReference.serializeBinaryToWriter);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeBool(2, f);
    }
};
/**
 * optional LocalObjectReference localObjectReference = 1;
 * @return {?proto.k8s.io.api.core.v1.LocalObjectReference}
 */
proto.k8s.io.api.core.v1.ConfigMapEnvSource.prototype.getLocalobjectreference = function () {
    return /** @type{?proto.k8s.io.api.core.v1.LocalObjectReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.LocalObjectReference, 1));
};
/**
 * @param {?proto.k8s.io.api.core.v1.LocalObjectReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ConfigMapEnvSource} returns this
*/
proto.k8s.io.api.core.v1.ConfigMapEnvSource.prototype.setLocalobjectreference = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapEnvSource} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapEnvSource.prototype.clearLocalobjectreference = function () {
    return this.setLocalobjectreference(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ConfigMapEnvSource.prototype.hasLocalobjectreference = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional bool optional = 2;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ConfigMapEnvSource.prototype.getOptional = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.ConfigMapEnvSource} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapEnvSource.prototype.setOptional = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapEnvSource} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapEnvSource.prototype.clearOptional = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ConfigMapEnvSource.prototype.hasOptional = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ConfigMapKeySelector.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ConfigMapKeySelector.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ConfigMapKeySelector} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ConfigMapKeySelector.toObject = function (includeInstance, msg) {
        var f, obj = {
            localobjectreference: (f = msg.getLocalobjectreference()) && proto.k8s.io.api.core.v1.LocalObjectReference.toObject(includeInstance, f),
            key: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            optional: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapKeySelector}
 */
proto.k8s.io.api.core.v1.ConfigMapKeySelector.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ConfigMapKeySelector;
    return proto.k8s.io.api.core.v1.ConfigMapKeySelector.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ConfigMapKeySelector} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapKeySelector}
 */
proto.k8s.io.api.core.v1.ConfigMapKeySelector.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.LocalObjectReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.LocalObjectReference.deserializeBinaryFromReader);
                msg.setLocalobjectreference(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setKey(value);
                break;
            case 3:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setOptional(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ConfigMapKeySelector.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ConfigMapKeySelector.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ConfigMapKeySelector} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ConfigMapKeySelector.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getLocalobjectreference();
    if (f != null) {
        writer.writeMessage(1, f, proto.k8s.io.api.core.v1.LocalObjectReference.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeBool(3, f);
    }
};
/**
 * optional LocalObjectReference localObjectReference = 1;
 * @return {?proto.k8s.io.api.core.v1.LocalObjectReference}
 */
proto.k8s.io.api.core.v1.ConfigMapKeySelector.prototype.getLocalobjectreference = function () {
    return /** @type{?proto.k8s.io.api.core.v1.LocalObjectReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.LocalObjectReference, 1));
};
/**
 * @param {?proto.k8s.io.api.core.v1.LocalObjectReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ConfigMapKeySelector} returns this
*/
proto.k8s.io.api.core.v1.ConfigMapKeySelector.prototype.setLocalobjectreference = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapKeySelector} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapKeySelector.prototype.clearLocalobjectreference = function () {
    return this.setLocalobjectreference(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ConfigMapKeySelector.prototype.hasLocalobjectreference = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string key = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ConfigMapKeySelector.prototype.getKey = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ConfigMapKeySelector} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapKeySelector.prototype.setKey = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapKeySelector} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapKeySelector.prototype.clearKey = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ConfigMapKeySelector.prototype.hasKey = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional bool optional = 3;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ConfigMapKeySelector.prototype.getOptional = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.ConfigMapKeySelector} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapKeySelector.prototype.setOptional = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapKeySelector} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapKeySelector.prototype.clearOptional = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ConfigMapKeySelector.prototype.hasOptional = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.ConfigMapList.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ConfigMapList.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ConfigMapList.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ConfigMapList} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ConfigMapList.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
            itemsList: jspb.Message.toObjectList(msg.getItemsList(), proto.k8s.io.api.core.v1.ConfigMap.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapList}
 */
proto.k8s.io.api.core.v1.ConfigMapList.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ConfigMapList;
    return proto.k8s.io.api.core.v1.ConfigMapList.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ConfigMapList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapList}
 */
proto.k8s.io.api.core.v1.ConfigMapList.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.ConfigMap;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ConfigMap.deserializeBinaryFromReader);
                msg.addItems(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ConfigMapList.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ConfigMapList.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ConfigMapList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ConfigMapList.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter);
    }
    f = message.getItemsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.ConfigMap.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.k8s.io.api.core.v1.ConfigMapList.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ConfigMapList} returns this
*/
proto.k8s.io.api.core.v1.ConfigMapList.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapList} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapList.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ConfigMapList.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated ConfigMap items = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.ConfigMap>}
 */
proto.k8s.io.api.core.v1.ConfigMapList.prototype.getItemsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.ConfigMap>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.ConfigMap, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.ConfigMap>} value
 * @return {!proto.k8s.io.api.core.v1.ConfigMapList} returns this
*/
proto.k8s.io.api.core.v1.ConfigMapList.prototype.setItemsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.ConfigMap=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ConfigMap}
 */
proto.k8s.io.api.core.v1.ConfigMapList.prototype.addItems = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.ConfigMap, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapList} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapList.prototype.clearItemsList = function () {
    return this.setItemsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            namespace: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            name: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            uid: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            resourceversion: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
            kubeletconfigkey: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource}
 */
proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource;
    return proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource}
 */
proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setNamespace(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setUid(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setResourceversion(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setKubeletconfigkey(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeString(5, f);
    }
};
/**
 * optional string namespace = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.prototype.getNamespace = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.prototype.setNamespace = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.prototype.clearNamespace = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.prototype.hasNamespace = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string name = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.prototype.setName = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.prototype.clearName = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.prototype.hasName = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string uid = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.prototype.getUid = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.prototype.setUid = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.prototype.clearUid = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.prototype.hasUid = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string resourceVersion = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.prototype.getResourceversion = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.prototype.setResourceversion = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.prototype.clearResourceversion = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.prototype.hasResourceversion = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional string kubeletConfigKey = 5;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.prototype.getKubeletconfigkey = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.prototype.setKubeletconfigkey = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.prototype.clearKubeletconfigkey = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.prototype.hasKubeletconfigkey = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.ConfigMapProjection.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ConfigMapProjection.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ConfigMapProjection.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ConfigMapProjection} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ConfigMapProjection.toObject = function (includeInstance, msg) {
        var f, obj = {
            localobjectreference: (f = msg.getLocalobjectreference()) && proto.k8s.io.api.core.v1.LocalObjectReference.toObject(includeInstance, f),
            itemsList: jspb.Message.toObjectList(msg.getItemsList(), proto.k8s.io.api.core.v1.KeyToPath.toObject, includeInstance),
            optional: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapProjection}
 */
proto.k8s.io.api.core.v1.ConfigMapProjection.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ConfigMapProjection;
    return proto.k8s.io.api.core.v1.ConfigMapProjection.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ConfigMapProjection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapProjection}
 */
proto.k8s.io.api.core.v1.ConfigMapProjection.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.LocalObjectReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.LocalObjectReference.deserializeBinaryFromReader);
                msg.setLocalobjectreference(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.KeyToPath;
                reader.readMessage(value, proto.k8s.io.api.core.v1.KeyToPath.deserializeBinaryFromReader);
                msg.addItems(value);
                break;
            case 4:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setOptional(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ConfigMapProjection.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ConfigMapProjection.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ConfigMapProjection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ConfigMapProjection.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getLocalobjectreference();
    if (f != null) {
        writer.writeMessage(1, f, proto.k8s.io.api.core.v1.LocalObjectReference.serializeBinaryToWriter);
    }
    f = message.getItemsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.KeyToPath.serializeBinaryToWriter);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeBool(4, f);
    }
};
/**
 * optional LocalObjectReference localObjectReference = 1;
 * @return {?proto.k8s.io.api.core.v1.LocalObjectReference}
 */
proto.k8s.io.api.core.v1.ConfigMapProjection.prototype.getLocalobjectreference = function () {
    return /** @type{?proto.k8s.io.api.core.v1.LocalObjectReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.LocalObjectReference, 1));
};
/**
 * @param {?proto.k8s.io.api.core.v1.LocalObjectReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ConfigMapProjection} returns this
*/
proto.k8s.io.api.core.v1.ConfigMapProjection.prototype.setLocalobjectreference = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapProjection} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapProjection.prototype.clearLocalobjectreference = function () {
    return this.setLocalobjectreference(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ConfigMapProjection.prototype.hasLocalobjectreference = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated KeyToPath items = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.KeyToPath>}
 */
proto.k8s.io.api.core.v1.ConfigMapProjection.prototype.getItemsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.KeyToPath>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.KeyToPath, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.KeyToPath>} value
 * @return {!proto.k8s.io.api.core.v1.ConfigMapProjection} returns this
*/
proto.k8s.io.api.core.v1.ConfigMapProjection.prototype.setItemsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.KeyToPath=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.KeyToPath}
 */
proto.k8s.io.api.core.v1.ConfigMapProjection.prototype.addItems = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.KeyToPath, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapProjection} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapProjection.prototype.clearItemsList = function () {
    return this.setItemsList([]);
};
/**
 * optional bool optional = 4;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ConfigMapProjection.prototype.getOptional = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.ConfigMapProjection} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapProjection.prototype.setOptional = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapProjection} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapProjection.prototype.clearOptional = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ConfigMapProjection.prototype.hasOptional = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.ConfigMapVolumeSource.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ConfigMapVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ConfigMapVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ConfigMapVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ConfigMapVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            localobjectreference: (f = msg.getLocalobjectreference()) && proto.k8s.io.api.core.v1.LocalObjectReference.toObject(includeInstance, f),
            itemsList: jspb.Message.toObjectList(msg.getItemsList(), proto.k8s.io.api.core.v1.KeyToPath.toObject, includeInstance),
            defaultmode: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            optional: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapVolumeSource}
 */
proto.k8s.io.api.core.v1.ConfigMapVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ConfigMapVolumeSource;
    return proto.k8s.io.api.core.v1.ConfigMapVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ConfigMapVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapVolumeSource}
 */
proto.k8s.io.api.core.v1.ConfigMapVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.LocalObjectReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.LocalObjectReference.deserializeBinaryFromReader);
                msg.setLocalobjectreference(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.KeyToPath;
                reader.readMessage(value, proto.k8s.io.api.core.v1.KeyToPath.deserializeBinaryFromReader);
                msg.addItems(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setDefaultmode(value);
                break;
            case 4:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setOptional(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ConfigMapVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ConfigMapVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ConfigMapVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ConfigMapVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getLocalobjectreference();
    if (f != null) {
        writer.writeMessage(1, f, proto.k8s.io.api.core.v1.LocalObjectReference.serializeBinaryToWriter);
    }
    f = message.getItemsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.KeyToPath.serializeBinaryToWriter);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeInt32(3, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeBool(4, f);
    }
};
/**
 * optional LocalObjectReference localObjectReference = 1;
 * @return {?proto.k8s.io.api.core.v1.LocalObjectReference}
 */
proto.k8s.io.api.core.v1.ConfigMapVolumeSource.prototype.getLocalobjectreference = function () {
    return /** @type{?proto.k8s.io.api.core.v1.LocalObjectReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.LocalObjectReference, 1));
};
/**
 * @param {?proto.k8s.io.api.core.v1.LocalObjectReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ConfigMapVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.ConfigMapVolumeSource.prototype.setLocalobjectreference = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapVolumeSource.prototype.clearLocalobjectreference = function () {
    return this.setLocalobjectreference(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ConfigMapVolumeSource.prototype.hasLocalobjectreference = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated KeyToPath items = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.KeyToPath>}
 */
proto.k8s.io.api.core.v1.ConfigMapVolumeSource.prototype.getItemsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.KeyToPath>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.KeyToPath, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.KeyToPath>} value
 * @return {!proto.k8s.io.api.core.v1.ConfigMapVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.ConfigMapVolumeSource.prototype.setItemsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.KeyToPath=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.KeyToPath}
 */
proto.k8s.io.api.core.v1.ConfigMapVolumeSource.prototype.addItems = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.KeyToPath, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapVolumeSource.prototype.clearItemsList = function () {
    return this.setItemsList([]);
};
/**
 * optional int32 defaultMode = 3;
 * @return {number}
 */
proto.k8s.io.api.core.v1.ConfigMapVolumeSource.prototype.getDefaultmode = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.ConfigMapVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapVolumeSource.prototype.setDefaultmode = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapVolumeSource.prototype.clearDefaultmode = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ConfigMapVolumeSource.prototype.hasDefaultmode = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional bool optional = 4;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ConfigMapVolumeSource.prototype.getOptional = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.ConfigMapVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapVolumeSource.prototype.setOptional = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ConfigMapVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ConfigMapVolumeSource.prototype.clearOptional = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ConfigMapVolumeSource.prototype.hasOptional = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.Container.repeatedFields_ = [3, 4, 6, 19, 7, 9, 21];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.Container.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.Container.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.Container} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.Container.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            image: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            commandList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
            argsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
            workingdir: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
            portsList: jspb.Message.toObjectList(msg.getPortsList(), proto.k8s.io.api.core.v1.ContainerPort.toObject, includeInstance),
            envfromList: jspb.Message.toObjectList(msg.getEnvfromList(), proto.k8s.io.api.core.v1.EnvFromSource.toObject, includeInstance),
            envList: jspb.Message.toObjectList(msg.getEnvList(), proto.k8s.io.api.core.v1.EnvVar.toObject, includeInstance),
            resources: (f = msg.getResources()) && proto.k8s.io.api.core.v1.ResourceRequirements.toObject(includeInstance, f),
            volumemountsList: jspb.Message.toObjectList(msg.getVolumemountsList(), proto.k8s.io.api.core.v1.VolumeMount.toObject, includeInstance),
            volumedevicesList: jspb.Message.toObjectList(msg.getVolumedevicesList(), proto.k8s.io.api.core.v1.VolumeDevice.toObject, includeInstance),
            livenessprobe: (f = msg.getLivenessprobe()) && proto.k8s.io.api.core.v1.Probe.toObject(includeInstance, f),
            readinessprobe: (f = msg.getReadinessprobe()) && proto.k8s.io.api.core.v1.Probe.toObject(includeInstance, f),
            startupprobe: (f = msg.getStartupprobe()) && proto.k8s.io.api.core.v1.Probe.toObject(includeInstance, f),
            lifecycle: (f = msg.getLifecycle()) && proto.k8s.io.api.core.v1.Lifecycle.toObject(includeInstance, f),
            terminationmessagepath: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
            terminationmessagepolicy: (f = jspb.Message.getField(msg, 20)) == null ? undefined : f,
            imagepullpolicy: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
            securitycontext: (f = msg.getSecuritycontext()) && proto.k8s.io.api.core.v1.SecurityContext.toObject(includeInstance, f),
            stdin: (f = jspb.Message.getBooleanField(msg, 16)) == null ? undefined : f,
            stdinonce: (f = jspb.Message.getBooleanField(msg, 17)) == null ? undefined : f,
            tty: (f = jspb.Message.getBooleanField(msg, 18)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.Container}
 */
proto.k8s.io.api.core.v1.Container.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.Container;
    return proto.k8s.io.api.core.v1.Container.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.Container} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.Container}
 */
proto.k8s.io.api.core.v1.Container.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setImage(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.addCommand(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.addArgs(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setWorkingdir(value);
                break;
            case 6:
                var value = new proto.k8s.io.api.core.v1.ContainerPort;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ContainerPort.deserializeBinaryFromReader);
                msg.addPorts(value);
                break;
            case 19:
                var value = new proto.k8s.io.api.core.v1.EnvFromSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.EnvFromSource.deserializeBinaryFromReader);
                msg.addEnvfrom(value);
                break;
            case 7:
                var value = new proto.k8s.io.api.core.v1.EnvVar;
                reader.readMessage(value, proto.k8s.io.api.core.v1.EnvVar.deserializeBinaryFromReader);
                msg.addEnv(value);
                break;
            case 8:
                var value = new proto.k8s.io.api.core.v1.ResourceRequirements;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ResourceRequirements.deserializeBinaryFromReader);
                msg.setResources(value);
                break;
            case 9:
                var value = new proto.k8s.io.api.core.v1.VolumeMount;
                reader.readMessage(value, proto.k8s.io.api.core.v1.VolumeMount.deserializeBinaryFromReader);
                msg.addVolumemounts(value);
                break;
            case 21:
                var value = new proto.k8s.io.api.core.v1.VolumeDevice;
                reader.readMessage(value, proto.k8s.io.api.core.v1.VolumeDevice.deserializeBinaryFromReader);
                msg.addVolumedevices(value);
                break;
            case 10:
                var value = new proto.k8s.io.api.core.v1.Probe;
                reader.readMessage(value, proto.k8s.io.api.core.v1.Probe.deserializeBinaryFromReader);
                msg.setLivenessprobe(value);
                break;
            case 11:
                var value = new proto.k8s.io.api.core.v1.Probe;
                reader.readMessage(value, proto.k8s.io.api.core.v1.Probe.deserializeBinaryFromReader);
                msg.setReadinessprobe(value);
                break;
            case 22:
                var value = new proto.k8s.io.api.core.v1.Probe;
                reader.readMessage(value, proto.k8s.io.api.core.v1.Probe.deserializeBinaryFromReader);
                msg.setStartupprobe(value);
                break;
            case 12:
                var value = new proto.k8s.io.api.core.v1.Lifecycle;
                reader.readMessage(value, proto.k8s.io.api.core.v1.Lifecycle.deserializeBinaryFromReader);
                msg.setLifecycle(value);
                break;
            case 13:
                var value = /** @type {string} */ (reader.readString());
                msg.setTerminationmessagepath(value);
                break;
            case 20:
                var value = /** @type {string} */ (reader.readString());
                msg.setTerminationmessagepolicy(value);
                break;
            case 14:
                var value = /** @type {string} */ (reader.readString());
                msg.setImagepullpolicy(value);
                break;
            case 15:
                var value = new proto.k8s.io.api.core.v1.SecurityContext;
                reader.readMessage(value, proto.k8s.io.api.core.v1.SecurityContext.deserializeBinaryFromReader);
                msg.setSecuritycontext(value);
                break;
            case 16:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setStdin(value);
                break;
            case 17:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setStdinonce(value);
                break;
            case 18:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setTty(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.Container.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.Container.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.Container} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.Container.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = message.getCommandList();
    if (f.length > 0) {
        writer.writeRepeatedString(3, f);
    }
    f = message.getArgsList();
    if (f.length > 0) {
        writer.writeRepeatedString(4, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeString(5, f);
    }
    f = message.getPortsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(6, f, proto.k8s.io.api.core.v1.ContainerPort.serializeBinaryToWriter);
    }
    f = message.getEnvfromList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(19, f, proto.k8s.io.api.core.v1.EnvFromSource.serializeBinaryToWriter);
    }
    f = message.getEnvList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(7, f, proto.k8s.io.api.core.v1.EnvVar.serializeBinaryToWriter);
    }
    f = message.getResources();
    if (f != null) {
        writer.writeMessage(8, f, proto.k8s.io.api.core.v1.ResourceRequirements.serializeBinaryToWriter);
    }
    f = message.getVolumemountsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(9, f, proto.k8s.io.api.core.v1.VolumeMount.serializeBinaryToWriter);
    }
    f = message.getVolumedevicesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(21, f, proto.k8s.io.api.core.v1.VolumeDevice.serializeBinaryToWriter);
    }
    f = message.getLivenessprobe();
    if (f != null) {
        writer.writeMessage(10, f, proto.k8s.io.api.core.v1.Probe.serializeBinaryToWriter);
    }
    f = message.getReadinessprobe();
    if (f != null) {
        writer.writeMessage(11, f, proto.k8s.io.api.core.v1.Probe.serializeBinaryToWriter);
    }
    f = message.getStartupprobe();
    if (f != null) {
        writer.writeMessage(22, f, proto.k8s.io.api.core.v1.Probe.serializeBinaryToWriter);
    }
    f = message.getLifecycle();
    if (f != null) {
        writer.writeMessage(12, f, proto.k8s.io.api.core.v1.Lifecycle.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 13));
    if (f != null) {
        writer.writeString(13, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 20));
    if (f != null) {
        writer.writeString(20, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 14));
    if (f != null) {
        writer.writeString(14, f);
    }
    f = message.getSecuritycontext();
    if (f != null) {
        writer.writeMessage(15, f, proto.k8s.io.api.core.v1.SecurityContext.serializeBinaryToWriter);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 16));
    if (f != null) {
        writer.writeBool(16, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 17));
    if (f != null) {
        writer.writeBool(17, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 18));
    if (f != null) {
        writer.writeBool(18, f);
    }
};
/**
 * optional string name = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.Container.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.setName = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.clearName = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Container.prototype.hasName = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string image = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.Container.prototype.getImage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.setImage = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.clearImage = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Container.prototype.hasImage = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * repeated string command = 3;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.Container.prototype.getCommandList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.setCommandList = function (value) {
    return jspb.Message.setField(this, 3, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.addCommand = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.clearCommandList = function () {
    return this.setCommandList([]);
};
/**
 * repeated string args = 4;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.Container.prototype.getArgsList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.setArgsList = function (value) {
    return jspb.Message.setField(this, 4, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.addArgs = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.clearArgsList = function () {
    return this.setArgsList([]);
};
/**
 * optional string workingDir = 5;
 * @return {string}
 */
proto.k8s.io.api.core.v1.Container.prototype.getWorkingdir = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.setWorkingdir = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.clearWorkingdir = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Container.prototype.hasWorkingdir = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * repeated ContainerPort ports = 6;
 * @return {!Array<!proto.k8s.io.api.core.v1.ContainerPort>}
 */
proto.k8s.io.api.core.v1.Container.prototype.getPortsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.ContainerPort>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.ContainerPort, 6));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.ContainerPort>} value
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
*/
proto.k8s.io.api.core.v1.Container.prototype.setPortsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 6, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.ContainerPort=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ContainerPort}
 */
proto.k8s.io.api.core.v1.Container.prototype.addPorts = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.k8s.io.api.core.v1.ContainerPort, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.clearPortsList = function () {
    return this.setPortsList([]);
};
/**
 * repeated EnvFromSource envFrom = 19;
 * @return {!Array<!proto.k8s.io.api.core.v1.EnvFromSource>}
 */
proto.k8s.io.api.core.v1.Container.prototype.getEnvfromList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.EnvFromSource>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.EnvFromSource, 19));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.EnvFromSource>} value
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
*/
proto.k8s.io.api.core.v1.Container.prototype.setEnvfromList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 19, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.EnvFromSource=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.EnvFromSource}
 */
proto.k8s.io.api.core.v1.Container.prototype.addEnvfrom = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 19, opt_value, proto.k8s.io.api.core.v1.EnvFromSource, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.clearEnvfromList = function () {
    return this.setEnvfromList([]);
};
/**
 * repeated EnvVar env = 7;
 * @return {!Array<!proto.k8s.io.api.core.v1.EnvVar>}
 */
proto.k8s.io.api.core.v1.Container.prototype.getEnvList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.EnvVar>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.EnvVar, 7));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.EnvVar>} value
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
*/
proto.k8s.io.api.core.v1.Container.prototype.setEnvList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 7, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.EnvVar=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.EnvVar}
 */
proto.k8s.io.api.core.v1.Container.prototype.addEnv = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.k8s.io.api.core.v1.EnvVar, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.clearEnvList = function () {
    return this.setEnvList([]);
};
/**
 * optional ResourceRequirements resources = 8;
 * @return {?proto.k8s.io.api.core.v1.ResourceRequirements}
 */
proto.k8s.io.api.core.v1.Container.prototype.getResources = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ResourceRequirements} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ResourceRequirements, 8));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ResourceRequirements|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
*/
proto.k8s.io.api.core.v1.Container.prototype.setResources = function (value) {
    return jspb.Message.setWrapperField(this, 8, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.clearResources = function () {
    return this.setResources(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Container.prototype.hasResources = function () {
    return jspb.Message.getField(this, 8) != null;
};
/**
 * repeated VolumeMount volumeMounts = 9;
 * @return {!Array<!proto.k8s.io.api.core.v1.VolumeMount>}
 */
proto.k8s.io.api.core.v1.Container.prototype.getVolumemountsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.VolumeMount>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.VolumeMount, 9));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.VolumeMount>} value
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
*/
proto.k8s.io.api.core.v1.Container.prototype.setVolumemountsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 9, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.VolumeMount=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.VolumeMount}
 */
proto.k8s.io.api.core.v1.Container.prototype.addVolumemounts = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.k8s.io.api.core.v1.VolumeMount, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.clearVolumemountsList = function () {
    return this.setVolumemountsList([]);
};
/**
 * repeated VolumeDevice volumeDevices = 21;
 * @return {!Array<!proto.k8s.io.api.core.v1.VolumeDevice>}
 */
proto.k8s.io.api.core.v1.Container.prototype.getVolumedevicesList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.VolumeDevice>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.VolumeDevice, 21));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.VolumeDevice>} value
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
*/
proto.k8s.io.api.core.v1.Container.prototype.setVolumedevicesList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 21, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.VolumeDevice=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.VolumeDevice}
 */
proto.k8s.io.api.core.v1.Container.prototype.addVolumedevices = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 21, opt_value, proto.k8s.io.api.core.v1.VolumeDevice, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.clearVolumedevicesList = function () {
    return this.setVolumedevicesList([]);
};
/**
 * optional Probe livenessProbe = 10;
 * @return {?proto.k8s.io.api.core.v1.Probe}
 */
proto.k8s.io.api.core.v1.Container.prototype.getLivenessprobe = function () {
    return /** @type{?proto.k8s.io.api.core.v1.Probe} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.Probe, 10));
};
/**
 * @param {?proto.k8s.io.api.core.v1.Probe|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
*/
proto.k8s.io.api.core.v1.Container.prototype.setLivenessprobe = function (value) {
    return jspb.Message.setWrapperField(this, 10, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.clearLivenessprobe = function () {
    return this.setLivenessprobe(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Container.prototype.hasLivenessprobe = function () {
    return jspb.Message.getField(this, 10) != null;
};
/**
 * optional Probe readinessProbe = 11;
 * @return {?proto.k8s.io.api.core.v1.Probe}
 */
proto.k8s.io.api.core.v1.Container.prototype.getReadinessprobe = function () {
    return /** @type{?proto.k8s.io.api.core.v1.Probe} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.Probe, 11));
};
/**
 * @param {?proto.k8s.io.api.core.v1.Probe|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
*/
proto.k8s.io.api.core.v1.Container.prototype.setReadinessprobe = function (value) {
    return jspb.Message.setWrapperField(this, 11, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.clearReadinessprobe = function () {
    return this.setReadinessprobe(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Container.prototype.hasReadinessprobe = function () {
    return jspb.Message.getField(this, 11) != null;
};
/**
 * optional Probe startupProbe = 22;
 * @return {?proto.k8s.io.api.core.v1.Probe}
 */
proto.k8s.io.api.core.v1.Container.prototype.getStartupprobe = function () {
    return /** @type{?proto.k8s.io.api.core.v1.Probe} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.Probe, 22));
};
/**
 * @param {?proto.k8s.io.api.core.v1.Probe|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
*/
proto.k8s.io.api.core.v1.Container.prototype.setStartupprobe = function (value) {
    return jspb.Message.setWrapperField(this, 22, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.clearStartupprobe = function () {
    return this.setStartupprobe(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Container.prototype.hasStartupprobe = function () {
    return jspb.Message.getField(this, 22) != null;
};
/**
 * optional Lifecycle lifecycle = 12;
 * @return {?proto.k8s.io.api.core.v1.Lifecycle}
 */
proto.k8s.io.api.core.v1.Container.prototype.getLifecycle = function () {
    return /** @type{?proto.k8s.io.api.core.v1.Lifecycle} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.Lifecycle, 12));
};
/**
 * @param {?proto.k8s.io.api.core.v1.Lifecycle|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
*/
proto.k8s.io.api.core.v1.Container.prototype.setLifecycle = function (value) {
    return jspb.Message.setWrapperField(this, 12, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.clearLifecycle = function () {
    return this.setLifecycle(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Container.prototype.hasLifecycle = function () {
    return jspb.Message.getField(this, 12) != null;
};
/**
 * optional string terminationMessagePath = 13;
 * @return {string}
 */
proto.k8s.io.api.core.v1.Container.prototype.getTerminationmessagepath = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.setTerminationmessagepath = function (value) {
    return jspb.Message.setField(this, 13, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.clearTerminationmessagepath = function () {
    return jspb.Message.setField(this, 13, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Container.prototype.hasTerminationmessagepath = function () {
    return jspb.Message.getField(this, 13) != null;
};
/**
 * optional string terminationMessagePolicy = 20;
 * @return {string}
 */
proto.k8s.io.api.core.v1.Container.prototype.getTerminationmessagepolicy = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.setTerminationmessagepolicy = function (value) {
    return jspb.Message.setField(this, 20, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.clearTerminationmessagepolicy = function () {
    return jspb.Message.setField(this, 20, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Container.prototype.hasTerminationmessagepolicy = function () {
    return jspb.Message.getField(this, 20) != null;
};
/**
 * optional string imagePullPolicy = 14;
 * @return {string}
 */
proto.k8s.io.api.core.v1.Container.prototype.getImagepullpolicy = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.setImagepullpolicy = function (value) {
    return jspb.Message.setField(this, 14, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.clearImagepullpolicy = function () {
    return jspb.Message.setField(this, 14, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Container.prototype.hasImagepullpolicy = function () {
    return jspb.Message.getField(this, 14) != null;
};
/**
 * optional SecurityContext securityContext = 15;
 * @return {?proto.k8s.io.api.core.v1.SecurityContext}
 */
proto.k8s.io.api.core.v1.Container.prototype.getSecuritycontext = function () {
    return /** @type{?proto.k8s.io.api.core.v1.SecurityContext} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.SecurityContext, 15));
};
/**
 * @param {?proto.k8s.io.api.core.v1.SecurityContext|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
*/
proto.k8s.io.api.core.v1.Container.prototype.setSecuritycontext = function (value) {
    return jspb.Message.setWrapperField(this, 15, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.clearSecuritycontext = function () {
    return this.setSecuritycontext(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Container.prototype.hasSecuritycontext = function () {
    return jspb.Message.getField(this, 15) != null;
};
/**
 * optional bool stdin = 16;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Container.prototype.getStdin = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.setStdin = function (value) {
    return jspb.Message.setField(this, 16, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.clearStdin = function () {
    return jspb.Message.setField(this, 16, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Container.prototype.hasStdin = function () {
    return jspb.Message.getField(this, 16) != null;
};
/**
 * optional bool stdinOnce = 17;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Container.prototype.getStdinonce = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.setStdinonce = function (value) {
    return jspb.Message.setField(this, 17, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.clearStdinonce = function () {
    return jspb.Message.setField(this, 17, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Container.prototype.hasStdinonce = function () {
    return jspb.Message.getField(this, 17) != null;
};
/**
 * optional bool tty = 18;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Container.prototype.getTty = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.setTty = function (value) {
    return jspb.Message.setField(this, 18, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Container} returns this
 */
proto.k8s.io.api.core.v1.Container.prototype.clearTty = function () {
    return jspb.Message.setField(this, 18, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Container.prototype.hasTty = function () {
    return jspb.Message.getField(this, 18) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.ContainerImage.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ContainerImage.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ContainerImage.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ContainerImage} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ContainerImage.toObject = function (includeInstance, msg) {
        var f, obj = {
            namesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
            sizebytes: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ContainerImage}
 */
proto.k8s.io.api.core.v1.ContainerImage.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ContainerImage;
    return proto.k8s.io.api.core.v1.ContainerImage.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ContainerImage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ContainerImage}
 */
proto.k8s.io.api.core.v1.ContainerImage.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.addNames(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setSizebytes(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ContainerImage.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ContainerImage.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ContainerImage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ContainerImage.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getNamesList();
    if (f.length > 0) {
        writer.writeRepeatedString(1, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeInt64(2, f);
    }
};
/**
 * repeated string names = 1;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.ContainerImage.prototype.getNamesList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.ContainerImage} returns this
 */
proto.k8s.io.api.core.v1.ContainerImage.prototype.setNamesList = function (value) {
    return jspb.Message.setField(this, 1, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ContainerImage} returns this
 */
proto.k8s.io.api.core.v1.ContainerImage.prototype.addNames = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.ContainerImage} returns this
 */
proto.k8s.io.api.core.v1.ContainerImage.prototype.clearNamesList = function () {
    return this.setNamesList([]);
};
/**
 * optional int64 sizeBytes = 2;
 * @return {number}
 */
proto.k8s.io.api.core.v1.ContainerImage.prototype.getSizebytes = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.ContainerImage} returns this
 */
proto.k8s.io.api.core.v1.ContainerImage.prototype.setSizebytes = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ContainerImage} returns this
 */
proto.k8s.io.api.core.v1.ContainerImage.prototype.clearSizebytes = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerImage.prototype.hasSizebytes = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ContainerPort.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ContainerPort.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ContainerPort} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ContainerPort.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            hostport: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            containerport: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            protocol: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
            hostip: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ContainerPort}
 */
proto.k8s.io.api.core.v1.ContainerPort.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ContainerPort;
    return proto.k8s.io.api.core.v1.ContainerPort.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ContainerPort} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ContainerPort}
 */
proto.k8s.io.api.core.v1.ContainerPort.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setHostport(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setContainerport(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setProtocol(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setHostip(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ContainerPort.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ContainerPort.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ContainerPort} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ContainerPort.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeInt32(2, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeInt32(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeString(5, f);
    }
};
/**
 * optional string name = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ContainerPort.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ContainerPort} returns this
 */
proto.k8s.io.api.core.v1.ContainerPort.prototype.setName = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ContainerPort} returns this
 */
proto.k8s.io.api.core.v1.ContainerPort.prototype.clearName = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerPort.prototype.hasName = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional int32 hostPort = 2;
 * @return {number}
 */
proto.k8s.io.api.core.v1.ContainerPort.prototype.getHostport = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.ContainerPort} returns this
 */
proto.k8s.io.api.core.v1.ContainerPort.prototype.setHostport = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ContainerPort} returns this
 */
proto.k8s.io.api.core.v1.ContainerPort.prototype.clearHostport = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerPort.prototype.hasHostport = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional int32 containerPort = 3;
 * @return {number}
 */
proto.k8s.io.api.core.v1.ContainerPort.prototype.getContainerport = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.ContainerPort} returns this
 */
proto.k8s.io.api.core.v1.ContainerPort.prototype.setContainerport = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ContainerPort} returns this
 */
proto.k8s.io.api.core.v1.ContainerPort.prototype.clearContainerport = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerPort.prototype.hasContainerport = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string protocol = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ContainerPort.prototype.getProtocol = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ContainerPort} returns this
 */
proto.k8s.io.api.core.v1.ContainerPort.prototype.setProtocol = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ContainerPort} returns this
 */
proto.k8s.io.api.core.v1.ContainerPort.prototype.clearProtocol = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerPort.prototype.hasProtocol = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional string hostIP = 5;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ContainerPort.prototype.getHostip = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ContainerPort} returns this
 */
proto.k8s.io.api.core.v1.ContainerPort.prototype.setHostip = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ContainerPort} returns this
 */
proto.k8s.io.api.core.v1.ContainerPort.prototype.clearHostip = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerPort.prototype.hasHostip = function () {
    return jspb.Message.getField(this, 5) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ContainerState.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ContainerState.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ContainerState} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ContainerState.toObject = function (includeInstance, msg) {
        var f, obj = {
            waiting: (f = msg.getWaiting()) && proto.k8s.io.api.core.v1.ContainerStateWaiting.toObject(includeInstance, f),
            running: (f = msg.getRunning()) && proto.k8s.io.api.core.v1.ContainerStateRunning.toObject(includeInstance, f),
            terminated: (f = msg.getTerminated()) && proto.k8s.io.api.core.v1.ContainerStateTerminated.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ContainerState}
 */
proto.k8s.io.api.core.v1.ContainerState.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ContainerState;
    return proto.k8s.io.api.core.v1.ContainerState.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ContainerState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ContainerState}
 */
proto.k8s.io.api.core.v1.ContainerState.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.ContainerStateWaiting;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ContainerStateWaiting.deserializeBinaryFromReader);
                msg.setWaiting(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.ContainerStateRunning;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ContainerStateRunning.deserializeBinaryFromReader);
                msg.setRunning(value);
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.ContainerStateTerminated;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ContainerStateTerminated.deserializeBinaryFromReader);
                msg.setTerminated(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ContainerState.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ContainerState.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ContainerState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ContainerState.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getWaiting();
    if (f != null) {
        writer.writeMessage(1, f, proto.k8s.io.api.core.v1.ContainerStateWaiting.serializeBinaryToWriter);
    }
    f = message.getRunning();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.ContainerStateRunning.serializeBinaryToWriter);
    }
    f = message.getTerminated();
    if (f != null) {
        writer.writeMessage(3, f, proto.k8s.io.api.core.v1.ContainerStateTerminated.serializeBinaryToWriter);
    }
};
/**
 * optional ContainerStateWaiting waiting = 1;
 * @return {?proto.k8s.io.api.core.v1.ContainerStateWaiting}
 */
proto.k8s.io.api.core.v1.ContainerState.prototype.getWaiting = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ContainerStateWaiting} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ContainerStateWaiting, 1));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ContainerStateWaiting|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ContainerState} returns this
*/
proto.k8s.io.api.core.v1.ContainerState.prototype.setWaiting = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ContainerState} returns this
 */
proto.k8s.io.api.core.v1.ContainerState.prototype.clearWaiting = function () {
    return this.setWaiting(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerState.prototype.hasWaiting = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional ContainerStateRunning running = 2;
 * @return {?proto.k8s.io.api.core.v1.ContainerStateRunning}
 */
proto.k8s.io.api.core.v1.ContainerState.prototype.getRunning = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ContainerStateRunning} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ContainerStateRunning, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ContainerStateRunning|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ContainerState} returns this
*/
proto.k8s.io.api.core.v1.ContainerState.prototype.setRunning = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ContainerState} returns this
 */
proto.k8s.io.api.core.v1.ContainerState.prototype.clearRunning = function () {
    return this.setRunning(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerState.prototype.hasRunning = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional ContainerStateTerminated terminated = 3;
 * @return {?proto.k8s.io.api.core.v1.ContainerStateTerminated}
 */
proto.k8s.io.api.core.v1.ContainerState.prototype.getTerminated = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ContainerStateTerminated} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ContainerStateTerminated, 3));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ContainerStateTerminated|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ContainerState} returns this
*/
proto.k8s.io.api.core.v1.ContainerState.prototype.setTerminated = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ContainerState} returns this
 */
proto.k8s.io.api.core.v1.ContainerState.prototype.clearTerminated = function () {
    return this.setTerminated(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerState.prototype.hasTerminated = function () {
    return jspb.Message.getField(this, 3) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ContainerStateRunning.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ContainerStateRunning.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ContainerStateRunning} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ContainerStateRunning.toObject = function (includeInstance, msg) {
        var f, obj = {
            startedat: (f = msg.getStartedat()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ContainerStateRunning}
 */
proto.k8s.io.api.core.v1.ContainerStateRunning.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ContainerStateRunning;
    return proto.k8s.io.api.core.v1.ContainerStateRunning.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ContainerStateRunning} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ContainerStateRunning}
 */
proto.k8s.io.api.core.v1.ContainerStateRunning.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
                msg.setStartedat(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ContainerStateRunning.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ContainerStateRunning.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ContainerStateRunning} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ContainerStateRunning.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getStartedat();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time startedAt = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.k8s.io.api.core.v1.ContainerStateRunning.prototype.getStartedat = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ContainerStateRunning} returns this
*/
proto.k8s.io.api.core.v1.ContainerStateRunning.prototype.setStartedat = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ContainerStateRunning} returns this
 */
proto.k8s.io.api.core.v1.ContainerStateRunning.prototype.clearStartedat = function () {
    return this.setStartedat(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerStateRunning.prototype.hasStartedat = function () {
    return jspb.Message.getField(this, 1) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ContainerStateTerminated.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ContainerStateTerminated} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ContainerStateTerminated.toObject = function (includeInstance, msg) {
        var f, obj = {
            exitcode: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            signal: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            reason: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            message: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
            startedat: (f = msg.getStartedat()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
            finishedat: (f = msg.getFinishedat()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
            containerid: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ContainerStateTerminated}
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ContainerStateTerminated;
    return proto.k8s.io.api.core.v1.ContainerStateTerminated.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ContainerStateTerminated} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ContainerStateTerminated}
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setExitcode(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setSignal(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setReason(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setMessage(value);
                break;
            case 5:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
                msg.setStartedat(value);
                break;
            case 6:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
                msg.setFinishedat(value);
                break;
            case 7:
                var value = /** @type {string} */ (reader.readString());
                msg.setContainerid(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ContainerStateTerminated.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ContainerStateTerminated} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {number} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeInt32(1, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeInt32(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
    f = message.getStartedat();
    if (f != null) {
        writer.writeMessage(5, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter);
    }
    f = message.getFinishedat();
    if (f != null) {
        writer.writeMessage(6, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 7));
    if (f != null) {
        writer.writeString(7, f);
    }
};
/**
 * optional int32 exitCode = 1;
 * @return {number}
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.getExitcode = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.ContainerStateTerminated} returns this
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.setExitcode = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ContainerStateTerminated} returns this
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.clearExitcode = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.hasExitcode = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional int32 signal = 2;
 * @return {number}
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.getSignal = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.ContainerStateTerminated} returns this
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.setSignal = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ContainerStateTerminated} returns this
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.clearSignal = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.hasSignal = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string reason = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.getReason = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ContainerStateTerminated} returns this
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.setReason = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ContainerStateTerminated} returns this
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.clearReason = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.hasReason = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string message = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.getMessage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ContainerStateTerminated} returns this
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.setMessage = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ContainerStateTerminated} returns this
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.clearMessage = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.hasMessage = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time startedAt = 5;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.getStartedat = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 5));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ContainerStateTerminated} returns this
*/
proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.setStartedat = function (value) {
    return jspb.Message.setWrapperField(this, 5, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ContainerStateTerminated} returns this
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.clearStartedat = function () {
    return this.setStartedat(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.hasStartedat = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time finishedAt = 6;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.getFinishedat = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 6));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ContainerStateTerminated} returns this
*/
proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.setFinishedat = function (value) {
    return jspb.Message.setWrapperField(this, 6, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ContainerStateTerminated} returns this
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.clearFinishedat = function () {
    return this.setFinishedat(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.hasFinishedat = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * optional string containerID = 7;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.getContainerid = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ContainerStateTerminated} returns this
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.setContainerid = function (value) {
    return jspb.Message.setField(this, 7, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ContainerStateTerminated} returns this
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.clearContainerid = function () {
    return jspb.Message.setField(this, 7, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerStateTerminated.prototype.hasContainerid = function () {
    return jspb.Message.getField(this, 7) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ContainerStateWaiting.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ContainerStateWaiting.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ContainerStateWaiting} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ContainerStateWaiting.toObject = function (includeInstance, msg) {
        var f, obj = {
            reason: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            message: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ContainerStateWaiting}
 */
proto.k8s.io.api.core.v1.ContainerStateWaiting.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ContainerStateWaiting;
    return proto.k8s.io.api.core.v1.ContainerStateWaiting.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ContainerStateWaiting} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ContainerStateWaiting}
 */
proto.k8s.io.api.core.v1.ContainerStateWaiting.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setReason(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setMessage(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ContainerStateWaiting.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ContainerStateWaiting.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ContainerStateWaiting} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ContainerStateWaiting.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
};
/**
 * optional string reason = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ContainerStateWaiting.prototype.getReason = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ContainerStateWaiting} returns this
 */
proto.k8s.io.api.core.v1.ContainerStateWaiting.prototype.setReason = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ContainerStateWaiting} returns this
 */
proto.k8s.io.api.core.v1.ContainerStateWaiting.prototype.clearReason = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerStateWaiting.prototype.hasReason = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string message = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ContainerStateWaiting.prototype.getMessage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ContainerStateWaiting} returns this
 */
proto.k8s.io.api.core.v1.ContainerStateWaiting.prototype.setMessage = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ContainerStateWaiting} returns this
 */
proto.k8s.io.api.core.v1.ContainerStateWaiting.prototype.clearMessage = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerStateWaiting.prototype.hasMessage = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ContainerStatus.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ContainerStatus.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ContainerStatus} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ContainerStatus.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            state: (f = msg.getState()) && proto.k8s.io.api.core.v1.ContainerState.toObject(includeInstance, f),
            laststate: (f = msg.getLaststate()) && proto.k8s.io.api.core.v1.ContainerState.toObject(includeInstance, f),
            ready: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
            restartcount: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
            image: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
            imageid: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
            containerid: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
            started: (f = jspb.Message.getBooleanField(msg, 9)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ContainerStatus}
 */
proto.k8s.io.api.core.v1.ContainerStatus.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ContainerStatus;
    return proto.k8s.io.api.core.v1.ContainerStatus.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ContainerStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ContainerStatus}
 */
proto.k8s.io.api.core.v1.ContainerStatus.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.ContainerState;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ContainerState.deserializeBinaryFromReader);
                msg.setState(value);
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.ContainerState;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ContainerState.deserializeBinaryFromReader);
                msg.setLaststate(value);
                break;
            case 4:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReady(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setRestartcount(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.setImage(value);
                break;
            case 7:
                var value = /** @type {string} */ (reader.readString());
                msg.setImageid(value);
                break;
            case 8:
                var value = /** @type {string} */ (reader.readString());
                msg.setContainerid(value);
                break;
            case 9:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setStarted(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ContainerStatus.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ContainerStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ContainerStatus.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = message.getState();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.ContainerState.serializeBinaryToWriter);
    }
    f = message.getLaststate();
    if (f != null) {
        writer.writeMessage(3, f, proto.k8s.io.api.core.v1.ContainerState.serializeBinaryToWriter);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeBool(4, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeInt32(5, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 6));
    if (f != null) {
        writer.writeString(6, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 7));
    if (f != null) {
        writer.writeString(7, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 8));
    if (f != null) {
        writer.writeString(8, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
    if (f != null) {
        writer.writeBool(9, f);
    }
};
/**
 * optional string name = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ContainerStatus} returns this
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.setName = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ContainerStatus} returns this
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.clearName = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.hasName = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional ContainerState state = 2;
 * @return {?proto.k8s.io.api.core.v1.ContainerState}
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.getState = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ContainerState} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ContainerState, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ContainerState|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ContainerStatus} returns this
*/
proto.k8s.io.api.core.v1.ContainerStatus.prototype.setState = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ContainerStatus} returns this
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.clearState = function () {
    return this.setState(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.hasState = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional ContainerState lastState = 3;
 * @return {?proto.k8s.io.api.core.v1.ContainerState}
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.getLaststate = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ContainerState} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ContainerState, 3));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ContainerState|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ContainerStatus} returns this
*/
proto.k8s.io.api.core.v1.ContainerStatus.prototype.setLaststate = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ContainerStatus} returns this
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.clearLaststate = function () {
    return this.setLaststate(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.hasLaststate = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional bool ready = 4;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.getReady = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.ContainerStatus} returns this
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.setReady = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ContainerStatus} returns this
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.clearReady = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.hasReady = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional int32 restartCount = 5;
 * @return {number}
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.getRestartcount = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.ContainerStatus} returns this
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.setRestartcount = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ContainerStatus} returns this
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.clearRestartcount = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.hasRestartcount = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional string image = 6;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.getImage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ContainerStatus} returns this
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.setImage = function (value) {
    return jspb.Message.setField(this, 6, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ContainerStatus} returns this
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.clearImage = function () {
    return jspb.Message.setField(this, 6, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.hasImage = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * optional string imageID = 7;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.getImageid = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ContainerStatus} returns this
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.setImageid = function (value) {
    return jspb.Message.setField(this, 7, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ContainerStatus} returns this
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.clearImageid = function () {
    return jspb.Message.setField(this, 7, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.hasImageid = function () {
    return jspb.Message.getField(this, 7) != null;
};
/**
 * optional string containerID = 8;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.getContainerid = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ContainerStatus} returns this
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.setContainerid = function (value) {
    return jspb.Message.setField(this, 8, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ContainerStatus} returns this
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.clearContainerid = function () {
    return jspb.Message.setField(this, 8, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.hasContainerid = function () {
    return jspb.Message.getField(this, 8) != null;
};
/**
 * optional bool started = 9;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.getStarted = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.ContainerStatus} returns this
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.setStarted = function (value) {
    return jspb.Message.setField(this, 9, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ContainerStatus} returns this
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.clearStarted = function () {
    return jspb.Message.setField(this, 9, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ContainerStatus.prototype.hasStarted = function () {
    return jspb.Message.getField(this, 9) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.DaemonEndpoint.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.DaemonEndpoint.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.DaemonEndpoint} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.DaemonEndpoint.toObject = function (includeInstance, msg) {
        var f, obj = {
            port: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.DaemonEndpoint}
 */
proto.k8s.io.api.core.v1.DaemonEndpoint.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.DaemonEndpoint;
    return proto.k8s.io.api.core.v1.DaemonEndpoint.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.DaemonEndpoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.DaemonEndpoint}
 */
proto.k8s.io.api.core.v1.DaemonEndpoint.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setPort(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.DaemonEndpoint.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.DaemonEndpoint.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.DaemonEndpoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.DaemonEndpoint.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {number} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeInt32(1, f);
    }
};
/**
 * optional int32 Port = 1;
 * @return {number}
 */
proto.k8s.io.api.core.v1.DaemonEndpoint.prototype.getPort = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.DaemonEndpoint} returns this
 */
proto.k8s.io.api.core.v1.DaemonEndpoint.prototype.setPort = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.DaemonEndpoint} returns this
 */
proto.k8s.io.api.core.v1.DaemonEndpoint.prototype.clearPort = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.DaemonEndpoint.prototype.hasPort = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.DownwardAPIProjection.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.DownwardAPIProjection.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.DownwardAPIProjection.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.DownwardAPIProjection} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.DownwardAPIProjection.toObject = function (includeInstance, msg) {
        var f, obj = {
            itemsList: jspb.Message.toObjectList(msg.getItemsList(), proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.DownwardAPIProjection}
 */
proto.k8s.io.api.core.v1.DownwardAPIProjection.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.DownwardAPIProjection;
    return proto.k8s.io.api.core.v1.DownwardAPIProjection.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.DownwardAPIProjection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.DownwardAPIProjection}
 */
proto.k8s.io.api.core.v1.DownwardAPIProjection.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.DownwardAPIVolumeFile;
                reader.readMessage(value, proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.deserializeBinaryFromReader);
                msg.addItems(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.DownwardAPIProjection.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.DownwardAPIProjection.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.DownwardAPIProjection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.DownwardAPIProjection.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getItemsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.serializeBinaryToWriter);
    }
};
/**
 * repeated DownwardAPIVolumeFile items = 1;
 * @return {!Array<!proto.k8s.io.api.core.v1.DownwardAPIVolumeFile>}
 */
proto.k8s.io.api.core.v1.DownwardAPIProjection.prototype.getItemsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.DownwardAPIVolumeFile>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.DownwardAPIVolumeFile, 1));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.DownwardAPIVolumeFile>} value
 * @return {!proto.k8s.io.api.core.v1.DownwardAPIProjection} returns this
*/
proto.k8s.io.api.core.v1.DownwardAPIProjection.prototype.setItemsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.DownwardAPIVolumeFile=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.DownwardAPIVolumeFile}
 */
proto.k8s.io.api.core.v1.DownwardAPIProjection.prototype.addItems = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.k8s.io.api.core.v1.DownwardAPIVolumeFile, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.DownwardAPIProjection} returns this
 */
proto.k8s.io.api.core.v1.DownwardAPIProjection.prototype.clearItemsList = function () {
    return this.setItemsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.DownwardAPIVolumeFile} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.toObject = function (includeInstance, msg) {
        var f, obj = {
            path: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            fieldref: (f = msg.getFieldref()) && proto.k8s.io.api.core.v1.ObjectFieldSelector.toObject(includeInstance, f),
            resourcefieldref: (f = msg.getResourcefieldref()) && proto.k8s.io.api.core.v1.ResourceFieldSelector.toObject(includeInstance, f),
            mode: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.DownwardAPIVolumeFile}
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.DownwardAPIVolumeFile;
    return proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.DownwardAPIVolumeFile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.DownwardAPIVolumeFile}
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setPath(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.ObjectFieldSelector;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ObjectFieldSelector.deserializeBinaryFromReader);
                msg.setFieldref(value);
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.ResourceFieldSelector;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ResourceFieldSelector.deserializeBinaryFromReader);
                msg.setResourcefieldref(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setMode(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.DownwardAPIVolumeFile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = message.getFieldref();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.ObjectFieldSelector.serializeBinaryToWriter);
    }
    f = message.getResourcefieldref();
    if (f != null) {
        writer.writeMessage(3, f, proto.k8s.io.api.core.v1.ResourceFieldSelector.serializeBinaryToWriter);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeInt32(4, f);
    }
};
/**
 * optional string path = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.prototype.getPath = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.DownwardAPIVolumeFile} returns this
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.prototype.setPath = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.DownwardAPIVolumeFile} returns this
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.prototype.clearPath = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.prototype.hasPath = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional ObjectFieldSelector fieldRef = 2;
 * @return {?proto.k8s.io.api.core.v1.ObjectFieldSelector}
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.prototype.getFieldref = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ObjectFieldSelector} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ObjectFieldSelector, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ObjectFieldSelector|undefined} value
 * @return {!proto.k8s.io.api.core.v1.DownwardAPIVolumeFile} returns this
*/
proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.prototype.setFieldref = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.DownwardAPIVolumeFile} returns this
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.prototype.clearFieldref = function () {
    return this.setFieldref(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.prototype.hasFieldref = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional ResourceFieldSelector resourceFieldRef = 3;
 * @return {?proto.k8s.io.api.core.v1.ResourceFieldSelector}
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.prototype.getResourcefieldref = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ResourceFieldSelector} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ResourceFieldSelector, 3));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ResourceFieldSelector|undefined} value
 * @return {!proto.k8s.io.api.core.v1.DownwardAPIVolumeFile} returns this
*/
proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.prototype.setResourcefieldref = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.DownwardAPIVolumeFile} returns this
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.prototype.clearResourcefieldref = function () {
    return this.setResourcefieldref(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.prototype.hasResourcefieldref = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional int32 mode = 4;
 * @return {number}
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.prototype.getMode = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.DownwardAPIVolumeFile} returns this
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.prototype.setMode = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.DownwardAPIVolumeFile} returns this
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.prototype.clearMode = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.prototype.hasMode = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeSource.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.DownwardAPIVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.DownwardAPIVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.DownwardAPIVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.DownwardAPIVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            itemsList: jspb.Message.toObjectList(msg.getItemsList(), proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.toObject, includeInstance),
            defaultmode: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.DownwardAPIVolumeSource}
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.DownwardAPIVolumeSource;
    return proto.k8s.io.api.core.v1.DownwardAPIVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.DownwardAPIVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.DownwardAPIVolumeSource}
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.DownwardAPIVolumeFile;
                reader.readMessage(value, proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.deserializeBinaryFromReader);
                msg.addItems(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setDefaultmode(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.DownwardAPIVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.DownwardAPIVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getItemsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, proto.k8s.io.api.core.v1.DownwardAPIVolumeFile.serializeBinaryToWriter);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeInt32(2, f);
    }
};
/**
 * repeated DownwardAPIVolumeFile items = 1;
 * @return {!Array<!proto.k8s.io.api.core.v1.DownwardAPIVolumeFile>}
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeSource.prototype.getItemsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.DownwardAPIVolumeFile>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.DownwardAPIVolumeFile, 1));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.DownwardAPIVolumeFile>} value
 * @return {!proto.k8s.io.api.core.v1.DownwardAPIVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.DownwardAPIVolumeSource.prototype.setItemsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.DownwardAPIVolumeFile=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.DownwardAPIVolumeFile}
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeSource.prototype.addItems = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.k8s.io.api.core.v1.DownwardAPIVolumeFile, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.DownwardAPIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeSource.prototype.clearItemsList = function () {
    return this.setItemsList([]);
};
/**
 * optional int32 defaultMode = 2;
 * @return {number}
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeSource.prototype.getDefaultmode = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.DownwardAPIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeSource.prototype.setDefaultmode = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.DownwardAPIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeSource.prototype.clearDefaultmode = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.DownwardAPIVolumeSource.prototype.hasDefaultmode = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.EmptyDirVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.EmptyDirVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.EmptyDirVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.EmptyDirVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            medium: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            sizelimit: (f = msg.getSizelimit()) && k8s_io_apimachinery_pkg_api_resource_generated_pb.Quantity.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.EmptyDirVolumeSource}
 */
proto.k8s.io.api.core.v1.EmptyDirVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.EmptyDirVolumeSource;
    return proto.k8s.io.api.core.v1.EmptyDirVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.EmptyDirVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.EmptyDirVolumeSource}
 */
proto.k8s.io.api.core.v1.EmptyDirVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setMedium(value);
                break;
            case 2:
                var value = new k8s_io_apimachinery_pkg_api_resource_generated_pb.Quantity;
                reader.readMessage(value, k8s_io_apimachinery_pkg_api_resource_generated_pb.Quantity.deserializeBinaryFromReader);
                msg.setSizelimit(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.EmptyDirVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.EmptyDirVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.EmptyDirVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.EmptyDirVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = message.getSizelimit();
    if (f != null) {
        writer.writeMessage(2, f, k8s_io_apimachinery_pkg_api_resource_generated_pb.Quantity.serializeBinaryToWriter);
    }
};
/**
 * optional string medium = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.EmptyDirVolumeSource.prototype.getMedium = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.EmptyDirVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.EmptyDirVolumeSource.prototype.setMedium = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EmptyDirVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.EmptyDirVolumeSource.prototype.clearMedium = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EmptyDirVolumeSource.prototype.hasMedium = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional k8s.io.apimachinery.pkg.api.resource.Quantity sizeLimit = 2;
 * @return {?proto.k8s.io.apimachinery.pkg.api.resource.Quantity}
 */
proto.k8s.io.api.core.v1.EmptyDirVolumeSource.prototype.getSizelimit = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.api.resource.Quantity} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_api_resource_generated_pb.Quantity, 2));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.api.resource.Quantity|undefined} value
 * @return {!proto.k8s.io.api.core.v1.EmptyDirVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.EmptyDirVolumeSource.prototype.setSizelimit = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EmptyDirVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.EmptyDirVolumeSource.prototype.clearSizelimit = function () {
    return this.setSizelimit(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EmptyDirVolumeSource.prototype.hasSizelimit = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.EndpointAddress.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.EndpointAddress.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.EndpointAddress} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.EndpointAddress.toObject = function (includeInstance, msg) {
        var f, obj = {
            ip: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            hostname: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            nodename: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
            targetref: (f = msg.getTargetref()) && proto.k8s.io.api.core.v1.ObjectReference.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.EndpointAddress}
 */
proto.k8s.io.api.core.v1.EndpointAddress.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.EndpointAddress;
    return proto.k8s.io.api.core.v1.EndpointAddress.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.EndpointAddress} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.EndpointAddress}
 */
proto.k8s.io.api.core.v1.EndpointAddress.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setIp(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setHostname(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setNodename(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.ObjectReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ObjectReference.deserializeBinaryFromReader);
                msg.setTargetref(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.EndpointAddress.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.EndpointAddress.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.EndpointAddress} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.EndpointAddress.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
    f = message.getTargetref();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.ObjectReference.serializeBinaryToWriter);
    }
};
/**
 * optional string ip = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.EndpointAddress.prototype.getIp = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.EndpointAddress} returns this
 */
proto.k8s.io.api.core.v1.EndpointAddress.prototype.setIp = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EndpointAddress} returns this
 */
proto.k8s.io.api.core.v1.EndpointAddress.prototype.clearIp = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EndpointAddress.prototype.hasIp = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string hostname = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.EndpointAddress.prototype.getHostname = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.EndpointAddress} returns this
 */
proto.k8s.io.api.core.v1.EndpointAddress.prototype.setHostname = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EndpointAddress} returns this
 */
proto.k8s.io.api.core.v1.EndpointAddress.prototype.clearHostname = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EndpointAddress.prototype.hasHostname = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string nodeName = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.EndpointAddress.prototype.getNodename = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.EndpointAddress} returns this
 */
proto.k8s.io.api.core.v1.EndpointAddress.prototype.setNodename = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EndpointAddress} returns this
 */
proto.k8s.io.api.core.v1.EndpointAddress.prototype.clearNodename = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EndpointAddress.prototype.hasNodename = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional ObjectReference targetRef = 2;
 * @return {?proto.k8s.io.api.core.v1.ObjectReference}
 */
proto.k8s.io.api.core.v1.EndpointAddress.prototype.getTargetref = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ObjectReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ObjectReference, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ObjectReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.EndpointAddress} returns this
*/
proto.k8s.io.api.core.v1.EndpointAddress.prototype.setTargetref = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EndpointAddress} returns this
 */
proto.k8s.io.api.core.v1.EndpointAddress.prototype.clearTargetref = function () {
    return this.setTargetref(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EndpointAddress.prototype.hasTargetref = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.EndpointPort.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.EndpointPort.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.EndpointPort} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.EndpointPort.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            protocol: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            appprotocol: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.EndpointPort}
 */
proto.k8s.io.api.core.v1.EndpointPort.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.EndpointPort;
    return proto.k8s.io.api.core.v1.EndpointPort.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.EndpointPort} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.EndpointPort}
 */
proto.k8s.io.api.core.v1.EndpointPort.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setPort(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setProtocol(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setAppprotocol(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.EndpointPort.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.EndpointPort.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.EndpointPort} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.EndpointPort.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeInt32(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
};
/**
 * optional string name = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.EndpointPort.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.EndpointPort} returns this
 */
proto.k8s.io.api.core.v1.EndpointPort.prototype.setName = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EndpointPort} returns this
 */
proto.k8s.io.api.core.v1.EndpointPort.prototype.clearName = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EndpointPort.prototype.hasName = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.k8s.io.api.core.v1.EndpointPort.prototype.getPort = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.EndpointPort} returns this
 */
proto.k8s.io.api.core.v1.EndpointPort.prototype.setPort = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EndpointPort} returns this
 */
proto.k8s.io.api.core.v1.EndpointPort.prototype.clearPort = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EndpointPort.prototype.hasPort = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string protocol = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.EndpointPort.prototype.getProtocol = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.EndpointPort} returns this
 */
proto.k8s.io.api.core.v1.EndpointPort.prototype.setProtocol = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EndpointPort} returns this
 */
proto.k8s.io.api.core.v1.EndpointPort.prototype.clearProtocol = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EndpointPort.prototype.hasProtocol = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string appProtocol = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.EndpointPort.prototype.getAppprotocol = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.EndpointPort} returns this
 */
proto.k8s.io.api.core.v1.EndpointPort.prototype.setAppprotocol = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EndpointPort} returns this
 */
proto.k8s.io.api.core.v1.EndpointPort.prototype.clearAppprotocol = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EndpointPort.prototype.hasAppprotocol = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.EndpointSubset.repeatedFields_ = [1, 2, 3];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.EndpointSubset.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.EndpointSubset.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.EndpointSubset} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.EndpointSubset.toObject = function (includeInstance, msg) {
        var f, obj = {
            addressesList: jspb.Message.toObjectList(msg.getAddressesList(), proto.k8s.io.api.core.v1.EndpointAddress.toObject, includeInstance),
            notreadyaddressesList: jspb.Message.toObjectList(msg.getNotreadyaddressesList(), proto.k8s.io.api.core.v1.EndpointAddress.toObject, includeInstance),
            portsList: jspb.Message.toObjectList(msg.getPortsList(), proto.k8s.io.api.core.v1.EndpointPort.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.EndpointSubset}
 */
proto.k8s.io.api.core.v1.EndpointSubset.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.EndpointSubset;
    return proto.k8s.io.api.core.v1.EndpointSubset.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.EndpointSubset} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.EndpointSubset}
 */
proto.k8s.io.api.core.v1.EndpointSubset.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.EndpointAddress;
                reader.readMessage(value, proto.k8s.io.api.core.v1.EndpointAddress.deserializeBinaryFromReader);
                msg.addAddresses(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.EndpointAddress;
                reader.readMessage(value, proto.k8s.io.api.core.v1.EndpointAddress.deserializeBinaryFromReader);
                msg.addNotreadyaddresses(value);
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.EndpointPort;
                reader.readMessage(value, proto.k8s.io.api.core.v1.EndpointPort.deserializeBinaryFromReader);
                msg.addPorts(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.EndpointSubset.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.EndpointSubset.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.EndpointSubset} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.EndpointSubset.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getAddressesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, proto.k8s.io.api.core.v1.EndpointAddress.serializeBinaryToWriter);
    }
    f = message.getNotreadyaddressesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.EndpointAddress.serializeBinaryToWriter);
    }
    f = message.getPortsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(3, f, proto.k8s.io.api.core.v1.EndpointPort.serializeBinaryToWriter);
    }
};
/**
 * repeated EndpointAddress addresses = 1;
 * @return {!Array<!proto.k8s.io.api.core.v1.EndpointAddress>}
 */
proto.k8s.io.api.core.v1.EndpointSubset.prototype.getAddressesList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.EndpointAddress>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.EndpointAddress, 1));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.EndpointAddress>} value
 * @return {!proto.k8s.io.api.core.v1.EndpointSubset} returns this
*/
proto.k8s.io.api.core.v1.EndpointSubset.prototype.setAddressesList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.EndpointAddress=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.EndpointAddress}
 */
proto.k8s.io.api.core.v1.EndpointSubset.prototype.addAddresses = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.k8s.io.api.core.v1.EndpointAddress, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.EndpointSubset} returns this
 */
proto.k8s.io.api.core.v1.EndpointSubset.prototype.clearAddressesList = function () {
    return this.setAddressesList([]);
};
/**
 * repeated EndpointAddress notReadyAddresses = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.EndpointAddress>}
 */
proto.k8s.io.api.core.v1.EndpointSubset.prototype.getNotreadyaddressesList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.EndpointAddress>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.EndpointAddress, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.EndpointAddress>} value
 * @return {!proto.k8s.io.api.core.v1.EndpointSubset} returns this
*/
proto.k8s.io.api.core.v1.EndpointSubset.prototype.setNotreadyaddressesList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.EndpointAddress=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.EndpointAddress}
 */
proto.k8s.io.api.core.v1.EndpointSubset.prototype.addNotreadyaddresses = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.EndpointAddress, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.EndpointSubset} returns this
 */
proto.k8s.io.api.core.v1.EndpointSubset.prototype.clearNotreadyaddressesList = function () {
    return this.setNotreadyaddressesList([]);
};
/**
 * repeated EndpointPort ports = 3;
 * @return {!Array<!proto.k8s.io.api.core.v1.EndpointPort>}
 */
proto.k8s.io.api.core.v1.EndpointSubset.prototype.getPortsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.EndpointPort>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.EndpointPort, 3));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.EndpointPort>} value
 * @return {!proto.k8s.io.api.core.v1.EndpointSubset} returns this
*/
proto.k8s.io.api.core.v1.EndpointSubset.prototype.setPortsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 3, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.EndpointPort=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.EndpointPort}
 */
proto.k8s.io.api.core.v1.EndpointSubset.prototype.addPorts = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.k8s.io.api.core.v1.EndpointPort, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.EndpointSubset} returns this
 */
proto.k8s.io.api.core.v1.EndpointSubset.prototype.clearPortsList = function () {
    return this.setPortsList([]);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.Endpoints.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.Endpoints.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.Endpoints.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.Endpoints} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.Endpoints.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
            subsetsList: jspb.Message.toObjectList(msg.getSubsetsList(), proto.k8s.io.api.core.v1.EndpointSubset.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.Endpoints}
 */
proto.k8s.io.api.core.v1.Endpoints.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.Endpoints;
    return proto.k8s.io.api.core.v1.Endpoints.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.Endpoints} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.Endpoints}
 */
proto.k8s.io.api.core.v1.Endpoints.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.EndpointSubset;
                reader.readMessage(value, proto.k8s.io.api.core.v1.EndpointSubset.deserializeBinaryFromReader);
                msg.addSubsets(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.Endpoints.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.Endpoints.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.Endpoints} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.Endpoints.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter);
    }
    f = message.getSubsetsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.EndpointSubset.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.k8s.io.api.core.v1.Endpoints.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Endpoints} returns this
*/
proto.k8s.io.api.core.v1.Endpoints.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Endpoints} returns this
 */
proto.k8s.io.api.core.v1.Endpoints.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Endpoints.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated EndpointSubset subsets = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.EndpointSubset>}
 */
proto.k8s.io.api.core.v1.Endpoints.prototype.getSubsetsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.EndpointSubset>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.EndpointSubset, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.EndpointSubset>} value
 * @return {!proto.k8s.io.api.core.v1.Endpoints} returns this
*/
proto.k8s.io.api.core.v1.Endpoints.prototype.setSubsetsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.EndpointSubset=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.EndpointSubset}
 */
proto.k8s.io.api.core.v1.Endpoints.prototype.addSubsets = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.EndpointSubset, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.Endpoints} returns this
 */
proto.k8s.io.api.core.v1.Endpoints.prototype.clearSubsetsList = function () {
    return this.setSubsetsList([]);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.EndpointsList.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.EndpointsList.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.EndpointsList.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.EndpointsList} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.EndpointsList.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
            itemsList: jspb.Message.toObjectList(msg.getItemsList(), proto.k8s.io.api.core.v1.Endpoints.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.EndpointsList}
 */
proto.k8s.io.api.core.v1.EndpointsList.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.EndpointsList;
    return proto.k8s.io.api.core.v1.EndpointsList.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.EndpointsList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.EndpointsList}
 */
proto.k8s.io.api.core.v1.EndpointsList.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.Endpoints;
                reader.readMessage(value, proto.k8s.io.api.core.v1.Endpoints.deserializeBinaryFromReader);
                msg.addItems(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.EndpointsList.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.EndpointsList.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.EndpointsList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.EndpointsList.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter);
    }
    f = message.getItemsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.Endpoints.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.k8s.io.api.core.v1.EndpointsList.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.EndpointsList} returns this
*/
proto.k8s.io.api.core.v1.EndpointsList.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EndpointsList} returns this
 */
proto.k8s.io.api.core.v1.EndpointsList.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EndpointsList.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated Endpoints items = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.Endpoints>}
 */
proto.k8s.io.api.core.v1.EndpointsList.prototype.getItemsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.Endpoints>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.Endpoints, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.Endpoints>} value
 * @return {!proto.k8s.io.api.core.v1.EndpointsList} returns this
*/
proto.k8s.io.api.core.v1.EndpointsList.prototype.setItemsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.Endpoints=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.Endpoints}
 */
proto.k8s.io.api.core.v1.EndpointsList.prototype.addItems = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.Endpoints, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.EndpointsList} returns this
 */
proto.k8s.io.api.core.v1.EndpointsList.prototype.clearItemsList = function () {
    return this.setItemsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.EnvFromSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.EnvFromSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.EnvFromSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.EnvFromSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            prefix: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            configmapref: (f = msg.getConfigmapref()) && proto.k8s.io.api.core.v1.ConfigMapEnvSource.toObject(includeInstance, f),
            secretref: (f = msg.getSecretref()) && proto.k8s.io.api.core.v1.SecretEnvSource.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.EnvFromSource}
 */
proto.k8s.io.api.core.v1.EnvFromSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.EnvFromSource;
    return proto.k8s.io.api.core.v1.EnvFromSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.EnvFromSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.EnvFromSource}
 */
proto.k8s.io.api.core.v1.EnvFromSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setPrefix(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.ConfigMapEnvSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ConfigMapEnvSource.deserializeBinaryFromReader);
                msg.setConfigmapref(value);
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.SecretEnvSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.SecretEnvSource.deserializeBinaryFromReader);
                msg.setSecretref(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.EnvFromSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.EnvFromSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.EnvFromSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.EnvFromSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = message.getConfigmapref();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.ConfigMapEnvSource.serializeBinaryToWriter);
    }
    f = message.getSecretref();
    if (f != null) {
        writer.writeMessage(3, f, proto.k8s.io.api.core.v1.SecretEnvSource.serializeBinaryToWriter);
    }
};
/**
 * optional string prefix = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.EnvFromSource.prototype.getPrefix = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.EnvFromSource} returns this
 */
proto.k8s.io.api.core.v1.EnvFromSource.prototype.setPrefix = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EnvFromSource} returns this
 */
proto.k8s.io.api.core.v1.EnvFromSource.prototype.clearPrefix = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EnvFromSource.prototype.hasPrefix = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional ConfigMapEnvSource configMapRef = 2;
 * @return {?proto.k8s.io.api.core.v1.ConfigMapEnvSource}
 */
proto.k8s.io.api.core.v1.EnvFromSource.prototype.getConfigmapref = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ConfigMapEnvSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ConfigMapEnvSource, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ConfigMapEnvSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.EnvFromSource} returns this
*/
proto.k8s.io.api.core.v1.EnvFromSource.prototype.setConfigmapref = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EnvFromSource} returns this
 */
proto.k8s.io.api.core.v1.EnvFromSource.prototype.clearConfigmapref = function () {
    return this.setConfigmapref(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EnvFromSource.prototype.hasConfigmapref = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional SecretEnvSource secretRef = 3;
 * @return {?proto.k8s.io.api.core.v1.SecretEnvSource}
 */
proto.k8s.io.api.core.v1.EnvFromSource.prototype.getSecretref = function () {
    return /** @type{?proto.k8s.io.api.core.v1.SecretEnvSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.SecretEnvSource, 3));
};
/**
 * @param {?proto.k8s.io.api.core.v1.SecretEnvSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.EnvFromSource} returns this
*/
proto.k8s.io.api.core.v1.EnvFromSource.prototype.setSecretref = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EnvFromSource} returns this
 */
proto.k8s.io.api.core.v1.EnvFromSource.prototype.clearSecretref = function () {
    return this.setSecretref(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EnvFromSource.prototype.hasSecretref = function () {
    return jspb.Message.getField(this, 3) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.EnvVar.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.EnvVar.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.EnvVar} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.EnvVar.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            value: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            valuefrom: (f = msg.getValuefrom()) && proto.k8s.io.api.core.v1.EnvVarSource.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.EnvVar}
 */
proto.k8s.io.api.core.v1.EnvVar.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.EnvVar;
    return proto.k8s.io.api.core.v1.EnvVar.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.EnvVar} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.EnvVar}
 */
proto.k8s.io.api.core.v1.EnvVar.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setValue(value);
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.EnvVarSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.EnvVarSource.deserializeBinaryFromReader);
                msg.setValuefrom(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.EnvVar.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.EnvVar.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.EnvVar} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.EnvVar.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = message.getValuefrom();
    if (f != null) {
        writer.writeMessage(3, f, proto.k8s.io.api.core.v1.EnvVarSource.serializeBinaryToWriter);
    }
};
/**
 * optional string name = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.EnvVar.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.EnvVar} returns this
 */
proto.k8s.io.api.core.v1.EnvVar.prototype.setName = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EnvVar} returns this
 */
proto.k8s.io.api.core.v1.EnvVar.prototype.clearName = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EnvVar.prototype.hasName = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string value = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.EnvVar.prototype.getValue = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.EnvVar} returns this
 */
proto.k8s.io.api.core.v1.EnvVar.prototype.setValue = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EnvVar} returns this
 */
proto.k8s.io.api.core.v1.EnvVar.prototype.clearValue = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EnvVar.prototype.hasValue = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional EnvVarSource valueFrom = 3;
 * @return {?proto.k8s.io.api.core.v1.EnvVarSource}
 */
proto.k8s.io.api.core.v1.EnvVar.prototype.getValuefrom = function () {
    return /** @type{?proto.k8s.io.api.core.v1.EnvVarSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.EnvVarSource, 3));
};
/**
 * @param {?proto.k8s.io.api.core.v1.EnvVarSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.EnvVar} returns this
*/
proto.k8s.io.api.core.v1.EnvVar.prototype.setValuefrom = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EnvVar} returns this
 */
proto.k8s.io.api.core.v1.EnvVar.prototype.clearValuefrom = function () {
    return this.setValuefrom(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EnvVar.prototype.hasValuefrom = function () {
    return jspb.Message.getField(this, 3) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.EnvVarSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.EnvVarSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.EnvVarSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.EnvVarSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            fieldref: (f = msg.getFieldref()) && proto.k8s.io.api.core.v1.ObjectFieldSelector.toObject(includeInstance, f),
            resourcefieldref: (f = msg.getResourcefieldref()) && proto.k8s.io.api.core.v1.ResourceFieldSelector.toObject(includeInstance, f),
            configmapkeyref: (f = msg.getConfigmapkeyref()) && proto.k8s.io.api.core.v1.ConfigMapKeySelector.toObject(includeInstance, f),
            secretkeyref: (f = msg.getSecretkeyref()) && proto.k8s.io.api.core.v1.SecretKeySelector.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.EnvVarSource}
 */
proto.k8s.io.api.core.v1.EnvVarSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.EnvVarSource;
    return proto.k8s.io.api.core.v1.EnvVarSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.EnvVarSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.EnvVarSource}
 */
proto.k8s.io.api.core.v1.EnvVarSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.ObjectFieldSelector;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ObjectFieldSelector.deserializeBinaryFromReader);
                msg.setFieldref(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.ResourceFieldSelector;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ResourceFieldSelector.deserializeBinaryFromReader);
                msg.setResourcefieldref(value);
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.ConfigMapKeySelector;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ConfigMapKeySelector.deserializeBinaryFromReader);
                msg.setConfigmapkeyref(value);
                break;
            case 4:
                var value = new proto.k8s.io.api.core.v1.SecretKeySelector;
                reader.readMessage(value, proto.k8s.io.api.core.v1.SecretKeySelector.deserializeBinaryFromReader);
                msg.setSecretkeyref(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.EnvVarSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.EnvVarSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.EnvVarSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.EnvVarSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getFieldref();
    if (f != null) {
        writer.writeMessage(1, f, proto.k8s.io.api.core.v1.ObjectFieldSelector.serializeBinaryToWriter);
    }
    f = message.getResourcefieldref();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.ResourceFieldSelector.serializeBinaryToWriter);
    }
    f = message.getConfigmapkeyref();
    if (f != null) {
        writer.writeMessage(3, f, proto.k8s.io.api.core.v1.ConfigMapKeySelector.serializeBinaryToWriter);
    }
    f = message.getSecretkeyref();
    if (f != null) {
        writer.writeMessage(4, f, proto.k8s.io.api.core.v1.SecretKeySelector.serializeBinaryToWriter);
    }
};
/**
 * optional ObjectFieldSelector fieldRef = 1;
 * @return {?proto.k8s.io.api.core.v1.ObjectFieldSelector}
 */
proto.k8s.io.api.core.v1.EnvVarSource.prototype.getFieldref = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ObjectFieldSelector} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ObjectFieldSelector, 1));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ObjectFieldSelector|undefined} value
 * @return {!proto.k8s.io.api.core.v1.EnvVarSource} returns this
*/
proto.k8s.io.api.core.v1.EnvVarSource.prototype.setFieldref = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EnvVarSource} returns this
 */
proto.k8s.io.api.core.v1.EnvVarSource.prototype.clearFieldref = function () {
    return this.setFieldref(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EnvVarSource.prototype.hasFieldref = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional ResourceFieldSelector resourceFieldRef = 2;
 * @return {?proto.k8s.io.api.core.v1.ResourceFieldSelector}
 */
proto.k8s.io.api.core.v1.EnvVarSource.prototype.getResourcefieldref = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ResourceFieldSelector} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ResourceFieldSelector, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ResourceFieldSelector|undefined} value
 * @return {!proto.k8s.io.api.core.v1.EnvVarSource} returns this
*/
proto.k8s.io.api.core.v1.EnvVarSource.prototype.setResourcefieldref = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EnvVarSource} returns this
 */
proto.k8s.io.api.core.v1.EnvVarSource.prototype.clearResourcefieldref = function () {
    return this.setResourcefieldref(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EnvVarSource.prototype.hasResourcefieldref = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional ConfigMapKeySelector configMapKeyRef = 3;
 * @return {?proto.k8s.io.api.core.v1.ConfigMapKeySelector}
 */
proto.k8s.io.api.core.v1.EnvVarSource.prototype.getConfigmapkeyref = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ConfigMapKeySelector} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ConfigMapKeySelector, 3));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ConfigMapKeySelector|undefined} value
 * @return {!proto.k8s.io.api.core.v1.EnvVarSource} returns this
*/
proto.k8s.io.api.core.v1.EnvVarSource.prototype.setConfigmapkeyref = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EnvVarSource} returns this
 */
proto.k8s.io.api.core.v1.EnvVarSource.prototype.clearConfigmapkeyref = function () {
    return this.setConfigmapkeyref(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EnvVarSource.prototype.hasConfigmapkeyref = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional SecretKeySelector secretKeyRef = 4;
 * @return {?proto.k8s.io.api.core.v1.SecretKeySelector}
 */
proto.k8s.io.api.core.v1.EnvVarSource.prototype.getSecretkeyref = function () {
    return /** @type{?proto.k8s.io.api.core.v1.SecretKeySelector} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.SecretKeySelector, 4));
};
/**
 * @param {?proto.k8s.io.api.core.v1.SecretKeySelector|undefined} value
 * @return {!proto.k8s.io.api.core.v1.EnvVarSource} returns this
*/
proto.k8s.io.api.core.v1.EnvVarSource.prototype.setSecretkeyref = function (value) {
    return jspb.Message.setWrapperField(this, 4, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EnvVarSource} returns this
 */
proto.k8s.io.api.core.v1.EnvVarSource.prototype.clearSecretkeyref = function () {
    return this.setSecretkeyref(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EnvVarSource.prototype.hasSecretkeyref = function () {
    return jspb.Message.getField(this, 4) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.EphemeralContainer.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.EphemeralContainer.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.EphemeralContainer} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.EphemeralContainer.toObject = function (includeInstance, msg) {
        var f, obj = {
            ephemeralcontainercommon: (f = msg.getEphemeralcontainercommon()) && proto.k8s.io.api.core.v1.EphemeralContainerCommon.toObject(includeInstance, f),
            targetcontainername: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainer}
 */
proto.k8s.io.api.core.v1.EphemeralContainer.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.EphemeralContainer;
    return proto.k8s.io.api.core.v1.EphemeralContainer.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.EphemeralContainer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainer}
 */
proto.k8s.io.api.core.v1.EphemeralContainer.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.EphemeralContainerCommon;
                reader.readMessage(value, proto.k8s.io.api.core.v1.EphemeralContainerCommon.deserializeBinaryFromReader);
                msg.setEphemeralcontainercommon(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setTargetcontainername(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.EphemeralContainer.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.EphemeralContainer.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.EphemeralContainer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.EphemeralContainer.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getEphemeralcontainercommon();
    if (f != null) {
        writer.writeMessage(1, f, proto.k8s.io.api.core.v1.EphemeralContainerCommon.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
};
/**
 * optional EphemeralContainerCommon ephemeralContainerCommon = 1;
 * @return {?proto.k8s.io.api.core.v1.EphemeralContainerCommon}
 */
proto.k8s.io.api.core.v1.EphemeralContainer.prototype.getEphemeralcontainercommon = function () {
    return /** @type{?proto.k8s.io.api.core.v1.EphemeralContainerCommon} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.EphemeralContainerCommon, 1));
};
/**
 * @param {?proto.k8s.io.api.core.v1.EphemeralContainerCommon|undefined} value
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainer} returns this
*/
proto.k8s.io.api.core.v1.EphemeralContainer.prototype.setEphemeralcontainercommon = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainer} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainer.prototype.clearEphemeralcontainercommon = function () {
    return this.setEphemeralcontainercommon(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EphemeralContainer.prototype.hasEphemeralcontainercommon = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string targetContainerName = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.EphemeralContainer.prototype.getTargetcontainername = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainer} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainer.prototype.setTargetcontainername = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainer} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainer.prototype.clearTargetcontainername = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EphemeralContainer.prototype.hasTargetcontainername = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.repeatedFields_ = [3, 4, 6, 19, 7, 9, 21];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.EphemeralContainerCommon.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.EphemeralContainerCommon.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            image: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            commandList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
            argsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
            workingdir: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
            portsList: jspb.Message.toObjectList(msg.getPortsList(), proto.k8s.io.api.core.v1.ContainerPort.toObject, includeInstance),
            envfromList: jspb.Message.toObjectList(msg.getEnvfromList(), proto.k8s.io.api.core.v1.EnvFromSource.toObject, includeInstance),
            envList: jspb.Message.toObjectList(msg.getEnvList(), proto.k8s.io.api.core.v1.EnvVar.toObject, includeInstance),
            resources: (f = msg.getResources()) && proto.k8s.io.api.core.v1.ResourceRequirements.toObject(includeInstance, f),
            volumemountsList: jspb.Message.toObjectList(msg.getVolumemountsList(), proto.k8s.io.api.core.v1.VolumeMount.toObject, includeInstance),
            volumedevicesList: jspb.Message.toObjectList(msg.getVolumedevicesList(), proto.k8s.io.api.core.v1.VolumeDevice.toObject, includeInstance),
            livenessprobe: (f = msg.getLivenessprobe()) && proto.k8s.io.api.core.v1.Probe.toObject(includeInstance, f),
            readinessprobe: (f = msg.getReadinessprobe()) && proto.k8s.io.api.core.v1.Probe.toObject(includeInstance, f),
            startupprobe: (f = msg.getStartupprobe()) && proto.k8s.io.api.core.v1.Probe.toObject(includeInstance, f),
            lifecycle: (f = msg.getLifecycle()) && proto.k8s.io.api.core.v1.Lifecycle.toObject(includeInstance, f),
            terminationmessagepath: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
            terminationmessagepolicy: (f = jspb.Message.getField(msg, 20)) == null ? undefined : f,
            imagepullpolicy: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
            securitycontext: (f = msg.getSecuritycontext()) && proto.k8s.io.api.core.v1.SecurityContext.toObject(includeInstance, f),
            stdin: (f = jspb.Message.getBooleanField(msg, 16)) == null ? undefined : f,
            stdinonce: (f = jspb.Message.getBooleanField(msg, 17)) == null ? undefined : f,
            tty: (f = jspb.Message.getBooleanField(msg, 18)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.EphemeralContainerCommon;
    return proto.k8s.io.api.core.v1.EphemeralContainerCommon.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setImage(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.addCommand(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.addArgs(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setWorkingdir(value);
                break;
            case 6:
                var value = new proto.k8s.io.api.core.v1.ContainerPort;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ContainerPort.deserializeBinaryFromReader);
                msg.addPorts(value);
                break;
            case 19:
                var value = new proto.k8s.io.api.core.v1.EnvFromSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.EnvFromSource.deserializeBinaryFromReader);
                msg.addEnvfrom(value);
                break;
            case 7:
                var value = new proto.k8s.io.api.core.v1.EnvVar;
                reader.readMessage(value, proto.k8s.io.api.core.v1.EnvVar.deserializeBinaryFromReader);
                msg.addEnv(value);
                break;
            case 8:
                var value = new proto.k8s.io.api.core.v1.ResourceRequirements;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ResourceRequirements.deserializeBinaryFromReader);
                msg.setResources(value);
                break;
            case 9:
                var value = new proto.k8s.io.api.core.v1.VolumeMount;
                reader.readMessage(value, proto.k8s.io.api.core.v1.VolumeMount.deserializeBinaryFromReader);
                msg.addVolumemounts(value);
                break;
            case 21:
                var value = new proto.k8s.io.api.core.v1.VolumeDevice;
                reader.readMessage(value, proto.k8s.io.api.core.v1.VolumeDevice.deserializeBinaryFromReader);
                msg.addVolumedevices(value);
                break;
            case 10:
                var value = new proto.k8s.io.api.core.v1.Probe;
                reader.readMessage(value, proto.k8s.io.api.core.v1.Probe.deserializeBinaryFromReader);
                msg.setLivenessprobe(value);
                break;
            case 11:
                var value = new proto.k8s.io.api.core.v1.Probe;
                reader.readMessage(value, proto.k8s.io.api.core.v1.Probe.deserializeBinaryFromReader);
                msg.setReadinessprobe(value);
                break;
            case 22:
                var value = new proto.k8s.io.api.core.v1.Probe;
                reader.readMessage(value, proto.k8s.io.api.core.v1.Probe.deserializeBinaryFromReader);
                msg.setStartupprobe(value);
                break;
            case 12:
                var value = new proto.k8s.io.api.core.v1.Lifecycle;
                reader.readMessage(value, proto.k8s.io.api.core.v1.Lifecycle.deserializeBinaryFromReader);
                msg.setLifecycle(value);
                break;
            case 13:
                var value = /** @type {string} */ (reader.readString());
                msg.setTerminationmessagepath(value);
                break;
            case 20:
                var value = /** @type {string} */ (reader.readString());
                msg.setTerminationmessagepolicy(value);
                break;
            case 14:
                var value = /** @type {string} */ (reader.readString());
                msg.setImagepullpolicy(value);
                break;
            case 15:
                var value = new proto.k8s.io.api.core.v1.SecurityContext;
                reader.readMessage(value, proto.k8s.io.api.core.v1.SecurityContext.deserializeBinaryFromReader);
                msg.setSecuritycontext(value);
                break;
            case 16:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setStdin(value);
                break;
            case 17:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setStdinonce(value);
                break;
            case 18:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setTty(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.EphemeralContainerCommon.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = message.getCommandList();
    if (f.length > 0) {
        writer.writeRepeatedString(3, f);
    }
    f = message.getArgsList();
    if (f.length > 0) {
        writer.writeRepeatedString(4, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeString(5, f);
    }
    f = message.getPortsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(6, f, proto.k8s.io.api.core.v1.ContainerPort.serializeBinaryToWriter);
    }
    f = message.getEnvfromList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(19, f, proto.k8s.io.api.core.v1.EnvFromSource.serializeBinaryToWriter);
    }
    f = message.getEnvList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(7, f, proto.k8s.io.api.core.v1.EnvVar.serializeBinaryToWriter);
    }
    f = message.getResources();
    if (f != null) {
        writer.writeMessage(8, f, proto.k8s.io.api.core.v1.ResourceRequirements.serializeBinaryToWriter);
    }
    f = message.getVolumemountsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(9, f, proto.k8s.io.api.core.v1.VolumeMount.serializeBinaryToWriter);
    }
    f = message.getVolumedevicesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(21, f, proto.k8s.io.api.core.v1.VolumeDevice.serializeBinaryToWriter);
    }
    f = message.getLivenessprobe();
    if (f != null) {
        writer.writeMessage(10, f, proto.k8s.io.api.core.v1.Probe.serializeBinaryToWriter);
    }
    f = message.getReadinessprobe();
    if (f != null) {
        writer.writeMessage(11, f, proto.k8s.io.api.core.v1.Probe.serializeBinaryToWriter);
    }
    f = message.getStartupprobe();
    if (f != null) {
        writer.writeMessage(22, f, proto.k8s.io.api.core.v1.Probe.serializeBinaryToWriter);
    }
    f = message.getLifecycle();
    if (f != null) {
        writer.writeMessage(12, f, proto.k8s.io.api.core.v1.Lifecycle.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 13));
    if (f != null) {
        writer.writeString(13, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 20));
    if (f != null) {
        writer.writeString(20, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 14));
    if (f != null) {
        writer.writeString(14, f);
    }
    f = message.getSecuritycontext();
    if (f != null) {
        writer.writeMessage(15, f, proto.k8s.io.api.core.v1.SecurityContext.serializeBinaryToWriter);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 16));
    if (f != null) {
        writer.writeBool(16, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 17));
    if (f != null) {
        writer.writeBool(17, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 18));
    if (f != null) {
        writer.writeBool(18, f);
    }
};
/**
 * optional string name = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.setName = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.clearName = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.hasName = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string image = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.getImage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.setImage = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.clearImage = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.hasImage = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * repeated string command = 3;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.getCommandList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.setCommandList = function (value) {
    return jspb.Message.setField(this, 3, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.addCommand = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.clearCommandList = function () {
    return this.setCommandList([]);
};
/**
 * repeated string args = 4;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.getArgsList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.setArgsList = function (value) {
    return jspb.Message.setField(this, 4, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.addArgs = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.clearArgsList = function () {
    return this.setArgsList([]);
};
/**
 * optional string workingDir = 5;
 * @return {string}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.getWorkingdir = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.setWorkingdir = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.clearWorkingdir = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.hasWorkingdir = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * repeated ContainerPort ports = 6;
 * @return {!Array<!proto.k8s.io.api.core.v1.ContainerPort>}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.getPortsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.ContainerPort>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.ContainerPort, 6));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.ContainerPort>} value
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
*/
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.setPortsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 6, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.ContainerPort=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ContainerPort}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.addPorts = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.k8s.io.api.core.v1.ContainerPort, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.clearPortsList = function () {
    return this.setPortsList([]);
};
/**
 * repeated EnvFromSource envFrom = 19;
 * @return {!Array<!proto.k8s.io.api.core.v1.EnvFromSource>}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.getEnvfromList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.EnvFromSource>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.EnvFromSource, 19));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.EnvFromSource>} value
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
*/
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.setEnvfromList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 19, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.EnvFromSource=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.EnvFromSource}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.addEnvfrom = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 19, opt_value, proto.k8s.io.api.core.v1.EnvFromSource, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.clearEnvfromList = function () {
    return this.setEnvfromList([]);
};
/**
 * repeated EnvVar env = 7;
 * @return {!Array<!proto.k8s.io.api.core.v1.EnvVar>}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.getEnvList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.EnvVar>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.EnvVar, 7));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.EnvVar>} value
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
*/
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.setEnvList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 7, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.EnvVar=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.EnvVar}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.addEnv = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.k8s.io.api.core.v1.EnvVar, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.clearEnvList = function () {
    return this.setEnvList([]);
};
/**
 * optional ResourceRequirements resources = 8;
 * @return {?proto.k8s.io.api.core.v1.ResourceRequirements}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.getResources = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ResourceRequirements} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ResourceRequirements, 8));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ResourceRequirements|undefined} value
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
*/
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.setResources = function (value) {
    return jspb.Message.setWrapperField(this, 8, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.clearResources = function () {
    return this.setResources(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.hasResources = function () {
    return jspb.Message.getField(this, 8) != null;
};
/**
 * repeated VolumeMount volumeMounts = 9;
 * @return {!Array<!proto.k8s.io.api.core.v1.VolumeMount>}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.getVolumemountsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.VolumeMount>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.VolumeMount, 9));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.VolumeMount>} value
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
*/
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.setVolumemountsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 9, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.VolumeMount=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.VolumeMount}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.addVolumemounts = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.k8s.io.api.core.v1.VolumeMount, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.clearVolumemountsList = function () {
    return this.setVolumemountsList([]);
};
/**
 * repeated VolumeDevice volumeDevices = 21;
 * @return {!Array<!proto.k8s.io.api.core.v1.VolumeDevice>}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.getVolumedevicesList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.VolumeDevice>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.VolumeDevice, 21));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.VolumeDevice>} value
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
*/
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.setVolumedevicesList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 21, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.VolumeDevice=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.VolumeDevice}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.addVolumedevices = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 21, opt_value, proto.k8s.io.api.core.v1.VolumeDevice, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.clearVolumedevicesList = function () {
    return this.setVolumedevicesList([]);
};
/**
 * optional Probe livenessProbe = 10;
 * @return {?proto.k8s.io.api.core.v1.Probe}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.getLivenessprobe = function () {
    return /** @type{?proto.k8s.io.api.core.v1.Probe} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.Probe, 10));
};
/**
 * @param {?proto.k8s.io.api.core.v1.Probe|undefined} value
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
*/
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.setLivenessprobe = function (value) {
    return jspb.Message.setWrapperField(this, 10, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.clearLivenessprobe = function () {
    return this.setLivenessprobe(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.hasLivenessprobe = function () {
    return jspb.Message.getField(this, 10) != null;
};
/**
 * optional Probe readinessProbe = 11;
 * @return {?proto.k8s.io.api.core.v1.Probe}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.getReadinessprobe = function () {
    return /** @type{?proto.k8s.io.api.core.v1.Probe} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.Probe, 11));
};
/**
 * @param {?proto.k8s.io.api.core.v1.Probe|undefined} value
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
*/
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.setReadinessprobe = function (value) {
    return jspb.Message.setWrapperField(this, 11, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.clearReadinessprobe = function () {
    return this.setReadinessprobe(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.hasReadinessprobe = function () {
    return jspb.Message.getField(this, 11) != null;
};
/**
 * optional Probe startupProbe = 22;
 * @return {?proto.k8s.io.api.core.v1.Probe}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.getStartupprobe = function () {
    return /** @type{?proto.k8s.io.api.core.v1.Probe} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.Probe, 22));
};
/**
 * @param {?proto.k8s.io.api.core.v1.Probe|undefined} value
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
*/
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.setStartupprobe = function (value) {
    return jspb.Message.setWrapperField(this, 22, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.clearStartupprobe = function () {
    return this.setStartupprobe(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.hasStartupprobe = function () {
    return jspb.Message.getField(this, 22) != null;
};
/**
 * optional Lifecycle lifecycle = 12;
 * @return {?proto.k8s.io.api.core.v1.Lifecycle}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.getLifecycle = function () {
    return /** @type{?proto.k8s.io.api.core.v1.Lifecycle} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.Lifecycle, 12));
};
/**
 * @param {?proto.k8s.io.api.core.v1.Lifecycle|undefined} value
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
*/
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.setLifecycle = function (value) {
    return jspb.Message.setWrapperField(this, 12, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.clearLifecycle = function () {
    return this.setLifecycle(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.hasLifecycle = function () {
    return jspb.Message.getField(this, 12) != null;
};
/**
 * optional string terminationMessagePath = 13;
 * @return {string}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.getTerminationmessagepath = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.setTerminationmessagepath = function (value) {
    return jspb.Message.setField(this, 13, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.clearTerminationmessagepath = function () {
    return jspb.Message.setField(this, 13, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.hasTerminationmessagepath = function () {
    return jspb.Message.getField(this, 13) != null;
};
/**
 * optional string terminationMessagePolicy = 20;
 * @return {string}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.getTerminationmessagepolicy = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.setTerminationmessagepolicy = function (value) {
    return jspb.Message.setField(this, 20, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.clearTerminationmessagepolicy = function () {
    return jspb.Message.setField(this, 20, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.hasTerminationmessagepolicy = function () {
    return jspb.Message.getField(this, 20) != null;
};
/**
 * optional string imagePullPolicy = 14;
 * @return {string}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.getImagepullpolicy = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.setImagepullpolicy = function (value) {
    return jspb.Message.setField(this, 14, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.clearImagepullpolicy = function () {
    return jspb.Message.setField(this, 14, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.hasImagepullpolicy = function () {
    return jspb.Message.getField(this, 14) != null;
};
/**
 * optional SecurityContext securityContext = 15;
 * @return {?proto.k8s.io.api.core.v1.SecurityContext}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.getSecuritycontext = function () {
    return /** @type{?proto.k8s.io.api.core.v1.SecurityContext} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.SecurityContext, 15));
};
/**
 * @param {?proto.k8s.io.api.core.v1.SecurityContext|undefined} value
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
*/
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.setSecuritycontext = function (value) {
    return jspb.Message.setWrapperField(this, 15, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.clearSecuritycontext = function () {
    return this.setSecuritycontext(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.hasSecuritycontext = function () {
    return jspb.Message.getField(this, 15) != null;
};
/**
 * optional bool stdin = 16;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.getStdin = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.setStdin = function (value) {
    return jspb.Message.setField(this, 16, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.clearStdin = function () {
    return jspb.Message.setField(this, 16, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.hasStdin = function () {
    return jspb.Message.getField(this, 16) != null;
};
/**
 * optional bool stdinOnce = 17;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.getStdinonce = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.setStdinonce = function (value) {
    return jspb.Message.setField(this, 17, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.clearStdinonce = function () {
    return jspb.Message.setField(this, 17, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.hasStdinonce = function () {
    return jspb.Message.getField(this, 17) != null;
};
/**
 * optional bool tty = 18;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.getTty = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.setTty = function (value) {
    return jspb.Message.setField(this, 18, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainerCommon} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.clearTty = function () {
    return jspb.Message.setField(this, 18, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EphemeralContainerCommon.prototype.hasTty = function () {
    return jspb.Message.getField(this, 18) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.EphemeralContainers.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.EphemeralContainers.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.EphemeralContainers.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.EphemeralContainers} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.EphemeralContainers.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
            ephemeralcontainersList: jspb.Message.toObjectList(msg.getEphemeralcontainersList(), proto.k8s.io.api.core.v1.EphemeralContainer.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainers}
 */
proto.k8s.io.api.core.v1.EphemeralContainers.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.EphemeralContainers;
    return proto.k8s.io.api.core.v1.EphemeralContainers.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.EphemeralContainers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainers}
 */
proto.k8s.io.api.core.v1.EphemeralContainers.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.EphemeralContainer;
                reader.readMessage(value, proto.k8s.io.api.core.v1.EphemeralContainer.deserializeBinaryFromReader);
                msg.addEphemeralcontainers(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.EphemeralContainers.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.EphemeralContainers.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.EphemeralContainers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.EphemeralContainers.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter);
    }
    f = message.getEphemeralcontainersList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.EphemeralContainer.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.k8s.io.api.core.v1.EphemeralContainers.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainers} returns this
*/
proto.k8s.io.api.core.v1.EphemeralContainers.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainers} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainers.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EphemeralContainers.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated EphemeralContainer ephemeralContainers = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.EphemeralContainer>}
 */
proto.k8s.io.api.core.v1.EphemeralContainers.prototype.getEphemeralcontainersList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.EphemeralContainer>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.EphemeralContainer, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.EphemeralContainer>} value
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainers} returns this
*/
proto.k8s.io.api.core.v1.EphemeralContainers.prototype.setEphemeralcontainersList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.EphemeralContainer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainer}
 */
proto.k8s.io.api.core.v1.EphemeralContainers.prototype.addEphemeralcontainers = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.EphemeralContainer, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainers} returns this
 */
proto.k8s.io.api.core.v1.EphemeralContainers.prototype.clearEphemeralcontainersList = function () {
    return this.setEphemeralcontainersList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.EphemeralVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.EphemeralVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.EphemeralVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.EphemeralVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            volumeclaimtemplate: (f = msg.getVolumeclaimtemplate()) && proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate.toObject(includeInstance, f),
            readonly: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.EphemeralVolumeSource}
 */
proto.k8s.io.api.core.v1.EphemeralVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.EphemeralVolumeSource;
    return proto.k8s.io.api.core.v1.EphemeralVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.EphemeralVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.EphemeralVolumeSource}
 */
proto.k8s.io.api.core.v1.EphemeralVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate.deserializeBinaryFromReader);
                msg.setVolumeclaimtemplate(value);
                break;
            case 2:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.EphemeralVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.EphemeralVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.EphemeralVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.EphemeralVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getVolumeclaimtemplate();
    if (f != null) {
        writer.writeMessage(1, f, proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate.serializeBinaryToWriter);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeBool(2, f);
    }
};
/**
 * optional PersistentVolumeClaimTemplate volumeClaimTemplate = 1;
 * @return {?proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate}
 */
proto.k8s.io.api.core.v1.EphemeralVolumeSource.prototype.getVolumeclaimtemplate = function () {
    return /** @type{?proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate, 1));
};
/**
 * @param {?proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate|undefined} value
 * @return {!proto.k8s.io.api.core.v1.EphemeralVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.EphemeralVolumeSource.prototype.setVolumeclaimtemplate = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EphemeralVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.EphemeralVolumeSource.prototype.clearVolumeclaimtemplate = function () {
    return this.setVolumeclaimtemplate(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EphemeralVolumeSource.prototype.hasVolumeclaimtemplate = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional bool readOnly = 2;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EphemeralVolumeSource.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.EphemeralVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.EphemeralVolumeSource.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EphemeralVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.EphemeralVolumeSource.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EphemeralVolumeSource.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.Event.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.Event.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.Event} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.Event.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
            involvedobject: (f = msg.getInvolvedobject()) && proto.k8s.io.api.core.v1.ObjectReference.toObject(includeInstance, f),
            reason: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            message: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
            source: (f = msg.getSource()) && proto.k8s.io.api.core.v1.EventSource.toObject(includeInstance, f),
            firsttimestamp: (f = msg.getFirsttimestamp()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
            lasttimestamp: (f = msg.getLasttimestamp()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
            count: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
            type: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
            eventtime: (f = msg.getEventtime()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.MicroTime.toObject(includeInstance, f),
            series: (f = msg.getSeries()) && proto.k8s.io.api.core.v1.EventSeries.toObject(includeInstance, f),
            action: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
            related: (f = msg.getRelated()) && proto.k8s.io.api.core.v1.ObjectReference.toObject(includeInstance, f),
            reportingcomponent: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
            reportinginstance: (f = jspb.Message.getField(msg, 15)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.Event}
 */
proto.k8s.io.api.core.v1.Event.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.Event;
    return proto.k8s.io.api.core.v1.Event.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.Event}
 */
proto.k8s.io.api.core.v1.Event.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.ObjectReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ObjectReference.deserializeBinaryFromReader);
                msg.setInvolvedobject(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setReason(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setMessage(value);
                break;
            case 5:
                var value = new proto.k8s.io.api.core.v1.EventSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.EventSource.deserializeBinaryFromReader);
                msg.setSource(value);
                break;
            case 6:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
                msg.setFirsttimestamp(value);
                break;
            case 7:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
                msg.setLasttimestamp(value);
                break;
            case 8:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setCount(value);
                break;
            case 9:
                var value = /** @type {string} */ (reader.readString());
                msg.setType(value);
                break;
            case 10:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.MicroTime;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.MicroTime.deserializeBinaryFromReader);
                msg.setEventtime(value);
                break;
            case 11:
                var value = new proto.k8s.io.api.core.v1.EventSeries;
                reader.readMessage(value, proto.k8s.io.api.core.v1.EventSeries.deserializeBinaryFromReader);
                msg.setSeries(value);
                break;
            case 12:
                var value = /** @type {string} */ (reader.readString());
                msg.setAction(value);
                break;
            case 13:
                var value = new proto.k8s.io.api.core.v1.ObjectReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ObjectReference.deserializeBinaryFromReader);
                msg.setRelated(value);
                break;
            case 14:
                var value = /** @type {string} */ (reader.readString());
                msg.setReportingcomponent(value);
                break;
            case 15:
                var value = /** @type {string} */ (reader.readString());
                msg.setReportinginstance(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.Event.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.Event.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.Event.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter);
    }
    f = message.getInvolvedobject();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.ObjectReference.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
    f = message.getSource();
    if (f != null) {
        writer.writeMessage(5, f, proto.k8s.io.api.core.v1.EventSource.serializeBinaryToWriter);
    }
    f = message.getFirsttimestamp();
    if (f != null) {
        writer.writeMessage(6, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter);
    }
    f = message.getLasttimestamp();
    if (f != null) {
        writer.writeMessage(7, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 8));
    if (f != null) {
        writer.writeInt32(8, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 9));
    if (f != null) {
        writer.writeString(9, f);
    }
    f = message.getEventtime();
    if (f != null) {
        writer.writeMessage(10, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.MicroTime.serializeBinaryToWriter);
    }
    f = message.getSeries();
    if (f != null) {
        writer.writeMessage(11, f, proto.k8s.io.api.core.v1.EventSeries.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 12));
    if (f != null) {
        writer.writeString(12, f);
    }
    f = message.getRelated();
    if (f != null) {
        writer.writeMessage(13, f, proto.k8s.io.api.core.v1.ObjectReference.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 14));
    if (f != null) {
        writer.writeString(14, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 15));
    if (f != null) {
        writer.writeString(15, f);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.k8s.io.api.core.v1.Event.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
*/
proto.k8s.io.api.core.v1.Event.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
 */
proto.k8s.io.api.core.v1.Event.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Event.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional ObjectReference involvedObject = 2;
 * @return {?proto.k8s.io.api.core.v1.ObjectReference}
 */
proto.k8s.io.api.core.v1.Event.prototype.getInvolvedobject = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ObjectReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ObjectReference, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ObjectReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
*/
proto.k8s.io.api.core.v1.Event.prototype.setInvolvedobject = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
 */
proto.k8s.io.api.core.v1.Event.prototype.clearInvolvedobject = function () {
    return this.setInvolvedobject(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Event.prototype.hasInvolvedobject = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string reason = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.Event.prototype.getReason = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
 */
proto.k8s.io.api.core.v1.Event.prototype.setReason = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
 */
proto.k8s.io.api.core.v1.Event.prototype.clearReason = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Event.prototype.hasReason = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string message = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.Event.prototype.getMessage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
 */
proto.k8s.io.api.core.v1.Event.prototype.setMessage = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
 */
proto.k8s.io.api.core.v1.Event.prototype.clearMessage = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Event.prototype.hasMessage = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional EventSource source = 5;
 * @return {?proto.k8s.io.api.core.v1.EventSource}
 */
proto.k8s.io.api.core.v1.Event.prototype.getSource = function () {
    return /** @type{?proto.k8s.io.api.core.v1.EventSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.EventSource, 5));
};
/**
 * @param {?proto.k8s.io.api.core.v1.EventSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
*/
proto.k8s.io.api.core.v1.Event.prototype.setSource = function (value) {
    return jspb.Message.setWrapperField(this, 5, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
 */
proto.k8s.io.api.core.v1.Event.prototype.clearSource = function () {
    return this.setSource(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Event.prototype.hasSource = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time firstTimestamp = 6;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.k8s.io.api.core.v1.Event.prototype.getFirsttimestamp = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 6));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
*/
proto.k8s.io.api.core.v1.Event.prototype.setFirsttimestamp = function (value) {
    return jspb.Message.setWrapperField(this, 6, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
 */
proto.k8s.io.api.core.v1.Event.prototype.clearFirsttimestamp = function () {
    return this.setFirsttimestamp(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Event.prototype.hasFirsttimestamp = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTimestamp = 7;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.k8s.io.api.core.v1.Event.prototype.getLasttimestamp = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 7));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
*/
proto.k8s.io.api.core.v1.Event.prototype.setLasttimestamp = function (value) {
    return jspb.Message.setWrapperField(this, 7, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
 */
proto.k8s.io.api.core.v1.Event.prototype.clearLasttimestamp = function () {
    return this.setLasttimestamp(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Event.prototype.hasLasttimestamp = function () {
    return jspb.Message.getField(this, 7) != null;
};
/**
 * optional int32 count = 8;
 * @return {number}
 */
proto.k8s.io.api.core.v1.Event.prototype.getCount = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
 */
proto.k8s.io.api.core.v1.Event.prototype.setCount = function (value) {
    return jspb.Message.setField(this, 8, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
 */
proto.k8s.io.api.core.v1.Event.prototype.clearCount = function () {
    return jspb.Message.setField(this, 8, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Event.prototype.hasCount = function () {
    return jspb.Message.getField(this, 8) != null;
};
/**
 * optional string type = 9;
 * @return {string}
 */
proto.k8s.io.api.core.v1.Event.prototype.getType = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
 */
proto.k8s.io.api.core.v1.Event.prototype.setType = function (value) {
    return jspb.Message.setField(this, 9, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
 */
proto.k8s.io.api.core.v1.Event.prototype.clearType = function () {
    return jspb.Message.setField(this, 9, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Event.prototype.hasType = function () {
    return jspb.Message.getField(this, 9) != null;
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.MicroTime eventTime = 10;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.MicroTime}
 */
proto.k8s.io.api.core.v1.Event.prototype.getEventtime = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.MicroTime} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.MicroTime, 10));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.MicroTime|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
*/
proto.k8s.io.api.core.v1.Event.prototype.setEventtime = function (value) {
    return jspb.Message.setWrapperField(this, 10, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
 */
proto.k8s.io.api.core.v1.Event.prototype.clearEventtime = function () {
    return this.setEventtime(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Event.prototype.hasEventtime = function () {
    return jspb.Message.getField(this, 10) != null;
};
/**
 * optional EventSeries series = 11;
 * @return {?proto.k8s.io.api.core.v1.EventSeries}
 */
proto.k8s.io.api.core.v1.Event.prototype.getSeries = function () {
    return /** @type{?proto.k8s.io.api.core.v1.EventSeries} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.EventSeries, 11));
};
/**
 * @param {?proto.k8s.io.api.core.v1.EventSeries|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
*/
proto.k8s.io.api.core.v1.Event.prototype.setSeries = function (value) {
    return jspb.Message.setWrapperField(this, 11, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
 */
proto.k8s.io.api.core.v1.Event.prototype.clearSeries = function () {
    return this.setSeries(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Event.prototype.hasSeries = function () {
    return jspb.Message.getField(this, 11) != null;
};
/**
 * optional string action = 12;
 * @return {string}
 */
proto.k8s.io.api.core.v1.Event.prototype.getAction = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
 */
proto.k8s.io.api.core.v1.Event.prototype.setAction = function (value) {
    return jspb.Message.setField(this, 12, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
 */
proto.k8s.io.api.core.v1.Event.prototype.clearAction = function () {
    return jspb.Message.setField(this, 12, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Event.prototype.hasAction = function () {
    return jspb.Message.getField(this, 12) != null;
};
/**
 * optional ObjectReference related = 13;
 * @return {?proto.k8s.io.api.core.v1.ObjectReference}
 */
proto.k8s.io.api.core.v1.Event.prototype.getRelated = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ObjectReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ObjectReference, 13));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ObjectReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
*/
proto.k8s.io.api.core.v1.Event.prototype.setRelated = function (value) {
    return jspb.Message.setWrapperField(this, 13, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
 */
proto.k8s.io.api.core.v1.Event.prototype.clearRelated = function () {
    return this.setRelated(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Event.prototype.hasRelated = function () {
    return jspb.Message.getField(this, 13) != null;
};
/**
 * optional string reportingComponent = 14;
 * @return {string}
 */
proto.k8s.io.api.core.v1.Event.prototype.getReportingcomponent = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
 */
proto.k8s.io.api.core.v1.Event.prototype.setReportingcomponent = function (value) {
    return jspb.Message.setField(this, 14, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
 */
proto.k8s.io.api.core.v1.Event.prototype.clearReportingcomponent = function () {
    return jspb.Message.setField(this, 14, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Event.prototype.hasReportingcomponent = function () {
    return jspb.Message.getField(this, 14) != null;
};
/**
 * optional string reportingInstance = 15;
 * @return {string}
 */
proto.k8s.io.api.core.v1.Event.prototype.getReportinginstance = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
 */
proto.k8s.io.api.core.v1.Event.prototype.setReportinginstance = function (value) {
    return jspb.Message.setField(this, 15, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Event} returns this
 */
proto.k8s.io.api.core.v1.Event.prototype.clearReportinginstance = function () {
    return jspb.Message.setField(this, 15, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Event.prototype.hasReportinginstance = function () {
    return jspb.Message.getField(this, 15) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.EventList.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.EventList.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.EventList.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.EventList} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.EventList.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
            itemsList: jspb.Message.toObjectList(msg.getItemsList(), proto.k8s.io.api.core.v1.Event.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.EventList}
 */
proto.k8s.io.api.core.v1.EventList.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.EventList;
    return proto.k8s.io.api.core.v1.EventList.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.EventList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.EventList}
 */
proto.k8s.io.api.core.v1.EventList.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.Event;
                reader.readMessage(value, proto.k8s.io.api.core.v1.Event.deserializeBinaryFromReader);
                msg.addItems(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.EventList.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.EventList.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.EventList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.EventList.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter);
    }
    f = message.getItemsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.Event.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.k8s.io.api.core.v1.EventList.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.EventList} returns this
*/
proto.k8s.io.api.core.v1.EventList.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EventList} returns this
 */
proto.k8s.io.api.core.v1.EventList.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EventList.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated Event items = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.Event>}
 */
proto.k8s.io.api.core.v1.EventList.prototype.getItemsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.Event>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.Event, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.Event>} value
 * @return {!proto.k8s.io.api.core.v1.EventList} returns this
*/
proto.k8s.io.api.core.v1.EventList.prototype.setItemsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.Event=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.Event}
 */
proto.k8s.io.api.core.v1.EventList.prototype.addItems = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.Event, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.EventList} returns this
 */
proto.k8s.io.api.core.v1.EventList.prototype.clearItemsList = function () {
    return this.setItemsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.EventSeries.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.EventSeries.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.EventSeries} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.EventSeries.toObject = function (includeInstance, msg) {
        var f, obj = {
            count: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            lastobservedtime: (f = msg.getLastobservedtime()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.MicroTime.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.EventSeries}
 */
proto.k8s.io.api.core.v1.EventSeries.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.EventSeries;
    return proto.k8s.io.api.core.v1.EventSeries.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.EventSeries} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.EventSeries}
 */
proto.k8s.io.api.core.v1.EventSeries.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setCount(value);
                break;
            case 2:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.MicroTime;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.MicroTime.deserializeBinaryFromReader);
                msg.setLastobservedtime(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.EventSeries.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.EventSeries.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.EventSeries} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.EventSeries.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {number} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeInt32(1, f);
    }
    f = message.getLastobservedtime();
    if (f != null) {
        writer.writeMessage(2, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.MicroTime.serializeBinaryToWriter);
    }
};
/**
 * optional int32 count = 1;
 * @return {number}
 */
proto.k8s.io.api.core.v1.EventSeries.prototype.getCount = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.EventSeries} returns this
 */
proto.k8s.io.api.core.v1.EventSeries.prototype.setCount = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EventSeries} returns this
 */
proto.k8s.io.api.core.v1.EventSeries.prototype.clearCount = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EventSeries.prototype.hasCount = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.MicroTime lastObservedTime = 2;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.MicroTime}
 */
proto.k8s.io.api.core.v1.EventSeries.prototype.getLastobservedtime = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.MicroTime} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.MicroTime, 2));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.MicroTime|undefined} value
 * @return {!proto.k8s.io.api.core.v1.EventSeries} returns this
*/
proto.k8s.io.api.core.v1.EventSeries.prototype.setLastobservedtime = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EventSeries} returns this
 */
proto.k8s.io.api.core.v1.EventSeries.prototype.clearLastobservedtime = function () {
    return this.setLastobservedtime(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EventSeries.prototype.hasLastobservedtime = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.EventSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.EventSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.EventSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.EventSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            component: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            host: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.EventSource}
 */
proto.k8s.io.api.core.v1.EventSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.EventSource;
    return proto.k8s.io.api.core.v1.EventSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.EventSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.EventSource}
 */
proto.k8s.io.api.core.v1.EventSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setComponent(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setHost(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.EventSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.EventSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.EventSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.EventSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
};
/**
 * optional string component = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.EventSource.prototype.getComponent = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.EventSource} returns this
 */
proto.k8s.io.api.core.v1.EventSource.prototype.setComponent = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EventSource} returns this
 */
proto.k8s.io.api.core.v1.EventSource.prototype.clearComponent = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EventSource.prototype.hasComponent = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string host = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.EventSource.prototype.getHost = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.EventSource} returns this
 */
proto.k8s.io.api.core.v1.EventSource.prototype.setHost = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.EventSource} returns this
 */
proto.k8s.io.api.core.v1.EventSource.prototype.clearHost = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.EventSource.prototype.hasHost = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.ExecAction.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ExecAction.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ExecAction.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ExecAction} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ExecAction.toObject = function (includeInstance, msg) {
        var f, obj = {
            commandList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ExecAction}
 */
proto.k8s.io.api.core.v1.ExecAction.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ExecAction;
    return proto.k8s.io.api.core.v1.ExecAction.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ExecAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ExecAction}
 */
proto.k8s.io.api.core.v1.ExecAction.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.addCommand(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ExecAction.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ExecAction.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ExecAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ExecAction.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getCommandList();
    if (f.length > 0) {
        writer.writeRepeatedString(1, f);
    }
};
/**
 * repeated string command = 1;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.ExecAction.prototype.getCommandList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.ExecAction} returns this
 */
proto.k8s.io.api.core.v1.ExecAction.prototype.setCommandList = function (value) {
    return jspb.Message.setField(this, 1, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ExecAction} returns this
 */
proto.k8s.io.api.core.v1.ExecAction.prototype.addCommand = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.ExecAction} returns this
 */
proto.k8s.io.api.core.v1.ExecAction.prototype.clearCommandList = function () {
    return this.setCommandList([]);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.FCVolumeSource.repeatedFields_ = [1, 5];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.FCVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.FCVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.FCVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.FCVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            targetwwnsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
            lun: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            fstype: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            readonly: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
            wwidsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.FCVolumeSource}
 */
proto.k8s.io.api.core.v1.FCVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.FCVolumeSource;
    return proto.k8s.io.api.core.v1.FCVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.FCVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.FCVolumeSource}
 */
proto.k8s.io.api.core.v1.FCVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.addTargetwwns(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setLun(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setFstype(value);
                break;
            case 4:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.addWwids(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.FCVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.FCVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.FCVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.FCVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getTargetwwnsList();
    if (f.length > 0) {
        writer.writeRepeatedString(1, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeInt32(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeBool(4, f);
    }
    f = message.getWwidsList();
    if (f.length > 0) {
        writer.writeRepeatedString(5, f);
    }
};
/**
 * repeated string targetWWNs = 1;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.FCVolumeSource.prototype.getTargetwwnsList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.FCVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FCVolumeSource.prototype.setTargetwwnsList = function (value) {
    return jspb.Message.setField(this, 1, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.FCVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FCVolumeSource.prototype.addTargetwwns = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.FCVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FCVolumeSource.prototype.clearTargetwwnsList = function () {
    return this.setTargetwwnsList([]);
};
/**
 * optional int32 lun = 2;
 * @return {number}
 */
proto.k8s.io.api.core.v1.FCVolumeSource.prototype.getLun = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.FCVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FCVolumeSource.prototype.setLun = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.FCVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FCVolumeSource.prototype.clearLun = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.FCVolumeSource.prototype.hasLun = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string fsType = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.FCVolumeSource.prototype.getFstype = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.FCVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FCVolumeSource.prototype.setFstype = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.FCVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FCVolumeSource.prototype.clearFstype = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.FCVolumeSource.prototype.hasFstype = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional bool readOnly = 4;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.FCVolumeSource.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.FCVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FCVolumeSource.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.FCVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FCVolumeSource.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.FCVolumeSource.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * repeated string wwids = 5;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.FCVolumeSource.prototype.getWwidsList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.FCVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FCVolumeSource.prototype.setWwidsList = function (value) {
    return jspb.Message.setField(this, 5, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.FCVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FCVolumeSource.prototype.addWwids = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.FCVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FCVolumeSource.prototype.clearWwidsList = function () {
    return this.setWwidsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.FlexPersistentVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            driver: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            fstype: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            secretref: (f = msg.getSecretref()) && proto.k8s.io.api.core.v1.SecretReference.toObject(includeInstance, f),
            readonly: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
            optionsMap: (f = msg.getOptionsMap()) ? f.toObject(includeInstance, undefined) : []
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.FlexPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.FlexPersistentVolumeSource;
    return proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.FlexPersistentVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.FlexPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setDriver(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setFstype(value);
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.SecretReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.SecretReference.deserializeBinaryFromReader);
                msg.setSecretref(value);
                break;
            case 4:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            case 5:
                var value = msg.getOptionsMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
                });
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.FlexPersistentVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = message.getSecretref();
    if (f != null) {
        writer.writeMessage(3, f, proto.k8s.io.api.core.v1.SecretReference.serializeBinaryToWriter);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeBool(4, f);
    }
    f = message.getOptionsMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
    }
};
/**
 * optional string driver = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.prototype.getDriver = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.FlexPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.prototype.setDriver = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.FlexPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.prototype.clearDriver = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.prototype.hasDriver = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string fsType = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.prototype.getFstype = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.FlexPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.prototype.setFstype = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.FlexPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.prototype.clearFstype = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.prototype.hasFstype = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional SecretReference secretRef = 3;
 * @return {?proto.k8s.io.api.core.v1.SecretReference}
 */
proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.prototype.getSecretref = function () {
    return /** @type{?proto.k8s.io.api.core.v1.SecretReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.SecretReference, 3));
};
/**
 * @param {?proto.k8s.io.api.core.v1.SecretReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.FlexPersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.prototype.setSecretref = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.FlexPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.prototype.clearSecretref = function () {
    return this.setSecretref(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.prototype.hasSecretref = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional bool readOnly = 4;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.FlexPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.FlexPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * map<string, string> options = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.prototype.getOptionsMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,string>} */ (jspb.Message.getMapField(this, 5, opt_noLazyCreate, null));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.k8s.io.api.core.v1.FlexPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.prototype.clearOptionsMap = function () {
    this.getOptionsMap().clear();
    return this;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.FlexVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.FlexVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.FlexVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.FlexVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            driver: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            fstype: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            secretref: (f = msg.getSecretref()) && proto.k8s.io.api.core.v1.LocalObjectReference.toObject(includeInstance, f),
            readonly: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
            optionsMap: (f = msg.getOptionsMap()) ? f.toObject(includeInstance, undefined) : []
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.FlexVolumeSource}
 */
proto.k8s.io.api.core.v1.FlexVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.FlexVolumeSource;
    return proto.k8s.io.api.core.v1.FlexVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.FlexVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.FlexVolumeSource}
 */
proto.k8s.io.api.core.v1.FlexVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setDriver(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setFstype(value);
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.LocalObjectReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.LocalObjectReference.deserializeBinaryFromReader);
                msg.setSecretref(value);
                break;
            case 4:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            case 5:
                var value = msg.getOptionsMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
                });
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.FlexVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.FlexVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.FlexVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.FlexVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = message.getSecretref();
    if (f != null) {
        writer.writeMessage(3, f, proto.k8s.io.api.core.v1.LocalObjectReference.serializeBinaryToWriter);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeBool(4, f);
    }
    f = message.getOptionsMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
    }
};
/**
 * optional string driver = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.FlexVolumeSource.prototype.getDriver = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.FlexVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FlexVolumeSource.prototype.setDriver = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.FlexVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FlexVolumeSource.prototype.clearDriver = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.FlexVolumeSource.prototype.hasDriver = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string fsType = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.FlexVolumeSource.prototype.getFstype = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.FlexVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FlexVolumeSource.prototype.setFstype = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.FlexVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FlexVolumeSource.prototype.clearFstype = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.FlexVolumeSource.prototype.hasFstype = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional LocalObjectReference secretRef = 3;
 * @return {?proto.k8s.io.api.core.v1.LocalObjectReference}
 */
proto.k8s.io.api.core.v1.FlexVolumeSource.prototype.getSecretref = function () {
    return /** @type{?proto.k8s.io.api.core.v1.LocalObjectReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.LocalObjectReference, 3));
};
/**
 * @param {?proto.k8s.io.api.core.v1.LocalObjectReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.FlexVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.FlexVolumeSource.prototype.setSecretref = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.FlexVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FlexVolumeSource.prototype.clearSecretref = function () {
    return this.setSecretref(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.FlexVolumeSource.prototype.hasSecretref = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional bool readOnly = 4;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.FlexVolumeSource.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.FlexVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FlexVolumeSource.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.FlexVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FlexVolumeSource.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.FlexVolumeSource.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * map<string, string> options = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.k8s.io.api.core.v1.FlexVolumeSource.prototype.getOptionsMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,string>} */ (jspb.Message.getMapField(this, 5, opt_noLazyCreate, null));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.k8s.io.api.core.v1.FlexVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FlexVolumeSource.prototype.clearOptionsMap = function () {
    this.getOptionsMap().clear();
    return this;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.FlockerVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.FlockerVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.FlockerVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.FlockerVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            datasetname: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            datasetuuid: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.FlockerVolumeSource}
 */
proto.k8s.io.api.core.v1.FlockerVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.FlockerVolumeSource;
    return proto.k8s.io.api.core.v1.FlockerVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.FlockerVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.FlockerVolumeSource}
 */
proto.k8s.io.api.core.v1.FlockerVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setDatasetname(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setDatasetuuid(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.FlockerVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.FlockerVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.FlockerVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.FlockerVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
};
/**
 * optional string datasetName = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.FlockerVolumeSource.prototype.getDatasetname = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.FlockerVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FlockerVolumeSource.prototype.setDatasetname = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.FlockerVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FlockerVolumeSource.prototype.clearDatasetname = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.FlockerVolumeSource.prototype.hasDatasetname = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string datasetUUID = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.FlockerVolumeSource.prototype.getDatasetuuid = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.FlockerVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FlockerVolumeSource.prototype.setDatasetuuid = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.FlockerVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.FlockerVolumeSource.prototype.clearDatasetuuid = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.FlockerVolumeSource.prototype.hasDatasetuuid = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            pdname: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            fstype: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            partition: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            readonly: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource}
 */
proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource;
    return proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource}
 */
proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setPdname(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setFstype(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setPartition(value);
                break;
            case 4:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeInt32(3, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeBool(4, f);
    }
};
/**
 * optional string pdName = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.prototype.getPdname = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.prototype.setPdname = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.prototype.clearPdname = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.prototype.hasPdname = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string fsType = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.prototype.getFstype = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.prototype.setFstype = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.prototype.clearFstype = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.prototype.hasFstype = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional int32 partition = 3;
 * @return {number}
 */
proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.prototype.getPartition = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.prototype.setPartition = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.prototype.clearPartition = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.prototype.hasPartition = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional bool readOnly = 4;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 4) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.GitRepoVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.GitRepoVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.GitRepoVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.GitRepoVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            repository: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            revision: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            directory: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.GitRepoVolumeSource}
 */
proto.k8s.io.api.core.v1.GitRepoVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.GitRepoVolumeSource;
    return proto.k8s.io.api.core.v1.GitRepoVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.GitRepoVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.GitRepoVolumeSource}
 */
proto.k8s.io.api.core.v1.GitRepoVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setRepository(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setRevision(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setDirectory(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.GitRepoVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.GitRepoVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.GitRepoVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.GitRepoVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
};
/**
 * optional string repository = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.GitRepoVolumeSource.prototype.getRepository = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.GitRepoVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.GitRepoVolumeSource.prototype.setRepository = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.GitRepoVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.GitRepoVolumeSource.prototype.clearRepository = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.GitRepoVolumeSource.prototype.hasRepository = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string revision = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.GitRepoVolumeSource.prototype.getRevision = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.GitRepoVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.GitRepoVolumeSource.prototype.setRevision = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.GitRepoVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.GitRepoVolumeSource.prototype.clearRevision = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.GitRepoVolumeSource.prototype.hasRevision = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string directory = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.GitRepoVolumeSource.prototype.getDirectory = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.GitRepoVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.GitRepoVolumeSource.prototype.setDirectory = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.GitRepoVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.GitRepoVolumeSource.prototype.clearDirectory = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.GitRepoVolumeSource.prototype.hasDirectory = function () {
    return jspb.Message.getField(this, 3) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            endpoints: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            path: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            readonly: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
            endpointsnamespace: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource;
    return proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setEndpoints(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setPath(value);
                break;
            case 3:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setEndpointsnamespace(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeBool(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
};
/**
 * optional string endpoints = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.prototype.getEndpoints = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.prototype.setEndpoints = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.prototype.clearEndpoints = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.prototype.hasEndpoints = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string path = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.prototype.getPath = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.prototype.setPath = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.prototype.clearPath = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.prototype.hasPath = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional bool readOnly = 3;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string endpointsNamespace = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.prototype.getEndpointsnamespace = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.prototype.setEndpointsnamespace = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.prototype.clearEndpointsnamespace = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.prototype.hasEndpointsnamespace = function () {
    return jspb.Message.getField(this, 4) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.GlusterfsVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.GlusterfsVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.GlusterfsVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.GlusterfsVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            endpoints: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            path: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            readonly: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.GlusterfsVolumeSource}
 */
proto.k8s.io.api.core.v1.GlusterfsVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.GlusterfsVolumeSource;
    return proto.k8s.io.api.core.v1.GlusterfsVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.GlusterfsVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.GlusterfsVolumeSource}
 */
proto.k8s.io.api.core.v1.GlusterfsVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setEndpoints(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setPath(value);
                break;
            case 3:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.GlusterfsVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.GlusterfsVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.GlusterfsVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.GlusterfsVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeBool(3, f);
    }
};
/**
 * optional string endpoints = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.GlusterfsVolumeSource.prototype.getEndpoints = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.GlusterfsVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.GlusterfsVolumeSource.prototype.setEndpoints = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.GlusterfsVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.GlusterfsVolumeSource.prototype.clearEndpoints = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.GlusterfsVolumeSource.prototype.hasEndpoints = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string path = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.GlusterfsVolumeSource.prototype.getPath = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.GlusterfsVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.GlusterfsVolumeSource.prototype.setPath = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.GlusterfsVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.GlusterfsVolumeSource.prototype.clearPath = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.GlusterfsVolumeSource.prototype.hasPath = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional bool readOnly = 3;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.GlusterfsVolumeSource.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.GlusterfsVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.GlusterfsVolumeSource.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.GlusterfsVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.GlusterfsVolumeSource.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.GlusterfsVolumeSource.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.HTTPGetAction.repeatedFields_ = [5];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.HTTPGetAction.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.HTTPGetAction.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.HTTPGetAction} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.HTTPGetAction.toObject = function (includeInstance, msg) {
        var f, obj = {
            path: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            port: (f = msg.getPort()) && k8s_io_apimachinery_pkg_util_intstr_generated_pb.IntOrString.toObject(includeInstance, f),
            host: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            scheme: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
            httpheadersList: jspb.Message.toObjectList(msg.getHttpheadersList(), proto.k8s.io.api.core.v1.HTTPHeader.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.HTTPGetAction}
 */
proto.k8s.io.api.core.v1.HTTPGetAction.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.HTTPGetAction;
    return proto.k8s.io.api.core.v1.HTTPGetAction.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.HTTPGetAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.HTTPGetAction}
 */
proto.k8s.io.api.core.v1.HTTPGetAction.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setPath(value);
                break;
            case 2:
                var value = new k8s_io_apimachinery_pkg_util_intstr_generated_pb.IntOrString;
                reader.readMessage(value, k8s_io_apimachinery_pkg_util_intstr_generated_pb.IntOrString.deserializeBinaryFromReader);
                msg.setPort(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setHost(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setScheme(value);
                break;
            case 5:
                var value = new proto.k8s.io.api.core.v1.HTTPHeader;
                reader.readMessage(value, proto.k8s.io.api.core.v1.HTTPHeader.deserializeBinaryFromReader);
                msg.addHttpheaders(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.HTTPGetAction.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.HTTPGetAction.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.HTTPGetAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.HTTPGetAction.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = message.getPort();
    if (f != null) {
        writer.writeMessage(2, f, k8s_io_apimachinery_pkg_util_intstr_generated_pb.IntOrString.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
    f = message.getHttpheadersList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(5, f, proto.k8s.io.api.core.v1.HTTPHeader.serializeBinaryToWriter);
    }
};
/**
 * optional string path = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.HTTPGetAction.prototype.getPath = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.HTTPGetAction} returns this
 */
proto.k8s.io.api.core.v1.HTTPGetAction.prototype.setPath = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.HTTPGetAction} returns this
 */
proto.k8s.io.api.core.v1.HTTPGetAction.prototype.clearPath = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.HTTPGetAction.prototype.hasPath = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional k8s.io.apimachinery.pkg.util.intstr.IntOrString port = 2;
 * @return {?proto.k8s.io.apimachinery.pkg.util.intstr.IntOrString}
 */
proto.k8s.io.api.core.v1.HTTPGetAction.prototype.getPort = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.util.intstr.IntOrString} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_util_intstr_generated_pb.IntOrString, 2));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.util.intstr.IntOrString|undefined} value
 * @return {!proto.k8s.io.api.core.v1.HTTPGetAction} returns this
*/
proto.k8s.io.api.core.v1.HTTPGetAction.prototype.setPort = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.HTTPGetAction} returns this
 */
proto.k8s.io.api.core.v1.HTTPGetAction.prototype.clearPort = function () {
    return this.setPort(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.HTTPGetAction.prototype.hasPort = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string host = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.HTTPGetAction.prototype.getHost = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.HTTPGetAction} returns this
 */
proto.k8s.io.api.core.v1.HTTPGetAction.prototype.setHost = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.HTTPGetAction} returns this
 */
proto.k8s.io.api.core.v1.HTTPGetAction.prototype.clearHost = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.HTTPGetAction.prototype.hasHost = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string scheme = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.HTTPGetAction.prototype.getScheme = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.HTTPGetAction} returns this
 */
proto.k8s.io.api.core.v1.HTTPGetAction.prototype.setScheme = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.HTTPGetAction} returns this
 */
proto.k8s.io.api.core.v1.HTTPGetAction.prototype.clearScheme = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.HTTPGetAction.prototype.hasScheme = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * repeated HTTPHeader httpHeaders = 5;
 * @return {!Array<!proto.k8s.io.api.core.v1.HTTPHeader>}
 */
proto.k8s.io.api.core.v1.HTTPGetAction.prototype.getHttpheadersList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.HTTPHeader>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.HTTPHeader, 5));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.HTTPHeader>} value
 * @return {!proto.k8s.io.api.core.v1.HTTPGetAction} returns this
*/
proto.k8s.io.api.core.v1.HTTPGetAction.prototype.setHttpheadersList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 5, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.HTTPHeader=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.HTTPHeader}
 */
proto.k8s.io.api.core.v1.HTTPGetAction.prototype.addHttpheaders = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.k8s.io.api.core.v1.HTTPHeader, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.HTTPGetAction} returns this
 */
proto.k8s.io.api.core.v1.HTTPGetAction.prototype.clearHttpheadersList = function () {
    return this.setHttpheadersList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.HTTPHeader.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.HTTPHeader.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.HTTPHeader} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.HTTPHeader.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            value: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.HTTPHeader}
 */
proto.k8s.io.api.core.v1.HTTPHeader.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.HTTPHeader;
    return proto.k8s.io.api.core.v1.HTTPHeader.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.HTTPHeader} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.HTTPHeader}
 */
proto.k8s.io.api.core.v1.HTTPHeader.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setValue(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.HTTPHeader.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.HTTPHeader.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.HTTPHeader} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.HTTPHeader.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
};
/**
 * optional string name = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.HTTPHeader.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.HTTPHeader} returns this
 */
proto.k8s.io.api.core.v1.HTTPHeader.prototype.setName = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.HTTPHeader} returns this
 */
proto.k8s.io.api.core.v1.HTTPHeader.prototype.clearName = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.HTTPHeader.prototype.hasName = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string value = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.HTTPHeader.prototype.getValue = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.HTTPHeader} returns this
 */
proto.k8s.io.api.core.v1.HTTPHeader.prototype.setValue = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.HTTPHeader} returns this
 */
proto.k8s.io.api.core.v1.HTTPHeader.prototype.clearValue = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.HTTPHeader.prototype.hasValue = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.Handler.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.Handler.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.Handler} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.Handler.toObject = function (includeInstance, msg) {
        var f, obj = {
            exec: (f = msg.getExec()) && proto.k8s.io.api.core.v1.ExecAction.toObject(includeInstance, f),
            httpget: (f = msg.getHttpget()) && proto.k8s.io.api.core.v1.HTTPGetAction.toObject(includeInstance, f),
            tcpsocket: (f = msg.getTcpsocket()) && proto.k8s.io.api.core.v1.TCPSocketAction.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.Handler}
 */
proto.k8s.io.api.core.v1.Handler.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.Handler;
    return proto.k8s.io.api.core.v1.Handler.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.Handler} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.Handler}
 */
proto.k8s.io.api.core.v1.Handler.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.ExecAction;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ExecAction.deserializeBinaryFromReader);
                msg.setExec(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.HTTPGetAction;
                reader.readMessage(value, proto.k8s.io.api.core.v1.HTTPGetAction.deserializeBinaryFromReader);
                msg.setHttpget(value);
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.TCPSocketAction;
                reader.readMessage(value, proto.k8s.io.api.core.v1.TCPSocketAction.deserializeBinaryFromReader);
                msg.setTcpsocket(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.Handler.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.Handler.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.Handler} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.Handler.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getExec();
    if (f != null) {
        writer.writeMessage(1, f, proto.k8s.io.api.core.v1.ExecAction.serializeBinaryToWriter);
    }
    f = message.getHttpget();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.HTTPGetAction.serializeBinaryToWriter);
    }
    f = message.getTcpsocket();
    if (f != null) {
        writer.writeMessage(3, f, proto.k8s.io.api.core.v1.TCPSocketAction.serializeBinaryToWriter);
    }
};
/**
 * optional ExecAction exec = 1;
 * @return {?proto.k8s.io.api.core.v1.ExecAction}
 */
proto.k8s.io.api.core.v1.Handler.prototype.getExec = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ExecAction} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ExecAction, 1));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ExecAction|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Handler} returns this
*/
proto.k8s.io.api.core.v1.Handler.prototype.setExec = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Handler} returns this
 */
proto.k8s.io.api.core.v1.Handler.prototype.clearExec = function () {
    return this.setExec(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Handler.prototype.hasExec = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional HTTPGetAction httpGet = 2;
 * @return {?proto.k8s.io.api.core.v1.HTTPGetAction}
 */
proto.k8s.io.api.core.v1.Handler.prototype.getHttpget = function () {
    return /** @type{?proto.k8s.io.api.core.v1.HTTPGetAction} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.HTTPGetAction, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.HTTPGetAction|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Handler} returns this
*/
proto.k8s.io.api.core.v1.Handler.prototype.setHttpget = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Handler} returns this
 */
proto.k8s.io.api.core.v1.Handler.prototype.clearHttpget = function () {
    return this.setHttpget(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Handler.prototype.hasHttpget = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional TCPSocketAction tcpSocket = 3;
 * @return {?proto.k8s.io.api.core.v1.TCPSocketAction}
 */
proto.k8s.io.api.core.v1.Handler.prototype.getTcpsocket = function () {
    return /** @type{?proto.k8s.io.api.core.v1.TCPSocketAction} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.TCPSocketAction, 3));
};
/**
 * @param {?proto.k8s.io.api.core.v1.TCPSocketAction|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Handler} returns this
*/
proto.k8s.io.api.core.v1.Handler.prototype.setTcpsocket = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Handler} returns this
 */
proto.k8s.io.api.core.v1.Handler.prototype.clearTcpsocket = function () {
    return this.setTcpsocket(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Handler.prototype.hasTcpsocket = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.HostAlias.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.HostAlias.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.HostAlias.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.HostAlias} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.HostAlias.toObject = function (includeInstance, msg) {
        var f, obj = {
            ip: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            hostnamesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.HostAlias}
 */
proto.k8s.io.api.core.v1.HostAlias.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.HostAlias;
    return proto.k8s.io.api.core.v1.HostAlias.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.HostAlias} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.HostAlias}
 */
proto.k8s.io.api.core.v1.HostAlias.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setIp(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.addHostnames(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.HostAlias.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.HostAlias.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.HostAlias} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.HostAlias.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = message.getHostnamesList();
    if (f.length > 0) {
        writer.writeRepeatedString(2, f);
    }
};
/**
 * optional string ip = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.HostAlias.prototype.getIp = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.HostAlias} returns this
 */
proto.k8s.io.api.core.v1.HostAlias.prototype.setIp = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.HostAlias} returns this
 */
proto.k8s.io.api.core.v1.HostAlias.prototype.clearIp = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.HostAlias.prototype.hasIp = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated string hostnames = 2;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.HostAlias.prototype.getHostnamesList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.HostAlias} returns this
 */
proto.k8s.io.api.core.v1.HostAlias.prototype.setHostnamesList = function (value) {
    return jspb.Message.setField(this, 2, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.HostAlias} returns this
 */
proto.k8s.io.api.core.v1.HostAlias.prototype.addHostnames = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.HostAlias} returns this
 */
proto.k8s.io.api.core.v1.HostAlias.prototype.clearHostnamesList = function () {
    return this.setHostnamesList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.HostPathVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.HostPathVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.HostPathVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.HostPathVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            path: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            type: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.HostPathVolumeSource}
 */
proto.k8s.io.api.core.v1.HostPathVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.HostPathVolumeSource;
    return proto.k8s.io.api.core.v1.HostPathVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.HostPathVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.HostPathVolumeSource}
 */
proto.k8s.io.api.core.v1.HostPathVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setPath(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setType(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.HostPathVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.HostPathVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.HostPathVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.HostPathVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
};
/**
 * optional string path = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.HostPathVolumeSource.prototype.getPath = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.HostPathVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.HostPathVolumeSource.prototype.setPath = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.HostPathVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.HostPathVolumeSource.prototype.clearPath = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.HostPathVolumeSource.prototype.hasPath = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string type = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.HostPathVolumeSource.prototype.getType = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.HostPathVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.HostPathVolumeSource.prototype.setType = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.HostPathVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.HostPathVolumeSource.prototype.clearType = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.HostPathVolumeSource.prototype.hasType = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.repeatedFields_ = [7];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            targetportal: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            iqn: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            lun: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            iscsiinterface: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
            fstype: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
            readonly: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
            portalsList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
            chapauthdiscovery: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f,
            chapauthsession: (f = jspb.Message.getBooleanField(msg, 11)) == null ? undefined : f,
            secretref: (f = msg.getSecretref()) && proto.k8s.io.api.core.v1.SecretReference.toObject(includeInstance, f),
            initiatorname: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource;
    return proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setTargetportal(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setIqn(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setLun(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setIscsiinterface(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setFstype(value);
                break;
            case 6:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            case 7:
                var value = /** @type {string} */ (reader.readString());
                msg.addPortals(value);
                break;
            case 8:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setChapauthdiscovery(value);
                break;
            case 11:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setChapauthsession(value);
                break;
            case 10:
                var value = new proto.k8s.io.api.core.v1.SecretReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.SecretReference.deserializeBinaryFromReader);
                msg.setSecretref(value);
                break;
            case 12:
                var value = /** @type {string} */ (reader.readString());
                msg.setInitiatorname(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeInt32(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeString(5, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
    if (f != null) {
        writer.writeBool(6, f);
    }
    f = message.getPortalsList();
    if (f.length > 0) {
        writer.writeRepeatedString(7, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
    if (f != null) {
        writer.writeBool(8, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
    if (f != null) {
        writer.writeBool(11, f);
    }
    f = message.getSecretref();
    if (f != null) {
        writer.writeMessage(10, f, proto.k8s.io.api.core.v1.SecretReference.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 12));
    if (f != null) {
        writer.writeString(12, f);
    }
};
/**
 * optional string targetPortal = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.getTargetportal = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.setTargetportal = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.clearTargetportal = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.hasTargetportal = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string iqn = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.getIqn = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.setIqn = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.clearIqn = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.hasIqn = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional int32 lun = 3;
 * @return {number}
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.getLun = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.setLun = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.clearLun = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.hasLun = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string iscsiInterface = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.getIscsiinterface = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.setIscsiinterface = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.clearIscsiinterface = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.hasIscsiinterface = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional string fsType = 5;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.getFstype = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.setFstype = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.clearFstype = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.hasFstype = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional bool readOnly = 6;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 6, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 6, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * repeated string portals = 7;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.getPortalsList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.setPortalsList = function (value) {
    return jspb.Message.setField(this, 7, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.addPortals = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.clearPortalsList = function () {
    return this.setPortalsList([]);
};
/**
 * optional bool chapAuthDiscovery = 8;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.getChapauthdiscovery = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.setChapauthdiscovery = function (value) {
    return jspb.Message.setField(this, 8, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.clearChapauthdiscovery = function () {
    return jspb.Message.setField(this, 8, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.hasChapauthdiscovery = function () {
    return jspb.Message.getField(this, 8) != null;
};
/**
 * optional bool chapAuthSession = 11;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.getChapauthsession = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.setChapauthsession = function (value) {
    return jspb.Message.setField(this, 11, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.clearChapauthsession = function () {
    return jspb.Message.setField(this, 11, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.hasChapauthsession = function () {
    return jspb.Message.getField(this, 11) != null;
};
/**
 * optional SecretReference secretRef = 10;
 * @return {?proto.k8s.io.api.core.v1.SecretReference}
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.getSecretref = function () {
    return /** @type{?proto.k8s.io.api.core.v1.SecretReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.SecretReference, 10));
};
/**
 * @param {?proto.k8s.io.api.core.v1.SecretReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.setSecretref = function (value) {
    return jspb.Message.setWrapperField(this, 10, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.clearSecretref = function () {
    return this.setSecretref(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.hasSecretref = function () {
    return jspb.Message.getField(this, 10) != null;
};
/**
 * optional string initiatorName = 12;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.getInitiatorname = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.setInitiatorname = function (value) {
    return jspb.Message.setField(this, 12, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.clearInitiatorname = function () {
    return jspb.Message.setField(this, 12, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.prototype.hasInitiatorname = function () {
    return jspb.Message.getField(this, 12) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.repeatedFields_ = [7];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ISCSIVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ISCSIVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ISCSIVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            targetportal: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            iqn: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            lun: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            iscsiinterface: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
            fstype: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
            readonly: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
            portalsList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
            chapauthdiscovery: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f,
            chapauthsession: (f = jspb.Message.getBooleanField(msg, 11)) == null ? undefined : f,
            secretref: (f = msg.getSecretref()) && proto.k8s.io.api.core.v1.LocalObjectReference.toObject(includeInstance, f),
            initiatorname: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ISCSIVolumeSource}
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ISCSIVolumeSource;
    return proto.k8s.io.api.core.v1.ISCSIVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ISCSIVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ISCSIVolumeSource}
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setTargetportal(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setIqn(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setLun(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setIscsiinterface(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setFstype(value);
                break;
            case 6:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            case 7:
                var value = /** @type {string} */ (reader.readString());
                msg.addPortals(value);
                break;
            case 8:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setChapauthdiscovery(value);
                break;
            case 11:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setChapauthsession(value);
                break;
            case 10:
                var value = new proto.k8s.io.api.core.v1.LocalObjectReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.LocalObjectReference.deserializeBinaryFromReader);
                msg.setSecretref(value);
                break;
            case 12:
                var value = /** @type {string} */ (reader.readString());
                msg.setInitiatorname(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ISCSIVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ISCSIVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeInt32(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeString(5, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
    if (f != null) {
        writer.writeBool(6, f);
    }
    f = message.getPortalsList();
    if (f.length > 0) {
        writer.writeRepeatedString(7, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
    if (f != null) {
        writer.writeBool(8, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
    if (f != null) {
        writer.writeBool(11, f);
    }
    f = message.getSecretref();
    if (f != null) {
        writer.writeMessage(10, f, proto.k8s.io.api.core.v1.LocalObjectReference.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 12));
    if (f != null) {
        writer.writeString(12, f);
    }
};
/**
 * optional string targetPortal = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.getTargetportal = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ISCSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.setTargetportal = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ISCSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.clearTargetportal = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.hasTargetportal = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string iqn = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.getIqn = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ISCSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.setIqn = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ISCSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.clearIqn = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.hasIqn = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional int32 lun = 3;
 * @return {number}
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.getLun = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.ISCSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.setLun = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ISCSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.clearLun = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.hasLun = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string iscsiInterface = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.getIscsiinterface = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ISCSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.setIscsiinterface = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ISCSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.clearIscsiinterface = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.hasIscsiinterface = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional string fsType = 5;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.getFstype = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ISCSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.setFstype = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ISCSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.clearFstype = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.hasFstype = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional bool readOnly = 6;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.ISCSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 6, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ISCSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 6, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * repeated string portals = 7;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.getPortalsList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.ISCSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.setPortalsList = function (value) {
    return jspb.Message.setField(this, 7, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ISCSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.addPortals = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.ISCSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.clearPortalsList = function () {
    return this.setPortalsList([]);
};
/**
 * optional bool chapAuthDiscovery = 8;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.getChapauthdiscovery = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.ISCSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.setChapauthdiscovery = function (value) {
    return jspb.Message.setField(this, 8, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ISCSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.clearChapauthdiscovery = function () {
    return jspb.Message.setField(this, 8, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.hasChapauthdiscovery = function () {
    return jspb.Message.getField(this, 8) != null;
};
/**
 * optional bool chapAuthSession = 11;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.getChapauthsession = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.ISCSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.setChapauthsession = function (value) {
    return jspb.Message.setField(this, 11, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ISCSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.clearChapauthsession = function () {
    return jspb.Message.setField(this, 11, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.hasChapauthsession = function () {
    return jspb.Message.getField(this, 11) != null;
};
/**
 * optional LocalObjectReference secretRef = 10;
 * @return {?proto.k8s.io.api.core.v1.LocalObjectReference}
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.getSecretref = function () {
    return /** @type{?proto.k8s.io.api.core.v1.LocalObjectReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.LocalObjectReference, 10));
};
/**
 * @param {?proto.k8s.io.api.core.v1.LocalObjectReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ISCSIVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.setSecretref = function (value) {
    return jspb.Message.setWrapperField(this, 10, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ISCSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.clearSecretref = function () {
    return this.setSecretref(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.hasSecretref = function () {
    return jspb.Message.getField(this, 10) != null;
};
/**
 * optional string initiatorName = 12;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.getInitiatorname = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ISCSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.setInitiatorname = function (value) {
    return jspb.Message.setField(this, 12, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ISCSIVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.clearInitiatorname = function () {
    return jspb.Message.setField(this, 12, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ISCSIVolumeSource.prototype.hasInitiatorname = function () {
    return jspb.Message.getField(this, 12) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.KeyToPath.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.KeyToPath.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.KeyToPath} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.KeyToPath.toObject = function (includeInstance, msg) {
        var f, obj = {
            key: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            path: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            mode: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.KeyToPath}
 */
proto.k8s.io.api.core.v1.KeyToPath.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.KeyToPath;
    return proto.k8s.io.api.core.v1.KeyToPath.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.KeyToPath} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.KeyToPath}
 */
proto.k8s.io.api.core.v1.KeyToPath.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setKey(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setPath(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setMode(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.KeyToPath.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.KeyToPath.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.KeyToPath} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.KeyToPath.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeInt32(3, f);
    }
};
/**
 * optional string key = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.KeyToPath.prototype.getKey = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.KeyToPath} returns this
 */
proto.k8s.io.api.core.v1.KeyToPath.prototype.setKey = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.KeyToPath} returns this
 */
proto.k8s.io.api.core.v1.KeyToPath.prototype.clearKey = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.KeyToPath.prototype.hasKey = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string path = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.KeyToPath.prototype.getPath = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.KeyToPath} returns this
 */
proto.k8s.io.api.core.v1.KeyToPath.prototype.setPath = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.KeyToPath} returns this
 */
proto.k8s.io.api.core.v1.KeyToPath.prototype.clearPath = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.KeyToPath.prototype.hasPath = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional int32 mode = 3;
 * @return {number}
 */
proto.k8s.io.api.core.v1.KeyToPath.prototype.getMode = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.KeyToPath} returns this
 */
proto.k8s.io.api.core.v1.KeyToPath.prototype.setMode = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.KeyToPath} returns this
 */
proto.k8s.io.api.core.v1.KeyToPath.prototype.clearMode = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.KeyToPath.prototype.hasMode = function () {
    return jspb.Message.getField(this, 3) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.Lifecycle.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.Lifecycle.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.Lifecycle} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.Lifecycle.toObject = function (includeInstance, msg) {
        var f, obj = {
            poststart: (f = msg.getPoststart()) && proto.k8s.io.api.core.v1.Handler.toObject(includeInstance, f),
            prestop: (f = msg.getPrestop()) && proto.k8s.io.api.core.v1.Handler.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.Lifecycle}
 */
proto.k8s.io.api.core.v1.Lifecycle.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.Lifecycle;
    return proto.k8s.io.api.core.v1.Lifecycle.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.Lifecycle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.Lifecycle}
 */
proto.k8s.io.api.core.v1.Lifecycle.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.Handler;
                reader.readMessage(value, proto.k8s.io.api.core.v1.Handler.deserializeBinaryFromReader);
                msg.setPoststart(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.Handler;
                reader.readMessage(value, proto.k8s.io.api.core.v1.Handler.deserializeBinaryFromReader);
                msg.setPrestop(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.Lifecycle.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.Lifecycle.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.Lifecycle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.Lifecycle.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getPoststart();
    if (f != null) {
        writer.writeMessage(1, f, proto.k8s.io.api.core.v1.Handler.serializeBinaryToWriter);
    }
    f = message.getPrestop();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.Handler.serializeBinaryToWriter);
    }
};
/**
 * optional Handler postStart = 1;
 * @return {?proto.k8s.io.api.core.v1.Handler}
 */
proto.k8s.io.api.core.v1.Lifecycle.prototype.getPoststart = function () {
    return /** @type{?proto.k8s.io.api.core.v1.Handler} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.Handler, 1));
};
/**
 * @param {?proto.k8s.io.api.core.v1.Handler|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Lifecycle} returns this
*/
proto.k8s.io.api.core.v1.Lifecycle.prototype.setPoststart = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Lifecycle} returns this
 */
proto.k8s.io.api.core.v1.Lifecycle.prototype.clearPoststart = function () {
    return this.setPoststart(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Lifecycle.prototype.hasPoststart = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional Handler preStop = 2;
 * @return {?proto.k8s.io.api.core.v1.Handler}
 */
proto.k8s.io.api.core.v1.Lifecycle.prototype.getPrestop = function () {
    return /** @type{?proto.k8s.io.api.core.v1.Handler} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.Handler, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.Handler|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Lifecycle} returns this
*/
proto.k8s.io.api.core.v1.Lifecycle.prototype.setPrestop = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Lifecycle} returns this
 */
proto.k8s.io.api.core.v1.Lifecycle.prototype.clearPrestop = function () {
    return this.setPrestop(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Lifecycle.prototype.hasPrestop = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.LimitRange.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.LimitRange.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.LimitRange} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.LimitRange.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
            spec: (f = msg.getSpec()) && proto.k8s.io.api.core.v1.LimitRangeSpec.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.LimitRange}
 */
proto.k8s.io.api.core.v1.LimitRange.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.LimitRange;
    return proto.k8s.io.api.core.v1.LimitRange.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.LimitRange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.LimitRange}
 */
proto.k8s.io.api.core.v1.LimitRange.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.LimitRangeSpec;
                reader.readMessage(value, proto.k8s.io.api.core.v1.LimitRangeSpec.deserializeBinaryFromReader);
                msg.setSpec(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.LimitRange.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.LimitRange.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.LimitRange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.LimitRange.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter);
    }
    f = message.getSpec();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.LimitRangeSpec.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.k8s.io.api.core.v1.LimitRange.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.LimitRange} returns this
*/
proto.k8s.io.api.core.v1.LimitRange.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.LimitRange} returns this
 */
proto.k8s.io.api.core.v1.LimitRange.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.LimitRange.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional LimitRangeSpec spec = 2;
 * @return {?proto.k8s.io.api.core.v1.LimitRangeSpec}
 */
proto.k8s.io.api.core.v1.LimitRange.prototype.getSpec = function () {
    return /** @type{?proto.k8s.io.api.core.v1.LimitRangeSpec} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.LimitRangeSpec, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.LimitRangeSpec|undefined} value
 * @return {!proto.k8s.io.api.core.v1.LimitRange} returns this
*/
proto.k8s.io.api.core.v1.LimitRange.prototype.setSpec = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.LimitRange} returns this
 */
proto.k8s.io.api.core.v1.LimitRange.prototype.clearSpec = function () {
    return this.setSpec(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.LimitRange.prototype.hasSpec = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.LimitRangeItem.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.LimitRangeItem.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.LimitRangeItem} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.LimitRangeItem.toObject = function (includeInstance, msg) {
        var f, obj = {
            type: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            maxMap: (f = msg.getMaxMap()) ? f.toObject(includeInstance, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.toObject) : [],
            minMap: (f = msg.getMinMap()) ? f.toObject(includeInstance, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.toObject) : [],
            defaultMap: (f = msg.getDefaultMap()) ? f.toObject(includeInstance, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.toObject) : [],
            defaultrequestMap: (f = msg.getDefaultrequestMap()) ? f.toObject(includeInstance, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.toObject) : [],
            maxlimitrequestratioMap: (f = msg.getMaxlimitrequestratioMap()) ? f.toObject(includeInstance, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.toObject) : []
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.LimitRangeItem}
 */
proto.k8s.io.api.core.v1.LimitRangeItem.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.LimitRangeItem;
    return proto.k8s.io.api.core.v1.LimitRangeItem.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.LimitRangeItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.LimitRangeItem}
 */
proto.k8s.io.api.core.v1.LimitRangeItem.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setType(value);
                break;
            case 2:
                var value = msg.getMaxMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.deserializeBinaryFromReader, "", new proto.k8s.io.apimachinery.pkg.api.resource.Quantity());
                });
                break;
            case 3:
                var value = msg.getMinMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.deserializeBinaryFromReader, "", new proto.k8s.io.apimachinery.pkg.api.resource.Quantity());
                });
                break;
            case 4:
                var value = msg.getDefaultMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.deserializeBinaryFromReader, "", new proto.k8s.io.apimachinery.pkg.api.resource.Quantity());
                });
                break;
            case 5:
                var value = msg.getDefaultrequestMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.deserializeBinaryFromReader, "", new proto.k8s.io.apimachinery.pkg.api.resource.Quantity());
                });
                break;
            case 6:
                var value = msg.getMaxlimitrequestratioMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.deserializeBinaryFromReader, "", new proto.k8s.io.apimachinery.pkg.api.resource.Quantity());
                });
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.LimitRangeItem.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.LimitRangeItem.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.LimitRangeItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.LimitRangeItem.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = message.getMaxMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.serializeBinaryToWriter);
    }
    f = message.getMinMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.serializeBinaryToWriter);
    }
    f = message.getDefaultMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.serializeBinaryToWriter);
    }
    f = message.getDefaultrequestMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.serializeBinaryToWriter);
    }
    f = message.getMaxlimitrequestratioMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.serializeBinaryToWriter);
    }
};
/**
 * optional string type = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.LimitRangeItem.prototype.getType = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.LimitRangeItem} returns this
 */
proto.k8s.io.api.core.v1.LimitRangeItem.prototype.setType = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.LimitRangeItem} returns this
 */
proto.k8s.io.api.core.v1.LimitRangeItem.prototype.clearType = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.LimitRangeItem.prototype.hasType = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * map<string, k8s.io.apimachinery.pkg.api.resource.Quantity> max = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>}
 */
proto.k8s.io.api.core.v1.LimitRangeItem.prototype.getMaxMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>} */ (jspb.Message.getMapField(this, 2, opt_noLazyCreate, proto.k8s.io.apimachinery.pkg.api.resource.Quantity));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.k8s.io.api.core.v1.LimitRangeItem} returns this
 */
proto.k8s.io.api.core.v1.LimitRangeItem.prototype.clearMaxMap = function () {
    this.getMaxMap().clear();
    return this;
};
/**
 * map<string, k8s.io.apimachinery.pkg.api.resource.Quantity> min = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>}
 */
proto.k8s.io.api.core.v1.LimitRangeItem.prototype.getMinMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>} */ (jspb.Message.getMapField(this, 3, opt_noLazyCreate, proto.k8s.io.apimachinery.pkg.api.resource.Quantity));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.k8s.io.api.core.v1.LimitRangeItem} returns this
 */
proto.k8s.io.api.core.v1.LimitRangeItem.prototype.clearMinMap = function () {
    this.getMinMap().clear();
    return this;
};
/**
 * map<string, k8s.io.apimachinery.pkg.api.resource.Quantity> default = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>}
 */
proto.k8s.io.api.core.v1.LimitRangeItem.prototype.getDefaultMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>} */ (jspb.Message.getMapField(this, 4, opt_noLazyCreate, proto.k8s.io.apimachinery.pkg.api.resource.Quantity));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.k8s.io.api.core.v1.LimitRangeItem} returns this
 */
proto.k8s.io.api.core.v1.LimitRangeItem.prototype.clearDefaultMap = function () {
    this.getDefaultMap().clear();
    return this;
};
/**
 * map<string, k8s.io.apimachinery.pkg.api.resource.Quantity> defaultRequest = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>}
 */
proto.k8s.io.api.core.v1.LimitRangeItem.prototype.getDefaultrequestMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>} */ (jspb.Message.getMapField(this, 5, opt_noLazyCreate, proto.k8s.io.apimachinery.pkg.api.resource.Quantity));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.k8s.io.api.core.v1.LimitRangeItem} returns this
 */
proto.k8s.io.api.core.v1.LimitRangeItem.prototype.clearDefaultrequestMap = function () {
    this.getDefaultrequestMap().clear();
    return this;
};
/**
 * map<string, k8s.io.apimachinery.pkg.api.resource.Quantity> maxLimitRequestRatio = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>}
 */
proto.k8s.io.api.core.v1.LimitRangeItem.prototype.getMaxlimitrequestratioMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>} */ (jspb.Message.getMapField(this, 6, opt_noLazyCreate, proto.k8s.io.apimachinery.pkg.api.resource.Quantity));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.k8s.io.api.core.v1.LimitRangeItem} returns this
 */
proto.k8s.io.api.core.v1.LimitRangeItem.prototype.clearMaxlimitrequestratioMap = function () {
    this.getMaxlimitrequestratioMap().clear();
    return this;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.LimitRangeList.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.LimitRangeList.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.LimitRangeList.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.LimitRangeList} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.LimitRangeList.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
            itemsList: jspb.Message.toObjectList(msg.getItemsList(), proto.k8s.io.api.core.v1.LimitRange.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.LimitRangeList}
 */
proto.k8s.io.api.core.v1.LimitRangeList.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.LimitRangeList;
    return proto.k8s.io.api.core.v1.LimitRangeList.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.LimitRangeList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.LimitRangeList}
 */
proto.k8s.io.api.core.v1.LimitRangeList.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.LimitRange;
                reader.readMessage(value, proto.k8s.io.api.core.v1.LimitRange.deserializeBinaryFromReader);
                msg.addItems(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.LimitRangeList.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.LimitRangeList.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.LimitRangeList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.LimitRangeList.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter);
    }
    f = message.getItemsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.LimitRange.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.k8s.io.api.core.v1.LimitRangeList.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.LimitRangeList} returns this
*/
proto.k8s.io.api.core.v1.LimitRangeList.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.LimitRangeList} returns this
 */
proto.k8s.io.api.core.v1.LimitRangeList.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.LimitRangeList.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated LimitRange items = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.LimitRange>}
 */
proto.k8s.io.api.core.v1.LimitRangeList.prototype.getItemsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.LimitRange>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.LimitRange, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.LimitRange>} value
 * @return {!proto.k8s.io.api.core.v1.LimitRangeList} returns this
*/
proto.k8s.io.api.core.v1.LimitRangeList.prototype.setItemsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.LimitRange=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.LimitRange}
 */
proto.k8s.io.api.core.v1.LimitRangeList.prototype.addItems = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.LimitRange, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.LimitRangeList} returns this
 */
proto.k8s.io.api.core.v1.LimitRangeList.prototype.clearItemsList = function () {
    return this.setItemsList([]);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.LimitRangeSpec.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.LimitRangeSpec.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.LimitRangeSpec.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.LimitRangeSpec} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.LimitRangeSpec.toObject = function (includeInstance, msg) {
        var f, obj = {
            limitsList: jspb.Message.toObjectList(msg.getLimitsList(), proto.k8s.io.api.core.v1.LimitRangeItem.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.LimitRangeSpec}
 */
proto.k8s.io.api.core.v1.LimitRangeSpec.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.LimitRangeSpec;
    return proto.k8s.io.api.core.v1.LimitRangeSpec.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.LimitRangeSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.LimitRangeSpec}
 */
proto.k8s.io.api.core.v1.LimitRangeSpec.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.LimitRangeItem;
                reader.readMessage(value, proto.k8s.io.api.core.v1.LimitRangeItem.deserializeBinaryFromReader);
                msg.addLimits(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.LimitRangeSpec.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.LimitRangeSpec.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.LimitRangeSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.LimitRangeSpec.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getLimitsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, proto.k8s.io.api.core.v1.LimitRangeItem.serializeBinaryToWriter);
    }
};
/**
 * repeated LimitRangeItem limits = 1;
 * @return {!Array<!proto.k8s.io.api.core.v1.LimitRangeItem>}
 */
proto.k8s.io.api.core.v1.LimitRangeSpec.prototype.getLimitsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.LimitRangeItem>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.LimitRangeItem, 1));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.LimitRangeItem>} value
 * @return {!proto.k8s.io.api.core.v1.LimitRangeSpec} returns this
*/
proto.k8s.io.api.core.v1.LimitRangeSpec.prototype.setLimitsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.LimitRangeItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.LimitRangeItem}
 */
proto.k8s.io.api.core.v1.LimitRangeSpec.prototype.addLimits = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.k8s.io.api.core.v1.LimitRangeItem, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.LimitRangeSpec} returns this
 */
proto.k8s.io.api.core.v1.LimitRangeSpec.prototype.clearLimitsList = function () {
    return this.setLimitsList([]);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.List.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.List.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.List.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.List} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.List.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
            itemsList: jspb.Message.toObjectList(msg.getItemsList(), k8s_io_apimachinery_pkg_runtime_generated_pb.RawExtension.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.List}
 */
proto.k8s.io.api.core.v1.List.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.List;
    return proto.k8s.io.api.core.v1.List.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.List} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.List}
 */
proto.k8s.io.api.core.v1.List.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new k8s_io_apimachinery_pkg_runtime_generated_pb.RawExtension;
                reader.readMessage(value, k8s_io_apimachinery_pkg_runtime_generated_pb.RawExtension.deserializeBinaryFromReader);
                msg.addItems(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.List.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.List.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.List} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.List.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter);
    }
    f = message.getItemsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, k8s_io_apimachinery_pkg_runtime_generated_pb.RawExtension.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.k8s.io.api.core.v1.List.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.List} returns this
*/
proto.k8s.io.api.core.v1.List.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.List} returns this
 */
proto.k8s.io.api.core.v1.List.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.List.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated k8s.io.apimachinery.pkg.runtime.RawExtension items = 2;
 * @return {!Array<!proto.k8s.io.apimachinery.pkg.runtime.RawExtension>}
 */
proto.k8s.io.api.core.v1.List.prototype.getItemsList = function () {
    return /** @type{!Array<!proto.k8s.io.apimachinery.pkg.runtime.RawExtension>} */ (jspb.Message.getRepeatedWrapperField(this, k8s_io_apimachinery_pkg_runtime_generated_pb.RawExtension, 2));
};
/**
 * @param {!Array<!proto.k8s.io.apimachinery.pkg.runtime.RawExtension>} value
 * @return {!proto.k8s.io.api.core.v1.List} returns this
*/
proto.k8s.io.api.core.v1.List.prototype.setItemsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.apimachinery.pkg.runtime.RawExtension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.apimachinery.pkg.runtime.RawExtension}
 */
proto.k8s.io.api.core.v1.List.prototype.addItems = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.apimachinery.pkg.runtime.RawExtension, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.List} returns this
 */
proto.k8s.io.api.core.v1.List.prototype.clearItemsList = function () {
    return this.setItemsList([]);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.LoadBalancerIngress.repeatedFields_ = [4];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.LoadBalancerIngress.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.LoadBalancerIngress.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.LoadBalancerIngress} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.LoadBalancerIngress.toObject = function (includeInstance, msg) {
        var f, obj = {
            ip: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            hostname: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            portsList: jspb.Message.toObjectList(msg.getPortsList(), proto.k8s.io.api.core.v1.PortStatus.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.LoadBalancerIngress}
 */
proto.k8s.io.api.core.v1.LoadBalancerIngress.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.LoadBalancerIngress;
    return proto.k8s.io.api.core.v1.LoadBalancerIngress.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.LoadBalancerIngress} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.LoadBalancerIngress}
 */
proto.k8s.io.api.core.v1.LoadBalancerIngress.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setIp(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setHostname(value);
                break;
            case 4:
                var value = new proto.k8s.io.api.core.v1.PortStatus;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PortStatus.deserializeBinaryFromReader);
                msg.addPorts(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.LoadBalancerIngress.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.LoadBalancerIngress.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.LoadBalancerIngress} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.LoadBalancerIngress.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = message.getPortsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(4, f, proto.k8s.io.api.core.v1.PortStatus.serializeBinaryToWriter);
    }
};
/**
 * optional string ip = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.LoadBalancerIngress.prototype.getIp = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.LoadBalancerIngress} returns this
 */
proto.k8s.io.api.core.v1.LoadBalancerIngress.prototype.setIp = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.LoadBalancerIngress} returns this
 */
proto.k8s.io.api.core.v1.LoadBalancerIngress.prototype.clearIp = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.LoadBalancerIngress.prototype.hasIp = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string hostname = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.LoadBalancerIngress.prototype.getHostname = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.LoadBalancerIngress} returns this
 */
proto.k8s.io.api.core.v1.LoadBalancerIngress.prototype.setHostname = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.LoadBalancerIngress} returns this
 */
proto.k8s.io.api.core.v1.LoadBalancerIngress.prototype.clearHostname = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.LoadBalancerIngress.prototype.hasHostname = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * repeated PortStatus ports = 4;
 * @return {!Array<!proto.k8s.io.api.core.v1.PortStatus>}
 */
proto.k8s.io.api.core.v1.LoadBalancerIngress.prototype.getPortsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.PortStatus>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.PortStatus, 4));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.PortStatus>} value
 * @return {!proto.k8s.io.api.core.v1.LoadBalancerIngress} returns this
*/
proto.k8s.io.api.core.v1.LoadBalancerIngress.prototype.setPortsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 4, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.PortStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.PortStatus}
 */
proto.k8s.io.api.core.v1.LoadBalancerIngress.prototype.addPorts = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.k8s.io.api.core.v1.PortStatus, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.LoadBalancerIngress} returns this
 */
proto.k8s.io.api.core.v1.LoadBalancerIngress.prototype.clearPortsList = function () {
    return this.setPortsList([]);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.LoadBalancerStatus.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.LoadBalancerStatus.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.LoadBalancerStatus.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.LoadBalancerStatus} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.LoadBalancerStatus.toObject = function (includeInstance, msg) {
        var f, obj = {
            ingressList: jspb.Message.toObjectList(msg.getIngressList(), proto.k8s.io.api.core.v1.LoadBalancerIngress.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.LoadBalancerStatus}
 */
proto.k8s.io.api.core.v1.LoadBalancerStatus.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.LoadBalancerStatus;
    return proto.k8s.io.api.core.v1.LoadBalancerStatus.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.LoadBalancerStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.LoadBalancerStatus}
 */
proto.k8s.io.api.core.v1.LoadBalancerStatus.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.LoadBalancerIngress;
                reader.readMessage(value, proto.k8s.io.api.core.v1.LoadBalancerIngress.deserializeBinaryFromReader);
                msg.addIngress(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.LoadBalancerStatus.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.LoadBalancerStatus.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.LoadBalancerStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.LoadBalancerStatus.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getIngressList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, proto.k8s.io.api.core.v1.LoadBalancerIngress.serializeBinaryToWriter);
    }
};
/**
 * repeated LoadBalancerIngress ingress = 1;
 * @return {!Array<!proto.k8s.io.api.core.v1.LoadBalancerIngress>}
 */
proto.k8s.io.api.core.v1.LoadBalancerStatus.prototype.getIngressList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.LoadBalancerIngress>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.LoadBalancerIngress, 1));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.LoadBalancerIngress>} value
 * @return {!proto.k8s.io.api.core.v1.LoadBalancerStatus} returns this
*/
proto.k8s.io.api.core.v1.LoadBalancerStatus.prototype.setIngressList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.LoadBalancerIngress=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.LoadBalancerIngress}
 */
proto.k8s.io.api.core.v1.LoadBalancerStatus.prototype.addIngress = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.k8s.io.api.core.v1.LoadBalancerIngress, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.LoadBalancerStatus} returns this
 */
proto.k8s.io.api.core.v1.LoadBalancerStatus.prototype.clearIngressList = function () {
    return this.setIngressList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.LocalObjectReference.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.LocalObjectReference.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.LocalObjectReference} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.LocalObjectReference.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.LocalObjectReference}
 */
proto.k8s.io.api.core.v1.LocalObjectReference.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.LocalObjectReference;
    return proto.k8s.io.api.core.v1.LocalObjectReference.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.LocalObjectReference} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.LocalObjectReference}
 */
proto.k8s.io.api.core.v1.LocalObjectReference.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.LocalObjectReference.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.LocalObjectReference.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.LocalObjectReference} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.LocalObjectReference.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
};
/**
 * optional string name = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.LocalObjectReference.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.LocalObjectReference} returns this
 */
proto.k8s.io.api.core.v1.LocalObjectReference.prototype.setName = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.LocalObjectReference} returns this
 */
proto.k8s.io.api.core.v1.LocalObjectReference.prototype.clearName = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.LocalObjectReference.prototype.hasName = function () {
    return jspb.Message.getField(this, 1) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.LocalVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.LocalVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.LocalVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.LocalVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            path: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            fstype: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.LocalVolumeSource}
 */
proto.k8s.io.api.core.v1.LocalVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.LocalVolumeSource;
    return proto.k8s.io.api.core.v1.LocalVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.LocalVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.LocalVolumeSource}
 */
proto.k8s.io.api.core.v1.LocalVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setPath(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setFstype(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.LocalVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.LocalVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.LocalVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.LocalVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
};
/**
 * optional string path = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.LocalVolumeSource.prototype.getPath = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.LocalVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.LocalVolumeSource.prototype.setPath = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.LocalVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.LocalVolumeSource.prototype.clearPath = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.LocalVolumeSource.prototype.hasPath = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string fsType = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.LocalVolumeSource.prototype.getFstype = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.LocalVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.LocalVolumeSource.prototype.setFstype = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.LocalVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.LocalVolumeSource.prototype.clearFstype = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.LocalVolumeSource.prototype.hasFstype = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.NFSVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.NFSVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.NFSVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.NFSVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            server: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            path: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            readonly: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.NFSVolumeSource}
 */
proto.k8s.io.api.core.v1.NFSVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.NFSVolumeSource;
    return proto.k8s.io.api.core.v1.NFSVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.NFSVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.NFSVolumeSource}
 */
proto.k8s.io.api.core.v1.NFSVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setServer(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setPath(value);
                break;
            case 3:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.NFSVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.NFSVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.NFSVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.NFSVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeBool(3, f);
    }
};
/**
 * optional string server = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NFSVolumeSource.prototype.getServer = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NFSVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.NFSVolumeSource.prototype.setServer = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NFSVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.NFSVolumeSource.prototype.clearServer = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NFSVolumeSource.prototype.hasServer = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string path = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NFSVolumeSource.prototype.getPath = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NFSVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.NFSVolumeSource.prototype.setPath = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NFSVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.NFSVolumeSource.prototype.clearPath = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NFSVolumeSource.prototype.hasPath = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional bool readOnly = 3;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NFSVolumeSource.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.NFSVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.NFSVolumeSource.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NFSVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.NFSVolumeSource.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NFSVolumeSource.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 3) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.Namespace.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.Namespace.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.Namespace} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.Namespace.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
            spec: (f = msg.getSpec()) && proto.k8s.io.api.core.v1.NamespaceSpec.toObject(includeInstance, f),
            status: (f = msg.getStatus()) && proto.k8s.io.api.core.v1.NamespaceStatus.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.Namespace}
 */
proto.k8s.io.api.core.v1.Namespace.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.Namespace;
    return proto.k8s.io.api.core.v1.Namespace.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.Namespace} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.Namespace}
 */
proto.k8s.io.api.core.v1.Namespace.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.NamespaceSpec;
                reader.readMessage(value, proto.k8s.io.api.core.v1.NamespaceSpec.deserializeBinaryFromReader);
                msg.setSpec(value);
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.NamespaceStatus;
                reader.readMessage(value, proto.k8s.io.api.core.v1.NamespaceStatus.deserializeBinaryFromReader);
                msg.setStatus(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.Namespace.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.Namespace.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.Namespace} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.Namespace.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter);
    }
    f = message.getSpec();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.NamespaceSpec.serializeBinaryToWriter);
    }
    f = message.getStatus();
    if (f != null) {
        writer.writeMessage(3, f, proto.k8s.io.api.core.v1.NamespaceStatus.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.k8s.io.api.core.v1.Namespace.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Namespace} returns this
*/
proto.k8s.io.api.core.v1.Namespace.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Namespace} returns this
 */
proto.k8s.io.api.core.v1.Namespace.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Namespace.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional NamespaceSpec spec = 2;
 * @return {?proto.k8s.io.api.core.v1.NamespaceSpec}
 */
proto.k8s.io.api.core.v1.Namespace.prototype.getSpec = function () {
    return /** @type{?proto.k8s.io.api.core.v1.NamespaceSpec} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.NamespaceSpec, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.NamespaceSpec|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Namespace} returns this
*/
proto.k8s.io.api.core.v1.Namespace.prototype.setSpec = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Namespace} returns this
 */
proto.k8s.io.api.core.v1.Namespace.prototype.clearSpec = function () {
    return this.setSpec(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Namespace.prototype.hasSpec = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional NamespaceStatus status = 3;
 * @return {?proto.k8s.io.api.core.v1.NamespaceStatus}
 */
proto.k8s.io.api.core.v1.Namespace.prototype.getStatus = function () {
    return /** @type{?proto.k8s.io.api.core.v1.NamespaceStatus} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.NamespaceStatus, 3));
};
/**
 * @param {?proto.k8s.io.api.core.v1.NamespaceStatus|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Namespace} returns this
*/
proto.k8s.io.api.core.v1.Namespace.prototype.setStatus = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Namespace} returns this
 */
proto.k8s.io.api.core.v1.Namespace.prototype.clearStatus = function () {
    return this.setStatus(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Namespace.prototype.hasStatus = function () {
    return jspb.Message.getField(this, 3) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.NamespaceCondition.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.NamespaceCondition.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.NamespaceCondition} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.NamespaceCondition.toObject = function (includeInstance, msg) {
        var f, obj = {
            type: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            status: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            lasttransitiontime: (f = msg.getLasttransitiontime()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
            reason: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
            message: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.NamespaceCondition}
 */
proto.k8s.io.api.core.v1.NamespaceCondition.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.NamespaceCondition;
    return proto.k8s.io.api.core.v1.NamespaceCondition.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.NamespaceCondition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.NamespaceCondition}
 */
proto.k8s.io.api.core.v1.NamespaceCondition.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setType(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setStatus(value);
                break;
            case 4:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
                msg.setLasttransitiontime(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setReason(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.setMessage(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.NamespaceCondition.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.NamespaceCondition.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.NamespaceCondition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.NamespaceCondition.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = message.getLasttransitiontime();
    if (f != null) {
        writer.writeMessage(4, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeString(5, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 6));
    if (f != null) {
        writer.writeString(6, f);
    }
};
/**
 * optional string type = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NamespaceCondition.prototype.getType = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NamespaceCondition} returns this
 */
proto.k8s.io.api.core.v1.NamespaceCondition.prototype.setType = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NamespaceCondition} returns this
 */
proto.k8s.io.api.core.v1.NamespaceCondition.prototype.clearType = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NamespaceCondition.prototype.hasType = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string status = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NamespaceCondition.prototype.getStatus = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NamespaceCondition} returns this
 */
proto.k8s.io.api.core.v1.NamespaceCondition.prototype.setStatus = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NamespaceCondition} returns this
 */
proto.k8s.io.api.core.v1.NamespaceCondition.prototype.clearStatus = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NamespaceCondition.prototype.hasStatus = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 4;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.k8s.io.api.core.v1.NamespaceCondition.prototype.getLasttransitiontime = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 4));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.k8s.io.api.core.v1.NamespaceCondition} returns this
*/
proto.k8s.io.api.core.v1.NamespaceCondition.prototype.setLasttransitiontime = function (value) {
    return jspb.Message.setWrapperField(this, 4, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NamespaceCondition} returns this
 */
proto.k8s.io.api.core.v1.NamespaceCondition.prototype.clearLasttransitiontime = function () {
    return this.setLasttransitiontime(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NamespaceCondition.prototype.hasLasttransitiontime = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional string reason = 5;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NamespaceCondition.prototype.getReason = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NamespaceCondition} returns this
 */
proto.k8s.io.api.core.v1.NamespaceCondition.prototype.setReason = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NamespaceCondition} returns this
 */
proto.k8s.io.api.core.v1.NamespaceCondition.prototype.clearReason = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NamespaceCondition.prototype.hasReason = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional string message = 6;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NamespaceCondition.prototype.getMessage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NamespaceCondition} returns this
 */
proto.k8s.io.api.core.v1.NamespaceCondition.prototype.setMessage = function (value) {
    return jspb.Message.setField(this, 6, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NamespaceCondition} returns this
 */
proto.k8s.io.api.core.v1.NamespaceCondition.prototype.clearMessage = function () {
    return jspb.Message.setField(this, 6, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NamespaceCondition.prototype.hasMessage = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.NamespaceList.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.NamespaceList.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.NamespaceList.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.NamespaceList} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.NamespaceList.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
            itemsList: jspb.Message.toObjectList(msg.getItemsList(), proto.k8s.io.api.core.v1.Namespace.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.NamespaceList}
 */
proto.k8s.io.api.core.v1.NamespaceList.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.NamespaceList;
    return proto.k8s.io.api.core.v1.NamespaceList.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.NamespaceList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.NamespaceList}
 */
proto.k8s.io.api.core.v1.NamespaceList.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.Namespace;
                reader.readMessage(value, proto.k8s.io.api.core.v1.Namespace.deserializeBinaryFromReader);
                msg.addItems(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.NamespaceList.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.NamespaceList.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.NamespaceList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.NamespaceList.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter);
    }
    f = message.getItemsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.Namespace.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.k8s.io.api.core.v1.NamespaceList.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.NamespaceList} returns this
*/
proto.k8s.io.api.core.v1.NamespaceList.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NamespaceList} returns this
 */
proto.k8s.io.api.core.v1.NamespaceList.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NamespaceList.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated Namespace items = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.Namespace>}
 */
proto.k8s.io.api.core.v1.NamespaceList.prototype.getItemsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.Namespace>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.Namespace, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.Namespace>} value
 * @return {!proto.k8s.io.api.core.v1.NamespaceList} returns this
*/
proto.k8s.io.api.core.v1.NamespaceList.prototype.setItemsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.Namespace=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.Namespace}
 */
proto.k8s.io.api.core.v1.NamespaceList.prototype.addItems = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.Namespace, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.NamespaceList} returns this
 */
proto.k8s.io.api.core.v1.NamespaceList.prototype.clearItemsList = function () {
    return this.setItemsList([]);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.NamespaceSpec.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.NamespaceSpec.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.NamespaceSpec.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.NamespaceSpec} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.NamespaceSpec.toObject = function (includeInstance, msg) {
        var f, obj = {
            finalizersList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.NamespaceSpec}
 */
proto.k8s.io.api.core.v1.NamespaceSpec.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.NamespaceSpec;
    return proto.k8s.io.api.core.v1.NamespaceSpec.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.NamespaceSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.NamespaceSpec}
 */
proto.k8s.io.api.core.v1.NamespaceSpec.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.addFinalizers(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.NamespaceSpec.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.NamespaceSpec.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.NamespaceSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.NamespaceSpec.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getFinalizersList();
    if (f.length > 0) {
        writer.writeRepeatedString(1, f);
    }
};
/**
 * repeated string finalizers = 1;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.NamespaceSpec.prototype.getFinalizersList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.NamespaceSpec} returns this
 */
proto.k8s.io.api.core.v1.NamespaceSpec.prototype.setFinalizersList = function (value) {
    return jspb.Message.setField(this, 1, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.NamespaceSpec} returns this
 */
proto.k8s.io.api.core.v1.NamespaceSpec.prototype.addFinalizers = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.NamespaceSpec} returns this
 */
proto.k8s.io.api.core.v1.NamespaceSpec.prototype.clearFinalizersList = function () {
    return this.setFinalizersList([]);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.NamespaceStatus.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.NamespaceStatus.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.NamespaceStatus.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.NamespaceStatus} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.NamespaceStatus.toObject = function (includeInstance, msg) {
        var f, obj = {
            phase: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            conditionsList: jspb.Message.toObjectList(msg.getConditionsList(), proto.k8s.io.api.core.v1.NamespaceCondition.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.NamespaceStatus}
 */
proto.k8s.io.api.core.v1.NamespaceStatus.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.NamespaceStatus;
    return proto.k8s.io.api.core.v1.NamespaceStatus.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.NamespaceStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.NamespaceStatus}
 */
proto.k8s.io.api.core.v1.NamespaceStatus.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setPhase(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.NamespaceCondition;
                reader.readMessage(value, proto.k8s.io.api.core.v1.NamespaceCondition.deserializeBinaryFromReader);
                msg.addConditions(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.NamespaceStatus.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.NamespaceStatus.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.NamespaceStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.NamespaceStatus.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = message.getConditionsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.NamespaceCondition.serializeBinaryToWriter);
    }
};
/**
 * optional string phase = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NamespaceStatus.prototype.getPhase = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NamespaceStatus} returns this
 */
proto.k8s.io.api.core.v1.NamespaceStatus.prototype.setPhase = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NamespaceStatus} returns this
 */
proto.k8s.io.api.core.v1.NamespaceStatus.prototype.clearPhase = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NamespaceStatus.prototype.hasPhase = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated NamespaceCondition conditions = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.NamespaceCondition>}
 */
proto.k8s.io.api.core.v1.NamespaceStatus.prototype.getConditionsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.NamespaceCondition>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.NamespaceCondition, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.NamespaceCondition>} value
 * @return {!proto.k8s.io.api.core.v1.NamespaceStatus} returns this
*/
proto.k8s.io.api.core.v1.NamespaceStatus.prototype.setConditionsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.NamespaceCondition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.NamespaceCondition}
 */
proto.k8s.io.api.core.v1.NamespaceStatus.prototype.addConditions = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.NamespaceCondition, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.NamespaceStatus} returns this
 */
proto.k8s.io.api.core.v1.NamespaceStatus.prototype.clearConditionsList = function () {
    return this.setConditionsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.Node.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.Node.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.Node} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.Node.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
            spec: (f = msg.getSpec()) && proto.k8s.io.api.core.v1.NodeSpec.toObject(includeInstance, f),
            status: (f = msg.getStatus()) && proto.k8s.io.api.core.v1.NodeStatus.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.Node}
 */
proto.k8s.io.api.core.v1.Node.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.Node;
    return proto.k8s.io.api.core.v1.Node.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.Node} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.Node}
 */
proto.k8s.io.api.core.v1.Node.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.NodeSpec;
                reader.readMessage(value, proto.k8s.io.api.core.v1.NodeSpec.deserializeBinaryFromReader);
                msg.setSpec(value);
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.NodeStatus;
                reader.readMessage(value, proto.k8s.io.api.core.v1.NodeStatus.deserializeBinaryFromReader);
                msg.setStatus(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.Node.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.Node.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.Node} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.Node.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter);
    }
    f = message.getSpec();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.NodeSpec.serializeBinaryToWriter);
    }
    f = message.getStatus();
    if (f != null) {
        writer.writeMessage(3, f, proto.k8s.io.api.core.v1.NodeStatus.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.k8s.io.api.core.v1.Node.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Node} returns this
*/
proto.k8s.io.api.core.v1.Node.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Node} returns this
 */
proto.k8s.io.api.core.v1.Node.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Node.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional NodeSpec spec = 2;
 * @return {?proto.k8s.io.api.core.v1.NodeSpec}
 */
proto.k8s.io.api.core.v1.Node.prototype.getSpec = function () {
    return /** @type{?proto.k8s.io.api.core.v1.NodeSpec} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.NodeSpec, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.NodeSpec|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Node} returns this
*/
proto.k8s.io.api.core.v1.Node.prototype.setSpec = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Node} returns this
 */
proto.k8s.io.api.core.v1.Node.prototype.clearSpec = function () {
    return this.setSpec(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Node.prototype.hasSpec = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional NodeStatus status = 3;
 * @return {?proto.k8s.io.api.core.v1.NodeStatus}
 */
proto.k8s.io.api.core.v1.Node.prototype.getStatus = function () {
    return /** @type{?proto.k8s.io.api.core.v1.NodeStatus} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.NodeStatus, 3));
};
/**
 * @param {?proto.k8s.io.api.core.v1.NodeStatus|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Node} returns this
*/
proto.k8s.io.api.core.v1.Node.prototype.setStatus = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Node} returns this
 */
proto.k8s.io.api.core.v1.Node.prototype.clearStatus = function () {
    return this.setStatus(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Node.prototype.hasStatus = function () {
    return jspb.Message.getField(this, 3) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.NodeAddress.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.NodeAddress.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.NodeAddress} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.NodeAddress.toObject = function (includeInstance, msg) {
        var f, obj = {
            type: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            address: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.NodeAddress}
 */
proto.k8s.io.api.core.v1.NodeAddress.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.NodeAddress;
    return proto.k8s.io.api.core.v1.NodeAddress.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.NodeAddress} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.NodeAddress}
 */
proto.k8s.io.api.core.v1.NodeAddress.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setType(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setAddress(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.NodeAddress.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.NodeAddress.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.NodeAddress} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.NodeAddress.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
};
/**
 * optional string type = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NodeAddress.prototype.getType = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NodeAddress} returns this
 */
proto.k8s.io.api.core.v1.NodeAddress.prototype.setType = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeAddress} returns this
 */
proto.k8s.io.api.core.v1.NodeAddress.prototype.clearType = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeAddress.prototype.hasType = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string address = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NodeAddress.prototype.getAddress = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NodeAddress} returns this
 */
proto.k8s.io.api.core.v1.NodeAddress.prototype.setAddress = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeAddress} returns this
 */
proto.k8s.io.api.core.v1.NodeAddress.prototype.clearAddress = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeAddress.prototype.hasAddress = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.NodeAffinity.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.NodeAffinity.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.NodeAffinity.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.NodeAffinity} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.NodeAffinity.toObject = function (includeInstance, msg) {
        var f, obj = {
            requiredduringschedulingignoredduringexecution: (f = msg.getRequiredduringschedulingignoredduringexecution()) && proto.k8s.io.api.core.v1.NodeSelector.toObject(includeInstance, f),
            preferredduringschedulingignoredduringexecutionList: jspb.Message.toObjectList(msg.getPreferredduringschedulingignoredduringexecutionList(), proto.k8s.io.api.core.v1.PreferredSchedulingTerm.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.NodeAffinity}
 */
proto.k8s.io.api.core.v1.NodeAffinity.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.NodeAffinity;
    return proto.k8s.io.api.core.v1.NodeAffinity.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.NodeAffinity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.NodeAffinity}
 */
proto.k8s.io.api.core.v1.NodeAffinity.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.NodeSelector;
                reader.readMessage(value, proto.k8s.io.api.core.v1.NodeSelector.deserializeBinaryFromReader);
                msg.setRequiredduringschedulingignoredduringexecution(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.PreferredSchedulingTerm;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PreferredSchedulingTerm.deserializeBinaryFromReader);
                msg.addPreferredduringschedulingignoredduringexecution(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.NodeAffinity.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.NodeAffinity.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.NodeAffinity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.NodeAffinity.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getRequiredduringschedulingignoredduringexecution();
    if (f != null) {
        writer.writeMessage(1, f, proto.k8s.io.api.core.v1.NodeSelector.serializeBinaryToWriter);
    }
    f = message.getPreferredduringschedulingignoredduringexecutionList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.PreferredSchedulingTerm.serializeBinaryToWriter);
    }
};
/**
 * optional NodeSelector requiredDuringSchedulingIgnoredDuringExecution = 1;
 * @return {?proto.k8s.io.api.core.v1.NodeSelector}
 */
proto.k8s.io.api.core.v1.NodeAffinity.prototype.getRequiredduringschedulingignoredduringexecution = function () {
    return /** @type{?proto.k8s.io.api.core.v1.NodeSelector} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.NodeSelector, 1));
};
/**
 * @param {?proto.k8s.io.api.core.v1.NodeSelector|undefined} value
 * @return {!proto.k8s.io.api.core.v1.NodeAffinity} returns this
*/
proto.k8s.io.api.core.v1.NodeAffinity.prototype.setRequiredduringschedulingignoredduringexecution = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeAffinity} returns this
 */
proto.k8s.io.api.core.v1.NodeAffinity.prototype.clearRequiredduringschedulingignoredduringexecution = function () {
    return this.setRequiredduringschedulingignoredduringexecution(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeAffinity.prototype.hasRequiredduringschedulingignoredduringexecution = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated PreferredSchedulingTerm preferredDuringSchedulingIgnoredDuringExecution = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.PreferredSchedulingTerm>}
 */
proto.k8s.io.api.core.v1.NodeAffinity.prototype.getPreferredduringschedulingignoredduringexecutionList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.PreferredSchedulingTerm>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.PreferredSchedulingTerm, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.PreferredSchedulingTerm>} value
 * @return {!proto.k8s.io.api.core.v1.NodeAffinity} returns this
*/
proto.k8s.io.api.core.v1.NodeAffinity.prototype.setPreferredduringschedulingignoredduringexecutionList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.PreferredSchedulingTerm=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.PreferredSchedulingTerm}
 */
proto.k8s.io.api.core.v1.NodeAffinity.prototype.addPreferredduringschedulingignoredduringexecution = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.PreferredSchedulingTerm, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.NodeAffinity} returns this
 */
proto.k8s.io.api.core.v1.NodeAffinity.prototype.clearPreferredduringschedulingignoredduringexecutionList = function () {
    return this.setPreferredduringschedulingignoredduringexecutionList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.NodeCondition.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.NodeCondition.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.NodeCondition} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.NodeCondition.toObject = function (includeInstance, msg) {
        var f, obj = {
            type: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            status: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            lastheartbeattime: (f = msg.getLastheartbeattime()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
            lasttransitiontime: (f = msg.getLasttransitiontime()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
            reason: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
            message: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.NodeCondition}
 */
proto.k8s.io.api.core.v1.NodeCondition.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.NodeCondition;
    return proto.k8s.io.api.core.v1.NodeCondition.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.NodeCondition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.NodeCondition}
 */
proto.k8s.io.api.core.v1.NodeCondition.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setType(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setStatus(value);
                break;
            case 3:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
                msg.setLastheartbeattime(value);
                break;
            case 4:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
                msg.setLasttransitiontime(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setReason(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.setMessage(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.NodeCondition.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.NodeCondition.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.NodeCondition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.NodeCondition.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = message.getLastheartbeattime();
    if (f != null) {
        writer.writeMessage(3, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter);
    }
    f = message.getLasttransitiontime();
    if (f != null) {
        writer.writeMessage(4, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeString(5, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 6));
    if (f != null) {
        writer.writeString(6, f);
    }
};
/**
 * optional string type = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NodeCondition.prototype.getType = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NodeCondition} returns this
 */
proto.k8s.io.api.core.v1.NodeCondition.prototype.setType = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeCondition} returns this
 */
proto.k8s.io.api.core.v1.NodeCondition.prototype.clearType = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeCondition.prototype.hasType = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string status = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NodeCondition.prototype.getStatus = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NodeCondition} returns this
 */
proto.k8s.io.api.core.v1.NodeCondition.prototype.setStatus = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeCondition} returns this
 */
proto.k8s.io.api.core.v1.NodeCondition.prototype.clearStatus = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeCondition.prototype.hasStatus = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastHeartbeatTime = 3;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.k8s.io.api.core.v1.NodeCondition.prototype.getLastheartbeattime = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 3));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.k8s.io.api.core.v1.NodeCondition} returns this
*/
proto.k8s.io.api.core.v1.NodeCondition.prototype.setLastheartbeattime = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeCondition} returns this
 */
proto.k8s.io.api.core.v1.NodeCondition.prototype.clearLastheartbeattime = function () {
    return this.setLastheartbeattime(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeCondition.prototype.hasLastheartbeattime = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 4;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.k8s.io.api.core.v1.NodeCondition.prototype.getLasttransitiontime = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 4));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.k8s.io.api.core.v1.NodeCondition} returns this
*/
proto.k8s.io.api.core.v1.NodeCondition.prototype.setLasttransitiontime = function (value) {
    return jspb.Message.setWrapperField(this, 4, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeCondition} returns this
 */
proto.k8s.io.api.core.v1.NodeCondition.prototype.clearLasttransitiontime = function () {
    return this.setLasttransitiontime(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeCondition.prototype.hasLasttransitiontime = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional string reason = 5;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NodeCondition.prototype.getReason = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NodeCondition} returns this
 */
proto.k8s.io.api.core.v1.NodeCondition.prototype.setReason = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeCondition} returns this
 */
proto.k8s.io.api.core.v1.NodeCondition.prototype.clearReason = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeCondition.prototype.hasReason = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional string message = 6;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NodeCondition.prototype.getMessage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NodeCondition} returns this
 */
proto.k8s.io.api.core.v1.NodeCondition.prototype.setMessage = function (value) {
    return jspb.Message.setField(this, 6, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeCondition} returns this
 */
proto.k8s.io.api.core.v1.NodeCondition.prototype.clearMessage = function () {
    return jspb.Message.setField(this, 6, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeCondition.prototype.hasMessage = function () {
    return jspb.Message.getField(this, 6) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.NodeConfigSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.NodeConfigSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.NodeConfigSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.NodeConfigSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            configmap: (f = msg.getConfigmap()) && proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.NodeConfigSource}
 */
proto.k8s.io.api.core.v1.NodeConfigSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.NodeConfigSource;
    return proto.k8s.io.api.core.v1.NodeConfigSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.NodeConfigSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.NodeConfigSource}
 */
proto.k8s.io.api.core.v1.NodeConfigSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 2:
                var value = new proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.deserializeBinaryFromReader);
                msg.setConfigmap(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.NodeConfigSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.NodeConfigSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.NodeConfigSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.NodeConfigSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getConfigmap();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource.serializeBinaryToWriter);
    }
};
/**
 * optional ConfigMapNodeConfigSource configMap = 2;
 * @return {?proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource}
 */
proto.k8s.io.api.core.v1.NodeConfigSource.prototype.getConfigmap = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ConfigMapNodeConfigSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.NodeConfigSource} returns this
*/
proto.k8s.io.api.core.v1.NodeConfigSource.prototype.setConfigmap = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeConfigSource} returns this
 */
proto.k8s.io.api.core.v1.NodeConfigSource.prototype.clearConfigmap = function () {
    return this.setConfigmap(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeConfigSource.prototype.hasConfigmap = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.NodeConfigStatus.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.NodeConfigStatus.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.NodeConfigStatus} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.NodeConfigStatus.toObject = function (includeInstance, msg) {
        var f, obj = {
            assigned: (f = msg.getAssigned()) && proto.k8s.io.api.core.v1.NodeConfigSource.toObject(includeInstance, f),
            active: (f = msg.getActive()) && proto.k8s.io.api.core.v1.NodeConfigSource.toObject(includeInstance, f),
            lastknowngood: (f = msg.getLastknowngood()) && proto.k8s.io.api.core.v1.NodeConfigSource.toObject(includeInstance, f),
            error: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.NodeConfigStatus}
 */
proto.k8s.io.api.core.v1.NodeConfigStatus.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.NodeConfigStatus;
    return proto.k8s.io.api.core.v1.NodeConfigStatus.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.NodeConfigStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.NodeConfigStatus}
 */
proto.k8s.io.api.core.v1.NodeConfigStatus.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.NodeConfigSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.NodeConfigSource.deserializeBinaryFromReader);
                msg.setAssigned(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.NodeConfigSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.NodeConfigSource.deserializeBinaryFromReader);
                msg.setActive(value);
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.NodeConfigSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.NodeConfigSource.deserializeBinaryFromReader);
                msg.setLastknowngood(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setError(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.NodeConfigStatus.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.NodeConfigStatus.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.NodeConfigStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.NodeConfigStatus.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getAssigned();
    if (f != null) {
        writer.writeMessage(1, f, proto.k8s.io.api.core.v1.NodeConfigSource.serializeBinaryToWriter);
    }
    f = message.getActive();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.NodeConfigSource.serializeBinaryToWriter);
    }
    f = message.getLastknowngood();
    if (f != null) {
        writer.writeMessage(3, f, proto.k8s.io.api.core.v1.NodeConfigSource.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
};
/**
 * optional NodeConfigSource assigned = 1;
 * @return {?proto.k8s.io.api.core.v1.NodeConfigSource}
 */
proto.k8s.io.api.core.v1.NodeConfigStatus.prototype.getAssigned = function () {
    return /** @type{?proto.k8s.io.api.core.v1.NodeConfigSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.NodeConfigSource, 1));
};
/**
 * @param {?proto.k8s.io.api.core.v1.NodeConfigSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.NodeConfigStatus} returns this
*/
proto.k8s.io.api.core.v1.NodeConfigStatus.prototype.setAssigned = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeConfigStatus} returns this
 */
proto.k8s.io.api.core.v1.NodeConfigStatus.prototype.clearAssigned = function () {
    return this.setAssigned(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeConfigStatus.prototype.hasAssigned = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional NodeConfigSource active = 2;
 * @return {?proto.k8s.io.api.core.v1.NodeConfigSource}
 */
proto.k8s.io.api.core.v1.NodeConfigStatus.prototype.getActive = function () {
    return /** @type{?proto.k8s.io.api.core.v1.NodeConfigSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.NodeConfigSource, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.NodeConfigSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.NodeConfigStatus} returns this
*/
proto.k8s.io.api.core.v1.NodeConfigStatus.prototype.setActive = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeConfigStatus} returns this
 */
proto.k8s.io.api.core.v1.NodeConfigStatus.prototype.clearActive = function () {
    return this.setActive(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeConfigStatus.prototype.hasActive = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional NodeConfigSource lastKnownGood = 3;
 * @return {?proto.k8s.io.api.core.v1.NodeConfigSource}
 */
proto.k8s.io.api.core.v1.NodeConfigStatus.prototype.getLastknowngood = function () {
    return /** @type{?proto.k8s.io.api.core.v1.NodeConfigSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.NodeConfigSource, 3));
};
/**
 * @param {?proto.k8s.io.api.core.v1.NodeConfigSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.NodeConfigStatus} returns this
*/
proto.k8s.io.api.core.v1.NodeConfigStatus.prototype.setLastknowngood = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeConfigStatus} returns this
 */
proto.k8s.io.api.core.v1.NodeConfigStatus.prototype.clearLastknowngood = function () {
    return this.setLastknowngood(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeConfigStatus.prototype.hasLastknowngood = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string error = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NodeConfigStatus.prototype.getError = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NodeConfigStatus} returns this
 */
proto.k8s.io.api.core.v1.NodeConfigStatus.prototype.setError = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeConfigStatus} returns this
 */
proto.k8s.io.api.core.v1.NodeConfigStatus.prototype.clearError = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeConfigStatus.prototype.hasError = function () {
    return jspb.Message.getField(this, 4) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.NodeDaemonEndpoints.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.NodeDaemonEndpoints.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.NodeDaemonEndpoints} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.NodeDaemonEndpoints.toObject = function (includeInstance, msg) {
        var f, obj = {
            kubeletendpoint: (f = msg.getKubeletendpoint()) && proto.k8s.io.api.core.v1.DaemonEndpoint.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.NodeDaemonEndpoints}
 */
proto.k8s.io.api.core.v1.NodeDaemonEndpoints.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.NodeDaemonEndpoints;
    return proto.k8s.io.api.core.v1.NodeDaemonEndpoints.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.NodeDaemonEndpoints} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.NodeDaemonEndpoints}
 */
proto.k8s.io.api.core.v1.NodeDaemonEndpoints.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.DaemonEndpoint;
                reader.readMessage(value, proto.k8s.io.api.core.v1.DaemonEndpoint.deserializeBinaryFromReader);
                msg.setKubeletendpoint(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.NodeDaemonEndpoints.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.NodeDaemonEndpoints.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.NodeDaemonEndpoints} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.NodeDaemonEndpoints.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getKubeletendpoint();
    if (f != null) {
        writer.writeMessage(1, f, proto.k8s.io.api.core.v1.DaemonEndpoint.serializeBinaryToWriter);
    }
};
/**
 * optional DaemonEndpoint kubeletEndpoint = 1;
 * @return {?proto.k8s.io.api.core.v1.DaemonEndpoint}
 */
proto.k8s.io.api.core.v1.NodeDaemonEndpoints.prototype.getKubeletendpoint = function () {
    return /** @type{?proto.k8s.io.api.core.v1.DaemonEndpoint} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.DaemonEndpoint, 1));
};
/**
 * @param {?proto.k8s.io.api.core.v1.DaemonEndpoint|undefined} value
 * @return {!proto.k8s.io.api.core.v1.NodeDaemonEndpoints} returns this
*/
proto.k8s.io.api.core.v1.NodeDaemonEndpoints.prototype.setKubeletendpoint = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeDaemonEndpoints} returns this
 */
proto.k8s.io.api.core.v1.NodeDaemonEndpoints.prototype.clearKubeletendpoint = function () {
    return this.setKubeletendpoint(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeDaemonEndpoints.prototype.hasKubeletendpoint = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.NodeList.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.NodeList.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.NodeList.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.NodeList} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.NodeList.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
            itemsList: jspb.Message.toObjectList(msg.getItemsList(), proto.k8s.io.api.core.v1.Node.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.NodeList}
 */
proto.k8s.io.api.core.v1.NodeList.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.NodeList;
    return proto.k8s.io.api.core.v1.NodeList.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.NodeList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.NodeList}
 */
proto.k8s.io.api.core.v1.NodeList.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.Node;
                reader.readMessage(value, proto.k8s.io.api.core.v1.Node.deserializeBinaryFromReader);
                msg.addItems(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.NodeList.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.NodeList.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.NodeList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.NodeList.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter);
    }
    f = message.getItemsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.Node.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.k8s.io.api.core.v1.NodeList.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.NodeList} returns this
*/
proto.k8s.io.api.core.v1.NodeList.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeList} returns this
 */
proto.k8s.io.api.core.v1.NodeList.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeList.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated Node items = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.Node>}
 */
proto.k8s.io.api.core.v1.NodeList.prototype.getItemsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.Node>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.Node, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.Node>} value
 * @return {!proto.k8s.io.api.core.v1.NodeList} returns this
*/
proto.k8s.io.api.core.v1.NodeList.prototype.setItemsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.Node=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.Node}
 */
proto.k8s.io.api.core.v1.NodeList.prototype.addItems = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.Node, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.NodeList} returns this
 */
proto.k8s.io.api.core.v1.NodeList.prototype.clearItemsList = function () {
    return this.setItemsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.NodeProxyOptions.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.NodeProxyOptions.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.NodeProxyOptions} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.NodeProxyOptions.toObject = function (includeInstance, msg) {
        var f, obj = {
            path: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.NodeProxyOptions}
 */
proto.k8s.io.api.core.v1.NodeProxyOptions.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.NodeProxyOptions;
    return proto.k8s.io.api.core.v1.NodeProxyOptions.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.NodeProxyOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.NodeProxyOptions}
 */
proto.k8s.io.api.core.v1.NodeProxyOptions.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setPath(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.NodeProxyOptions.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.NodeProxyOptions.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.NodeProxyOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.NodeProxyOptions.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
};
/**
 * optional string path = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NodeProxyOptions.prototype.getPath = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NodeProxyOptions} returns this
 */
proto.k8s.io.api.core.v1.NodeProxyOptions.prototype.setPath = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeProxyOptions} returns this
 */
proto.k8s.io.api.core.v1.NodeProxyOptions.prototype.clearPath = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeProxyOptions.prototype.hasPath = function () {
    return jspb.Message.getField(this, 1) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.NodeResources.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.NodeResources.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.NodeResources} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.NodeResources.toObject = function (includeInstance, msg) {
        var f, obj = {
            capacityMap: (f = msg.getCapacityMap()) ? f.toObject(includeInstance, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.toObject) : []
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.NodeResources}
 */
proto.k8s.io.api.core.v1.NodeResources.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.NodeResources;
    return proto.k8s.io.api.core.v1.NodeResources.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.NodeResources} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.NodeResources}
 */
proto.k8s.io.api.core.v1.NodeResources.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = msg.getCapacityMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.deserializeBinaryFromReader, "", new proto.k8s.io.apimachinery.pkg.api.resource.Quantity());
                });
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.NodeResources.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.NodeResources.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.NodeResources} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.NodeResources.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getCapacityMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.serializeBinaryToWriter);
    }
};
/**
 * map<string, k8s.io.apimachinery.pkg.api.resource.Quantity> capacity = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>}
 */
proto.k8s.io.api.core.v1.NodeResources.prototype.getCapacityMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>} */ (jspb.Message.getMapField(this, 1, opt_noLazyCreate, proto.k8s.io.apimachinery.pkg.api.resource.Quantity));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.k8s.io.api.core.v1.NodeResources} returns this
 */
proto.k8s.io.api.core.v1.NodeResources.prototype.clearCapacityMap = function () {
    this.getCapacityMap().clear();
    return this;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.NodeSelector.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.NodeSelector.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.NodeSelector.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.NodeSelector} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.NodeSelector.toObject = function (includeInstance, msg) {
        var f, obj = {
            nodeselectortermsList: jspb.Message.toObjectList(msg.getNodeselectortermsList(), proto.k8s.io.api.core.v1.NodeSelectorTerm.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.NodeSelector}
 */
proto.k8s.io.api.core.v1.NodeSelector.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.NodeSelector;
    return proto.k8s.io.api.core.v1.NodeSelector.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.NodeSelector} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.NodeSelector}
 */
proto.k8s.io.api.core.v1.NodeSelector.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.NodeSelectorTerm;
                reader.readMessage(value, proto.k8s.io.api.core.v1.NodeSelectorTerm.deserializeBinaryFromReader);
                msg.addNodeselectorterms(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.NodeSelector.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.NodeSelector.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.NodeSelector} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.NodeSelector.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getNodeselectortermsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, proto.k8s.io.api.core.v1.NodeSelectorTerm.serializeBinaryToWriter);
    }
};
/**
 * repeated NodeSelectorTerm nodeSelectorTerms = 1;
 * @return {!Array<!proto.k8s.io.api.core.v1.NodeSelectorTerm>}
 */
proto.k8s.io.api.core.v1.NodeSelector.prototype.getNodeselectortermsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.NodeSelectorTerm>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.NodeSelectorTerm, 1));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.NodeSelectorTerm>} value
 * @return {!proto.k8s.io.api.core.v1.NodeSelector} returns this
*/
proto.k8s.io.api.core.v1.NodeSelector.prototype.setNodeselectortermsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.NodeSelectorTerm=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.NodeSelectorTerm}
 */
proto.k8s.io.api.core.v1.NodeSelector.prototype.addNodeselectorterms = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.k8s.io.api.core.v1.NodeSelectorTerm, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.NodeSelector} returns this
 */
proto.k8s.io.api.core.v1.NodeSelector.prototype.clearNodeselectortermsList = function () {
    return this.setNodeselectortermsList([]);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.NodeSelectorRequirement.repeatedFields_ = [3];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.NodeSelectorRequirement.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.NodeSelectorRequirement.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.NodeSelectorRequirement} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.NodeSelectorRequirement.toObject = function (includeInstance, msg) {
        var f, obj = {
            key: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            operator: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            valuesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.NodeSelectorRequirement}
 */
proto.k8s.io.api.core.v1.NodeSelectorRequirement.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.NodeSelectorRequirement;
    return proto.k8s.io.api.core.v1.NodeSelectorRequirement.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.NodeSelectorRequirement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.NodeSelectorRequirement}
 */
proto.k8s.io.api.core.v1.NodeSelectorRequirement.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setKey(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setOperator(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.addValues(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.NodeSelectorRequirement.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.NodeSelectorRequirement.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.NodeSelectorRequirement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.NodeSelectorRequirement.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = message.getValuesList();
    if (f.length > 0) {
        writer.writeRepeatedString(3, f);
    }
};
/**
 * optional string key = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NodeSelectorRequirement.prototype.getKey = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NodeSelectorRequirement} returns this
 */
proto.k8s.io.api.core.v1.NodeSelectorRequirement.prototype.setKey = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeSelectorRequirement} returns this
 */
proto.k8s.io.api.core.v1.NodeSelectorRequirement.prototype.clearKey = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeSelectorRequirement.prototype.hasKey = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string operator = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NodeSelectorRequirement.prototype.getOperator = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NodeSelectorRequirement} returns this
 */
proto.k8s.io.api.core.v1.NodeSelectorRequirement.prototype.setOperator = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeSelectorRequirement} returns this
 */
proto.k8s.io.api.core.v1.NodeSelectorRequirement.prototype.clearOperator = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeSelectorRequirement.prototype.hasOperator = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * repeated string values = 3;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.NodeSelectorRequirement.prototype.getValuesList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.NodeSelectorRequirement} returns this
 */
proto.k8s.io.api.core.v1.NodeSelectorRequirement.prototype.setValuesList = function (value) {
    return jspb.Message.setField(this, 3, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.NodeSelectorRequirement} returns this
 */
proto.k8s.io.api.core.v1.NodeSelectorRequirement.prototype.addValues = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.NodeSelectorRequirement} returns this
 */
proto.k8s.io.api.core.v1.NodeSelectorRequirement.prototype.clearValuesList = function () {
    return this.setValuesList([]);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.NodeSelectorTerm.repeatedFields_ = [1, 2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.NodeSelectorTerm.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.NodeSelectorTerm.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.NodeSelectorTerm} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.NodeSelectorTerm.toObject = function (includeInstance, msg) {
        var f, obj = {
            matchexpressionsList: jspb.Message.toObjectList(msg.getMatchexpressionsList(), proto.k8s.io.api.core.v1.NodeSelectorRequirement.toObject, includeInstance),
            matchfieldsList: jspb.Message.toObjectList(msg.getMatchfieldsList(), proto.k8s.io.api.core.v1.NodeSelectorRequirement.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.NodeSelectorTerm}
 */
proto.k8s.io.api.core.v1.NodeSelectorTerm.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.NodeSelectorTerm;
    return proto.k8s.io.api.core.v1.NodeSelectorTerm.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.NodeSelectorTerm} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.NodeSelectorTerm}
 */
proto.k8s.io.api.core.v1.NodeSelectorTerm.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.NodeSelectorRequirement;
                reader.readMessage(value, proto.k8s.io.api.core.v1.NodeSelectorRequirement.deserializeBinaryFromReader);
                msg.addMatchexpressions(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.NodeSelectorRequirement;
                reader.readMessage(value, proto.k8s.io.api.core.v1.NodeSelectorRequirement.deserializeBinaryFromReader);
                msg.addMatchfields(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.NodeSelectorTerm.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.NodeSelectorTerm.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.NodeSelectorTerm} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.NodeSelectorTerm.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMatchexpressionsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, proto.k8s.io.api.core.v1.NodeSelectorRequirement.serializeBinaryToWriter);
    }
    f = message.getMatchfieldsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.NodeSelectorRequirement.serializeBinaryToWriter);
    }
};
/**
 * repeated NodeSelectorRequirement matchExpressions = 1;
 * @return {!Array<!proto.k8s.io.api.core.v1.NodeSelectorRequirement>}
 */
proto.k8s.io.api.core.v1.NodeSelectorTerm.prototype.getMatchexpressionsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.NodeSelectorRequirement>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.NodeSelectorRequirement, 1));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.NodeSelectorRequirement>} value
 * @return {!proto.k8s.io.api.core.v1.NodeSelectorTerm} returns this
*/
proto.k8s.io.api.core.v1.NodeSelectorTerm.prototype.setMatchexpressionsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.NodeSelectorRequirement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.NodeSelectorRequirement}
 */
proto.k8s.io.api.core.v1.NodeSelectorTerm.prototype.addMatchexpressions = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.k8s.io.api.core.v1.NodeSelectorRequirement, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.NodeSelectorTerm} returns this
 */
proto.k8s.io.api.core.v1.NodeSelectorTerm.prototype.clearMatchexpressionsList = function () {
    return this.setMatchexpressionsList([]);
};
/**
 * repeated NodeSelectorRequirement matchFields = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.NodeSelectorRequirement>}
 */
proto.k8s.io.api.core.v1.NodeSelectorTerm.prototype.getMatchfieldsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.NodeSelectorRequirement>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.NodeSelectorRequirement, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.NodeSelectorRequirement>} value
 * @return {!proto.k8s.io.api.core.v1.NodeSelectorTerm} returns this
*/
proto.k8s.io.api.core.v1.NodeSelectorTerm.prototype.setMatchfieldsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.NodeSelectorRequirement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.NodeSelectorRequirement}
 */
proto.k8s.io.api.core.v1.NodeSelectorTerm.prototype.addMatchfields = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.NodeSelectorRequirement, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.NodeSelectorTerm} returns this
 */
proto.k8s.io.api.core.v1.NodeSelectorTerm.prototype.clearMatchfieldsList = function () {
    return this.setMatchfieldsList([]);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.NodeSpec.repeatedFields_ = [7, 5];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.NodeSpec.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.NodeSpec.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.NodeSpec} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.NodeSpec.toObject = function (includeInstance, msg) {
        var f, obj = {
            podcidr: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            podcidrsList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
            providerid: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            unschedulable: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
            taintsList: jspb.Message.toObjectList(msg.getTaintsList(), proto.k8s.io.api.core.v1.Taint.toObject, includeInstance),
            configsource: (f = msg.getConfigsource()) && proto.k8s.io.api.core.v1.NodeConfigSource.toObject(includeInstance, f),
            externalid: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.NodeSpec}
 */
proto.k8s.io.api.core.v1.NodeSpec.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.NodeSpec;
    return proto.k8s.io.api.core.v1.NodeSpec.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.NodeSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.NodeSpec}
 */
proto.k8s.io.api.core.v1.NodeSpec.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setPodcidr(value);
                break;
            case 7:
                var value = /** @type {string} */ (reader.readString());
                msg.addPodcidrs(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setProviderid(value);
                break;
            case 4:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setUnschedulable(value);
                break;
            case 5:
                var value = new proto.k8s.io.api.core.v1.Taint;
                reader.readMessage(value, proto.k8s.io.api.core.v1.Taint.deserializeBinaryFromReader);
                msg.addTaints(value);
                break;
            case 6:
                var value = new proto.k8s.io.api.core.v1.NodeConfigSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.NodeConfigSource.deserializeBinaryFromReader);
                msg.setConfigsource(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setExternalid(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.NodeSpec.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.NodeSpec.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.NodeSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.NodeSpec.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = message.getPodcidrsList();
    if (f.length > 0) {
        writer.writeRepeatedString(7, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeBool(4, f);
    }
    f = message.getTaintsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(5, f, proto.k8s.io.api.core.v1.Taint.serializeBinaryToWriter);
    }
    f = message.getConfigsource();
    if (f != null) {
        writer.writeMessage(6, f, proto.k8s.io.api.core.v1.NodeConfigSource.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
};
/**
 * optional string podCIDR = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NodeSpec.prototype.getPodcidr = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NodeSpec} returns this
 */
proto.k8s.io.api.core.v1.NodeSpec.prototype.setPodcidr = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeSpec} returns this
 */
proto.k8s.io.api.core.v1.NodeSpec.prototype.clearPodcidr = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeSpec.prototype.hasPodcidr = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated string podCIDRs = 7;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.NodeSpec.prototype.getPodcidrsList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.NodeSpec} returns this
 */
proto.k8s.io.api.core.v1.NodeSpec.prototype.setPodcidrsList = function (value) {
    return jspb.Message.setField(this, 7, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.NodeSpec} returns this
 */
proto.k8s.io.api.core.v1.NodeSpec.prototype.addPodcidrs = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.NodeSpec} returns this
 */
proto.k8s.io.api.core.v1.NodeSpec.prototype.clearPodcidrsList = function () {
    return this.setPodcidrsList([]);
};
/**
 * optional string providerID = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NodeSpec.prototype.getProviderid = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NodeSpec} returns this
 */
proto.k8s.io.api.core.v1.NodeSpec.prototype.setProviderid = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeSpec} returns this
 */
proto.k8s.io.api.core.v1.NodeSpec.prototype.clearProviderid = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeSpec.prototype.hasProviderid = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional bool unschedulable = 4;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeSpec.prototype.getUnschedulable = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.NodeSpec} returns this
 */
proto.k8s.io.api.core.v1.NodeSpec.prototype.setUnschedulable = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeSpec} returns this
 */
proto.k8s.io.api.core.v1.NodeSpec.prototype.clearUnschedulable = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeSpec.prototype.hasUnschedulable = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * repeated Taint taints = 5;
 * @return {!Array<!proto.k8s.io.api.core.v1.Taint>}
 */
proto.k8s.io.api.core.v1.NodeSpec.prototype.getTaintsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.Taint>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.Taint, 5));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.Taint>} value
 * @return {!proto.k8s.io.api.core.v1.NodeSpec} returns this
*/
proto.k8s.io.api.core.v1.NodeSpec.prototype.setTaintsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 5, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.Taint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.Taint}
 */
proto.k8s.io.api.core.v1.NodeSpec.prototype.addTaints = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.k8s.io.api.core.v1.Taint, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.NodeSpec} returns this
 */
proto.k8s.io.api.core.v1.NodeSpec.prototype.clearTaintsList = function () {
    return this.setTaintsList([]);
};
/**
 * optional NodeConfigSource configSource = 6;
 * @return {?proto.k8s.io.api.core.v1.NodeConfigSource}
 */
proto.k8s.io.api.core.v1.NodeSpec.prototype.getConfigsource = function () {
    return /** @type{?proto.k8s.io.api.core.v1.NodeConfigSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.NodeConfigSource, 6));
};
/**
 * @param {?proto.k8s.io.api.core.v1.NodeConfigSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.NodeSpec} returns this
*/
proto.k8s.io.api.core.v1.NodeSpec.prototype.setConfigsource = function (value) {
    return jspb.Message.setWrapperField(this, 6, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeSpec} returns this
 */
proto.k8s.io.api.core.v1.NodeSpec.prototype.clearConfigsource = function () {
    return this.setConfigsource(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeSpec.prototype.hasConfigsource = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * optional string externalID = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NodeSpec.prototype.getExternalid = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NodeSpec} returns this
 */
proto.k8s.io.api.core.v1.NodeSpec.prototype.setExternalid = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeSpec} returns this
 */
proto.k8s.io.api.core.v1.NodeSpec.prototype.clearExternalid = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeSpec.prototype.hasExternalid = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.NodeStatus.repeatedFields_ = [4, 5, 8, 9, 10];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.NodeStatus.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.NodeStatus.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.NodeStatus} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.NodeStatus.toObject = function (includeInstance, msg) {
        var f, obj = {
            capacityMap: (f = msg.getCapacityMap()) ? f.toObject(includeInstance, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.toObject) : [],
            allocatableMap: (f = msg.getAllocatableMap()) ? f.toObject(includeInstance, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.toObject) : [],
            phase: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            conditionsList: jspb.Message.toObjectList(msg.getConditionsList(), proto.k8s.io.api.core.v1.NodeCondition.toObject, includeInstance),
            addressesList: jspb.Message.toObjectList(msg.getAddressesList(), proto.k8s.io.api.core.v1.NodeAddress.toObject, includeInstance),
            daemonendpoints: (f = msg.getDaemonendpoints()) && proto.k8s.io.api.core.v1.NodeDaemonEndpoints.toObject(includeInstance, f),
            nodeinfo: (f = msg.getNodeinfo()) && proto.k8s.io.api.core.v1.NodeSystemInfo.toObject(includeInstance, f),
            imagesList: jspb.Message.toObjectList(msg.getImagesList(), proto.k8s.io.api.core.v1.ContainerImage.toObject, includeInstance),
            volumesinuseList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
            volumesattachedList: jspb.Message.toObjectList(msg.getVolumesattachedList(), proto.k8s.io.api.core.v1.AttachedVolume.toObject, includeInstance),
            config: (f = msg.getConfig()) && proto.k8s.io.api.core.v1.NodeConfigStatus.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.NodeStatus}
 */
proto.k8s.io.api.core.v1.NodeStatus.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.NodeStatus;
    return proto.k8s.io.api.core.v1.NodeStatus.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.NodeStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.NodeStatus}
 */
proto.k8s.io.api.core.v1.NodeStatus.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = msg.getCapacityMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.deserializeBinaryFromReader, "", new proto.k8s.io.apimachinery.pkg.api.resource.Quantity());
                });
                break;
            case 2:
                var value = msg.getAllocatableMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.deserializeBinaryFromReader, "", new proto.k8s.io.apimachinery.pkg.api.resource.Quantity());
                });
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setPhase(value);
                break;
            case 4:
                var value = new proto.k8s.io.api.core.v1.NodeCondition;
                reader.readMessage(value, proto.k8s.io.api.core.v1.NodeCondition.deserializeBinaryFromReader);
                msg.addConditions(value);
                break;
            case 5:
                var value = new proto.k8s.io.api.core.v1.NodeAddress;
                reader.readMessage(value, proto.k8s.io.api.core.v1.NodeAddress.deserializeBinaryFromReader);
                msg.addAddresses(value);
                break;
            case 6:
                var value = new proto.k8s.io.api.core.v1.NodeDaemonEndpoints;
                reader.readMessage(value, proto.k8s.io.api.core.v1.NodeDaemonEndpoints.deserializeBinaryFromReader);
                msg.setDaemonendpoints(value);
                break;
            case 7:
                var value = new proto.k8s.io.api.core.v1.NodeSystemInfo;
                reader.readMessage(value, proto.k8s.io.api.core.v1.NodeSystemInfo.deserializeBinaryFromReader);
                msg.setNodeinfo(value);
                break;
            case 8:
                var value = new proto.k8s.io.api.core.v1.ContainerImage;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ContainerImage.deserializeBinaryFromReader);
                msg.addImages(value);
                break;
            case 9:
                var value = /** @type {string} */ (reader.readString());
                msg.addVolumesinuse(value);
                break;
            case 10:
                var value = new proto.k8s.io.api.core.v1.AttachedVolume;
                reader.readMessage(value, proto.k8s.io.api.core.v1.AttachedVolume.deserializeBinaryFromReader);
                msg.addVolumesattached(value);
                break;
            case 11:
                var value = new proto.k8s.io.api.core.v1.NodeConfigStatus;
                reader.readMessage(value, proto.k8s.io.api.core.v1.NodeConfigStatus.deserializeBinaryFromReader);
                msg.setConfig(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.NodeStatus.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.NodeStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.NodeStatus.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getCapacityMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.serializeBinaryToWriter);
    }
    f = message.getAllocatableMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = message.getConditionsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(4, f, proto.k8s.io.api.core.v1.NodeCondition.serializeBinaryToWriter);
    }
    f = message.getAddressesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(5, f, proto.k8s.io.api.core.v1.NodeAddress.serializeBinaryToWriter);
    }
    f = message.getDaemonendpoints();
    if (f != null) {
        writer.writeMessage(6, f, proto.k8s.io.api.core.v1.NodeDaemonEndpoints.serializeBinaryToWriter);
    }
    f = message.getNodeinfo();
    if (f != null) {
        writer.writeMessage(7, f, proto.k8s.io.api.core.v1.NodeSystemInfo.serializeBinaryToWriter);
    }
    f = message.getImagesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(8, f, proto.k8s.io.api.core.v1.ContainerImage.serializeBinaryToWriter);
    }
    f = message.getVolumesinuseList();
    if (f.length > 0) {
        writer.writeRepeatedString(9, f);
    }
    f = message.getVolumesattachedList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(10, f, proto.k8s.io.api.core.v1.AttachedVolume.serializeBinaryToWriter);
    }
    f = message.getConfig();
    if (f != null) {
        writer.writeMessage(11, f, proto.k8s.io.api.core.v1.NodeConfigStatus.serializeBinaryToWriter);
    }
};
/**
 * map<string, k8s.io.apimachinery.pkg.api.resource.Quantity> capacity = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.getCapacityMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>} */ (jspb.Message.getMapField(this, 1, opt_noLazyCreate, proto.k8s.io.apimachinery.pkg.api.resource.Quantity));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.k8s.io.api.core.v1.NodeStatus} returns this
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.clearCapacityMap = function () {
    this.getCapacityMap().clear();
    return this;
};
/**
 * map<string, k8s.io.apimachinery.pkg.api.resource.Quantity> allocatable = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.getAllocatableMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>} */ (jspb.Message.getMapField(this, 2, opt_noLazyCreate, proto.k8s.io.apimachinery.pkg.api.resource.Quantity));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.k8s.io.api.core.v1.NodeStatus} returns this
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.clearAllocatableMap = function () {
    this.getAllocatableMap().clear();
    return this;
};
/**
 * optional string phase = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.getPhase = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NodeStatus} returns this
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.setPhase = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeStatus} returns this
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.clearPhase = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.hasPhase = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * repeated NodeCondition conditions = 4;
 * @return {!Array<!proto.k8s.io.api.core.v1.NodeCondition>}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.getConditionsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.NodeCondition>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.NodeCondition, 4));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.NodeCondition>} value
 * @return {!proto.k8s.io.api.core.v1.NodeStatus} returns this
*/
proto.k8s.io.api.core.v1.NodeStatus.prototype.setConditionsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 4, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.NodeCondition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.NodeCondition}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.addConditions = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.k8s.io.api.core.v1.NodeCondition, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.NodeStatus} returns this
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.clearConditionsList = function () {
    return this.setConditionsList([]);
};
/**
 * repeated NodeAddress addresses = 5;
 * @return {!Array<!proto.k8s.io.api.core.v1.NodeAddress>}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.getAddressesList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.NodeAddress>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.NodeAddress, 5));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.NodeAddress>} value
 * @return {!proto.k8s.io.api.core.v1.NodeStatus} returns this
*/
proto.k8s.io.api.core.v1.NodeStatus.prototype.setAddressesList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 5, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.NodeAddress=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.NodeAddress}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.addAddresses = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.k8s.io.api.core.v1.NodeAddress, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.NodeStatus} returns this
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.clearAddressesList = function () {
    return this.setAddressesList([]);
};
/**
 * optional NodeDaemonEndpoints daemonEndpoints = 6;
 * @return {?proto.k8s.io.api.core.v1.NodeDaemonEndpoints}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.getDaemonendpoints = function () {
    return /** @type{?proto.k8s.io.api.core.v1.NodeDaemonEndpoints} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.NodeDaemonEndpoints, 6));
};
/**
 * @param {?proto.k8s.io.api.core.v1.NodeDaemonEndpoints|undefined} value
 * @return {!proto.k8s.io.api.core.v1.NodeStatus} returns this
*/
proto.k8s.io.api.core.v1.NodeStatus.prototype.setDaemonendpoints = function (value) {
    return jspb.Message.setWrapperField(this, 6, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeStatus} returns this
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.clearDaemonendpoints = function () {
    return this.setDaemonendpoints(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.hasDaemonendpoints = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * optional NodeSystemInfo nodeInfo = 7;
 * @return {?proto.k8s.io.api.core.v1.NodeSystemInfo}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.getNodeinfo = function () {
    return /** @type{?proto.k8s.io.api.core.v1.NodeSystemInfo} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.NodeSystemInfo, 7));
};
/**
 * @param {?proto.k8s.io.api.core.v1.NodeSystemInfo|undefined} value
 * @return {!proto.k8s.io.api.core.v1.NodeStatus} returns this
*/
proto.k8s.io.api.core.v1.NodeStatus.prototype.setNodeinfo = function (value) {
    return jspb.Message.setWrapperField(this, 7, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeStatus} returns this
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.clearNodeinfo = function () {
    return this.setNodeinfo(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.hasNodeinfo = function () {
    return jspb.Message.getField(this, 7) != null;
};
/**
 * repeated ContainerImage images = 8;
 * @return {!Array<!proto.k8s.io.api.core.v1.ContainerImage>}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.getImagesList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.ContainerImage>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.ContainerImage, 8));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.ContainerImage>} value
 * @return {!proto.k8s.io.api.core.v1.NodeStatus} returns this
*/
proto.k8s.io.api.core.v1.NodeStatus.prototype.setImagesList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 8, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.ContainerImage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ContainerImage}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.addImages = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.k8s.io.api.core.v1.ContainerImage, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.NodeStatus} returns this
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.clearImagesList = function () {
    return this.setImagesList([]);
};
/**
 * repeated string volumesInUse = 9;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.getVolumesinuseList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.NodeStatus} returns this
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.setVolumesinuseList = function (value) {
    return jspb.Message.setField(this, 9, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.NodeStatus} returns this
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.addVolumesinuse = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.NodeStatus} returns this
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.clearVolumesinuseList = function () {
    return this.setVolumesinuseList([]);
};
/**
 * repeated AttachedVolume volumesAttached = 10;
 * @return {!Array<!proto.k8s.io.api.core.v1.AttachedVolume>}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.getVolumesattachedList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.AttachedVolume>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.AttachedVolume, 10));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.AttachedVolume>} value
 * @return {!proto.k8s.io.api.core.v1.NodeStatus} returns this
*/
proto.k8s.io.api.core.v1.NodeStatus.prototype.setVolumesattachedList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 10, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.AttachedVolume=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.AttachedVolume}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.addVolumesattached = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.k8s.io.api.core.v1.AttachedVolume, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.NodeStatus} returns this
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.clearVolumesattachedList = function () {
    return this.setVolumesattachedList([]);
};
/**
 * optional NodeConfigStatus config = 11;
 * @return {?proto.k8s.io.api.core.v1.NodeConfigStatus}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.getConfig = function () {
    return /** @type{?proto.k8s.io.api.core.v1.NodeConfigStatus} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.NodeConfigStatus, 11));
};
/**
 * @param {?proto.k8s.io.api.core.v1.NodeConfigStatus|undefined} value
 * @return {!proto.k8s.io.api.core.v1.NodeStatus} returns this
*/
proto.k8s.io.api.core.v1.NodeStatus.prototype.setConfig = function (value) {
    return jspb.Message.setWrapperField(this, 11, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeStatus} returns this
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.clearConfig = function () {
    return this.setConfig(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeStatus.prototype.hasConfig = function () {
    return jspb.Message.getField(this, 11) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.NodeSystemInfo.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.NodeSystemInfo} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.NodeSystemInfo.toObject = function (includeInstance, msg) {
        var f, obj = {
            machineid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            systemuuid: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            bootid: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            kernelversion: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
            osimage: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
            containerruntimeversion: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
            kubeletversion: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
            kubeproxyversion: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
            operatingsystem: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
            architecture: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.NodeSystemInfo}
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.NodeSystemInfo;
    return proto.k8s.io.api.core.v1.NodeSystemInfo.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.NodeSystemInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.NodeSystemInfo}
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setMachineid(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setSystemuuid(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setBootid(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setKernelversion(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setOsimage(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.setContainerruntimeversion(value);
                break;
            case 7:
                var value = /** @type {string} */ (reader.readString());
                msg.setKubeletversion(value);
                break;
            case 8:
                var value = /** @type {string} */ (reader.readString());
                msg.setKubeproxyversion(value);
                break;
            case 9:
                var value = /** @type {string} */ (reader.readString());
                msg.setOperatingsystem(value);
                break;
            case 10:
                var value = /** @type {string} */ (reader.readString());
                msg.setArchitecture(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.NodeSystemInfo.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.NodeSystemInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeString(5, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 6));
    if (f != null) {
        writer.writeString(6, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 7));
    if (f != null) {
        writer.writeString(7, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 8));
    if (f != null) {
        writer.writeString(8, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 9));
    if (f != null) {
        writer.writeString(9, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 10));
    if (f != null) {
        writer.writeString(10, f);
    }
};
/**
 * optional string machineID = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.getMachineid = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NodeSystemInfo} returns this
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.setMachineid = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeSystemInfo} returns this
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.clearMachineid = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.hasMachineid = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string systemUUID = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.getSystemuuid = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NodeSystemInfo} returns this
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.setSystemuuid = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeSystemInfo} returns this
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.clearSystemuuid = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.hasSystemuuid = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string bootID = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.getBootid = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NodeSystemInfo} returns this
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.setBootid = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeSystemInfo} returns this
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.clearBootid = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.hasBootid = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string kernelVersion = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.getKernelversion = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NodeSystemInfo} returns this
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.setKernelversion = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeSystemInfo} returns this
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.clearKernelversion = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.hasKernelversion = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional string osImage = 5;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.getOsimage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NodeSystemInfo} returns this
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.setOsimage = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeSystemInfo} returns this
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.clearOsimage = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.hasOsimage = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional string containerRuntimeVersion = 6;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.getContainerruntimeversion = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NodeSystemInfo} returns this
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.setContainerruntimeversion = function (value) {
    return jspb.Message.setField(this, 6, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeSystemInfo} returns this
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.clearContainerruntimeversion = function () {
    return jspb.Message.setField(this, 6, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.hasContainerruntimeversion = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * optional string kubeletVersion = 7;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.getKubeletversion = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NodeSystemInfo} returns this
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.setKubeletversion = function (value) {
    return jspb.Message.setField(this, 7, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeSystemInfo} returns this
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.clearKubeletversion = function () {
    return jspb.Message.setField(this, 7, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.hasKubeletversion = function () {
    return jspb.Message.getField(this, 7) != null;
};
/**
 * optional string kubeProxyVersion = 8;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.getKubeproxyversion = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NodeSystemInfo} returns this
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.setKubeproxyversion = function (value) {
    return jspb.Message.setField(this, 8, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeSystemInfo} returns this
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.clearKubeproxyversion = function () {
    return jspb.Message.setField(this, 8, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.hasKubeproxyversion = function () {
    return jspb.Message.getField(this, 8) != null;
};
/**
 * optional string operatingSystem = 9;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.getOperatingsystem = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NodeSystemInfo} returns this
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.setOperatingsystem = function (value) {
    return jspb.Message.setField(this, 9, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeSystemInfo} returns this
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.clearOperatingsystem = function () {
    return jspb.Message.setField(this, 9, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.hasOperatingsystem = function () {
    return jspb.Message.getField(this, 9) != null;
};
/**
 * optional string architecture = 10;
 * @return {string}
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.getArchitecture = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.NodeSystemInfo} returns this
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.setArchitecture = function (value) {
    return jspb.Message.setField(this, 10, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.NodeSystemInfo} returns this
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.clearArchitecture = function () {
    return jspb.Message.setField(this, 10, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.NodeSystemInfo.prototype.hasArchitecture = function () {
    return jspb.Message.getField(this, 10) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ObjectFieldSelector.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ObjectFieldSelector.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ObjectFieldSelector} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ObjectFieldSelector.toObject = function (includeInstance, msg) {
        var f, obj = {
            apiversion: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            fieldpath: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ObjectFieldSelector}
 */
proto.k8s.io.api.core.v1.ObjectFieldSelector.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ObjectFieldSelector;
    return proto.k8s.io.api.core.v1.ObjectFieldSelector.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ObjectFieldSelector} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ObjectFieldSelector}
 */
proto.k8s.io.api.core.v1.ObjectFieldSelector.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setApiversion(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setFieldpath(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ObjectFieldSelector.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ObjectFieldSelector.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ObjectFieldSelector} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ObjectFieldSelector.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
};
/**
 * optional string apiVersion = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ObjectFieldSelector.prototype.getApiversion = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ObjectFieldSelector} returns this
 */
proto.k8s.io.api.core.v1.ObjectFieldSelector.prototype.setApiversion = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ObjectFieldSelector} returns this
 */
proto.k8s.io.api.core.v1.ObjectFieldSelector.prototype.clearApiversion = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ObjectFieldSelector.prototype.hasApiversion = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string fieldPath = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ObjectFieldSelector.prototype.getFieldpath = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ObjectFieldSelector} returns this
 */
proto.k8s.io.api.core.v1.ObjectFieldSelector.prototype.setFieldpath = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ObjectFieldSelector} returns this
 */
proto.k8s.io.api.core.v1.ObjectFieldSelector.prototype.clearFieldpath = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ObjectFieldSelector.prototype.hasFieldpath = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ObjectReference.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ObjectReference.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ObjectReference} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ObjectReference.toObject = function (includeInstance, msg) {
        var f, obj = {
            kind: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            namespace: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            name: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            uid: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
            apiversion: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
            resourceversion: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
            fieldpath: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ObjectReference}
 */
proto.k8s.io.api.core.v1.ObjectReference.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ObjectReference;
    return proto.k8s.io.api.core.v1.ObjectReference.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ObjectReference} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ObjectReference}
 */
proto.k8s.io.api.core.v1.ObjectReference.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setKind(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setNamespace(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setUid(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setApiversion(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.setResourceversion(value);
                break;
            case 7:
                var value = /** @type {string} */ (reader.readString());
                msg.setFieldpath(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ObjectReference.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ObjectReference.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ObjectReference} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ObjectReference.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeString(5, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 6));
    if (f != null) {
        writer.writeString(6, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 7));
    if (f != null) {
        writer.writeString(7, f);
    }
};
/**
 * optional string kind = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ObjectReference.prototype.getKind = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ObjectReference} returns this
 */
proto.k8s.io.api.core.v1.ObjectReference.prototype.setKind = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ObjectReference} returns this
 */
proto.k8s.io.api.core.v1.ObjectReference.prototype.clearKind = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ObjectReference.prototype.hasKind = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ObjectReference.prototype.getNamespace = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ObjectReference} returns this
 */
proto.k8s.io.api.core.v1.ObjectReference.prototype.setNamespace = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ObjectReference} returns this
 */
proto.k8s.io.api.core.v1.ObjectReference.prototype.clearNamespace = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ObjectReference.prototype.hasNamespace = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string name = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ObjectReference.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ObjectReference} returns this
 */
proto.k8s.io.api.core.v1.ObjectReference.prototype.setName = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ObjectReference} returns this
 */
proto.k8s.io.api.core.v1.ObjectReference.prototype.clearName = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ObjectReference.prototype.hasName = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string uid = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ObjectReference.prototype.getUid = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ObjectReference} returns this
 */
proto.k8s.io.api.core.v1.ObjectReference.prototype.setUid = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ObjectReference} returns this
 */
proto.k8s.io.api.core.v1.ObjectReference.prototype.clearUid = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ObjectReference.prototype.hasUid = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional string apiVersion = 5;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ObjectReference.prototype.getApiversion = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ObjectReference} returns this
 */
proto.k8s.io.api.core.v1.ObjectReference.prototype.setApiversion = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ObjectReference} returns this
 */
proto.k8s.io.api.core.v1.ObjectReference.prototype.clearApiversion = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ObjectReference.prototype.hasApiversion = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional string resourceVersion = 6;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ObjectReference.prototype.getResourceversion = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ObjectReference} returns this
 */
proto.k8s.io.api.core.v1.ObjectReference.prototype.setResourceversion = function (value) {
    return jspb.Message.setField(this, 6, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ObjectReference} returns this
 */
proto.k8s.io.api.core.v1.ObjectReference.prototype.clearResourceversion = function () {
    return jspb.Message.setField(this, 6, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ObjectReference.prototype.hasResourceversion = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * optional string fieldPath = 7;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ObjectReference.prototype.getFieldpath = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ObjectReference} returns this
 */
proto.k8s.io.api.core.v1.ObjectReference.prototype.setFieldpath = function (value) {
    return jspb.Message.setField(this, 7, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ObjectReference} returns this
 */
proto.k8s.io.api.core.v1.ObjectReference.prototype.clearFieldpath = function () {
    return jspb.Message.setField(this, 7, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ObjectReference.prototype.hasFieldpath = function () {
    return jspb.Message.getField(this, 7) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PersistentVolume.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PersistentVolume.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PersistentVolume} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PersistentVolume.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
            spec: (f = msg.getSpec()) && proto.k8s.io.api.core.v1.PersistentVolumeSpec.toObject(includeInstance, f),
            status: (f = msg.getStatus()) && proto.k8s.io.api.core.v1.PersistentVolumeStatus.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolume}
 */
proto.k8s.io.api.core.v1.PersistentVolume.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PersistentVolume;
    return proto.k8s.io.api.core.v1.PersistentVolume.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PersistentVolume} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolume}
 */
proto.k8s.io.api.core.v1.PersistentVolume.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.PersistentVolumeSpec;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PersistentVolumeSpec.deserializeBinaryFromReader);
                msg.setSpec(value);
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.PersistentVolumeStatus;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PersistentVolumeStatus.deserializeBinaryFromReader);
                msg.setStatus(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PersistentVolume.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PersistentVolume.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PersistentVolume} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PersistentVolume.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter);
    }
    f = message.getSpec();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.PersistentVolumeSpec.serializeBinaryToWriter);
    }
    f = message.getStatus();
    if (f != null) {
        writer.writeMessage(3, f, proto.k8s.io.api.core.v1.PersistentVolumeStatus.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.k8s.io.api.core.v1.PersistentVolume.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolume} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolume.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolume} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolume.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolume.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional PersistentVolumeSpec spec = 2;
 * @return {?proto.k8s.io.api.core.v1.PersistentVolumeSpec}
 */
proto.k8s.io.api.core.v1.PersistentVolume.prototype.getSpec = function () {
    return /** @type{?proto.k8s.io.api.core.v1.PersistentVolumeSpec} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.PersistentVolumeSpec, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.PersistentVolumeSpec|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolume} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolume.prototype.setSpec = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolume} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolume.prototype.clearSpec = function () {
    return this.setSpec(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolume.prototype.hasSpec = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional PersistentVolumeStatus status = 3;
 * @return {?proto.k8s.io.api.core.v1.PersistentVolumeStatus}
 */
proto.k8s.io.api.core.v1.PersistentVolume.prototype.getStatus = function () {
    return /** @type{?proto.k8s.io.api.core.v1.PersistentVolumeStatus} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.PersistentVolumeStatus, 3));
};
/**
 * @param {?proto.k8s.io.api.core.v1.PersistentVolumeStatus|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolume} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolume.prototype.setStatus = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolume} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolume.prototype.clearStatus = function () {
    return this.setStatus(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolume.prototype.hasStatus = function () {
    return jspb.Message.getField(this, 3) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PersistentVolumeClaim.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PersistentVolumeClaim.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PersistentVolumeClaim} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PersistentVolumeClaim.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
            spec: (f = msg.getSpec()) && proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.toObject(includeInstance, f),
            status: (f = msg.getStatus()) && proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaim}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaim.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PersistentVolumeClaim;
    return proto.k8s.io.api.core.v1.PersistentVolumeClaim.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PersistentVolumeClaim} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaim}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaim.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.deserializeBinaryFromReader);
                msg.setSpec(value);
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus.deserializeBinaryFromReader);
                msg.setStatus(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaim.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PersistentVolumeClaim.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PersistentVolumeClaim} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaim.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter);
    }
    f = message.getSpec();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.serializeBinaryToWriter);
    }
    f = message.getStatus();
    if (f != null) {
        writer.writeMessage(3, f, proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaim.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaim} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeClaim.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaim} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaim.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaim.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional PersistentVolumeClaimSpec spec = 2;
 * @return {?proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaim.prototype.getSpec = function () {
    return /** @type{?proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaim} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeClaim.prototype.setSpec = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaim} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaim.prototype.clearSpec = function () {
    return this.setSpec(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaim.prototype.hasSpec = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional PersistentVolumeClaimStatus status = 3;
 * @return {?proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaim.prototype.getStatus = function () {
    return /** @type{?proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus, 3));
};
/**
 * @param {?proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaim} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeClaim.prototype.setStatus = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaim} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaim.prototype.clearStatus = function () {
    return this.setStatus(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaim.prototype.hasStatus = function () {
    return jspb.Message.getField(this, 3) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.toObject = function (includeInstance, msg) {
        var f, obj = {
            type: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            status: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            lastprobetime: (f = msg.getLastprobetime()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
            lasttransitiontime: (f = msg.getLasttransitiontime()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
            reason: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
            message: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition;
    return proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setType(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setStatus(value);
                break;
            case 3:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
                msg.setLastprobetime(value);
                break;
            case 4:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
                msg.setLasttransitiontime(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setReason(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.setMessage(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = message.getLastprobetime();
    if (f != null) {
        writer.writeMessage(3, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter);
    }
    f = message.getLasttransitiontime();
    if (f != null) {
        writer.writeMessage(4, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeString(5, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 6));
    if (f != null) {
        writer.writeString(6, f);
    }
};
/**
 * optional string type = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.prototype.getType = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.prototype.setType = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.prototype.clearType = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.prototype.hasType = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string status = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.prototype.getStatus = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.prototype.setStatus = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.prototype.clearStatus = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.prototype.hasStatus = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastProbeTime = 3;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.prototype.getLastprobetime = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 3));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.prototype.setLastprobetime = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.prototype.clearLastprobetime = function () {
    return this.setLastprobetime(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.prototype.hasLastprobetime = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 4;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.prototype.getLasttransitiontime = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 4));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.prototype.setLasttransitiontime = function (value) {
    return jspb.Message.setWrapperField(this, 4, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.prototype.clearLasttransitiontime = function () {
    return this.setLasttransitiontime(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.prototype.hasLasttransitiontime = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional string reason = 5;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.prototype.getReason = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.prototype.setReason = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.prototype.clearReason = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.prototype.hasReason = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional string message = 6;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.prototype.getMessage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.prototype.setMessage = function (value) {
    return jspb.Message.setField(this, 6, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.prototype.clearMessage = function () {
    return jspb.Message.setField(this, 6, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.prototype.hasMessage = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimList.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PersistentVolumeClaimList.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PersistentVolumeClaimList.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PersistentVolumeClaimList} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PersistentVolumeClaimList.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
            itemsList: jspb.Message.toObjectList(msg.getItemsList(), proto.k8s.io.api.core.v1.PersistentVolumeClaim.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimList}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimList.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PersistentVolumeClaimList;
    return proto.k8s.io.api.core.v1.PersistentVolumeClaimList.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PersistentVolumeClaimList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimList}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimList.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.PersistentVolumeClaim;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PersistentVolumeClaim.deserializeBinaryFromReader);
                msg.addItems(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimList.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PersistentVolumeClaimList.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PersistentVolumeClaimList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimList.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter);
    }
    f = message.getItemsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.PersistentVolumeClaim.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimList.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimList} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeClaimList.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimList} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimList.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimList.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated PersistentVolumeClaim items = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.PersistentVolumeClaim>}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimList.prototype.getItemsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.PersistentVolumeClaim>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.PersistentVolumeClaim, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.PersistentVolumeClaim>} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimList} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeClaimList.prototype.setItemsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.PersistentVolumeClaim=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaim}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimList.prototype.addItems = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.PersistentVolumeClaim, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimList} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimList.prototype.clearItemsList = function () {
    return this.setItemsList([]);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.toObject = function (includeInstance, msg) {
        var f, obj = {
            accessmodesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
            selector: (f = msg.getSelector()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.LabelSelector.toObject(includeInstance, f),
            resources: (f = msg.getResources()) && proto.k8s.io.api.core.v1.ResourceRequirements.toObject(includeInstance, f),
            volumename: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            storageclassname: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
            volumemode: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
            datasource: (f = msg.getDatasource()) && proto.k8s.io.api.core.v1.TypedLocalObjectReference.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec;
    return proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.addAccessmodes(value);
                break;
            case 4:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.LabelSelector;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.LabelSelector.deserializeBinaryFromReader);
                msg.setSelector(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.ResourceRequirements;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ResourceRequirements.deserializeBinaryFromReader);
                msg.setResources(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setVolumename(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setStorageclassname(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.setVolumemode(value);
                break;
            case 7:
                var value = new proto.k8s.io.api.core.v1.TypedLocalObjectReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.TypedLocalObjectReference.deserializeBinaryFromReader);
                msg.setDatasource(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getAccessmodesList();
    if (f.length > 0) {
        writer.writeRepeatedString(1, f);
    }
    f = message.getSelector();
    if (f != null) {
        writer.writeMessage(4, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.LabelSelector.serializeBinaryToWriter);
    }
    f = message.getResources();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.ResourceRequirements.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeString(5, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 6));
    if (f != null) {
        writer.writeString(6, f);
    }
    f = message.getDatasource();
    if (f != null) {
        writer.writeMessage(7, f, proto.k8s.io.api.core.v1.TypedLocalObjectReference.serializeBinaryToWriter);
    }
};
/**
 * repeated string accessModes = 1;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.getAccessmodesList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.setAccessmodesList = function (value) {
    return jspb.Message.setField(this, 1, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.addAccessmodes = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.clearAccessmodesList = function () {
    return this.setAccessmodesList([]);
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector selector = 4;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.getSelector = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.LabelSelector, 4));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.setSelector = function (value) {
    return jspb.Message.setWrapperField(this, 4, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.clearSelector = function () {
    return this.setSelector(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.hasSelector = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional ResourceRequirements resources = 2;
 * @return {?proto.k8s.io.api.core.v1.ResourceRequirements}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.getResources = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ResourceRequirements} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ResourceRequirements, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ResourceRequirements|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.setResources = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.clearResources = function () {
    return this.setResources(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.hasResources = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string volumeName = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.getVolumename = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.setVolumename = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.clearVolumename = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.hasVolumename = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string storageClassName = 5;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.getStorageclassname = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.setStorageclassname = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.clearStorageclassname = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.hasStorageclassname = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional string volumeMode = 6;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.getVolumemode = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.setVolumemode = function (value) {
    return jspb.Message.setField(this, 6, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.clearVolumemode = function () {
    return jspb.Message.setField(this, 6, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.hasVolumemode = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * optional TypedLocalObjectReference dataSource = 7;
 * @return {?proto.k8s.io.api.core.v1.TypedLocalObjectReference}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.getDatasource = function () {
    return /** @type{?proto.k8s.io.api.core.v1.TypedLocalObjectReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.TypedLocalObjectReference, 7));
};
/**
 * @param {?proto.k8s.io.api.core.v1.TypedLocalObjectReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.setDatasource = function (value) {
    return jspb.Message.setWrapperField(this, 7, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.clearDatasource = function () {
    return this.setDatasource(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.prototype.hasDatasource = function () {
    return jspb.Message.getField(this, 7) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus.repeatedFields_ = [2, 4];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus.toObject = function (includeInstance, msg) {
        var f, obj = {
            phase: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            accessmodesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
            capacityMap: (f = msg.getCapacityMap()) ? f.toObject(includeInstance, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.toObject) : [],
            conditionsList: jspb.Message.toObjectList(msg.getConditionsList(), proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus;
    return proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setPhase(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.addAccessmodes(value);
                break;
            case 3:
                var value = msg.getCapacityMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.deserializeBinaryFromReader, "", new proto.k8s.io.apimachinery.pkg.api.resource.Quantity());
                });
                break;
            case 4:
                var value = new proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.deserializeBinaryFromReader);
                msg.addConditions(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = message.getAccessmodesList();
    if (f.length > 0) {
        writer.writeRepeatedString(2, f);
    }
    f = message.getCapacityMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.serializeBinaryToWriter);
    }
    f = message.getConditionsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(4, f, proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition.serializeBinaryToWriter);
    }
};
/**
 * optional string phase = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus.prototype.getPhase = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus.prototype.setPhase = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus.prototype.clearPhase = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus.prototype.hasPhase = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated string accessModes = 2;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus.prototype.getAccessmodesList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus.prototype.setAccessmodesList = function (value) {
    return jspb.Message.setField(this, 2, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus.prototype.addAccessmodes = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus.prototype.clearAccessmodesList = function () {
    return this.setAccessmodesList([]);
};
/**
 * map<string, k8s.io.apimachinery.pkg.api.resource.Quantity> capacity = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus.prototype.getCapacityMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>} */ (jspb.Message.getMapField(this, 3, opt_noLazyCreate, proto.k8s.io.apimachinery.pkg.api.resource.Quantity));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus.prototype.clearCapacityMap = function () {
    this.getCapacityMap().clear();
    return this;
};
/**
 * repeated PersistentVolumeClaimCondition conditions = 4;
 * @return {!Array<!proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition>}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus.prototype.getConditionsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition, 4));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition>} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus.prototype.setConditionsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 4, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus.prototype.addConditions = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.k8s.io.api.core.v1.PersistentVolumeClaimCondition, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimStatus.prototype.clearConditionsList = function () {
    return this.setConditionsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
            spec: (f = msg.getSpec()) && proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate;
    return proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.deserializeBinaryFromReader);
                msg.setSpec(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter);
    }
    f = message.getSpec();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional PersistentVolumeClaimSpec spec = 2;
 * @return {?proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate.prototype.getSpec = function () {
    return /** @type{?proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.PersistentVolumeClaimSpec|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate.prototype.setSpec = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate.prototype.clearSpec = function () {
    return this.setSpec(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimTemplate.prototype.hasSpec = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            claimname: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            readonly: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource;
    return proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setClaimname(value);
                break;
            case 2:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeBool(2, f);
    }
};
/**
 * optional string claimName = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource.prototype.getClaimname = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource.prototype.setClaimname = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource.prototype.clearClaimname = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource.prototype.hasClaimname = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional bool readOnly = 2;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.PersistentVolumeList.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PersistentVolumeList.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PersistentVolumeList.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PersistentVolumeList} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PersistentVolumeList.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
            itemsList: jspb.Message.toObjectList(msg.getItemsList(), proto.k8s.io.api.core.v1.PersistentVolume.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeList}
 */
proto.k8s.io.api.core.v1.PersistentVolumeList.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PersistentVolumeList;
    return proto.k8s.io.api.core.v1.PersistentVolumeList.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PersistentVolumeList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeList}
 */
proto.k8s.io.api.core.v1.PersistentVolumeList.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.PersistentVolume;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PersistentVolume.deserializeBinaryFromReader);
                msg.addItems(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PersistentVolumeList.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PersistentVolumeList.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PersistentVolumeList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PersistentVolumeList.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter);
    }
    f = message.getItemsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.PersistentVolume.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.k8s.io.api.core.v1.PersistentVolumeList.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeList} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeList.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeList} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeList.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeList.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated PersistentVolume items = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.PersistentVolume>}
 */
proto.k8s.io.api.core.v1.PersistentVolumeList.prototype.getItemsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.PersistentVolume>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.PersistentVolume, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.PersistentVolume>} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeList} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeList.prototype.setItemsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.PersistentVolume=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.PersistentVolume}
 */
proto.k8s.io.api.core.v1.PersistentVolumeList.prototype.addItems = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.PersistentVolume, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeList} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeList.prototype.clearItemsList = function () {
    return this.setItemsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PersistentVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PersistentVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PersistentVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            gcepersistentdisk: (f = msg.getGcepersistentdisk()) && proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.toObject(includeInstance, f),
            awselasticblockstore: (f = msg.getAwselasticblockstore()) && proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.toObject(includeInstance, f),
            hostpath: (f = msg.getHostpath()) && proto.k8s.io.api.core.v1.HostPathVolumeSource.toObject(includeInstance, f),
            glusterfs: (f = msg.getGlusterfs()) && proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.toObject(includeInstance, f),
            nfs: (f = msg.getNfs()) && proto.k8s.io.api.core.v1.NFSVolumeSource.toObject(includeInstance, f),
            rbd: (f = msg.getRbd()) && proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.toObject(includeInstance, f),
            iscsi: (f = msg.getIscsi()) && proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.toObject(includeInstance, f),
            cinder: (f = msg.getCinder()) && proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.toObject(includeInstance, f),
            cephfs: (f = msg.getCephfs()) && proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.toObject(includeInstance, f),
            fc: (f = msg.getFc()) && proto.k8s.io.api.core.v1.FCVolumeSource.toObject(includeInstance, f),
            flocker: (f = msg.getFlocker()) && proto.k8s.io.api.core.v1.FlockerVolumeSource.toObject(includeInstance, f),
            flexvolume: (f = msg.getFlexvolume()) && proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.toObject(includeInstance, f),
            azurefile: (f = msg.getAzurefile()) && proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.toObject(includeInstance, f),
            vspherevolume: (f = msg.getVspherevolume()) && proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.toObject(includeInstance, f),
            quobyte: (f = msg.getQuobyte()) && proto.k8s.io.api.core.v1.QuobyteVolumeSource.toObject(includeInstance, f),
            azuredisk: (f = msg.getAzuredisk()) && proto.k8s.io.api.core.v1.AzureDiskVolumeSource.toObject(includeInstance, f),
            photonpersistentdisk: (f = msg.getPhotonpersistentdisk()) && proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource.toObject(includeInstance, f),
            portworxvolume: (f = msg.getPortworxvolume()) && proto.k8s.io.api.core.v1.PortworxVolumeSource.toObject(includeInstance, f),
            scaleio: (f = msg.getScaleio()) && proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.toObject(includeInstance, f),
            local: (f = msg.getLocal()) && proto.k8s.io.api.core.v1.LocalVolumeSource.toObject(includeInstance, f),
            storageos: (f = msg.getStorageos()) && proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.toObject(includeInstance, f),
            csi: (f = msg.getCsi()) && proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PersistentVolumeSource;
    return proto.k8s.io.api.core.v1.PersistentVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PersistentVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.deserializeBinaryFromReader);
                msg.setGcepersistentdisk(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.deserializeBinaryFromReader);
                msg.setAwselasticblockstore(value);
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.HostPathVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.HostPathVolumeSource.deserializeBinaryFromReader);
                msg.setHostpath(value);
                break;
            case 4:
                var value = new proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.deserializeBinaryFromReader);
                msg.setGlusterfs(value);
                break;
            case 5:
                var value = new proto.k8s.io.api.core.v1.NFSVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.NFSVolumeSource.deserializeBinaryFromReader);
                msg.setNfs(value);
                break;
            case 6:
                var value = new proto.k8s.io.api.core.v1.RBDPersistentVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.deserializeBinaryFromReader);
                msg.setRbd(value);
                break;
            case 7:
                var value = new proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.deserializeBinaryFromReader);
                msg.setIscsi(value);
                break;
            case 8:
                var value = new proto.k8s.io.api.core.v1.CinderPersistentVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.deserializeBinaryFromReader);
                msg.setCinder(value);
                break;
            case 9:
                var value = new proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.deserializeBinaryFromReader);
                msg.setCephfs(value);
                break;
            case 10:
                var value = new proto.k8s.io.api.core.v1.FCVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.FCVolumeSource.deserializeBinaryFromReader);
                msg.setFc(value);
                break;
            case 11:
                var value = new proto.k8s.io.api.core.v1.FlockerVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.FlockerVolumeSource.deserializeBinaryFromReader);
                msg.setFlocker(value);
                break;
            case 12:
                var value = new proto.k8s.io.api.core.v1.FlexPersistentVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.deserializeBinaryFromReader);
                msg.setFlexvolume(value);
                break;
            case 13:
                var value = new proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.deserializeBinaryFromReader);
                msg.setAzurefile(value);
                break;
            case 14:
                var value = new proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.deserializeBinaryFromReader);
                msg.setVspherevolume(value);
                break;
            case 15:
                var value = new proto.k8s.io.api.core.v1.QuobyteVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.QuobyteVolumeSource.deserializeBinaryFromReader);
                msg.setQuobyte(value);
                break;
            case 16:
                var value = new proto.k8s.io.api.core.v1.AzureDiskVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.AzureDiskVolumeSource.deserializeBinaryFromReader);
                msg.setAzuredisk(value);
                break;
            case 17:
                var value = new proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource.deserializeBinaryFromReader);
                msg.setPhotonpersistentdisk(value);
                break;
            case 18:
                var value = new proto.k8s.io.api.core.v1.PortworxVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PortworxVolumeSource.deserializeBinaryFromReader);
                msg.setPortworxvolume(value);
                break;
            case 19:
                var value = new proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.deserializeBinaryFromReader);
                msg.setScaleio(value);
                break;
            case 20:
                var value = new proto.k8s.io.api.core.v1.LocalVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.LocalVolumeSource.deserializeBinaryFromReader);
                msg.setLocal(value);
                break;
            case 21:
                var value = new proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.deserializeBinaryFromReader);
                msg.setStorageos(value);
                break;
            case 22:
                var value = new proto.k8s.io.api.core.v1.CSIPersistentVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.deserializeBinaryFromReader);
                msg.setCsi(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PersistentVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PersistentVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getGcepersistentdisk();
    if (f != null) {
        writer.writeMessage(1, f, proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.serializeBinaryToWriter);
    }
    f = message.getAwselasticblockstore();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.serializeBinaryToWriter);
    }
    f = message.getHostpath();
    if (f != null) {
        writer.writeMessage(3, f, proto.k8s.io.api.core.v1.HostPathVolumeSource.serializeBinaryToWriter);
    }
    f = message.getGlusterfs();
    if (f != null) {
        writer.writeMessage(4, f, proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.serializeBinaryToWriter);
    }
    f = message.getNfs();
    if (f != null) {
        writer.writeMessage(5, f, proto.k8s.io.api.core.v1.NFSVolumeSource.serializeBinaryToWriter);
    }
    f = message.getRbd();
    if (f != null) {
        writer.writeMessage(6, f, proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.serializeBinaryToWriter);
    }
    f = message.getIscsi();
    if (f != null) {
        writer.writeMessage(7, f, proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource.serializeBinaryToWriter);
    }
    f = message.getCinder();
    if (f != null) {
        writer.writeMessage(8, f, proto.k8s.io.api.core.v1.CinderPersistentVolumeSource.serializeBinaryToWriter);
    }
    f = message.getCephfs();
    if (f != null) {
        writer.writeMessage(9, f, proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource.serializeBinaryToWriter);
    }
    f = message.getFc();
    if (f != null) {
        writer.writeMessage(10, f, proto.k8s.io.api.core.v1.FCVolumeSource.serializeBinaryToWriter);
    }
    f = message.getFlocker();
    if (f != null) {
        writer.writeMessage(11, f, proto.k8s.io.api.core.v1.FlockerVolumeSource.serializeBinaryToWriter);
    }
    f = message.getFlexvolume();
    if (f != null) {
        writer.writeMessage(12, f, proto.k8s.io.api.core.v1.FlexPersistentVolumeSource.serializeBinaryToWriter);
    }
    f = message.getAzurefile();
    if (f != null) {
        writer.writeMessage(13, f, proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource.serializeBinaryToWriter);
    }
    f = message.getVspherevolume();
    if (f != null) {
        writer.writeMessage(14, f, proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.serializeBinaryToWriter);
    }
    f = message.getQuobyte();
    if (f != null) {
        writer.writeMessage(15, f, proto.k8s.io.api.core.v1.QuobyteVolumeSource.serializeBinaryToWriter);
    }
    f = message.getAzuredisk();
    if (f != null) {
        writer.writeMessage(16, f, proto.k8s.io.api.core.v1.AzureDiskVolumeSource.serializeBinaryToWriter);
    }
    f = message.getPhotonpersistentdisk();
    if (f != null) {
        writer.writeMessage(17, f, proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource.serializeBinaryToWriter);
    }
    f = message.getPortworxvolume();
    if (f != null) {
        writer.writeMessage(18, f, proto.k8s.io.api.core.v1.PortworxVolumeSource.serializeBinaryToWriter);
    }
    f = message.getScaleio();
    if (f != null) {
        writer.writeMessage(19, f, proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.serializeBinaryToWriter);
    }
    f = message.getLocal();
    if (f != null) {
        writer.writeMessage(20, f, proto.k8s.io.api.core.v1.LocalVolumeSource.serializeBinaryToWriter);
    }
    f = message.getStorageos();
    if (f != null) {
        writer.writeMessage(21, f, proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.serializeBinaryToWriter);
    }
    f = message.getCsi();
    if (f != null) {
        writer.writeMessage(22, f, proto.k8s.io.api.core.v1.CSIPersistentVolumeSource.serializeBinaryToWriter);
    }
};
/**
 * optional GCEPersistentDiskVolumeSource gcePersistentDisk = 1;
 * @return {?proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getGcepersistentdisk = function () {
    return /** @type{?proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource, 1));
};
/**
 * @param {?proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setGcepersistentdisk = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearGcepersistentdisk = function () {
    return this.setGcepersistentdisk(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasGcepersistentdisk = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional AWSElasticBlockStoreVolumeSource awsElasticBlockStore = 2;
 * @return {?proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getAwselasticblockstore = function () {
    return /** @type{?proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setAwselasticblockstore = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearAwselasticblockstore = function () {
    return this.setAwselasticblockstore(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasAwselasticblockstore = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional HostPathVolumeSource hostPath = 3;
 * @return {?proto.k8s.io.api.core.v1.HostPathVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getHostpath = function () {
    return /** @type{?proto.k8s.io.api.core.v1.HostPathVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.HostPathVolumeSource, 3));
};
/**
 * @param {?proto.k8s.io.api.core.v1.HostPathVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setHostpath = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearHostpath = function () {
    return this.setHostpath(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasHostpath = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional GlusterfsPersistentVolumeSource glusterfs = 4;
 * @return {?proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getGlusterfs = function () {
    return /** @type{?proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource, 4));
};
/**
 * @param {?proto.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setGlusterfs = function (value) {
    return jspb.Message.setWrapperField(this, 4, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearGlusterfs = function () {
    return this.setGlusterfs(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasGlusterfs = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional NFSVolumeSource nfs = 5;
 * @return {?proto.k8s.io.api.core.v1.NFSVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getNfs = function () {
    return /** @type{?proto.k8s.io.api.core.v1.NFSVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.NFSVolumeSource, 5));
};
/**
 * @param {?proto.k8s.io.api.core.v1.NFSVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setNfs = function (value) {
    return jspb.Message.setWrapperField(this, 5, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearNfs = function () {
    return this.setNfs(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasNfs = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional RBDPersistentVolumeSource rbd = 6;
 * @return {?proto.k8s.io.api.core.v1.RBDPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getRbd = function () {
    return /** @type{?proto.k8s.io.api.core.v1.RBDPersistentVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.RBDPersistentVolumeSource, 6));
};
/**
 * @param {?proto.k8s.io.api.core.v1.RBDPersistentVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setRbd = function (value) {
    return jspb.Message.setWrapperField(this, 6, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearRbd = function () {
    return this.setRbd(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasRbd = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * optional ISCSIPersistentVolumeSource iscsi = 7;
 * @return {?proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getIscsi = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource, 7));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ISCSIPersistentVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setIscsi = function (value) {
    return jspb.Message.setWrapperField(this, 7, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearIscsi = function () {
    return this.setIscsi(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasIscsi = function () {
    return jspb.Message.getField(this, 7) != null;
};
/**
 * optional CinderPersistentVolumeSource cinder = 8;
 * @return {?proto.k8s.io.api.core.v1.CinderPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getCinder = function () {
    return /** @type{?proto.k8s.io.api.core.v1.CinderPersistentVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.CinderPersistentVolumeSource, 8));
};
/**
 * @param {?proto.k8s.io.api.core.v1.CinderPersistentVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setCinder = function (value) {
    return jspb.Message.setWrapperField(this, 8, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearCinder = function () {
    return this.setCinder(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasCinder = function () {
    return jspb.Message.getField(this, 8) != null;
};
/**
 * optional CephFSPersistentVolumeSource cephfs = 9;
 * @return {?proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getCephfs = function () {
    return /** @type{?proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource, 9));
};
/**
 * @param {?proto.k8s.io.api.core.v1.CephFSPersistentVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setCephfs = function (value) {
    return jspb.Message.setWrapperField(this, 9, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearCephfs = function () {
    return this.setCephfs(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasCephfs = function () {
    return jspb.Message.getField(this, 9) != null;
};
/**
 * optional FCVolumeSource fc = 10;
 * @return {?proto.k8s.io.api.core.v1.FCVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getFc = function () {
    return /** @type{?proto.k8s.io.api.core.v1.FCVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.FCVolumeSource, 10));
};
/**
 * @param {?proto.k8s.io.api.core.v1.FCVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setFc = function (value) {
    return jspb.Message.setWrapperField(this, 10, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearFc = function () {
    return this.setFc(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasFc = function () {
    return jspb.Message.getField(this, 10) != null;
};
/**
 * optional FlockerVolumeSource flocker = 11;
 * @return {?proto.k8s.io.api.core.v1.FlockerVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getFlocker = function () {
    return /** @type{?proto.k8s.io.api.core.v1.FlockerVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.FlockerVolumeSource, 11));
};
/**
 * @param {?proto.k8s.io.api.core.v1.FlockerVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setFlocker = function (value) {
    return jspb.Message.setWrapperField(this, 11, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearFlocker = function () {
    return this.setFlocker(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasFlocker = function () {
    return jspb.Message.getField(this, 11) != null;
};
/**
 * optional FlexPersistentVolumeSource flexVolume = 12;
 * @return {?proto.k8s.io.api.core.v1.FlexPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getFlexvolume = function () {
    return /** @type{?proto.k8s.io.api.core.v1.FlexPersistentVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.FlexPersistentVolumeSource, 12));
};
/**
 * @param {?proto.k8s.io.api.core.v1.FlexPersistentVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setFlexvolume = function (value) {
    return jspb.Message.setWrapperField(this, 12, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearFlexvolume = function () {
    return this.setFlexvolume(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasFlexvolume = function () {
    return jspb.Message.getField(this, 12) != null;
};
/**
 * optional AzureFilePersistentVolumeSource azureFile = 13;
 * @return {?proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getAzurefile = function () {
    return /** @type{?proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource, 13));
};
/**
 * @param {?proto.k8s.io.api.core.v1.AzureFilePersistentVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setAzurefile = function (value) {
    return jspb.Message.setWrapperField(this, 13, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearAzurefile = function () {
    return this.setAzurefile(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasAzurefile = function () {
    return jspb.Message.getField(this, 13) != null;
};
/**
 * optional VsphereVirtualDiskVolumeSource vsphereVolume = 14;
 * @return {?proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getVspherevolume = function () {
    return /** @type{?proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource, 14));
};
/**
 * @param {?proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setVspherevolume = function (value) {
    return jspb.Message.setWrapperField(this, 14, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearVspherevolume = function () {
    return this.setVspherevolume(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasVspherevolume = function () {
    return jspb.Message.getField(this, 14) != null;
};
/**
 * optional QuobyteVolumeSource quobyte = 15;
 * @return {?proto.k8s.io.api.core.v1.QuobyteVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getQuobyte = function () {
    return /** @type{?proto.k8s.io.api.core.v1.QuobyteVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.QuobyteVolumeSource, 15));
};
/**
 * @param {?proto.k8s.io.api.core.v1.QuobyteVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setQuobyte = function (value) {
    return jspb.Message.setWrapperField(this, 15, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearQuobyte = function () {
    return this.setQuobyte(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasQuobyte = function () {
    return jspb.Message.getField(this, 15) != null;
};
/**
 * optional AzureDiskVolumeSource azureDisk = 16;
 * @return {?proto.k8s.io.api.core.v1.AzureDiskVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getAzuredisk = function () {
    return /** @type{?proto.k8s.io.api.core.v1.AzureDiskVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.AzureDiskVolumeSource, 16));
};
/**
 * @param {?proto.k8s.io.api.core.v1.AzureDiskVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setAzuredisk = function (value) {
    return jspb.Message.setWrapperField(this, 16, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearAzuredisk = function () {
    return this.setAzuredisk(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasAzuredisk = function () {
    return jspb.Message.getField(this, 16) != null;
};
/**
 * optional PhotonPersistentDiskVolumeSource photonPersistentDisk = 17;
 * @return {?proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getPhotonpersistentdisk = function () {
    return /** @type{?proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource, 17));
};
/**
 * @param {?proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setPhotonpersistentdisk = function (value) {
    return jspb.Message.setWrapperField(this, 17, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearPhotonpersistentdisk = function () {
    return this.setPhotonpersistentdisk(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasPhotonpersistentdisk = function () {
    return jspb.Message.getField(this, 17) != null;
};
/**
 * optional PortworxVolumeSource portworxVolume = 18;
 * @return {?proto.k8s.io.api.core.v1.PortworxVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getPortworxvolume = function () {
    return /** @type{?proto.k8s.io.api.core.v1.PortworxVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.PortworxVolumeSource, 18));
};
/**
 * @param {?proto.k8s.io.api.core.v1.PortworxVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setPortworxvolume = function (value) {
    return jspb.Message.setWrapperField(this, 18, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearPortworxvolume = function () {
    return this.setPortworxvolume(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasPortworxvolume = function () {
    return jspb.Message.getField(this, 18) != null;
};
/**
 * optional ScaleIOPersistentVolumeSource scaleIO = 19;
 * @return {?proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getScaleio = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource, 19));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setScaleio = function (value) {
    return jspb.Message.setWrapperField(this, 19, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearScaleio = function () {
    return this.setScaleio(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasScaleio = function () {
    return jspb.Message.getField(this, 19) != null;
};
/**
 * optional LocalVolumeSource local = 20;
 * @return {?proto.k8s.io.api.core.v1.LocalVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getLocal = function () {
    return /** @type{?proto.k8s.io.api.core.v1.LocalVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.LocalVolumeSource, 20));
};
/**
 * @param {?proto.k8s.io.api.core.v1.LocalVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setLocal = function (value) {
    return jspb.Message.setWrapperField(this, 20, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearLocal = function () {
    return this.setLocal(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasLocal = function () {
    return jspb.Message.getField(this, 20) != null;
};
/**
 * optional StorageOSPersistentVolumeSource storageos = 21;
 * @return {?proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getStorageos = function () {
    return /** @type{?proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource, 21));
};
/**
 * @param {?proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setStorageos = function (value) {
    return jspb.Message.setWrapperField(this, 21, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearStorageos = function () {
    return this.setStorageos(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasStorageos = function () {
    return jspb.Message.getField(this, 21) != null;
};
/**
 * optional CSIPersistentVolumeSource csi = 22;
 * @return {?proto.k8s.io.api.core.v1.CSIPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.getCsi = function () {
    return /** @type{?proto.k8s.io.api.core.v1.CSIPersistentVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.CSIPersistentVolumeSource, 22));
};
/**
 * @param {?proto.k8s.io.api.core.v1.CSIPersistentVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.setCsi = function (value) {
    return jspb.Message.setWrapperField(this, 22, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.clearCsi = function () {
    return this.setCsi(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSource.prototype.hasCsi = function () {
    return jspb.Message.getField(this, 22) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.repeatedFields_ = [3, 7];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PersistentVolumeSpec.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PersistentVolumeSpec} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PersistentVolumeSpec.toObject = function (includeInstance, msg) {
        var f, obj = {
            capacityMap: (f = msg.getCapacityMap()) ? f.toObject(includeInstance, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.toObject) : [],
            persistentvolumesource: (f = msg.getPersistentvolumesource()) && proto.k8s.io.api.core.v1.PersistentVolumeSource.toObject(includeInstance, f),
            accessmodesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
            claimref: (f = msg.getClaimref()) && proto.k8s.io.api.core.v1.ObjectReference.toObject(includeInstance, f),
            persistentvolumereclaimpolicy: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
            storageclassname: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
            mountoptionsList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
            volumemode: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
            nodeaffinity: (f = msg.getNodeaffinity()) && proto.k8s.io.api.core.v1.VolumeNodeAffinity.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSpec}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PersistentVolumeSpec;
    return proto.k8s.io.api.core.v1.PersistentVolumeSpec.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PersistentVolumeSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSpec}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = msg.getCapacityMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.deserializeBinaryFromReader, "", new proto.k8s.io.apimachinery.pkg.api.resource.Quantity());
                });
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.PersistentVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PersistentVolumeSource.deserializeBinaryFromReader);
                msg.setPersistentvolumesource(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.addAccessmodes(value);
                break;
            case 4:
                var value = new proto.k8s.io.api.core.v1.ObjectReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ObjectReference.deserializeBinaryFromReader);
                msg.setClaimref(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setPersistentvolumereclaimpolicy(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.setStorageclassname(value);
                break;
            case 7:
                var value = /** @type {string} */ (reader.readString());
                msg.addMountoptions(value);
                break;
            case 8:
                var value = /** @type {string} */ (reader.readString());
                msg.setVolumemode(value);
                break;
            case 9:
                var value = new proto.k8s.io.api.core.v1.VolumeNodeAffinity;
                reader.readMessage(value, proto.k8s.io.api.core.v1.VolumeNodeAffinity.deserializeBinaryFromReader);
                msg.setNodeaffinity(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PersistentVolumeSpec.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PersistentVolumeSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getCapacityMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.serializeBinaryToWriter);
    }
    f = message.getPersistentvolumesource();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.PersistentVolumeSource.serializeBinaryToWriter);
    }
    f = message.getAccessmodesList();
    if (f.length > 0) {
        writer.writeRepeatedString(3, f);
    }
    f = message.getClaimref();
    if (f != null) {
        writer.writeMessage(4, f, proto.k8s.io.api.core.v1.ObjectReference.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeString(5, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 6));
    if (f != null) {
        writer.writeString(6, f);
    }
    f = message.getMountoptionsList();
    if (f.length > 0) {
        writer.writeRepeatedString(7, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 8));
    if (f != null) {
        writer.writeString(8, f);
    }
    f = message.getNodeaffinity();
    if (f != null) {
        writer.writeMessage(9, f, proto.k8s.io.api.core.v1.VolumeNodeAffinity.serializeBinaryToWriter);
    }
};
/**
 * map<string, k8s.io.apimachinery.pkg.api.resource.Quantity> capacity = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.getCapacityMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>} */ (jspb.Message.getMapField(this, 1, opt_noLazyCreate, proto.k8s.io.apimachinery.pkg.api.resource.Quantity));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSpec} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.clearCapacityMap = function () {
    this.getCapacityMap().clear();
    return this;
};
/**
 * optional PersistentVolumeSource persistentVolumeSource = 2;
 * @return {?proto.k8s.io.api.core.v1.PersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.getPersistentvolumesource = function () {
    return /** @type{?proto.k8s.io.api.core.v1.PersistentVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.PersistentVolumeSource, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.PersistentVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSpec} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.setPersistentvolumesource = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSpec} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.clearPersistentvolumesource = function () {
    return this.setPersistentvolumesource(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.hasPersistentvolumesource = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * repeated string accessModes = 3;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.getAccessmodesList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSpec} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.setAccessmodesList = function (value) {
    return jspb.Message.setField(this, 3, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSpec} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.addAccessmodes = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSpec} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.clearAccessmodesList = function () {
    return this.setAccessmodesList([]);
};
/**
 * optional ObjectReference claimRef = 4;
 * @return {?proto.k8s.io.api.core.v1.ObjectReference}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.getClaimref = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ObjectReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ObjectReference, 4));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ObjectReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSpec} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.setClaimref = function (value) {
    return jspb.Message.setWrapperField(this, 4, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSpec} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.clearClaimref = function () {
    return this.setClaimref(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.hasClaimref = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional string persistentVolumeReclaimPolicy = 5;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.getPersistentvolumereclaimpolicy = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSpec} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.setPersistentvolumereclaimpolicy = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSpec} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.clearPersistentvolumereclaimpolicy = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.hasPersistentvolumereclaimpolicy = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional string storageClassName = 6;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.getStorageclassname = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSpec} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.setStorageclassname = function (value) {
    return jspb.Message.setField(this, 6, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSpec} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.clearStorageclassname = function () {
    return jspb.Message.setField(this, 6, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.hasStorageclassname = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * repeated string mountOptions = 7;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.getMountoptionsList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSpec} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.setMountoptionsList = function (value) {
    return jspb.Message.setField(this, 7, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSpec} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.addMountoptions = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSpec} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.clearMountoptionsList = function () {
    return this.setMountoptionsList([]);
};
/**
 * optional string volumeMode = 8;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.getVolumemode = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSpec} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.setVolumemode = function (value) {
    return jspb.Message.setField(this, 8, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSpec} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.clearVolumemode = function () {
    return jspb.Message.setField(this, 8, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.hasVolumemode = function () {
    return jspb.Message.getField(this, 8) != null;
};
/**
 * optional VolumeNodeAffinity nodeAffinity = 9;
 * @return {?proto.k8s.io.api.core.v1.VolumeNodeAffinity}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.getNodeaffinity = function () {
    return /** @type{?proto.k8s.io.api.core.v1.VolumeNodeAffinity} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.VolumeNodeAffinity, 9));
};
/**
 * @param {?proto.k8s.io.api.core.v1.VolumeNodeAffinity|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSpec} returns this
*/
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.setNodeaffinity = function (value) {
    return jspb.Message.setWrapperField(this, 9, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeSpec} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.clearNodeaffinity = function () {
    return this.setNodeaffinity(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeSpec.prototype.hasNodeaffinity = function () {
    return jspb.Message.getField(this, 9) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PersistentVolumeStatus.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PersistentVolumeStatus.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PersistentVolumeStatus} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PersistentVolumeStatus.toObject = function (includeInstance, msg) {
        var f, obj = {
            phase: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            message: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            reason: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeStatus}
 */
proto.k8s.io.api.core.v1.PersistentVolumeStatus.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PersistentVolumeStatus;
    return proto.k8s.io.api.core.v1.PersistentVolumeStatus.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PersistentVolumeStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeStatus}
 */
proto.k8s.io.api.core.v1.PersistentVolumeStatus.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setPhase(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setMessage(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setReason(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PersistentVolumeStatus.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PersistentVolumeStatus.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PersistentVolumeStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PersistentVolumeStatus.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
};
/**
 * optional string phase = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PersistentVolumeStatus.prototype.getPhase = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeStatus} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeStatus.prototype.setPhase = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeStatus} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeStatus.prototype.clearPhase = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeStatus.prototype.hasPhase = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string message = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PersistentVolumeStatus.prototype.getMessage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeStatus} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeStatus.prototype.setMessage = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeStatus} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeStatus.prototype.clearMessage = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeStatus.prototype.hasMessage = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string reason = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PersistentVolumeStatus.prototype.getReason = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeStatus} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeStatus.prototype.setReason = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PersistentVolumeStatus} returns this
 */
proto.k8s.io.api.core.v1.PersistentVolumeStatus.prototype.clearReason = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PersistentVolumeStatus.prototype.hasReason = function () {
    return jspb.Message.getField(this, 3) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            pdid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            fstype: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource}
 */
proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource;
    return proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource}
 */
proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setPdid(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setFstype(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
};
/**
 * optional string pdID = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource.prototype.getPdid = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource.prototype.setPdid = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource.prototype.clearPdid = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource.prototype.hasPdid = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string fsType = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource.prototype.getFstype = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource.prototype.setFstype = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource.prototype.clearFstype = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource.prototype.hasFstype = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.Pod.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.Pod.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.Pod} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.Pod.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
            spec: (f = msg.getSpec()) && proto.k8s.io.api.core.v1.PodSpec.toObject(includeInstance, f),
            status: (f = msg.getStatus()) && proto.k8s.io.api.core.v1.PodStatus.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.Pod}
 */
proto.k8s.io.api.core.v1.Pod.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.Pod;
    return proto.k8s.io.api.core.v1.Pod.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.Pod} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.Pod}
 */
proto.k8s.io.api.core.v1.Pod.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.PodSpec;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PodSpec.deserializeBinaryFromReader);
                msg.setSpec(value);
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.PodStatus;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PodStatus.deserializeBinaryFromReader);
                msg.setStatus(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.Pod.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.Pod.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.Pod} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.Pod.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter);
    }
    f = message.getSpec();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.PodSpec.serializeBinaryToWriter);
    }
    f = message.getStatus();
    if (f != null) {
        writer.writeMessage(3, f, proto.k8s.io.api.core.v1.PodStatus.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.k8s.io.api.core.v1.Pod.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Pod} returns this
*/
proto.k8s.io.api.core.v1.Pod.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Pod} returns this
 */
proto.k8s.io.api.core.v1.Pod.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Pod.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional PodSpec spec = 2;
 * @return {?proto.k8s.io.api.core.v1.PodSpec}
 */
proto.k8s.io.api.core.v1.Pod.prototype.getSpec = function () {
    return /** @type{?proto.k8s.io.api.core.v1.PodSpec} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.PodSpec, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.PodSpec|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Pod} returns this
*/
proto.k8s.io.api.core.v1.Pod.prototype.setSpec = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Pod} returns this
 */
proto.k8s.io.api.core.v1.Pod.prototype.clearSpec = function () {
    return this.setSpec(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Pod.prototype.hasSpec = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional PodStatus status = 3;
 * @return {?proto.k8s.io.api.core.v1.PodStatus}
 */
proto.k8s.io.api.core.v1.Pod.prototype.getStatus = function () {
    return /** @type{?proto.k8s.io.api.core.v1.PodStatus} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.PodStatus, 3));
};
/**
 * @param {?proto.k8s.io.api.core.v1.PodStatus|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Pod} returns this
*/
proto.k8s.io.api.core.v1.Pod.prototype.setStatus = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Pod} returns this
 */
proto.k8s.io.api.core.v1.Pod.prototype.clearStatus = function () {
    return this.setStatus(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Pod.prototype.hasStatus = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.PodAffinity.repeatedFields_ = [1, 2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PodAffinity.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PodAffinity.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PodAffinity} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PodAffinity.toObject = function (includeInstance, msg) {
        var f, obj = {
            requiredduringschedulingignoredduringexecutionList: jspb.Message.toObjectList(msg.getRequiredduringschedulingignoredduringexecutionList(), proto.k8s.io.api.core.v1.PodAffinityTerm.toObject, includeInstance),
            preferredduringschedulingignoredduringexecutionList: jspb.Message.toObjectList(msg.getPreferredduringschedulingignoredduringexecutionList(), proto.k8s.io.api.core.v1.WeightedPodAffinityTerm.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PodAffinity}
 */
proto.k8s.io.api.core.v1.PodAffinity.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PodAffinity;
    return proto.k8s.io.api.core.v1.PodAffinity.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PodAffinity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PodAffinity}
 */
proto.k8s.io.api.core.v1.PodAffinity.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.PodAffinityTerm;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PodAffinityTerm.deserializeBinaryFromReader);
                msg.addRequiredduringschedulingignoredduringexecution(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.WeightedPodAffinityTerm;
                reader.readMessage(value, proto.k8s.io.api.core.v1.WeightedPodAffinityTerm.deserializeBinaryFromReader);
                msg.addPreferredduringschedulingignoredduringexecution(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PodAffinity.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PodAffinity.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PodAffinity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PodAffinity.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getRequiredduringschedulingignoredduringexecutionList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, proto.k8s.io.api.core.v1.PodAffinityTerm.serializeBinaryToWriter);
    }
    f = message.getPreferredduringschedulingignoredduringexecutionList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.WeightedPodAffinityTerm.serializeBinaryToWriter);
    }
};
/**
 * repeated PodAffinityTerm requiredDuringSchedulingIgnoredDuringExecution = 1;
 * @return {!Array<!proto.k8s.io.api.core.v1.PodAffinityTerm>}
 */
proto.k8s.io.api.core.v1.PodAffinity.prototype.getRequiredduringschedulingignoredduringexecutionList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.PodAffinityTerm>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.PodAffinityTerm, 1));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.PodAffinityTerm>} value
 * @return {!proto.k8s.io.api.core.v1.PodAffinity} returns this
*/
proto.k8s.io.api.core.v1.PodAffinity.prototype.setRequiredduringschedulingignoredduringexecutionList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.PodAffinityTerm=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.PodAffinityTerm}
 */
proto.k8s.io.api.core.v1.PodAffinity.prototype.addRequiredduringschedulingignoredduringexecution = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.k8s.io.api.core.v1.PodAffinityTerm, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PodAffinity} returns this
 */
proto.k8s.io.api.core.v1.PodAffinity.prototype.clearRequiredduringschedulingignoredduringexecutionList = function () {
    return this.setRequiredduringschedulingignoredduringexecutionList([]);
};
/**
 * repeated WeightedPodAffinityTerm preferredDuringSchedulingIgnoredDuringExecution = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.WeightedPodAffinityTerm>}
 */
proto.k8s.io.api.core.v1.PodAffinity.prototype.getPreferredduringschedulingignoredduringexecutionList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.WeightedPodAffinityTerm>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.WeightedPodAffinityTerm, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.WeightedPodAffinityTerm>} value
 * @return {!proto.k8s.io.api.core.v1.PodAffinity} returns this
*/
proto.k8s.io.api.core.v1.PodAffinity.prototype.setPreferredduringschedulingignoredduringexecutionList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.WeightedPodAffinityTerm=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.WeightedPodAffinityTerm}
 */
proto.k8s.io.api.core.v1.PodAffinity.prototype.addPreferredduringschedulingignoredduringexecution = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.WeightedPodAffinityTerm, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PodAffinity} returns this
 */
proto.k8s.io.api.core.v1.PodAffinity.prototype.clearPreferredduringschedulingignoredduringexecutionList = function () {
    return this.setPreferredduringschedulingignoredduringexecutionList([]);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.PodAffinityTerm.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PodAffinityTerm.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PodAffinityTerm.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PodAffinityTerm} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PodAffinityTerm.toObject = function (includeInstance, msg) {
        var f, obj = {
            labelselector: (f = msg.getLabelselector()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.LabelSelector.toObject(includeInstance, f),
            namespacesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
            topologykey: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PodAffinityTerm}
 */
proto.k8s.io.api.core.v1.PodAffinityTerm.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PodAffinityTerm;
    return proto.k8s.io.api.core.v1.PodAffinityTerm.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PodAffinityTerm} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PodAffinityTerm}
 */
proto.k8s.io.api.core.v1.PodAffinityTerm.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.LabelSelector;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.LabelSelector.deserializeBinaryFromReader);
                msg.setLabelselector(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.addNamespaces(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setTopologykey(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PodAffinityTerm.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PodAffinityTerm.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PodAffinityTerm} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PodAffinityTerm.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getLabelselector();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.LabelSelector.serializeBinaryToWriter);
    }
    f = message.getNamespacesList();
    if (f.length > 0) {
        writer.writeRepeatedString(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector labelSelector = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector}
 */
proto.k8s.io.api.core.v1.PodAffinityTerm.prototype.getLabelselector = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.LabelSelector, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PodAffinityTerm} returns this
*/
proto.k8s.io.api.core.v1.PodAffinityTerm.prototype.setLabelselector = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodAffinityTerm} returns this
 */
proto.k8s.io.api.core.v1.PodAffinityTerm.prototype.clearLabelselector = function () {
    return this.setLabelselector(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodAffinityTerm.prototype.hasLabelselector = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated string namespaces = 2;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.PodAffinityTerm.prototype.getNamespacesList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.PodAffinityTerm} returns this
 */
proto.k8s.io.api.core.v1.PodAffinityTerm.prototype.setNamespacesList = function (value) {
    return jspb.Message.setField(this, 2, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.PodAffinityTerm} returns this
 */
proto.k8s.io.api.core.v1.PodAffinityTerm.prototype.addNamespaces = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PodAffinityTerm} returns this
 */
proto.k8s.io.api.core.v1.PodAffinityTerm.prototype.clearNamespacesList = function () {
    return this.setNamespacesList([]);
};
/**
 * optional string topologyKey = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodAffinityTerm.prototype.getTopologykey = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodAffinityTerm} returns this
 */
proto.k8s.io.api.core.v1.PodAffinityTerm.prototype.setTopologykey = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodAffinityTerm} returns this
 */
proto.k8s.io.api.core.v1.PodAffinityTerm.prototype.clearTopologykey = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodAffinityTerm.prototype.hasTopologykey = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.PodAntiAffinity.repeatedFields_ = [1, 2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PodAntiAffinity.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PodAntiAffinity.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PodAntiAffinity} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PodAntiAffinity.toObject = function (includeInstance, msg) {
        var f, obj = {
            requiredduringschedulingignoredduringexecutionList: jspb.Message.toObjectList(msg.getRequiredduringschedulingignoredduringexecutionList(), proto.k8s.io.api.core.v1.PodAffinityTerm.toObject, includeInstance),
            preferredduringschedulingignoredduringexecutionList: jspb.Message.toObjectList(msg.getPreferredduringschedulingignoredduringexecutionList(), proto.k8s.io.api.core.v1.WeightedPodAffinityTerm.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PodAntiAffinity}
 */
proto.k8s.io.api.core.v1.PodAntiAffinity.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PodAntiAffinity;
    return proto.k8s.io.api.core.v1.PodAntiAffinity.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PodAntiAffinity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PodAntiAffinity}
 */
proto.k8s.io.api.core.v1.PodAntiAffinity.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.PodAffinityTerm;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PodAffinityTerm.deserializeBinaryFromReader);
                msg.addRequiredduringschedulingignoredduringexecution(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.WeightedPodAffinityTerm;
                reader.readMessage(value, proto.k8s.io.api.core.v1.WeightedPodAffinityTerm.deserializeBinaryFromReader);
                msg.addPreferredduringschedulingignoredduringexecution(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PodAntiAffinity.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PodAntiAffinity.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PodAntiAffinity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PodAntiAffinity.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getRequiredduringschedulingignoredduringexecutionList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, proto.k8s.io.api.core.v1.PodAffinityTerm.serializeBinaryToWriter);
    }
    f = message.getPreferredduringschedulingignoredduringexecutionList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.WeightedPodAffinityTerm.serializeBinaryToWriter);
    }
};
/**
 * repeated PodAffinityTerm requiredDuringSchedulingIgnoredDuringExecution = 1;
 * @return {!Array<!proto.k8s.io.api.core.v1.PodAffinityTerm>}
 */
proto.k8s.io.api.core.v1.PodAntiAffinity.prototype.getRequiredduringschedulingignoredduringexecutionList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.PodAffinityTerm>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.PodAffinityTerm, 1));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.PodAffinityTerm>} value
 * @return {!proto.k8s.io.api.core.v1.PodAntiAffinity} returns this
*/
proto.k8s.io.api.core.v1.PodAntiAffinity.prototype.setRequiredduringschedulingignoredduringexecutionList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.PodAffinityTerm=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.PodAffinityTerm}
 */
proto.k8s.io.api.core.v1.PodAntiAffinity.prototype.addRequiredduringschedulingignoredduringexecution = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.k8s.io.api.core.v1.PodAffinityTerm, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PodAntiAffinity} returns this
 */
proto.k8s.io.api.core.v1.PodAntiAffinity.prototype.clearRequiredduringschedulingignoredduringexecutionList = function () {
    return this.setRequiredduringschedulingignoredduringexecutionList([]);
};
/**
 * repeated WeightedPodAffinityTerm preferredDuringSchedulingIgnoredDuringExecution = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.WeightedPodAffinityTerm>}
 */
proto.k8s.io.api.core.v1.PodAntiAffinity.prototype.getPreferredduringschedulingignoredduringexecutionList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.WeightedPodAffinityTerm>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.WeightedPodAffinityTerm, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.WeightedPodAffinityTerm>} value
 * @return {!proto.k8s.io.api.core.v1.PodAntiAffinity} returns this
*/
proto.k8s.io.api.core.v1.PodAntiAffinity.prototype.setPreferredduringschedulingignoredduringexecutionList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.WeightedPodAffinityTerm=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.WeightedPodAffinityTerm}
 */
proto.k8s.io.api.core.v1.PodAntiAffinity.prototype.addPreferredduringschedulingignoredduringexecution = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.WeightedPodAffinityTerm, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PodAntiAffinity} returns this
 */
proto.k8s.io.api.core.v1.PodAntiAffinity.prototype.clearPreferredduringschedulingignoredduringexecutionList = function () {
    return this.setPreferredduringschedulingignoredduringexecutionList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PodAttachOptions.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PodAttachOptions.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PodAttachOptions} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PodAttachOptions.toObject = function (includeInstance, msg) {
        var f, obj = {
            stdin: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
            stdout: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
            stderr: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
            tty: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
            container: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PodAttachOptions}
 */
proto.k8s.io.api.core.v1.PodAttachOptions.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PodAttachOptions;
    return proto.k8s.io.api.core.v1.PodAttachOptions.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PodAttachOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PodAttachOptions}
 */
proto.k8s.io.api.core.v1.PodAttachOptions.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setStdin(value);
                break;
            case 2:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setStdout(value);
                break;
            case 3:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setStderr(value);
                break;
            case 4:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setTty(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setContainer(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PodAttachOptions.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PodAttachOptions.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PodAttachOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PodAttachOptions.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeBool(1, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeBool(2, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeBool(3, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeBool(4, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeString(5, f);
    }
};
/**
 * optional bool stdin = 1;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodAttachOptions.prototype.getStdin = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.PodAttachOptions} returns this
 */
proto.k8s.io.api.core.v1.PodAttachOptions.prototype.setStdin = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodAttachOptions} returns this
 */
proto.k8s.io.api.core.v1.PodAttachOptions.prototype.clearStdin = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodAttachOptions.prototype.hasStdin = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional bool stdout = 2;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodAttachOptions.prototype.getStdout = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.PodAttachOptions} returns this
 */
proto.k8s.io.api.core.v1.PodAttachOptions.prototype.setStdout = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodAttachOptions} returns this
 */
proto.k8s.io.api.core.v1.PodAttachOptions.prototype.clearStdout = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodAttachOptions.prototype.hasStdout = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional bool stderr = 3;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodAttachOptions.prototype.getStderr = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.PodAttachOptions} returns this
 */
proto.k8s.io.api.core.v1.PodAttachOptions.prototype.setStderr = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodAttachOptions} returns this
 */
proto.k8s.io.api.core.v1.PodAttachOptions.prototype.clearStderr = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodAttachOptions.prototype.hasStderr = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional bool tty = 4;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodAttachOptions.prototype.getTty = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.PodAttachOptions} returns this
 */
proto.k8s.io.api.core.v1.PodAttachOptions.prototype.setTty = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodAttachOptions} returns this
 */
proto.k8s.io.api.core.v1.PodAttachOptions.prototype.clearTty = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodAttachOptions.prototype.hasTty = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional string container = 5;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodAttachOptions.prototype.getContainer = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodAttachOptions} returns this
 */
proto.k8s.io.api.core.v1.PodAttachOptions.prototype.setContainer = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodAttachOptions} returns this
 */
proto.k8s.io.api.core.v1.PodAttachOptions.prototype.clearContainer = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodAttachOptions.prototype.hasContainer = function () {
    return jspb.Message.getField(this, 5) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PodCondition.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PodCondition.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PodCondition} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PodCondition.toObject = function (includeInstance, msg) {
        var f, obj = {
            type: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            status: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            lastprobetime: (f = msg.getLastprobetime()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
            lasttransitiontime: (f = msg.getLasttransitiontime()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
            reason: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
            message: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PodCondition}
 */
proto.k8s.io.api.core.v1.PodCondition.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PodCondition;
    return proto.k8s.io.api.core.v1.PodCondition.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PodCondition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PodCondition}
 */
proto.k8s.io.api.core.v1.PodCondition.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setType(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setStatus(value);
                break;
            case 3:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
                msg.setLastprobetime(value);
                break;
            case 4:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
                msg.setLasttransitiontime(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setReason(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.setMessage(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PodCondition.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PodCondition.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PodCondition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PodCondition.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = message.getLastprobetime();
    if (f != null) {
        writer.writeMessage(3, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter);
    }
    f = message.getLasttransitiontime();
    if (f != null) {
        writer.writeMessage(4, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeString(5, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 6));
    if (f != null) {
        writer.writeString(6, f);
    }
};
/**
 * optional string type = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodCondition.prototype.getType = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodCondition} returns this
 */
proto.k8s.io.api.core.v1.PodCondition.prototype.setType = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodCondition} returns this
 */
proto.k8s.io.api.core.v1.PodCondition.prototype.clearType = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodCondition.prototype.hasType = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string status = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodCondition.prototype.getStatus = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodCondition} returns this
 */
proto.k8s.io.api.core.v1.PodCondition.prototype.setStatus = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodCondition} returns this
 */
proto.k8s.io.api.core.v1.PodCondition.prototype.clearStatus = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodCondition.prototype.hasStatus = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastProbeTime = 3;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.k8s.io.api.core.v1.PodCondition.prototype.getLastprobetime = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 3));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PodCondition} returns this
*/
proto.k8s.io.api.core.v1.PodCondition.prototype.setLastprobetime = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodCondition} returns this
 */
proto.k8s.io.api.core.v1.PodCondition.prototype.clearLastprobetime = function () {
    return this.setLastprobetime(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodCondition.prototype.hasLastprobetime = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 4;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.k8s.io.api.core.v1.PodCondition.prototype.getLasttransitiontime = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 4));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PodCondition} returns this
*/
proto.k8s.io.api.core.v1.PodCondition.prototype.setLasttransitiontime = function (value) {
    return jspb.Message.setWrapperField(this, 4, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodCondition} returns this
 */
proto.k8s.io.api.core.v1.PodCondition.prototype.clearLasttransitiontime = function () {
    return this.setLasttransitiontime(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodCondition.prototype.hasLasttransitiontime = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional string reason = 5;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodCondition.prototype.getReason = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodCondition} returns this
 */
proto.k8s.io.api.core.v1.PodCondition.prototype.setReason = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodCondition} returns this
 */
proto.k8s.io.api.core.v1.PodCondition.prototype.clearReason = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodCondition.prototype.hasReason = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional string message = 6;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodCondition.prototype.getMessage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodCondition} returns this
 */
proto.k8s.io.api.core.v1.PodCondition.prototype.setMessage = function (value) {
    return jspb.Message.setField(this, 6, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodCondition} returns this
 */
proto.k8s.io.api.core.v1.PodCondition.prototype.clearMessage = function () {
    return jspb.Message.setField(this, 6, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodCondition.prototype.hasMessage = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.PodDNSConfig.repeatedFields_ = [1, 2, 3];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PodDNSConfig.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PodDNSConfig.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PodDNSConfig} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PodDNSConfig.toObject = function (includeInstance, msg) {
        var f, obj = {
            nameserversList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
            searchesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
            optionsList: jspb.Message.toObjectList(msg.getOptionsList(), proto.k8s.io.api.core.v1.PodDNSConfigOption.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PodDNSConfig}
 */
proto.k8s.io.api.core.v1.PodDNSConfig.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PodDNSConfig;
    return proto.k8s.io.api.core.v1.PodDNSConfig.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PodDNSConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PodDNSConfig}
 */
proto.k8s.io.api.core.v1.PodDNSConfig.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.addNameservers(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.addSearches(value);
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.PodDNSConfigOption;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PodDNSConfigOption.deserializeBinaryFromReader);
                msg.addOptions(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PodDNSConfig.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PodDNSConfig.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PodDNSConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PodDNSConfig.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getNameserversList();
    if (f.length > 0) {
        writer.writeRepeatedString(1, f);
    }
    f = message.getSearchesList();
    if (f.length > 0) {
        writer.writeRepeatedString(2, f);
    }
    f = message.getOptionsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(3, f, proto.k8s.io.api.core.v1.PodDNSConfigOption.serializeBinaryToWriter);
    }
};
/**
 * repeated string nameservers = 1;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.PodDNSConfig.prototype.getNameserversList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.PodDNSConfig} returns this
 */
proto.k8s.io.api.core.v1.PodDNSConfig.prototype.setNameserversList = function (value) {
    return jspb.Message.setField(this, 1, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.PodDNSConfig} returns this
 */
proto.k8s.io.api.core.v1.PodDNSConfig.prototype.addNameservers = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PodDNSConfig} returns this
 */
proto.k8s.io.api.core.v1.PodDNSConfig.prototype.clearNameserversList = function () {
    return this.setNameserversList([]);
};
/**
 * repeated string searches = 2;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.PodDNSConfig.prototype.getSearchesList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.PodDNSConfig} returns this
 */
proto.k8s.io.api.core.v1.PodDNSConfig.prototype.setSearchesList = function (value) {
    return jspb.Message.setField(this, 2, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.PodDNSConfig} returns this
 */
proto.k8s.io.api.core.v1.PodDNSConfig.prototype.addSearches = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PodDNSConfig} returns this
 */
proto.k8s.io.api.core.v1.PodDNSConfig.prototype.clearSearchesList = function () {
    return this.setSearchesList([]);
};
/**
 * repeated PodDNSConfigOption options = 3;
 * @return {!Array<!proto.k8s.io.api.core.v1.PodDNSConfigOption>}
 */
proto.k8s.io.api.core.v1.PodDNSConfig.prototype.getOptionsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.PodDNSConfigOption>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.PodDNSConfigOption, 3));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.PodDNSConfigOption>} value
 * @return {!proto.k8s.io.api.core.v1.PodDNSConfig} returns this
*/
proto.k8s.io.api.core.v1.PodDNSConfig.prototype.setOptionsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 3, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.PodDNSConfigOption=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.PodDNSConfigOption}
 */
proto.k8s.io.api.core.v1.PodDNSConfig.prototype.addOptions = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.k8s.io.api.core.v1.PodDNSConfigOption, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PodDNSConfig} returns this
 */
proto.k8s.io.api.core.v1.PodDNSConfig.prototype.clearOptionsList = function () {
    return this.setOptionsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PodDNSConfigOption.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PodDNSConfigOption.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PodDNSConfigOption} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PodDNSConfigOption.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            value: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PodDNSConfigOption}
 */
proto.k8s.io.api.core.v1.PodDNSConfigOption.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PodDNSConfigOption;
    return proto.k8s.io.api.core.v1.PodDNSConfigOption.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PodDNSConfigOption} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PodDNSConfigOption}
 */
proto.k8s.io.api.core.v1.PodDNSConfigOption.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setValue(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PodDNSConfigOption.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PodDNSConfigOption.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PodDNSConfigOption} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PodDNSConfigOption.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
};
/**
 * optional string name = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodDNSConfigOption.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodDNSConfigOption} returns this
 */
proto.k8s.io.api.core.v1.PodDNSConfigOption.prototype.setName = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodDNSConfigOption} returns this
 */
proto.k8s.io.api.core.v1.PodDNSConfigOption.prototype.clearName = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodDNSConfigOption.prototype.hasName = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string value = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodDNSConfigOption.prototype.getValue = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodDNSConfigOption} returns this
 */
proto.k8s.io.api.core.v1.PodDNSConfigOption.prototype.setValue = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodDNSConfigOption} returns this
 */
proto.k8s.io.api.core.v1.PodDNSConfigOption.prototype.clearValue = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodDNSConfigOption.prototype.hasValue = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.PodExecOptions.repeatedFields_ = [6];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PodExecOptions.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PodExecOptions.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PodExecOptions} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PodExecOptions.toObject = function (includeInstance, msg) {
        var f, obj = {
            stdin: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
            stdout: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
            stderr: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
            tty: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
            container: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
            commandList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PodExecOptions}
 */
proto.k8s.io.api.core.v1.PodExecOptions.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PodExecOptions;
    return proto.k8s.io.api.core.v1.PodExecOptions.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PodExecOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PodExecOptions}
 */
proto.k8s.io.api.core.v1.PodExecOptions.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setStdin(value);
                break;
            case 2:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setStdout(value);
                break;
            case 3:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setStderr(value);
                break;
            case 4:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setTty(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setContainer(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.addCommand(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PodExecOptions.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PodExecOptions.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PodExecOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PodExecOptions.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeBool(1, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeBool(2, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeBool(3, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeBool(4, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeString(5, f);
    }
    f = message.getCommandList();
    if (f.length > 0) {
        writer.writeRepeatedString(6, f);
    }
};
/**
 * optional bool stdin = 1;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodExecOptions.prototype.getStdin = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.PodExecOptions} returns this
 */
proto.k8s.io.api.core.v1.PodExecOptions.prototype.setStdin = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodExecOptions} returns this
 */
proto.k8s.io.api.core.v1.PodExecOptions.prototype.clearStdin = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodExecOptions.prototype.hasStdin = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional bool stdout = 2;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodExecOptions.prototype.getStdout = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.PodExecOptions} returns this
 */
proto.k8s.io.api.core.v1.PodExecOptions.prototype.setStdout = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodExecOptions} returns this
 */
proto.k8s.io.api.core.v1.PodExecOptions.prototype.clearStdout = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodExecOptions.prototype.hasStdout = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional bool stderr = 3;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodExecOptions.prototype.getStderr = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.PodExecOptions} returns this
 */
proto.k8s.io.api.core.v1.PodExecOptions.prototype.setStderr = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodExecOptions} returns this
 */
proto.k8s.io.api.core.v1.PodExecOptions.prototype.clearStderr = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodExecOptions.prototype.hasStderr = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional bool tty = 4;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodExecOptions.prototype.getTty = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.PodExecOptions} returns this
 */
proto.k8s.io.api.core.v1.PodExecOptions.prototype.setTty = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodExecOptions} returns this
 */
proto.k8s.io.api.core.v1.PodExecOptions.prototype.clearTty = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodExecOptions.prototype.hasTty = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional string container = 5;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodExecOptions.prototype.getContainer = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodExecOptions} returns this
 */
proto.k8s.io.api.core.v1.PodExecOptions.prototype.setContainer = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodExecOptions} returns this
 */
proto.k8s.io.api.core.v1.PodExecOptions.prototype.clearContainer = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodExecOptions.prototype.hasContainer = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * repeated string command = 6;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.PodExecOptions.prototype.getCommandList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.PodExecOptions} returns this
 */
proto.k8s.io.api.core.v1.PodExecOptions.prototype.setCommandList = function (value) {
    return jspb.Message.setField(this, 6, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.PodExecOptions} returns this
 */
proto.k8s.io.api.core.v1.PodExecOptions.prototype.addCommand = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PodExecOptions} returns this
 */
proto.k8s.io.api.core.v1.PodExecOptions.prototype.clearCommandList = function () {
    return this.setCommandList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PodIP.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PodIP.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PodIP} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PodIP.toObject = function (includeInstance, msg) {
        var f, obj = {
            ip: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PodIP}
 */
proto.k8s.io.api.core.v1.PodIP.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PodIP;
    return proto.k8s.io.api.core.v1.PodIP.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PodIP} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PodIP}
 */
proto.k8s.io.api.core.v1.PodIP.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setIp(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PodIP.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PodIP.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PodIP} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PodIP.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
};
/**
 * optional string ip = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodIP.prototype.getIp = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodIP} returns this
 */
proto.k8s.io.api.core.v1.PodIP.prototype.setIp = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodIP} returns this
 */
proto.k8s.io.api.core.v1.PodIP.prototype.clearIp = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodIP.prototype.hasIp = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.PodList.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PodList.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PodList.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PodList} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PodList.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
            itemsList: jspb.Message.toObjectList(msg.getItemsList(), proto.k8s.io.api.core.v1.Pod.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PodList}
 */
proto.k8s.io.api.core.v1.PodList.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PodList;
    return proto.k8s.io.api.core.v1.PodList.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PodList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PodList}
 */
proto.k8s.io.api.core.v1.PodList.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.Pod;
                reader.readMessage(value, proto.k8s.io.api.core.v1.Pod.deserializeBinaryFromReader);
                msg.addItems(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PodList.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PodList.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PodList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PodList.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter);
    }
    f = message.getItemsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.Pod.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.k8s.io.api.core.v1.PodList.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PodList} returns this
*/
proto.k8s.io.api.core.v1.PodList.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodList} returns this
 */
proto.k8s.io.api.core.v1.PodList.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodList.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated Pod items = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.Pod>}
 */
proto.k8s.io.api.core.v1.PodList.prototype.getItemsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.Pod>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.Pod, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.Pod>} value
 * @return {!proto.k8s.io.api.core.v1.PodList} returns this
*/
proto.k8s.io.api.core.v1.PodList.prototype.setItemsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.Pod=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.Pod}
 */
proto.k8s.io.api.core.v1.PodList.prototype.addItems = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.Pod, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PodList} returns this
 */
proto.k8s.io.api.core.v1.PodList.prototype.clearItemsList = function () {
    return this.setItemsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PodLogOptions.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PodLogOptions.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PodLogOptions} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PodLogOptions.toObject = function (includeInstance, msg) {
        var f, obj = {
            container: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            follow: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
            previous: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
            sinceseconds: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
            sincetime: (f = msg.getSincetime()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
            timestamps: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
            taillines: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
            limitbytes: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
            insecureskiptlsverifybackend: (f = jspb.Message.getBooleanField(msg, 9)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PodLogOptions}
 */
proto.k8s.io.api.core.v1.PodLogOptions.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PodLogOptions;
    return proto.k8s.io.api.core.v1.PodLogOptions.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PodLogOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PodLogOptions}
 */
proto.k8s.io.api.core.v1.PodLogOptions.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setContainer(value);
                break;
            case 2:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setFollow(value);
                break;
            case 3:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setPrevious(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setSinceseconds(value);
                break;
            case 5:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
                msg.setSincetime(value);
                break;
            case 6:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setTimestamps(value);
                break;
            case 7:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setTaillines(value);
                break;
            case 8:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setLimitbytes(value);
                break;
            case 9:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setInsecureskiptlsverifybackend(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PodLogOptions.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PodLogOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PodLogOptions.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeBool(2, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeBool(3, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeInt64(4, f);
    }
    f = message.getSincetime();
    if (f != null) {
        writer.writeMessage(5, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
    if (f != null) {
        writer.writeBool(6, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 7));
    if (f != null) {
        writer.writeInt64(7, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 8));
    if (f != null) {
        writer.writeInt64(8, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
    if (f != null) {
        writer.writeBool(9, f);
    }
};
/**
 * optional string container = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.getContainer = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodLogOptions} returns this
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.setContainer = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodLogOptions} returns this
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.clearContainer = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.hasContainer = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional bool follow = 2;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.getFollow = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.PodLogOptions} returns this
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.setFollow = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodLogOptions} returns this
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.clearFollow = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.hasFollow = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional bool previous = 3;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.getPrevious = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.PodLogOptions} returns this
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.setPrevious = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodLogOptions} returns this
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.clearPrevious = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.hasPrevious = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional int64 sinceSeconds = 4;
 * @return {number}
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.getSinceseconds = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.PodLogOptions} returns this
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.setSinceseconds = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodLogOptions} returns this
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.clearSinceseconds = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.hasSinceseconds = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time sinceTime = 5;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.getSincetime = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 5));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PodLogOptions} returns this
*/
proto.k8s.io.api.core.v1.PodLogOptions.prototype.setSincetime = function (value) {
    return jspb.Message.setWrapperField(this, 5, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodLogOptions} returns this
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.clearSincetime = function () {
    return this.setSincetime(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.hasSincetime = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional bool timestamps = 6;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.getTimestamps = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.PodLogOptions} returns this
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.setTimestamps = function (value) {
    return jspb.Message.setField(this, 6, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodLogOptions} returns this
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.clearTimestamps = function () {
    return jspb.Message.setField(this, 6, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.hasTimestamps = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * optional int64 tailLines = 7;
 * @return {number}
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.getTaillines = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.PodLogOptions} returns this
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.setTaillines = function (value) {
    return jspb.Message.setField(this, 7, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodLogOptions} returns this
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.clearTaillines = function () {
    return jspb.Message.setField(this, 7, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.hasTaillines = function () {
    return jspb.Message.getField(this, 7) != null;
};
/**
 * optional int64 limitBytes = 8;
 * @return {number}
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.getLimitbytes = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.PodLogOptions} returns this
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.setLimitbytes = function (value) {
    return jspb.Message.setField(this, 8, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodLogOptions} returns this
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.clearLimitbytes = function () {
    return jspb.Message.setField(this, 8, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.hasLimitbytes = function () {
    return jspb.Message.getField(this, 8) != null;
};
/**
 * optional bool insecureSkipTLSVerifyBackend = 9;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.getInsecureskiptlsverifybackend = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.PodLogOptions} returns this
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.setInsecureskiptlsverifybackend = function (value) {
    return jspb.Message.setField(this, 9, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodLogOptions} returns this
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.clearInsecureskiptlsverifybackend = function () {
    return jspb.Message.setField(this, 9, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodLogOptions.prototype.hasInsecureskiptlsverifybackend = function () {
    return jspb.Message.getField(this, 9) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.PodPortForwardOptions.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PodPortForwardOptions.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PodPortForwardOptions.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PodPortForwardOptions} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PodPortForwardOptions.toObject = function (includeInstance, msg) {
        var f, obj = {
            portsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PodPortForwardOptions}
 */
proto.k8s.io.api.core.v1.PodPortForwardOptions.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PodPortForwardOptions;
    return proto.k8s.io.api.core.v1.PodPortForwardOptions.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PodPortForwardOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PodPortForwardOptions}
 */
proto.k8s.io.api.core.v1.PodPortForwardOptions.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
                for (var i = 0; i < values.length; i++) {
                    msg.addPorts(values[i]);
                }
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PodPortForwardOptions.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PodPortForwardOptions.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PodPortForwardOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PodPortForwardOptions.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getPortsList();
    if (f.length > 0) {
        writer.writeRepeatedInt32(1, f);
    }
};
/**
 * repeated int32 ports = 1;
 * @return {!Array<number>}
 */
proto.k8s.io.api.core.v1.PodPortForwardOptions.prototype.getPortsList = function () {
    return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};
/**
 * @param {!Array<number>} value
 * @return {!proto.k8s.io.api.core.v1.PodPortForwardOptions} returns this
 */
proto.k8s.io.api.core.v1.PodPortForwardOptions.prototype.setPortsList = function (value) {
    return jspb.Message.setField(this, 1, value || []);
};
/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.PodPortForwardOptions} returns this
 */
proto.k8s.io.api.core.v1.PodPortForwardOptions.prototype.addPorts = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PodPortForwardOptions} returns this
 */
proto.k8s.io.api.core.v1.PodPortForwardOptions.prototype.clearPortsList = function () {
    return this.setPortsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PodProxyOptions.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PodProxyOptions.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PodProxyOptions} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PodProxyOptions.toObject = function (includeInstance, msg) {
        var f, obj = {
            path: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PodProxyOptions}
 */
proto.k8s.io.api.core.v1.PodProxyOptions.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PodProxyOptions;
    return proto.k8s.io.api.core.v1.PodProxyOptions.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PodProxyOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PodProxyOptions}
 */
proto.k8s.io.api.core.v1.PodProxyOptions.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setPath(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PodProxyOptions.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PodProxyOptions.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PodProxyOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PodProxyOptions.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
};
/**
 * optional string path = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodProxyOptions.prototype.getPath = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodProxyOptions} returns this
 */
proto.k8s.io.api.core.v1.PodProxyOptions.prototype.setPath = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodProxyOptions} returns this
 */
proto.k8s.io.api.core.v1.PodProxyOptions.prototype.clearPath = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodProxyOptions.prototype.hasPath = function () {
    return jspb.Message.getField(this, 1) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PodReadinessGate.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PodReadinessGate.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PodReadinessGate} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PodReadinessGate.toObject = function (includeInstance, msg) {
        var f, obj = {
            conditiontype: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PodReadinessGate}
 */
proto.k8s.io.api.core.v1.PodReadinessGate.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PodReadinessGate;
    return proto.k8s.io.api.core.v1.PodReadinessGate.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PodReadinessGate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PodReadinessGate}
 */
proto.k8s.io.api.core.v1.PodReadinessGate.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setConditiontype(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PodReadinessGate.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PodReadinessGate.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PodReadinessGate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PodReadinessGate.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
};
/**
 * optional string conditionType = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodReadinessGate.prototype.getConditiontype = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodReadinessGate} returns this
 */
proto.k8s.io.api.core.v1.PodReadinessGate.prototype.setConditiontype = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodReadinessGate} returns this
 */
proto.k8s.io.api.core.v1.PodReadinessGate.prototype.clearConditiontype = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodReadinessGate.prototype.hasConditiontype = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.PodSecurityContext.repeatedFields_ = [4, 7];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PodSecurityContext.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PodSecurityContext.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PodSecurityContext} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PodSecurityContext.toObject = function (includeInstance, msg) {
        var f, obj = {
            selinuxoptions: (f = msg.getSelinuxoptions()) && proto.k8s.io.api.core.v1.SELinuxOptions.toObject(includeInstance, f),
            windowsoptions: (f = msg.getWindowsoptions()) && proto.k8s.io.api.core.v1.WindowsSecurityContextOptions.toObject(includeInstance, f),
            runasuser: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            runasgroup: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
            runasnonroot: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
            supplementalgroupsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
            fsgroup: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
            sysctlsList: jspb.Message.toObjectList(msg.getSysctlsList(), proto.k8s.io.api.core.v1.Sysctl.toObject, includeInstance),
            fsgroupchangepolicy: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
            seccompprofile: (f = msg.getSeccompprofile()) && proto.k8s.io.api.core.v1.SeccompProfile.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PodSecurityContext}
 */
proto.k8s.io.api.core.v1.PodSecurityContext.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PodSecurityContext;
    return proto.k8s.io.api.core.v1.PodSecurityContext.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PodSecurityContext} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PodSecurityContext}
 */
proto.k8s.io.api.core.v1.PodSecurityContext.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.SELinuxOptions;
                reader.readMessage(value, proto.k8s.io.api.core.v1.SELinuxOptions.deserializeBinaryFromReader);
                msg.setSelinuxoptions(value);
                break;
            case 8:
                var value = new proto.k8s.io.api.core.v1.WindowsSecurityContextOptions;
                reader.readMessage(value, proto.k8s.io.api.core.v1.WindowsSecurityContextOptions.deserializeBinaryFromReader);
                msg.setWindowsoptions(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setRunasuser(value);
                break;
            case 6:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setRunasgroup(value);
                break;
            case 3:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setRunasnonroot(value);
                break;
            case 4:
                var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
                for (var i = 0; i < values.length; i++) {
                    msg.addSupplementalgroups(values[i]);
                }
                break;
            case 5:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setFsgroup(value);
                break;
            case 7:
                var value = new proto.k8s.io.api.core.v1.Sysctl;
                reader.readMessage(value, proto.k8s.io.api.core.v1.Sysctl.deserializeBinaryFromReader);
                msg.addSysctls(value);
                break;
            case 9:
                var value = /** @type {string} */ (reader.readString());
                msg.setFsgroupchangepolicy(value);
                break;
            case 10:
                var value = new proto.k8s.io.api.core.v1.SeccompProfile;
                reader.readMessage(value, proto.k8s.io.api.core.v1.SeccompProfile.deserializeBinaryFromReader);
                msg.setSeccompprofile(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PodSecurityContext.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PodSecurityContext} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PodSecurityContext.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getSelinuxoptions();
    if (f != null) {
        writer.writeMessage(1, f, proto.k8s.io.api.core.v1.SELinuxOptions.serializeBinaryToWriter);
    }
    f = message.getWindowsoptions();
    if (f != null) {
        writer.writeMessage(8, f, proto.k8s.io.api.core.v1.WindowsSecurityContextOptions.serializeBinaryToWriter);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeInt64(2, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 6));
    if (f != null) {
        writer.writeInt64(6, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeBool(3, f);
    }
    f = message.getSupplementalgroupsList();
    if (f.length > 0) {
        writer.writeRepeatedInt64(4, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeInt64(5, f);
    }
    f = message.getSysctlsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(7, f, proto.k8s.io.api.core.v1.Sysctl.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 9));
    if (f != null) {
        writer.writeString(9, f);
    }
    f = message.getSeccompprofile();
    if (f != null) {
        writer.writeMessage(10, f, proto.k8s.io.api.core.v1.SeccompProfile.serializeBinaryToWriter);
    }
};
/**
 * optional SELinuxOptions seLinuxOptions = 1;
 * @return {?proto.k8s.io.api.core.v1.SELinuxOptions}
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.getSelinuxoptions = function () {
    return /** @type{?proto.k8s.io.api.core.v1.SELinuxOptions} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.SELinuxOptions, 1));
};
/**
 * @param {?proto.k8s.io.api.core.v1.SELinuxOptions|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PodSecurityContext} returns this
*/
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.setSelinuxoptions = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSecurityContext} returns this
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.clearSelinuxoptions = function () {
    return this.setSelinuxoptions(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.hasSelinuxoptions = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional WindowsSecurityContextOptions windowsOptions = 8;
 * @return {?proto.k8s.io.api.core.v1.WindowsSecurityContextOptions}
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.getWindowsoptions = function () {
    return /** @type{?proto.k8s.io.api.core.v1.WindowsSecurityContextOptions} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.WindowsSecurityContextOptions, 8));
};
/**
 * @param {?proto.k8s.io.api.core.v1.WindowsSecurityContextOptions|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PodSecurityContext} returns this
*/
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.setWindowsoptions = function (value) {
    return jspb.Message.setWrapperField(this, 8, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSecurityContext} returns this
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.clearWindowsoptions = function () {
    return this.setWindowsoptions(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.hasWindowsoptions = function () {
    return jspb.Message.getField(this, 8) != null;
};
/**
 * optional int64 runAsUser = 2;
 * @return {number}
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.getRunasuser = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.PodSecurityContext} returns this
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.setRunasuser = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSecurityContext} returns this
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.clearRunasuser = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.hasRunasuser = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional int64 runAsGroup = 6;
 * @return {number}
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.getRunasgroup = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.PodSecurityContext} returns this
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.setRunasgroup = function (value) {
    return jspb.Message.setField(this, 6, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSecurityContext} returns this
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.clearRunasgroup = function () {
    return jspb.Message.setField(this, 6, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.hasRunasgroup = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * optional bool runAsNonRoot = 3;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.getRunasnonroot = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.PodSecurityContext} returns this
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.setRunasnonroot = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSecurityContext} returns this
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.clearRunasnonroot = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.hasRunasnonroot = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * repeated int64 supplementalGroups = 4;
 * @return {!Array<number>}
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.getSupplementalgroupsList = function () {
    return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};
/**
 * @param {!Array<number>} value
 * @return {!proto.k8s.io.api.core.v1.PodSecurityContext} returns this
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.setSupplementalgroupsList = function (value) {
    return jspb.Message.setField(this, 4, value || []);
};
/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.PodSecurityContext} returns this
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.addSupplementalgroups = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PodSecurityContext} returns this
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.clearSupplementalgroupsList = function () {
    return this.setSupplementalgroupsList([]);
};
/**
 * optional int64 fsGroup = 5;
 * @return {number}
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.getFsgroup = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.PodSecurityContext} returns this
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.setFsgroup = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSecurityContext} returns this
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.clearFsgroup = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.hasFsgroup = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * repeated Sysctl sysctls = 7;
 * @return {!Array<!proto.k8s.io.api.core.v1.Sysctl>}
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.getSysctlsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.Sysctl>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.Sysctl, 7));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.Sysctl>} value
 * @return {!proto.k8s.io.api.core.v1.PodSecurityContext} returns this
*/
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.setSysctlsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 7, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.Sysctl=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.Sysctl}
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.addSysctls = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.k8s.io.api.core.v1.Sysctl, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PodSecurityContext} returns this
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.clearSysctlsList = function () {
    return this.setSysctlsList([]);
};
/**
 * optional string fsGroupChangePolicy = 9;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.getFsgroupchangepolicy = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodSecurityContext} returns this
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.setFsgroupchangepolicy = function (value) {
    return jspb.Message.setField(this, 9, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSecurityContext} returns this
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.clearFsgroupchangepolicy = function () {
    return jspb.Message.setField(this, 9, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.hasFsgroupchangepolicy = function () {
    return jspb.Message.getField(this, 9) != null;
};
/**
 * optional SeccompProfile seccompProfile = 10;
 * @return {?proto.k8s.io.api.core.v1.SeccompProfile}
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.getSeccompprofile = function () {
    return /** @type{?proto.k8s.io.api.core.v1.SeccompProfile} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.SeccompProfile, 10));
};
/**
 * @param {?proto.k8s.io.api.core.v1.SeccompProfile|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PodSecurityContext} returns this
*/
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.setSeccompprofile = function (value) {
    return jspb.Message.setWrapperField(this, 10, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSecurityContext} returns this
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.clearSeccompprofile = function () {
    return this.setSeccompprofile(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSecurityContext.prototype.hasSeccompprofile = function () {
    return jspb.Message.getField(this, 10) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PodSignature.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PodSignature.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PodSignature} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PodSignature.toObject = function (includeInstance, msg) {
        var f, obj = {
            podcontroller: (f = msg.getPodcontroller()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.OwnerReference.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PodSignature}
 */
proto.k8s.io.api.core.v1.PodSignature.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PodSignature;
    return proto.k8s.io.api.core.v1.PodSignature.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PodSignature} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PodSignature}
 */
proto.k8s.io.api.core.v1.PodSignature.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.OwnerReference;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.OwnerReference.deserializeBinaryFromReader);
                msg.setPodcontroller(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PodSignature.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PodSignature.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PodSignature} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PodSignature.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getPodcontroller();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.OwnerReference.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.OwnerReference podController = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.OwnerReference}
 */
proto.k8s.io.api.core.v1.PodSignature.prototype.getPodcontroller = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.OwnerReference} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.OwnerReference, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.OwnerReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PodSignature} returns this
*/
proto.k8s.io.api.core.v1.PodSignature.prototype.setPodcontroller = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSignature} returns this
 */
proto.k8s.io.api.core.v1.PodSignature.prototype.clearPodcontroller = function () {
    return this.setPodcontroller(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSignature.prototype.hasPodcontroller = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.PodSpec.repeatedFields_ = [1, 20, 2, 34, 15, 22, 23, 28, 33];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PodSpec.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PodSpec.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PodSpec} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PodSpec.toObject = function (includeInstance, msg) {
        var f, obj = {
            volumesList: jspb.Message.toObjectList(msg.getVolumesList(), proto.k8s.io.api.core.v1.Volume.toObject, includeInstance),
            initcontainersList: jspb.Message.toObjectList(msg.getInitcontainersList(), proto.k8s.io.api.core.v1.Container.toObject, includeInstance),
            containersList: jspb.Message.toObjectList(msg.getContainersList(), proto.k8s.io.api.core.v1.Container.toObject, includeInstance),
            ephemeralcontainersList: jspb.Message.toObjectList(msg.getEphemeralcontainersList(), proto.k8s.io.api.core.v1.EphemeralContainer.toObject, includeInstance),
            restartpolicy: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            terminationgraceperiodseconds: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
            activedeadlineseconds: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
            dnspolicy: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
            nodeselectorMap: (f = msg.getNodeselectorMap()) ? f.toObject(includeInstance, undefined) : [],
            serviceaccountname: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
            serviceaccount: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
            automountserviceaccounttoken: (f = jspb.Message.getBooleanField(msg, 21)) == null ? undefined : f,
            nodename: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
            hostnetwork: (f = jspb.Message.getBooleanField(msg, 11)) == null ? undefined : f,
            hostpid: (f = jspb.Message.getBooleanField(msg, 12)) == null ? undefined : f,
            hostipc: (f = jspb.Message.getBooleanField(msg, 13)) == null ? undefined : f,
            shareprocessnamespace: (f = jspb.Message.getBooleanField(msg, 27)) == null ? undefined : f,
            securitycontext: (f = msg.getSecuritycontext()) && proto.k8s.io.api.core.v1.PodSecurityContext.toObject(includeInstance, f),
            imagepullsecretsList: jspb.Message.toObjectList(msg.getImagepullsecretsList(), proto.k8s.io.api.core.v1.LocalObjectReference.toObject, includeInstance),
            hostname: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
            subdomain: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
            affinity: (f = msg.getAffinity()) && proto.k8s.io.api.core.v1.Affinity.toObject(includeInstance, f),
            schedulername: (f = jspb.Message.getField(msg, 19)) == null ? undefined : f,
            tolerationsList: jspb.Message.toObjectList(msg.getTolerationsList(), proto.k8s.io.api.core.v1.Toleration.toObject, includeInstance),
            hostaliasesList: jspb.Message.toObjectList(msg.getHostaliasesList(), proto.k8s.io.api.core.v1.HostAlias.toObject, includeInstance),
            priorityclassname: (f = jspb.Message.getField(msg, 24)) == null ? undefined : f,
            priority: (f = jspb.Message.getField(msg, 25)) == null ? undefined : f,
            dnsconfig: (f = msg.getDnsconfig()) && proto.k8s.io.api.core.v1.PodDNSConfig.toObject(includeInstance, f),
            readinessgatesList: jspb.Message.toObjectList(msg.getReadinessgatesList(), proto.k8s.io.api.core.v1.PodReadinessGate.toObject, includeInstance),
            runtimeclassname: (f = jspb.Message.getField(msg, 29)) == null ? undefined : f,
            enableservicelinks: (f = jspb.Message.getBooleanField(msg, 30)) == null ? undefined : f,
            preemptionpolicy: (f = jspb.Message.getField(msg, 31)) == null ? undefined : f,
            overheadMap: (f = msg.getOverheadMap()) ? f.toObject(includeInstance, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.toObject) : [],
            topologyspreadconstraintsList: jspb.Message.toObjectList(msg.getTopologyspreadconstraintsList(), proto.k8s.io.api.core.v1.TopologySpreadConstraint.toObject, includeInstance),
            sethostnameasfqdn: (f = jspb.Message.getBooleanField(msg, 35)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PodSpec}
 */
proto.k8s.io.api.core.v1.PodSpec.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PodSpec;
    return proto.k8s.io.api.core.v1.PodSpec.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PodSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PodSpec}
 */
proto.k8s.io.api.core.v1.PodSpec.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.Volume;
                reader.readMessage(value, proto.k8s.io.api.core.v1.Volume.deserializeBinaryFromReader);
                msg.addVolumes(value);
                break;
            case 20:
                var value = new proto.k8s.io.api.core.v1.Container;
                reader.readMessage(value, proto.k8s.io.api.core.v1.Container.deserializeBinaryFromReader);
                msg.addInitcontainers(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.Container;
                reader.readMessage(value, proto.k8s.io.api.core.v1.Container.deserializeBinaryFromReader);
                msg.addContainers(value);
                break;
            case 34:
                var value = new proto.k8s.io.api.core.v1.EphemeralContainer;
                reader.readMessage(value, proto.k8s.io.api.core.v1.EphemeralContainer.deserializeBinaryFromReader);
                msg.addEphemeralcontainers(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setRestartpolicy(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setTerminationgraceperiodseconds(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setActivedeadlineseconds(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.setDnspolicy(value);
                break;
            case 7:
                var value = msg.getNodeselectorMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
                });
                break;
            case 8:
                var value = /** @type {string} */ (reader.readString());
                msg.setServiceaccountname(value);
                break;
            case 9:
                var value = /** @type {string} */ (reader.readString());
                msg.setServiceaccount(value);
                break;
            case 21:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setAutomountserviceaccounttoken(value);
                break;
            case 10:
                var value = /** @type {string} */ (reader.readString());
                msg.setNodename(value);
                break;
            case 11:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setHostnetwork(value);
                break;
            case 12:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setHostpid(value);
                break;
            case 13:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setHostipc(value);
                break;
            case 27:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setShareprocessnamespace(value);
                break;
            case 14:
                var value = new proto.k8s.io.api.core.v1.PodSecurityContext;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PodSecurityContext.deserializeBinaryFromReader);
                msg.setSecuritycontext(value);
                break;
            case 15:
                var value = new proto.k8s.io.api.core.v1.LocalObjectReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.LocalObjectReference.deserializeBinaryFromReader);
                msg.addImagepullsecrets(value);
                break;
            case 16:
                var value = /** @type {string} */ (reader.readString());
                msg.setHostname(value);
                break;
            case 17:
                var value = /** @type {string} */ (reader.readString());
                msg.setSubdomain(value);
                break;
            case 18:
                var value = new proto.k8s.io.api.core.v1.Affinity;
                reader.readMessage(value, proto.k8s.io.api.core.v1.Affinity.deserializeBinaryFromReader);
                msg.setAffinity(value);
                break;
            case 19:
                var value = /** @type {string} */ (reader.readString());
                msg.setSchedulername(value);
                break;
            case 22:
                var value = new proto.k8s.io.api.core.v1.Toleration;
                reader.readMessage(value, proto.k8s.io.api.core.v1.Toleration.deserializeBinaryFromReader);
                msg.addTolerations(value);
                break;
            case 23:
                var value = new proto.k8s.io.api.core.v1.HostAlias;
                reader.readMessage(value, proto.k8s.io.api.core.v1.HostAlias.deserializeBinaryFromReader);
                msg.addHostaliases(value);
                break;
            case 24:
                var value = /** @type {string} */ (reader.readString());
                msg.setPriorityclassname(value);
                break;
            case 25:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setPriority(value);
                break;
            case 26:
                var value = new proto.k8s.io.api.core.v1.PodDNSConfig;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PodDNSConfig.deserializeBinaryFromReader);
                msg.setDnsconfig(value);
                break;
            case 28:
                var value = new proto.k8s.io.api.core.v1.PodReadinessGate;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PodReadinessGate.deserializeBinaryFromReader);
                msg.addReadinessgates(value);
                break;
            case 29:
                var value = /** @type {string} */ (reader.readString());
                msg.setRuntimeclassname(value);
                break;
            case 30:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setEnableservicelinks(value);
                break;
            case 31:
                var value = /** @type {string} */ (reader.readString());
                msg.setPreemptionpolicy(value);
                break;
            case 32:
                var value = msg.getOverheadMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.deserializeBinaryFromReader, "", new proto.k8s.io.apimachinery.pkg.api.resource.Quantity());
                });
                break;
            case 33:
                var value = new proto.k8s.io.api.core.v1.TopologySpreadConstraint;
                reader.readMessage(value, proto.k8s.io.api.core.v1.TopologySpreadConstraint.deserializeBinaryFromReader);
                msg.addTopologyspreadconstraints(value);
                break;
            case 35:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setSethostnameasfqdn(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PodSpec.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PodSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PodSpec.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getVolumesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, proto.k8s.io.api.core.v1.Volume.serializeBinaryToWriter);
    }
    f = message.getInitcontainersList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(20, f, proto.k8s.io.api.core.v1.Container.serializeBinaryToWriter);
    }
    f = message.getContainersList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.Container.serializeBinaryToWriter);
    }
    f = message.getEphemeralcontainersList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(34, f, proto.k8s.io.api.core.v1.EphemeralContainer.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeInt64(4, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeInt64(5, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 6));
    if (f != null) {
        writer.writeString(6, f);
    }
    f = message.getNodeselectorMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 8));
    if (f != null) {
        writer.writeString(8, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 9));
    if (f != null) {
        writer.writeString(9, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 21));
    if (f != null) {
        writer.writeBool(21, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 10));
    if (f != null) {
        writer.writeString(10, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
    if (f != null) {
        writer.writeBool(11, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 12));
    if (f != null) {
        writer.writeBool(12, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
    if (f != null) {
        writer.writeBool(13, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 27));
    if (f != null) {
        writer.writeBool(27, f);
    }
    f = message.getSecuritycontext();
    if (f != null) {
        writer.writeMessage(14, f, proto.k8s.io.api.core.v1.PodSecurityContext.serializeBinaryToWriter);
    }
    f = message.getImagepullsecretsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(15, f, proto.k8s.io.api.core.v1.LocalObjectReference.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 16));
    if (f != null) {
        writer.writeString(16, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 17));
    if (f != null) {
        writer.writeString(17, f);
    }
    f = message.getAffinity();
    if (f != null) {
        writer.writeMessage(18, f, proto.k8s.io.api.core.v1.Affinity.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 19));
    if (f != null) {
        writer.writeString(19, f);
    }
    f = message.getTolerationsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(22, f, proto.k8s.io.api.core.v1.Toleration.serializeBinaryToWriter);
    }
    f = message.getHostaliasesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(23, f, proto.k8s.io.api.core.v1.HostAlias.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 24));
    if (f != null) {
        writer.writeString(24, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 25));
    if (f != null) {
        writer.writeInt32(25, f);
    }
    f = message.getDnsconfig();
    if (f != null) {
        writer.writeMessage(26, f, proto.k8s.io.api.core.v1.PodDNSConfig.serializeBinaryToWriter);
    }
    f = message.getReadinessgatesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(28, f, proto.k8s.io.api.core.v1.PodReadinessGate.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 29));
    if (f != null) {
        writer.writeString(29, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 30));
    if (f != null) {
        writer.writeBool(30, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 31));
    if (f != null) {
        writer.writeString(31, f);
    }
    f = message.getOverheadMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(32, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.serializeBinaryToWriter);
    }
    f = message.getTopologyspreadconstraintsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(33, f, proto.k8s.io.api.core.v1.TopologySpreadConstraint.serializeBinaryToWriter);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 35));
    if (f != null) {
        writer.writeBool(35, f);
    }
};
/**
 * repeated Volume volumes = 1;
 * @return {!Array<!proto.k8s.io.api.core.v1.Volume>}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getVolumesList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.Volume>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.Volume, 1));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.Volume>} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
*/
proto.k8s.io.api.core.v1.PodSpec.prototype.setVolumesList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.Volume=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.Volume}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.addVolumes = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.k8s.io.api.core.v1.Volume, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearVolumesList = function () {
    return this.setVolumesList([]);
};
/**
 * repeated Container initContainers = 20;
 * @return {!Array<!proto.k8s.io.api.core.v1.Container>}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getInitcontainersList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.Container>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.Container, 20));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.Container>} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
*/
proto.k8s.io.api.core.v1.PodSpec.prototype.setInitcontainersList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 20, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.Container=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.Container}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.addInitcontainers = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 20, opt_value, proto.k8s.io.api.core.v1.Container, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearInitcontainersList = function () {
    return this.setInitcontainersList([]);
};
/**
 * repeated Container containers = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.Container>}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getContainersList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.Container>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.Container, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.Container>} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
*/
proto.k8s.io.api.core.v1.PodSpec.prototype.setContainersList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.Container=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.Container}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.addContainers = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.Container, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearContainersList = function () {
    return this.setContainersList([]);
};
/**
 * repeated EphemeralContainer ephemeralContainers = 34;
 * @return {!Array<!proto.k8s.io.api.core.v1.EphemeralContainer>}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getEphemeralcontainersList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.EphemeralContainer>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.EphemeralContainer, 34));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.EphemeralContainer>} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
*/
proto.k8s.io.api.core.v1.PodSpec.prototype.setEphemeralcontainersList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 34, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.EphemeralContainer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.EphemeralContainer}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.addEphemeralcontainers = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 34, opt_value, proto.k8s.io.api.core.v1.EphemeralContainer, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearEphemeralcontainersList = function () {
    return this.setEphemeralcontainersList([]);
};
/**
 * optional string restartPolicy = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getRestartpolicy = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.setRestartpolicy = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearRestartpolicy = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.hasRestartpolicy = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional int64 terminationGracePeriodSeconds = 4;
 * @return {number}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getTerminationgraceperiodseconds = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.setTerminationgraceperiodseconds = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearTerminationgraceperiodseconds = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.hasTerminationgraceperiodseconds = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional int64 activeDeadlineSeconds = 5;
 * @return {number}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getActivedeadlineseconds = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.setActivedeadlineseconds = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearActivedeadlineseconds = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.hasActivedeadlineseconds = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional string dnsPolicy = 6;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getDnspolicy = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.setDnspolicy = function (value) {
    return jspb.Message.setField(this, 6, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearDnspolicy = function () {
    return jspb.Message.setField(this, 6, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.hasDnspolicy = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * map<string, string> nodeSelector = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getNodeselectorMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,string>} */ (jspb.Message.getMapField(this, 7, opt_noLazyCreate, null));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearNodeselectorMap = function () {
    this.getNodeselectorMap().clear();
    return this;
};
/**
 * optional string serviceAccountName = 8;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getServiceaccountname = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.setServiceaccountname = function (value) {
    return jspb.Message.setField(this, 8, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearServiceaccountname = function () {
    return jspb.Message.setField(this, 8, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.hasServiceaccountname = function () {
    return jspb.Message.getField(this, 8) != null;
};
/**
 * optional string serviceAccount = 9;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getServiceaccount = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.setServiceaccount = function (value) {
    return jspb.Message.setField(this, 9, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearServiceaccount = function () {
    return jspb.Message.setField(this, 9, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.hasServiceaccount = function () {
    return jspb.Message.getField(this, 9) != null;
};
/**
 * optional bool automountServiceAccountToken = 21;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getAutomountserviceaccounttoken = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.setAutomountserviceaccounttoken = function (value) {
    return jspb.Message.setField(this, 21, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearAutomountserviceaccounttoken = function () {
    return jspb.Message.setField(this, 21, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.hasAutomountserviceaccounttoken = function () {
    return jspb.Message.getField(this, 21) != null;
};
/**
 * optional string nodeName = 10;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getNodename = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.setNodename = function (value) {
    return jspb.Message.setField(this, 10, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearNodename = function () {
    return jspb.Message.setField(this, 10, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.hasNodename = function () {
    return jspb.Message.getField(this, 10) != null;
};
/**
 * optional bool hostNetwork = 11;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getHostnetwork = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.setHostnetwork = function (value) {
    return jspb.Message.setField(this, 11, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearHostnetwork = function () {
    return jspb.Message.setField(this, 11, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.hasHostnetwork = function () {
    return jspb.Message.getField(this, 11) != null;
};
/**
 * optional bool hostPID = 12;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getHostpid = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.setHostpid = function (value) {
    return jspb.Message.setField(this, 12, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearHostpid = function () {
    return jspb.Message.setField(this, 12, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.hasHostpid = function () {
    return jspb.Message.getField(this, 12) != null;
};
/**
 * optional bool hostIPC = 13;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getHostipc = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.setHostipc = function (value) {
    return jspb.Message.setField(this, 13, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearHostipc = function () {
    return jspb.Message.setField(this, 13, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.hasHostipc = function () {
    return jspb.Message.getField(this, 13) != null;
};
/**
 * optional bool shareProcessNamespace = 27;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getShareprocessnamespace = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 27, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.setShareprocessnamespace = function (value) {
    return jspb.Message.setField(this, 27, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearShareprocessnamespace = function () {
    return jspb.Message.setField(this, 27, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.hasShareprocessnamespace = function () {
    return jspb.Message.getField(this, 27) != null;
};
/**
 * optional PodSecurityContext securityContext = 14;
 * @return {?proto.k8s.io.api.core.v1.PodSecurityContext}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getSecuritycontext = function () {
    return /** @type{?proto.k8s.io.api.core.v1.PodSecurityContext} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.PodSecurityContext, 14));
};
/**
 * @param {?proto.k8s.io.api.core.v1.PodSecurityContext|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
*/
proto.k8s.io.api.core.v1.PodSpec.prototype.setSecuritycontext = function (value) {
    return jspb.Message.setWrapperField(this, 14, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearSecuritycontext = function () {
    return this.setSecuritycontext(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.hasSecuritycontext = function () {
    return jspb.Message.getField(this, 14) != null;
};
/**
 * repeated LocalObjectReference imagePullSecrets = 15;
 * @return {!Array<!proto.k8s.io.api.core.v1.LocalObjectReference>}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getImagepullsecretsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.LocalObjectReference>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.LocalObjectReference, 15));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.LocalObjectReference>} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
*/
proto.k8s.io.api.core.v1.PodSpec.prototype.setImagepullsecretsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 15, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.LocalObjectReference=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.LocalObjectReference}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.addImagepullsecrets = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.k8s.io.api.core.v1.LocalObjectReference, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearImagepullsecretsList = function () {
    return this.setImagepullsecretsList([]);
};
/**
 * optional string hostname = 16;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getHostname = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.setHostname = function (value) {
    return jspb.Message.setField(this, 16, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearHostname = function () {
    return jspb.Message.setField(this, 16, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.hasHostname = function () {
    return jspb.Message.getField(this, 16) != null;
};
/**
 * optional string subdomain = 17;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getSubdomain = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.setSubdomain = function (value) {
    return jspb.Message.setField(this, 17, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearSubdomain = function () {
    return jspb.Message.setField(this, 17, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.hasSubdomain = function () {
    return jspb.Message.getField(this, 17) != null;
};
/**
 * optional Affinity affinity = 18;
 * @return {?proto.k8s.io.api.core.v1.Affinity}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getAffinity = function () {
    return /** @type{?proto.k8s.io.api.core.v1.Affinity} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.Affinity, 18));
};
/**
 * @param {?proto.k8s.io.api.core.v1.Affinity|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
*/
proto.k8s.io.api.core.v1.PodSpec.prototype.setAffinity = function (value) {
    return jspb.Message.setWrapperField(this, 18, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearAffinity = function () {
    return this.setAffinity(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.hasAffinity = function () {
    return jspb.Message.getField(this, 18) != null;
};
/**
 * optional string schedulerName = 19;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getSchedulername = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.setSchedulername = function (value) {
    return jspb.Message.setField(this, 19, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearSchedulername = function () {
    return jspb.Message.setField(this, 19, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.hasSchedulername = function () {
    return jspb.Message.getField(this, 19) != null;
};
/**
 * repeated Toleration tolerations = 22;
 * @return {!Array<!proto.k8s.io.api.core.v1.Toleration>}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getTolerationsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.Toleration>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.Toleration, 22));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.Toleration>} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
*/
proto.k8s.io.api.core.v1.PodSpec.prototype.setTolerationsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 22, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.Toleration=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.Toleration}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.addTolerations = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 22, opt_value, proto.k8s.io.api.core.v1.Toleration, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearTolerationsList = function () {
    return this.setTolerationsList([]);
};
/**
 * repeated HostAlias hostAliases = 23;
 * @return {!Array<!proto.k8s.io.api.core.v1.HostAlias>}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getHostaliasesList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.HostAlias>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.HostAlias, 23));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.HostAlias>} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
*/
proto.k8s.io.api.core.v1.PodSpec.prototype.setHostaliasesList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 23, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.HostAlias=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.HostAlias}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.addHostaliases = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 23, opt_value, proto.k8s.io.api.core.v1.HostAlias, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearHostaliasesList = function () {
    return this.setHostaliasesList([]);
};
/**
 * optional string priorityClassName = 24;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getPriorityclassname = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.setPriorityclassname = function (value) {
    return jspb.Message.setField(this, 24, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearPriorityclassname = function () {
    return jspb.Message.setField(this, 24, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.hasPriorityclassname = function () {
    return jspb.Message.getField(this, 24) != null;
};
/**
 * optional int32 priority = 25;
 * @return {number}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getPriority = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.setPriority = function (value) {
    return jspb.Message.setField(this, 25, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearPriority = function () {
    return jspb.Message.setField(this, 25, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.hasPriority = function () {
    return jspb.Message.getField(this, 25) != null;
};
/**
 * optional PodDNSConfig dnsConfig = 26;
 * @return {?proto.k8s.io.api.core.v1.PodDNSConfig}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getDnsconfig = function () {
    return /** @type{?proto.k8s.io.api.core.v1.PodDNSConfig} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.PodDNSConfig, 26));
};
/**
 * @param {?proto.k8s.io.api.core.v1.PodDNSConfig|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
*/
proto.k8s.io.api.core.v1.PodSpec.prototype.setDnsconfig = function (value) {
    return jspb.Message.setWrapperField(this, 26, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearDnsconfig = function () {
    return this.setDnsconfig(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.hasDnsconfig = function () {
    return jspb.Message.getField(this, 26) != null;
};
/**
 * repeated PodReadinessGate readinessGates = 28;
 * @return {!Array<!proto.k8s.io.api.core.v1.PodReadinessGate>}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getReadinessgatesList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.PodReadinessGate>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.PodReadinessGate, 28));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.PodReadinessGate>} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
*/
proto.k8s.io.api.core.v1.PodSpec.prototype.setReadinessgatesList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 28, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.PodReadinessGate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.PodReadinessGate}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.addReadinessgates = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 28, opt_value, proto.k8s.io.api.core.v1.PodReadinessGate, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearReadinessgatesList = function () {
    return this.setReadinessgatesList([]);
};
/**
 * optional string runtimeClassName = 29;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getRuntimeclassname = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.setRuntimeclassname = function (value) {
    return jspb.Message.setField(this, 29, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearRuntimeclassname = function () {
    return jspb.Message.setField(this, 29, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.hasRuntimeclassname = function () {
    return jspb.Message.getField(this, 29) != null;
};
/**
 * optional bool enableServiceLinks = 30;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getEnableservicelinks = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 30, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.setEnableservicelinks = function (value) {
    return jspb.Message.setField(this, 30, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearEnableservicelinks = function () {
    return jspb.Message.setField(this, 30, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.hasEnableservicelinks = function () {
    return jspb.Message.getField(this, 30) != null;
};
/**
 * optional string preemptionPolicy = 31;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getPreemptionpolicy = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.setPreemptionpolicy = function (value) {
    return jspb.Message.setField(this, 31, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearPreemptionpolicy = function () {
    return jspb.Message.setField(this, 31, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.hasPreemptionpolicy = function () {
    return jspb.Message.getField(this, 31) != null;
};
/**
 * map<string, k8s.io.apimachinery.pkg.api.resource.Quantity> overhead = 32;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getOverheadMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>} */ (jspb.Message.getMapField(this, 32, opt_noLazyCreate, proto.k8s.io.apimachinery.pkg.api.resource.Quantity));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearOverheadMap = function () {
    this.getOverheadMap().clear();
    return this;
};
/**
 * repeated TopologySpreadConstraint topologySpreadConstraints = 33;
 * @return {!Array<!proto.k8s.io.api.core.v1.TopologySpreadConstraint>}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getTopologyspreadconstraintsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.TopologySpreadConstraint>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.TopologySpreadConstraint, 33));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.TopologySpreadConstraint>} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
*/
proto.k8s.io.api.core.v1.PodSpec.prototype.setTopologyspreadconstraintsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 33, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.TopologySpreadConstraint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.TopologySpreadConstraint}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.addTopologyspreadconstraints = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 33, opt_value, proto.k8s.io.api.core.v1.TopologySpreadConstraint, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearTopologyspreadconstraintsList = function () {
    return this.setTopologyspreadconstraintsList([]);
};
/**
 * optional bool setHostnameAsFQDN = 35;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.getSethostnameasfqdn = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 35, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.setSethostnameasfqdn = function (value) {
    return jspb.Message.setField(this, 35, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodSpec} returns this
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.clearSethostnameasfqdn = function () {
    return jspb.Message.setField(this, 35, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodSpec.prototype.hasSethostnameasfqdn = function () {
    return jspb.Message.getField(this, 35) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.PodStatus.repeatedFields_ = [2, 12, 10, 8, 13];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PodStatus.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PodStatus.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PodStatus} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PodStatus.toObject = function (includeInstance, msg) {
        var f, obj = {
            phase: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            conditionsList: jspb.Message.toObjectList(msg.getConditionsList(), proto.k8s.io.api.core.v1.PodCondition.toObject, includeInstance),
            message: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            reason: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
            nominatednodename: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
            hostip: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
            podip: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
            podipsList: jspb.Message.toObjectList(msg.getPodipsList(), proto.k8s.io.api.core.v1.PodIP.toObject, includeInstance),
            starttime: (f = msg.getStarttime()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
            initcontainerstatusesList: jspb.Message.toObjectList(msg.getInitcontainerstatusesList(), proto.k8s.io.api.core.v1.ContainerStatus.toObject, includeInstance),
            containerstatusesList: jspb.Message.toObjectList(msg.getContainerstatusesList(), proto.k8s.io.api.core.v1.ContainerStatus.toObject, includeInstance),
            qosclass: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
            ephemeralcontainerstatusesList: jspb.Message.toObjectList(msg.getEphemeralcontainerstatusesList(), proto.k8s.io.api.core.v1.ContainerStatus.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PodStatus}
 */
proto.k8s.io.api.core.v1.PodStatus.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PodStatus;
    return proto.k8s.io.api.core.v1.PodStatus.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PodStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PodStatus}
 */
proto.k8s.io.api.core.v1.PodStatus.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setPhase(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.PodCondition;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PodCondition.deserializeBinaryFromReader);
                msg.addConditions(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setMessage(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setReason(value);
                break;
            case 11:
                var value = /** @type {string} */ (reader.readString());
                msg.setNominatednodename(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setHostip(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.setPodip(value);
                break;
            case 12:
                var value = new proto.k8s.io.api.core.v1.PodIP;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PodIP.deserializeBinaryFromReader);
                msg.addPodips(value);
                break;
            case 7:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
                msg.setStarttime(value);
                break;
            case 10:
                var value = new proto.k8s.io.api.core.v1.ContainerStatus;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ContainerStatus.deserializeBinaryFromReader);
                msg.addInitcontainerstatuses(value);
                break;
            case 8:
                var value = new proto.k8s.io.api.core.v1.ContainerStatus;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ContainerStatus.deserializeBinaryFromReader);
                msg.addContainerstatuses(value);
                break;
            case 9:
                var value = /** @type {string} */ (reader.readString());
                msg.setQosclass(value);
                break;
            case 13:
                var value = new proto.k8s.io.api.core.v1.ContainerStatus;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ContainerStatus.deserializeBinaryFromReader);
                msg.addEphemeralcontainerstatuses(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PodStatus.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PodStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PodStatus.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = message.getConditionsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.PodCondition.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 11));
    if (f != null) {
        writer.writeString(11, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeString(5, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 6));
    if (f != null) {
        writer.writeString(6, f);
    }
    f = message.getPodipsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(12, f, proto.k8s.io.api.core.v1.PodIP.serializeBinaryToWriter);
    }
    f = message.getStarttime();
    if (f != null) {
        writer.writeMessage(7, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter);
    }
    f = message.getInitcontainerstatusesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(10, f, proto.k8s.io.api.core.v1.ContainerStatus.serializeBinaryToWriter);
    }
    f = message.getContainerstatusesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(8, f, proto.k8s.io.api.core.v1.ContainerStatus.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 9));
    if (f != null) {
        writer.writeString(9, f);
    }
    f = message.getEphemeralcontainerstatusesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(13, f, proto.k8s.io.api.core.v1.ContainerStatus.serializeBinaryToWriter);
    }
};
/**
 * optional string phase = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.getPhase = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodStatus} returns this
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.setPhase = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodStatus} returns this
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.clearPhase = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.hasPhase = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated PodCondition conditions = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.PodCondition>}
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.getConditionsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.PodCondition>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.PodCondition, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.PodCondition>} value
 * @return {!proto.k8s.io.api.core.v1.PodStatus} returns this
*/
proto.k8s.io.api.core.v1.PodStatus.prototype.setConditionsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.PodCondition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.PodCondition}
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.addConditions = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.PodCondition, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PodStatus} returns this
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.clearConditionsList = function () {
    return this.setConditionsList([]);
};
/**
 * optional string message = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.getMessage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodStatus} returns this
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.setMessage = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodStatus} returns this
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.clearMessage = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.hasMessage = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string reason = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.getReason = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodStatus} returns this
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.setReason = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodStatus} returns this
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.clearReason = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.hasReason = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional string nominatedNodeName = 11;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.getNominatednodename = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodStatus} returns this
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.setNominatednodename = function (value) {
    return jspb.Message.setField(this, 11, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodStatus} returns this
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.clearNominatednodename = function () {
    return jspb.Message.setField(this, 11, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.hasNominatednodename = function () {
    return jspb.Message.getField(this, 11) != null;
};
/**
 * optional string hostIP = 5;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.getHostip = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodStatus} returns this
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.setHostip = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodStatus} returns this
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.clearHostip = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.hasHostip = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional string podIP = 6;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.getPodip = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodStatus} returns this
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.setPodip = function (value) {
    return jspb.Message.setField(this, 6, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodStatus} returns this
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.clearPodip = function () {
    return jspb.Message.setField(this, 6, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.hasPodip = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * repeated PodIP podIPs = 12;
 * @return {!Array<!proto.k8s.io.api.core.v1.PodIP>}
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.getPodipsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.PodIP>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.PodIP, 12));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.PodIP>} value
 * @return {!proto.k8s.io.api.core.v1.PodStatus} returns this
*/
proto.k8s.io.api.core.v1.PodStatus.prototype.setPodipsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 12, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.PodIP=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.PodIP}
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.addPodips = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.k8s.io.api.core.v1.PodIP, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PodStatus} returns this
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.clearPodipsList = function () {
    return this.setPodipsList([]);
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time startTime = 7;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.getStarttime = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 7));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PodStatus} returns this
*/
proto.k8s.io.api.core.v1.PodStatus.prototype.setStarttime = function (value) {
    return jspb.Message.setWrapperField(this, 7, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodStatus} returns this
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.clearStarttime = function () {
    return this.setStarttime(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.hasStarttime = function () {
    return jspb.Message.getField(this, 7) != null;
};
/**
 * repeated ContainerStatus initContainerStatuses = 10;
 * @return {!Array<!proto.k8s.io.api.core.v1.ContainerStatus>}
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.getInitcontainerstatusesList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.ContainerStatus>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.ContainerStatus, 10));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.ContainerStatus>} value
 * @return {!proto.k8s.io.api.core.v1.PodStatus} returns this
*/
proto.k8s.io.api.core.v1.PodStatus.prototype.setInitcontainerstatusesList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 10, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.ContainerStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ContainerStatus}
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.addInitcontainerstatuses = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.k8s.io.api.core.v1.ContainerStatus, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PodStatus} returns this
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.clearInitcontainerstatusesList = function () {
    return this.setInitcontainerstatusesList([]);
};
/**
 * repeated ContainerStatus containerStatuses = 8;
 * @return {!Array<!proto.k8s.io.api.core.v1.ContainerStatus>}
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.getContainerstatusesList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.ContainerStatus>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.ContainerStatus, 8));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.ContainerStatus>} value
 * @return {!proto.k8s.io.api.core.v1.PodStatus} returns this
*/
proto.k8s.io.api.core.v1.PodStatus.prototype.setContainerstatusesList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 8, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.ContainerStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ContainerStatus}
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.addContainerstatuses = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.k8s.io.api.core.v1.ContainerStatus, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PodStatus} returns this
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.clearContainerstatusesList = function () {
    return this.setContainerstatusesList([]);
};
/**
 * optional string qosClass = 9;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.getQosclass = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PodStatus} returns this
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.setQosclass = function (value) {
    return jspb.Message.setField(this, 9, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodStatus} returns this
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.clearQosclass = function () {
    return jspb.Message.setField(this, 9, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.hasQosclass = function () {
    return jspb.Message.getField(this, 9) != null;
};
/**
 * repeated ContainerStatus ephemeralContainerStatuses = 13;
 * @return {!Array<!proto.k8s.io.api.core.v1.ContainerStatus>}
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.getEphemeralcontainerstatusesList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.ContainerStatus>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.ContainerStatus, 13));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.ContainerStatus>} value
 * @return {!proto.k8s.io.api.core.v1.PodStatus} returns this
*/
proto.k8s.io.api.core.v1.PodStatus.prototype.setEphemeralcontainerstatusesList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 13, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.ContainerStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ContainerStatus}
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.addEphemeralcontainerstatuses = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.k8s.io.api.core.v1.ContainerStatus, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PodStatus} returns this
 */
proto.k8s.io.api.core.v1.PodStatus.prototype.clearEphemeralcontainerstatusesList = function () {
    return this.setEphemeralcontainerstatusesList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PodStatusResult.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PodStatusResult.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PodStatusResult} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PodStatusResult.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
            status: (f = msg.getStatus()) && proto.k8s.io.api.core.v1.PodStatus.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PodStatusResult}
 */
proto.k8s.io.api.core.v1.PodStatusResult.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PodStatusResult;
    return proto.k8s.io.api.core.v1.PodStatusResult.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PodStatusResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PodStatusResult}
 */
proto.k8s.io.api.core.v1.PodStatusResult.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.PodStatus;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PodStatus.deserializeBinaryFromReader);
                msg.setStatus(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PodStatusResult.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PodStatusResult.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PodStatusResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PodStatusResult.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter);
    }
    f = message.getStatus();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.PodStatus.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.k8s.io.api.core.v1.PodStatusResult.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PodStatusResult} returns this
*/
proto.k8s.io.api.core.v1.PodStatusResult.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodStatusResult} returns this
 */
proto.k8s.io.api.core.v1.PodStatusResult.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodStatusResult.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional PodStatus status = 2;
 * @return {?proto.k8s.io.api.core.v1.PodStatus}
 */
proto.k8s.io.api.core.v1.PodStatusResult.prototype.getStatus = function () {
    return /** @type{?proto.k8s.io.api.core.v1.PodStatus} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.PodStatus, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.PodStatus|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PodStatusResult} returns this
*/
proto.k8s.io.api.core.v1.PodStatusResult.prototype.setStatus = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodStatusResult} returns this
 */
proto.k8s.io.api.core.v1.PodStatusResult.prototype.clearStatus = function () {
    return this.setStatus(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodStatusResult.prototype.hasStatus = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PodTemplate.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PodTemplate.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PodTemplate} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PodTemplate.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
            template: (f = msg.getTemplate()) && proto.k8s.io.api.core.v1.PodTemplateSpec.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PodTemplate}
 */
proto.k8s.io.api.core.v1.PodTemplate.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PodTemplate;
    return proto.k8s.io.api.core.v1.PodTemplate.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PodTemplate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PodTemplate}
 */
proto.k8s.io.api.core.v1.PodTemplate.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.PodTemplateSpec;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PodTemplateSpec.deserializeBinaryFromReader);
                msg.setTemplate(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PodTemplate.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PodTemplate.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PodTemplate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PodTemplate.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter);
    }
    f = message.getTemplate();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.PodTemplateSpec.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.k8s.io.api.core.v1.PodTemplate.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PodTemplate} returns this
*/
proto.k8s.io.api.core.v1.PodTemplate.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodTemplate} returns this
 */
proto.k8s.io.api.core.v1.PodTemplate.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodTemplate.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional PodTemplateSpec template = 2;
 * @return {?proto.k8s.io.api.core.v1.PodTemplateSpec}
 */
proto.k8s.io.api.core.v1.PodTemplate.prototype.getTemplate = function () {
    return /** @type{?proto.k8s.io.api.core.v1.PodTemplateSpec} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.PodTemplateSpec, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.PodTemplateSpec|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PodTemplate} returns this
*/
proto.k8s.io.api.core.v1.PodTemplate.prototype.setTemplate = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodTemplate} returns this
 */
proto.k8s.io.api.core.v1.PodTemplate.prototype.clearTemplate = function () {
    return this.setTemplate(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodTemplate.prototype.hasTemplate = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.PodTemplateList.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PodTemplateList.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PodTemplateList.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PodTemplateList} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PodTemplateList.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
            itemsList: jspb.Message.toObjectList(msg.getItemsList(), proto.k8s.io.api.core.v1.PodTemplate.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PodTemplateList}
 */
proto.k8s.io.api.core.v1.PodTemplateList.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PodTemplateList;
    return proto.k8s.io.api.core.v1.PodTemplateList.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PodTemplateList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PodTemplateList}
 */
proto.k8s.io.api.core.v1.PodTemplateList.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.PodTemplate;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PodTemplate.deserializeBinaryFromReader);
                msg.addItems(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PodTemplateList.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PodTemplateList.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PodTemplateList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PodTemplateList.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter);
    }
    f = message.getItemsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.PodTemplate.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.k8s.io.api.core.v1.PodTemplateList.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PodTemplateList} returns this
*/
proto.k8s.io.api.core.v1.PodTemplateList.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodTemplateList} returns this
 */
proto.k8s.io.api.core.v1.PodTemplateList.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodTemplateList.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated PodTemplate items = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.PodTemplate>}
 */
proto.k8s.io.api.core.v1.PodTemplateList.prototype.getItemsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.PodTemplate>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.PodTemplate, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.PodTemplate>} value
 * @return {!proto.k8s.io.api.core.v1.PodTemplateList} returns this
*/
proto.k8s.io.api.core.v1.PodTemplateList.prototype.setItemsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.PodTemplate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.PodTemplate}
 */
proto.k8s.io.api.core.v1.PodTemplateList.prototype.addItems = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.PodTemplate, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.PodTemplateList} returns this
 */
proto.k8s.io.api.core.v1.PodTemplateList.prototype.clearItemsList = function () {
    return this.setItemsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PodTemplateSpec.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PodTemplateSpec.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PodTemplateSpec} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PodTemplateSpec.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
            spec: (f = msg.getSpec()) && proto.k8s.io.api.core.v1.PodSpec.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PodTemplateSpec}
 */
proto.k8s.io.api.core.v1.PodTemplateSpec.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PodTemplateSpec;
    return proto.k8s.io.api.core.v1.PodTemplateSpec.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PodTemplateSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PodTemplateSpec}
 */
proto.k8s.io.api.core.v1.PodTemplateSpec.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.PodSpec;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PodSpec.deserializeBinaryFromReader);
                msg.setSpec(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PodTemplateSpec.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PodTemplateSpec.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PodTemplateSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PodTemplateSpec.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter);
    }
    f = message.getSpec();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.PodSpec.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.k8s.io.api.core.v1.PodTemplateSpec.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PodTemplateSpec} returns this
*/
proto.k8s.io.api.core.v1.PodTemplateSpec.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodTemplateSpec} returns this
 */
proto.k8s.io.api.core.v1.PodTemplateSpec.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodTemplateSpec.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional PodSpec spec = 2;
 * @return {?proto.k8s.io.api.core.v1.PodSpec}
 */
proto.k8s.io.api.core.v1.PodTemplateSpec.prototype.getSpec = function () {
    return /** @type{?proto.k8s.io.api.core.v1.PodSpec} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.PodSpec, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.PodSpec|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PodTemplateSpec} returns this
*/
proto.k8s.io.api.core.v1.PodTemplateSpec.prototype.setSpec = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PodTemplateSpec} returns this
 */
proto.k8s.io.api.core.v1.PodTemplateSpec.prototype.clearSpec = function () {
    return this.setSpec(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PodTemplateSpec.prototype.hasSpec = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PortStatus.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PortStatus.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PortStatus} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PortStatus.toObject = function (includeInstance, msg) {
        var f, obj = {
            port: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            protocol: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            error: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PortStatus}
 */
proto.k8s.io.api.core.v1.PortStatus.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PortStatus;
    return proto.k8s.io.api.core.v1.PortStatus.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PortStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PortStatus}
 */
proto.k8s.io.api.core.v1.PortStatus.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setPort(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setProtocol(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setError(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PortStatus.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PortStatus.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PortStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PortStatus.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {number} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeInt32(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
};
/**
 * optional int32 port = 1;
 * @return {number}
 */
proto.k8s.io.api.core.v1.PortStatus.prototype.getPort = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.PortStatus} returns this
 */
proto.k8s.io.api.core.v1.PortStatus.prototype.setPort = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PortStatus} returns this
 */
proto.k8s.io.api.core.v1.PortStatus.prototype.clearPort = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PortStatus.prototype.hasPort = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string protocol = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PortStatus.prototype.getProtocol = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PortStatus} returns this
 */
proto.k8s.io.api.core.v1.PortStatus.prototype.setProtocol = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PortStatus} returns this
 */
proto.k8s.io.api.core.v1.PortStatus.prototype.clearProtocol = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PortStatus.prototype.hasProtocol = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string error = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PortStatus.prototype.getError = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PortStatus} returns this
 */
proto.k8s.io.api.core.v1.PortStatus.prototype.setError = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PortStatus} returns this
 */
proto.k8s.io.api.core.v1.PortStatus.prototype.clearError = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PortStatus.prototype.hasError = function () {
    return jspb.Message.getField(this, 3) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PortworxVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PortworxVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PortworxVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PortworxVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            volumeid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            fstype: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            readonly: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PortworxVolumeSource}
 */
proto.k8s.io.api.core.v1.PortworxVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PortworxVolumeSource;
    return proto.k8s.io.api.core.v1.PortworxVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PortworxVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PortworxVolumeSource}
 */
proto.k8s.io.api.core.v1.PortworxVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setVolumeid(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setFstype(value);
                break;
            case 3:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PortworxVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PortworxVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PortworxVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PortworxVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeBool(3, f);
    }
};
/**
 * optional string volumeID = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PortworxVolumeSource.prototype.getVolumeid = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PortworxVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PortworxVolumeSource.prototype.setVolumeid = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PortworxVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PortworxVolumeSource.prototype.clearVolumeid = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PortworxVolumeSource.prototype.hasVolumeid = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string fsType = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PortworxVolumeSource.prototype.getFstype = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PortworxVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PortworxVolumeSource.prototype.setFstype = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PortworxVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PortworxVolumeSource.prototype.clearFstype = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PortworxVolumeSource.prototype.hasFstype = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional bool readOnly = 3;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PortworxVolumeSource.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.PortworxVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PortworxVolumeSource.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PortworxVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.PortworxVolumeSource.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PortworxVolumeSource.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 3) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.Preconditions.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.Preconditions.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.Preconditions} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.Preconditions.toObject = function (includeInstance, msg) {
        var f, obj = {
            uid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.Preconditions}
 */
proto.k8s.io.api.core.v1.Preconditions.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.Preconditions;
    return proto.k8s.io.api.core.v1.Preconditions.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.Preconditions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.Preconditions}
 */
proto.k8s.io.api.core.v1.Preconditions.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setUid(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.Preconditions.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.Preconditions.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.Preconditions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.Preconditions.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
};
/**
 * optional string uid = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.Preconditions.prototype.getUid = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.Preconditions} returns this
 */
proto.k8s.io.api.core.v1.Preconditions.prototype.setUid = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Preconditions} returns this
 */
proto.k8s.io.api.core.v1.Preconditions.prototype.clearUid = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Preconditions.prototype.hasUid = function () {
    return jspb.Message.getField(this, 1) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PreferAvoidPodsEntry.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PreferAvoidPodsEntry.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PreferAvoidPodsEntry} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PreferAvoidPodsEntry.toObject = function (includeInstance, msg) {
        var f, obj = {
            podsignature: (f = msg.getPodsignature()) && proto.k8s.io.api.core.v1.PodSignature.toObject(includeInstance, f),
            evictiontime: (f = msg.getEvictiontime()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
            reason: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            message: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PreferAvoidPodsEntry}
 */
proto.k8s.io.api.core.v1.PreferAvoidPodsEntry.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PreferAvoidPodsEntry;
    return proto.k8s.io.api.core.v1.PreferAvoidPodsEntry.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PreferAvoidPodsEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PreferAvoidPodsEntry}
 */
proto.k8s.io.api.core.v1.PreferAvoidPodsEntry.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.PodSignature;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PodSignature.deserializeBinaryFromReader);
                msg.setPodsignature(value);
                break;
            case 2:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
                msg.setEvictiontime(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setReason(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setMessage(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PreferAvoidPodsEntry.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PreferAvoidPodsEntry.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PreferAvoidPodsEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PreferAvoidPodsEntry.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getPodsignature();
    if (f != null) {
        writer.writeMessage(1, f, proto.k8s.io.api.core.v1.PodSignature.serializeBinaryToWriter);
    }
    f = message.getEvictiontime();
    if (f != null) {
        writer.writeMessage(2, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
};
/**
 * optional PodSignature podSignature = 1;
 * @return {?proto.k8s.io.api.core.v1.PodSignature}
 */
proto.k8s.io.api.core.v1.PreferAvoidPodsEntry.prototype.getPodsignature = function () {
    return /** @type{?proto.k8s.io.api.core.v1.PodSignature} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.PodSignature, 1));
};
/**
 * @param {?proto.k8s.io.api.core.v1.PodSignature|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PreferAvoidPodsEntry} returns this
*/
proto.k8s.io.api.core.v1.PreferAvoidPodsEntry.prototype.setPodsignature = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PreferAvoidPodsEntry} returns this
 */
proto.k8s.io.api.core.v1.PreferAvoidPodsEntry.prototype.clearPodsignature = function () {
    return this.setPodsignature(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PreferAvoidPodsEntry.prototype.hasPodsignature = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time evictionTime = 2;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.k8s.io.api.core.v1.PreferAvoidPodsEntry.prototype.getEvictiontime = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 2));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PreferAvoidPodsEntry} returns this
*/
proto.k8s.io.api.core.v1.PreferAvoidPodsEntry.prototype.setEvictiontime = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PreferAvoidPodsEntry} returns this
 */
proto.k8s.io.api.core.v1.PreferAvoidPodsEntry.prototype.clearEvictiontime = function () {
    return this.setEvictiontime(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PreferAvoidPodsEntry.prototype.hasEvictiontime = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string reason = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PreferAvoidPodsEntry.prototype.getReason = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PreferAvoidPodsEntry} returns this
 */
proto.k8s.io.api.core.v1.PreferAvoidPodsEntry.prototype.setReason = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PreferAvoidPodsEntry} returns this
 */
proto.k8s.io.api.core.v1.PreferAvoidPodsEntry.prototype.clearReason = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PreferAvoidPodsEntry.prototype.hasReason = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string message = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.PreferAvoidPodsEntry.prototype.getMessage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.PreferAvoidPodsEntry} returns this
 */
proto.k8s.io.api.core.v1.PreferAvoidPodsEntry.prototype.setMessage = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PreferAvoidPodsEntry} returns this
 */
proto.k8s.io.api.core.v1.PreferAvoidPodsEntry.prototype.clearMessage = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PreferAvoidPodsEntry.prototype.hasMessage = function () {
    return jspb.Message.getField(this, 4) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.PreferredSchedulingTerm.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.PreferredSchedulingTerm.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.PreferredSchedulingTerm} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.PreferredSchedulingTerm.toObject = function (includeInstance, msg) {
        var f, obj = {
            weight: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            preference: (f = msg.getPreference()) && proto.k8s.io.api.core.v1.NodeSelectorTerm.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.PreferredSchedulingTerm}
 */
proto.k8s.io.api.core.v1.PreferredSchedulingTerm.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.PreferredSchedulingTerm;
    return proto.k8s.io.api.core.v1.PreferredSchedulingTerm.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.PreferredSchedulingTerm} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.PreferredSchedulingTerm}
 */
proto.k8s.io.api.core.v1.PreferredSchedulingTerm.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setWeight(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.NodeSelectorTerm;
                reader.readMessage(value, proto.k8s.io.api.core.v1.NodeSelectorTerm.deserializeBinaryFromReader);
                msg.setPreference(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.PreferredSchedulingTerm.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.PreferredSchedulingTerm.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.PreferredSchedulingTerm} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.PreferredSchedulingTerm.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {number} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeInt32(1, f);
    }
    f = message.getPreference();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.NodeSelectorTerm.serializeBinaryToWriter);
    }
};
/**
 * optional int32 weight = 1;
 * @return {number}
 */
proto.k8s.io.api.core.v1.PreferredSchedulingTerm.prototype.getWeight = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.PreferredSchedulingTerm} returns this
 */
proto.k8s.io.api.core.v1.PreferredSchedulingTerm.prototype.setWeight = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PreferredSchedulingTerm} returns this
 */
proto.k8s.io.api.core.v1.PreferredSchedulingTerm.prototype.clearWeight = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PreferredSchedulingTerm.prototype.hasWeight = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional NodeSelectorTerm preference = 2;
 * @return {?proto.k8s.io.api.core.v1.NodeSelectorTerm}
 */
proto.k8s.io.api.core.v1.PreferredSchedulingTerm.prototype.getPreference = function () {
    return /** @type{?proto.k8s.io.api.core.v1.NodeSelectorTerm} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.NodeSelectorTerm, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.NodeSelectorTerm|undefined} value
 * @return {!proto.k8s.io.api.core.v1.PreferredSchedulingTerm} returns this
*/
proto.k8s.io.api.core.v1.PreferredSchedulingTerm.prototype.setPreference = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.PreferredSchedulingTerm} returns this
 */
proto.k8s.io.api.core.v1.PreferredSchedulingTerm.prototype.clearPreference = function () {
    return this.setPreference(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.PreferredSchedulingTerm.prototype.hasPreference = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.Probe.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.Probe.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.Probe} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.Probe.toObject = function (includeInstance, msg) {
        var f, obj = {
            handler: (f = msg.getHandler()) && proto.k8s.io.api.core.v1.Handler.toObject(includeInstance, f),
            initialdelayseconds: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            timeoutseconds: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            periodseconds: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
            successthreshold: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
            failurethreshold: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.Probe}
 */
proto.k8s.io.api.core.v1.Probe.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.Probe;
    return proto.k8s.io.api.core.v1.Probe.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.Probe} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.Probe}
 */
proto.k8s.io.api.core.v1.Probe.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.Handler;
                reader.readMessage(value, proto.k8s.io.api.core.v1.Handler.deserializeBinaryFromReader);
                msg.setHandler(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setInitialdelayseconds(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setTimeoutseconds(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setPeriodseconds(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setSuccessthreshold(value);
                break;
            case 6:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setFailurethreshold(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.Probe.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.Probe.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.Probe} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.Probe.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getHandler();
    if (f != null) {
        writer.writeMessage(1, f, proto.k8s.io.api.core.v1.Handler.serializeBinaryToWriter);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeInt32(2, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeInt32(3, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeInt32(4, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeInt32(5, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 6));
    if (f != null) {
        writer.writeInt32(6, f);
    }
};
/**
 * optional Handler handler = 1;
 * @return {?proto.k8s.io.api.core.v1.Handler}
 */
proto.k8s.io.api.core.v1.Probe.prototype.getHandler = function () {
    return /** @type{?proto.k8s.io.api.core.v1.Handler} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.Handler, 1));
};
/**
 * @param {?proto.k8s.io.api.core.v1.Handler|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Probe} returns this
*/
proto.k8s.io.api.core.v1.Probe.prototype.setHandler = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Probe} returns this
 */
proto.k8s.io.api.core.v1.Probe.prototype.clearHandler = function () {
    return this.setHandler(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Probe.prototype.hasHandler = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional int32 initialDelaySeconds = 2;
 * @return {number}
 */
proto.k8s.io.api.core.v1.Probe.prototype.getInitialdelayseconds = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.Probe} returns this
 */
proto.k8s.io.api.core.v1.Probe.prototype.setInitialdelayseconds = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Probe} returns this
 */
proto.k8s.io.api.core.v1.Probe.prototype.clearInitialdelayseconds = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Probe.prototype.hasInitialdelayseconds = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional int32 timeoutSeconds = 3;
 * @return {number}
 */
proto.k8s.io.api.core.v1.Probe.prototype.getTimeoutseconds = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.Probe} returns this
 */
proto.k8s.io.api.core.v1.Probe.prototype.setTimeoutseconds = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Probe} returns this
 */
proto.k8s.io.api.core.v1.Probe.prototype.clearTimeoutseconds = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Probe.prototype.hasTimeoutseconds = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional int32 periodSeconds = 4;
 * @return {number}
 */
proto.k8s.io.api.core.v1.Probe.prototype.getPeriodseconds = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.Probe} returns this
 */
proto.k8s.io.api.core.v1.Probe.prototype.setPeriodseconds = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Probe} returns this
 */
proto.k8s.io.api.core.v1.Probe.prototype.clearPeriodseconds = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Probe.prototype.hasPeriodseconds = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional int32 successThreshold = 5;
 * @return {number}
 */
proto.k8s.io.api.core.v1.Probe.prototype.getSuccessthreshold = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.Probe} returns this
 */
proto.k8s.io.api.core.v1.Probe.prototype.setSuccessthreshold = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Probe} returns this
 */
proto.k8s.io.api.core.v1.Probe.prototype.clearSuccessthreshold = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Probe.prototype.hasSuccessthreshold = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional int32 failureThreshold = 6;
 * @return {number}
 */
proto.k8s.io.api.core.v1.Probe.prototype.getFailurethreshold = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.Probe} returns this
 */
proto.k8s.io.api.core.v1.Probe.prototype.setFailurethreshold = function (value) {
    return jspb.Message.setField(this, 6, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Probe} returns this
 */
proto.k8s.io.api.core.v1.Probe.prototype.clearFailurethreshold = function () {
    return jspb.Message.setField(this, 6, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Probe.prototype.hasFailurethreshold = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.ProjectedVolumeSource.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ProjectedVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ProjectedVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ProjectedVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ProjectedVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            sourcesList: jspb.Message.toObjectList(msg.getSourcesList(), proto.k8s.io.api.core.v1.VolumeProjection.toObject, includeInstance),
            defaultmode: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ProjectedVolumeSource}
 */
proto.k8s.io.api.core.v1.ProjectedVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ProjectedVolumeSource;
    return proto.k8s.io.api.core.v1.ProjectedVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ProjectedVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ProjectedVolumeSource}
 */
proto.k8s.io.api.core.v1.ProjectedVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.VolumeProjection;
                reader.readMessage(value, proto.k8s.io.api.core.v1.VolumeProjection.deserializeBinaryFromReader);
                msg.addSources(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setDefaultmode(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ProjectedVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ProjectedVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ProjectedVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ProjectedVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getSourcesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, proto.k8s.io.api.core.v1.VolumeProjection.serializeBinaryToWriter);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeInt32(2, f);
    }
};
/**
 * repeated VolumeProjection sources = 1;
 * @return {!Array<!proto.k8s.io.api.core.v1.VolumeProjection>}
 */
proto.k8s.io.api.core.v1.ProjectedVolumeSource.prototype.getSourcesList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.VolumeProjection>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.VolumeProjection, 1));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.VolumeProjection>} value
 * @return {!proto.k8s.io.api.core.v1.ProjectedVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.ProjectedVolumeSource.prototype.setSourcesList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.VolumeProjection=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.VolumeProjection}
 */
proto.k8s.io.api.core.v1.ProjectedVolumeSource.prototype.addSources = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.k8s.io.api.core.v1.VolumeProjection, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.ProjectedVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ProjectedVolumeSource.prototype.clearSourcesList = function () {
    return this.setSourcesList([]);
};
/**
 * optional int32 defaultMode = 2;
 * @return {number}
 */
proto.k8s.io.api.core.v1.ProjectedVolumeSource.prototype.getDefaultmode = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.ProjectedVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ProjectedVolumeSource.prototype.setDefaultmode = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ProjectedVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ProjectedVolumeSource.prototype.clearDefaultmode = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ProjectedVolumeSource.prototype.hasDefaultmode = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.QuobyteVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.QuobyteVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.QuobyteVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.QuobyteVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            registry: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            volume: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            readonly: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
            user: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
            group: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
            tenant: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.QuobyteVolumeSource}
 */
proto.k8s.io.api.core.v1.QuobyteVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.QuobyteVolumeSource;
    return proto.k8s.io.api.core.v1.QuobyteVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.QuobyteVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.QuobyteVolumeSource}
 */
proto.k8s.io.api.core.v1.QuobyteVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setRegistry(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setVolume(value);
                break;
            case 3:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setUser(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setGroup(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.setTenant(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.QuobyteVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.QuobyteVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.QuobyteVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.QuobyteVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeBool(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeString(5, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 6));
    if (f != null) {
        writer.writeString(6, f);
    }
};
/**
 * optional string registry = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.QuobyteVolumeSource.prototype.getRegistry = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.QuobyteVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.QuobyteVolumeSource.prototype.setRegistry = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.QuobyteVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.QuobyteVolumeSource.prototype.clearRegistry = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.QuobyteVolumeSource.prototype.hasRegistry = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string volume = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.QuobyteVolumeSource.prototype.getVolume = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.QuobyteVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.QuobyteVolumeSource.prototype.setVolume = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.QuobyteVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.QuobyteVolumeSource.prototype.clearVolume = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.QuobyteVolumeSource.prototype.hasVolume = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional bool readOnly = 3;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.QuobyteVolumeSource.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.QuobyteVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.QuobyteVolumeSource.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.QuobyteVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.QuobyteVolumeSource.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.QuobyteVolumeSource.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string user = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.QuobyteVolumeSource.prototype.getUser = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.QuobyteVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.QuobyteVolumeSource.prototype.setUser = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.QuobyteVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.QuobyteVolumeSource.prototype.clearUser = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.QuobyteVolumeSource.prototype.hasUser = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional string group = 5;
 * @return {string}
 */
proto.k8s.io.api.core.v1.QuobyteVolumeSource.prototype.getGroup = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.QuobyteVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.QuobyteVolumeSource.prototype.setGroup = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.QuobyteVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.QuobyteVolumeSource.prototype.clearGroup = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.QuobyteVolumeSource.prototype.hasGroup = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional string tenant = 6;
 * @return {string}
 */
proto.k8s.io.api.core.v1.QuobyteVolumeSource.prototype.getTenant = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.QuobyteVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.QuobyteVolumeSource.prototype.setTenant = function (value) {
    return jspb.Message.setField(this, 6, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.QuobyteVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.QuobyteVolumeSource.prototype.clearTenant = function () {
    return jspb.Message.setField(this, 6, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.QuobyteVolumeSource.prototype.hasTenant = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.RBDPersistentVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            monitorsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
            image: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            fstype: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            pool: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
            user: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
            keyring: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
            secretref: (f = msg.getSecretref()) && proto.k8s.io.api.core.v1.SecretReference.toObject(includeInstance, f),
            readonly: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.RBDPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.RBDPersistentVolumeSource;
    return proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.RBDPersistentVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.RBDPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.addMonitors(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setImage(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setFstype(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setPool(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setUser(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.setKeyring(value);
                break;
            case 7:
                var value = new proto.k8s.io.api.core.v1.SecretReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.SecretReference.deserializeBinaryFromReader);
                msg.setSecretref(value);
                break;
            case 8:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.RBDPersistentVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMonitorsList();
    if (f.length > 0) {
        writer.writeRepeatedString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeString(5, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 6));
    if (f != null) {
        writer.writeString(6, f);
    }
    f = message.getSecretref();
    if (f != null) {
        writer.writeMessage(7, f, proto.k8s.io.api.core.v1.SecretReference.serializeBinaryToWriter);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
    if (f != null) {
        writer.writeBool(8, f);
    }
};
/**
 * repeated string monitors = 1;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.getMonitorsList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.RBDPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.setMonitorsList = function (value) {
    return jspb.Message.setField(this, 1, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.RBDPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.addMonitors = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.RBDPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.clearMonitorsList = function () {
    return this.setMonitorsList([]);
};
/**
 * optional string image = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.getImage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.RBDPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.setImage = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.RBDPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.clearImage = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.hasImage = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string fsType = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.getFstype = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.RBDPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.setFstype = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.RBDPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.clearFstype = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.hasFstype = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string pool = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.getPool = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.RBDPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.setPool = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.RBDPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.clearPool = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.hasPool = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional string user = 5;
 * @return {string}
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.getUser = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.RBDPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.setUser = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.RBDPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.clearUser = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.hasUser = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional string keyring = 6;
 * @return {string}
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.getKeyring = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.RBDPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.setKeyring = function (value) {
    return jspb.Message.setField(this, 6, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.RBDPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.clearKeyring = function () {
    return jspb.Message.setField(this, 6, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.hasKeyring = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * optional SecretReference secretRef = 7;
 * @return {?proto.k8s.io.api.core.v1.SecretReference}
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.getSecretref = function () {
    return /** @type{?proto.k8s.io.api.core.v1.SecretReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.SecretReference, 7));
};
/**
 * @param {?proto.k8s.io.api.core.v1.SecretReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.RBDPersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.setSecretref = function (value) {
    return jspb.Message.setWrapperField(this, 7, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.RBDPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.clearSecretref = function () {
    return this.setSecretref(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.hasSecretref = function () {
    return jspb.Message.getField(this, 7) != null;
};
/**
 * optional bool readOnly = 8;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.RBDPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 8, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.RBDPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 8, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.RBDPersistentVolumeSource.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 8) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.RBDVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.RBDVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.RBDVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            monitorsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
            image: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            fstype: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            pool: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
            user: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
            keyring: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
            secretref: (f = msg.getSecretref()) && proto.k8s.io.api.core.v1.LocalObjectReference.toObject(includeInstance, f),
            readonly: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.RBDVolumeSource}
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.RBDVolumeSource;
    return proto.k8s.io.api.core.v1.RBDVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.RBDVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.RBDVolumeSource}
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.addMonitors(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setImage(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setFstype(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setPool(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setUser(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.setKeyring(value);
                break;
            case 7:
                var value = new proto.k8s.io.api.core.v1.LocalObjectReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.LocalObjectReference.deserializeBinaryFromReader);
                msg.setSecretref(value);
                break;
            case 8:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.RBDVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.RBDVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMonitorsList();
    if (f.length > 0) {
        writer.writeRepeatedString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeString(5, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 6));
    if (f != null) {
        writer.writeString(6, f);
    }
    f = message.getSecretref();
    if (f != null) {
        writer.writeMessage(7, f, proto.k8s.io.api.core.v1.LocalObjectReference.serializeBinaryToWriter);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
    if (f != null) {
        writer.writeBool(8, f);
    }
};
/**
 * repeated string monitors = 1;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.getMonitorsList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.RBDVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.setMonitorsList = function (value) {
    return jspb.Message.setField(this, 1, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.RBDVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.addMonitors = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.RBDVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.clearMonitorsList = function () {
    return this.setMonitorsList([]);
};
/**
 * optional string image = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.getImage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.RBDVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.setImage = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.RBDVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.clearImage = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.hasImage = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string fsType = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.getFstype = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.RBDVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.setFstype = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.RBDVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.clearFstype = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.hasFstype = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string pool = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.getPool = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.RBDVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.setPool = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.RBDVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.clearPool = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.hasPool = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional string user = 5;
 * @return {string}
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.getUser = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.RBDVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.setUser = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.RBDVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.clearUser = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.hasUser = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional string keyring = 6;
 * @return {string}
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.getKeyring = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.RBDVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.setKeyring = function (value) {
    return jspb.Message.setField(this, 6, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.RBDVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.clearKeyring = function () {
    return jspb.Message.setField(this, 6, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.hasKeyring = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * optional LocalObjectReference secretRef = 7;
 * @return {?proto.k8s.io.api.core.v1.LocalObjectReference}
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.getSecretref = function () {
    return /** @type{?proto.k8s.io.api.core.v1.LocalObjectReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.LocalObjectReference, 7));
};
/**
 * @param {?proto.k8s.io.api.core.v1.LocalObjectReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.RBDVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.setSecretref = function (value) {
    return jspb.Message.setWrapperField(this, 7, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.RBDVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.clearSecretref = function () {
    return this.setSecretref(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.hasSecretref = function () {
    return jspb.Message.getField(this, 7) != null;
};
/**
 * optional bool readOnly = 8;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.RBDVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 8, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.RBDVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 8, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.RBDVolumeSource.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 8) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.RangeAllocation.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.RangeAllocation.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.RangeAllocation} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.RangeAllocation.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
            range: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            data: msg.getData_asB64()
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.RangeAllocation}
 */
proto.k8s.io.api.core.v1.RangeAllocation.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.RangeAllocation;
    return proto.k8s.io.api.core.v1.RangeAllocation.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.RangeAllocation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.RangeAllocation}
 */
proto.k8s.io.api.core.v1.RangeAllocation.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setRange(value);
                break;
            case 3:
                var value = /** @type {!Uint8Array} */ (reader.readBytes());
                msg.setData(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.RangeAllocation.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.RangeAllocation.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.RangeAllocation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.RangeAllocation.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeBytes(3, f);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.k8s.io.api.core.v1.RangeAllocation.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.RangeAllocation} returns this
*/
proto.k8s.io.api.core.v1.RangeAllocation.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.RangeAllocation} returns this
 */
proto.k8s.io.api.core.v1.RangeAllocation.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.RangeAllocation.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string range = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.RangeAllocation.prototype.getRange = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.RangeAllocation} returns this
 */
proto.k8s.io.api.core.v1.RangeAllocation.prototype.setRange = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.RangeAllocation} returns this
 */
proto.k8s.io.api.core.v1.RangeAllocation.prototype.clearRange = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.RangeAllocation.prototype.hasRange = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional bytes data = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.RangeAllocation.prototype.getData = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * optional bytes data = 3;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.k8s.io.api.core.v1.RangeAllocation.prototype.getData_asB64 = function () {
    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getData()));
};
/**
 * optional bytes data = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.RangeAllocation.prototype.getData_asU8 = function () {
    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getData()));
};
/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.k8s.io.api.core.v1.RangeAllocation} returns this
 */
proto.k8s.io.api.core.v1.RangeAllocation.prototype.setData = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.RangeAllocation} returns this
 */
proto.k8s.io.api.core.v1.RangeAllocation.prototype.clearData = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.RangeAllocation.prototype.hasData = function () {
    return jspb.Message.getField(this, 3) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ReplicationController.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ReplicationController.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ReplicationController} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ReplicationController.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
            spec: (f = msg.getSpec()) && proto.k8s.io.api.core.v1.ReplicationControllerSpec.toObject(includeInstance, f),
            status: (f = msg.getStatus()) && proto.k8s.io.api.core.v1.ReplicationControllerStatus.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ReplicationController}
 */
proto.k8s.io.api.core.v1.ReplicationController.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ReplicationController;
    return proto.k8s.io.api.core.v1.ReplicationController.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ReplicationController} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ReplicationController}
 */
proto.k8s.io.api.core.v1.ReplicationController.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.ReplicationControllerSpec;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ReplicationControllerSpec.deserializeBinaryFromReader);
                msg.setSpec(value);
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.ReplicationControllerStatus;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ReplicationControllerStatus.deserializeBinaryFromReader);
                msg.setStatus(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ReplicationController.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ReplicationController.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ReplicationController} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ReplicationController.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter);
    }
    f = message.getSpec();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.ReplicationControllerSpec.serializeBinaryToWriter);
    }
    f = message.getStatus();
    if (f != null) {
        writer.writeMessage(3, f, proto.k8s.io.api.core.v1.ReplicationControllerStatus.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.k8s.io.api.core.v1.ReplicationController.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ReplicationController} returns this
*/
proto.k8s.io.api.core.v1.ReplicationController.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ReplicationController} returns this
 */
proto.k8s.io.api.core.v1.ReplicationController.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ReplicationController.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional ReplicationControllerSpec spec = 2;
 * @return {?proto.k8s.io.api.core.v1.ReplicationControllerSpec}
 */
proto.k8s.io.api.core.v1.ReplicationController.prototype.getSpec = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ReplicationControllerSpec} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ReplicationControllerSpec, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ReplicationControllerSpec|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ReplicationController} returns this
*/
proto.k8s.io.api.core.v1.ReplicationController.prototype.setSpec = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ReplicationController} returns this
 */
proto.k8s.io.api.core.v1.ReplicationController.prototype.clearSpec = function () {
    return this.setSpec(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ReplicationController.prototype.hasSpec = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional ReplicationControllerStatus status = 3;
 * @return {?proto.k8s.io.api.core.v1.ReplicationControllerStatus}
 */
proto.k8s.io.api.core.v1.ReplicationController.prototype.getStatus = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ReplicationControllerStatus} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ReplicationControllerStatus, 3));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ReplicationControllerStatus|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ReplicationController} returns this
*/
proto.k8s.io.api.core.v1.ReplicationController.prototype.setStatus = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ReplicationController} returns this
 */
proto.k8s.io.api.core.v1.ReplicationController.prototype.clearStatus = function () {
    return this.setStatus(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ReplicationController.prototype.hasStatus = function () {
    return jspb.Message.getField(this, 3) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ReplicationControllerCondition.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ReplicationControllerCondition.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ReplicationControllerCondition} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ReplicationControllerCondition.toObject = function (includeInstance, msg) {
        var f, obj = {
            type: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            status: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            lasttransitiontime: (f = msg.getLasttransitiontime()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
            reason: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
            message: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerCondition}
 */
proto.k8s.io.api.core.v1.ReplicationControllerCondition.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ReplicationControllerCondition;
    return proto.k8s.io.api.core.v1.ReplicationControllerCondition.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ReplicationControllerCondition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerCondition}
 */
proto.k8s.io.api.core.v1.ReplicationControllerCondition.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setType(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setStatus(value);
                break;
            case 3:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
                msg.setLasttransitiontime(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setReason(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setMessage(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ReplicationControllerCondition.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ReplicationControllerCondition.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ReplicationControllerCondition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ReplicationControllerCondition.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = message.getLasttransitiontime();
    if (f != null) {
        writer.writeMessage(3, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeString(5, f);
    }
};
/**
 * optional string type = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ReplicationControllerCondition.prototype.getType = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerCondition} returns this
 */
proto.k8s.io.api.core.v1.ReplicationControllerCondition.prototype.setType = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerCondition} returns this
 */
proto.k8s.io.api.core.v1.ReplicationControllerCondition.prototype.clearType = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ReplicationControllerCondition.prototype.hasType = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string status = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ReplicationControllerCondition.prototype.getStatus = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerCondition} returns this
 */
proto.k8s.io.api.core.v1.ReplicationControllerCondition.prototype.setStatus = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerCondition} returns this
 */
proto.k8s.io.api.core.v1.ReplicationControllerCondition.prototype.clearStatus = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ReplicationControllerCondition.prototype.hasStatus = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.k8s.io.api.core.v1.ReplicationControllerCondition.prototype.getLasttransitiontime = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 3));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerCondition} returns this
*/
proto.k8s.io.api.core.v1.ReplicationControllerCondition.prototype.setLasttransitiontime = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerCondition} returns this
 */
proto.k8s.io.api.core.v1.ReplicationControllerCondition.prototype.clearLasttransitiontime = function () {
    return this.setLasttransitiontime(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ReplicationControllerCondition.prototype.hasLasttransitiontime = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string reason = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ReplicationControllerCondition.prototype.getReason = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerCondition} returns this
 */
proto.k8s.io.api.core.v1.ReplicationControllerCondition.prototype.setReason = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerCondition} returns this
 */
proto.k8s.io.api.core.v1.ReplicationControllerCondition.prototype.clearReason = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ReplicationControllerCondition.prototype.hasReason = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional string message = 5;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ReplicationControllerCondition.prototype.getMessage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerCondition} returns this
 */
proto.k8s.io.api.core.v1.ReplicationControllerCondition.prototype.setMessage = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerCondition} returns this
 */
proto.k8s.io.api.core.v1.ReplicationControllerCondition.prototype.clearMessage = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ReplicationControllerCondition.prototype.hasMessage = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.ReplicationControllerList.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ReplicationControllerList.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ReplicationControllerList.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ReplicationControllerList} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ReplicationControllerList.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
            itemsList: jspb.Message.toObjectList(msg.getItemsList(), proto.k8s.io.api.core.v1.ReplicationController.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerList}
 */
proto.k8s.io.api.core.v1.ReplicationControllerList.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ReplicationControllerList;
    return proto.k8s.io.api.core.v1.ReplicationControllerList.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ReplicationControllerList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerList}
 */
proto.k8s.io.api.core.v1.ReplicationControllerList.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.ReplicationController;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ReplicationController.deserializeBinaryFromReader);
                msg.addItems(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ReplicationControllerList.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ReplicationControllerList.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ReplicationControllerList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ReplicationControllerList.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter);
    }
    f = message.getItemsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.ReplicationController.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.k8s.io.api.core.v1.ReplicationControllerList.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerList} returns this
*/
proto.k8s.io.api.core.v1.ReplicationControllerList.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerList} returns this
 */
proto.k8s.io.api.core.v1.ReplicationControllerList.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ReplicationControllerList.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated ReplicationController items = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.ReplicationController>}
 */
proto.k8s.io.api.core.v1.ReplicationControllerList.prototype.getItemsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.ReplicationController>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.ReplicationController, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.ReplicationController>} value
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerList} returns this
*/
proto.k8s.io.api.core.v1.ReplicationControllerList.prototype.setItemsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.ReplicationController=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ReplicationController}
 */
proto.k8s.io.api.core.v1.ReplicationControllerList.prototype.addItems = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.ReplicationController, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerList} returns this
 */
proto.k8s.io.api.core.v1.ReplicationControllerList.prototype.clearItemsList = function () {
    return this.setItemsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ReplicationControllerSpec.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ReplicationControllerSpec.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ReplicationControllerSpec} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ReplicationControllerSpec.toObject = function (includeInstance, msg) {
        var f, obj = {
            replicas: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            minreadyseconds: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
            selectorMap: (f = msg.getSelectorMap()) ? f.toObject(includeInstance, undefined) : [],
            template: (f = msg.getTemplate()) && proto.k8s.io.api.core.v1.PodTemplateSpec.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerSpec}
 */
proto.k8s.io.api.core.v1.ReplicationControllerSpec.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ReplicationControllerSpec;
    return proto.k8s.io.api.core.v1.ReplicationControllerSpec.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ReplicationControllerSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerSpec}
 */
proto.k8s.io.api.core.v1.ReplicationControllerSpec.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setReplicas(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setMinreadyseconds(value);
                break;
            case 2:
                var value = msg.getSelectorMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
                });
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.PodTemplateSpec;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PodTemplateSpec.deserializeBinaryFromReader);
                msg.setTemplate(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ReplicationControllerSpec.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ReplicationControllerSpec.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ReplicationControllerSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ReplicationControllerSpec.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {number} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeInt32(1, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeInt32(4, f);
    }
    f = message.getSelectorMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
    }
    f = message.getTemplate();
    if (f != null) {
        writer.writeMessage(3, f, proto.k8s.io.api.core.v1.PodTemplateSpec.serializeBinaryToWriter);
    }
};
/**
 * optional int32 replicas = 1;
 * @return {number}
 */
proto.k8s.io.api.core.v1.ReplicationControllerSpec.prototype.getReplicas = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerSpec} returns this
 */
proto.k8s.io.api.core.v1.ReplicationControllerSpec.prototype.setReplicas = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerSpec} returns this
 */
proto.k8s.io.api.core.v1.ReplicationControllerSpec.prototype.clearReplicas = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ReplicationControllerSpec.prototype.hasReplicas = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional int32 minReadySeconds = 4;
 * @return {number}
 */
proto.k8s.io.api.core.v1.ReplicationControllerSpec.prototype.getMinreadyseconds = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerSpec} returns this
 */
proto.k8s.io.api.core.v1.ReplicationControllerSpec.prototype.setMinreadyseconds = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerSpec} returns this
 */
proto.k8s.io.api.core.v1.ReplicationControllerSpec.prototype.clearMinreadyseconds = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ReplicationControllerSpec.prototype.hasMinreadyseconds = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * map<string, string> selector = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.k8s.io.api.core.v1.ReplicationControllerSpec.prototype.getSelectorMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,string>} */ (jspb.Message.getMapField(this, 2, opt_noLazyCreate, null));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerSpec} returns this
 */
proto.k8s.io.api.core.v1.ReplicationControllerSpec.prototype.clearSelectorMap = function () {
    this.getSelectorMap().clear();
    return this;
};
/**
 * optional PodTemplateSpec template = 3;
 * @return {?proto.k8s.io.api.core.v1.PodTemplateSpec}
 */
proto.k8s.io.api.core.v1.ReplicationControllerSpec.prototype.getTemplate = function () {
    return /** @type{?proto.k8s.io.api.core.v1.PodTemplateSpec} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.PodTemplateSpec, 3));
};
/**
 * @param {?proto.k8s.io.api.core.v1.PodTemplateSpec|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerSpec} returns this
*/
proto.k8s.io.api.core.v1.ReplicationControllerSpec.prototype.setTemplate = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerSpec} returns this
 */
proto.k8s.io.api.core.v1.ReplicationControllerSpec.prototype.clearTemplate = function () {
    return this.setTemplate(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ReplicationControllerSpec.prototype.hasTemplate = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.ReplicationControllerStatus.repeatedFields_ = [6];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ReplicationControllerStatus.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ReplicationControllerStatus.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ReplicationControllerStatus} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ReplicationControllerStatus.toObject = function (includeInstance, msg) {
        var f, obj = {
            replicas: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            fullylabeledreplicas: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            readyreplicas: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
            availablereplicas: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
            observedgeneration: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            conditionsList: jspb.Message.toObjectList(msg.getConditionsList(), proto.k8s.io.api.core.v1.ReplicationControllerCondition.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerStatus}
 */
proto.k8s.io.api.core.v1.ReplicationControllerStatus.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ReplicationControllerStatus;
    return proto.k8s.io.api.core.v1.ReplicationControllerStatus.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ReplicationControllerStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerStatus}
 */
proto.k8s.io.api.core.v1.ReplicationControllerStatus.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setReplicas(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setFullylabeledreplicas(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setReadyreplicas(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setAvailablereplicas(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setObservedgeneration(value);
                break;
            case 6:
                var value = new proto.k8s.io.api.core.v1.ReplicationControllerCondition;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ReplicationControllerCondition.deserializeBinaryFromReader);
                msg.addConditions(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ReplicationControllerStatus.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ReplicationControllerStatus.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ReplicationControllerStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ReplicationControllerStatus.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {number} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeInt32(1, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeInt32(2, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeInt32(4, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeInt32(5, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeInt64(3, f);
    }
    f = message.getConditionsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(6, f, proto.k8s.io.api.core.v1.ReplicationControllerCondition.serializeBinaryToWriter);
    }
};
/**
 * optional int32 replicas = 1;
 * @return {number}
 */
proto.k8s.io.api.core.v1.ReplicationControllerStatus.prototype.getReplicas = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerStatus} returns this
 */
proto.k8s.io.api.core.v1.ReplicationControllerStatus.prototype.setReplicas = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerStatus} returns this
 */
proto.k8s.io.api.core.v1.ReplicationControllerStatus.prototype.clearReplicas = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ReplicationControllerStatus.prototype.hasReplicas = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional int32 fullyLabeledReplicas = 2;
 * @return {number}
 */
proto.k8s.io.api.core.v1.ReplicationControllerStatus.prototype.getFullylabeledreplicas = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerStatus} returns this
 */
proto.k8s.io.api.core.v1.ReplicationControllerStatus.prototype.setFullylabeledreplicas = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerStatus} returns this
 */
proto.k8s.io.api.core.v1.ReplicationControllerStatus.prototype.clearFullylabeledreplicas = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ReplicationControllerStatus.prototype.hasFullylabeledreplicas = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional int32 readyReplicas = 4;
 * @return {number}
 */
proto.k8s.io.api.core.v1.ReplicationControllerStatus.prototype.getReadyreplicas = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerStatus} returns this
 */
proto.k8s.io.api.core.v1.ReplicationControllerStatus.prototype.setReadyreplicas = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerStatus} returns this
 */
proto.k8s.io.api.core.v1.ReplicationControllerStatus.prototype.clearReadyreplicas = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ReplicationControllerStatus.prototype.hasReadyreplicas = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional int32 availableReplicas = 5;
 * @return {number}
 */
proto.k8s.io.api.core.v1.ReplicationControllerStatus.prototype.getAvailablereplicas = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerStatus} returns this
 */
proto.k8s.io.api.core.v1.ReplicationControllerStatus.prototype.setAvailablereplicas = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerStatus} returns this
 */
proto.k8s.io.api.core.v1.ReplicationControllerStatus.prototype.clearAvailablereplicas = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ReplicationControllerStatus.prototype.hasAvailablereplicas = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional int64 observedGeneration = 3;
 * @return {number}
 */
proto.k8s.io.api.core.v1.ReplicationControllerStatus.prototype.getObservedgeneration = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerStatus} returns this
 */
proto.k8s.io.api.core.v1.ReplicationControllerStatus.prototype.setObservedgeneration = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerStatus} returns this
 */
proto.k8s.io.api.core.v1.ReplicationControllerStatus.prototype.clearObservedgeneration = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ReplicationControllerStatus.prototype.hasObservedgeneration = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * repeated ReplicationControllerCondition conditions = 6;
 * @return {!Array<!proto.k8s.io.api.core.v1.ReplicationControllerCondition>}
 */
proto.k8s.io.api.core.v1.ReplicationControllerStatus.prototype.getConditionsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.ReplicationControllerCondition>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.ReplicationControllerCondition, 6));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.ReplicationControllerCondition>} value
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerStatus} returns this
*/
proto.k8s.io.api.core.v1.ReplicationControllerStatus.prototype.setConditionsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 6, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.ReplicationControllerCondition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerCondition}
 */
proto.k8s.io.api.core.v1.ReplicationControllerStatus.prototype.addConditions = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.k8s.io.api.core.v1.ReplicationControllerCondition, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.ReplicationControllerStatus} returns this
 */
proto.k8s.io.api.core.v1.ReplicationControllerStatus.prototype.clearConditionsList = function () {
    return this.setConditionsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ResourceFieldSelector.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ResourceFieldSelector.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ResourceFieldSelector} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ResourceFieldSelector.toObject = function (includeInstance, msg) {
        var f, obj = {
            containername: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            resource: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            divisor: (f = msg.getDivisor()) && k8s_io_apimachinery_pkg_api_resource_generated_pb.Quantity.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ResourceFieldSelector}
 */
proto.k8s.io.api.core.v1.ResourceFieldSelector.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ResourceFieldSelector;
    return proto.k8s.io.api.core.v1.ResourceFieldSelector.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ResourceFieldSelector} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ResourceFieldSelector}
 */
proto.k8s.io.api.core.v1.ResourceFieldSelector.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setContainername(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setResource(value);
                break;
            case 3:
                var value = new k8s_io_apimachinery_pkg_api_resource_generated_pb.Quantity;
                reader.readMessage(value, k8s_io_apimachinery_pkg_api_resource_generated_pb.Quantity.deserializeBinaryFromReader);
                msg.setDivisor(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ResourceFieldSelector.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ResourceFieldSelector.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ResourceFieldSelector} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ResourceFieldSelector.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = message.getDivisor();
    if (f != null) {
        writer.writeMessage(3, f, k8s_io_apimachinery_pkg_api_resource_generated_pb.Quantity.serializeBinaryToWriter);
    }
};
/**
 * optional string containerName = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ResourceFieldSelector.prototype.getContainername = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ResourceFieldSelector} returns this
 */
proto.k8s.io.api.core.v1.ResourceFieldSelector.prototype.setContainername = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ResourceFieldSelector} returns this
 */
proto.k8s.io.api.core.v1.ResourceFieldSelector.prototype.clearContainername = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ResourceFieldSelector.prototype.hasContainername = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string resource = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ResourceFieldSelector.prototype.getResource = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ResourceFieldSelector} returns this
 */
proto.k8s.io.api.core.v1.ResourceFieldSelector.prototype.setResource = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ResourceFieldSelector} returns this
 */
proto.k8s.io.api.core.v1.ResourceFieldSelector.prototype.clearResource = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ResourceFieldSelector.prototype.hasResource = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional k8s.io.apimachinery.pkg.api.resource.Quantity divisor = 3;
 * @return {?proto.k8s.io.apimachinery.pkg.api.resource.Quantity}
 */
proto.k8s.io.api.core.v1.ResourceFieldSelector.prototype.getDivisor = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.api.resource.Quantity} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_api_resource_generated_pb.Quantity, 3));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.api.resource.Quantity|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ResourceFieldSelector} returns this
*/
proto.k8s.io.api.core.v1.ResourceFieldSelector.prototype.setDivisor = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ResourceFieldSelector} returns this
 */
proto.k8s.io.api.core.v1.ResourceFieldSelector.prototype.clearDivisor = function () {
    return this.setDivisor(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ResourceFieldSelector.prototype.hasDivisor = function () {
    return jspb.Message.getField(this, 3) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ResourceQuota.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ResourceQuota.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ResourceQuota} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ResourceQuota.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
            spec: (f = msg.getSpec()) && proto.k8s.io.api.core.v1.ResourceQuotaSpec.toObject(includeInstance, f),
            status: (f = msg.getStatus()) && proto.k8s.io.api.core.v1.ResourceQuotaStatus.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ResourceQuota}
 */
proto.k8s.io.api.core.v1.ResourceQuota.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ResourceQuota;
    return proto.k8s.io.api.core.v1.ResourceQuota.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ResourceQuota} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ResourceQuota}
 */
proto.k8s.io.api.core.v1.ResourceQuota.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.ResourceQuotaSpec;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ResourceQuotaSpec.deserializeBinaryFromReader);
                msg.setSpec(value);
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.ResourceQuotaStatus;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ResourceQuotaStatus.deserializeBinaryFromReader);
                msg.setStatus(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ResourceQuota.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ResourceQuota.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ResourceQuota} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ResourceQuota.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter);
    }
    f = message.getSpec();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.ResourceQuotaSpec.serializeBinaryToWriter);
    }
    f = message.getStatus();
    if (f != null) {
        writer.writeMessage(3, f, proto.k8s.io.api.core.v1.ResourceQuotaStatus.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.k8s.io.api.core.v1.ResourceQuota.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ResourceQuota} returns this
*/
proto.k8s.io.api.core.v1.ResourceQuota.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ResourceQuota} returns this
 */
proto.k8s.io.api.core.v1.ResourceQuota.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ResourceQuota.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional ResourceQuotaSpec spec = 2;
 * @return {?proto.k8s.io.api.core.v1.ResourceQuotaSpec}
 */
proto.k8s.io.api.core.v1.ResourceQuota.prototype.getSpec = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ResourceQuotaSpec} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ResourceQuotaSpec, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ResourceQuotaSpec|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ResourceQuota} returns this
*/
proto.k8s.io.api.core.v1.ResourceQuota.prototype.setSpec = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ResourceQuota} returns this
 */
proto.k8s.io.api.core.v1.ResourceQuota.prototype.clearSpec = function () {
    return this.setSpec(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ResourceQuota.prototype.hasSpec = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional ResourceQuotaStatus status = 3;
 * @return {?proto.k8s.io.api.core.v1.ResourceQuotaStatus}
 */
proto.k8s.io.api.core.v1.ResourceQuota.prototype.getStatus = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ResourceQuotaStatus} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ResourceQuotaStatus, 3));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ResourceQuotaStatus|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ResourceQuota} returns this
*/
proto.k8s.io.api.core.v1.ResourceQuota.prototype.setStatus = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ResourceQuota} returns this
 */
proto.k8s.io.api.core.v1.ResourceQuota.prototype.clearStatus = function () {
    return this.setStatus(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ResourceQuota.prototype.hasStatus = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.ResourceQuotaList.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ResourceQuotaList.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ResourceQuotaList.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ResourceQuotaList} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ResourceQuotaList.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
            itemsList: jspb.Message.toObjectList(msg.getItemsList(), proto.k8s.io.api.core.v1.ResourceQuota.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ResourceQuotaList}
 */
proto.k8s.io.api.core.v1.ResourceQuotaList.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ResourceQuotaList;
    return proto.k8s.io.api.core.v1.ResourceQuotaList.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ResourceQuotaList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ResourceQuotaList}
 */
proto.k8s.io.api.core.v1.ResourceQuotaList.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.ResourceQuota;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ResourceQuota.deserializeBinaryFromReader);
                msg.addItems(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ResourceQuotaList.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ResourceQuotaList.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ResourceQuotaList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ResourceQuotaList.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter);
    }
    f = message.getItemsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.ResourceQuota.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.k8s.io.api.core.v1.ResourceQuotaList.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ResourceQuotaList} returns this
*/
proto.k8s.io.api.core.v1.ResourceQuotaList.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ResourceQuotaList} returns this
 */
proto.k8s.io.api.core.v1.ResourceQuotaList.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ResourceQuotaList.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated ResourceQuota items = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.ResourceQuota>}
 */
proto.k8s.io.api.core.v1.ResourceQuotaList.prototype.getItemsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.ResourceQuota>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.ResourceQuota, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.ResourceQuota>} value
 * @return {!proto.k8s.io.api.core.v1.ResourceQuotaList} returns this
*/
proto.k8s.io.api.core.v1.ResourceQuotaList.prototype.setItemsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.ResourceQuota=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ResourceQuota}
 */
proto.k8s.io.api.core.v1.ResourceQuotaList.prototype.addItems = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.ResourceQuota, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.ResourceQuotaList} returns this
 */
proto.k8s.io.api.core.v1.ResourceQuotaList.prototype.clearItemsList = function () {
    return this.setItemsList([]);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.ResourceQuotaSpec.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ResourceQuotaSpec.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ResourceQuotaSpec.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ResourceQuotaSpec} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ResourceQuotaSpec.toObject = function (includeInstance, msg) {
        var f, obj = {
            hardMap: (f = msg.getHardMap()) ? f.toObject(includeInstance, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.toObject) : [],
            scopesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
            scopeselector: (f = msg.getScopeselector()) && proto.k8s.io.api.core.v1.ScopeSelector.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ResourceQuotaSpec}
 */
proto.k8s.io.api.core.v1.ResourceQuotaSpec.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ResourceQuotaSpec;
    return proto.k8s.io.api.core.v1.ResourceQuotaSpec.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ResourceQuotaSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ResourceQuotaSpec}
 */
proto.k8s.io.api.core.v1.ResourceQuotaSpec.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = msg.getHardMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.deserializeBinaryFromReader, "", new proto.k8s.io.apimachinery.pkg.api.resource.Quantity());
                });
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.addScopes(value);
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.ScopeSelector;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ScopeSelector.deserializeBinaryFromReader);
                msg.setScopeselector(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ResourceQuotaSpec.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ResourceQuotaSpec.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ResourceQuotaSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ResourceQuotaSpec.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getHardMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.serializeBinaryToWriter);
    }
    f = message.getScopesList();
    if (f.length > 0) {
        writer.writeRepeatedString(2, f);
    }
    f = message.getScopeselector();
    if (f != null) {
        writer.writeMessage(3, f, proto.k8s.io.api.core.v1.ScopeSelector.serializeBinaryToWriter);
    }
};
/**
 * map<string, k8s.io.apimachinery.pkg.api.resource.Quantity> hard = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>}
 */
proto.k8s.io.api.core.v1.ResourceQuotaSpec.prototype.getHardMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>} */ (jspb.Message.getMapField(this, 1, opt_noLazyCreate, proto.k8s.io.apimachinery.pkg.api.resource.Quantity));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.k8s.io.api.core.v1.ResourceQuotaSpec} returns this
 */
proto.k8s.io.api.core.v1.ResourceQuotaSpec.prototype.clearHardMap = function () {
    this.getHardMap().clear();
    return this;
};
/**
 * repeated string scopes = 2;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.ResourceQuotaSpec.prototype.getScopesList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.ResourceQuotaSpec} returns this
 */
proto.k8s.io.api.core.v1.ResourceQuotaSpec.prototype.setScopesList = function (value) {
    return jspb.Message.setField(this, 2, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ResourceQuotaSpec} returns this
 */
proto.k8s.io.api.core.v1.ResourceQuotaSpec.prototype.addScopes = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.ResourceQuotaSpec} returns this
 */
proto.k8s.io.api.core.v1.ResourceQuotaSpec.prototype.clearScopesList = function () {
    return this.setScopesList([]);
};
/**
 * optional ScopeSelector scopeSelector = 3;
 * @return {?proto.k8s.io.api.core.v1.ScopeSelector}
 */
proto.k8s.io.api.core.v1.ResourceQuotaSpec.prototype.getScopeselector = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ScopeSelector} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ScopeSelector, 3));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ScopeSelector|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ResourceQuotaSpec} returns this
*/
proto.k8s.io.api.core.v1.ResourceQuotaSpec.prototype.setScopeselector = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ResourceQuotaSpec} returns this
 */
proto.k8s.io.api.core.v1.ResourceQuotaSpec.prototype.clearScopeselector = function () {
    return this.setScopeselector(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ResourceQuotaSpec.prototype.hasScopeselector = function () {
    return jspb.Message.getField(this, 3) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ResourceQuotaStatus.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ResourceQuotaStatus.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ResourceQuotaStatus} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ResourceQuotaStatus.toObject = function (includeInstance, msg) {
        var f, obj = {
            hardMap: (f = msg.getHardMap()) ? f.toObject(includeInstance, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.toObject) : [],
            usedMap: (f = msg.getUsedMap()) ? f.toObject(includeInstance, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.toObject) : []
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ResourceQuotaStatus}
 */
proto.k8s.io.api.core.v1.ResourceQuotaStatus.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ResourceQuotaStatus;
    return proto.k8s.io.api.core.v1.ResourceQuotaStatus.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ResourceQuotaStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ResourceQuotaStatus}
 */
proto.k8s.io.api.core.v1.ResourceQuotaStatus.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = msg.getHardMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.deserializeBinaryFromReader, "", new proto.k8s.io.apimachinery.pkg.api.resource.Quantity());
                });
                break;
            case 2:
                var value = msg.getUsedMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.deserializeBinaryFromReader, "", new proto.k8s.io.apimachinery.pkg.api.resource.Quantity());
                });
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ResourceQuotaStatus.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ResourceQuotaStatus.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ResourceQuotaStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ResourceQuotaStatus.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getHardMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.serializeBinaryToWriter);
    }
    f = message.getUsedMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.serializeBinaryToWriter);
    }
};
/**
 * map<string, k8s.io.apimachinery.pkg.api.resource.Quantity> hard = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>}
 */
proto.k8s.io.api.core.v1.ResourceQuotaStatus.prototype.getHardMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>} */ (jspb.Message.getMapField(this, 1, opt_noLazyCreate, proto.k8s.io.apimachinery.pkg.api.resource.Quantity));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.k8s.io.api.core.v1.ResourceQuotaStatus} returns this
 */
proto.k8s.io.api.core.v1.ResourceQuotaStatus.prototype.clearHardMap = function () {
    this.getHardMap().clear();
    return this;
};
/**
 * map<string, k8s.io.apimachinery.pkg.api.resource.Quantity> used = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>}
 */
proto.k8s.io.api.core.v1.ResourceQuotaStatus.prototype.getUsedMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>} */ (jspb.Message.getMapField(this, 2, opt_noLazyCreate, proto.k8s.io.apimachinery.pkg.api.resource.Quantity));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.k8s.io.api.core.v1.ResourceQuotaStatus} returns this
 */
proto.k8s.io.api.core.v1.ResourceQuotaStatus.prototype.clearUsedMap = function () {
    this.getUsedMap().clear();
    return this;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ResourceRequirements.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ResourceRequirements.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ResourceRequirements} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ResourceRequirements.toObject = function (includeInstance, msg) {
        var f, obj = {
            limitsMap: (f = msg.getLimitsMap()) ? f.toObject(includeInstance, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.toObject) : [],
            requestsMap: (f = msg.getRequestsMap()) ? f.toObject(includeInstance, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.toObject) : []
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ResourceRequirements}
 */
proto.k8s.io.api.core.v1.ResourceRequirements.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ResourceRequirements;
    return proto.k8s.io.api.core.v1.ResourceRequirements.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ResourceRequirements} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ResourceRequirements}
 */
proto.k8s.io.api.core.v1.ResourceRequirements.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = msg.getLimitsMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.deserializeBinaryFromReader, "", new proto.k8s.io.apimachinery.pkg.api.resource.Quantity());
                });
                break;
            case 2:
                var value = msg.getRequestsMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.deserializeBinaryFromReader, "", new proto.k8s.io.apimachinery.pkg.api.resource.Quantity());
                });
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ResourceRequirements.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ResourceRequirements.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ResourceRequirements} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ResourceRequirements.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getLimitsMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.serializeBinaryToWriter);
    }
    f = message.getRequestsMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.k8s.io.apimachinery.pkg.api.resource.Quantity.serializeBinaryToWriter);
    }
};
/**
 * map<string, k8s.io.apimachinery.pkg.api.resource.Quantity> limits = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>}
 */
proto.k8s.io.api.core.v1.ResourceRequirements.prototype.getLimitsMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>} */ (jspb.Message.getMapField(this, 1, opt_noLazyCreate, proto.k8s.io.apimachinery.pkg.api.resource.Quantity));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.k8s.io.api.core.v1.ResourceRequirements} returns this
 */
proto.k8s.io.api.core.v1.ResourceRequirements.prototype.clearLimitsMap = function () {
    this.getLimitsMap().clear();
    return this;
};
/**
 * map<string, k8s.io.apimachinery.pkg.api.resource.Quantity> requests = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>}
 */
proto.k8s.io.api.core.v1.ResourceRequirements.prototype.getRequestsMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,!proto.k8s.io.apimachinery.pkg.api.resource.Quantity>} */ (jspb.Message.getMapField(this, 2, opt_noLazyCreate, proto.k8s.io.apimachinery.pkg.api.resource.Quantity));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.k8s.io.api.core.v1.ResourceRequirements} returns this
 */
proto.k8s.io.api.core.v1.ResourceRequirements.prototype.clearRequestsMap = function () {
    this.getRequestsMap().clear();
    return this;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.SELinuxOptions.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.SELinuxOptions.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.SELinuxOptions} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.SELinuxOptions.toObject = function (includeInstance, msg) {
        var f, obj = {
            user: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            role: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            type: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            level: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.SELinuxOptions}
 */
proto.k8s.io.api.core.v1.SELinuxOptions.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.SELinuxOptions;
    return proto.k8s.io.api.core.v1.SELinuxOptions.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.SELinuxOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.SELinuxOptions}
 */
proto.k8s.io.api.core.v1.SELinuxOptions.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setUser(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setRole(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setType(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setLevel(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.SELinuxOptions.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.SELinuxOptions.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.SELinuxOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.SELinuxOptions.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
};
/**
 * optional string user = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.SELinuxOptions.prototype.getUser = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.SELinuxOptions} returns this
 */
proto.k8s.io.api.core.v1.SELinuxOptions.prototype.setUser = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SELinuxOptions} returns this
 */
proto.k8s.io.api.core.v1.SELinuxOptions.prototype.clearUser = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SELinuxOptions.prototype.hasUser = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string role = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.SELinuxOptions.prototype.getRole = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.SELinuxOptions} returns this
 */
proto.k8s.io.api.core.v1.SELinuxOptions.prototype.setRole = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SELinuxOptions} returns this
 */
proto.k8s.io.api.core.v1.SELinuxOptions.prototype.clearRole = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SELinuxOptions.prototype.hasRole = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string type = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.SELinuxOptions.prototype.getType = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.SELinuxOptions} returns this
 */
proto.k8s.io.api.core.v1.SELinuxOptions.prototype.setType = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SELinuxOptions} returns this
 */
proto.k8s.io.api.core.v1.SELinuxOptions.prototype.clearType = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SELinuxOptions.prototype.hasType = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string level = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.SELinuxOptions.prototype.getLevel = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.SELinuxOptions} returns this
 */
proto.k8s.io.api.core.v1.SELinuxOptions.prototype.setLevel = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SELinuxOptions} returns this
 */
proto.k8s.io.api.core.v1.SELinuxOptions.prototype.clearLevel = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SELinuxOptions.prototype.hasLevel = function () {
    return jspb.Message.getField(this, 4) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            gateway: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            system: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            secretref: (f = msg.getSecretref()) && proto.k8s.io.api.core.v1.SecretReference.toObject(includeInstance, f),
            sslenabled: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
            protectiondomain: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
            storagepool: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
            storagemode: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
            volumename: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
            fstype: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
            readonly: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource;
    return proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setGateway(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setSystem(value);
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.SecretReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.SecretReference.deserializeBinaryFromReader);
                msg.setSecretref(value);
                break;
            case 4:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setSslenabled(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setProtectiondomain(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.setStoragepool(value);
                break;
            case 7:
                var value = /** @type {string} */ (reader.readString());
                msg.setStoragemode(value);
                break;
            case 8:
                var value = /** @type {string} */ (reader.readString());
                msg.setVolumename(value);
                break;
            case 9:
                var value = /** @type {string} */ (reader.readString());
                msg.setFstype(value);
                break;
            case 10:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = message.getSecretref();
    if (f != null) {
        writer.writeMessage(3, f, proto.k8s.io.api.core.v1.SecretReference.serializeBinaryToWriter);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeBool(4, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeString(5, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 6));
    if (f != null) {
        writer.writeString(6, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 7));
    if (f != null) {
        writer.writeString(7, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 8));
    if (f != null) {
        writer.writeString(8, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 9));
    if (f != null) {
        writer.writeString(9, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
    if (f != null) {
        writer.writeBool(10, f);
    }
};
/**
 * optional string gateway = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.getGateway = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.setGateway = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.clearGateway = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.hasGateway = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string system = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.getSystem = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.setSystem = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.clearSystem = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.hasSystem = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional SecretReference secretRef = 3;
 * @return {?proto.k8s.io.api.core.v1.SecretReference}
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.getSecretref = function () {
    return /** @type{?proto.k8s.io.api.core.v1.SecretReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.SecretReference, 3));
};
/**
 * @param {?proto.k8s.io.api.core.v1.SecretReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.setSecretref = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.clearSecretref = function () {
    return this.setSecretref(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.hasSecretref = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional bool sslEnabled = 4;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.getSslenabled = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.setSslenabled = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.clearSslenabled = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.hasSslenabled = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional string protectionDomain = 5;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.getProtectiondomain = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.setProtectiondomain = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.clearProtectiondomain = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.hasProtectiondomain = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional string storagePool = 6;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.getStoragepool = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.setStoragepool = function (value) {
    return jspb.Message.setField(this, 6, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.clearStoragepool = function () {
    return jspb.Message.setField(this, 6, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.hasStoragepool = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * optional string storageMode = 7;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.getStoragemode = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.setStoragemode = function (value) {
    return jspb.Message.setField(this, 7, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.clearStoragemode = function () {
    return jspb.Message.setField(this, 7, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.hasStoragemode = function () {
    return jspb.Message.getField(this, 7) != null;
};
/**
 * optional string volumeName = 8;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.getVolumename = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.setVolumename = function (value) {
    return jspb.Message.setField(this, 8, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.clearVolumename = function () {
    return jspb.Message.setField(this, 8, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.hasVolumename = function () {
    return jspb.Message.getField(this, 8) != null;
};
/**
 * optional string fsType = 9;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.getFstype = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.setFstype = function (value) {
    return jspb.Message.setField(this, 9, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.clearFstype = function () {
    return jspb.Message.setField(this, 9, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.hasFstype = function () {
    return jspb.Message.getField(this, 9) != null;
};
/**
 * optional bool readOnly = 10;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 10, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 10, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 10) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ScaleIOVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ScaleIOVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            gateway: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            system: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            secretref: (f = msg.getSecretref()) && proto.k8s.io.api.core.v1.LocalObjectReference.toObject(includeInstance, f),
            sslenabled: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
            protectiondomain: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
            storagepool: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
            storagemode: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
            volumename: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
            fstype: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
            readonly: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ScaleIOVolumeSource;
    return proto.k8s.io.api.core.v1.ScaleIOVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setGateway(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setSystem(value);
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.LocalObjectReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.LocalObjectReference.deserializeBinaryFromReader);
                msg.setSecretref(value);
                break;
            case 4:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setSslenabled(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setProtectiondomain(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.setStoragepool(value);
                break;
            case 7:
                var value = /** @type {string} */ (reader.readString());
                msg.setStoragemode(value);
                break;
            case 8:
                var value = /** @type {string} */ (reader.readString());
                msg.setVolumename(value);
                break;
            case 9:
                var value = /** @type {string} */ (reader.readString());
                msg.setFstype(value);
                break;
            case 10:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ScaleIOVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = message.getSecretref();
    if (f != null) {
        writer.writeMessage(3, f, proto.k8s.io.api.core.v1.LocalObjectReference.serializeBinaryToWriter);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeBool(4, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeString(5, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 6));
    if (f != null) {
        writer.writeString(6, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 7));
    if (f != null) {
        writer.writeString(7, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 8));
    if (f != null) {
        writer.writeString(8, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 9));
    if (f != null) {
        writer.writeString(9, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
    if (f != null) {
        writer.writeBool(10, f);
    }
};
/**
 * optional string gateway = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.getGateway = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.setGateway = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.clearGateway = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.hasGateway = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string system = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.getSystem = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.setSystem = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.clearSystem = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.hasSystem = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional LocalObjectReference secretRef = 3;
 * @return {?proto.k8s.io.api.core.v1.LocalObjectReference}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.getSecretref = function () {
    return /** @type{?proto.k8s.io.api.core.v1.LocalObjectReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.LocalObjectReference, 3));
};
/**
 * @param {?proto.k8s.io.api.core.v1.LocalObjectReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.setSecretref = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.clearSecretref = function () {
    return this.setSecretref(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.hasSecretref = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional bool sslEnabled = 4;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.getSslenabled = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.setSslenabled = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.clearSslenabled = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.hasSslenabled = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional string protectionDomain = 5;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.getProtectiondomain = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.setProtectiondomain = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.clearProtectiondomain = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.hasProtectiondomain = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional string storagePool = 6;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.getStoragepool = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.setStoragepool = function (value) {
    return jspb.Message.setField(this, 6, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.clearStoragepool = function () {
    return jspb.Message.setField(this, 6, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.hasStoragepool = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * optional string storageMode = 7;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.getStoragemode = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.setStoragemode = function (value) {
    return jspb.Message.setField(this, 7, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.clearStoragemode = function () {
    return jspb.Message.setField(this, 7, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.hasStoragemode = function () {
    return jspb.Message.getField(this, 7) != null;
};
/**
 * optional string volumeName = 8;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.getVolumename = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.setVolumename = function (value) {
    return jspb.Message.setField(this, 8, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.clearVolumename = function () {
    return jspb.Message.setField(this, 8, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.hasVolumename = function () {
    return jspb.Message.getField(this, 8) != null;
};
/**
 * optional string fsType = 9;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.getFstype = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.setFstype = function (value) {
    return jspb.Message.setField(this, 9, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.clearFstype = function () {
    return jspb.Message.setField(this, 9, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.hasFstype = function () {
    return jspb.Message.getField(this, 9) != null;
};
/**
 * optional bool readOnly = 10;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 10, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ScaleIOVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 10, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ScaleIOVolumeSource.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 10) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.ScopeSelector.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ScopeSelector.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ScopeSelector.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ScopeSelector} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ScopeSelector.toObject = function (includeInstance, msg) {
        var f, obj = {
            matchexpressionsList: jspb.Message.toObjectList(msg.getMatchexpressionsList(), proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ScopeSelector}
 */
proto.k8s.io.api.core.v1.ScopeSelector.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ScopeSelector;
    return proto.k8s.io.api.core.v1.ScopeSelector.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ScopeSelector} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ScopeSelector}
 */
proto.k8s.io.api.core.v1.ScopeSelector.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement.deserializeBinaryFromReader);
                msg.addMatchexpressions(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ScopeSelector.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ScopeSelector.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ScopeSelector} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ScopeSelector.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMatchexpressionsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement.serializeBinaryToWriter);
    }
};
/**
 * repeated ScopedResourceSelectorRequirement matchExpressions = 1;
 * @return {!Array<!proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement>}
 */
proto.k8s.io.api.core.v1.ScopeSelector.prototype.getMatchexpressionsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement, 1));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement>} value
 * @return {!proto.k8s.io.api.core.v1.ScopeSelector} returns this
*/
proto.k8s.io.api.core.v1.ScopeSelector.prototype.setMatchexpressionsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement}
 */
proto.k8s.io.api.core.v1.ScopeSelector.prototype.addMatchexpressions = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.ScopeSelector} returns this
 */
proto.k8s.io.api.core.v1.ScopeSelector.prototype.clearMatchexpressionsList = function () {
    return this.setMatchexpressionsList([]);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement.repeatedFields_ = [3];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement.toObject = function (includeInstance, msg) {
        var f, obj = {
            scopename: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            operator: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            valuesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement}
 */
proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement;
    return proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement}
 */
proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setScopename(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setOperator(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.addValues(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = message.getValuesList();
    if (f.length > 0) {
        writer.writeRepeatedString(3, f);
    }
};
/**
 * optional string scopeName = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement.prototype.getScopename = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement} returns this
 */
proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement.prototype.setScopename = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement} returns this
 */
proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement.prototype.clearScopename = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement.prototype.hasScopename = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string operator = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement.prototype.getOperator = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement} returns this
 */
proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement.prototype.setOperator = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement} returns this
 */
proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement.prototype.clearOperator = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement.prototype.hasOperator = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * repeated string values = 3;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement.prototype.getValuesList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement} returns this
 */
proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement.prototype.setValuesList = function (value) {
    return jspb.Message.setField(this, 3, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement} returns this
 */
proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement.prototype.addValues = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement} returns this
 */
proto.k8s.io.api.core.v1.ScopedResourceSelectorRequirement.prototype.clearValuesList = function () {
    return this.setValuesList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.SeccompProfile.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.SeccompProfile.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.SeccompProfile} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.SeccompProfile.toObject = function (includeInstance, msg) {
        var f, obj = {
            type: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            localhostprofile: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.SeccompProfile}
 */
proto.k8s.io.api.core.v1.SeccompProfile.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.SeccompProfile;
    return proto.k8s.io.api.core.v1.SeccompProfile.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.SeccompProfile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.SeccompProfile}
 */
proto.k8s.io.api.core.v1.SeccompProfile.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setType(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setLocalhostprofile(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.SeccompProfile.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.SeccompProfile.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.SeccompProfile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.SeccompProfile.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
};
/**
 * optional string type = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.SeccompProfile.prototype.getType = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.SeccompProfile} returns this
 */
proto.k8s.io.api.core.v1.SeccompProfile.prototype.setType = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SeccompProfile} returns this
 */
proto.k8s.io.api.core.v1.SeccompProfile.prototype.clearType = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SeccompProfile.prototype.hasType = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string localhostProfile = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.SeccompProfile.prototype.getLocalhostprofile = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.SeccompProfile} returns this
 */
proto.k8s.io.api.core.v1.SeccompProfile.prototype.setLocalhostprofile = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SeccompProfile} returns this
 */
proto.k8s.io.api.core.v1.SeccompProfile.prototype.clearLocalhostprofile = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SeccompProfile.prototype.hasLocalhostprofile = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.Secret.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.Secret.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.Secret} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.Secret.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
            immutable: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
            dataMap: (f = msg.getDataMap()) ? f.toObject(includeInstance, undefined) : [],
            stringdataMap: (f = msg.getStringdataMap()) ? f.toObject(includeInstance, undefined) : [],
            type: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.Secret}
 */
proto.k8s.io.api.core.v1.Secret.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.Secret;
    return proto.k8s.io.api.core.v1.Secret.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.Secret} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.Secret}
 */
proto.k8s.io.api.core.v1.Secret.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 5:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setImmutable(value);
                break;
            case 2:
                var value = msg.getDataMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBytes, null, "", "");
                });
                break;
            case 4:
                var value = msg.getStringdataMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
                });
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setType(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.Secret.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.Secret.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.Secret} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.Secret.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeBool(5, f);
    }
    f = message.getDataMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBytes);
    }
    f = message.getStringdataMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.k8s.io.api.core.v1.Secret.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Secret} returns this
*/
proto.k8s.io.api.core.v1.Secret.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Secret} returns this
 */
proto.k8s.io.api.core.v1.Secret.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Secret.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional bool immutable = 5;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Secret.prototype.getImmutable = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.Secret} returns this
 */
proto.k8s.io.api.core.v1.Secret.prototype.setImmutable = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Secret} returns this
 */
proto.k8s.io.api.core.v1.Secret.prototype.clearImmutable = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Secret.prototype.hasImmutable = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * map<string, bytes> data = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!(string|Uint8Array)>}
 */
proto.k8s.io.api.core.v1.Secret.prototype.getDataMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,!(string|Uint8Array)>} */ (jspb.Message.getMapField(this, 2, opt_noLazyCreate, null));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.k8s.io.api.core.v1.Secret} returns this
 */
proto.k8s.io.api.core.v1.Secret.prototype.clearDataMap = function () {
    this.getDataMap().clear();
    return this;
};
/**
 * map<string, string> stringData = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.k8s.io.api.core.v1.Secret.prototype.getStringdataMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,string>} */ (jspb.Message.getMapField(this, 4, opt_noLazyCreate, null));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.k8s.io.api.core.v1.Secret} returns this
 */
proto.k8s.io.api.core.v1.Secret.prototype.clearStringdataMap = function () {
    this.getStringdataMap().clear();
    return this;
};
/**
 * optional string type = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.Secret.prototype.getType = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.Secret} returns this
 */
proto.k8s.io.api.core.v1.Secret.prototype.setType = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Secret} returns this
 */
proto.k8s.io.api.core.v1.Secret.prototype.clearType = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Secret.prototype.hasType = function () {
    return jspb.Message.getField(this, 3) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.SecretEnvSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.SecretEnvSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.SecretEnvSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.SecretEnvSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            localobjectreference: (f = msg.getLocalobjectreference()) && proto.k8s.io.api.core.v1.LocalObjectReference.toObject(includeInstance, f),
            optional: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.SecretEnvSource}
 */
proto.k8s.io.api.core.v1.SecretEnvSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.SecretEnvSource;
    return proto.k8s.io.api.core.v1.SecretEnvSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.SecretEnvSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.SecretEnvSource}
 */
proto.k8s.io.api.core.v1.SecretEnvSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.LocalObjectReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.LocalObjectReference.deserializeBinaryFromReader);
                msg.setLocalobjectreference(value);
                break;
            case 2:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setOptional(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.SecretEnvSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.SecretEnvSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.SecretEnvSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.SecretEnvSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getLocalobjectreference();
    if (f != null) {
        writer.writeMessage(1, f, proto.k8s.io.api.core.v1.LocalObjectReference.serializeBinaryToWriter);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeBool(2, f);
    }
};
/**
 * optional LocalObjectReference localObjectReference = 1;
 * @return {?proto.k8s.io.api.core.v1.LocalObjectReference}
 */
proto.k8s.io.api.core.v1.SecretEnvSource.prototype.getLocalobjectreference = function () {
    return /** @type{?proto.k8s.io.api.core.v1.LocalObjectReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.LocalObjectReference, 1));
};
/**
 * @param {?proto.k8s.io.api.core.v1.LocalObjectReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.SecretEnvSource} returns this
*/
proto.k8s.io.api.core.v1.SecretEnvSource.prototype.setLocalobjectreference = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SecretEnvSource} returns this
 */
proto.k8s.io.api.core.v1.SecretEnvSource.prototype.clearLocalobjectreference = function () {
    return this.setLocalobjectreference(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecretEnvSource.prototype.hasLocalobjectreference = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional bool optional = 2;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecretEnvSource.prototype.getOptional = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.SecretEnvSource} returns this
 */
proto.k8s.io.api.core.v1.SecretEnvSource.prototype.setOptional = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SecretEnvSource} returns this
 */
proto.k8s.io.api.core.v1.SecretEnvSource.prototype.clearOptional = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecretEnvSource.prototype.hasOptional = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.SecretKeySelector.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.SecretKeySelector.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.SecretKeySelector} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.SecretKeySelector.toObject = function (includeInstance, msg) {
        var f, obj = {
            localobjectreference: (f = msg.getLocalobjectreference()) && proto.k8s.io.api.core.v1.LocalObjectReference.toObject(includeInstance, f),
            key: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            optional: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.SecretKeySelector}
 */
proto.k8s.io.api.core.v1.SecretKeySelector.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.SecretKeySelector;
    return proto.k8s.io.api.core.v1.SecretKeySelector.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.SecretKeySelector} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.SecretKeySelector}
 */
proto.k8s.io.api.core.v1.SecretKeySelector.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.LocalObjectReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.LocalObjectReference.deserializeBinaryFromReader);
                msg.setLocalobjectreference(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setKey(value);
                break;
            case 3:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setOptional(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.SecretKeySelector.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.SecretKeySelector.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.SecretKeySelector} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.SecretKeySelector.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getLocalobjectreference();
    if (f != null) {
        writer.writeMessage(1, f, proto.k8s.io.api.core.v1.LocalObjectReference.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeBool(3, f);
    }
};
/**
 * optional LocalObjectReference localObjectReference = 1;
 * @return {?proto.k8s.io.api.core.v1.LocalObjectReference}
 */
proto.k8s.io.api.core.v1.SecretKeySelector.prototype.getLocalobjectreference = function () {
    return /** @type{?proto.k8s.io.api.core.v1.LocalObjectReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.LocalObjectReference, 1));
};
/**
 * @param {?proto.k8s.io.api.core.v1.LocalObjectReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.SecretKeySelector} returns this
*/
proto.k8s.io.api.core.v1.SecretKeySelector.prototype.setLocalobjectreference = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SecretKeySelector} returns this
 */
proto.k8s.io.api.core.v1.SecretKeySelector.prototype.clearLocalobjectreference = function () {
    return this.setLocalobjectreference(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecretKeySelector.prototype.hasLocalobjectreference = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string key = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.SecretKeySelector.prototype.getKey = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.SecretKeySelector} returns this
 */
proto.k8s.io.api.core.v1.SecretKeySelector.prototype.setKey = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SecretKeySelector} returns this
 */
proto.k8s.io.api.core.v1.SecretKeySelector.prototype.clearKey = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecretKeySelector.prototype.hasKey = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional bool optional = 3;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecretKeySelector.prototype.getOptional = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.SecretKeySelector} returns this
 */
proto.k8s.io.api.core.v1.SecretKeySelector.prototype.setOptional = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SecretKeySelector} returns this
 */
proto.k8s.io.api.core.v1.SecretKeySelector.prototype.clearOptional = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecretKeySelector.prototype.hasOptional = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.SecretList.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.SecretList.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.SecretList.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.SecretList} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.SecretList.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
            itemsList: jspb.Message.toObjectList(msg.getItemsList(), proto.k8s.io.api.core.v1.Secret.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.SecretList}
 */
proto.k8s.io.api.core.v1.SecretList.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.SecretList;
    return proto.k8s.io.api.core.v1.SecretList.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.SecretList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.SecretList}
 */
proto.k8s.io.api.core.v1.SecretList.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.Secret;
                reader.readMessage(value, proto.k8s.io.api.core.v1.Secret.deserializeBinaryFromReader);
                msg.addItems(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.SecretList.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.SecretList.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.SecretList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.SecretList.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter);
    }
    f = message.getItemsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.Secret.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.k8s.io.api.core.v1.SecretList.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.SecretList} returns this
*/
proto.k8s.io.api.core.v1.SecretList.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SecretList} returns this
 */
proto.k8s.io.api.core.v1.SecretList.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecretList.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated Secret items = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.Secret>}
 */
proto.k8s.io.api.core.v1.SecretList.prototype.getItemsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.Secret>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.Secret, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.Secret>} value
 * @return {!proto.k8s.io.api.core.v1.SecretList} returns this
*/
proto.k8s.io.api.core.v1.SecretList.prototype.setItemsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.Secret=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.Secret}
 */
proto.k8s.io.api.core.v1.SecretList.prototype.addItems = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.Secret, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.SecretList} returns this
 */
proto.k8s.io.api.core.v1.SecretList.prototype.clearItemsList = function () {
    return this.setItemsList([]);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.SecretProjection.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.SecretProjection.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.SecretProjection.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.SecretProjection} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.SecretProjection.toObject = function (includeInstance, msg) {
        var f, obj = {
            localobjectreference: (f = msg.getLocalobjectreference()) && proto.k8s.io.api.core.v1.LocalObjectReference.toObject(includeInstance, f),
            itemsList: jspb.Message.toObjectList(msg.getItemsList(), proto.k8s.io.api.core.v1.KeyToPath.toObject, includeInstance),
            optional: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.SecretProjection}
 */
proto.k8s.io.api.core.v1.SecretProjection.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.SecretProjection;
    return proto.k8s.io.api.core.v1.SecretProjection.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.SecretProjection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.SecretProjection}
 */
proto.k8s.io.api.core.v1.SecretProjection.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.LocalObjectReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.LocalObjectReference.deserializeBinaryFromReader);
                msg.setLocalobjectreference(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.KeyToPath;
                reader.readMessage(value, proto.k8s.io.api.core.v1.KeyToPath.deserializeBinaryFromReader);
                msg.addItems(value);
                break;
            case 4:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setOptional(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.SecretProjection.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.SecretProjection.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.SecretProjection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.SecretProjection.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getLocalobjectreference();
    if (f != null) {
        writer.writeMessage(1, f, proto.k8s.io.api.core.v1.LocalObjectReference.serializeBinaryToWriter);
    }
    f = message.getItemsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.KeyToPath.serializeBinaryToWriter);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeBool(4, f);
    }
};
/**
 * optional LocalObjectReference localObjectReference = 1;
 * @return {?proto.k8s.io.api.core.v1.LocalObjectReference}
 */
proto.k8s.io.api.core.v1.SecretProjection.prototype.getLocalobjectreference = function () {
    return /** @type{?proto.k8s.io.api.core.v1.LocalObjectReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.LocalObjectReference, 1));
};
/**
 * @param {?proto.k8s.io.api.core.v1.LocalObjectReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.SecretProjection} returns this
*/
proto.k8s.io.api.core.v1.SecretProjection.prototype.setLocalobjectreference = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SecretProjection} returns this
 */
proto.k8s.io.api.core.v1.SecretProjection.prototype.clearLocalobjectreference = function () {
    return this.setLocalobjectreference(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecretProjection.prototype.hasLocalobjectreference = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated KeyToPath items = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.KeyToPath>}
 */
proto.k8s.io.api.core.v1.SecretProjection.prototype.getItemsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.KeyToPath>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.KeyToPath, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.KeyToPath>} value
 * @return {!proto.k8s.io.api.core.v1.SecretProjection} returns this
*/
proto.k8s.io.api.core.v1.SecretProjection.prototype.setItemsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.KeyToPath=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.KeyToPath}
 */
proto.k8s.io.api.core.v1.SecretProjection.prototype.addItems = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.KeyToPath, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.SecretProjection} returns this
 */
proto.k8s.io.api.core.v1.SecretProjection.prototype.clearItemsList = function () {
    return this.setItemsList([]);
};
/**
 * optional bool optional = 4;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecretProjection.prototype.getOptional = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.SecretProjection} returns this
 */
proto.k8s.io.api.core.v1.SecretProjection.prototype.setOptional = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SecretProjection} returns this
 */
proto.k8s.io.api.core.v1.SecretProjection.prototype.clearOptional = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecretProjection.prototype.hasOptional = function () {
    return jspb.Message.getField(this, 4) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.SecretReference.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.SecretReference.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.SecretReference} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.SecretReference.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            namespace: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.SecretReference}
 */
proto.k8s.io.api.core.v1.SecretReference.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.SecretReference;
    return proto.k8s.io.api.core.v1.SecretReference.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.SecretReference} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.SecretReference}
 */
proto.k8s.io.api.core.v1.SecretReference.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setNamespace(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.SecretReference.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.SecretReference.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.SecretReference} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.SecretReference.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
};
/**
 * optional string name = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.SecretReference.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.SecretReference} returns this
 */
proto.k8s.io.api.core.v1.SecretReference.prototype.setName = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SecretReference} returns this
 */
proto.k8s.io.api.core.v1.SecretReference.prototype.clearName = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecretReference.prototype.hasName = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.SecretReference.prototype.getNamespace = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.SecretReference} returns this
 */
proto.k8s.io.api.core.v1.SecretReference.prototype.setNamespace = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SecretReference} returns this
 */
proto.k8s.io.api.core.v1.SecretReference.prototype.clearNamespace = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecretReference.prototype.hasNamespace = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.SecretVolumeSource.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.SecretVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.SecretVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.SecretVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.SecretVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            secretname: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            itemsList: jspb.Message.toObjectList(msg.getItemsList(), proto.k8s.io.api.core.v1.KeyToPath.toObject, includeInstance),
            defaultmode: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            optional: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.SecretVolumeSource}
 */
proto.k8s.io.api.core.v1.SecretVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.SecretVolumeSource;
    return proto.k8s.io.api.core.v1.SecretVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.SecretVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.SecretVolumeSource}
 */
proto.k8s.io.api.core.v1.SecretVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setSecretname(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.KeyToPath;
                reader.readMessage(value, proto.k8s.io.api.core.v1.KeyToPath.deserializeBinaryFromReader);
                msg.addItems(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setDefaultmode(value);
                break;
            case 4:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setOptional(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.SecretVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.SecretVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.SecretVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.SecretVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = message.getItemsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.KeyToPath.serializeBinaryToWriter);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeInt32(3, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeBool(4, f);
    }
};
/**
 * optional string secretName = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.SecretVolumeSource.prototype.getSecretname = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.SecretVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.SecretVolumeSource.prototype.setSecretname = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SecretVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.SecretVolumeSource.prototype.clearSecretname = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecretVolumeSource.prototype.hasSecretname = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated KeyToPath items = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.KeyToPath>}
 */
proto.k8s.io.api.core.v1.SecretVolumeSource.prototype.getItemsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.KeyToPath>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.KeyToPath, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.KeyToPath>} value
 * @return {!proto.k8s.io.api.core.v1.SecretVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.SecretVolumeSource.prototype.setItemsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.KeyToPath=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.KeyToPath}
 */
proto.k8s.io.api.core.v1.SecretVolumeSource.prototype.addItems = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.KeyToPath, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.SecretVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.SecretVolumeSource.prototype.clearItemsList = function () {
    return this.setItemsList([]);
};
/**
 * optional int32 defaultMode = 3;
 * @return {number}
 */
proto.k8s.io.api.core.v1.SecretVolumeSource.prototype.getDefaultmode = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.SecretVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.SecretVolumeSource.prototype.setDefaultmode = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SecretVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.SecretVolumeSource.prototype.clearDefaultmode = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecretVolumeSource.prototype.hasDefaultmode = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional bool optional = 4;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecretVolumeSource.prototype.getOptional = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.SecretVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.SecretVolumeSource.prototype.setOptional = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SecretVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.SecretVolumeSource.prototype.clearOptional = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecretVolumeSource.prototype.hasOptional = function () {
    return jspb.Message.getField(this, 4) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.SecurityContext.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.SecurityContext.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.SecurityContext} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.SecurityContext.toObject = function (includeInstance, msg) {
        var f, obj = {
            capabilities: (f = msg.getCapabilities()) && proto.k8s.io.api.core.v1.Capabilities.toObject(includeInstance, f),
            privileged: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
            selinuxoptions: (f = msg.getSelinuxoptions()) && proto.k8s.io.api.core.v1.SELinuxOptions.toObject(includeInstance, f),
            windowsoptions: (f = msg.getWindowsoptions()) && proto.k8s.io.api.core.v1.WindowsSecurityContextOptions.toObject(includeInstance, f),
            runasuser: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
            runasgroup: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
            runasnonroot: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
            readonlyrootfilesystem: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
            allowprivilegeescalation: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,
            procmount: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
            seccompprofile: (f = msg.getSeccompprofile()) && proto.k8s.io.api.core.v1.SeccompProfile.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.SecurityContext}
 */
proto.k8s.io.api.core.v1.SecurityContext.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.SecurityContext;
    return proto.k8s.io.api.core.v1.SecurityContext.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.SecurityContext} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.SecurityContext}
 */
proto.k8s.io.api.core.v1.SecurityContext.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.Capabilities;
                reader.readMessage(value, proto.k8s.io.api.core.v1.Capabilities.deserializeBinaryFromReader);
                msg.setCapabilities(value);
                break;
            case 2:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setPrivileged(value);
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.SELinuxOptions;
                reader.readMessage(value, proto.k8s.io.api.core.v1.SELinuxOptions.deserializeBinaryFromReader);
                msg.setSelinuxoptions(value);
                break;
            case 10:
                var value = new proto.k8s.io.api.core.v1.WindowsSecurityContextOptions;
                reader.readMessage(value, proto.k8s.io.api.core.v1.WindowsSecurityContextOptions.deserializeBinaryFromReader);
                msg.setWindowsoptions(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setRunasuser(value);
                break;
            case 8:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setRunasgroup(value);
                break;
            case 5:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setRunasnonroot(value);
                break;
            case 6:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonlyrootfilesystem(value);
                break;
            case 7:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setAllowprivilegeescalation(value);
                break;
            case 9:
                var value = /** @type {string} */ (reader.readString());
                msg.setProcmount(value);
                break;
            case 11:
                var value = new proto.k8s.io.api.core.v1.SeccompProfile;
                reader.readMessage(value, proto.k8s.io.api.core.v1.SeccompProfile.deserializeBinaryFromReader);
                msg.setSeccompprofile(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.SecurityContext.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.SecurityContext} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.SecurityContext.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getCapabilities();
    if (f != null) {
        writer.writeMessage(1, f, proto.k8s.io.api.core.v1.Capabilities.serializeBinaryToWriter);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeBool(2, f);
    }
    f = message.getSelinuxoptions();
    if (f != null) {
        writer.writeMessage(3, f, proto.k8s.io.api.core.v1.SELinuxOptions.serializeBinaryToWriter);
    }
    f = message.getWindowsoptions();
    if (f != null) {
        writer.writeMessage(10, f, proto.k8s.io.api.core.v1.WindowsSecurityContextOptions.serializeBinaryToWriter);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeInt64(4, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 8));
    if (f != null) {
        writer.writeInt64(8, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeBool(5, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
    if (f != null) {
        writer.writeBool(6, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
    if (f != null) {
        writer.writeBool(7, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 9));
    if (f != null) {
        writer.writeString(9, f);
    }
    f = message.getSeccompprofile();
    if (f != null) {
        writer.writeMessage(11, f, proto.k8s.io.api.core.v1.SeccompProfile.serializeBinaryToWriter);
    }
};
/**
 * optional Capabilities capabilities = 1;
 * @return {?proto.k8s.io.api.core.v1.Capabilities}
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.getCapabilities = function () {
    return /** @type{?proto.k8s.io.api.core.v1.Capabilities} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.Capabilities, 1));
};
/**
 * @param {?proto.k8s.io.api.core.v1.Capabilities|undefined} value
 * @return {!proto.k8s.io.api.core.v1.SecurityContext} returns this
*/
proto.k8s.io.api.core.v1.SecurityContext.prototype.setCapabilities = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SecurityContext} returns this
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.clearCapabilities = function () {
    return this.setCapabilities(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.hasCapabilities = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional bool privileged = 2;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.getPrivileged = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.SecurityContext} returns this
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.setPrivileged = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SecurityContext} returns this
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.clearPrivileged = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.hasPrivileged = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional SELinuxOptions seLinuxOptions = 3;
 * @return {?proto.k8s.io.api.core.v1.SELinuxOptions}
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.getSelinuxoptions = function () {
    return /** @type{?proto.k8s.io.api.core.v1.SELinuxOptions} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.SELinuxOptions, 3));
};
/**
 * @param {?proto.k8s.io.api.core.v1.SELinuxOptions|undefined} value
 * @return {!proto.k8s.io.api.core.v1.SecurityContext} returns this
*/
proto.k8s.io.api.core.v1.SecurityContext.prototype.setSelinuxoptions = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SecurityContext} returns this
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.clearSelinuxoptions = function () {
    return this.setSelinuxoptions(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.hasSelinuxoptions = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional WindowsSecurityContextOptions windowsOptions = 10;
 * @return {?proto.k8s.io.api.core.v1.WindowsSecurityContextOptions}
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.getWindowsoptions = function () {
    return /** @type{?proto.k8s.io.api.core.v1.WindowsSecurityContextOptions} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.WindowsSecurityContextOptions, 10));
};
/**
 * @param {?proto.k8s.io.api.core.v1.WindowsSecurityContextOptions|undefined} value
 * @return {!proto.k8s.io.api.core.v1.SecurityContext} returns this
*/
proto.k8s.io.api.core.v1.SecurityContext.prototype.setWindowsoptions = function (value) {
    return jspb.Message.setWrapperField(this, 10, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SecurityContext} returns this
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.clearWindowsoptions = function () {
    return this.setWindowsoptions(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.hasWindowsoptions = function () {
    return jspb.Message.getField(this, 10) != null;
};
/**
 * optional int64 runAsUser = 4;
 * @return {number}
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.getRunasuser = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.SecurityContext} returns this
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.setRunasuser = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SecurityContext} returns this
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.clearRunasuser = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.hasRunasuser = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional int64 runAsGroup = 8;
 * @return {number}
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.getRunasgroup = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.SecurityContext} returns this
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.setRunasgroup = function (value) {
    return jspb.Message.setField(this, 8, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SecurityContext} returns this
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.clearRunasgroup = function () {
    return jspb.Message.setField(this, 8, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.hasRunasgroup = function () {
    return jspb.Message.getField(this, 8) != null;
};
/**
 * optional bool runAsNonRoot = 5;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.getRunasnonroot = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.SecurityContext} returns this
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.setRunasnonroot = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SecurityContext} returns this
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.clearRunasnonroot = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.hasRunasnonroot = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional bool readOnlyRootFilesystem = 6;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.getReadonlyrootfilesystem = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.SecurityContext} returns this
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.setReadonlyrootfilesystem = function (value) {
    return jspb.Message.setField(this, 6, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SecurityContext} returns this
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.clearReadonlyrootfilesystem = function () {
    return jspb.Message.setField(this, 6, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.hasReadonlyrootfilesystem = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * optional bool allowPrivilegeEscalation = 7;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.getAllowprivilegeescalation = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.SecurityContext} returns this
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.setAllowprivilegeescalation = function (value) {
    return jspb.Message.setField(this, 7, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SecurityContext} returns this
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.clearAllowprivilegeescalation = function () {
    return jspb.Message.setField(this, 7, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.hasAllowprivilegeescalation = function () {
    return jspb.Message.getField(this, 7) != null;
};
/**
 * optional string procMount = 9;
 * @return {string}
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.getProcmount = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.SecurityContext} returns this
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.setProcmount = function (value) {
    return jspb.Message.setField(this, 9, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SecurityContext} returns this
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.clearProcmount = function () {
    return jspb.Message.setField(this, 9, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.hasProcmount = function () {
    return jspb.Message.getField(this, 9) != null;
};
/**
 * optional SeccompProfile seccompProfile = 11;
 * @return {?proto.k8s.io.api.core.v1.SeccompProfile}
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.getSeccompprofile = function () {
    return /** @type{?proto.k8s.io.api.core.v1.SeccompProfile} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.SeccompProfile, 11));
};
/**
 * @param {?proto.k8s.io.api.core.v1.SeccompProfile|undefined} value
 * @return {!proto.k8s.io.api.core.v1.SecurityContext} returns this
*/
proto.k8s.io.api.core.v1.SecurityContext.prototype.setSeccompprofile = function (value) {
    return jspb.Message.setWrapperField(this, 11, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SecurityContext} returns this
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.clearSeccompprofile = function () {
    return this.setSeccompprofile(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SecurityContext.prototype.hasSeccompprofile = function () {
    return jspb.Message.getField(this, 11) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.SerializedReference.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.SerializedReference.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.SerializedReference} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.SerializedReference.toObject = function (includeInstance, msg) {
        var f, obj = {
            reference: (f = msg.getReference()) && proto.k8s.io.api.core.v1.ObjectReference.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.SerializedReference}
 */
proto.k8s.io.api.core.v1.SerializedReference.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.SerializedReference;
    return proto.k8s.io.api.core.v1.SerializedReference.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.SerializedReference} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.SerializedReference}
 */
proto.k8s.io.api.core.v1.SerializedReference.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.ObjectReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ObjectReference.deserializeBinaryFromReader);
                msg.setReference(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.SerializedReference.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.SerializedReference.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.SerializedReference} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.SerializedReference.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getReference();
    if (f != null) {
        writer.writeMessage(1, f, proto.k8s.io.api.core.v1.ObjectReference.serializeBinaryToWriter);
    }
};
/**
 * optional ObjectReference reference = 1;
 * @return {?proto.k8s.io.api.core.v1.ObjectReference}
 */
proto.k8s.io.api.core.v1.SerializedReference.prototype.getReference = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ObjectReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ObjectReference, 1));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ObjectReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.SerializedReference} returns this
*/
proto.k8s.io.api.core.v1.SerializedReference.prototype.setReference = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SerializedReference} returns this
 */
proto.k8s.io.api.core.v1.SerializedReference.prototype.clearReference = function () {
    return this.setReference(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SerializedReference.prototype.hasReference = function () {
    return jspb.Message.getField(this, 1) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.Service.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.Service.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.Service} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.Service.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
            spec: (f = msg.getSpec()) && proto.k8s.io.api.core.v1.ServiceSpec.toObject(includeInstance, f),
            status: (f = msg.getStatus()) && proto.k8s.io.api.core.v1.ServiceStatus.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.Service}
 */
proto.k8s.io.api.core.v1.Service.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.Service;
    return proto.k8s.io.api.core.v1.Service.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.Service} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.Service}
 */
proto.k8s.io.api.core.v1.Service.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.ServiceSpec;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ServiceSpec.deserializeBinaryFromReader);
                msg.setSpec(value);
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.ServiceStatus;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ServiceStatus.deserializeBinaryFromReader);
                msg.setStatus(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.Service.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.Service.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.Service} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.Service.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter);
    }
    f = message.getSpec();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.ServiceSpec.serializeBinaryToWriter);
    }
    f = message.getStatus();
    if (f != null) {
        writer.writeMessage(3, f, proto.k8s.io.api.core.v1.ServiceStatus.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.k8s.io.api.core.v1.Service.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Service} returns this
*/
proto.k8s.io.api.core.v1.Service.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Service} returns this
 */
proto.k8s.io.api.core.v1.Service.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Service.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional ServiceSpec spec = 2;
 * @return {?proto.k8s.io.api.core.v1.ServiceSpec}
 */
proto.k8s.io.api.core.v1.Service.prototype.getSpec = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ServiceSpec} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ServiceSpec, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ServiceSpec|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Service} returns this
*/
proto.k8s.io.api.core.v1.Service.prototype.setSpec = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Service} returns this
 */
proto.k8s.io.api.core.v1.Service.prototype.clearSpec = function () {
    return this.setSpec(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Service.prototype.hasSpec = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional ServiceStatus status = 3;
 * @return {?proto.k8s.io.api.core.v1.ServiceStatus}
 */
proto.k8s.io.api.core.v1.Service.prototype.getStatus = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ServiceStatus} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ServiceStatus, 3));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ServiceStatus|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Service} returns this
*/
proto.k8s.io.api.core.v1.Service.prototype.setStatus = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Service} returns this
 */
proto.k8s.io.api.core.v1.Service.prototype.clearStatus = function () {
    return this.setStatus(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Service.prototype.hasStatus = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.ServiceAccount.repeatedFields_ = [2, 3];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ServiceAccount.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ServiceAccount.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ServiceAccount} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ServiceAccount.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
            secretsList: jspb.Message.toObjectList(msg.getSecretsList(), proto.k8s.io.api.core.v1.ObjectReference.toObject, includeInstance),
            imagepullsecretsList: jspb.Message.toObjectList(msg.getImagepullsecretsList(), proto.k8s.io.api.core.v1.LocalObjectReference.toObject, includeInstance),
            automountserviceaccounttoken: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ServiceAccount}
 */
proto.k8s.io.api.core.v1.ServiceAccount.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ServiceAccount;
    return proto.k8s.io.api.core.v1.ServiceAccount.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ServiceAccount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ServiceAccount}
 */
proto.k8s.io.api.core.v1.ServiceAccount.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.ObjectReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ObjectReference.deserializeBinaryFromReader);
                msg.addSecrets(value);
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.LocalObjectReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.LocalObjectReference.deserializeBinaryFromReader);
                msg.addImagepullsecrets(value);
                break;
            case 4:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setAutomountserviceaccounttoken(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ServiceAccount.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ServiceAccount.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ServiceAccount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ServiceAccount.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter);
    }
    f = message.getSecretsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.ObjectReference.serializeBinaryToWriter);
    }
    f = message.getImagepullsecretsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(3, f, proto.k8s.io.api.core.v1.LocalObjectReference.serializeBinaryToWriter);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeBool(4, f);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.k8s.io.api.core.v1.ServiceAccount.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ServiceAccount} returns this
*/
proto.k8s.io.api.core.v1.ServiceAccount.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ServiceAccount} returns this
 */
proto.k8s.io.api.core.v1.ServiceAccount.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ServiceAccount.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated ObjectReference secrets = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.ObjectReference>}
 */
proto.k8s.io.api.core.v1.ServiceAccount.prototype.getSecretsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.ObjectReference>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.ObjectReference, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.ObjectReference>} value
 * @return {!proto.k8s.io.api.core.v1.ServiceAccount} returns this
*/
proto.k8s.io.api.core.v1.ServiceAccount.prototype.setSecretsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.ObjectReference=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ObjectReference}
 */
proto.k8s.io.api.core.v1.ServiceAccount.prototype.addSecrets = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.ObjectReference, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.ServiceAccount} returns this
 */
proto.k8s.io.api.core.v1.ServiceAccount.prototype.clearSecretsList = function () {
    return this.setSecretsList([]);
};
/**
 * repeated LocalObjectReference imagePullSecrets = 3;
 * @return {!Array<!proto.k8s.io.api.core.v1.LocalObjectReference>}
 */
proto.k8s.io.api.core.v1.ServiceAccount.prototype.getImagepullsecretsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.LocalObjectReference>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.LocalObjectReference, 3));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.LocalObjectReference>} value
 * @return {!proto.k8s.io.api.core.v1.ServiceAccount} returns this
*/
proto.k8s.io.api.core.v1.ServiceAccount.prototype.setImagepullsecretsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 3, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.LocalObjectReference=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.LocalObjectReference}
 */
proto.k8s.io.api.core.v1.ServiceAccount.prototype.addImagepullsecrets = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.k8s.io.api.core.v1.LocalObjectReference, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.ServiceAccount} returns this
 */
proto.k8s.io.api.core.v1.ServiceAccount.prototype.clearImagepullsecretsList = function () {
    return this.setImagepullsecretsList([]);
};
/**
 * optional bool automountServiceAccountToken = 4;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ServiceAccount.prototype.getAutomountserviceaccounttoken = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.ServiceAccount} returns this
 */
proto.k8s.io.api.core.v1.ServiceAccount.prototype.setAutomountserviceaccounttoken = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ServiceAccount} returns this
 */
proto.k8s.io.api.core.v1.ServiceAccount.prototype.clearAutomountserviceaccounttoken = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ServiceAccount.prototype.hasAutomountserviceaccounttoken = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.ServiceAccountList.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ServiceAccountList.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ServiceAccountList.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ServiceAccountList} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ServiceAccountList.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
            itemsList: jspb.Message.toObjectList(msg.getItemsList(), proto.k8s.io.api.core.v1.ServiceAccount.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ServiceAccountList}
 */
proto.k8s.io.api.core.v1.ServiceAccountList.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ServiceAccountList;
    return proto.k8s.io.api.core.v1.ServiceAccountList.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ServiceAccountList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ServiceAccountList}
 */
proto.k8s.io.api.core.v1.ServiceAccountList.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.ServiceAccount;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ServiceAccount.deserializeBinaryFromReader);
                msg.addItems(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ServiceAccountList.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ServiceAccountList.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ServiceAccountList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ServiceAccountList.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter);
    }
    f = message.getItemsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.ServiceAccount.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.k8s.io.api.core.v1.ServiceAccountList.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ServiceAccountList} returns this
*/
proto.k8s.io.api.core.v1.ServiceAccountList.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ServiceAccountList} returns this
 */
proto.k8s.io.api.core.v1.ServiceAccountList.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ServiceAccountList.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated ServiceAccount items = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.ServiceAccount>}
 */
proto.k8s.io.api.core.v1.ServiceAccountList.prototype.getItemsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.ServiceAccount>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.ServiceAccount, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.ServiceAccount>} value
 * @return {!proto.k8s.io.api.core.v1.ServiceAccountList} returns this
*/
proto.k8s.io.api.core.v1.ServiceAccountList.prototype.setItemsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.ServiceAccount=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ServiceAccount}
 */
proto.k8s.io.api.core.v1.ServiceAccountList.prototype.addItems = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.ServiceAccount, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.ServiceAccountList} returns this
 */
proto.k8s.io.api.core.v1.ServiceAccountList.prototype.clearItemsList = function () {
    return this.setItemsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ServiceAccountTokenProjection.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ServiceAccountTokenProjection.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ServiceAccountTokenProjection} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ServiceAccountTokenProjection.toObject = function (includeInstance, msg) {
        var f, obj = {
            audience: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            expirationseconds: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            path: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ServiceAccountTokenProjection}
 */
proto.k8s.io.api.core.v1.ServiceAccountTokenProjection.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ServiceAccountTokenProjection;
    return proto.k8s.io.api.core.v1.ServiceAccountTokenProjection.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ServiceAccountTokenProjection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ServiceAccountTokenProjection}
 */
proto.k8s.io.api.core.v1.ServiceAccountTokenProjection.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setAudience(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setExpirationseconds(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setPath(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ServiceAccountTokenProjection.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ServiceAccountTokenProjection.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ServiceAccountTokenProjection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ServiceAccountTokenProjection.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeInt64(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
};
/**
 * optional string audience = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ServiceAccountTokenProjection.prototype.getAudience = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ServiceAccountTokenProjection} returns this
 */
proto.k8s.io.api.core.v1.ServiceAccountTokenProjection.prototype.setAudience = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ServiceAccountTokenProjection} returns this
 */
proto.k8s.io.api.core.v1.ServiceAccountTokenProjection.prototype.clearAudience = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ServiceAccountTokenProjection.prototype.hasAudience = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional int64 expirationSeconds = 2;
 * @return {number}
 */
proto.k8s.io.api.core.v1.ServiceAccountTokenProjection.prototype.getExpirationseconds = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.ServiceAccountTokenProjection} returns this
 */
proto.k8s.io.api.core.v1.ServiceAccountTokenProjection.prototype.setExpirationseconds = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ServiceAccountTokenProjection} returns this
 */
proto.k8s.io.api.core.v1.ServiceAccountTokenProjection.prototype.clearExpirationseconds = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ServiceAccountTokenProjection.prototype.hasExpirationseconds = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string path = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ServiceAccountTokenProjection.prototype.getPath = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ServiceAccountTokenProjection} returns this
 */
proto.k8s.io.api.core.v1.ServiceAccountTokenProjection.prototype.setPath = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ServiceAccountTokenProjection} returns this
 */
proto.k8s.io.api.core.v1.ServiceAccountTokenProjection.prototype.clearPath = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ServiceAccountTokenProjection.prototype.hasPath = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.ServiceList.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ServiceList.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ServiceList.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ServiceList} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ServiceList.toObject = function (includeInstance, msg) {
        var f, obj = {
            metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
            itemsList: jspb.Message.toObjectList(msg.getItemsList(), proto.k8s.io.api.core.v1.Service.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ServiceList}
 */
proto.k8s.io.api.core.v1.ServiceList.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ServiceList;
    return proto.k8s.io.api.core.v1.ServiceList.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ServiceList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ServiceList}
 */
proto.k8s.io.api.core.v1.ServiceList.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
                msg.setMetadata(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.Service;
                reader.readMessage(value, proto.k8s.io.api.core.v1.Service.deserializeBinaryFromReader);
                msg.addItems(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ServiceList.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ServiceList.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ServiceList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ServiceList.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMetadata();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter);
    }
    f = message.getItemsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.k8s.io.api.core.v1.Service.serializeBinaryToWriter);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.k8s.io.api.core.v1.ServiceList.prototype.getMetadata = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ServiceList} returns this
*/
proto.k8s.io.api.core.v1.ServiceList.prototype.setMetadata = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ServiceList} returns this
 */
proto.k8s.io.api.core.v1.ServiceList.prototype.clearMetadata = function () {
    return this.setMetadata(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ServiceList.prototype.hasMetadata = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated Service items = 2;
 * @return {!Array<!proto.k8s.io.api.core.v1.Service>}
 */
proto.k8s.io.api.core.v1.ServiceList.prototype.getItemsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.Service>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.Service, 2));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.Service>} value
 * @return {!proto.k8s.io.api.core.v1.ServiceList} returns this
*/
proto.k8s.io.api.core.v1.ServiceList.prototype.setItemsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.Service=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.Service}
 */
proto.k8s.io.api.core.v1.ServiceList.prototype.addItems = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.api.core.v1.Service, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.ServiceList} returns this
 */
proto.k8s.io.api.core.v1.ServiceList.prototype.clearItemsList = function () {
    return this.setItemsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ServicePort.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ServicePort.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ServicePort} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ServicePort.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            protocol: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            appprotocol: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
            port: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            targetport: (f = msg.getTargetport()) && k8s_io_apimachinery_pkg_util_intstr_generated_pb.IntOrString.toObject(includeInstance, f),
            nodeport: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ServicePort}
 */
proto.k8s.io.api.core.v1.ServicePort.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ServicePort;
    return proto.k8s.io.api.core.v1.ServicePort.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ServicePort} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ServicePort}
 */
proto.k8s.io.api.core.v1.ServicePort.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setProtocol(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.setAppprotocol(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setPort(value);
                break;
            case 4:
                var value = new k8s_io_apimachinery_pkg_util_intstr_generated_pb.IntOrString;
                reader.readMessage(value, k8s_io_apimachinery_pkg_util_intstr_generated_pb.IntOrString.deserializeBinaryFromReader);
                msg.setTargetport(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setNodeport(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ServicePort.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ServicePort.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ServicePort} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ServicePort.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 6));
    if (f != null) {
        writer.writeString(6, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeInt32(3, f);
    }
    f = message.getTargetport();
    if (f != null) {
        writer.writeMessage(4, f, k8s_io_apimachinery_pkg_util_intstr_generated_pb.IntOrString.serializeBinaryToWriter);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeInt32(5, f);
    }
};
/**
 * optional string name = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ServicePort.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ServicePort} returns this
 */
proto.k8s.io.api.core.v1.ServicePort.prototype.setName = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ServicePort} returns this
 */
proto.k8s.io.api.core.v1.ServicePort.prototype.clearName = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ServicePort.prototype.hasName = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string protocol = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ServicePort.prototype.getProtocol = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ServicePort} returns this
 */
proto.k8s.io.api.core.v1.ServicePort.prototype.setProtocol = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ServicePort} returns this
 */
proto.k8s.io.api.core.v1.ServicePort.prototype.clearProtocol = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ServicePort.prototype.hasProtocol = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string appProtocol = 6;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ServicePort.prototype.getAppprotocol = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ServicePort} returns this
 */
proto.k8s.io.api.core.v1.ServicePort.prototype.setAppprotocol = function (value) {
    return jspb.Message.setField(this, 6, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ServicePort} returns this
 */
proto.k8s.io.api.core.v1.ServicePort.prototype.clearAppprotocol = function () {
    return jspb.Message.setField(this, 6, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ServicePort.prototype.hasAppprotocol = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * optional int32 port = 3;
 * @return {number}
 */
proto.k8s.io.api.core.v1.ServicePort.prototype.getPort = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.ServicePort} returns this
 */
proto.k8s.io.api.core.v1.ServicePort.prototype.setPort = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ServicePort} returns this
 */
proto.k8s.io.api.core.v1.ServicePort.prototype.clearPort = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ServicePort.prototype.hasPort = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional k8s.io.apimachinery.pkg.util.intstr.IntOrString targetPort = 4;
 * @return {?proto.k8s.io.apimachinery.pkg.util.intstr.IntOrString}
 */
proto.k8s.io.api.core.v1.ServicePort.prototype.getTargetport = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.util.intstr.IntOrString} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_util_intstr_generated_pb.IntOrString, 4));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.util.intstr.IntOrString|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ServicePort} returns this
*/
proto.k8s.io.api.core.v1.ServicePort.prototype.setTargetport = function (value) {
    return jspb.Message.setWrapperField(this, 4, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ServicePort} returns this
 */
proto.k8s.io.api.core.v1.ServicePort.prototype.clearTargetport = function () {
    return this.setTargetport(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ServicePort.prototype.hasTargetport = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional int32 nodePort = 5;
 * @return {number}
 */
proto.k8s.io.api.core.v1.ServicePort.prototype.getNodeport = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.ServicePort} returns this
 */
proto.k8s.io.api.core.v1.ServicePort.prototype.setNodeport = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ServicePort} returns this
 */
proto.k8s.io.api.core.v1.ServicePort.prototype.clearNodeport = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ServicePort.prototype.hasNodeport = function () {
    return jspb.Message.getField(this, 5) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ServiceProxyOptions.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ServiceProxyOptions.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ServiceProxyOptions} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ServiceProxyOptions.toObject = function (includeInstance, msg) {
        var f, obj = {
            path: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ServiceProxyOptions}
 */
proto.k8s.io.api.core.v1.ServiceProxyOptions.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ServiceProxyOptions;
    return proto.k8s.io.api.core.v1.ServiceProxyOptions.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ServiceProxyOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ServiceProxyOptions}
 */
proto.k8s.io.api.core.v1.ServiceProxyOptions.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setPath(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ServiceProxyOptions.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ServiceProxyOptions.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ServiceProxyOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ServiceProxyOptions.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
};
/**
 * optional string path = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ServiceProxyOptions.prototype.getPath = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ServiceProxyOptions} returns this
 */
proto.k8s.io.api.core.v1.ServiceProxyOptions.prototype.setPath = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ServiceProxyOptions} returns this
 */
proto.k8s.io.api.core.v1.ServiceProxyOptions.prototype.clearPath = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ServiceProxyOptions.prototype.hasPath = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.ServiceSpec.repeatedFields_ = [1, 18, 5, 9, 16, 19];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ServiceSpec.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ServiceSpec.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ServiceSpec} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ServiceSpec.toObject = function (includeInstance, msg) {
        var f, obj = {
            portsList: jspb.Message.toObjectList(msg.getPortsList(), proto.k8s.io.api.core.v1.ServicePort.toObject, includeInstance),
            selectorMap: (f = msg.getSelectorMap()) ? f.toObject(includeInstance, undefined) : [],
            clusterip: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            clusteripsList: (f = jspb.Message.getRepeatedField(msg, 18)) == null ? undefined : f,
            type: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
            externalipsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
            sessionaffinity: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
            loadbalancerip: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
            loadbalancersourcerangesList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
            externalname: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
            externaltrafficpolicy: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
            healthchecknodeport: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
            publishnotreadyaddresses: (f = jspb.Message.getBooleanField(msg, 13)) == null ? undefined : f,
            sessionaffinityconfig: (f = msg.getSessionaffinityconfig()) && proto.k8s.io.api.core.v1.SessionAffinityConfig.toObject(includeInstance, f),
            topologykeysList: (f = jspb.Message.getRepeatedField(msg, 16)) == null ? undefined : f,
            ipfamiliesList: (f = jspb.Message.getRepeatedField(msg, 19)) == null ? undefined : f,
            ipfamilypolicy: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
            allocateloadbalancernodeports: (f = jspb.Message.getBooleanField(msg, 20)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec}
 */
proto.k8s.io.api.core.v1.ServiceSpec.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ServiceSpec;
    return proto.k8s.io.api.core.v1.ServiceSpec.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ServiceSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec}
 */
proto.k8s.io.api.core.v1.ServiceSpec.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.ServicePort;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ServicePort.deserializeBinaryFromReader);
                msg.addPorts(value);
                break;
            case 2:
                var value = msg.getSelectorMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
                });
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setClusterip(value);
                break;
            case 18:
                var value = /** @type {string} */ (reader.readString());
                msg.addClusterips(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setType(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.addExternalips(value);
                break;
            case 7:
                var value = /** @type {string} */ (reader.readString());
                msg.setSessionaffinity(value);
                break;
            case 8:
                var value = /** @type {string} */ (reader.readString());
                msg.setLoadbalancerip(value);
                break;
            case 9:
                var value = /** @type {string} */ (reader.readString());
                msg.addLoadbalancersourceranges(value);
                break;
            case 10:
                var value = /** @type {string} */ (reader.readString());
                msg.setExternalname(value);
                break;
            case 11:
                var value = /** @type {string} */ (reader.readString());
                msg.setExternaltrafficpolicy(value);
                break;
            case 12:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setHealthchecknodeport(value);
                break;
            case 13:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setPublishnotreadyaddresses(value);
                break;
            case 14:
                var value = new proto.k8s.io.api.core.v1.SessionAffinityConfig;
                reader.readMessage(value, proto.k8s.io.api.core.v1.SessionAffinityConfig.deserializeBinaryFromReader);
                msg.setSessionaffinityconfig(value);
                break;
            case 16:
                var value = /** @type {string} */ (reader.readString());
                msg.addTopologykeys(value);
                break;
            case 19:
                var value = /** @type {string} */ (reader.readString());
                msg.addIpfamilies(value);
                break;
            case 17:
                var value = /** @type {string} */ (reader.readString());
                msg.setIpfamilypolicy(value);
                break;
            case 20:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setAllocateloadbalancernodeports(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ServiceSpec.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ServiceSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ServiceSpec.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getPortsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, proto.k8s.io.api.core.v1.ServicePort.serializeBinaryToWriter);
    }
    f = message.getSelectorMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = message.getClusteripsList();
    if (f.length > 0) {
        writer.writeRepeatedString(18, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
    f = message.getExternalipsList();
    if (f.length > 0) {
        writer.writeRepeatedString(5, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 7));
    if (f != null) {
        writer.writeString(7, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 8));
    if (f != null) {
        writer.writeString(8, f);
    }
    f = message.getLoadbalancersourcerangesList();
    if (f.length > 0) {
        writer.writeRepeatedString(9, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 10));
    if (f != null) {
        writer.writeString(10, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 11));
    if (f != null) {
        writer.writeString(11, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 12));
    if (f != null) {
        writer.writeInt32(12, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
    if (f != null) {
        writer.writeBool(13, f);
    }
    f = message.getSessionaffinityconfig();
    if (f != null) {
        writer.writeMessage(14, f, proto.k8s.io.api.core.v1.SessionAffinityConfig.serializeBinaryToWriter);
    }
    f = message.getTopologykeysList();
    if (f.length > 0) {
        writer.writeRepeatedString(16, f);
    }
    f = message.getIpfamiliesList();
    if (f.length > 0) {
        writer.writeRepeatedString(19, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 17));
    if (f != null) {
        writer.writeString(17, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 20));
    if (f != null) {
        writer.writeBool(20, f);
    }
};
/**
 * repeated ServicePort ports = 1;
 * @return {!Array<!proto.k8s.io.api.core.v1.ServicePort>}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.getPortsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.ServicePort>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.ServicePort, 1));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.ServicePort>} value
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
*/
proto.k8s.io.api.core.v1.ServiceSpec.prototype.setPortsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.ServicePort=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ServicePort}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.addPorts = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.k8s.io.api.core.v1.ServicePort, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.clearPortsList = function () {
    return this.setPortsList([]);
};
/**
 * map<string, string> selector = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.getSelectorMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,string>} */ (jspb.Message.getMapField(this, 2, opt_noLazyCreate, null));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.clearSelectorMap = function () {
    this.getSelectorMap().clear();
    return this;
};
/**
 * optional string clusterIP = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.getClusterip = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.setClusterip = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.clearClusterip = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.hasClusterip = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * repeated string clusterIPs = 18;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.getClusteripsList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 18));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.setClusteripsList = function (value) {
    return jspb.Message.setField(this, 18, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.addClusterips = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 18, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.clearClusteripsList = function () {
    return this.setClusteripsList([]);
};
/**
 * optional string type = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.getType = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.setType = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.clearType = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.hasType = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * repeated string externalIPs = 5;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.getExternalipsList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.setExternalipsList = function (value) {
    return jspb.Message.setField(this, 5, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.addExternalips = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.clearExternalipsList = function () {
    return this.setExternalipsList([]);
};
/**
 * optional string sessionAffinity = 7;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.getSessionaffinity = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.setSessionaffinity = function (value) {
    return jspb.Message.setField(this, 7, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.clearSessionaffinity = function () {
    return jspb.Message.setField(this, 7, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.hasSessionaffinity = function () {
    return jspb.Message.getField(this, 7) != null;
};
/**
 * optional string loadBalancerIP = 8;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.getLoadbalancerip = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.setLoadbalancerip = function (value) {
    return jspb.Message.setField(this, 8, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.clearLoadbalancerip = function () {
    return jspb.Message.setField(this, 8, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.hasLoadbalancerip = function () {
    return jspb.Message.getField(this, 8) != null;
};
/**
 * repeated string loadBalancerSourceRanges = 9;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.getLoadbalancersourcerangesList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.setLoadbalancersourcerangesList = function (value) {
    return jspb.Message.setField(this, 9, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.addLoadbalancersourceranges = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.clearLoadbalancersourcerangesList = function () {
    return this.setLoadbalancersourcerangesList([]);
};
/**
 * optional string externalName = 10;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.getExternalname = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.setExternalname = function (value) {
    return jspb.Message.setField(this, 10, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.clearExternalname = function () {
    return jspb.Message.setField(this, 10, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.hasExternalname = function () {
    return jspb.Message.getField(this, 10) != null;
};
/**
 * optional string externalTrafficPolicy = 11;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.getExternaltrafficpolicy = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.setExternaltrafficpolicy = function (value) {
    return jspb.Message.setField(this, 11, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.clearExternaltrafficpolicy = function () {
    return jspb.Message.setField(this, 11, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.hasExternaltrafficpolicy = function () {
    return jspb.Message.getField(this, 11) != null;
};
/**
 * optional int32 healthCheckNodePort = 12;
 * @return {number}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.getHealthchecknodeport = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.setHealthchecknodeport = function (value) {
    return jspb.Message.setField(this, 12, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.clearHealthchecknodeport = function () {
    return jspb.Message.setField(this, 12, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.hasHealthchecknodeport = function () {
    return jspb.Message.getField(this, 12) != null;
};
/**
 * optional bool publishNotReadyAddresses = 13;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.getPublishnotreadyaddresses = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.setPublishnotreadyaddresses = function (value) {
    return jspb.Message.setField(this, 13, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.clearPublishnotreadyaddresses = function () {
    return jspb.Message.setField(this, 13, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.hasPublishnotreadyaddresses = function () {
    return jspb.Message.getField(this, 13) != null;
};
/**
 * optional SessionAffinityConfig sessionAffinityConfig = 14;
 * @return {?proto.k8s.io.api.core.v1.SessionAffinityConfig}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.getSessionaffinityconfig = function () {
    return /** @type{?proto.k8s.io.api.core.v1.SessionAffinityConfig} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.SessionAffinityConfig, 14));
};
/**
 * @param {?proto.k8s.io.api.core.v1.SessionAffinityConfig|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
*/
proto.k8s.io.api.core.v1.ServiceSpec.prototype.setSessionaffinityconfig = function (value) {
    return jspb.Message.setWrapperField(this, 14, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.clearSessionaffinityconfig = function () {
    return this.setSessionaffinityconfig(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.hasSessionaffinityconfig = function () {
    return jspb.Message.getField(this, 14) != null;
};
/**
 * repeated string topologyKeys = 16;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.getTopologykeysList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 16));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.setTopologykeysList = function (value) {
    return jspb.Message.setField(this, 16, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.addTopologykeys = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 16, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.clearTopologykeysList = function () {
    return this.setTopologykeysList([]);
};
/**
 * repeated string ipFamilies = 19;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.getIpfamiliesList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 19));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.setIpfamiliesList = function (value) {
    return jspb.Message.setField(this, 19, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.addIpfamilies = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 19, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.clearIpfamiliesList = function () {
    return this.setIpfamiliesList([]);
};
/**
 * optional string ipFamilyPolicy = 17;
 * @return {string}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.getIpfamilypolicy = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.setIpfamilypolicy = function (value) {
    return jspb.Message.setField(this, 17, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.clearIpfamilypolicy = function () {
    return jspb.Message.setField(this, 17, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.hasIpfamilypolicy = function () {
    return jspb.Message.getField(this, 17) != null;
};
/**
 * optional bool allocateLoadBalancerNodePorts = 20;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.getAllocateloadbalancernodeports = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.setAllocateloadbalancernodeports = function (value) {
    return jspb.Message.setField(this, 20, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ServiceSpec} returns this
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.clearAllocateloadbalancernodeports = function () {
    return jspb.Message.setField(this, 20, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ServiceSpec.prototype.hasAllocateloadbalancernodeports = function () {
    return jspb.Message.getField(this, 20) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.ServiceStatus.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.ServiceStatus.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.ServiceStatus.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.ServiceStatus} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.ServiceStatus.toObject = function (includeInstance, msg) {
        var f, obj = {
            loadbalancer: (f = msg.getLoadbalancer()) && proto.k8s.io.api.core.v1.LoadBalancerStatus.toObject(includeInstance, f),
            conditionsList: jspb.Message.toObjectList(msg.getConditionsList(), k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.ServiceStatus}
 */
proto.k8s.io.api.core.v1.ServiceStatus.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.ServiceStatus;
    return proto.k8s.io.api.core.v1.ServiceStatus.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.ServiceStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.ServiceStatus}
 */
proto.k8s.io.api.core.v1.ServiceStatus.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.LoadBalancerStatus;
                reader.readMessage(value, proto.k8s.io.api.core.v1.LoadBalancerStatus.deserializeBinaryFromReader);
                msg.setLoadbalancer(value);
                break;
            case 2:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.deserializeBinaryFromReader);
                msg.addConditions(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.ServiceStatus.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.ServiceStatus.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.ServiceStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.ServiceStatus.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getLoadbalancer();
    if (f != null) {
        writer.writeMessage(1, f, proto.k8s.io.api.core.v1.LoadBalancerStatus.serializeBinaryToWriter);
    }
    f = message.getConditionsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.serializeBinaryToWriter);
    }
};
/**
 * optional LoadBalancerStatus loadBalancer = 1;
 * @return {?proto.k8s.io.api.core.v1.LoadBalancerStatus}
 */
proto.k8s.io.api.core.v1.ServiceStatus.prototype.getLoadbalancer = function () {
    return /** @type{?proto.k8s.io.api.core.v1.LoadBalancerStatus} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.LoadBalancerStatus, 1));
};
/**
 * @param {?proto.k8s.io.api.core.v1.LoadBalancerStatus|undefined} value
 * @return {!proto.k8s.io.api.core.v1.ServiceStatus} returns this
*/
proto.k8s.io.api.core.v1.ServiceStatus.prototype.setLoadbalancer = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.ServiceStatus} returns this
 */
proto.k8s.io.api.core.v1.ServiceStatus.prototype.clearLoadbalancer = function () {
    return this.setLoadbalancer(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.ServiceStatus.prototype.hasLoadbalancer = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated k8s.io.apimachinery.pkg.apis.meta.v1.Condition conditions = 2;
 * @return {!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>}
 */
proto.k8s.io.api.core.v1.ServiceStatus.prototype.getConditionsList = function () {
    return /** @type{!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>} */ (jspb.Message.getRepeatedWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition, 2));
};
/**
 * @param {!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>} value
 * @return {!proto.k8s.io.api.core.v1.ServiceStatus} returns this
*/
proto.k8s.io.api.core.v1.ServiceStatus.prototype.setConditionsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition}
 */
proto.k8s.io.api.core.v1.ServiceStatus.prototype.addConditions = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.ServiceStatus} returns this
 */
proto.k8s.io.api.core.v1.ServiceStatus.prototype.clearConditionsList = function () {
    return this.setConditionsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.SessionAffinityConfig.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.SessionAffinityConfig.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.SessionAffinityConfig} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.SessionAffinityConfig.toObject = function (includeInstance, msg) {
        var f, obj = {
            clientip: (f = msg.getClientip()) && proto.k8s.io.api.core.v1.ClientIPConfig.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.SessionAffinityConfig}
 */
proto.k8s.io.api.core.v1.SessionAffinityConfig.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.SessionAffinityConfig;
    return proto.k8s.io.api.core.v1.SessionAffinityConfig.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.SessionAffinityConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.SessionAffinityConfig}
 */
proto.k8s.io.api.core.v1.SessionAffinityConfig.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.ClientIPConfig;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ClientIPConfig.deserializeBinaryFromReader);
                msg.setClientip(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.SessionAffinityConfig.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.SessionAffinityConfig.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.SessionAffinityConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.SessionAffinityConfig.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getClientip();
    if (f != null) {
        writer.writeMessage(1, f, proto.k8s.io.api.core.v1.ClientIPConfig.serializeBinaryToWriter);
    }
};
/**
 * optional ClientIPConfig clientIP = 1;
 * @return {?proto.k8s.io.api.core.v1.ClientIPConfig}
 */
proto.k8s.io.api.core.v1.SessionAffinityConfig.prototype.getClientip = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ClientIPConfig} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ClientIPConfig, 1));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ClientIPConfig|undefined} value
 * @return {!proto.k8s.io.api.core.v1.SessionAffinityConfig} returns this
*/
proto.k8s.io.api.core.v1.SessionAffinityConfig.prototype.setClientip = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.SessionAffinityConfig} returns this
 */
proto.k8s.io.api.core.v1.SessionAffinityConfig.prototype.clearClientip = function () {
    return this.setClientip(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.SessionAffinityConfig.prototype.hasClientip = function () {
    return jspb.Message.getField(this, 1) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            volumename: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            volumenamespace: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            fstype: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            readonly: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
            secretref: (f = msg.getSecretref()) && proto.k8s.io.api.core.v1.ObjectReference.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource;
    return proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource}
 */
proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setVolumename(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setVolumenamespace(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setFstype(value);
                break;
            case 4:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            case 5:
                var value = new proto.k8s.io.api.core.v1.ObjectReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ObjectReference.deserializeBinaryFromReader);
                msg.setSecretref(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeBool(4, f);
    }
    f = message.getSecretref();
    if (f != null) {
        writer.writeMessage(5, f, proto.k8s.io.api.core.v1.ObjectReference.serializeBinaryToWriter);
    }
};
/**
 * optional string volumeName = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.prototype.getVolumename = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.prototype.setVolumename = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.prototype.clearVolumename = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.prototype.hasVolumename = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string volumeNamespace = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.prototype.getVolumenamespace = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.prototype.setVolumenamespace = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.prototype.clearVolumenamespace = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.prototype.hasVolumenamespace = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string fsType = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.prototype.getFstype = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.prototype.setFstype = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.prototype.clearFstype = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.prototype.hasFstype = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional bool readOnly = 4;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional ObjectReference secretRef = 5;
 * @return {?proto.k8s.io.api.core.v1.ObjectReference}
 */
proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.prototype.getSecretref = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ObjectReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ObjectReference, 5));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ObjectReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.prototype.setSecretref = function (value) {
    return jspb.Message.setWrapperField(this, 5, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.prototype.clearSecretref = function () {
    return this.setSecretref(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.StorageOSPersistentVolumeSource.prototype.hasSecretref = function () {
    return jspb.Message.getField(this, 5) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.StorageOSVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.StorageOSVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.StorageOSVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.StorageOSVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            volumename: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            volumenamespace: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            fstype: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            readonly: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
            secretref: (f = msg.getSecretref()) && proto.k8s.io.api.core.v1.LocalObjectReference.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.StorageOSVolumeSource}
 */
proto.k8s.io.api.core.v1.StorageOSVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.StorageOSVolumeSource;
    return proto.k8s.io.api.core.v1.StorageOSVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.StorageOSVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.StorageOSVolumeSource}
 */
proto.k8s.io.api.core.v1.StorageOSVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setVolumename(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setVolumenamespace(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setFstype(value);
                break;
            case 4:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            case 5:
                var value = new proto.k8s.io.api.core.v1.LocalObjectReference;
                reader.readMessage(value, proto.k8s.io.api.core.v1.LocalObjectReference.deserializeBinaryFromReader);
                msg.setSecretref(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.StorageOSVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.StorageOSVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.StorageOSVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.StorageOSVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeBool(4, f);
    }
    f = message.getSecretref();
    if (f != null) {
        writer.writeMessage(5, f, proto.k8s.io.api.core.v1.LocalObjectReference.serializeBinaryToWriter);
    }
};
/**
 * optional string volumeName = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.StorageOSVolumeSource.prototype.getVolumename = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.StorageOSVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.StorageOSVolumeSource.prototype.setVolumename = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.StorageOSVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.StorageOSVolumeSource.prototype.clearVolumename = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.StorageOSVolumeSource.prototype.hasVolumename = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string volumeNamespace = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.StorageOSVolumeSource.prototype.getVolumenamespace = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.StorageOSVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.StorageOSVolumeSource.prototype.setVolumenamespace = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.StorageOSVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.StorageOSVolumeSource.prototype.clearVolumenamespace = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.StorageOSVolumeSource.prototype.hasVolumenamespace = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string fsType = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.StorageOSVolumeSource.prototype.getFstype = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.StorageOSVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.StorageOSVolumeSource.prototype.setFstype = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.StorageOSVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.StorageOSVolumeSource.prototype.clearFstype = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.StorageOSVolumeSource.prototype.hasFstype = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional bool readOnly = 4;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.StorageOSVolumeSource.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.StorageOSVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.StorageOSVolumeSource.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.StorageOSVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.StorageOSVolumeSource.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.StorageOSVolumeSource.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional LocalObjectReference secretRef = 5;
 * @return {?proto.k8s.io.api.core.v1.LocalObjectReference}
 */
proto.k8s.io.api.core.v1.StorageOSVolumeSource.prototype.getSecretref = function () {
    return /** @type{?proto.k8s.io.api.core.v1.LocalObjectReference} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.LocalObjectReference, 5));
};
/**
 * @param {?proto.k8s.io.api.core.v1.LocalObjectReference|undefined} value
 * @return {!proto.k8s.io.api.core.v1.StorageOSVolumeSource} returns this
*/
proto.k8s.io.api.core.v1.StorageOSVolumeSource.prototype.setSecretref = function (value) {
    return jspb.Message.setWrapperField(this, 5, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.StorageOSVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.StorageOSVolumeSource.prototype.clearSecretref = function () {
    return this.setSecretref(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.StorageOSVolumeSource.prototype.hasSecretref = function () {
    return jspb.Message.getField(this, 5) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.Sysctl.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.Sysctl.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.Sysctl} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.Sysctl.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            value: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.Sysctl}
 */
proto.k8s.io.api.core.v1.Sysctl.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.Sysctl;
    return proto.k8s.io.api.core.v1.Sysctl.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.Sysctl} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.Sysctl}
 */
proto.k8s.io.api.core.v1.Sysctl.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setValue(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.Sysctl.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.Sysctl.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.Sysctl} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.Sysctl.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
};
/**
 * optional string name = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.Sysctl.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.Sysctl} returns this
 */
proto.k8s.io.api.core.v1.Sysctl.prototype.setName = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Sysctl} returns this
 */
proto.k8s.io.api.core.v1.Sysctl.prototype.clearName = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Sysctl.prototype.hasName = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string value = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.Sysctl.prototype.getValue = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.Sysctl} returns this
 */
proto.k8s.io.api.core.v1.Sysctl.prototype.setValue = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Sysctl} returns this
 */
proto.k8s.io.api.core.v1.Sysctl.prototype.clearValue = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Sysctl.prototype.hasValue = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.TCPSocketAction.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.TCPSocketAction.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.TCPSocketAction} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.TCPSocketAction.toObject = function (includeInstance, msg) {
        var f, obj = {
            port: (f = msg.getPort()) && k8s_io_apimachinery_pkg_util_intstr_generated_pb.IntOrString.toObject(includeInstance, f),
            host: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.TCPSocketAction}
 */
proto.k8s.io.api.core.v1.TCPSocketAction.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.TCPSocketAction;
    return proto.k8s.io.api.core.v1.TCPSocketAction.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.TCPSocketAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.TCPSocketAction}
 */
proto.k8s.io.api.core.v1.TCPSocketAction.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new k8s_io_apimachinery_pkg_util_intstr_generated_pb.IntOrString;
                reader.readMessage(value, k8s_io_apimachinery_pkg_util_intstr_generated_pb.IntOrString.deserializeBinaryFromReader);
                msg.setPort(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setHost(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.TCPSocketAction.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.TCPSocketAction.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.TCPSocketAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.TCPSocketAction.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getPort();
    if (f != null) {
        writer.writeMessage(1, f, k8s_io_apimachinery_pkg_util_intstr_generated_pb.IntOrString.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
};
/**
 * optional k8s.io.apimachinery.pkg.util.intstr.IntOrString port = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.util.intstr.IntOrString}
 */
proto.k8s.io.api.core.v1.TCPSocketAction.prototype.getPort = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.util.intstr.IntOrString} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_util_intstr_generated_pb.IntOrString, 1));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.util.intstr.IntOrString|undefined} value
 * @return {!proto.k8s.io.api.core.v1.TCPSocketAction} returns this
*/
proto.k8s.io.api.core.v1.TCPSocketAction.prototype.setPort = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.TCPSocketAction} returns this
 */
proto.k8s.io.api.core.v1.TCPSocketAction.prototype.clearPort = function () {
    return this.setPort(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.TCPSocketAction.prototype.hasPort = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string host = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.TCPSocketAction.prototype.getHost = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.TCPSocketAction} returns this
 */
proto.k8s.io.api.core.v1.TCPSocketAction.prototype.setHost = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.TCPSocketAction} returns this
 */
proto.k8s.io.api.core.v1.TCPSocketAction.prototype.clearHost = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.TCPSocketAction.prototype.hasHost = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.Taint.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.Taint.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.Taint} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.Taint.toObject = function (includeInstance, msg) {
        var f, obj = {
            key: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            value: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            effect: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            timeadded: (f = msg.getTimeadded()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.Taint}
 */
proto.k8s.io.api.core.v1.Taint.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.Taint;
    return proto.k8s.io.api.core.v1.Taint.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.Taint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.Taint}
 */
proto.k8s.io.api.core.v1.Taint.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setKey(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setValue(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setEffect(value);
                break;
            case 4:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
                msg.setTimeadded(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.Taint.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.Taint.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.Taint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.Taint.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = message.getTimeadded();
    if (f != null) {
        writer.writeMessage(4, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter);
    }
};
/**
 * optional string key = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.Taint.prototype.getKey = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.Taint} returns this
 */
proto.k8s.io.api.core.v1.Taint.prototype.setKey = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Taint} returns this
 */
proto.k8s.io.api.core.v1.Taint.prototype.clearKey = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Taint.prototype.hasKey = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string value = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.Taint.prototype.getValue = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.Taint} returns this
 */
proto.k8s.io.api.core.v1.Taint.prototype.setValue = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Taint} returns this
 */
proto.k8s.io.api.core.v1.Taint.prototype.clearValue = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Taint.prototype.hasValue = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string effect = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.Taint.prototype.getEffect = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.Taint} returns this
 */
proto.k8s.io.api.core.v1.Taint.prototype.setEffect = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Taint} returns this
 */
proto.k8s.io.api.core.v1.Taint.prototype.clearEffect = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Taint.prototype.hasEffect = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time timeAdded = 4;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.k8s.io.api.core.v1.Taint.prototype.getTimeadded = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 4));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Taint} returns this
*/
proto.k8s.io.api.core.v1.Taint.prototype.setTimeadded = function (value) {
    return jspb.Message.setWrapperField(this, 4, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Taint} returns this
 */
proto.k8s.io.api.core.v1.Taint.prototype.clearTimeadded = function () {
    return this.setTimeadded(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Taint.prototype.hasTimeadded = function () {
    return jspb.Message.getField(this, 4) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.Toleration.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.Toleration.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.Toleration} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.Toleration.toObject = function (includeInstance, msg) {
        var f, obj = {
            key: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            operator: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            value: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            effect: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
            tolerationseconds: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.Toleration}
 */
proto.k8s.io.api.core.v1.Toleration.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.Toleration;
    return proto.k8s.io.api.core.v1.Toleration.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.Toleration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.Toleration}
 */
proto.k8s.io.api.core.v1.Toleration.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setKey(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setOperator(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setValue(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setEffect(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setTolerationseconds(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.Toleration.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.Toleration.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.Toleration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.Toleration.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeInt64(5, f);
    }
};
/**
 * optional string key = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.Toleration.prototype.getKey = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.Toleration} returns this
 */
proto.k8s.io.api.core.v1.Toleration.prototype.setKey = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Toleration} returns this
 */
proto.k8s.io.api.core.v1.Toleration.prototype.clearKey = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Toleration.prototype.hasKey = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string operator = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.Toleration.prototype.getOperator = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.Toleration} returns this
 */
proto.k8s.io.api.core.v1.Toleration.prototype.setOperator = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Toleration} returns this
 */
proto.k8s.io.api.core.v1.Toleration.prototype.clearOperator = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Toleration.prototype.hasOperator = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string value = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.Toleration.prototype.getValue = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.Toleration} returns this
 */
proto.k8s.io.api.core.v1.Toleration.prototype.setValue = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Toleration} returns this
 */
proto.k8s.io.api.core.v1.Toleration.prototype.clearValue = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Toleration.prototype.hasValue = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string effect = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.Toleration.prototype.getEffect = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.Toleration} returns this
 */
proto.k8s.io.api.core.v1.Toleration.prototype.setEffect = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Toleration} returns this
 */
proto.k8s.io.api.core.v1.Toleration.prototype.clearEffect = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Toleration.prototype.hasEffect = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional int64 tolerationSeconds = 5;
 * @return {number}
 */
proto.k8s.io.api.core.v1.Toleration.prototype.getTolerationseconds = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.Toleration} returns this
 */
proto.k8s.io.api.core.v1.Toleration.prototype.setTolerationseconds = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Toleration} returns this
 */
proto.k8s.io.api.core.v1.Toleration.prototype.clearTolerationseconds = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Toleration.prototype.hasTolerationseconds = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement.toObject = function (includeInstance, msg) {
        var f, obj = {
            key: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            valuesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement}
 */
proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement;
    return proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement}
 */
proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setKey(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.addValues(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = message.getValuesList();
    if (f.length > 0) {
        writer.writeRepeatedString(2, f);
    }
};
/**
 * optional string key = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement.prototype.getKey = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement} returns this
 */
proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement.prototype.setKey = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement} returns this
 */
proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement.prototype.clearKey = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement.prototype.hasKey = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated string values = 2;
 * @return {!Array<string>}
 */
proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement.prototype.getValuesList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement} returns this
 */
proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement.prototype.setValuesList = function (value) {
    return jspb.Message.setField(this, 2, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement} returns this
 */
proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement.prototype.addValues = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement} returns this
 */
proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement.prototype.clearValuesList = function () {
    return this.setValuesList([]);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.api.core.v1.TopologySelectorTerm.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.TopologySelectorTerm.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.TopologySelectorTerm.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.TopologySelectorTerm} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.TopologySelectorTerm.toObject = function (includeInstance, msg) {
        var f, obj = {
            matchlabelexpressionsList: jspb.Message.toObjectList(msg.getMatchlabelexpressionsList(), proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.TopologySelectorTerm}
 */
proto.k8s.io.api.core.v1.TopologySelectorTerm.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.TopologySelectorTerm;
    return proto.k8s.io.api.core.v1.TopologySelectorTerm.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.TopologySelectorTerm} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.TopologySelectorTerm}
 */
proto.k8s.io.api.core.v1.TopologySelectorTerm.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement;
                reader.readMessage(value, proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement.deserializeBinaryFromReader);
                msg.addMatchlabelexpressions(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.TopologySelectorTerm.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.TopologySelectorTerm.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.TopologySelectorTerm} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.TopologySelectorTerm.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMatchlabelexpressionsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement.serializeBinaryToWriter);
    }
};
/**
 * repeated TopologySelectorLabelRequirement matchLabelExpressions = 1;
 * @return {!Array<!proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement>}
 */
proto.k8s.io.api.core.v1.TopologySelectorTerm.prototype.getMatchlabelexpressionsList = function () {
    return /** @type{!Array<!proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement>} */ (jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement, 1));
};
/**
 * @param {!Array<!proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement>} value
 * @return {!proto.k8s.io.api.core.v1.TopologySelectorTerm} returns this
*/
proto.k8s.io.api.core.v1.TopologySelectorTerm.prototype.setMatchlabelexpressionsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement}
 */
proto.k8s.io.api.core.v1.TopologySelectorTerm.prototype.addMatchlabelexpressions = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.k8s.io.api.core.v1.TopologySelectorLabelRequirement, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.api.core.v1.TopologySelectorTerm} returns this
 */
proto.k8s.io.api.core.v1.TopologySelectorTerm.prototype.clearMatchlabelexpressionsList = function () {
    return this.setMatchlabelexpressionsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.TopologySpreadConstraint.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.TopologySpreadConstraint.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.TopologySpreadConstraint} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.TopologySpreadConstraint.toObject = function (includeInstance, msg) {
        var f, obj = {
            maxskew: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            topologykey: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            whenunsatisfiable: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            labelselector: (f = msg.getLabelselector()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.LabelSelector.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.TopologySpreadConstraint}
 */
proto.k8s.io.api.core.v1.TopologySpreadConstraint.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.TopologySpreadConstraint;
    return proto.k8s.io.api.core.v1.TopologySpreadConstraint.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.TopologySpreadConstraint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.TopologySpreadConstraint}
 */
proto.k8s.io.api.core.v1.TopologySpreadConstraint.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setMaxskew(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setTopologykey(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setWhenunsatisfiable(value);
                break;
            case 4:
                var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.LabelSelector;
                reader.readMessage(value, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.LabelSelector.deserializeBinaryFromReader);
                msg.setLabelselector(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.TopologySpreadConstraint.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.TopologySpreadConstraint.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.TopologySpreadConstraint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.TopologySpreadConstraint.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {number} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeInt32(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = message.getLabelselector();
    if (f != null) {
        writer.writeMessage(4, f, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.LabelSelector.serializeBinaryToWriter);
    }
};
/**
 * optional int32 maxSkew = 1;
 * @return {number}
 */
proto.k8s.io.api.core.v1.TopologySpreadConstraint.prototype.getMaxskew = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.TopologySpreadConstraint} returns this
 */
proto.k8s.io.api.core.v1.TopologySpreadConstraint.prototype.setMaxskew = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.TopologySpreadConstraint} returns this
 */
proto.k8s.io.api.core.v1.TopologySpreadConstraint.prototype.clearMaxskew = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.TopologySpreadConstraint.prototype.hasMaxskew = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string topologyKey = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.TopologySpreadConstraint.prototype.getTopologykey = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.TopologySpreadConstraint} returns this
 */
proto.k8s.io.api.core.v1.TopologySpreadConstraint.prototype.setTopologykey = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.TopologySpreadConstraint} returns this
 */
proto.k8s.io.api.core.v1.TopologySpreadConstraint.prototype.clearTopologykey = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.TopologySpreadConstraint.prototype.hasTopologykey = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string whenUnsatisfiable = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.TopologySpreadConstraint.prototype.getWhenunsatisfiable = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.TopologySpreadConstraint} returns this
 */
proto.k8s.io.api.core.v1.TopologySpreadConstraint.prototype.setWhenunsatisfiable = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.TopologySpreadConstraint} returns this
 */
proto.k8s.io.api.core.v1.TopologySpreadConstraint.prototype.clearWhenunsatisfiable = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.TopologySpreadConstraint.prototype.hasWhenunsatisfiable = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector labelSelector = 4;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector}
 */
proto.k8s.io.api.core.v1.TopologySpreadConstraint.prototype.getLabelselector = function () {
    return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector} */ (jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.LabelSelector, 4));
};
/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector|undefined} value
 * @return {!proto.k8s.io.api.core.v1.TopologySpreadConstraint} returns this
*/
proto.k8s.io.api.core.v1.TopologySpreadConstraint.prototype.setLabelselector = function (value) {
    return jspb.Message.setWrapperField(this, 4, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.TopologySpreadConstraint} returns this
 */
proto.k8s.io.api.core.v1.TopologySpreadConstraint.prototype.clearLabelselector = function () {
    return this.setLabelselector(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.TopologySpreadConstraint.prototype.hasLabelselector = function () {
    return jspb.Message.getField(this, 4) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.TypedLocalObjectReference.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.TypedLocalObjectReference.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.TypedLocalObjectReference} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.TypedLocalObjectReference.toObject = function (includeInstance, msg) {
        var f, obj = {
            apigroup: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            kind: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            name: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.TypedLocalObjectReference}
 */
proto.k8s.io.api.core.v1.TypedLocalObjectReference.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.TypedLocalObjectReference;
    return proto.k8s.io.api.core.v1.TypedLocalObjectReference.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.TypedLocalObjectReference} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.TypedLocalObjectReference}
 */
proto.k8s.io.api.core.v1.TypedLocalObjectReference.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setApigroup(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setKind(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.TypedLocalObjectReference.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.TypedLocalObjectReference.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.TypedLocalObjectReference} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.TypedLocalObjectReference.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
};
/**
 * optional string apiGroup = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.TypedLocalObjectReference.prototype.getApigroup = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.TypedLocalObjectReference} returns this
 */
proto.k8s.io.api.core.v1.TypedLocalObjectReference.prototype.setApigroup = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.TypedLocalObjectReference} returns this
 */
proto.k8s.io.api.core.v1.TypedLocalObjectReference.prototype.clearApigroup = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.TypedLocalObjectReference.prototype.hasApigroup = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string kind = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.TypedLocalObjectReference.prototype.getKind = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.TypedLocalObjectReference} returns this
 */
proto.k8s.io.api.core.v1.TypedLocalObjectReference.prototype.setKind = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.TypedLocalObjectReference} returns this
 */
proto.k8s.io.api.core.v1.TypedLocalObjectReference.prototype.clearKind = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.TypedLocalObjectReference.prototype.hasKind = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string name = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.TypedLocalObjectReference.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.TypedLocalObjectReference} returns this
 */
proto.k8s.io.api.core.v1.TypedLocalObjectReference.prototype.setName = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.TypedLocalObjectReference} returns this
 */
proto.k8s.io.api.core.v1.TypedLocalObjectReference.prototype.clearName = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.TypedLocalObjectReference.prototype.hasName = function () {
    return jspb.Message.getField(this, 3) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.Volume.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.Volume.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.Volume} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.Volume.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            volumesource: (f = msg.getVolumesource()) && proto.k8s.io.api.core.v1.VolumeSource.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.Volume}
 */
proto.k8s.io.api.core.v1.Volume.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.Volume;
    return proto.k8s.io.api.core.v1.Volume.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.Volume} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.Volume}
 */
proto.k8s.io.api.core.v1.Volume.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.VolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.VolumeSource.deserializeBinaryFromReader);
                msg.setVolumesource(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.Volume.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.Volume.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.Volume} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.Volume.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = message.getVolumesource();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.VolumeSource.serializeBinaryToWriter);
    }
};
/**
 * optional string name = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.Volume.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.Volume} returns this
 */
proto.k8s.io.api.core.v1.Volume.prototype.setName = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Volume} returns this
 */
proto.k8s.io.api.core.v1.Volume.prototype.clearName = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Volume.prototype.hasName = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional VolumeSource volumeSource = 2;
 * @return {?proto.k8s.io.api.core.v1.VolumeSource}
 */
proto.k8s.io.api.core.v1.Volume.prototype.getVolumesource = function () {
    return /** @type{?proto.k8s.io.api.core.v1.VolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.VolumeSource, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.VolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.Volume} returns this
*/
proto.k8s.io.api.core.v1.Volume.prototype.setVolumesource = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.Volume} returns this
 */
proto.k8s.io.api.core.v1.Volume.prototype.clearVolumesource = function () {
    return this.setVolumesource(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.Volume.prototype.hasVolumesource = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.VolumeDevice.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.VolumeDevice.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.VolumeDevice} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.VolumeDevice.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            devicepath: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.VolumeDevice}
 */
proto.k8s.io.api.core.v1.VolumeDevice.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.VolumeDevice;
    return proto.k8s.io.api.core.v1.VolumeDevice.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.VolumeDevice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.VolumeDevice}
 */
proto.k8s.io.api.core.v1.VolumeDevice.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setDevicepath(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.VolumeDevice.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.VolumeDevice.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.VolumeDevice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.VolumeDevice.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
};
/**
 * optional string name = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.VolumeDevice.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.VolumeDevice} returns this
 */
proto.k8s.io.api.core.v1.VolumeDevice.prototype.setName = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeDevice} returns this
 */
proto.k8s.io.api.core.v1.VolumeDevice.prototype.clearName = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeDevice.prototype.hasName = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string devicePath = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.VolumeDevice.prototype.getDevicepath = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.VolumeDevice} returns this
 */
proto.k8s.io.api.core.v1.VolumeDevice.prototype.setDevicepath = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeDevice} returns this
 */
proto.k8s.io.api.core.v1.VolumeDevice.prototype.clearDevicepath = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeDevice.prototype.hasDevicepath = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.VolumeMount.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.VolumeMount.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.VolumeMount} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.VolumeMount.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            readonly: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
            mountpath: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            subpath: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
            mountpropagation: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
            subpathexpr: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.VolumeMount}
 */
proto.k8s.io.api.core.v1.VolumeMount.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.VolumeMount;
    return proto.k8s.io.api.core.v1.VolumeMount.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.VolumeMount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.VolumeMount}
 */
proto.k8s.io.api.core.v1.VolumeMount.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReadonly(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setMountpath(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setSubpath(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setMountpropagation(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.setSubpathexpr(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.VolumeMount.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.VolumeMount.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.VolumeMount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.VolumeMount.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeBool(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeString(5, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 6));
    if (f != null) {
        writer.writeString(6, f);
    }
};
/**
 * optional string name = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.VolumeMount.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.VolumeMount} returns this
 */
proto.k8s.io.api.core.v1.VolumeMount.prototype.setName = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeMount} returns this
 */
proto.k8s.io.api.core.v1.VolumeMount.prototype.clearName = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeMount.prototype.hasName = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional bool readOnly = 2;
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeMount.prototype.getReadonly = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};
/**
 * @param {boolean} value
 * @return {!proto.k8s.io.api.core.v1.VolumeMount} returns this
 */
proto.k8s.io.api.core.v1.VolumeMount.prototype.setReadonly = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeMount} returns this
 */
proto.k8s.io.api.core.v1.VolumeMount.prototype.clearReadonly = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeMount.prototype.hasReadonly = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string mountPath = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.VolumeMount.prototype.getMountpath = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.VolumeMount} returns this
 */
proto.k8s.io.api.core.v1.VolumeMount.prototype.setMountpath = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeMount} returns this
 */
proto.k8s.io.api.core.v1.VolumeMount.prototype.clearMountpath = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeMount.prototype.hasMountpath = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string subPath = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.VolumeMount.prototype.getSubpath = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.VolumeMount} returns this
 */
proto.k8s.io.api.core.v1.VolumeMount.prototype.setSubpath = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeMount} returns this
 */
proto.k8s.io.api.core.v1.VolumeMount.prototype.clearSubpath = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeMount.prototype.hasSubpath = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional string mountPropagation = 5;
 * @return {string}
 */
proto.k8s.io.api.core.v1.VolumeMount.prototype.getMountpropagation = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.VolumeMount} returns this
 */
proto.k8s.io.api.core.v1.VolumeMount.prototype.setMountpropagation = function (value) {
    return jspb.Message.setField(this, 5, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeMount} returns this
 */
proto.k8s.io.api.core.v1.VolumeMount.prototype.clearMountpropagation = function () {
    return jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeMount.prototype.hasMountpropagation = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional string subPathExpr = 6;
 * @return {string}
 */
proto.k8s.io.api.core.v1.VolumeMount.prototype.getSubpathexpr = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.VolumeMount} returns this
 */
proto.k8s.io.api.core.v1.VolumeMount.prototype.setSubpathexpr = function (value) {
    return jspb.Message.setField(this, 6, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeMount} returns this
 */
proto.k8s.io.api.core.v1.VolumeMount.prototype.clearSubpathexpr = function () {
    return jspb.Message.setField(this, 6, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeMount.prototype.hasSubpathexpr = function () {
    return jspb.Message.getField(this, 6) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.VolumeNodeAffinity.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.VolumeNodeAffinity.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.VolumeNodeAffinity} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.VolumeNodeAffinity.toObject = function (includeInstance, msg) {
        var f, obj = {
            required: (f = msg.getRequired()) && proto.k8s.io.api.core.v1.NodeSelector.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.VolumeNodeAffinity}
 */
proto.k8s.io.api.core.v1.VolumeNodeAffinity.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.VolumeNodeAffinity;
    return proto.k8s.io.api.core.v1.VolumeNodeAffinity.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.VolumeNodeAffinity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.VolumeNodeAffinity}
 */
proto.k8s.io.api.core.v1.VolumeNodeAffinity.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.NodeSelector;
                reader.readMessage(value, proto.k8s.io.api.core.v1.NodeSelector.deserializeBinaryFromReader);
                msg.setRequired(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.VolumeNodeAffinity.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.VolumeNodeAffinity.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.VolumeNodeAffinity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.VolumeNodeAffinity.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getRequired();
    if (f != null) {
        writer.writeMessage(1, f, proto.k8s.io.api.core.v1.NodeSelector.serializeBinaryToWriter);
    }
};
/**
 * optional NodeSelector required = 1;
 * @return {?proto.k8s.io.api.core.v1.NodeSelector}
 */
proto.k8s.io.api.core.v1.VolumeNodeAffinity.prototype.getRequired = function () {
    return /** @type{?proto.k8s.io.api.core.v1.NodeSelector} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.NodeSelector, 1));
};
/**
 * @param {?proto.k8s.io.api.core.v1.NodeSelector|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeNodeAffinity} returns this
*/
proto.k8s.io.api.core.v1.VolumeNodeAffinity.prototype.setRequired = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeNodeAffinity} returns this
 */
proto.k8s.io.api.core.v1.VolumeNodeAffinity.prototype.clearRequired = function () {
    return this.setRequired(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeNodeAffinity.prototype.hasRequired = function () {
    return jspb.Message.getField(this, 1) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.VolumeProjection.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.VolumeProjection.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.VolumeProjection} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.VolumeProjection.toObject = function (includeInstance, msg) {
        var f, obj = {
            secret: (f = msg.getSecret()) && proto.k8s.io.api.core.v1.SecretProjection.toObject(includeInstance, f),
            downwardapi: (f = msg.getDownwardapi()) && proto.k8s.io.api.core.v1.DownwardAPIProjection.toObject(includeInstance, f),
            configmap: (f = msg.getConfigmap()) && proto.k8s.io.api.core.v1.ConfigMapProjection.toObject(includeInstance, f),
            serviceaccounttoken: (f = msg.getServiceaccounttoken()) && proto.k8s.io.api.core.v1.ServiceAccountTokenProjection.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.VolumeProjection}
 */
proto.k8s.io.api.core.v1.VolumeProjection.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.VolumeProjection;
    return proto.k8s.io.api.core.v1.VolumeProjection.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.VolumeProjection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.VolumeProjection}
 */
proto.k8s.io.api.core.v1.VolumeProjection.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.SecretProjection;
                reader.readMessage(value, proto.k8s.io.api.core.v1.SecretProjection.deserializeBinaryFromReader);
                msg.setSecret(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.DownwardAPIProjection;
                reader.readMessage(value, proto.k8s.io.api.core.v1.DownwardAPIProjection.deserializeBinaryFromReader);
                msg.setDownwardapi(value);
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.ConfigMapProjection;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ConfigMapProjection.deserializeBinaryFromReader);
                msg.setConfigmap(value);
                break;
            case 4:
                var value = new proto.k8s.io.api.core.v1.ServiceAccountTokenProjection;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ServiceAccountTokenProjection.deserializeBinaryFromReader);
                msg.setServiceaccounttoken(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.VolumeProjection.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.VolumeProjection.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.VolumeProjection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.VolumeProjection.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getSecret();
    if (f != null) {
        writer.writeMessage(1, f, proto.k8s.io.api.core.v1.SecretProjection.serializeBinaryToWriter);
    }
    f = message.getDownwardapi();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.DownwardAPIProjection.serializeBinaryToWriter);
    }
    f = message.getConfigmap();
    if (f != null) {
        writer.writeMessage(3, f, proto.k8s.io.api.core.v1.ConfigMapProjection.serializeBinaryToWriter);
    }
    f = message.getServiceaccounttoken();
    if (f != null) {
        writer.writeMessage(4, f, proto.k8s.io.api.core.v1.ServiceAccountTokenProjection.serializeBinaryToWriter);
    }
};
/**
 * optional SecretProjection secret = 1;
 * @return {?proto.k8s.io.api.core.v1.SecretProjection}
 */
proto.k8s.io.api.core.v1.VolumeProjection.prototype.getSecret = function () {
    return /** @type{?proto.k8s.io.api.core.v1.SecretProjection} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.SecretProjection, 1));
};
/**
 * @param {?proto.k8s.io.api.core.v1.SecretProjection|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeProjection} returns this
*/
proto.k8s.io.api.core.v1.VolumeProjection.prototype.setSecret = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeProjection} returns this
 */
proto.k8s.io.api.core.v1.VolumeProjection.prototype.clearSecret = function () {
    return this.setSecret(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeProjection.prototype.hasSecret = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional DownwardAPIProjection downwardAPI = 2;
 * @return {?proto.k8s.io.api.core.v1.DownwardAPIProjection}
 */
proto.k8s.io.api.core.v1.VolumeProjection.prototype.getDownwardapi = function () {
    return /** @type{?proto.k8s.io.api.core.v1.DownwardAPIProjection} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.DownwardAPIProjection, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.DownwardAPIProjection|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeProjection} returns this
*/
proto.k8s.io.api.core.v1.VolumeProjection.prototype.setDownwardapi = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeProjection} returns this
 */
proto.k8s.io.api.core.v1.VolumeProjection.prototype.clearDownwardapi = function () {
    return this.setDownwardapi(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeProjection.prototype.hasDownwardapi = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional ConfigMapProjection configMap = 3;
 * @return {?proto.k8s.io.api.core.v1.ConfigMapProjection}
 */
proto.k8s.io.api.core.v1.VolumeProjection.prototype.getConfigmap = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ConfigMapProjection} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ConfigMapProjection, 3));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ConfigMapProjection|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeProjection} returns this
*/
proto.k8s.io.api.core.v1.VolumeProjection.prototype.setConfigmap = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeProjection} returns this
 */
proto.k8s.io.api.core.v1.VolumeProjection.prototype.clearConfigmap = function () {
    return this.setConfigmap(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeProjection.prototype.hasConfigmap = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional ServiceAccountTokenProjection serviceAccountToken = 4;
 * @return {?proto.k8s.io.api.core.v1.ServiceAccountTokenProjection}
 */
proto.k8s.io.api.core.v1.VolumeProjection.prototype.getServiceaccounttoken = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ServiceAccountTokenProjection} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ServiceAccountTokenProjection, 4));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ServiceAccountTokenProjection|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeProjection} returns this
*/
proto.k8s.io.api.core.v1.VolumeProjection.prototype.setServiceaccounttoken = function (value) {
    return jspb.Message.setWrapperField(this, 4, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeProjection} returns this
 */
proto.k8s.io.api.core.v1.VolumeProjection.prototype.clearServiceaccounttoken = function () {
    return this.setServiceaccounttoken(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeProjection.prototype.hasServiceaccounttoken = function () {
    return jspb.Message.getField(this, 4) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.VolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.VolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.VolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.VolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            hostpath: (f = msg.getHostpath()) && proto.k8s.io.api.core.v1.HostPathVolumeSource.toObject(includeInstance, f),
            emptydir: (f = msg.getEmptydir()) && proto.k8s.io.api.core.v1.EmptyDirVolumeSource.toObject(includeInstance, f),
            gcepersistentdisk: (f = msg.getGcepersistentdisk()) && proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.toObject(includeInstance, f),
            awselasticblockstore: (f = msg.getAwselasticblockstore()) && proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.toObject(includeInstance, f),
            gitrepo: (f = msg.getGitrepo()) && proto.k8s.io.api.core.v1.GitRepoVolumeSource.toObject(includeInstance, f),
            secret: (f = msg.getSecret()) && proto.k8s.io.api.core.v1.SecretVolumeSource.toObject(includeInstance, f),
            nfs: (f = msg.getNfs()) && proto.k8s.io.api.core.v1.NFSVolumeSource.toObject(includeInstance, f),
            iscsi: (f = msg.getIscsi()) && proto.k8s.io.api.core.v1.ISCSIVolumeSource.toObject(includeInstance, f),
            glusterfs: (f = msg.getGlusterfs()) && proto.k8s.io.api.core.v1.GlusterfsVolumeSource.toObject(includeInstance, f),
            persistentvolumeclaim: (f = msg.getPersistentvolumeclaim()) && proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource.toObject(includeInstance, f),
            rbd: (f = msg.getRbd()) && proto.k8s.io.api.core.v1.RBDVolumeSource.toObject(includeInstance, f),
            flexvolume: (f = msg.getFlexvolume()) && proto.k8s.io.api.core.v1.FlexVolumeSource.toObject(includeInstance, f),
            cinder: (f = msg.getCinder()) && proto.k8s.io.api.core.v1.CinderVolumeSource.toObject(includeInstance, f),
            cephfs: (f = msg.getCephfs()) && proto.k8s.io.api.core.v1.CephFSVolumeSource.toObject(includeInstance, f),
            flocker: (f = msg.getFlocker()) && proto.k8s.io.api.core.v1.FlockerVolumeSource.toObject(includeInstance, f),
            downwardapi: (f = msg.getDownwardapi()) && proto.k8s.io.api.core.v1.DownwardAPIVolumeSource.toObject(includeInstance, f),
            fc: (f = msg.getFc()) && proto.k8s.io.api.core.v1.FCVolumeSource.toObject(includeInstance, f),
            azurefile: (f = msg.getAzurefile()) && proto.k8s.io.api.core.v1.AzureFileVolumeSource.toObject(includeInstance, f),
            configmap: (f = msg.getConfigmap()) && proto.k8s.io.api.core.v1.ConfigMapVolumeSource.toObject(includeInstance, f),
            vspherevolume: (f = msg.getVspherevolume()) && proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.toObject(includeInstance, f),
            quobyte: (f = msg.getQuobyte()) && proto.k8s.io.api.core.v1.QuobyteVolumeSource.toObject(includeInstance, f),
            azuredisk: (f = msg.getAzuredisk()) && proto.k8s.io.api.core.v1.AzureDiskVolumeSource.toObject(includeInstance, f),
            photonpersistentdisk: (f = msg.getPhotonpersistentdisk()) && proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource.toObject(includeInstance, f),
            projected: (f = msg.getProjected()) && proto.k8s.io.api.core.v1.ProjectedVolumeSource.toObject(includeInstance, f),
            portworxvolume: (f = msg.getPortworxvolume()) && proto.k8s.io.api.core.v1.PortworxVolumeSource.toObject(includeInstance, f),
            scaleio: (f = msg.getScaleio()) && proto.k8s.io.api.core.v1.ScaleIOVolumeSource.toObject(includeInstance, f),
            storageos: (f = msg.getStorageos()) && proto.k8s.io.api.core.v1.StorageOSVolumeSource.toObject(includeInstance, f),
            csi: (f = msg.getCsi()) && proto.k8s.io.api.core.v1.CSIVolumeSource.toObject(includeInstance, f),
            ephemeral: (f = msg.getEphemeral()) && proto.k8s.io.api.core.v1.EphemeralVolumeSource.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.VolumeSource;
    return proto.k8s.io.api.core.v1.VolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.VolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.k8s.io.api.core.v1.HostPathVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.HostPathVolumeSource.deserializeBinaryFromReader);
                msg.setHostpath(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.EmptyDirVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.EmptyDirVolumeSource.deserializeBinaryFromReader);
                msg.setEmptydir(value);
                break;
            case 3:
                var value = new proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.deserializeBinaryFromReader);
                msg.setGcepersistentdisk(value);
                break;
            case 4:
                var value = new proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.deserializeBinaryFromReader);
                msg.setAwselasticblockstore(value);
                break;
            case 5:
                var value = new proto.k8s.io.api.core.v1.GitRepoVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.GitRepoVolumeSource.deserializeBinaryFromReader);
                msg.setGitrepo(value);
                break;
            case 6:
                var value = new proto.k8s.io.api.core.v1.SecretVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.SecretVolumeSource.deserializeBinaryFromReader);
                msg.setSecret(value);
                break;
            case 7:
                var value = new proto.k8s.io.api.core.v1.NFSVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.NFSVolumeSource.deserializeBinaryFromReader);
                msg.setNfs(value);
                break;
            case 8:
                var value = new proto.k8s.io.api.core.v1.ISCSIVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ISCSIVolumeSource.deserializeBinaryFromReader);
                msg.setIscsi(value);
                break;
            case 9:
                var value = new proto.k8s.io.api.core.v1.GlusterfsVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.GlusterfsVolumeSource.deserializeBinaryFromReader);
                msg.setGlusterfs(value);
                break;
            case 10:
                var value = new proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource.deserializeBinaryFromReader);
                msg.setPersistentvolumeclaim(value);
                break;
            case 11:
                var value = new proto.k8s.io.api.core.v1.RBDVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.RBDVolumeSource.deserializeBinaryFromReader);
                msg.setRbd(value);
                break;
            case 12:
                var value = new proto.k8s.io.api.core.v1.FlexVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.FlexVolumeSource.deserializeBinaryFromReader);
                msg.setFlexvolume(value);
                break;
            case 13:
                var value = new proto.k8s.io.api.core.v1.CinderVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.CinderVolumeSource.deserializeBinaryFromReader);
                msg.setCinder(value);
                break;
            case 14:
                var value = new proto.k8s.io.api.core.v1.CephFSVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.CephFSVolumeSource.deserializeBinaryFromReader);
                msg.setCephfs(value);
                break;
            case 15:
                var value = new proto.k8s.io.api.core.v1.FlockerVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.FlockerVolumeSource.deserializeBinaryFromReader);
                msg.setFlocker(value);
                break;
            case 16:
                var value = new proto.k8s.io.api.core.v1.DownwardAPIVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.DownwardAPIVolumeSource.deserializeBinaryFromReader);
                msg.setDownwardapi(value);
                break;
            case 17:
                var value = new proto.k8s.io.api.core.v1.FCVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.FCVolumeSource.deserializeBinaryFromReader);
                msg.setFc(value);
                break;
            case 18:
                var value = new proto.k8s.io.api.core.v1.AzureFileVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.AzureFileVolumeSource.deserializeBinaryFromReader);
                msg.setAzurefile(value);
                break;
            case 19:
                var value = new proto.k8s.io.api.core.v1.ConfigMapVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ConfigMapVolumeSource.deserializeBinaryFromReader);
                msg.setConfigmap(value);
                break;
            case 20:
                var value = new proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.deserializeBinaryFromReader);
                msg.setVspherevolume(value);
                break;
            case 21:
                var value = new proto.k8s.io.api.core.v1.QuobyteVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.QuobyteVolumeSource.deserializeBinaryFromReader);
                msg.setQuobyte(value);
                break;
            case 22:
                var value = new proto.k8s.io.api.core.v1.AzureDiskVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.AzureDiskVolumeSource.deserializeBinaryFromReader);
                msg.setAzuredisk(value);
                break;
            case 23:
                var value = new proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource.deserializeBinaryFromReader);
                msg.setPhotonpersistentdisk(value);
                break;
            case 26:
                var value = new proto.k8s.io.api.core.v1.ProjectedVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ProjectedVolumeSource.deserializeBinaryFromReader);
                msg.setProjected(value);
                break;
            case 24:
                var value = new proto.k8s.io.api.core.v1.PortworxVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PortworxVolumeSource.deserializeBinaryFromReader);
                msg.setPortworxvolume(value);
                break;
            case 25:
                var value = new proto.k8s.io.api.core.v1.ScaleIOVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.ScaleIOVolumeSource.deserializeBinaryFromReader);
                msg.setScaleio(value);
                break;
            case 27:
                var value = new proto.k8s.io.api.core.v1.StorageOSVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.StorageOSVolumeSource.deserializeBinaryFromReader);
                msg.setStorageos(value);
                break;
            case 28:
                var value = new proto.k8s.io.api.core.v1.CSIVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.CSIVolumeSource.deserializeBinaryFromReader);
                msg.setCsi(value);
                break;
            case 29:
                var value = new proto.k8s.io.api.core.v1.EphemeralVolumeSource;
                reader.readMessage(value, proto.k8s.io.api.core.v1.EphemeralVolumeSource.deserializeBinaryFromReader);
                msg.setEphemeral(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.VolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.VolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.VolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getHostpath();
    if (f != null) {
        writer.writeMessage(1, f, proto.k8s.io.api.core.v1.HostPathVolumeSource.serializeBinaryToWriter);
    }
    f = message.getEmptydir();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.EmptyDirVolumeSource.serializeBinaryToWriter);
    }
    f = message.getGcepersistentdisk();
    if (f != null) {
        writer.writeMessage(3, f, proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.serializeBinaryToWriter);
    }
    f = message.getAwselasticblockstore();
    if (f != null) {
        writer.writeMessage(4, f, proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.serializeBinaryToWriter);
    }
    f = message.getGitrepo();
    if (f != null) {
        writer.writeMessage(5, f, proto.k8s.io.api.core.v1.GitRepoVolumeSource.serializeBinaryToWriter);
    }
    f = message.getSecret();
    if (f != null) {
        writer.writeMessage(6, f, proto.k8s.io.api.core.v1.SecretVolumeSource.serializeBinaryToWriter);
    }
    f = message.getNfs();
    if (f != null) {
        writer.writeMessage(7, f, proto.k8s.io.api.core.v1.NFSVolumeSource.serializeBinaryToWriter);
    }
    f = message.getIscsi();
    if (f != null) {
        writer.writeMessage(8, f, proto.k8s.io.api.core.v1.ISCSIVolumeSource.serializeBinaryToWriter);
    }
    f = message.getGlusterfs();
    if (f != null) {
        writer.writeMessage(9, f, proto.k8s.io.api.core.v1.GlusterfsVolumeSource.serializeBinaryToWriter);
    }
    f = message.getPersistentvolumeclaim();
    if (f != null) {
        writer.writeMessage(10, f, proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource.serializeBinaryToWriter);
    }
    f = message.getRbd();
    if (f != null) {
        writer.writeMessage(11, f, proto.k8s.io.api.core.v1.RBDVolumeSource.serializeBinaryToWriter);
    }
    f = message.getFlexvolume();
    if (f != null) {
        writer.writeMessage(12, f, proto.k8s.io.api.core.v1.FlexVolumeSource.serializeBinaryToWriter);
    }
    f = message.getCinder();
    if (f != null) {
        writer.writeMessage(13, f, proto.k8s.io.api.core.v1.CinderVolumeSource.serializeBinaryToWriter);
    }
    f = message.getCephfs();
    if (f != null) {
        writer.writeMessage(14, f, proto.k8s.io.api.core.v1.CephFSVolumeSource.serializeBinaryToWriter);
    }
    f = message.getFlocker();
    if (f != null) {
        writer.writeMessage(15, f, proto.k8s.io.api.core.v1.FlockerVolumeSource.serializeBinaryToWriter);
    }
    f = message.getDownwardapi();
    if (f != null) {
        writer.writeMessage(16, f, proto.k8s.io.api.core.v1.DownwardAPIVolumeSource.serializeBinaryToWriter);
    }
    f = message.getFc();
    if (f != null) {
        writer.writeMessage(17, f, proto.k8s.io.api.core.v1.FCVolumeSource.serializeBinaryToWriter);
    }
    f = message.getAzurefile();
    if (f != null) {
        writer.writeMessage(18, f, proto.k8s.io.api.core.v1.AzureFileVolumeSource.serializeBinaryToWriter);
    }
    f = message.getConfigmap();
    if (f != null) {
        writer.writeMessage(19, f, proto.k8s.io.api.core.v1.ConfigMapVolumeSource.serializeBinaryToWriter);
    }
    f = message.getVspherevolume();
    if (f != null) {
        writer.writeMessage(20, f, proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.serializeBinaryToWriter);
    }
    f = message.getQuobyte();
    if (f != null) {
        writer.writeMessage(21, f, proto.k8s.io.api.core.v1.QuobyteVolumeSource.serializeBinaryToWriter);
    }
    f = message.getAzuredisk();
    if (f != null) {
        writer.writeMessage(22, f, proto.k8s.io.api.core.v1.AzureDiskVolumeSource.serializeBinaryToWriter);
    }
    f = message.getPhotonpersistentdisk();
    if (f != null) {
        writer.writeMessage(23, f, proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource.serializeBinaryToWriter);
    }
    f = message.getProjected();
    if (f != null) {
        writer.writeMessage(26, f, proto.k8s.io.api.core.v1.ProjectedVolumeSource.serializeBinaryToWriter);
    }
    f = message.getPortworxvolume();
    if (f != null) {
        writer.writeMessage(24, f, proto.k8s.io.api.core.v1.PortworxVolumeSource.serializeBinaryToWriter);
    }
    f = message.getScaleio();
    if (f != null) {
        writer.writeMessage(25, f, proto.k8s.io.api.core.v1.ScaleIOVolumeSource.serializeBinaryToWriter);
    }
    f = message.getStorageos();
    if (f != null) {
        writer.writeMessage(27, f, proto.k8s.io.api.core.v1.StorageOSVolumeSource.serializeBinaryToWriter);
    }
    f = message.getCsi();
    if (f != null) {
        writer.writeMessage(28, f, proto.k8s.io.api.core.v1.CSIVolumeSource.serializeBinaryToWriter);
    }
    f = message.getEphemeral();
    if (f != null) {
        writer.writeMessage(29, f, proto.k8s.io.api.core.v1.EphemeralVolumeSource.serializeBinaryToWriter);
    }
};
/**
 * optional HostPathVolumeSource hostPath = 1;
 * @return {?proto.k8s.io.api.core.v1.HostPathVolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.getHostpath = function () {
    return /** @type{?proto.k8s.io.api.core.v1.HostPathVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.HostPathVolumeSource, 1));
};
/**
 * @param {?proto.k8s.io.api.core.v1.HostPathVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
*/
proto.k8s.io.api.core.v1.VolumeSource.prototype.setHostpath = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.clearHostpath = function () {
    return this.setHostpath(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.hasHostpath = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional EmptyDirVolumeSource emptyDir = 2;
 * @return {?proto.k8s.io.api.core.v1.EmptyDirVolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.getEmptydir = function () {
    return /** @type{?proto.k8s.io.api.core.v1.EmptyDirVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.EmptyDirVolumeSource, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.EmptyDirVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
*/
proto.k8s.io.api.core.v1.VolumeSource.prototype.setEmptydir = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.clearEmptydir = function () {
    return this.setEmptydir(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.hasEmptydir = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional GCEPersistentDiskVolumeSource gcePersistentDisk = 3;
 * @return {?proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.getGcepersistentdisk = function () {
    return /** @type{?proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource, 3));
};
/**
 * @param {?proto.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
*/
proto.k8s.io.api.core.v1.VolumeSource.prototype.setGcepersistentdisk = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.clearGcepersistentdisk = function () {
    return this.setGcepersistentdisk(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.hasGcepersistentdisk = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional AWSElasticBlockStoreVolumeSource awsElasticBlockStore = 4;
 * @return {?proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.getAwselasticblockstore = function () {
    return /** @type{?proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource, 4));
};
/**
 * @param {?proto.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
*/
proto.k8s.io.api.core.v1.VolumeSource.prototype.setAwselasticblockstore = function (value) {
    return jspb.Message.setWrapperField(this, 4, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.clearAwselasticblockstore = function () {
    return this.setAwselasticblockstore(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.hasAwselasticblockstore = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional GitRepoVolumeSource gitRepo = 5;
 * @return {?proto.k8s.io.api.core.v1.GitRepoVolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.getGitrepo = function () {
    return /** @type{?proto.k8s.io.api.core.v1.GitRepoVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.GitRepoVolumeSource, 5));
};
/**
 * @param {?proto.k8s.io.api.core.v1.GitRepoVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
*/
proto.k8s.io.api.core.v1.VolumeSource.prototype.setGitrepo = function (value) {
    return jspb.Message.setWrapperField(this, 5, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.clearGitrepo = function () {
    return this.setGitrepo(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.hasGitrepo = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional SecretVolumeSource secret = 6;
 * @return {?proto.k8s.io.api.core.v1.SecretVolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.getSecret = function () {
    return /** @type{?proto.k8s.io.api.core.v1.SecretVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.SecretVolumeSource, 6));
};
/**
 * @param {?proto.k8s.io.api.core.v1.SecretVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
*/
proto.k8s.io.api.core.v1.VolumeSource.prototype.setSecret = function (value) {
    return jspb.Message.setWrapperField(this, 6, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.clearSecret = function () {
    return this.setSecret(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.hasSecret = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * optional NFSVolumeSource nfs = 7;
 * @return {?proto.k8s.io.api.core.v1.NFSVolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.getNfs = function () {
    return /** @type{?proto.k8s.io.api.core.v1.NFSVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.NFSVolumeSource, 7));
};
/**
 * @param {?proto.k8s.io.api.core.v1.NFSVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
*/
proto.k8s.io.api.core.v1.VolumeSource.prototype.setNfs = function (value) {
    return jspb.Message.setWrapperField(this, 7, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.clearNfs = function () {
    return this.setNfs(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.hasNfs = function () {
    return jspb.Message.getField(this, 7) != null;
};
/**
 * optional ISCSIVolumeSource iscsi = 8;
 * @return {?proto.k8s.io.api.core.v1.ISCSIVolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.getIscsi = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ISCSIVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ISCSIVolumeSource, 8));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ISCSIVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
*/
proto.k8s.io.api.core.v1.VolumeSource.prototype.setIscsi = function (value) {
    return jspb.Message.setWrapperField(this, 8, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.clearIscsi = function () {
    return this.setIscsi(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.hasIscsi = function () {
    return jspb.Message.getField(this, 8) != null;
};
/**
 * optional GlusterfsVolumeSource glusterfs = 9;
 * @return {?proto.k8s.io.api.core.v1.GlusterfsVolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.getGlusterfs = function () {
    return /** @type{?proto.k8s.io.api.core.v1.GlusterfsVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.GlusterfsVolumeSource, 9));
};
/**
 * @param {?proto.k8s.io.api.core.v1.GlusterfsVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
*/
proto.k8s.io.api.core.v1.VolumeSource.prototype.setGlusterfs = function (value) {
    return jspb.Message.setWrapperField(this, 9, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.clearGlusterfs = function () {
    return this.setGlusterfs(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.hasGlusterfs = function () {
    return jspb.Message.getField(this, 9) != null;
};
/**
 * optional PersistentVolumeClaimVolumeSource persistentVolumeClaim = 10;
 * @return {?proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.getPersistentvolumeclaim = function () {
    return /** @type{?proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource, 10));
};
/**
 * @param {?proto.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
*/
proto.k8s.io.api.core.v1.VolumeSource.prototype.setPersistentvolumeclaim = function (value) {
    return jspb.Message.setWrapperField(this, 10, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.clearPersistentvolumeclaim = function () {
    return this.setPersistentvolumeclaim(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.hasPersistentvolumeclaim = function () {
    return jspb.Message.getField(this, 10) != null;
};
/**
 * optional RBDVolumeSource rbd = 11;
 * @return {?proto.k8s.io.api.core.v1.RBDVolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.getRbd = function () {
    return /** @type{?proto.k8s.io.api.core.v1.RBDVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.RBDVolumeSource, 11));
};
/**
 * @param {?proto.k8s.io.api.core.v1.RBDVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
*/
proto.k8s.io.api.core.v1.VolumeSource.prototype.setRbd = function (value) {
    return jspb.Message.setWrapperField(this, 11, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.clearRbd = function () {
    return this.setRbd(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.hasRbd = function () {
    return jspb.Message.getField(this, 11) != null;
};
/**
 * optional FlexVolumeSource flexVolume = 12;
 * @return {?proto.k8s.io.api.core.v1.FlexVolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.getFlexvolume = function () {
    return /** @type{?proto.k8s.io.api.core.v1.FlexVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.FlexVolumeSource, 12));
};
/**
 * @param {?proto.k8s.io.api.core.v1.FlexVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
*/
proto.k8s.io.api.core.v1.VolumeSource.prototype.setFlexvolume = function (value) {
    return jspb.Message.setWrapperField(this, 12, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.clearFlexvolume = function () {
    return this.setFlexvolume(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.hasFlexvolume = function () {
    return jspb.Message.getField(this, 12) != null;
};
/**
 * optional CinderVolumeSource cinder = 13;
 * @return {?proto.k8s.io.api.core.v1.CinderVolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.getCinder = function () {
    return /** @type{?proto.k8s.io.api.core.v1.CinderVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.CinderVolumeSource, 13));
};
/**
 * @param {?proto.k8s.io.api.core.v1.CinderVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
*/
proto.k8s.io.api.core.v1.VolumeSource.prototype.setCinder = function (value) {
    return jspb.Message.setWrapperField(this, 13, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.clearCinder = function () {
    return this.setCinder(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.hasCinder = function () {
    return jspb.Message.getField(this, 13) != null;
};
/**
 * optional CephFSVolumeSource cephfs = 14;
 * @return {?proto.k8s.io.api.core.v1.CephFSVolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.getCephfs = function () {
    return /** @type{?proto.k8s.io.api.core.v1.CephFSVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.CephFSVolumeSource, 14));
};
/**
 * @param {?proto.k8s.io.api.core.v1.CephFSVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
*/
proto.k8s.io.api.core.v1.VolumeSource.prototype.setCephfs = function (value) {
    return jspb.Message.setWrapperField(this, 14, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.clearCephfs = function () {
    return this.setCephfs(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.hasCephfs = function () {
    return jspb.Message.getField(this, 14) != null;
};
/**
 * optional FlockerVolumeSource flocker = 15;
 * @return {?proto.k8s.io.api.core.v1.FlockerVolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.getFlocker = function () {
    return /** @type{?proto.k8s.io.api.core.v1.FlockerVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.FlockerVolumeSource, 15));
};
/**
 * @param {?proto.k8s.io.api.core.v1.FlockerVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
*/
proto.k8s.io.api.core.v1.VolumeSource.prototype.setFlocker = function (value) {
    return jspb.Message.setWrapperField(this, 15, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.clearFlocker = function () {
    return this.setFlocker(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.hasFlocker = function () {
    return jspb.Message.getField(this, 15) != null;
};
/**
 * optional DownwardAPIVolumeSource downwardAPI = 16;
 * @return {?proto.k8s.io.api.core.v1.DownwardAPIVolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.getDownwardapi = function () {
    return /** @type{?proto.k8s.io.api.core.v1.DownwardAPIVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.DownwardAPIVolumeSource, 16));
};
/**
 * @param {?proto.k8s.io.api.core.v1.DownwardAPIVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
*/
proto.k8s.io.api.core.v1.VolumeSource.prototype.setDownwardapi = function (value) {
    return jspb.Message.setWrapperField(this, 16, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.clearDownwardapi = function () {
    return this.setDownwardapi(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.hasDownwardapi = function () {
    return jspb.Message.getField(this, 16) != null;
};
/**
 * optional FCVolumeSource fc = 17;
 * @return {?proto.k8s.io.api.core.v1.FCVolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.getFc = function () {
    return /** @type{?proto.k8s.io.api.core.v1.FCVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.FCVolumeSource, 17));
};
/**
 * @param {?proto.k8s.io.api.core.v1.FCVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
*/
proto.k8s.io.api.core.v1.VolumeSource.prototype.setFc = function (value) {
    return jspb.Message.setWrapperField(this, 17, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.clearFc = function () {
    return this.setFc(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.hasFc = function () {
    return jspb.Message.getField(this, 17) != null;
};
/**
 * optional AzureFileVolumeSource azureFile = 18;
 * @return {?proto.k8s.io.api.core.v1.AzureFileVolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.getAzurefile = function () {
    return /** @type{?proto.k8s.io.api.core.v1.AzureFileVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.AzureFileVolumeSource, 18));
};
/**
 * @param {?proto.k8s.io.api.core.v1.AzureFileVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
*/
proto.k8s.io.api.core.v1.VolumeSource.prototype.setAzurefile = function (value) {
    return jspb.Message.setWrapperField(this, 18, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.clearAzurefile = function () {
    return this.setAzurefile(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.hasAzurefile = function () {
    return jspb.Message.getField(this, 18) != null;
};
/**
 * optional ConfigMapVolumeSource configMap = 19;
 * @return {?proto.k8s.io.api.core.v1.ConfigMapVolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.getConfigmap = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ConfigMapVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ConfigMapVolumeSource, 19));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ConfigMapVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
*/
proto.k8s.io.api.core.v1.VolumeSource.prototype.setConfigmap = function (value) {
    return jspb.Message.setWrapperField(this, 19, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.clearConfigmap = function () {
    return this.setConfigmap(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.hasConfigmap = function () {
    return jspb.Message.getField(this, 19) != null;
};
/**
 * optional VsphereVirtualDiskVolumeSource vsphereVolume = 20;
 * @return {?proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.getVspherevolume = function () {
    return /** @type{?proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource, 20));
};
/**
 * @param {?proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
*/
proto.k8s.io.api.core.v1.VolumeSource.prototype.setVspherevolume = function (value) {
    return jspb.Message.setWrapperField(this, 20, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.clearVspherevolume = function () {
    return this.setVspherevolume(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.hasVspherevolume = function () {
    return jspb.Message.getField(this, 20) != null;
};
/**
 * optional QuobyteVolumeSource quobyte = 21;
 * @return {?proto.k8s.io.api.core.v1.QuobyteVolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.getQuobyte = function () {
    return /** @type{?proto.k8s.io.api.core.v1.QuobyteVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.QuobyteVolumeSource, 21));
};
/**
 * @param {?proto.k8s.io.api.core.v1.QuobyteVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
*/
proto.k8s.io.api.core.v1.VolumeSource.prototype.setQuobyte = function (value) {
    return jspb.Message.setWrapperField(this, 21, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.clearQuobyte = function () {
    return this.setQuobyte(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.hasQuobyte = function () {
    return jspb.Message.getField(this, 21) != null;
};
/**
 * optional AzureDiskVolumeSource azureDisk = 22;
 * @return {?proto.k8s.io.api.core.v1.AzureDiskVolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.getAzuredisk = function () {
    return /** @type{?proto.k8s.io.api.core.v1.AzureDiskVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.AzureDiskVolumeSource, 22));
};
/**
 * @param {?proto.k8s.io.api.core.v1.AzureDiskVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
*/
proto.k8s.io.api.core.v1.VolumeSource.prototype.setAzuredisk = function (value) {
    return jspb.Message.setWrapperField(this, 22, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.clearAzuredisk = function () {
    return this.setAzuredisk(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.hasAzuredisk = function () {
    return jspb.Message.getField(this, 22) != null;
};
/**
 * optional PhotonPersistentDiskVolumeSource photonPersistentDisk = 23;
 * @return {?proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.getPhotonpersistentdisk = function () {
    return /** @type{?proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource, 23));
};
/**
 * @param {?proto.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
*/
proto.k8s.io.api.core.v1.VolumeSource.prototype.setPhotonpersistentdisk = function (value) {
    return jspb.Message.setWrapperField(this, 23, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.clearPhotonpersistentdisk = function () {
    return this.setPhotonpersistentdisk(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.hasPhotonpersistentdisk = function () {
    return jspb.Message.getField(this, 23) != null;
};
/**
 * optional ProjectedVolumeSource projected = 26;
 * @return {?proto.k8s.io.api.core.v1.ProjectedVolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.getProjected = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ProjectedVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ProjectedVolumeSource, 26));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ProjectedVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
*/
proto.k8s.io.api.core.v1.VolumeSource.prototype.setProjected = function (value) {
    return jspb.Message.setWrapperField(this, 26, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.clearProjected = function () {
    return this.setProjected(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.hasProjected = function () {
    return jspb.Message.getField(this, 26) != null;
};
/**
 * optional PortworxVolumeSource portworxVolume = 24;
 * @return {?proto.k8s.io.api.core.v1.PortworxVolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.getPortworxvolume = function () {
    return /** @type{?proto.k8s.io.api.core.v1.PortworxVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.PortworxVolumeSource, 24));
};
/**
 * @param {?proto.k8s.io.api.core.v1.PortworxVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
*/
proto.k8s.io.api.core.v1.VolumeSource.prototype.setPortworxvolume = function (value) {
    return jspb.Message.setWrapperField(this, 24, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.clearPortworxvolume = function () {
    return this.setPortworxvolume(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.hasPortworxvolume = function () {
    return jspb.Message.getField(this, 24) != null;
};
/**
 * optional ScaleIOVolumeSource scaleIO = 25;
 * @return {?proto.k8s.io.api.core.v1.ScaleIOVolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.getScaleio = function () {
    return /** @type{?proto.k8s.io.api.core.v1.ScaleIOVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.ScaleIOVolumeSource, 25));
};
/**
 * @param {?proto.k8s.io.api.core.v1.ScaleIOVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
*/
proto.k8s.io.api.core.v1.VolumeSource.prototype.setScaleio = function (value) {
    return jspb.Message.setWrapperField(this, 25, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.clearScaleio = function () {
    return this.setScaleio(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.hasScaleio = function () {
    return jspb.Message.getField(this, 25) != null;
};
/**
 * optional StorageOSVolumeSource storageos = 27;
 * @return {?proto.k8s.io.api.core.v1.StorageOSVolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.getStorageos = function () {
    return /** @type{?proto.k8s.io.api.core.v1.StorageOSVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.StorageOSVolumeSource, 27));
};
/**
 * @param {?proto.k8s.io.api.core.v1.StorageOSVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
*/
proto.k8s.io.api.core.v1.VolumeSource.prototype.setStorageos = function (value) {
    return jspb.Message.setWrapperField(this, 27, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.clearStorageos = function () {
    return this.setStorageos(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.hasStorageos = function () {
    return jspb.Message.getField(this, 27) != null;
};
/**
 * optional CSIVolumeSource csi = 28;
 * @return {?proto.k8s.io.api.core.v1.CSIVolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.getCsi = function () {
    return /** @type{?proto.k8s.io.api.core.v1.CSIVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.CSIVolumeSource, 28));
};
/**
 * @param {?proto.k8s.io.api.core.v1.CSIVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
*/
proto.k8s.io.api.core.v1.VolumeSource.prototype.setCsi = function (value) {
    return jspb.Message.setWrapperField(this, 28, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.clearCsi = function () {
    return this.setCsi(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.hasCsi = function () {
    return jspb.Message.getField(this, 28) != null;
};
/**
 * optional EphemeralVolumeSource ephemeral = 29;
 * @return {?proto.k8s.io.api.core.v1.EphemeralVolumeSource}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.getEphemeral = function () {
    return /** @type{?proto.k8s.io.api.core.v1.EphemeralVolumeSource} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.EphemeralVolumeSource, 29));
};
/**
 * @param {?proto.k8s.io.api.core.v1.EphemeralVolumeSource|undefined} value
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
*/
proto.k8s.io.api.core.v1.VolumeSource.prototype.setEphemeral = function (value) {
    return jspb.Message.setWrapperField(this, 29, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.clearEphemeral = function () {
    return this.setEphemeral(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VolumeSource.prototype.hasEphemeral = function () {
    return jspb.Message.getField(this, 29) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.toObject = function (includeInstance, msg) {
        var f, obj = {
            volumepath: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            fstype: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            storagepolicyname: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
            storagepolicyid: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource}
 */
proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource;
    return proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource}
 */
proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setVolumepath(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setFstype(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setStoragepolicyname(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setStoragepolicyid(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
};
/**
 * optional string volumePath = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.prototype.getVolumepath = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.prototype.setVolumepath = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.prototype.clearVolumepath = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.prototype.hasVolumepath = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string fsType = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.prototype.getFstype = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.prototype.setFstype = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.prototype.clearFstype = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.prototype.hasFstype = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string storagePolicyName = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.prototype.getStoragepolicyname = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.prototype.setStoragepolicyname = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.prototype.clearStoragepolicyname = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.prototype.hasStoragepolicyname = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string storagePolicyID = 4;
 * @return {string}
 */
proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.prototype.getStoragepolicyid = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.prototype.setStoragepolicyid = function (value) {
    return jspb.Message.setField(this, 4, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource} returns this
 */
proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.prototype.clearStoragepolicyid = function () {
    return jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.prototype.hasStoragepolicyid = function () {
    return jspb.Message.getField(this, 4) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.WeightedPodAffinityTerm.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.WeightedPodAffinityTerm.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.WeightedPodAffinityTerm} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.WeightedPodAffinityTerm.toObject = function (includeInstance, msg) {
        var f, obj = {
            weight: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            podaffinityterm: (f = msg.getPodaffinityterm()) && proto.k8s.io.api.core.v1.PodAffinityTerm.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.WeightedPodAffinityTerm}
 */
proto.k8s.io.api.core.v1.WeightedPodAffinityTerm.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.WeightedPodAffinityTerm;
    return proto.k8s.io.api.core.v1.WeightedPodAffinityTerm.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.WeightedPodAffinityTerm} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.WeightedPodAffinityTerm}
 */
proto.k8s.io.api.core.v1.WeightedPodAffinityTerm.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setWeight(value);
                break;
            case 2:
                var value = new proto.k8s.io.api.core.v1.PodAffinityTerm;
                reader.readMessage(value, proto.k8s.io.api.core.v1.PodAffinityTerm.deserializeBinaryFromReader);
                msg.setPodaffinityterm(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.WeightedPodAffinityTerm.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.WeightedPodAffinityTerm.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.WeightedPodAffinityTerm} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.WeightedPodAffinityTerm.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {number} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeInt32(1, f);
    }
    f = message.getPodaffinityterm();
    if (f != null) {
        writer.writeMessage(2, f, proto.k8s.io.api.core.v1.PodAffinityTerm.serializeBinaryToWriter);
    }
};
/**
 * optional int32 weight = 1;
 * @return {number}
 */
proto.k8s.io.api.core.v1.WeightedPodAffinityTerm.prototype.getWeight = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.k8s.io.api.core.v1.WeightedPodAffinityTerm} returns this
 */
proto.k8s.io.api.core.v1.WeightedPodAffinityTerm.prototype.setWeight = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.WeightedPodAffinityTerm} returns this
 */
proto.k8s.io.api.core.v1.WeightedPodAffinityTerm.prototype.clearWeight = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.WeightedPodAffinityTerm.prototype.hasWeight = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional PodAffinityTerm podAffinityTerm = 2;
 * @return {?proto.k8s.io.api.core.v1.PodAffinityTerm}
 */
proto.k8s.io.api.core.v1.WeightedPodAffinityTerm.prototype.getPodaffinityterm = function () {
    return /** @type{?proto.k8s.io.api.core.v1.PodAffinityTerm} */ (jspb.Message.getWrapperField(this, proto.k8s.io.api.core.v1.PodAffinityTerm, 2));
};
/**
 * @param {?proto.k8s.io.api.core.v1.PodAffinityTerm|undefined} value
 * @return {!proto.k8s.io.api.core.v1.WeightedPodAffinityTerm} returns this
*/
proto.k8s.io.api.core.v1.WeightedPodAffinityTerm.prototype.setPodaffinityterm = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.WeightedPodAffinityTerm} returns this
 */
proto.k8s.io.api.core.v1.WeightedPodAffinityTerm.prototype.clearPodaffinityterm = function () {
    return this.setPodaffinityterm(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.WeightedPodAffinityTerm.prototype.hasPodaffinityterm = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.k8s.io.api.core.v1.WindowsSecurityContextOptions.prototype.toObject = function (opt_includeInstance) {
        return proto.k8s.io.api.core.v1.WindowsSecurityContextOptions.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.k8s.io.api.core.v1.WindowsSecurityContextOptions} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.k8s.io.api.core.v1.WindowsSecurityContextOptions.toObject = function (includeInstance, msg) {
        var f, obj = {
            gmsacredentialspecname: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
            gmsacredentialspec: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
            runasusername: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.api.core.v1.WindowsSecurityContextOptions}
 */
proto.k8s.io.api.core.v1.WindowsSecurityContextOptions.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.k8s.io.api.core.v1.WindowsSecurityContextOptions;
    return proto.k8s.io.api.core.v1.WindowsSecurityContextOptions.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.api.core.v1.WindowsSecurityContextOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.api.core.v1.WindowsSecurityContextOptions}
 */
proto.k8s.io.api.core.v1.WindowsSecurityContextOptions.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setGmsacredentialspecname(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setGmsacredentialspec(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setRunasusername(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.api.core.v1.WindowsSecurityContextOptions.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.k8s.io.api.core.v1.WindowsSecurityContextOptions.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.api.core.v1.WindowsSecurityContextOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.api.core.v1.WindowsSecurityContextOptions.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
};
/**
 * optional string gmsaCredentialSpecName = 1;
 * @return {string}
 */
proto.k8s.io.api.core.v1.WindowsSecurityContextOptions.prototype.getGmsacredentialspecname = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.WindowsSecurityContextOptions} returns this
 */
proto.k8s.io.api.core.v1.WindowsSecurityContextOptions.prototype.setGmsacredentialspecname = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.WindowsSecurityContextOptions} returns this
 */
proto.k8s.io.api.core.v1.WindowsSecurityContextOptions.prototype.clearGmsacredentialspecname = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.WindowsSecurityContextOptions.prototype.hasGmsacredentialspecname = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string gmsaCredentialSpec = 2;
 * @return {string}
 */
proto.k8s.io.api.core.v1.WindowsSecurityContextOptions.prototype.getGmsacredentialspec = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.WindowsSecurityContextOptions} returns this
 */
proto.k8s.io.api.core.v1.WindowsSecurityContextOptions.prototype.setGmsacredentialspec = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.WindowsSecurityContextOptions} returns this
 */
proto.k8s.io.api.core.v1.WindowsSecurityContextOptions.prototype.clearGmsacredentialspec = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.WindowsSecurityContextOptions.prototype.hasGmsacredentialspec = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string runAsUserName = 3;
 * @return {string}
 */
proto.k8s.io.api.core.v1.WindowsSecurityContextOptions.prototype.getRunasusername = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.k8s.io.api.core.v1.WindowsSecurityContextOptions} returns this
 */
proto.k8s.io.api.core.v1.WindowsSecurityContextOptions.prototype.setRunasusername = function (value) {
    return jspb.Message.setField(this, 3, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.api.core.v1.WindowsSecurityContextOptions} returns this
 */
proto.k8s.io.api.core.v1.WindowsSecurityContextOptions.prototype.clearRunasusername = function () {
    return jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.api.core.v1.WindowsSecurityContextOptions.prototype.hasRunasusername = function () {
    return jspb.Message.getField(this, 3) != null;
};
goog.object.extend(exports, proto.k8s.io.api.core.v1);
//# sourceMappingURL=generated_pb.js.map