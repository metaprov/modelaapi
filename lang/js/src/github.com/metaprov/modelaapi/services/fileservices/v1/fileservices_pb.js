// source: github.com/metaprov/modelaapi/services/fileservices/v1/fileservices.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js');
goog.object.extend(proto, google_protobuf_field_mask_pb);
var google_api_annotations_pb = require('../../../../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var github_com_metaprov_modelaapi_pkg_apis_data_v1alpha1_generated_pb = require('../../../../../../github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1/generated_pb.js');
goog.object.extend(proto, github_com_metaprov_modelaapi_pkg_apis_data_v1alpha1_generated_pb);
var github_com_metaprov_modelaapi_services_common_v1_common_pb = require('../../../../../../github.com/metaprov/modelaapi/services/common/v1/common_pb.js');
goog.object.extend(proto, github_com_metaprov_modelaapi_services_common_v1_common_pb);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.services.fileservices.v1.UploadResult', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.displayName = 'proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.UploadResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.services.fileservices.v1.UploadResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.services.fileservices.v1.UploadResult.displayName = 'proto.github.com.metaprov.modelaapi.services.fileservices.v1.UploadResult';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    data: msg.getData_asB64(),
    md5Hash: jspb.Message.getFieldWithDefault(msg, 3, ""),
    tenant: jspb.Message.getFieldWithDefault(msg, 4, ""),
    dataproductname: jspb.Message.getFieldWithDefault(msg, 5, ""),
    dataproductversion: jspb.Message.getFieldWithDefault(msg, 6, ""),
    bucket: jspb.Message.getFieldWithDefault(msg, 7, ""),
    resourcetype: jspb.Message.getFieldWithDefault(msg, 8, ""),
    resourcename: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock}
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock;
  return proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock}
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMd5Hash(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTenant(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataproductname(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataproductversion(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucket(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourcetype(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourcename(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getMd5Hash();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTenant();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDataproductname();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDataproductversion();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getBucket();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getResourcetype();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getResourcename();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock} returns this
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes data = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes data = 2;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock} returns this
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string md5_hash = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.prototype.getMd5Hash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock} returns this
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.prototype.setMd5Hash = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string tenant = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.prototype.getTenant = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock} returns this
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.prototype.setTenant = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string dataProductName = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.prototype.getDataproductname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock} returns this
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.prototype.setDataproductname = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string dataProductVersion = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.prototype.getDataproductversion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock} returns this
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.prototype.setDataproductversion = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string bucket = 7;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.prototype.getBucket = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock} returns this
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.prototype.setBucket = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string resourceType = 8;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.prototype.getResourcetype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock} returns this
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.prototype.setResourcetype = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string resourceName = 9;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.prototype.getResourcename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock} returns this
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.DataBlock.prototype.setResourcename = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.UploadResult.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.services.fileservices.v1.UploadResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.services.fileservices.v1.UploadResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.UploadResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    size: jspb.Message.getFieldWithDefault(msg, 2, 0),
    duration: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.services.fileservices.v1.UploadResult}
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.UploadResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.services.fileservices.v1.UploadResult;
  return proto.github.com.metaprov.modelaapi.services.fileservices.v1.UploadResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.services.fileservices.v1.UploadResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.services.fileservices.v1.UploadResult}
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.UploadResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSize(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDuration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.UploadResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.services.fileservices.v1.UploadResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.services.fileservices.v1.UploadResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.UploadResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDuration();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.UploadResult.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.services.fileservices.v1.UploadResult} returns this
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.UploadResult.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 size = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.UploadResult.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.services.fileservices.v1.UploadResult} returns this
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.UploadResult.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 duration = 3;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.UploadResult.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.services.fileservices.v1.UploadResult} returns this
 */
proto.github.com.metaprov.modelaapi.services.fileservices.v1.UploadResult.prototype.setDuration = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


goog.object.extend(exports, proto.github.com.metaprov.modelaapi.services.fileservices.v1);
