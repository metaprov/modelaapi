/**
 * @fileoverview gRPC-Web generated client stub for github.com.metaprov.modelaapi.services.llm.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.20.3
// source: github.com/metaprov/modelaapi/services/llm/v1/llm.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as github_com_metaprov_modelaapi_services_llm_v1_llm_pb from '../../../../../../github.com/metaprov/modelaapi/services/llm/v1/llm_pb';


export class LLMServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorListLLMs = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.llm.v1.LLMService/ListLLMs',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_llm_v1_llm_pb.ListLLMsRequest,
    github_com_metaprov_modelaapi_services_llm_v1_llm_pb.ListLLMsResponse,
    (request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.ListLLMsRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_llm_v1_llm_pb.ListLLMsResponse.deserializeBinary
  );

  listLLMs(
    request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.ListLLMsRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_llm_v1_llm_pb.ListLLMsResponse>;

  listLLMs(
    request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.ListLLMsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.ListLLMsResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_llm_v1_llm_pb.ListLLMsResponse>;

  listLLMs(
    request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.ListLLMsRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.ListLLMsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.llm.v1.LLMService/ListLLMs',
        request,
        metadata || {},
        this.methodDescriptorListLLMs,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.llm.v1.LLMService/ListLLMs',
    request,
    metadata || {},
    this.methodDescriptorListLLMs);
  }

  methodDescriptorCreateLLM = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.llm.v1.LLMService/CreateLLM',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_llm_v1_llm_pb.CreateLLMRequest,
    github_com_metaprov_modelaapi_services_llm_v1_llm_pb.CreateLLMResponse,
    (request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.CreateLLMRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_llm_v1_llm_pb.CreateLLMResponse.deserializeBinary
  );

  createLLM(
    request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.CreateLLMRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_llm_v1_llm_pb.CreateLLMResponse>;

  createLLM(
    request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.CreateLLMRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.CreateLLMResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_llm_v1_llm_pb.CreateLLMResponse>;

  createLLM(
    request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.CreateLLMRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.CreateLLMResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.llm.v1.LLMService/CreateLLM',
        request,
        metadata || {},
        this.methodDescriptorCreateLLM,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.llm.v1.LLMService/CreateLLM',
    request,
    metadata || {},
    this.methodDescriptorCreateLLM);
  }

  methodDescriptorGetLLM = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.llm.v1.LLMService/GetLLM',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_llm_v1_llm_pb.GetLLMRequest,
    github_com_metaprov_modelaapi_services_llm_v1_llm_pb.GetLLMResponse,
    (request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.GetLLMRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_llm_v1_llm_pb.GetLLMResponse.deserializeBinary
  );

  getLLM(
    request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.GetLLMRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_llm_v1_llm_pb.GetLLMResponse>;

  getLLM(
    request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.GetLLMRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.GetLLMResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_llm_v1_llm_pb.GetLLMResponse>;

  getLLM(
    request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.GetLLMRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.GetLLMResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.llm.v1.LLMService/GetLLM',
        request,
        metadata || {},
        this.methodDescriptorGetLLM,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.llm.v1.LLMService/GetLLM',
    request,
    metadata || {},
    this.methodDescriptorGetLLM);
  }

  methodDescriptorUpdateLLM = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.llm.v1.LLMService/UpdateLLM',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_llm_v1_llm_pb.UpdateLLMRequest,
    github_com_metaprov_modelaapi_services_llm_v1_llm_pb.UpdateLLMResponse,
    (request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.UpdateLLMRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_llm_v1_llm_pb.UpdateLLMResponse.deserializeBinary
  );

  updateLLM(
    request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.UpdateLLMRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_llm_v1_llm_pb.UpdateLLMResponse>;

  updateLLM(
    request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.UpdateLLMRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.UpdateLLMResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_llm_v1_llm_pb.UpdateLLMResponse>;

  updateLLM(
    request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.UpdateLLMRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.UpdateLLMResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.llm.v1.LLMService/UpdateLLM',
        request,
        metadata || {},
        this.methodDescriptorUpdateLLM,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.llm.v1.LLMService/UpdateLLM',
    request,
    metadata || {},
    this.methodDescriptorUpdateLLM);
  }

  methodDescriptorDeleteLLM = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.llm.v1.LLMService/DeleteLLM',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_llm_v1_llm_pb.DeleteLLMRequest,
    github_com_metaprov_modelaapi_services_llm_v1_llm_pb.DeleteLLMResponse,
    (request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.DeleteLLMRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_llm_v1_llm_pb.DeleteLLMResponse.deserializeBinary
  );

  deleteLLM(
    request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.DeleteLLMRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_llm_v1_llm_pb.DeleteLLMResponse>;

  deleteLLM(
    request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.DeleteLLMRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.DeleteLLMResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_llm_v1_llm_pb.DeleteLLMResponse>;

  deleteLLM(
    request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.DeleteLLMRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.DeleteLLMResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.llm.v1.LLMService/DeleteLLM',
        request,
        metadata || {},
        this.methodDescriptorDeleteLLM,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.llm.v1.LLMService/DeleteLLM',
    request,
    metadata || {},
    this.methodDescriptorDeleteLLM);
  }

}

