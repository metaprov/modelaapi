/**
 * @fileoverview gRPC-Web generated client stub for 
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.20.3
// source: github.com/metaprov/modelaapi/services/llm/v1/llm.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as github_com_metaprov_modelaapi_services_llm_v1_llm_pb from '../../../../../../github.com/metaprov/modelaapi/services/llm/v1/llm_pb';


export class LLMServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorRefresh = new grpcWeb.MethodDescriptor(
    '/LLMService/Refresh',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_llm_v1_llm_pb.RefreshRequest,
    github_com_metaprov_modelaapi_services_llm_v1_llm_pb.RefreshResponse,
    (request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.RefreshRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_llm_v1_llm_pb.RefreshResponse.deserializeBinary
  );

  refresh(
    request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.RefreshRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_llm_v1_llm_pb.RefreshResponse>;

  refresh(
    request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.RefreshRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.RefreshResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_llm_v1_llm_pb.RefreshResponse>;

  refresh(
    request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.RefreshRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.RefreshResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/LLMService/Refresh',
        request,
        metadata || {},
        this.methodDescriptorRefresh,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/LLMService/Refresh',
    request,
    metadata || {},
    this.methodDescriptorRefresh);
  }

  methodDescriptorDelete = new grpcWeb.MethodDescriptor(
    '/LLMService/Delete',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_llm_v1_llm_pb.DeleteRequest,
    github_com_metaprov_modelaapi_services_llm_v1_llm_pb.DeleteResponse,
    (request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.DeleteRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_llm_v1_llm_pb.DeleteResponse.deserializeBinary
  );

  delete(
    request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.DeleteRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_llm_v1_llm_pb.DeleteResponse>;

  delete(
    request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.DeleteRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.DeleteResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_llm_v1_llm_pb.DeleteResponse>;

  delete(
    request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.DeleteRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.DeleteResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/LLMService/Delete',
        request,
        metadata || {},
        this.methodDescriptorDelete,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/LLMService/Delete',
    request,
    metadata || {},
    this.methodDescriptorDelete);
  }

  methodDescriptorShutdown = new grpcWeb.MethodDescriptor(
    '/LLMService/Shutdown',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_llm_v1_llm_pb.ShutdownRequest,
    github_com_metaprov_modelaapi_services_llm_v1_llm_pb.ShutdownResponse,
    (request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.ShutdownRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_llm_v1_llm_pb.ShutdownResponse.deserializeBinary
  );

  shutdown(
    request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.ShutdownRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_llm_v1_llm_pb.ShutdownResponse>;

  shutdown(
    request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.ShutdownRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.ShutdownResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_llm_v1_llm_pb.ShutdownResponse>;

  shutdown(
    request: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.ShutdownRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_llm_v1_llm_pb.ShutdownResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/LLMService/Shutdown',
        request,
        metadata || {},
        this.methodDescriptorShutdown,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/LLMService/Shutdown',
    request,
    metadata || {},
    this.methodDescriptorShutdown);
  }

}

