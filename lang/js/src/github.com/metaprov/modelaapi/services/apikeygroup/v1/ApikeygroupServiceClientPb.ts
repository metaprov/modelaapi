/**
 * @fileoverview gRPC-Web generated client stub for github.com.metaprov.modelaapi.services.apikeygroup.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.12.4
// source: github.com/metaprov/modelaapi/services/apikeygroup/v1/apikeygroup.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb from '../../../../../../github.com/metaprov/modelaapi/services/apikeygroup/v1/apikeygroup_pb';


export class APIKeyGroupServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorListAPIKeyGroups = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.apikeygroup.v1.APIKeyGroupService/ListAPIKeyGroups',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.ListAPIKeyGroupsRequest,
    github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.ListAPIKeyGroupsResponse,
    (request: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.ListAPIKeyGroupsRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.ListAPIKeyGroupsResponse.deserializeBinary
  );

  listAPIKeyGroups(
    request: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.ListAPIKeyGroupsRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.ListAPIKeyGroupsResponse>;

  listAPIKeyGroups(
    request: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.ListAPIKeyGroupsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.ListAPIKeyGroupsResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.ListAPIKeyGroupsResponse>;

  listAPIKeyGroups(
    request: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.ListAPIKeyGroupsRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.ListAPIKeyGroupsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.apikeygroup.v1.APIKeyGroupService/ListAPIKeyGroups',
        request,
        metadata || {},
        this.methodDescriptorListAPIKeyGroups,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.apikeygroup.v1.APIKeyGroupService/ListAPIKeyGroups',
    request,
    metadata || {},
    this.methodDescriptorListAPIKeyGroups);
  }

  methodDescriptorCreateAPIKeyGroup = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.apikeygroup.v1.APIKeyGroupService/CreateAPIKeyGroup',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.CreateAPIKeyGroupRequest,
    github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.CreateAPIKeyGroupResponse,
    (request: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.CreateAPIKeyGroupRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.CreateAPIKeyGroupResponse.deserializeBinary
  );

  createAPIKeyGroup(
    request: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.CreateAPIKeyGroupRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.CreateAPIKeyGroupResponse>;

  createAPIKeyGroup(
    request: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.CreateAPIKeyGroupRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.CreateAPIKeyGroupResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.CreateAPIKeyGroupResponse>;

  createAPIKeyGroup(
    request: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.CreateAPIKeyGroupRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.CreateAPIKeyGroupResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.apikeygroup.v1.APIKeyGroupService/CreateAPIKeyGroup',
        request,
        metadata || {},
        this.methodDescriptorCreateAPIKeyGroup,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.apikeygroup.v1.APIKeyGroupService/CreateAPIKeyGroup',
    request,
    metadata || {},
    this.methodDescriptorCreateAPIKeyGroup);
  }

  methodDescriptorGetAPIKeyGroup = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.apikeygroup.v1.APIKeyGroupService/GetAPIKeyGroup',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.GetAPIKeyGroupRequest,
    github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.GetAPIKeyGroupResponse,
    (request: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.GetAPIKeyGroupRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.GetAPIKeyGroupResponse.deserializeBinary
  );

  getAPIKeyGroup(
    request: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.GetAPIKeyGroupRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.GetAPIKeyGroupResponse>;

  getAPIKeyGroup(
    request: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.GetAPIKeyGroupRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.GetAPIKeyGroupResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.GetAPIKeyGroupResponse>;

  getAPIKeyGroup(
    request: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.GetAPIKeyGroupRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.GetAPIKeyGroupResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.apikeygroup.v1.APIKeyGroupService/GetAPIKeyGroup',
        request,
        metadata || {},
        this.methodDescriptorGetAPIKeyGroup,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.apikeygroup.v1.APIKeyGroupService/GetAPIKeyGroup',
    request,
    metadata || {},
    this.methodDescriptorGetAPIKeyGroup);
  }

  methodDescriptorUpdateAPIKeyGroup = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.apikeygroup.v1.APIKeyGroupService/UpdateAPIKeyGroup',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.UpdateAPIKeyGroupRequest,
    github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.UpdateAPIKeyGroupResponse,
    (request: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.UpdateAPIKeyGroupRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.UpdateAPIKeyGroupResponse.deserializeBinary
  );

  updateAPIKeyGroup(
    request: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.UpdateAPIKeyGroupRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.UpdateAPIKeyGroupResponse>;

  updateAPIKeyGroup(
    request: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.UpdateAPIKeyGroupRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.UpdateAPIKeyGroupResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.UpdateAPIKeyGroupResponse>;

  updateAPIKeyGroup(
    request: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.UpdateAPIKeyGroupRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.UpdateAPIKeyGroupResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.apikeygroup.v1.APIKeyGroupService/UpdateAPIKeyGroup',
        request,
        metadata || {},
        this.methodDescriptorUpdateAPIKeyGroup,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.apikeygroup.v1.APIKeyGroupService/UpdateAPIKeyGroup',
    request,
    metadata || {},
    this.methodDescriptorUpdateAPIKeyGroup);
  }

  methodDescriptorDeleteAPIKeyGroup = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.apikeygroup.v1.APIKeyGroupService/DeleteAPIKeyGroup',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.DeleteAPIKeyGroupRequest,
    github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.DeleteAPIKeyGroupResponse,
    (request: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.DeleteAPIKeyGroupRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.DeleteAPIKeyGroupResponse.deserializeBinary
  );

  deleteAPIKeyGroup(
    request: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.DeleteAPIKeyGroupRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.DeleteAPIKeyGroupResponse>;

  deleteAPIKeyGroup(
    request: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.DeleteAPIKeyGroupRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.DeleteAPIKeyGroupResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.DeleteAPIKeyGroupResponse>;

  deleteAPIKeyGroup(
    request: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.DeleteAPIKeyGroupRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.DeleteAPIKeyGroupResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.apikeygroup.v1.APIKeyGroupService/DeleteAPIKeyGroup',
        request,
        metadata || {},
        this.methodDescriptorDeleteAPIKeyGroup,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.apikeygroup.v1.APIKeyGroupService/DeleteAPIKeyGroup',
    request,
    metadata || {},
    this.methodDescriptorDeleteAPIKeyGroup);
  }

  methodDescriptorGenerateAPIKey = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.apikeygroup.v1.APIKeyGroupService/GenerateAPIKey',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.CreateAPIKeyGroupRequest,
    github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.CreateAPIKeyGroupResponse,
    (request: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.CreateAPIKeyGroupRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.CreateAPIKeyGroupResponse.deserializeBinary
  );

  generateAPIKey(
    request: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.CreateAPIKeyGroupRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.CreateAPIKeyGroupResponse>;

  generateAPIKey(
    request: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.CreateAPIKeyGroupRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.CreateAPIKeyGroupResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.CreateAPIKeyGroupResponse>;

  generateAPIKey(
    request: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.CreateAPIKeyGroupRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.CreateAPIKeyGroupResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.apikeygroup.v1.APIKeyGroupService/GenerateAPIKey',
        request,
        metadata || {},
        this.methodDescriptorGenerateAPIKey,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.apikeygroup.v1.APIKeyGroupService/GenerateAPIKey',
    request,
    metadata || {},
    this.methodDescriptorGenerateAPIKey);
  }

  methodDescriptorRefreshAPIKeyGroup = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.apikeygroup.v1.APIKeyGroupService/RefreshAPIKeyGroup',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.RefreshAPIKeyGroupRequest,
    github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.RefreshAPIKeyGroupResponse,
    (request: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.RefreshAPIKeyGroupRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.RefreshAPIKeyGroupResponse.deserializeBinary
  );

  refreshAPIKeyGroup(
    request: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.RefreshAPIKeyGroupRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.RefreshAPIKeyGroupResponse>;

  refreshAPIKeyGroup(
    request: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.RefreshAPIKeyGroupRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.RefreshAPIKeyGroupResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.RefreshAPIKeyGroupResponse>;

  refreshAPIKeyGroup(
    request: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.RefreshAPIKeyGroupRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_apikeygroup_v1_apikeygroup_pb.RefreshAPIKeyGroupResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.apikeygroup.v1.APIKeyGroupService/RefreshAPIKeyGroup',
        request,
        metadata || {},
        this.methodDescriptorRefreshAPIKeyGroup,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.apikeygroup.v1.APIKeyGroupService/RefreshAPIKeyGroup',
    request,
    metadata || {},
    this.methodDescriptorRefreshAPIKeyGroup);
  }

}

