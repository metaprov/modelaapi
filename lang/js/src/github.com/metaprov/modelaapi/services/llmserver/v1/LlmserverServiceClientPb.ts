/**
 * @fileoverview gRPC-Web generated client stub for github.com.metaprov.modelaapi.services.llmserver.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.12.4
// source: github.com/metaprov/modelaapi/services/llmserver/v1/llmserver.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb from '../../../../../../github.com/metaprov/modelaapi/services/llmserver/v1/llmserver_pb';


export class LLMServerServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorListLLMServers = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.llmserver.v1.LLMServerService/ListLLMServers',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.ListLLMServersRequest,
    github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.ListLLMServersResponse,
    (request: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.ListLLMServersRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.ListLLMServersResponse.deserializeBinary
  );

  listLLMServers(
    request: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.ListLLMServersRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.ListLLMServersResponse>;

  listLLMServers(
    request: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.ListLLMServersRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.ListLLMServersResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.ListLLMServersResponse>;

  listLLMServers(
    request: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.ListLLMServersRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.ListLLMServersResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.llmserver.v1.LLMServerService/ListLLMServers',
        request,
        metadata || {},
        this.methodDescriptorListLLMServers,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.llmserver.v1.LLMServerService/ListLLMServers',
    request,
    metadata || {},
    this.methodDescriptorListLLMServers);
  }

  methodDescriptorCreateLLMServer = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.llmserver.v1.LLMServerService/CreateLLMServer',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.CreateLLMServerRequest,
    github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.CreateLLMServerResponse,
    (request: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.CreateLLMServerRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.CreateLLMServerResponse.deserializeBinary
  );

  createLLMServer(
    request: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.CreateLLMServerRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.CreateLLMServerResponse>;

  createLLMServer(
    request: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.CreateLLMServerRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.CreateLLMServerResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.CreateLLMServerResponse>;

  createLLMServer(
    request: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.CreateLLMServerRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.CreateLLMServerResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.llmserver.v1.LLMServerService/CreateLLMServer',
        request,
        metadata || {},
        this.methodDescriptorCreateLLMServer,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.llmserver.v1.LLMServerService/CreateLLMServer',
    request,
    metadata || {},
    this.methodDescriptorCreateLLMServer);
  }

  methodDescriptorGetLLMServer = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.llmserver.v1.LLMServerService/GetLLMServer',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.GetLLMServerRequest,
    github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.GetLLMServerResponse,
    (request: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.GetLLMServerRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.GetLLMServerResponse.deserializeBinary
  );

  getLLMServer(
    request: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.GetLLMServerRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.GetLLMServerResponse>;

  getLLMServer(
    request: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.GetLLMServerRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.GetLLMServerResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.GetLLMServerResponse>;

  getLLMServer(
    request: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.GetLLMServerRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.GetLLMServerResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.llmserver.v1.LLMServerService/GetLLMServer',
        request,
        metadata || {},
        this.methodDescriptorGetLLMServer,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.llmserver.v1.LLMServerService/GetLLMServer',
    request,
    metadata || {},
    this.methodDescriptorGetLLMServer);
  }

  methodDescriptorUpdateLLMServer = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.llmserver.v1.LLMServerService/UpdateLLMServer',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.UpdateLLMServerRequest,
    github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.UpdateLLMServerResponse,
    (request: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.UpdateLLMServerRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.UpdateLLMServerResponse.deserializeBinary
  );

  updateLLMServer(
    request: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.UpdateLLMServerRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.UpdateLLMServerResponse>;

  updateLLMServer(
    request: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.UpdateLLMServerRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.UpdateLLMServerResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.UpdateLLMServerResponse>;

  updateLLMServer(
    request: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.UpdateLLMServerRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.UpdateLLMServerResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.llmserver.v1.LLMServerService/UpdateLLMServer',
        request,
        metadata || {},
        this.methodDescriptorUpdateLLMServer,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.llmserver.v1.LLMServerService/UpdateLLMServer',
    request,
    metadata || {},
    this.methodDescriptorUpdateLLMServer);
  }

  methodDescriptorDeleteLLMServer = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.llmserver.v1.LLMServerService/DeleteLLMServer',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.DeleteLLMServerRequest,
    github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.DeleteLLMServerResponse,
    (request: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.DeleteLLMServerRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.DeleteLLMServerResponse.deserializeBinary
  );

  deleteLLMServer(
    request: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.DeleteLLMServerRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.DeleteLLMServerResponse>;

  deleteLLMServer(
    request: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.DeleteLLMServerRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.DeleteLLMServerResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.DeleteLLMServerResponse>;

  deleteLLMServer(
    request: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.DeleteLLMServerRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.DeleteLLMServerResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.llmserver.v1.LLMServerService/DeleteLLMServer',
        request,
        metadata || {},
        this.methodDescriptorDeleteLLMServer,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.llmserver.v1.LLMServerService/DeleteLLMServer',
    request,
    metadata || {},
    this.methodDescriptorDeleteLLMServer);
  }

  methodDescriptorRefreshLLMServer = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.llmserver.v1.LLMServerService/RefreshLLMServer',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.DeleteLLMServerRequest,
    github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.RefreshLLMServerResponse,
    (request: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.DeleteLLMServerRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.RefreshLLMServerResponse.deserializeBinary
  );

  refreshLLMServer(
    request: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.DeleteLLMServerRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.RefreshLLMServerResponse>;

  refreshLLMServer(
    request: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.DeleteLLMServerRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.RefreshLLMServerResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.RefreshLLMServerResponse>;

  refreshLLMServer(
    request: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.DeleteLLMServerRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_llmserver_v1_llmserver_pb.RefreshLLMServerResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.llmserver.v1.LLMServerService/RefreshLLMServer',
        request,
        metadata || {},
        this.methodDescriptorRefreshLLMServer,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.llmserver.v1.LLMServerService/RefreshLLMServer',
    request,
    metadata || {},
    this.methodDescriptorRefreshLLMServer);
  }

}

