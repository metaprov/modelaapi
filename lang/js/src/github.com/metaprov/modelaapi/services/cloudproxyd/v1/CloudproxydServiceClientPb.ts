/**
 * @fileoverview gRPC-Web generated client stub for github.com.metaprov.modelaapi.services.cloudproxyd.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.20.3
// source: github.com/metaprov/modelaapi/services/cloudproxyd/v1/cloudproxyd.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb from '../../../../../../github.com/metaprov/modelaapi/services/cloudproxyd/v1/cloudproxyd_pb';


export class CloudProxyServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorDownload = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.cloudproxyd.v1.CloudProxyService/Download',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.FileDownloadRequest,
    github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.FileDownloadResponse,
    (request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.FileDownloadRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.FileDownloadResponse.deserializeBinary
  );

  download(
    request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.FileDownloadRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.FileDownloadResponse>;

  download(
    request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.FileDownloadRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.FileDownloadResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.FileDownloadResponse>;

  download(
    request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.FileDownloadRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.FileDownloadResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.cloudproxyd.v1.CloudProxyService/Download',
        request,
        metadata || {},
        this.methodDescriptorDownload,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.cloudproxyd.v1.CloudProxyService/Download',
    request,
    metadata || {},
    this.methodDescriptorDownload);
  }

  methodDescriptorList = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.cloudproxyd.v1.CloudProxyService/List',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ListObjectsRequest,
    github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ListObjectsResponse,
    (request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ListObjectsRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ListObjectsResponse.deserializeBinary
  );

  list(
    request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ListObjectsRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ListObjectsResponse>;

  list(
    request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ListObjectsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ListObjectsResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ListObjectsResponse>;

  list(
    request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ListObjectsRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ListObjectsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.cloudproxyd.v1.CloudProxyService/List',
        request,
        metadata || {},
        this.methodDescriptorList,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.cloudproxyd.v1.CloudProxyService/List',
    request,
    metadata || {},
    this.methodDescriptorList);
  }

  methodDescriptorUpload = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.cloudproxyd.v1.CloudProxyService/Upload',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.FileUploadRequest,
    github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.FileUploadResponse,
    (request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.FileUploadRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.FileUploadResponse.deserializeBinary
  );

  upload(
    request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.FileUploadRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.FileUploadResponse>;

  upload(
    request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.FileUploadRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.FileUploadResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.FileUploadResponse>;

  upload(
    request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.FileUploadRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.FileUploadResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.cloudproxyd.v1.CloudProxyService/Upload',
        request,
        metadata || {},
        this.methodDescriptorUpload,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.cloudproxyd.v1.CloudProxyService/Upload',
    request,
    metadata || {},
    this.methodDescriptorUpload);
  }

  methodDescriptorDelete = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.cloudproxyd.v1.CloudProxyService/Delete',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.DeleteRequest,
    github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.DeleteResponse,
    (request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.DeleteRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.DeleteResponse.deserializeBinary
  );

  delete(
    request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.DeleteRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.DeleteResponse>;

  delete(
    request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.DeleteRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.DeleteResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.DeleteResponse>;

  delete(
    request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.DeleteRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.DeleteResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.cloudproxyd.v1.CloudProxyService/Delete',
        request,
        metadata || {},
        this.methodDescriptorDelete,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.cloudproxyd.v1.CloudProxyService/Delete',
    request,
    metadata || {},
    this.methodDescriptorDelete);
  }

  methodDescriptorExistsInBucket = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.cloudproxyd.v1.CloudProxyService/ExistsInBucket',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ExistsInBucketRequest,
    github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ExistsInBucketResponse,
    (request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ExistsInBucketRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ExistsInBucketResponse.deserializeBinary
  );

  existsInBucket(
    request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ExistsInBucketRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ExistsInBucketResponse>;

  existsInBucket(
    request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ExistsInBucketRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ExistsInBucketResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ExistsInBucketResponse>;

  existsInBucket(
    request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ExistsInBucketRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ExistsInBucketResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.cloudproxyd.v1.CloudProxyService/ExistsInBucket',
        request,
        metadata || {},
        this.methodDescriptorExistsInBucket,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.cloudproxyd.v1.CloudProxyService/ExistsInBucket',
    request,
    metadata || {},
    this.methodDescriptorExistsInBucket);
  }

  methodDescriptorBucketExist = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.cloudproxyd.v1.CloudProxyService/BucketExist',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.BucketExistRequest,
    github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.BucketExistResponse,
    (request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.BucketExistRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.BucketExistResponse.deserializeBinary
  );

  bucketExist(
    request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.BucketExistRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.BucketExistResponse>;

  bucketExist(
    request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.BucketExistRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.BucketExistResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.BucketExistResponse>;

  bucketExist(
    request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.BucketExistRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.BucketExistResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.cloudproxyd.v1.CloudProxyService/BucketExist',
        request,
        metadata || {},
        this.methodDescriptorBucketExist,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.cloudproxyd.v1.CloudProxyService/BucketExist',
    request,
    metadata || {},
    this.methodDescriptorBucketExist);
  }

  methodDescriptorCreateBucket = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.cloudproxyd.v1.CloudProxyService/CreateBucket',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.CreateBucketRequest,
    github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.CreateBucketResponse,
    (request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.CreateBucketRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.CreateBucketResponse.deserializeBinary
  );

  createBucket(
    request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.CreateBucketRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.CreateBucketResponse>;

  createBucket(
    request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.CreateBucketRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.CreateBucketResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.CreateBucketResponse>;

  createBucket(
    request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.CreateBucketRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.CreateBucketResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.cloudproxyd.v1.CloudProxyService/CreateBucket',
        request,
        metadata || {},
        this.methodDescriptorCreateBucket,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.cloudproxyd.v1.CloudProxyService/CreateBucket',
    request,
    metadata || {},
    this.methodDescriptorCreateBucket);
  }

  methodDescriptorShutdown = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.cloudproxyd.v1.CloudProxyService/Shutdown',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ShutdownRequest,
    github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ShutdownResponse,
    (request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ShutdownRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ShutdownResponse.deserializeBinary
  );

  shutdown(
    request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ShutdownRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ShutdownResponse>;

  shutdown(
    request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ShutdownRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ShutdownResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ShutdownResponse>;

  shutdown(
    request: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ShutdownRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_cloudproxyd_v1_cloudproxyd_pb.ShutdownResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.cloudproxyd.v1.CloudProxyService/Shutdown',
        request,
        metadata || {},
        this.methodDescriptorShutdown,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.cloudproxyd.v1.CloudProxyService/Shutdown',
    request,
    metadata || {},
    this.methodDescriptorShutdown);
  }

}

