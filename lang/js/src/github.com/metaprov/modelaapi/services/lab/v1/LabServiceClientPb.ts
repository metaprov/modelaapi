/**
 * @fileoverview gRPC-Web generated client stub for github.com.metaprov.modelaapi.services.lab.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.12.4
// source: github.com/metaprov/modelaapi/services/lab/v1/lab.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as github_com_metaprov_modelaapi_services_lab_v1_lab_pb from '../../../../../../github.com/metaprov/modelaapi/services/lab/v1/lab_pb';


export class LabServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorListLabs = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.lab.v1.LabService/ListLabs',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_lab_v1_lab_pb.ListLabsRequest,
    github_com_metaprov_modelaapi_services_lab_v1_lab_pb.ListLabsResponse,
    (request: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.ListLabsRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_lab_v1_lab_pb.ListLabsResponse.deserializeBinary
  );

  listLabs(
    request: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.ListLabsRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_lab_v1_lab_pb.ListLabsResponse>;

  listLabs(
    request: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.ListLabsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.ListLabsResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_lab_v1_lab_pb.ListLabsResponse>;

  listLabs(
    request: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.ListLabsRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.ListLabsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.lab.v1.LabService/ListLabs',
        request,
        metadata || {},
        this.methodDescriptorListLabs,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.lab.v1.LabService/ListLabs',
    request,
    metadata || {},
    this.methodDescriptorListLabs);
  }

  methodDescriptorCreateLab = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.lab.v1.LabService/CreateLab',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_lab_v1_lab_pb.CreateLabRequest,
    github_com_metaprov_modelaapi_services_lab_v1_lab_pb.CreateLabResponse,
    (request: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.CreateLabRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_lab_v1_lab_pb.CreateLabResponse.deserializeBinary
  );

  createLab(
    request: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.CreateLabRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_lab_v1_lab_pb.CreateLabResponse>;

  createLab(
    request: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.CreateLabRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.CreateLabResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_lab_v1_lab_pb.CreateLabResponse>;

  createLab(
    request: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.CreateLabRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.CreateLabResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.lab.v1.LabService/CreateLab',
        request,
        metadata || {},
        this.methodDescriptorCreateLab,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.lab.v1.LabService/CreateLab',
    request,
    metadata || {},
    this.methodDescriptorCreateLab);
  }

  methodDescriptorGetLab = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.lab.v1.LabService/GetLab',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_lab_v1_lab_pb.GetLabRequest,
    github_com_metaprov_modelaapi_services_lab_v1_lab_pb.GetLabResponse,
    (request: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.GetLabRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_lab_v1_lab_pb.GetLabResponse.deserializeBinary
  );

  getLab(
    request: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.GetLabRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_lab_v1_lab_pb.GetLabResponse>;

  getLab(
    request: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.GetLabRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.GetLabResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_lab_v1_lab_pb.GetLabResponse>;

  getLab(
    request: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.GetLabRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.GetLabResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.lab.v1.LabService/GetLab',
        request,
        metadata || {},
        this.methodDescriptorGetLab,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.lab.v1.LabService/GetLab',
    request,
    metadata || {},
    this.methodDescriptorGetLab);
  }

  methodDescriptorUpdateLab = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.lab.v1.LabService/UpdateLab',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_lab_v1_lab_pb.UpdateLabRequest,
    github_com_metaprov_modelaapi_services_lab_v1_lab_pb.UpdateLabResponse,
    (request: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.UpdateLabRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_lab_v1_lab_pb.UpdateLabResponse.deserializeBinary
  );

  updateLab(
    request: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.UpdateLabRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_lab_v1_lab_pb.UpdateLabResponse>;

  updateLab(
    request: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.UpdateLabRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.UpdateLabResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_lab_v1_lab_pb.UpdateLabResponse>;

  updateLab(
    request: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.UpdateLabRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.UpdateLabResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.lab.v1.LabService/UpdateLab',
        request,
        metadata || {},
        this.methodDescriptorUpdateLab,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.lab.v1.LabService/UpdateLab',
    request,
    metadata || {},
    this.methodDescriptorUpdateLab);
  }

  methodDescriptorDeleteLab = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.lab.v1.LabService/DeleteLab',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_lab_v1_lab_pb.DeleteLabRequest,
    github_com_metaprov_modelaapi_services_lab_v1_lab_pb.DeleteLabResponse,
    (request: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.DeleteLabRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_lab_v1_lab_pb.DeleteLabResponse.deserializeBinary
  );

  deleteLab(
    request: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.DeleteLabRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_lab_v1_lab_pb.DeleteLabResponse>;

  deleteLab(
    request: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.DeleteLabRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.DeleteLabResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_lab_v1_lab_pb.DeleteLabResponse>;

  deleteLab(
    request: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.DeleteLabRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_lab_v1_lab_pb.DeleteLabResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.lab.v1.LabService/DeleteLab',
        request,
        metadata || {},
        this.methodDescriptorDeleteLab,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.lab.v1.LabService/DeleteLab',
    request,
    metadata || {},
    this.methodDescriptorDeleteLab);
  }

}

