// source: github.com/metaprov/modelaapi/services/watcherd/v1/watcherd.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var github_com_metaprov_modelaapi_pkg_apis_training_v1alpha1_generated_pb = require('../../../../../../github.com/metaprov/modelaapi/pkg/apis/training/v1alpha1/generated_pb.js');
goog.object.extend(proto, github_com_metaprov_modelaapi_pkg_apis_training_v1alpha1_generated_pb);
var github_com_metaprov_modelaapi_pkg_apis_data_v1alpha1_generated_pb = require('../../../../../../github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1/generated_pb.js');
goog.object.extend(proto, github_com_metaprov_modelaapi_pkg_apis_data_v1alpha1_generated_pb);
var github_com_metaprov_modelaapi_pkg_apis_infra_v1alpha1_generated_pb = require('../../../../../../github.com/metaprov/modelaapi/pkg/apis/infra/v1alpha1/generated_pb.js');
goog.object.extend(proto, github_com_metaprov_modelaapi_pkg_apis_infra_v1alpha1_generated_pb);
var github_com_metaprov_modelaapi_pkg_apis_catalog_v1alpha1_generated_pb = require('../../../../../../github.com/metaprov/modelaapi/pkg/apis/catalog/v1alpha1/generated_pb.js');
goog.object.extend(proto, github_com_metaprov_modelaapi_pkg_apis_catalog_v1alpha1_generated_pb);
var k8s_io_api_core_v1_generated_pb = require('../../../../../../k8s.io/api/core/v1/generated_pb.js');
goog.object.extend(proto, k8s_io_api_core_v1_generated_pb);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.services.watcherd.v1.EventType', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions.displayName = 'proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.displayName = 'proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent.displayName = 'proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.displayName = 'proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent.displayName = 'proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.displayName = 'proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent.displayName = 'proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.displayName = 'proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent.displayName = 'proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.displayName = 'proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent.displayName = 'proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.displayName = 'proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent.displayName = 'proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    generation: jspb.Message.getFieldWithDefault(msg, 1, 0),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, ""),
    latest: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions;
  return proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGeneration(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLatest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGeneration();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLatest();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional uint64 generation = 1;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions.prototype.getGeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions} returns this
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions.prototype.setGeneration = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions} returns this
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool latest = 3;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions.prototype.getLatest = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions} returns this
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchRequestOptions.prototype.setLatest = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    generation: jspb.Message.getFieldWithDefault(msg, 1, 0),
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse;
  return proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGeneration(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGeneration();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    event: jspb.Message.getFieldWithDefault(msg, 1, 0),
    object: (f = msg.getObject()) && github_com_metaprov_modelaapi_pkg_apis_data_v1alpha1_generated_pb.Dataset.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent;
  return proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.EventType} */ (reader.readEnum());
      msg.setEvent(value);
      break;
    case 2:
      var value = new github_com_metaprov_modelaapi_pkg_apis_data_v1alpha1_generated_pb.Dataset;
      reader.readMessage(value,github_com_metaprov_modelaapi_pkg_apis_data_v1alpha1_generated_pb.Dataset.deserializeBinaryFromReader);
      msg.setObject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvent();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getObject();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_metaprov_modelaapi_pkg_apis_data_v1alpha1_generated_pb.Dataset.serializeBinaryToWriter
    );
  }
};


/**
 * optional EventType event = 1;
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.EventType}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent.prototype.getEvent = function() {
  return /** @type {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.EventType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.EventType} value
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent} returns this
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent.prototype.setEvent = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset object = 2;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent.prototype.getObject = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset} */ (
    jspb.Message.getWrapperField(this, github_com_metaprov_modelaapi_pkg_apis_data_v1alpha1_generated_pb.Dataset, 2));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Dataset|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent} returns this
*/
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent.prototype.setObject = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent} returns this
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent.prototype.clearObject = function() {
  return this.setObject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent.prototype.hasObject = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 generation = 1;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.prototype.getGeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse} returns this
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.prototype.setGeneration = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated DatasetEvent events = 2;
 * @return {!Array<!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent>}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent, 2));
};


/**
 * @param {!Array<!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent>} value
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse} returns this
*/
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent=} opt_value
 * @param {number=} opt_index
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.DatasetEvent, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse} returns this
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetResponse.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    generation: jspb.Message.getFieldWithDefault(msg, 1, 0),
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse;
  return proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGeneration(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGeneration();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    event: jspb.Message.getFieldWithDefault(msg, 1, 0),
    object: (f = msg.getObject()) && github_com_metaprov_modelaapi_pkg_apis_training_v1alpha1_generated_pb.Model.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent;
  return proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.EventType} */ (reader.readEnum());
      msg.setEvent(value);
      break;
    case 2:
      var value = new github_com_metaprov_modelaapi_pkg_apis_training_v1alpha1_generated_pb.Model;
      reader.readMessage(value,github_com_metaprov_modelaapi_pkg_apis_training_v1alpha1_generated_pb.Model.deserializeBinaryFromReader);
      msg.setObject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvent();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getObject();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_metaprov_modelaapi_pkg_apis_training_v1alpha1_generated_pb.Model.serializeBinaryToWriter
    );
  }
};


/**
 * optional EventType event = 1;
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.EventType}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent.prototype.getEvent = function() {
  return /** @type {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.EventType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.EventType} value
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent} returns this
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent.prototype.setEvent = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Model object = 2;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Model}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent.prototype.getObject = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Model} */ (
    jspb.Message.getWrapperField(this, github_com_metaprov_modelaapi_pkg_apis_training_v1alpha1_generated_pb.Model, 2));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Model|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent} returns this
*/
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent.prototype.setObject = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent} returns this
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent.prototype.clearObject = function() {
  return this.setObject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent.prototype.hasObject = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 generation = 1;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.prototype.getGeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse} returns this
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.prototype.setGeneration = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated ModelEvent events = 2;
 * @return {!Array<!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent>}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent, 2));
};


/**
 * @param {!Array<!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent>} value
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse} returns this
*/
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent=} opt_value
 * @param {number=} opt_index
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.ModelEvent, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse} returns this
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchModelResponse.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    generation: jspb.Message.getFieldWithDefault(msg, 1, 0),
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse;
  return proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGeneration(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGeneration();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    event: jspb.Message.getFieldWithDefault(msg, 1, 0),
    object: (f = msg.getObject()) && github_com_metaprov_modelaapi_pkg_apis_infra_v1alpha1_generated_pb.Alert.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent;
  return proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.EventType} */ (reader.readEnum());
      msg.setEvent(value);
      break;
    case 2:
      var value = new github_com_metaprov_modelaapi_pkg_apis_infra_v1alpha1_generated_pb.Alert;
      reader.readMessage(value,github_com_metaprov_modelaapi_pkg_apis_infra_v1alpha1_generated_pb.Alert.deserializeBinaryFromReader);
      msg.setObject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvent();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getObject();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_metaprov_modelaapi_pkg_apis_infra_v1alpha1_generated_pb.Alert.serializeBinaryToWriter
    );
  }
};


/**
 * optional EventType event = 1;
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.EventType}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent.prototype.getEvent = function() {
  return /** @type {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.EventType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.EventType} value
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent} returns this
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent.prototype.setEvent = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert object = 2;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent.prototype.getObject = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert} */ (
    jspb.Message.getWrapperField(this, github_com_metaprov_modelaapi_pkg_apis_infra_v1alpha1_generated_pb.Alert, 2));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent} returns this
*/
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent.prototype.setObject = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent} returns this
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent.prototype.clearObject = function() {
  return this.setObject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent.prototype.hasObject = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 generation = 1;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.prototype.getGeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse} returns this
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.prototype.setGeneration = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated AlertEvent events = 2;
 * @return {!Array<!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent>}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent, 2));
};


/**
 * @param {!Array<!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent>} value
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse} returns this
*/
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent=} opt_value
 * @param {number=} opt_index
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.AlertEvent, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse} returns this
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchAlertResponse.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    generation: jspb.Message.getFieldWithDefault(msg, 1, 0),
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse;
  return proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGeneration(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGeneration();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    event: jspb.Message.getFieldWithDefault(msg, 1, 0),
    object: (f = msg.getObject()) && github_com_metaprov_modelaapi_pkg_apis_data_v1alpha1_generated_pb.DatasetSnapshot.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent;
  return proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.EventType} */ (reader.readEnum());
      msg.setEvent(value);
      break;
    case 2:
      var value = new github_com_metaprov_modelaapi_pkg_apis_data_v1alpha1_generated_pb.DatasetSnapshot;
      reader.readMessage(value,github_com_metaprov_modelaapi_pkg_apis_data_v1alpha1_generated_pb.DatasetSnapshot.deserializeBinaryFromReader);
      msg.setObject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvent();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getObject();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_metaprov_modelaapi_pkg_apis_data_v1alpha1_generated_pb.DatasetSnapshot.serializeBinaryToWriter
    );
  }
};


/**
 * optional EventType event = 1;
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.EventType}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent.prototype.getEvent = function() {
  return /** @type {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.EventType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.EventType} value
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent} returns this
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent.prototype.setEvent = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DatasetSnapshot object = 2;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DatasetSnapshot}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent.prototype.getObject = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DatasetSnapshot} */ (
    jspb.Message.getWrapperField(this, github_com_metaprov_modelaapi_pkg_apis_data_v1alpha1_generated_pb.DatasetSnapshot, 2));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DatasetSnapshot|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent} returns this
*/
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent.prototype.setObject = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent} returns this
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent.prototype.clearObject = function() {
  return this.setObject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent.prototype.hasObject = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 generation = 1;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.prototype.getGeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse} returns this
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.prototype.setGeneration = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated DatasetSnapshotEvent events = 2;
 * @return {!Array<!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent>}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent, 2));
};


/**
 * @param {!Array<!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent>} value
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse} returns this
*/
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent=} opt_value
 * @param {number=} opt_index
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.DatasetSnapshotEvent, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse} returns this
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchDatasetSnapshotResponse.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    generation: jspb.Message.getFieldWithDefault(msg, 1, 0),
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse;
  return proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGeneration(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGeneration();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    event: jspb.Message.getFieldWithDefault(msg, 1, 0),
    object: (f = msg.getObject()) && github_com_metaprov_modelaapi_pkg_apis_training_v1alpha1_generated_pb.Study.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent;
  return proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.EventType} */ (reader.readEnum());
      msg.setEvent(value);
      break;
    case 2:
      var value = new github_com_metaprov_modelaapi_pkg_apis_training_v1alpha1_generated_pb.Study;
      reader.readMessage(value,github_com_metaprov_modelaapi_pkg_apis_training_v1alpha1_generated_pb.Study.deserializeBinaryFromReader);
      msg.setObject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvent();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getObject();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_metaprov_modelaapi_pkg_apis_training_v1alpha1_generated_pb.Study.serializeBinaryToWriter
    );
  }
};


/**
 * optional EventType event = 1;
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.EventType}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent.prototype.getEvent = function() {
  return /** @type {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.EventType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.EventType} value
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent} returns this
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent.prototype.setEvent = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study object = 2;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent.prototype.getObject = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study} */ (
    jspb.Message.getWrapperField(this, github_com_metaprov_modelaapi_pkg_apis_training_v1alpha1_generated_pb.Study, 2));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent} returns this
*/
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent.prototype.setObject = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent} returns this
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent.prototype.clearObject = function() {
  return this.setObject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent.prototype.hasObject = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 generation = 1;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.prototype.getGeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse} returns this
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.prototype.setGeneration = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated StudyEvent events = 2;
 * @return {!Array<!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent>}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent, 2));
};


/**
 * @param {!Array<!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent>} value
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse} returns this
*/
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent=} opt_value
 * @param {number=} opt_index
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.StudyEvent, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse} returns this
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyResponse.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    generation: jspb.Message.getFieldWithDefault(msg, 1, 0),
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse;
  return proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGeneration(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGeneration();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    event: jspb.Message.getFieldWithDefault(msg, 1, 0),
    object: (f = msg.getObject()) && github_com_metaprov_modelaapi_pkg_apis_training_v1alpha1_generated_pb.StudyRun.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent;
  return proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.EventType} */ (reader.readEnum());
      msg.setEvent(value);
      break;
    case 2:
      var value = new github_com_metaprov_modelaapi_pkg_apis_training_v1alpha1_generated_pb.StudyRun;
      reader.readMessage(value,github_com_metaprov_modelaapi_pkg_apis_training_v1alpha1_generated_pb.StudyRun.deserializeBinaryFromReader);
      msg.setObject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvent();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getObject();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_metaprov_modelaapi_pkg_apis_training_v1alpha1_generated_pb.StudyRun.serializeBinaryToWriter
    );
  }
};


/**
 * optional EventType event = 1;
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.EventType}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent.prototype.getEvent = function() {
  return /** @type {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.EventType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.EventType} value
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent} returns this
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent.prototype.setEvent = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.StudyRun object = 2;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.StudyRun}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent.prototype.getObject = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.StudyRun} */ (
    jspb.Message.getWrapperField(this, github_com_metaprov_modelaapi_pkg_apis_training_v1alpha1_generated_pb.StudyRun, 2));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.StudyRun|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent} returns this
*/
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent.prototype.setObject = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent} returns this
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent.prototype.clearObject = function() {
  return this.setObject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent.prototype.hasObject = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 generation = 1;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.prototype.getGeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse} returns this
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.prototype.setGeneration = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated StudyRunEvent events = 2;
 * @return {!Array<!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent>}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent, 2));
};


/**
 * @param {!Array<!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent>} value
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse} returns this
*/
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent=} opt_value
 * @param {number=} opt_index
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.StudyRunEvent, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse} returns this
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.WatchStudyRunResponse.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};


/**
 * @enum {number}
 */
proto.github.com.metaprov.modelaapi.services.watcherd.v1.EventType = {
  EVENT_UPDATE: 0,
  EVENT_DELETE: 1
};

goog.object.extend(exports, proto.github.com.metaprov.modelaapi.services.watcherd.v1);
