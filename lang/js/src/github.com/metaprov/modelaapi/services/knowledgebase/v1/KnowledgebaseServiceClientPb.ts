/**
 * @fileoverview gRPC-Web generated client stub for github.com.metaprov.modelaapi.services.knowledgebase.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.20.3
// source: github.com/metaprov/modelaapi/services/knowledgebase/v1/knowledgebase.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb from '../../../../../../github.com/metaprov/modelaapi/services/knowledgebase/v1/knowledgebase_pb';


export class KnowledgeBaseServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorListKnowledgeBases = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/ListKnowledgeBases',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.ListKnowledgeBasesRequest,
    github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.ListKnowledgeBasesResponse,
    (request: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.ListKnowledgeBasesRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.ListKnowledgeBasesResponse.deserializeBinary
  );

  listKnowledgeBases(
    request: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.ListKnowledgeBasesRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.ListKnowledgeBasesResponse>;

  listKnowledgeBases(
    request: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.ListKnowledgeBasesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.ListKnowledgeBasesResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.ListKnowledgeBasesResponse>;

  listKnowledgeBases(
    request: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.ListKnowledgeBasesRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.ListKnowledgeBasesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/ListKnowledgeBases',
        request,
        metadata || {},
        this.methodDescriptorListKnowledgeBases,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/ListKnowledgeBases',
    request,
    metadata || {},
    this.methodDescriptorListKnowledgeBases);
  }

  methodDescriptorCreateKnowledgeBase = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/CreateKnowledgeBase',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.CreateKnowledgeBaseRequest,
    github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.CreateKnowledgeBaseResponse,
    (request: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.CreateKnowledgeBaseRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.CreateKnowledgeBaseResponse.deserializeBinary
  );

  createKnowledgeBase(
    request: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.CreateKnowledgeBaseRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.CreateKnowledgeBaseResponse>;

  createKnowledgeBase(
    request: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.CreateKnowledgeBaseRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.CreateKnowledgeBaseResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.CreateKnowledgeBaseResponse>;

  createKnowledgeBase(
    request: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.CreateKnowledgeBaseRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.CreateKnowledgeBaseResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/CreateKnowledgeBase',
        request,
        metadata || {},
        this.methodDescriptorCreateKnowledgeBase,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/CreateKnowledgeBase',
    request,
    metadata || {},
    this.methodDescriptorCreateKnowledgeBase);
  }

  methodDescriptorGetKnowledgeBase = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/GetKnowledgeBase',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.GetKnowledgeBaseRequest,
    github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.GetKnowledgeBaseResponse,
    (request: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.GetKnowledgeBaseRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.GetKnowledgeBaseResponse.deserializeBinary
  );

  getKnowledgeBase(
    request: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.GetKnowledgeBaseRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.GetKnowledgeBaseResponse>;

  getKnowledgeBase(
    request: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.GetKnowledgeBaseRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.GetKnowledgeBaseResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.GetKnowledgeBaseResponse>;

  getKnowledgeBase(
    request: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.GetKnowledgeBaseRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.GetKnowledgeBaseResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/GetKnowledgeBase',
        request,
        metadata || {},
        this.methodDescriptorGetKnowledgeBase,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/GetKnowledgeBase',
    request,
    metadata || {},
    this.methodDescriptorGetKnowledgeBase);
  }

  methodDescriptorUpdateKnowledgeBase = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/UpdateKnowledgeBase',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.UpdateKnowledgeBaseRequest,
    github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.UpdateKnowledgeBaseResponse,
    (request: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.UpdateKnowledgeBaseRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.UpdateKnowledgeBaseResponse.deserializeBinary
  );

  updateKnowledgeBase(
    request: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.UpdateKnowledgeBaseRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.UpdateKnowledgeBaseResponse>;

  updateKnowledgeBase(
    request: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.UpdateKnowledgeBaseRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.UpdateKnowledgeBaseResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.UpdateKnowledgeBaseResponse>;

  updateKnowledgeBase(
    request: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.UpdateKnowledgeBaseRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.UpdateKnowledgeBaseResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/UpdateKnowledgeBase',
        request,
        metadata || {},
        this.methodDescriptorUpdateKnowledgeBase,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/UpdateKnowledgeBase',
    request,
    metadata || {},
    this.methodDescriptorUpdateKnowledgeBase);
  }

  methodDescriptorDeleteKnowledgeBase = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/DeleteKnowledgeBase',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.DeleteKnowledgeBaseRequest,
    github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.DeleteKnowledgeBaseResponse,
    (request: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.DeleteKnowledgeBaseRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.DeleteKnowledgeBaseResponse.deserializeBinary
  );

  deleteKnowledgeBase(
    request: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.DeleteKnowledgeBaseRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.DeleteKnowledgeBaseResponse>;

  deleteKnowledgeBase(
    request: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.DeleteKnowledgeBaseRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.DeleteKnowledgeBaseResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.DeleteKnowledgeBaseResponse>;

  deleteKnowledgeBase(
    request: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.DeleteKnowledgeBaseRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.DeleteKnowledgeBaseResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/DeleteKnowledgeBase',
        request,
        metadata || {},
        this.methodDescriptorDeleteKnowledgeBase,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/DeleteKnowledgeBase',
    request,
    metadata || {},
    this.methodDescriptorDeleteKnowledgeBase);
  }

  methodDescriptorRefresh = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/Refresh',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.RefreshKnowledgeBaseRequest,
    github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.RefreshKnowledgeBaseResponse,
    (request: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.RefreshKnowledgeBaseRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.RefreshKnowledgeBaseResponse.deserializeBinary
  );

  refresh(
    request: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.RefreshKnowledgeBaseRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.RefreshKnowledgeBaseResponse>;

  refresh(
    request: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.RefreshKnowledgeBaseRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.RefreshKnowledgeBaseResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.RefreshKnowledgeBaseResponse>;

  refresh(
    request: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.RefreshKnowledgeBaseRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_knowledgebase_v1_knowledgebase_pb.RefreshKnowledgeBaseResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/Refresh',
        request,
        metadata || {},
        this.methodDescriptorRefresh,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/Refresh',
    request,
    metadata || {},
    this.methodDescriptorRefresh);
  }

}

