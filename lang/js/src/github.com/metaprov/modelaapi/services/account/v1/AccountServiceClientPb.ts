/**
 * @fileoverview gRPC-Web generated client stub for github.com.metaprov.modelaapi.services.account.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.12.4
// source: github.com/metaprov/modelaapi/services/account/v1/account.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as github_com_metaprov_modelaapi_services_account_v1_account_pb from '../../../../../../github.com/metaprov/modelaapi/services/account/v1/account_pb';


export class AccountServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorListAccounts = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.account.v1.AccountService/ListAccounts',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_account_v1_account_pb.ListAccountsRequest,
    github_com_metaprov_modelaapi_services_account_v1_account_pb.ListAccountsResponse,
    (request: github_com_metaprov_modelaapi_services_account_v1_account_pb.ListAccountsRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_account_v1_account_pb.ListAccountsResponse.deserializeBinary
  );

  listAccounts(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.ListAccountsRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_account_v1_account_pb.ListAccountsResponse>;

  listAccounts(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.ListAccountsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_account_v1_account_pb.ListAccountsResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_account_v1_account_pb.ListAccountsResponse>;

  listAccounts(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.ListAccountsRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_account_v1_account_pb.ListAccountsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.account.v1.AccountService/ListAccounts',
        request,
        metadata || {},
        this.methodDescriptorListAccounts,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.account.v1.AccountService/ListAccounts',
    request,
    metadata || {},
    this.methodDescriptorListAccounts);
  }

  methodDescriptorCreateAccount = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.account.v1.AccountService/CreateAccount',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_account_v1_account_pb.CreateAccountRequest,
    github_com_metaprov_modelaapi_services_account_v1_account_pb.CreateAccountResponse,
    (request: github_com_metaprov_modelaapi_services_account_v1_account_pb.CreateAccountRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_account_v1_account_pb.CreateAccountResponse.deserializeBinary
  );

  createAccount(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.CreateAccountRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_account_v1_account_pb.CreateAccountResponse>;

  createAccount(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.CreateAccountRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_account_v1_account_pb.CreateAccountResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_account_v1_account_pb.CreateAccountResponse>;

  createAccount(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.CreateAccountRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_account_v1_account_pb.CreateAccountResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.account.v1.AccountService/CreateAccount',
        request,
        metadata || {},
        this.methodDescriptorCreateAccount,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.account.v1.AccountService/CreateAccount',
    request,
    metadata || {},
    this.methodDescriptorCreateAccount);
  }

  methodDescriptorGetAccount = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.account.v1.AccountService/GetAccount',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_account_v1_account_pb.GetAccountRequest,
    github_com_metaprov_modelaapi_services_account_v1_account_pb.GetAccountResponse,
    (request: github_com_metaprov_modelaapi_services_account_v1_account_pb.GetAccountRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_account_v1_account_pb.GetAccountResponse.deserializeBinary
  );

  getAccount(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.GetAccountRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_account_v1_account_pb.GetAccountResponse>;

  getAccount(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.GetAccountRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_account_v1_account_pb.GetAccountResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_account_v1_account_pb.GetAccountResponse>;

  getAccount(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.GetAccountRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_account_v1_account_pb.GetAccountResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.account.v1.AccountService/GetAccount',
        request,
        metadata || {},
        this.methodDescriptorGetAccount,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.account.v1.AccountService/GetAccount',
    request,
    metadata || {},
    this.methodDescriptorGetAccount);
  }

  methodDescriptorUpdateAccount = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.account.v1.AccountService/UpdateAccount',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_account_v1_account_pb.UpdateAccountRequest,
    github_com_metaprov_modelaapi_services_account_v1_account_pb.UpdateAccountResponse,
    (request: github_com_metaprov_modelaapi_services_account_v1_account_pb.UpdateAccountRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_account_v1_account_pb.UpdateAccountResponse.deserializeBinary
  );

  updateAccount(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.UpdateAccountRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_account_v1_account_pb.UpdateAccountResponse>;

  updateAccount(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.UpdateAccountRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_account_v1_account_pb.UpdateAccountResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_account_v1_account_pb.UpdateAccountResponse>;

  updateAccount(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.UpdateAccountRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_account_v1_account_pb.UpdateAccountResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.account.v1.AccountService/UpdateAccount',
        request,
        metadata || {},
        this.methodDescriptorUpdateAccount,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.account.v1.AccountService/UpdateAccount',
    request,
    metadata || {},
    this.methodDescriptorUpdateAccount);
  }

  methodDescriptorDeleteAccount = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.account.v1.AccountService/DeleteAccount',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_account_v1_account_pb.DeleteAccountRequest,
    github_com_metaprov_modelaapi_services_account_v1_account_pb.DeleteAccountResponse,
    (request: github_com_metaprov_modelaapi_services_account_v1_account_pb.DeleteAccountRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_account_v1_account_pb.DeleteAccountResponse.deserializeBinary
  );

  deleteAccount(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.DeleteAccountRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_account_v1_account_pb.DeleteAccountResponse>;

  deleteAccount(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.DeleteAccountRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_account_v1_account_pb.DeleteAccountResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_account_v1_account_pb.DeleteAccountResponse>;

  deleteAccount(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.DeleteAccountRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_account_v1_account_pb.DeleteAccountResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.account.v1.AccountService/DeleteAccount',
        request,
        metadata || {},
        this.methodDescriptorDeleteAccount,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.account.v1.AccountService/DeleteAccount',
    request,
    metadata || {},
    this.methodDescriptorDeleteAccount);
  }

  methodDescriptorGetAccountNamespaces = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.account.v1.AccountService/GetAccountNamespaces',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_account_v1_account_pb.GetAccountNamespacesRequest,
    github_com_metaprov_modelaapi_services_account_v1_account_pb.GetAccountNamespacesResponse,
    (request: github_com_metaprov_modelaapi_services_account_v1_account_pb.GetAccountNamespacesRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_account_v1_account_pb.GetAccountNamespacesResponse.deserializeBinary
  );

  getAccountNamespaces(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.GetAccountNamespacesRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_account_v1_account_pb.GetAccountNamespacesResponse>;

  getAccountNamespaces(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.GetAccountNamespacesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_account_v1_account_pb.GetAccountNamespacesResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_account_v1_account_pb.GetAccountNamespacesResponse>;

  getAccountNamespaces(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.GetAccountNamespacesRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_account_v1_account_pb.GetAccountNamespacesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.account.v1.AccountService/GetAccountNamespaces',
        request,
        metadata || {},
        this.methodDescriptorGetAccountNamespaces,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.account.v1.AccountService/GetAccountNamespaces',
    request,
    metadata || {},
    this.methodDescriptorGetAccountNamespaces);
  }

  methodDescriptorLogin = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.account.v1.AccountService/Login',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_account_v1_account_pb.AccountLoginRequest,
    github_com_metaprov_modelaapi_services_account_v1_account_pb.AccountLoginResponse,
    (request: github_com_metaprov_modelaapi_services_account_v1_account_pb.AccountLoginRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_account_v1_account_pb.AccountLoginResponse.deserializeBinary
  );

  login(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.AccountLoginRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_account_v1_account_pb.AccountLoginResponse>;

  login(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.AccountLoginRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_account_v1_account_pb.AccountLoginResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_account_v1_account_pb.AccountLoginResponse>;

  login(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.AccountLoginRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_account_v1_account_pb.AccountLoginResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.account.v1.AccountService/Login',
        request,
        metadata || {},
        this.methodDescriptorLogin,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.account.v1.AccountService/Login',
    request,
    metadata || {},
    this.methodDescriptorLogin);
  }

  methodDescriptorLogout = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.account.v1.AccountService/Logout',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_account_v1_account_pb.AccountLogoutRequest,
    github_com_metaprov_modelaapi_services_account_v1_account_pb.LogoutResponse,
    (request: github_com_metaprov_modelaapi_services_account_v1_account_pb.AccountLogoutRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_account_v1_account_pb.LogoutResponse.deserializeBinary
  );

  logout(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.AccountLogoutRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_account_v1_account_pb.LogoutResponse>;

  logout(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.AccountLogoutRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_account_v1_account_pb.LogoutResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_account_v1_account_pb.LogoutResponse>;

  logout(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.AccountLogoutRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_account_v1_account_pb.LogoutResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.account.v1.AccountService/Logout',
        request,
        metadata || {},
        this.methodDescriptorLogout,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.account.v1.AccountService/Logout',
    request,
    metadata || {},
    this.methodDescriptorLogout);
  }

  methodDescriptorChangePassword = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.account.v1.AccountService/ChangePassword',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_account_v1_account_pb.ChangePasswordRequest,
    github_com_metaprov_modelaapi_services_account_v1_account_pb.ChangePasswordResponse,
    (request: github_com_metaprov_modelaapi_services_account_v1_account_pb.ChangePasswordRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_account_v1_account_pb.ChangePasswordResponse.deserializeBinary
  );

  changePassword(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.ChangePasswordRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_account_v1_account_pb.ChangePasswordResponse>;

  changePassword(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.ChangePasswordRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_account_v1_account_pb.ChangePasswordResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_account_v1_account_pb.ChangePasswordResponse>;

  changePassword(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.ChangePasswordRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_account_v1_account_pb.ChangePasswordResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.account.v1.AccountService/ChangePassword',
        request,
        metadata || {},
        this.methodDescriptorChangePassword,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.account.v1.AccountService/ChangePassword',
    request,
    metadata || {},
    this.methodDescriptorChangePassword);
  }

  methodDescriptorResetPassword = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.account.v1.AccountService/ResetPassword',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_account_v1_account_pb.ResetPasswordRequest,
    github_com_metaprov_modelaapi_services_account_v1_account_pb.ResetPasswordResponse,
    (request: github_com_metaprov_modelaapi_services_account_v1_account_pb.ResetPasswordRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_account_v1_account_pb.ResetPasswordResponse.deserializeBinary
  );

  resetPassword(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.ResetPasswordRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_account_v1_account_pb.ResetPasswordResponse>;

  resetPassword(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.ResetPasswordRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_account_v1_account_pb.ResetPasswordResponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_account_v1_account_pb.ResetPasswordResponse>;

  resetPassword(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.ResetPasswordRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_account_v1_account_pb.ResetPasswordResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.account.v1.AccountService/ResetPassword',
        request,
        metadata || {},
        this.methodDescriptorResetPassword,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.account.v1.AccountService/ResetPassword',
    request,
    metadata || {},
    this.methodDescriptorResetPassword);
  }

  methodDescriptorUploadAvatar = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.account.v1.AccountService/UploadAvatar',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_account_v1_account_pb.UploadAvatarRequest,
    github_com_metaprov_modelaapi_services_account_v1_account_pb.UploadAvatarReponse,
    (request: github_com_metaprov_modelaapi_services_account_v1_account_pb.UploadAvatarRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_account_v1_account_pb.UploadAvatarReponse.deserializeBinary
  );

  uploadAvatar(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.UploadAvatarRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_account_v1_account_pb.UploadAvatarReponse>;

  uploadAvatar(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.UploadAvatarRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_account_v1_account_pb.UploadAvatarReponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_account_v1_account_pb.UploadAvatarReponse>;

  uploadAvatar(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.UploadAvatarRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_account_v1_account_pb.UploadAvatarReponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.account.v1.AccountService/UploadAvatar',
        request,
        metadata || {},
        this.methodDescriptorUploadAvatar,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.account.v1.AccountService/UploadAvatar',
    request,
    metadata || {},
    this.methodDescriptorUploadAvatar);
  }

  methodDescriptorDownloadAvatar = new grpcWeb.MethodDescriptor(
    '/github.com.metaprov.modelaapi.services.account.v1.AccountService/DownloadAvatar',
    grpcWeb.MethodType.UNARY,
    github_com_metaprov_modelaapi_services_account_v1_account_pb.DownloadAvatarRequest,
    github_com_metaprov_modelaapi_services_account_v1_account_pb.DownloadAvatarReponse,
    (request: github_com_metaprov_modelaapi_services_account_v1_account_pb.DownloadAvatarRequest) => {
      return request.serializeBinary();
    },
    github_com_metaprov_modelaapi_services_account_v1_account_pb.DownloadAvatarReponse.deserializeBinary
  );

  downloadAvatar(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.DownloadAvatarRequest,
    metadata: grpcWeb.Metadata | null): Promise<github_com_metaprov_modelaapi_services_account_v1_account_pb.DownloadAvatarReponse>;

  downloadAvatar(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.DownloadAvatarRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_account_v1_account_pb.DownloadAvatarReponse) => void): grpcWeb.ClientReadableStream<github_com_metaprov_modelaapi_services_account_v1_account_pb.DownloadAvatarReponse>;

  downloadAvatar(
    request: github_com_metaprov_modelaapi_services_account_v1_account_pb.DownloadAvatarRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_metaprov_modelaapi_services_account_v1_account_pb.DownloadAvatarReponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/github.com.metaprov.modelaapi.services.account.v1.AccountService/DownloadAvatar',
        request,
        metadata || {},
        this.methodDescriptorDownloadAvatar,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/github.com.metaprov.modelaapi.services.account.v1.AccountService/DownloadAvatar',
    request,
    metadata || {},
    this.methodDescriptorDownloadAvatar);
  }

}

