// source: github.com/metaprov/modelaapi/pkg/apis/infra/v1alpha1/generated.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var github_com_metaprov_modelaapi_pkg_apis_catalog_v1alpha1_generated_pb = require('../../../../../../../github.com/metaprov/modelaapi/pkg/apis/catalog/v1alpha1/generated_pb.js');
goog.object.extend(proto, github_com_metaprov_modelaapi_pkg_apis_catalog_v1alpha1_generated_pb);
var k8s_io_api_core_v1_generated_pb = require('../../../../../../../k8s.io/api/core/v1/generated_pb.js');
goog.object.extend(proto, k8s_io_api_core_v1_generated_pb);
var k8s_io_apimachinery_pkg_api_resource_generated_pb = require('../../../../../../../k8s.io/apimachinery/pkg/api/resource/generated_pb.js');
goog.object.extend(proto, k8s_io_apimachinery_pkg_api_resource_generated_pb);
var k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb = require('../../../../../../../k8s.io/apimachinery/pkg/apis/meta/v1/generated_pb.js');
goog.object.extend(proto, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb);
var k8s_io_apimachinery_pkg_runtime_generated_pb = require('../../../../../../../k8s.io/apimachinery/pkg/runtime/generated_pb.js');
goog.object.extend(proto, k8s_io_apimachinery_pkg_runtime_generated_pb);
var k8s_io_apimachinery_pkg_runtime_schema_generated_pb = require('../../../../../../../k8s.io/apimachinery/pkg/runtime/schema/generated_pb.js');
goog.object.extend(proto, k8s_io_apimachinery_pkg_runtime_schema_generated_pb);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec', null, global);
goog.exportSymbol('proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.repeatedFields_, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.displayName = 'proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    scopesList: jspb.Message.toObjectList(msg.getScopesList(),
    proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope.toObject, includeInstance),
    secretref: (f = msg.getSecretref()) && k8s_io_api_core_v1_generated_pb.SecretReference.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope.deserializeBinaryFromReader);
      msg.addScopes(value);
      break;
    case 3:
      var value = new k8s_io_api_core_v1_generated_pb.SecretReference;
      reader.readMessage(value,k8s_io_api_core_v1_generated_pb.SecretReference.deserializeBinaryFromReader);
      msg.setSecretref(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getScopesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope.serializeBinaryToWriter
    );
  }
  f = message.getSecretref();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      k8s_io_api_core_v1_generated_pb.SecretReference.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Scope scopes = 2;
 * @return {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec.prototype.getScopesList = function() {
  return /** @type{!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope, 2));
};


/**
 * @param {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec.prototype.setScopesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope=} opt_value
 * @param {number=} opt_index
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec.prototype.addScopes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec.prototype.clearScopesList = function() {
  return this.setScopesList([]);
};


/**
 * optional k8s.io.api.core.v1.SecretReference secretRef = 3;
 * @return {?proto.k8s.io.api.core.v1.SecretReference}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec.prototype.getSecretref = function() {
  return /** @type{?proto.k8s.io.api.core.v1.SecretReference} */ (
    jspb.Message.getWrapperField(this, k8s_io_api_core_v1_generated_pb.SecretReference, 3));
};


/**
 * @param {?proto.k8s.io.api.core.v1.SecretReference|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec.prototype.setSecretref = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec.prototype.clearSecretref = function() {
  return this.setSecretref(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec.prototype.hasSecretref = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 3:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account.prototype.getMetadata = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional AccountSpec spec = 2;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account.prototype.getSpec = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec, 2));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional AccountStatus status = 3;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account.prototype.getStatus = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus, 3));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList.prototype.getMetadata = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Account items = 2;
 * @return {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account, 2));
};


/**
 * @param {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account=} opt_value
 * @param {number=} opt_index
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.repeatedFields_ = [19,20];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    tenantref: (f = msg.getTenantref()) && k8s_io_api_core_v1_generated_pb.ObjectReference.toObject(includeInstance, f),
    type: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    firstname: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    lastname: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    email: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    phone: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    admin: (f = jspb.Message.getBooleanField(msg, 9)) == null ? undefined : f,
    team: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f,
    memberof: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    emailpassword: (f = jspb.Message.getBooleanField(msg, 12)) == null ? undefined : f,
    resetpassword: (f = jspb.Message.getBooleanField(msg, 13)) == null ? undefined : f,
    clearancelevel: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
    avatar: (f = msg.getAvatar()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec.toObject(includeInstance, f),
    favoriteproductsList: (f = jspb.Message.getRepeatedField(msg, 19)) == null ? undefined : f,
    tokensList: jspb.Message.toObjectList(msg.getTokensList(),
    proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_api_core_v1_generated_pb.ObjectReference;
      reader.readMessage(value,k8s_io_api_core_v1_generated_pb.ObjectReference.deserializeBinaryFromReader);
      msg.setTenantref(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstname(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastname(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAdmin(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTeam(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setMemberof(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEmailpassword(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setResetpassword(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setClearancelevel(value);
      break;
    case 18:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec.deserializeBinaryFromReader);
      msg.setAvatar(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.addFavoriteproducts(value);
      break;
    case 20:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec.deserializeBinaryFromReader);
      msg.addTokens(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTenantref();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_api_core_v1_generated_pb.ObjectReference.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBool(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getAvatar();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec.serializeBinaryToWriter
    );
  }
  f = message.getFavoriteproductsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      19,
      f
    );
  }
  f = message.getTokensList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      20,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.api.core.v1.ObjectReference tenantRef = 1;
 * @return {?proto.k8s.io.api.core.v1.ObjectReference}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.getTenantref = function() {
  return /** @type{?proto.k8s.io.api.core.v1.ObjectReference} */ (
    jspb.Message.getWrapperField(this, k8s_io_api_core_v1_generated_pb.ObjectReference, 1));
};


/**
 * @param {?proto.k8s.io.api.core.v1.ObjectReference|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.setTenantref = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.clearTenantref = function() {
  return this.setTenantref(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.hasTenantref = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.setType = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.clearType = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.hasType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string firstName = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.getFirstname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.setFirstname = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.clearFirstname = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.hasFirstname = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string lastName = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.getLastname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.setLastname = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.clearLastname = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.hasLastname = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string email = 7;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.setEmail = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.clearEmail = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string phone = 8;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.setPhone = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.clearPhone = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.hasPhone = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool admin = 9;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.getAdmin = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.setAdmin = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.clearAdmin = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.hasAdmin = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool team = 10;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.getTeam = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.setTeam = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.clearTeam = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.hasTeam = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string memberOf = 11;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.getMemberof = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.setMemberof = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.clearMemberof = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.hasMemberof = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool emailPassword = 12;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.getEmailpassword = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.setEmailpassword = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.clearEmailpassword = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.hasEmailpassword = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool resetPassword = 13;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.getResetpassword = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.setResetpassword = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.clearResetpassword = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.hasResetpassword = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string clearanceLevel = 17;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.getClearancelevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.setClearancelevel = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.clearClearancelevel = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.hasClearancelevel = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional AvatarSpec avatar = 18;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.getAvatar = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec, 18));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.setAvatar = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.clearAvatar = function() {
  return this.setAvatar(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.hasAvatar = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * repeated string favoriteProducts = 19;
 * @return {!Array<string>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.getFavoriteproductsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 19));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.setFavoriteproductsList = function(value) {
  return jspb.Message.setField(this, 19, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.addFavoriteproducts = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 19, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.clearFavoriteproductsList = function() {
  return this.setFavoriteproductsList([]);
};


/**
 * repeated APITokenSpec tokens = 20;
 * @return {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.getTokensList = function() {
  return /** @type{!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec, 20));
};


/**
 * @param {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.setTokensList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 20, value);
};


/**
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.addTokens = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 20, opt_value, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.APITokenSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec.prototype.clearTokensList = function() {
  return this.setTokensList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.repeatedFields_ = [11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    updatedat: (f = msg.getUpdatedat()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
    observedgeneration: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    failurereason: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    failuremessage: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    modelscount: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    modelclassescount: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    predictorscount: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    featuregroupscount: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    datasetscount: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    memberscount: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    conditionsList: jspb.Message.toObjectList(msg.getConditionsList(),
    k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setObservedgeneration(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailurereason(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailuremessage(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setModelscount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setModelclassescount(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPredictorscount(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFeaturegroupscount(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDatasetscount(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMemberscount(value);
      break;
    case 11:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.deserializeBinaryFromReader);
      msg.addConditions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getConditionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time updatedAt = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.getUpdatedat = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.setUpdatedat = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.clearUpdatedat = function() {
  return this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 observedGeneration = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.getObservedgeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.setObservedgeneration = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.clearObservedgeneration = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.hasObservedgeneration = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string failureReason = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.getFailurereason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.setFailurereason = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.clearFailurereason = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.hasFailurereason = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string failureMessage = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.getFailuremessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.setFailuremessage = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.clearFailuremessage = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.hasFailuremessage = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 modelsCount = 5;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.getModelscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.setModelscount = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.clearModelscount = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.hasModelscount = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int32 modelClassesCount = 6;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.getModelclassescount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.setModelclassescount = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.clearModelclassescount = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.hasModelclassescount = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 predictorsCount = 7;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.getPredictorscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.setPredictorscount = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.clearPredictorscount = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.hasPredictorscount = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 featureGroupsCount = 8;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.getFeaturegroupscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.setFeaturegroupscount = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.clearFeaturegroupscount = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.hasFeaturegroupscount = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int32 datasetsCount = 9;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.getDatasetscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.setDatasetscount = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.clearDatasetscount = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.hasDatasetscount = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int32 membersCount = 10;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.getMemberscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.setMemberscount = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.clearMemberscount = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.hasMemberscount = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * repeated k8s.io.apimachinery.pkg.apis.meta.v1.Condition conditions = 11;
 * @return {!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.getConditionsList = function() {
  return /** @type{!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>} */ (
    jspb.Message.getRepeatedWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition, 11));
};


/**
 * @param {!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.setConditionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.addConditions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus.prototype.clearConditionsList = function() {
  return this.setConditionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    keyspace: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyspace(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string keyspace = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.prototype.getKeyspace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.prototype.setKeyspace = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.prototype.clearKeyspace = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.prototype.hasKeyspace = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    keyspace: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyspace(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string keyspace = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.prototype.getKeyspace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.prototype.setKeyspace = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.prototype.clearKeyspace = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.prototype.hasKeyspace = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 3:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert.prototype.getMetadata = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional AlertSpec spec = 2;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert.prototype.getSpec = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec, 2));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional AlertStatus status = 3;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert.prototype.getStatus = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus, 3));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList.prototype.getMetadata = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Alert items = 2;
 * @return {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert, 2));
};


/**
 * @param {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert=} opt_value
 * @param {number=} opt_index
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    subject: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    message: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    level: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    entityref: (f = msg.getEntityref()) && k8s_io_api_core_v1_generated_pb.ObjectReference.toObject(includeInstance, f),
    notifiername: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    owner: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    ttl: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    fieldsMap: (f = msg.getFieldsMap()) ? f.toObject(includeInstance, undefined) : [],
    url: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    image: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    tenantref: (f = msg.getTenantref()) && k8s_io_api_core_v1_generated_pb.ObjectReference.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLevel(value);
      break;
    case 4:
      var value = new k8s_io_api_core_v1_generated_pb.ObjectReference;
      reader.readMessage(value,k8s_io_api_core_v1_generated_pb.ObjectReference.deserializeBinaryFromReader);
      msg.setEntityref(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotifiername(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTtl(value);
      break;
    case 8:
      var value = msg.getFieldsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setImage(value);
      break;
    case 11:
      var value = new k8s_io_api_core_v1_generated_pb.ObjectReference;
      reader.readMessage(value,k8s_io_api_core_v1_generated_pb.ObjectReference.deserializeBinaryFromReader);
      msg.setTenantref(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEntityref();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      k8s_io_api_core_v1_generated_pb.ObjectReference.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getFieldsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getTenantref();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      k8s_io_api_core_v1_generated_pb.ObjectReference.serializeBinaryToWriter
    );
  }
};


/**
 * optional string subject = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.setSubject = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.clearSubject = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.hasSubject = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.setMessage = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.clearMessage = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string level = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.getLevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.setLevel = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.clearLevel = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.hasLevel = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional k8s.io.api.core.v1.ObjectReference entityRef = 4;
 * @return {?proto.k8s.io.api.core.v1.ObjectReference}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.getEntityref = function() {
  return /** @type{?proto.k8s.io.api.core.v1.ObjectReference} */ (
    jspb.Message.getWrapperField(this, k8s_io_api_core_v1_generated_pb.ObjectReference, 4));
};


/**
 * @param {?proto.k8s.io.api.core.v1.ObjectReference|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.setEntityref = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.clearEntityref = function() {
  return this.setEntityref(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.hasEntityref = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string notifierName = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.getNotifiername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.setNotifiername = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.clearNotifiername = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.hasNotifiername = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string owner = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.setOwner = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.clearOwner = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 ttl = 7;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.getTtl = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.setTtl = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.clearTtl = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.hasTtl = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * map<string, string> fields = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.getFieldsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.clearFieldsMap = function() {
  this.getFieldsMap().clear();
  return this;};


/**
 * optional string url = 9;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string image = 10;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.getImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.setImage = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.clearImage = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.hasImage = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional k8s.io.api.core.v1.ObjectReference tenantRef = 11;
 * @return {?proto.k8s.io.api.core.v1.ObjectReference}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.getTenantref = function() {
  return /** @type{?proto.k8s.io.api.core.v1.ObjectReference} */ (
    jspb.Message.getWrapperField(this, k8s_io_api_core_v1_generated_pb.ObjectReference, 11));
};


/**
 * @param {?proto.k8s.io.api.core.v1.ObjectReference|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.setTenantref = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.clearTenantref = function() {
  return this.setTenantref(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.prototype.hasTenantref = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    firedat: (f = msg.getFiredat()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
    observedgeneration: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    updatedat: (f = msg.getUpdatedat()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
    failurereason: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    failuremessage: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    conditionsList: jspb.Message.toObjectList(msg.getConditionsList(),
    k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
      msg.setFiredat(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setObservedgeneration(value);
      break;
    case 4:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailurereason(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailuremessage(value);
      break;
    case 7:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.deserializeBinaryFromReader);
      msg.addConditions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFiredat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getConditionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time firedAt = 2;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.prototype.getFiredat = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 2));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.prototype.setFiredat = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.prototype.clearFiredat = function() {
  return this.setFiredat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.prototype.hasFiredat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 observedGeneration = 3;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.prototype.getObservedgeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.prototype.setObservedgeneration = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.prototype.clearObservedgeneration = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.prototype.hasObservedgeneration = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time updatedAt = 4;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.prototype.getUpdatedat = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 4));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.prototype.setUpdatedat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.prototype.clearUpdatedat = function() {
  return this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string failureReason = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.prototype.getFailurereason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.prototype.setFailurereason = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.prototype.clearFailurereason = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.prototype.hasFailurereason = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string failureMessage = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.prototype.getFailuremessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.prototype.setFailuremessage = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.prototype.clearFailuremessage = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.prototype.hasFailuremessage = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated k8s.io.apimachinery.pkg.apis.meta.v1.Condition conditions = 7;
 * @return {!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.prototype.getConditionsList = function() {
  return /** @type{!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>} */ (
    jspb.Message.getRepeatedWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition, 7));
};


/**
 * @param {!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.prototype.setConditionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.prototype.addConditions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus.prototype.clearConditionsList = function() {
  return this.setConditionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    accesskey: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    secretkey: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    region: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    host: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccesskey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecretkey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string accessKey = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec.prototype.getAccesskey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec.prototype.setAccesskey = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec.prototype.clearAccesskey = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec.prototype.hasAccesskey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string secretKey = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec.prototype.getSecretkey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec.prototype.setSecretkey = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec.prototype.clearSecretkey = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec.prototype.hasSecretkey = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string region = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec.prototype.setRegion = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec.prototype.clearRegion = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec.prototype.hasRegion = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string host = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    hostname: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    region: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string hostName = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.prototype.getHostname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.prototype.setHostname = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.prototype.clearHostname = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.prototype.hasHostname = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string username = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string password = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string region = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.prototype.setRegion = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.prototype.clearRegion = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.prototype.hasRegion = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string url = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    database: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    region: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    clusterid: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    s3staginglocation: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    iamrole: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabase(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterid(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setS3staginglocation(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setIamrole(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string database = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.getDatabase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.setDatabase = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.clearDatabase = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.hasDatabase = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string region = 7;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.setRegion = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.clearRegion = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.hasRegion = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string clusterID = 8;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.getClusterid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.setClusterid = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.clearClusterid = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.hasClusterid = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string s3StagingLocation = 9;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.getS3staginglocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.setS3staginglocation = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.clearS3staginglocation = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.hasS3staginglocation = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string iamRole = 10;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.getIamrole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.setIamrole = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.clearIamrole = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.prototype.hasIamrole = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    keyspace: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    protocolversion: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    localdc: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    loadbalancepolicy: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyspace(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setProtocolversion(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocaldc(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoadbalancepolicy(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string keyspace = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.getKeyspace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.setKeyspace = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.clearKeyspace = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.hasKeyspace = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string protocolVersion = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.getProtocolversion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.setProtocolversion = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.clearProtocolversion = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.hasProtocolversion = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string localDC = 7;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.getLocaldc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.setLocaldc = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.clearLocaldc = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.hasLocaldc = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string loadBalancePolicy = 8;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.getLoadbalancepolicy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.setLoadbalancepolicy = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.clearLoadbalancepolicy = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.hasLoadbalancepolicy = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string url = 9;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    keyspace: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyspace(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string keyspace = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.prototype.getKeyspace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.prototype.setKeyspace = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.prototype.clearKeyspace = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.prototype.hasKeyspace = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    keyspace: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyspace(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string keyspace = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.prototype.getKeyspace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.prototype.setKeyspace = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.prototype.clearKeyspace = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.prototype.hasKeyspace = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    schema: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchema(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string schema = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.prototype.getSchema = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.prototype.setSchema = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.prototype.clearSchema = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.prototype.hasSchema = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    schema: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchema(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string schema = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.prototype.getSchema = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.prototype.setSchema = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.prototype.clearSchema = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.prototype.hasSchema = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 3:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment.prototype.getMetadata = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional AttachmentSpec spec = 2;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment.prototype.getSpec = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec, 2));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional AttachmentStatus status = 3;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment.prototype.getStatus = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus, 3));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList.prototype.getMetadata = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Attachment items = 2;
 * @return {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment, 2));
};


/**
 * @param {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    owner: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    description: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    entityref: (f = msg.getEntityref()) && k8s_io_api_core_v1_generated_pb.ObjectReference.toObject(includeInstance, f),
    bucketname: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    path: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    tenantref: (f = msg.getTenantref()) && k8s_io_api_core_v1_generated_pb.ObjectReference.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new k8s_io_api_core_v1_generated_pb.ObjectReference;
      reader.readMessage(value,k8s_io_api_core_v1_generated_pb.ObjectReference.deserializeBinaryFromReader);
      msg.setEntityref(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucketname(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 6:
      var value = new k8s_io_api_core_v1_generated_pb.ObjectReference;
      reader.readMessage(value,k8s_io_api_core_v1_generated_pb.ObjectReference.deserializeBinaryFromReader);
      msg.setTenantref(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEntityref();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      k8s_io_api_core_v1_generated_pb.ObjectReference.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTenantref();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      k8s_io_api_core_v1_generated_pb.ObjectReference.serializeBinaryToWriter
    );
  }
};


/**
 * optional string owner = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.prototype.setOwner = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.prototype.clearOwner = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional k8s.io.api.core.v1.ObjectReference entityRef = 3;
 * @return {?proto.k8s.io.api.core.v1.ObjectReference}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.prototype.getEntityref = function() {
  return /** @type{?proto.k8s.io.api.core.v1.ObjectReference} */ (
    jspb.Message.getWrapperField(this, k8s_io_api_core_v1_generated_pb.ObjectReference, 3));
};


/**
 * @param {?proto.k8s.io.api.core.v1.ObjectReference|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.prototype.setEntityref = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.prototype.clearEntityref = function() {
  return this.setEntityref(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.prototype.hasEntityref = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string bucketName = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.prototype.getBucketname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.prototype.setBucketname = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.prototype.clearBucketname = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.prototype.hasBucketname = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string path = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.prototype.setPath = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.prototype.clearPath = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.prototype.hasPath = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional k8s.io.api.core.v1.ObjectReference tenantRef = 6;
 * @return {?proto.k8s.io.api.core.v1.ObjectReference}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.prototype.getTenantref = function() {
  return /** @type{?proto.k8s.io.api.core.v1.ObjectReference} */ (
    jspb.Message.getWrapperField(this, k8s_io_api_core_v1_generated_pb.ObjectReference, 6));
};


/**
 * @param {?proto.k8s.io.api.core.v1.ObjectReference|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.prototype.setTenantref = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.prototype.clearTenantref = function() {
  return this.setTenantref(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec.prototype.hasTenantref = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    observedgeneration: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    updatedat: (f = msg.getUpdatedat()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
    failurereason: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    failuremessage: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    conditionsList: jspb.Message.toObjectList(msg.getConditionsList(),
    k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setObservedgeneration(value);
      break;
    case 2:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailurereason(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailuremessage(value);
      break;
    case 5:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.deserializeBinaryFromReader);
      msg.addConditions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getConditionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 observedGeneration = 1;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.prototype.getObservedgeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.prototype.setObservedgeneration = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.prototype.clearObservedgeneration = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.prototype.hasObservedgeneration = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time updatedAt = 2;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.prototype.getUpdatedat = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 2));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.prototype.setUpdatedat = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.prototype.clearUpdatedat = function() {
  return this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string failureReason = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.prototype.getFailurereason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.prototype.setFailurereason = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.prototype.clearFailurereason = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.prototype.hasFailurereason = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string failureMessage = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.prototype.getFailuremessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.prototype.setFailuremessage = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.prototype.clearFailuremessage = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.prototype.hasFailuremessage = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated k8s.io.apimachinery.pkg.apis.meta.v1.Condition conditions = 5;
 * @return {!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.prototype.getConditionsList = function() {
  return /** @type{!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>} */ (
    jspb.Message.getRepeatedWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition, 5));
};


/**
 * @param {!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.prototype.setConditionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.prototype.addConditions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus.prototype.clearConditionsList = function() {
  return this.setConditionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    bucketname: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    path: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucketname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string bucketName = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec.prototype.getBucketname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec.prototype.setBucketname = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec.prototype.clearBucketname = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec.prototype.hasBucketname = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string path = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec.prototype.setPath = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec.prototype.clearPath = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec.prototype.hasPath = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultregion: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    accesskey: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    secretkey: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultregion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccesskey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecretkey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string defaultRegion = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec.prototype.getDefaultregion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec.prototype.setDefaultregion = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec.prototype.clearDefaultregion = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec.prototype.hasDefaultregion = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string accessKey = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec.prototype.getAccesskey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec.prototype.setAccesskey = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec.prototype.clearAccesskey = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec.prototype.hasAccesskey = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string secretKey = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec.prototype.getSecretkey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec.prototype.setSecretkey = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec.prototype.clearSecretkey = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec.prototype.hasSecretkey = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    database: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabase(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string username = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string password = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string database = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.prototype.getDatabase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.prototype.setDatabase = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.prototype.clearDatabase = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.prototype.hasDatabase = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    storageaccount: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    accesskey: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStorageaccount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccesskey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string storageAccount = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec.prototype.getStorageaccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec.prototype.setStorageaccount = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec.prototype.clearStorageaccount = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec.prototype.hasStorageaccount = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string accessKey = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec.prototype.getAccesskey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec.prototype.setAccesskey = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec.prototype.clearAccesskey = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec.prototype.hasAccesskey = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    ssh: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSsh(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec.prototype.setToken = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec.prototype.clearToken = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec.prototype.hasToken = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string username = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string ssh = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec.prototype.getSsh = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec.prototype.setSsh = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec.prototype.clearSsh = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec.prototype.hasSsh = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec.prototype.setToken = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec.prototype.clearToken = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec.prototype.hasToken = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas.toObject = function(includeInstance, msg) {
  var f, obj = {
    enabled: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    hardlimit: (f = msg.getHardlimit()) && k8s_io_apimachinery_pkg_api_resource_generated_pb.Quantity.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 2:
      var value = new k8s_io_apimachinery_pkg_api_resource_generated_pb.Quantity;
      reader.readMessage(value,k8s_io_apimachinery_pkg_api_resource_generated_pb.Quantity.deserializeBinaryFromReader);
      msg.setHardlimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getHardlimit();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      k8s_io_apimachinery_pkg_api_resource_generated_pb.Quantity.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool enabled = 1;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas.prototype.setEnabled = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas.prototype.clearEnabled = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas.prototype.hasEnabled = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional k8s.io.apimachinery.pkg.api.resource.Quantity hardLimit = 2;
 * @return {?proto.k8s.io.apimachinery.pkg.api.resource.Quantity}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas.prototype.getHardlimit = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.api.resource.Quantity} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_api_resource_generated_pb.Quantity, 2));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.api.resource.Quantity|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas.prototype.setHardlimit = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas.prototype.clearHardlimit = function() {
  return this.setHardlimit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas.prototype.hasHardlimit = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    database: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabase(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string database = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.prototype.getDatabase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.prototype.setDatabase = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.prototype.clearDatabase = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.prototype.hasDatabase = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    database: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabase(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string database = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.prototype.getDatabase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.prototype.setDatabase = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.prototype.clearDatabase = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.prototype.hasDatabase = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 3:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection.prototype.getMetadata = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ConnectionSpec spec = 2;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection.prototype.getSpec = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec, 2));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ConnectionStatus status = 3;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection.prototype.getStatus = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus, 3));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList.prototype.getMetadata = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Connection items = 2;
 * @return {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection, 2));
};


/**
 * @param {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection=} opt_value
 * @param {number=} opt_index
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    tenantref: (f = msg.getTenantref()) && k8s_io_api_core_v1_generated_pb.ObjectReference.toObject(includeInstance, f),
    category: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    provider: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    secretref: (f = msg.getSecretref()) && k8s_io_api_core_v1_generated_pb.SecretReference.toObject(includeInstance, f),
    athena: (f = msg.getAthena()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.toObject(includeInstance, f),
    drill: (f = msg.getDrill()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.toObject(includeInstance, f),
    druid: (f = msg.getDruid()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.toObject(includeInstance, f),
    hive: (f = msg.getHive()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.toObject(includeInstance, f),
    redshift: (f = msg.getRedshift()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.toObject(includeInstance, f),
    dremio: (f = msg.getDremio()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.toObject(includeInstance, f),
    db2: (f = msg.getDb2()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.toObject(includeInstance, f),
    bigquery: (f = msg.getBigquery()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.toObject(includeInstance, f),
    cassandra: (f = msg.getCassandra()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.toObject(includeInstance, f),
    azuresqldatabase: (f = msg.getAzuresqldatabase()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.toObject(includeInstance, f),
    mongodb: (f = msg.getMongodb()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.toObject(includeInstance, f),
    mysql: (f = msg.getMysql()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.toObject(includeInstance, f),
    odbc: (f = msg.getOdbc()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec.toObject(includeInstance, f),
    oracle: (f = msg.getOracle()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.toObject(includeInstance, f),
    postgres: (f = msg.getPostgres()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.toObject(includeInstance, f),
    presto: (f = msg.getPresto()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.toObject(includeInstance, f),
    snowflake: (f = msg.getSnowflake()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.toObject(includeInstance, f),
    sybase: (f = msg.getSybase()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.toObject(includeInstance, f),
    vertica: (f = msg.getVertica()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.toObject(includeInstance, f),
    cockroachdb: (f = msg.getCockroachdb()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.toObject(includeInstance, f),
    elasticsearch: (f = msg.getElasticsearch()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.toObject(includeInstance, f),
    informix: (f = msg.getInformix()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.toObject(includeInstance, f),
    hana: (f = msg.getHana()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.toObject(includeInstance, f),
    teradata: (f = msg.getTeradata()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.toObject(includeInstance, f),
    spanner: (f = msg.getSpanner()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.toObject(includeInstance, f),
    spark: (f = msg.getSpark()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.toObject(includeInstance, f),
    mssqlserver: (f = msg.getMssqlserver()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.toObject(includeInstance, f),
    clickhouse: (f = msg.getClickhouse()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.toObject(includeInstance, f),
    greenplum: (f = msg.getGreenplum()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.toObject(includeInstance, f),
    couchbase: (f = msg.getCouchbase()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.toObject(includeInstance, f),
    exasol: (f = msg.getExasol()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.toObject(includeInstance, f),
    sqlite: (f = msg.getSqlite()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec.toObject(includeInstance, f),
    singlestore: (f = msg.getSinglestore()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.toObject(includeInstance, f),
    gsheets: (f = msg.getGsheets()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec.toObject(includeInstance, f),
    azurestorage: (f = msg.getAzurestorage()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec.toObject(includeInstance, f),
    alicloud: (f = msg.getAlicloud()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec.toObject(includeInstance, f),
    digitalocean: (f = msg.getDigitalocean()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.toObject(includeInstance, f),
    hetzner: (f = msg.getHetzner()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec.toObject(includeInstance, f),
    gcpstorage: (f = msg.getGcpstorage()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec.toObject(includeInstance, f),
    linode: (f = msg.getLinode()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec.toObject(includeInstance, f),
    minio: (f = msg.getMinio()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec.toObject(includeInstance, f),
    openstack: (f = msg.getOpenstack()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.toObject(includeInstance, f),
    ovh: (f = msg.getOvh()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec.toObject(includeInstance, f),
    aws: (f = msg.getAws()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec.toObject(includeInstance, f),
    smtp: (f = msg.getSmtp()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.toObject(includeInstance, f),
    ftp: (f = msg.getFtp()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec.toObject(includeInstance, f),
    sftp: (f = msg.getSftp()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec.toObject(includeInstance, f),
    dropbox: (f = msg.getDropbox()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec.toObject(includeInstance, f),
    box: (f = msg.getBox()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec.toObject(includeInstance, f),
    imageregistry: (f = msg.getImageregistry()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec.toObject(includeInstance, f),
    github: (f = msg.getGithub()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec.toObject(includeInstance, f),
    gitlab: (f = msg.getGitlab()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec.toObject(includeInstance, f),
    bitbucket: (f = msg.getBitbucket()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec.toObject(includeInstance, f),
    slack: (f = msg.getSlack()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec.toObject(includeInstance, f),
    msteam: (f = msg.getMsteam()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec.toObject(includeInstance, f),
    mattermost: (f = msg.getMattermost()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec.toObject(includeInstance, f),
    hipchat: (f = msg.getHipchat()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec.toObject(includeInstance, f),
    victorop: (f = msg.getVictorop()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec.toObject(includeInstance, f),
    pagerduty: (f = msg.getPagerduty()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec.toObject(includeInstance, f),
    pushover: (f = msg.getPushover()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec.toObject(includeInstance, f),
    opsgenie: (f = msg.getOpsgenie()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec.toObject(includeInstance, f),
    webhook: (f = msg.getWebhook()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.toObject(includeInstance, f),
    facebook: (f = msg.getFacebook()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec.toObject(includeInstance, f),
    twitter: (f = msg.getTwitter()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec.toObject(includeInstance, f),
    rabbitmq: (f = msg.getRabbitmq()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec.toObject(includeInstance, f),
    kafka: (f = msg.getKafka()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.toObject(includeInstance, f),
    neo4j: (f = msg.getNeo4j()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.toObject(includeInstance, f),
    discord: (f = msg.getDiscord()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.toObject(includeInstance, f),
    influx: (f = msg.getInflux()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.toObject(includeInstance, f),
    timescale: (f = msg.getTimescale()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.toObject(includeInstance, f),
    victoriametrics: (f = msg.getVictoriametrics()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.toObject(includeInstance, f),
    saleforce: (f = msg.getSaleforce()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.toObject(includeInstance, f),
    sapcrm: (f = msg.getSapcrm()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.toObject(includeInstance, f),
    airtable: (f = msg.getAirtable()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.toObject(includeInstance, f),
    appwrite: (f = msg.getAppwrite()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.toObject(includeInstance, f),
    owner: (f = jspb.Message.getField(msg, 82)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_api_core_v1_generated_pb.ObjectReference;
      reader.readMessage(value,k8s_io_api_core_v1_generated_pb.ObjectReference.deserializeBinaryFromReader);
      msg.setTenantref(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 4:
      var value = new k8s_io_api_core_v1_generated_pb.SecretReference;
      reader.readMessage(value,k8s_io_api_core_v1_generated_pb.SecretReference.deserializeBinaryFromReader);
      msg.setSecretref(value);
      break;
    case 5:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.deserializeBinaryFromReader);
      msg.setAthena(value);
      break;
    case 6:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.deserializeBinaryFromReader);
      msg.setDrill(value);
      break;
    case 7:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.deserializeBinaryFromReader);
      msg.setDruid(value);
      break;
    case 8:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.deserializeBinaryFromReader);
      msg.setHive(value);
      break;
    case 9:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.deserializeBinaryFromReader);
      msg.setRedshift(value);
      break;
    case 10:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.deserializeBinaryFromReader);
      msg.setDremio(value);
      break;
    case 11:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.deserializeBinaryFromReader);
      msg.setDb2(value);
      break;
    case 12:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.deserializeBinaryFromReader);
      msg.setBigquery(value);
      break;
    case 13:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.deserializeBinaryFromReader);
      msg.setCassandra(value);
      break;
    case 14:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.deserializeBinaryFromReader);
      msg.setAzuresqldatabase(value);
      break;
    case 15:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.deserializeBinaryFromReader);
      msg.setMongodb(value);
      break;
    case 16:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.deserializeBinaryFromReader);
      msg.setMysql(value);
      break;
    case 17:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec.deserializeBinaryFromReader);
      msg.setOdbc(value);
      break;
    case 18:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.deserializeBinaryFromReader);
      msg.setOracle(value);
      break;
    case 19:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.deserializeBinaryFromReader);
      msg.setPostgres(value);
      break;
    case 20:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.deserializeBinaryFromReader);
      msg.setPresto(value);
      break;
    case 22:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.deserializeBinaryFromReader);
      msg.setSnowflake(value);
      break;
    case 23:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.deserializeBinaryFromReader);
      msg.setSybase(value);
      break;
    case 24:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.deserializeBinaryFromReader);
      msg.setVertica(value);
      break;
    case 25:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.deserializeBinaryFromReader);
      msg.setCockroachdb(value);
      break;
    case 26:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.deserializeBinaryFromReader);
      msg.setElasticsearch(value);
      break;
    case 27:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.deserializeBinaryFromReader);
      msg.setInformix(value);
      break;
    case 28:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.deserializeBinaryFromReader);
      msg.setHana(value);
      break;
    case 29:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.deserializeBinaryFromReader);
      msg.setTeradata(value);
      break;
    case 30:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.deserializeBinaryFromReader);
      msg.setSpanner(value);
      break;
    case 31:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.deserializeBinaryFromReader);
      msg.setSpark(value);
      break;
    case 32:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.deserializeBinaryFromReader);
      msg.setMssqlserver(value);
      break;
    case 33:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.deserializeBinaryFromReader);
      msg.setClickhouse(value);
      break;
    case 34:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.deserializeBinaryFromReader);
      msg.setGreenplum(value);
      break;
    case 35:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.deserializeBinaryFromReader);
      msg.setCouchbase(value);
      break;
    case 36:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.deserializeBinaryFromReader);
      msg.setExasol(value);
      break;
    case 37:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec.deserializeBinaryFromReader);
      msg.setSqlite(value);
      break;
    case 38:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.deserializeBinaryFromReader);
      msg.setSinglestore(value);
      break;
    case 39:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec.deserializeBinaryFromReader);
      msg.setGsheets(value);
      break;
    case 40:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec.deserializeBinaryFromReader);
      msg.setAzurestorage(value);
      break;
    case 41:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec.deserializeBinaryFromReader);
      msg.setAlicloud(value);
      break;
    case 42:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.deserializeBinaryFromReader);
      msg.setDigitalocean(value);
      break;
    case 43:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec.deserializeBinaryFromReader);
      msg.setHetzner(value);
      break;
    case 45:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec.deserializeBinaryFromReader);
      msg.setGcpstorage(value);
      break;
    case 46:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec.deserializeBinaryFromReader);
      msg.setLinode(value);
      break;
    case 47:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec.deserializeBinaryFromReader);
      msg.setMinio(value);
      break;
    case 48:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.deserializeBinaryFromReader);
      msg.setOpenstack(value);
      break;
    case 49:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec.deserializeBinaryFromReader);
      msg.setOvh(value);
      break;
    case 50:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec.deserializeBinaryFromReader);
      msg.setAws(value);
      break;
    case 51:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.deserializeBinaryFromReader);
      msg.setSmtp(value);
      break;
    case 52:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec.deserializeBinaryFromReader);
      msg.setFtp(value);
      break;
    case 53:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec.deserializeBinaryFromReader);
      msg.setSftp(value);
      break;
    case 54:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec.deserializeBinaryFromReader);
      msg.setDropbox(value);
      break;
    case 55:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec.deserializeBinaryFromReader);
      msg.setBox(value);
      break;
    case 56:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec.deserializeBinaryFromReader);
      msg.setImageregistry(value);
      break;
    case 57:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec.deserializeBinaryFromReader);
      msg.setGithub(value);
      break;
    case 58:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec.deserializeBinaryFromReader);
      msg.setGitlab(value);
      break;
    case 59:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec.deserializeBinaryFromReader);
      msg.setBitbucket(value);
      break;
    case 60:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec.deserializeBinaryFromReader);
      msg.setSlack(value);
      break;
    case 61:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec.deserializeBinaryFromReader);
      msg.setMsteam(value);
      break;
    case 62:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec.deserializeBinaryFromReader);
      msg.setMattermost(value);
      break;
    case 63:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec.deserializeBinaryFromReader);
      msg.setHipchat(value);
      break;
    case 64:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec.deserializeBinaryFromReader);
      msg.setVictorop(value);
      break;
    case 65:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec.deserializeBinaryFromReader);
      msg.setPagerduty(value);
      break;
    case 66:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec.deserializeBinaryFromReader);
      msg.setPushover(value);
      break;
    case 67:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec.deserializeBinaryFromReader);
      msg.setOpsgenie(value);
      break;
    case 68:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.deserializeBinaryFromReader);
      msg.setWebhook(value);
      break;
    case 69:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec.deserializeBinaryFromReader);
      msg.setFacebook(value);
      break;
    case 70:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec.deserializeBinaryFromReader);
      msg.setTwitter(value);
      break;
    case 71:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec.deserializeBinaryFromReader);
      msg.setRabbitmq(value);
      break;
    case 72:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.deserializeBinaryFromReader);
      msg.setKafka(value);
      break;
    case 73:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.deserializeBinaryFromReader);
      msg.setNeo4j(value);
      break;
    case 74:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.deserializeBinaryFromReader);
      msg.setDiscord(value);
      break;
    case 75:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.deserializeBinaryFromReader);
      msg.setInflux(value);
      break;
    case 76:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.deserializeBinaryFromReader);
      msg.setTimescale(value);
      break;
    case 77:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.deserializeBinaryFromReader);
      msg.setVictoriametrics(value);
      break;
    case 78:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.deserializeBinaryFromReader);
      msg.setSaleforce(value);
      break;
    case 79:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.deserializeBinaryFromReader);
      msg.setSapcrm(value);
      break;
    case 80:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.deserializeBinaryFromReader);
      msg.setAirtable(value);
      break;
    case 81:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.deserializeBinaryFromReader);
      msg.setAppwrite(value);
      break;
    case 82:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTenantref();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_api_core_v1_generated_pb.ObjectReference.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSecretref();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      k8s_io_api_core_v1_generated_pb.SecretReference.serializeBinaryToWriter
    );
  }
  f = message.getAthena();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec.serializeBinaryToWriter
    );
  }
  f = message.getDrill();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec.serializeBinaryToWriter
    );
  }
  f = message.getDruid();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec.serializeBinaryToWriter
    );
  }
  f = message.getHive();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec.serializeBinaryToWriter
    );
  }
  f = message.getRedshift();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec.serializeBinaryToWriter
    );
  }
  f = message.getDremio();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.serializeBinaryToWriter
    );
  }
  f = message.getDb2();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.serializeBinaryToWriter
    );
  }
  f = message.getBigquery();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.serializeBinaryToWriter
    );
  }
  f = message.getCassandra();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec.serializeBinaryToWriter
    );
  }
  f = message.getAzuresqldatabase();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec.serializeBinaryToWriter
    );
  }
  f = message.getMongodb();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.serializeBinaryToWriter
    );
  }
  f = message.getMysql();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.serializeBinaryToWriter
    );
  }
  f = message.getOdbc();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec.serializeBinaryToWriter
    );
  }
  f = message.getOracle();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.serializeBinaryToWriter
    );
  }
  f = message.getPostgres();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.serializeBinaryToWriter
    );
  }
  f = message.getPresto();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.serializeBinaryToWriter
    );
  }
  f = message.getSnowflake();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.serializeBinaryToWriter
    );
  }
  f = message.getSybase();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.serializeBinaryToWriter
    );
  }
  f = message.getVertica();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.serializeBinaryToWriter
    );
  }
  f = message.getCockroachdb();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec.serializeBinaryToWriter
    );
  }
  f = message.getElasticsearch();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.serializeBinaryToWriter
    );
  }
  f = message.getInformix();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.serializeBinaryToWriter
    );
  }
  f = message.getHana();
  if (f != null) {
    writer.writeMessage(
      28,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.serializeBinaryToWriter
    );
  }
  f = message.getTeradata();
  if (f != null) {
    writer.writeMessage(
      29,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.serializeBinaryToWriter
    );
  }
  f = message.getSpanner();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.serializeBinaryToWriter
    );
  }
  f = message.getSpark();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec.serializeBinaryToWriter
    );
  }
  f = message.getMssqlserver();
  if (f != null) {
    writer.writeMessage(
      32,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.serializeBinaryToWriter
    );
  }
  f = message.getClickhouse();
  if (f != null) {
    writer.writeMessage(
      33,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec.serializeBinaryToWriter
    );
  }
  f = message.getGreenplum();
  if (f != null) {
    writer.writeMessage(
      34,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.serializeBinaryToWriter
    );
  }
  f = message.getCouchbase();
  if (f != null) {
    writer.writeMessage(
      35,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.serializeBinaryToWriter
    );
  }
  f = message.getExasol();
  if (f != null) {
    writer.writeMessage(
      36,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.serializeBinaryToWriter
    );
  }
  f = message.getSqlite();
  if (f != null) {
    writer.writeMessage(
      37,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec.serializeBinaryToWriter
    );
  }
  f = message.getSinglestore();
  if (f != null) {
    writer.writeMessage(
      38,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.serializeBinaryToWriter
    );
  }
  f = message.getGsheets();
  if (f != null) {
    writer.writeMessage(
      39,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec.serializeBinaryToWriter
    );
  }
  f = message.getAzurestorage();
  if (f != null) {
    writer.writeMessage(
      40,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec.serializeBinaryToWriter
    );
  }
  f = message.getAlicloud();
  if (f != null) {
    writer.writeMessage(
      41,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec.serializeBinaryToWriter
    );
  }
  f = message.getDigitalocean();
  if (f != null) {
    writer.writeMessage(
      42,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.serializeBinaryToWriter
    );
  }
  f = message.getHetzner();
  if (f != null) {
    writer.writeMessage(
      43,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec.serializeBinaryToWriter
    );
  }
  f = message.getGcpstorage();
  if (f != null) {
    writer.writeMessage(
      45,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec.serializeBinaryToWriter
    );
  }
  f = message.getLinode();
  if (f != null) {
    writer.writeMessage(
      46,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec.serializeBinaryToWriter
    );
  }
  f = message.getMinio();
  if (f != null) {
    writer.writeMessage(
      47,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec.serializeBinaryToWriter
    );
  }
  f = message.getOpenstack();
  if (f != null) {
    writer.writeMessage(
      48,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.serializeBinaryToWriter
    );
  }
  f = message.getOvh();
  if (f != null) {
    writer.writeMessage(
      49,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec.serializeBinaryToWriter
    );
  }
  f = message.getAws();
  if (f != null) {
    writer.writeMessage(
      50,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec.serializeBinaryToWriter
    );
  }
  f = message.getSmtp();
  if (f != null) {
    writer.writeMessage(
      51,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.serializeBinaryToWriter
    );
  }
  f = message.getFtp();
  if (f != null) {
    writer.writeMessage(
      52,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec.serializeBinaryToWriter
    );
  }
  f = message.getSftp();
  if (f != null) {
    writer.writeMessage(
      53,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec.serializeBinaryToWriter
    );
  }
  f = message.getDropbox();
  if (f != null) {
    writer.writeMessage(
      54,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec.serializeBinaryToWriter
    );
  }
  f = message.getBox();
  if (f != null) {
    writer.writeMessage(
      55,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec.serializeBinaryToWriter
    );
  }
  f = message.getImageregistry();
  if (f != null) {
    writer.writeMessage(
      56,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec.serializeBinaryToWriter
    );
  }
  f = message.getGithub();
  if (f != null) {
    writer.writeMessage(
      57,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec.serializeBinaryToWriter
    );
  }
  f = message.getGitlab();
  if (f != null) {
    writer.writeMessage(
      58,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec.serializeBinaryToWriter
    );
  }
  f = message.getBitbucket();
  if (f != null) {
    writer.writeMessage(
      59,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec.serializeBinaryToWriter
    );
  }
  f = message.getSlack();
  if (f != null) {
    writer.writeMessage(
      60,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec.serializeBinaryToWriter
    );
  }
  f = message.getMsteam();
  if (f != null) {
    writer.writeMessage(
      61,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec.serializeBinaryToWriter
    );
  }
  f = message.getMattermost();
  if (f != null) {
    writer.writeMessage(
      62,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec.serializeBinaryToWriter
    );
  }
  f = message.getHipchat();
  if (f != null) {
    writer.writeMessage(
      63,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec.serializeBinaryToWriter
    );
  }
  f = message.getVictorop();
  if (f != null) {
    writer.writeMessage(
      64,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec.serializeBinaryToWriter
    );
  }
  f = message.getPagerduty();
  if (f != null) {
    writer.writeMessage(
      65,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec.serializeBinaryToWriter
    );
  }
  f = message.getPushover();
  if (f != null) {
    writer.writeMessage(
      66,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec.serializeBinaryToWriter
    );
  }
  f = message.getOpsgenie();
  if (f != null) {
    writer.writeMessage(
      67,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec.serializeBinaryToWriter
    );
  }
  f = message.getWebhook();
  if (f != null) {
    writer.writeMessage(
      68,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.serializeBinaryToWriter
    );
  }
  f = message.getFacebook();
  if (f != null) {
    writer.writeMessage(
      69,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec.serializeBinaryToWriter
    );
  }
  f = message.getTwitter();
  if (f != null) {
    writer.writeMessage(
      70,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec.serializeBinaryToWriter
    );
  }
  f = message.getRabbitmq();
  if (f != null) {
    writer.writeMessage(
      71,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec.serializeBinaryToWriter
    );
  }
  f = message.getKafka();
  if (f != null) {
    writer.writeMessage(
      72,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.serializeBinaryToWriter
    );
  }
  f = message.getNeo4j();
  if (f != null) {
    writer.writeMessage(
      73,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.serializeBinaryToWriter
    );
  }
  f = message.getDiscord();
  if (f != null) {
    writer.writeMessage(
      74,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.serializeBinaryToWriter
    );
  }
  f = message.getInflux();
  if (f != null) {
    writer.writeMessage(
      75,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.serializeBinaryToWriter
    );
  }
  f = message.getTimescale();
  if (f != null) {
    writer.writeMessage(
      76,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.serializeBinaryToWriter
    );
  }
  f = message.getVictoriametrics();
  if (f != null) {
    writer.writeMessage(
      77,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.serializeBinaryToWriter
    );
  }
  f = message.getSaleforce();
  if (f != null) {
    writer.writeMessage(
      78,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.serializeBinaryToWriter
    );
  }
  f = message.getSapcrm();
  if (f != null) {
    writer.writeMessage(
      79,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.serializeBinaryToWriter
    );
  }
  f = message.getAirtable();
  if (f != null) {
    writer.writeMessage(
      80,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec.serializeBinaryToWriter
    );
  }
  f = message.getAppwrite();
  if (f != null) {
    writer.writeMessage(
      81,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 82));
  if (f != null) {
    writer.writeString(
      82,
      f
    );
  }
};


/**
 * optional k8s.io.api.core.v1.ObjectReference tenantRef = 1;
 * @return {?proto.k8s.io.api.core.v1.ObjectReference}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getTenantref = function() {
  return /** @type{?proto.k8s.io.api.core.v1.ObjectReference} */ (
    jspb.Message.getWrapperField(this, k8s_io_api_core_v1_generated_pb.ObjectReference, 1));
};


/**
 * @param {?proto.k8s.io.api.core.v1.ObjectReference|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setTenantref = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearTenantref = function() {
  return this.setTenantref(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasTenantref = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string category = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setCategory = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearCategory = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasCategory = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string provider = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setProvider = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearProvider = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasProvider = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional k8s.io.api.core.v1.SecretReference secretRef = 4;
 * @return {?proto.k8s.io.api.core.v1.SecretReference}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getSecretref = function() {
  return /** @type{?proto.k8s.io.api.core.v1.SecretReference} */ (
    jspb.Message.getWrapperField(this, k8s_io_api_core_v1_generated_pb.SecretReference, 4));
};


/**
 * @param {?proto.k8s.io.api.core.v1.SecretReference|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setSecretref = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearSecretref = function() {
  return this.setSecretref(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasSecretref = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional AmazonAthenaSpec athena = 5;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getAthena = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec, 5));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setAthena = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearAthena = function() {
  return this.setAthena(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasAthena = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ApacheDrillSpec drill = 6;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getDrill = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec, 6));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setDrill = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearDrill = function() {
  return this.setDrill(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasDrill = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ApacheDruidSpec druid = 7;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getDruid = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec, 7));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setDruid = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearDruid = function() {
  return this.setDruid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasDruid = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ApacheHiveSpec hive = 8;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getHive = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec, 8));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setHive = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearHive = function() {
  return this.setHive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasHive = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional AmazonRedShiftSpec redshift = 9;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getRedshift = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec, 9));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setRedshift = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearRedshift = function() {
  return this.setRedshift(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasRedshift = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional DremioSpec dremio = 10;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getDremio = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec, 10));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setDremio = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearDremio = function() {
  return this.setDremio(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasDremio = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional DB2Spec db2 = 11;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getDb2 = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec, 11));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setDb2 = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearDb2 = function() {
  return this.setDb2(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasDb2 = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional GcpBigQuerySpec bigquery = 12;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getBigquery = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec, 12));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setBigquery = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearBigquery = function() {
  return this.setBigquery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasBigquery = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional ApacheCassandraSpec cassandra = 13;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getCassandra = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec, 13));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setCassandra = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearCassandra = function() {
  return this.setCassandra(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasCassandra = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional AzureSQLDatabaseSpec azuresqldatabase = 14;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getAzuresqldatabase = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec, 14));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setAzuresqldatabase = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearAzuresqldatabase = function() {
  return this.setAzuresqldatabase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasAzuresqldatabase = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional MongoDbSpec mongodb = 15;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getMongodb = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec, 15));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setMongodb = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearMongodb = function() {
  return this.setMongodb(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasMongodb = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional MySqlSpec mysql = 16;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getMysql = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec, 16));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setMysql = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearMysql = function() {
  return this.setMysql(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasMysql = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional OdbcSpec odbc = 17;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getOdbc = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec, 17));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setOdbc = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearOdbc = function() {
  return this.setOdbc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasOdbc = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional OracleSpec oracle = 18;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getOracle = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec, 18));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setOracle = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearOracle = function() {
  return this.setOracle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasOracle = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional PostgresSQLSpec postgres = 19;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getPostgres = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec, 19));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setPostgres = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearPostgres = function() {
  return this.setPostgres(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasPostgres = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional PrestoSpec presto = 20;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getPresto = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec, 20));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setPresto = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearPresto = function() {
  return this.setPresto(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasPresto = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional SnowflakeSpec snowflake = 22;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getSnowflake = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec, 22));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setSnowflake = function(value) {
  return jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearSnowflake = function() {
  return this.setSnowflake(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasSnowflake = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional SybaseSpec sybase = 23;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getSybase = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec, 23));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setSybase = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearSybase = function() {
  return this.setSybase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasSybase = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional VerticaSpec vertica = 24;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getVertica = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec, 24));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setVertica = function(value) {
  return jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearVertica = function() {
  return this.setVertica(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasVertica = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional CockroachDBSpec cockroachdb = 25;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getCockroachdb = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec, 25));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setCockroachdb = function(value) {
  return jspb.Message.setWrapperField(this, 25, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearCockroachdb = function() {
  return this.setCockroachdb(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasCockroachdb = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional ElasticSearchSpec elasticsearch = 26;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getElasticsearch = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec, 26));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setElasticsearch = function(value) {
  return jspb.Message.setWrapperField(this, 26, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearElasticsearch = function() {
  return this.setElasticsearch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasElasticsearch = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional InformixSpec informix = 27;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getInformix = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec, 27));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setInformix = function(value) {
  return jspb.Message.setWrapperField(this, 27, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearInformix = function() {
  return this.setInformix(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasInformix = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional SAPHanaSpec hana = 28;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getHana = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec, 28));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setHana = function(value) {
  return jspb.Message.setWrapperField(this, 28, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearHana = function() {
  return this.setHana(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasHana = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional TeradataSpec teradata = 29;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getTeradata = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec, 29));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setTeradata = function(value) {
  return jspb.Message.setWrapperField(this, 29, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearTeradata = function() {
  return this.setTeradata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasTeradata = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional GcpSpannerSpec spanner = 30;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getSpanner = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec, 30));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setSpanner = function(value) {
  return jspb.Message.setWrapperField(this, 30, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearSpanner = function() {
  return this.setSpanner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasSpanner = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional ApacheSparkSpec spark = 31;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getSpark = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec, 31));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setSpark = function(value) {
  return jspb.Message.setWrapperField(this, 31, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearSpark = function() {
  return this.setSpark(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasSpark = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional MSSqlServerSpec mssqlserver = 32;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getMssqlserver = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec, 32));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setMssqlserver = function(value) {
  return jspb.Message.setWrapperField(this, 32, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearMssqlserver = function() {
  return this.setMssqlserver(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasMssqlserver = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional ClickHouseSpec clickhouse = 33;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getClickhouse = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec, 33));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setClickhouse = function(value) {
  return jspb.Message.setWrapperField(this, 33, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearClickhouse = function() {
  return this.setClickhouse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasClickhouse = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional GreenPlumSpec greenplum = 34;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getGreenplum = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec, 34));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setGreenplum = function(value) {
  return jspb.Message.setWrapperField(this, 34, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearGreenplum = function() {
  return this.setGreenplum(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasGreenplum = function() {
  return jspb.Message.getField(this, 34) != null;
};


/**
 * optional CouchbaseSpec couchbase = 35;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getCouchbase = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec, 35));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setCouchbase = function(value) {
  return jspb.Message.setWrapperField(this, 35, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearCouchbase = function() {
  return this.setCouchbase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasCouchbase = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * optional ExasolSpec exasol = 36;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getExasol = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec, 36));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setExasol = function(value) {
  return jspb.Message.setWrapperField(this, 36, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearExasol = function() {
  return this.setExasol(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasExasol = function() {
  return jspb.Message.getField(this, 36) != null;
};


/**
 * optional SqliteSpec sqlite = 37;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getSqlite = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec, 37));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setSqlite = function(value) {
  return jspb.Message.setWrapperField(this, 37, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearSqlite = function() {
  return this.setSqlite(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasSqlite = function() {
  return jspb.Message.getField(this, 37) != null;
};


/**
 * optional SingleStoreSpec singlestore = 38;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getSinglestore = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec, 38));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setSinglestore = function(value) {
  return jspb.Message.setWrapperField(this, 38, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearSinglestore = function() {
  return this.setSinglestore(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasSinglestore = function() {
  return jspb.Message.getField(this, 38) != null;
};


/**
 * optional GoogleSheetsSpec gsheets = 39;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getGsheets = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec, 39));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setGsheets = function(value) {
  return jspb.Message.setWrapperField(this, 39, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearGsheets = function() {
  return this.setGsheets(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasGsheets = function() {
  return jspb.Message.getField(this, 39) != null;
};


/**
 * optional AzureStorageSpec azurestorage = 40;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getAzurestorage = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec, 40));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setAzurestorage = function(value) {
  return jspb.Message.setWrapperField(this, 40, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearAzurestorage = function() {
  return this.setAzurestorage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasAzurestorage = function() {
  return jspb.Message.getField(this, 40) != null;
};


/**
 * optional AliCloudSpec alicloud = 41;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getAlicloud = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec, 41));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setAlicloud = function(value) {
  return jspb.Message.setWrapperField(this, 41, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearAlicloud = function() {
  return this.setAlicloud(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasAlicloud = function() {
  return jspb.Message.getField(this, 41) != null;
};


/**
 * optional DigitalOceanSpec digitalocean = 42;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getDigitalocean = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec, 42));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setDigitalocean = function(value) {
  return jspb.Message.setWrapperField(this, 42, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearDigitalocean = function() {
  return this.setDigitalocean(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasDigitalocean = function() {
  return jspb.Message.getField(this, 42) != null;
};


/**
 * optional HetznerSpec hetzner = 43;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getHetzner = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec, 43));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setHetzner = function(value) {
  return jspb.Message.setWrapperField(this, 43, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearHetzner = function() {
  return this.setHetzner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasHetzner = function() {
  return jspb.Message.getField(this, 43) != null;
};


/**
 * optional GcpStorageSpec gcpstorage = 45;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getGcpstorage = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec, 45));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setGcpstorage = function(value) {
  return jspb.Message.setWrapperField(this, 45, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearGcpstorage = function() {
  return this.setGcpstorage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasGcpstorage = function() {
  return jspb.Message.getField(this, 45) != null;
};


/**
 * optional LinodeSpec linode = 46;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getLinode = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec, 46));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setLinode = function(value) {
  return jspb.Message.setWrapperField(this, 46, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearLinode = function() {
  return this.setLinode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasLinode = function() {
  return jspb.Message.getField(this, 46) != null;
};


/**
 * optional MinioSpec minio = 47;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getMinio = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec, 47));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setMinio = function(value) {
  return jspb.Message.setWrapperField(this, 47, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearMinio = function() {
  return this.setMinio(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasMinio = function() {
  return jspb.Message.getField(this, 47) != null;
};


/**
 * optional OpenstackSpec openstack = 48;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getOpenstack = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec, 48));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setOpenstack = function(value) {
  return jspb.Message.setWrapperField(this, 48, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearOpenstack = function() {
  return this.setOpenstack(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasOpenstack = function() {
  return jspb.Message.getField(this, 48) != null;
};


/**
 * optional OvhSpec ovh = 49;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getOvh = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec, 49));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setOvh = function(value) {
  return jspb.Message.setWrapperField(this, 49, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearOvh = function() {
  return this.setOvh(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasOvh = function() {
  return jspb.Message.getField(this, 49) != null;
};


/**
 * optional AwsS3Spec aws = 50;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getAws = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec, 50));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setAws = function(value) {
  return jspb.Message.setWrapperField(this, 50, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearAws = function() {
  return this.setAws(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasAws = function() {
  return jspb.Message.getField(this, 50) != null;
};


/**
 * optional SmtpSpec smtp = 51;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getSmtp = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec, 51));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setSmtp = function(value) {
  return jspb.Message.setWrapperField(this, 51, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearSmtp = function() {
  return this.setSmtp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasSmtp = function() {
  return jspb.Message.getField(this, 51) != null;
};


/**
 * optional FtpSpec ftp = 52;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getFtp = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec, 52));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setFtp = function(value) {
  return jspb.Message.setWrapperField(this, 52, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearFtp = function() {
  return this.setFtp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasFtp = function() {
  return jspb.Message.getField(this, 52) != null;
};


/**
 * optional SFtpSpec sftp = 53;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getSftp = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec, 53));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setSftp = function(value) {
  return jspb.Message.setWrapperField(this, 53, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearSftp = function() {
  return this.setSftp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasSftp = function() {
  return jspb.Message.getField(this, 53) != null;
};


/**
 * optional DropboxSpec dropbox = 54;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getDropbox = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec, 54));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setDropbox = function(value) {
  return jspb.Message.setWrapperField(this, 54, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearDropbox = function() {
  return this.setDropbox(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasDropbox = function() {
  return jspb.Message.getField(this, 54) != null;
};


/**
 * optional BoxSpec box = 55;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getBox = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec, 55));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setBox = function(value) {
  return jspb.Message.setWrapperField(this, 55, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearBox = function() {
  return this.setBox(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasBox = function() {
  return jspb.Message.getField(this, 55) != null;
};


/**
 * optional ImageRegistrySpec imageRegistry = 56;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getImageregistry = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec, 56));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setImageregistry = function(value) {
  return jspb.Message.setWrapperField(this, 56, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearImageregistry = function() {
  return this.setImageregistry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasImageregistry = function() {
  return jspb.Message.getField(this, 56) != null;
};


/**
 * optional GithubSpec github = 57;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getGithub = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec, 57));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setGithub = function(value) {
  return jspb.Message.setWrapperField(this, 57, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearGithub = function() {
  return this.setGithub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasGithub = function() {
  return jspb.Message.getField(this, 57) != null;
};


/**
 * optional GitlabSpec gitlab = 58;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getGitlab = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec, 58));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setGitlab = function(value) {
  return jspb.Message.setWrapperField(this, 58, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearGitlab = function() {
  return this.setGitlab(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasGitlab = function() {
  return jspb.Message.getField(this, 58) != null;
};


/**
 * optional BitbucketSpec bitbucket = 59;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getBitbucket = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec, 59));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setBitbucket = function(value) {
  return jspb.Message.setWrapperField(this, 59, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearBitbucket = function() {
  return this.setBitbucket(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasBitbucket = function() {
  return jspb.Message.getField(this, 59) != null;
};


/**
 * optional SlackSpec slack = 60;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getSlack = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec, 60));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setSlack = function(value) {
  return jspb.Message.setWrapperField(this, 60, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearSlack = function() {
  return this.setSlack(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasSlack = function() {
  return jspb.Message.getField(this, 60) != null;
};


/**
 * optional MSTeamSpec msteam = 61;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getMsteam = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec, 61));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setMsteam = function(value) {
  return jspb.Message.setWrapperField(this, 61, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearMsteam = function() {
  return this.setMsteam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasMsteam = function() {
  return jspb.Message.getField(this, 61) != null;
};


/**
 * optional MattermostSpec matterMost = 62;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getMattermost = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec, 62));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setMattermost = function(value) {
  return jspb.Message.setWrapperField(this, 62, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearMattermost = function() {
  return this.setMattermost(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasMattermost = function() {
  return jspb.Message.getField(this, 62) != null;
};


/**
 * optional HipchatSpec hipchat = 63;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getHipchat = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec, 63));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setHipchat = function(value) {
  return jspb.Message.setWrapperField(this, 63, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearHipchat = function() {
  return this.setHipchat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasHipchat = function() {
  return jspb.Message.getField(this, 63) != null;
};


/**
 * optional VictorOpSpec victorop = 64;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getVictorop = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec, 64));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setVictorop = function(value) {
  return jspb.Message.setWrapperField(this, 64, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearVictorop = function() {
  return this.setVictorop(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasVictorop = function() {
  return jspb.Message.getField(this, 64) != null;
};


/**
 * optional PagerDutySpec pagerduty = 65;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getPagerduty = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec, 65));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setPagerduty = function(value) {
  return jspb.Message.setWrapperField(this, 65, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearPagerduty = function() {
  return this.setPagerduty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasPagerduty = function() {
  return jspb.Message.getField(this, 65) != null;
};


/**
 * optional PushoverSpec pushover = 66;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getPushover = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec, 66));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setPushover = function(value) {
  return jspb.Message.setWrapperField(this, 66, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearPushover = function() {
  return this.setPushover(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasPushover = function() {
  return jspb.Message.getField(this, 66) != null;
};


/**
 * optional OpsgenieSpec opsgenie = 67;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getOpsgenie = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec, 67));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setOpsgenie = function(value) {
  return jspb.Message.setWrapperField(this, 67, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearOpsgenie = function() {
  return this.setOpsgenie(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasOpsgenie = function() {
  return jspb.Message.getField(this, 67) != null;
};


/**
 * optional WebhookSpec webhook = 68;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getWebhook = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec, 68));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setWebhook = function(value) {
  return jspb.Message.setWrapperField(this, 68, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearWebhook = function() {
  return this.setWebhook(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasWebhook = function() {
  return jspb.Message.getField(this, 68) != null;
};


/**
 * optional FacebookSpec facebook = 69;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getFacebook = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec, 69));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setFacebook = function(value) {
  return jspb.Message.setWrapperField(this, 69, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearFacebook = function() {
  return this.setFacebook(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasFacebook = function() {
  return jspb.Message.getField(this, 69) != null;
};


/**
 * optional TwitterSpec twitter = 70;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getTwitter = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec, 70));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setTwitter = function(value) {
  return jspb.Message.setWrapperField(this, 70, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearTwitter = function() {
  return this.setTwitter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasTwitter = function() {
  return jspb.Message.getField(this, 70) != null;
};


/**
 * optional RabbitMQSpec rabbitmq = 71;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getRabbitmq = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec, 71));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setRabbitmq = function(value) {
  return jspb.Message.setWrapperField(this, 71, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearRabbitmq = function() {
  return this.setRabbitmq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasRabbitmq = function() {
  return jspb.Message.getField(this, 71) != null;
};


/**
 * optional KafkaSpec kafka = 72;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getKafka = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec, 72));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setKafka = function(value) {
  return jspb.Message.setWrapperField(this, 72, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearKafka = function() {
  return this.setKafka(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasKafka = function() {
  return jspb.Message.getField(this, 72) != null;
};


/**
 * optional Neo4JSpec neo4j = 73;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getNeo4j = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec, 73));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setNeo4j = function(value) {
  return jspb.Message.setWrapperField(this, 73, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearNeo4j = function() {
  return this.setNeo4j(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasNeo4j = function() {
  return jspb.Message.getField(this, 73) != null;
};


/**
 * optional DiscordSpec discord = 74;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getDiscord = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec, 74));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setDiscord = function(value) {
  return jspb.Message.setWrapperField(this, 74, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearDiscord = function() {
  return this.setDiscord(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasDiscord = function() {
  return jspb.Message.getField(this, 74) != null;
};


/**
 * optional InfluxDBSpec influx = 75;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getInflux = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec, 75));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setInflux = function(value) {
  return jspb.Message.setWrapperField(this, 75, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearInflux = function() {
  return this.setInflux(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasInflux = function() {
  return jspb.Message.getField(this, 75) != null;
};


/**
 * optional TimescaleDBSpec timescale = 76;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getTimescale = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec, 76));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setTimescale = function(value) {
  return jspb.Message.setWrapperField(this, 76, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearTimescale = function() {
  return this.setTimescale(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasTimescale = function() {
  return jspb.Message.getField(this, 76) != null;
};


/**
 * optional VictoriaMetricsSpec victoriaMetrics = 77;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getVictoriametrics = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec, 77));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setVictoriametrics = function(value) {
  return jspb.Message.setWrapperField(this, 77, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearVictoriametrics = function() {
  return this.setVictoriametrics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasVictoriametrics = function() {
  return jspb.Message.getField(this, 77) != null;
};


/**
 * optional SaleforceSpec saleforce = 78;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getSaleforce = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec, 78));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setSaleforce = function(value) {
  return jspb.Message.setWrapperField(this, 78, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearSaleforce = function() {
  return this.setSaleforce(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasSaleforce = function() {
  return jspb.Message.getField(this, 78) != null;
};


/**
 * optional SapCRMSpec sapCrm = 79;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getSapcrm = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec, 79));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setSapcrm = function(value) {
  return jspb.Message.setWrapperField(this, 79, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearSapcrm = function() {
  return this.setSapcrm(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasSapcrm = function() {
  return jspb.Message.getField(this, 79) != null;
};


/**
 * optional AirTableSpec airtable = 80;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getAirtable = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec, 80));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirTableSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setAirtable = function(value) {
  return jspb.Message.setWrapperField(this, 80, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearAirtable = function() {
  return this.setAirtable(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasAirtable = function() {
  return jspb.Message.getField(this, 80) != null;
};


/**
 * optional AirWriteSpec appWrite = 81;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getAppwrite = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec, 81));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AirWriteSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setAppwrite = function(value) {
  return jspb.Message.setWrapperField(this, 81, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearAppwrite = function() {
  return this.setAppwrite(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasAppwrite = function() {
  return jspb.Message.getField(this, 81) != null;
};


/**
 * optional string owner = 82;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 82, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.setOwner = function(value) {
  return jspb.Message.setField(this, 82, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.clearOwner = function() {
  return jspb.Message.setField(this, 82, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 82) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    observedgeneration: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    updatedat: (f = msg.getUpdatedat()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
    failurereason: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    failuremessage: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    conditionsList: jspb.Message.toObjectList(msg.getConditionsList(),
    k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setObservedgeneration(value);
      break;
    case 2:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailurereason(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailuremessage(value);
      break;
    case 5:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.deserializeBinaryFromReader);
      msg.addConditions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getConditionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 observedGeneration = 1;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.prototype.getObservedgeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.prototype.setObservedgeneration = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.prototype.clearObservedgeneration = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.prototype.hasObservedgeneration = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time updatedAt = 2;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.prototype.getUpdatedat = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 2));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.prototype.setUpdatedat = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.prototype.clearUpdatedat = function() {
  return this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string failureReason = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.prototype.getFailurereason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.prototype.setFailurereason = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.prototype.clearFailurereason = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.prototype.hasFailurereason = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string failureMessage = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.prototype.getFailuremessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.prototype.setFailuremessage = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.prototype.clearFailuremessage = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.prototype.hasFailuremessage = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated k8s.io.apimachinery.pkg.apis.meta.v1.Condition conditions = 5;
 * @return {!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.prototype.getConditionsList = function() {
  return /** @type{!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>} */ (
    jspb.Message.getRepeatedWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition, 5));
};


/**
 * @param {!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.prototype.setConditionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.prototype.addConditions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus.prototype.clearConditionsList = function() {
  return this.setConditionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    database: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    defaultbucket: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabase(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultbucket(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string database = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.getDatabase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.setDatabase = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.clearDatabase = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.hasDatabase = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string defaultBucket = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.getDefaultbucket = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.setDefaultbucket = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.clearDefaultbucket = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.hasDefaultbucket = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string url = 7;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    keyspace: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyspace(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string keyspace = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.prototype.getKeyspace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.prototype.setKeyspace = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.prototype.clearKeyspace = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.prototype.hasKeyspace = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    accesskey: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    secretkey: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    defaultregion: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    host: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccesskey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecretkey(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultregion(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.prototype.setToken = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.prototype.clearToken = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.prototype.hasToken = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string accessKey = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.prototype.getAccesskey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.prototype.setAccesskey = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.prototype.clearAccesskey = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.prototype.hasAccesskey = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string secretKey = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.prototype.getSecretkey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.prototype.setSecretkey = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.prototype.clearSecretkey = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.prototype.hasSecretkey = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string defaultRegion = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.prototype.getDefaultregion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.prototype.setDefaultregion = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.prototype.clearDefaultregion = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.prototype.hasDefaultregion = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string host = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    contenttype: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    token: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    headersMap: (f = msg.getHeadersMap()) ? f.toObject(includeInstance, undefined) : [],
    ssl: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContenttype(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 4:
      var value = msg.getHeadersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSsl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getHeadersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string contentType = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.prototype.getContenttype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.prototype.setContenttype = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.prototype.clearContenttype = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.prototype.hasContenttype = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string token = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.prototype.setToken = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.prototype.clearToken = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.prototype.hasToken = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * map<string, string> headers = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.prototype.getHeadersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.prototype.clearHeadersMap = function() {
  this.getHeadersMap().clear();
  return this;};


/**
 * optional bool ssl = 5;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.prototype.getSsl = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.prototype.setSsl = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.prototype.clearSsl = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.prototype.hasSsl = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    keyspace: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyspace(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string keyspace = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.prototype.getKeyspace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.prototype.setKeyspace = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.prototype.clearKeyspace = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.prototype.hasKeyspace = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec.prototype.setToken = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec.prototype.clearToken = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec.prototype.hasToken = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    prefix: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrefix(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string prefix = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.prototype.getPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.prototype.setPrefix = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.prototype.clearPrefix = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.prototype.hasPrefix = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 7;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    keyspace: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyspace(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string keyspace = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.prototype.getKeyspace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.prototype.setKeyspace = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.prototype.clearKeyspace = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.prototype.hasKeyspace = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec.prototype.setToken = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec.prototype.clearToken = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec.prototype.hasToken = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    connectionref: (f = msg.getConnectionref()) && k8s_io_api_core_v1_generated_pb.ObjectReference.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new k8s_io_api_core_v1_generated_pb.ObjectReference;
      reader.readMessage(value,k8s_io_api_core_v1_generated_pb.ObjectReference.deserializeBinaryFromReader);
      msg.setConnectionref(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConnectionref();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      k8s_io_api_core_v1_generated_pb.ObjectReference.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional k8s.io.api.core.v1.ObjectReference connectionRef = 2;
 * @return {?proto.k8s.io.api.core.v1.ObjectReference}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec.prototype.getConnectionref = function() {
  return /** @type{?proto.k8s.io.api.core.v1.ObjectReference} */ (
    jspb.Message.getWrapperField(this, k8s_io_api_core_v1_generated_pb.ObjectReference, 2));
};


/**
 * @param {?proto.k8s.io.api.core.v1.ObjectReference|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec.prototype.setConnectionref = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec.prototype.clearConnectionref = function() {
  return this.setConnectionref(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec.prototype.hasConnectionref = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    lastupdated: (f = msg.getLastupdated()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
    failurereason: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    failuremessage: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
      msg.setLastupdated(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailurereason(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailuremessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLastupdated();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdated = 2;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.prototype.getLastupdated = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 2));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.prototype.setLastupdated = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.prototype.clearLastupdated = function() {
  return this.setLastupdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.prototype.hasLastupdated = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string failureReason = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.prototype.getFailurereason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.prototype.setFailurereason = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.prototype.clearFailurereason = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.prototype.hasFailurereason = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string failureMessage = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.prototype.getFailuremessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.prototype.setFailuremessage = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.prototype.clearFailuremessage = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.prototype.hasFailuremessage = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string username = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string password = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    projectid: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    oauthtype: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    serviceaccountkeypath: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOauthtype(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceaccountkeypath(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string username = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string password = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string projectID = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.getProjectid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.setProjectid = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.clearProjectid = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.hasProjectid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string oauthType = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.getOauthtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.setOauthtype = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.clearOauthtype = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.hasOauthtype = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string serviceAccountKeyPath = 7;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.getServiceaccountkeypath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.setServiceaccountkeypath = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.clearServiceaccountkeypath = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.hasServiceaccountkeypath = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string url = 8;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    instance: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    database: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabase(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.prototype.setProject = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.prototype.clearProject = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.prototype.hasProject = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string instance = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string username = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string password = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string database = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.prototype.getDatabase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.prototype.setDatabase = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.prototype.clearDatabase = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.prototype.hasDatabase = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyfile: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    project: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyfile(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string keyFile = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec.prototype.getKeyfile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec.prototype.setKeyfile = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec.prototype.clearKeyfile = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec.prototype.hasKeyfile = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string project = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec.prototype.setProject = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec.prototype.clearProject = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec.prototype.hasProject = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    ssh: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSsh(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec.prototype.setToken = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec.prototype.clearToken = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec.prototype.hasToken = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string username = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string ssh = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec.prototype.getSsh = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec.prototype.setSsh = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec.prototype.clearSsh = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec.prototype.hasSsh = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    ssh: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSsh(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec.prototype.setToken = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec.prototype.clearToken = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec.prototype.hasToken = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string ssh = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec.prototype.getSsh = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec.prototype.setSsh = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec.prototype.clearSsh = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec.prototype.hasSsh = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    scopes: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    id: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    datatopull: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setScopes(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatatopull(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string scopes = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec.prototype.getScopes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec.prototype.setScopes = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec.prototype.clearScopes = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec.prototype.hasScopes = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec.prototype.setId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec.prototype.clearId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string dataToPull = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec.prototype.getDatatopull = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec.prototype.setDatatopull = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec.prototype.clearDatatopull = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec.prototype.hasDatatopull = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    database: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabase(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string database = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.prototype.getDatabase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.prototype.setDatabase = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.prototype.clearDatabase = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.prototype.hasDatabase = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    ssh: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSsh(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec.prototype.setToken = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec.prototype.clearToken = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec.prototype.hasToken = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string ssh = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec.prototype.getSsh = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec.prototype.setSsh = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec.prototype.clearSsh = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec.prototype.hasSsh = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    token: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    room: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string token = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec.prototype.setToken = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec.prototype.clearToken = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec.prototype.hasToken = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string room = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec.prototype.getRoom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec.prototype.setRoom = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec.prototype.clearRoom = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec.prototype.hasRoom = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string username = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string password = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    database: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabase(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string database = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.prototype.getDatabase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.prototype.setDatabase = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.prototype.clearDatabase = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.prototype.hasDatabase = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InfluxDBSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    database: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabase(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string database = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.prototype.getDatabase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.prototype.setDatabase = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.prototype.clearDatabase = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.prototype.hasDatabase = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    fqdn: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    grpc: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    rest: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    ingressclassname: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    clusterissuername: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    tlssecretref: (f = msg.getTlssecretref()) && k8s_io_api_core_v1_generated_pb.SecretReference.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFqdn(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGrpc(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRest(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIngressclassname(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterissuername(value);
      break;
    case 6:
      var value = new k8s_io_api_core_v1_generated_pb.SecretReference;
      reader.readMessage(value,k8s_io_api_core_v1_generated_pb.SecretReference.deserializeBinaryFromReader);
      msg.setTlssecretref(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTlssecretref();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      k8s_io_api_core_v1_generated_pb.SecretReference.serializeBinaryToWriter
    );
  }
};


/**
 * optional string fqdn = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.prototype.getFqdn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.prototype.setFqdn = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.prototype.clearFqdn = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.prototype.hasFqdn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool grpc = 2;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.prototype.getGrpc = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.prototype.setGrpc = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.prototype.clearGrpc = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.prototype.hasGrpc = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool rest = 3;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.prototype.getRest = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.prototype.setRest = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.prototype.clearRest = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.prototype.hasRest = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string ingressClassName = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.prototype.getIngressclassname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.prototype.setIngressclassname = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.prototype.clearIngressclassname = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.prototype.hasIngressclassname = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string clusterIssuerName = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.prototype.getClusterissuername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.prototype.setClusterissuername = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.prototype.clearClusterissuername = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.prototype.hasClusterissuername = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional k8s.io.api.core.v1.SecretReference tlsSecretRef = 6;
 * @return {?proto.k8s.io.api.core.v1.SecretReference}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.prototype.getTlssecretref = function() {
  return /** @type{?proto.k8s.io.api.core.v1.SecretReference} */ (
    jspb.Message.getWrapperField(this, k8s_io_api_core_v1_generated_pb.SecretReference, 6));
};


/**
 * @param {?proto.k8s.io.api.core.v1.SecretReference|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.prototype.setTlssecretref = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.prototype.clearTlssecretref = function() {
  return this.setTlssecretref(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.prototype.hasTlssecretref = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    channel: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannel(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string channel = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.prototype.getChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.prototype.setChannel = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.prototype.clearChannel = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.prototype.hasChannel = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 3:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab.prototype.getMetadata = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LabSpec spec = 2;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab.prototype.getSpec = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec, 2));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional LabStatus status = 3;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab.prototype.getStatus = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus, 3));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList.prototype.getMetadata = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Lab items = 2;
 * @return {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab, 2));
};


/**
 * @param {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab=} opt_value
 * @param {number=} opt_index
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    tenantref: (f = msg.getTenantref()) && k8s_io_api_core_v1_generated_pb.ObjectReference.toObject(includeInstance, f),
    limits: (f = msg.getLimits()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.toObject(includeInstance, f),
    externalcluster: (f = msg.getExternalcluster()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.toObject(includeInstance, f),
    owner: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = new k8s_io_api_core_v1_generated_pb.ObjectReference;
      reader.readMessage(value,k8s_io_api_core_v1_generated_pb.ObjectReference.deserializeBinaryFromReader);
      msg.setTenantref(value);
      break;
    case 3:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.deserializeBinaryFromReader);
      msg.setLimits(value);
      break;
    case 4:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.deserializeBinaryFromReader);
      msg.setExternalcluster(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTenantref();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      k8s_io_api_core_v1_generated_pb.ObjectReference.serializeBinaryToWriter
    );
  }
  f = message.getLimits();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.serializeBinaryToWriter
    );
  }
  f = message.getExternalcluster();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string description = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional k8s.io.api.core.v1.ObjectReference tenantRef = 2;
 * @return {?proto.k8s.io.api.core.v1.ObjectReference}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.prototype.getTenantref = function() {
  return /** @type{?proto.k8s.io.api.core.v1.ObjectReference} */ (
    jspb.Message.getWrapperField(this, k8s_io_api_core_v1_generated_pb.ObjectReference, 2));
};


/**
 * @param {?proto.k8s.io.api.core.v1.ObjectReference|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.prototype.setTenantref = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.prototype.clearTenantref = function() {
  return this.setTenantref(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.prototype.hasTenantref = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ResourceLimitSpec limits = 3;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.prototype.getLimits = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec, 3));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.prototype.setLimits = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.prototype.clearLimits = function() {
  return this.setLimits(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.prototype.hasLimits = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional VirtualClusterSpec externalCluster = 4;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.prototype.getExternalcluster = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec, 4));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.prototype.setExternalcluster = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.prototype.clearExternalcluster = function() {
  return this.setExternalcluster(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.prototype.hasExternalcluster = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string owner = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.prototype.setOwner = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.prototype.clearOwner = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    observedgeneration: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    updatedat: (f = msg.getUpdatedat()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
    conditionsList: jspb.Message.toObjectList(msg.getConditionsList(),
    k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setObservedgeneration(value);
      break;
    case 2:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    case 3:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.deserializeBinaryFromReader);
      msg.addConditions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter
    );
  }
  f = message.getConditionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 observedGeneration = 1;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus.prototype.getObservedgeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus.prototype.setObservedgeneration = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus.prototype.clearObservedgeneration = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus.prototype.hasObservedgeneration = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time updatedAt = 2;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus.prototype.getUpdatedat = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 2));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus.prototype.setUpdatedat = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus.prototype.clearUpdatedat = function() {
  return this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated k8s.io.apimachinery.pkg.apis.meta.v1.Condition conditions = 3;
 * @return {!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus.prototype.getConditionsList = function() {
  return /** @type{!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>} */ (
    jspb.Message.getRepeatedWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition, 3));
};


/**
 * @param {!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus.prototype.setConditionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus.prototype.addConditions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus.prototype.clearConditionsList = function() {
  return this.setConditionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 3:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License.prototype.getMetadata = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LicenseSpec spec = 2;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License.prototype.getSpec = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec, 2));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional LicenseStatus status = 3;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License.prototype.getStatus = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus, 3));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList.prototype.getMetadata = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated License items = 2;
 * @return {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License, 2));
};


/**
 * @param {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License=} opt_value
 * @param {number=} opt_index
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    secretref: (f = msg.getSecretref()) && k8s_io_api_core_v1_generated_pb.SecretReference.toObject(includeInstance, f),
    email: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    trialstartat: (f = msg.getTrialstartat()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
    trialendat: (f = msg.getTrialendat()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
    maxproducts: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    maxtrainers: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    maxservers: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    maxusers: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    maxdataplanes: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    forecast: (f = jspb.Message.getBooleanField(msg, 12)) == null ? undefined : f,
    nlp: (f = jspb.Message.getBooleanField(msg, 13)) == null ? undefined : f,
    vision: (f = jspb.Message.getBooleanField(msg, 14)) == null ? undefined : f,
    chatbot: (f = jspb.Message.getBooleanField(msg, 15)) == null ? undefined : f,
    productname: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
    pricename: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
    expireat: (f = msg.getExpireat()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
    notifiername: (f = jspb.Message.getField(msg, 19)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new k8s_io_api_core_v1_generated_pb.SecretReference;
      reader.readMessage(value,k8s_io_api_core_v1_generated_pb.SecretReference.deserializeBinaryFromReader);
      msg.setSecretref(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 5:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
      msg.setTrialstartat(value);
      break;
    case 6:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
      msg.setTrialendat(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxproducts(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxtrainers(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxservers(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxusers(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxdataplanes(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForecast(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNlp(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVision(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setChatbot(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductname(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setPricename(value);
      break;
    case 18:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
      msg.setExpireat(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotifiername(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecretref();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      k8s_io_api_core_v1_generated_pb.SecretReference.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTrialstartat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter
    );
  }
  f = message.getTrialendat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBool(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBool(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getExpireat();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeString(
      19,
      f
    );
  }
};


/**
 * optional k8s.io.api.core.v1.SecretReference secretRef = 2;
 * @return {?proto.k8s.io.api.core.v1.SecretReference}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.getSecretref = function() {
  return /** @type{?proto.k8s.io.api.core.v1.SecretReference} */ (
    jspb.Message.getWrapperField(this, k8s_io_api_core_v1_generated_pb.SecretReference, 2));
};


/**
 * @param {?proto.k8s.io.api.core.v1.SecretReference|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.setSecretref = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.clearSecretref = function() {
  return this.setSecretref(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.hasSecretref = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string email = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.setEmail = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.clearEmail = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time trialStartAt = 5;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.getTrialstartat = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 5));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.setTrialstartat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.clearTrialstartat = function() {
  return this.setTrialstartat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.hasTrialstartat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time trialEndAt = 6;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.getTrialendat = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 6));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.setTrialendat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.clearTrialendat = function() {
  return this.setTrialendat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.hasTrialendat = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 maxProducts = 7;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.getMaxproducts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.setMaxproducts = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.clearMaxproducts = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.hasMaxproducts = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 maxTrainers = 8;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.getMaxtrainers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.setMaxtrainers = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.clearMaxtrainers = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.hasMaxtrainers = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int32 maxServers = 9;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.getMaxservers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.setMaxservers = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.clearMaxservers = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.hasMaxservers = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int32 maxUsers = 10;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.getMaxusers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.setMaxusers = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.clearMaxusers = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.hasMaxusers = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int32 maxDataPlanes = 11;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.getMaxdataplanes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.setMaxdataplanes = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.clearMaxdataplanes = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.hasMaxdataplanes = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool forecast = 12;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.getForecast = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.setForecast = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.clearForecast = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.hasForecast = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool nlp = 13;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.getNlp = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.setNlp = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.clearNlp = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.hasNlp = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bool vision = 14;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.getVision = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.setVision = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.clearVision = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.hasVision = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool chatbot = 15;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.getChatbot = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.setChatbot = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.clearChatbot = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.hasChatbot = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string productName = 16;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.getProductname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.setProductname = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.clearProductname = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.hasProductname = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string priceName = 17;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.getPricename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.setPricename = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.clearPricename = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.hasPricename = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time expireAt = 18;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.getExpireat = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 18));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.setExpireat = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.clearExpireat = function() {
  return this.setExpireat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.hasExpireat = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional string notifierName = 19;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.getNotifiername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.setNotifiername = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.clearNotifiername = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec.prototype.hasNotifiername = function() {
  return jspb.Message.getField(this, 19) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    updatedat: (f = msg.getUpdatedat()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
    observedgeneration: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    failurereason: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    failuremessage: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    conditionsList: jspb.Message.toObjectList(msg.getConditionsList(),
    k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setObservedgeneration(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailurereason(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailuremessage(value);
      break;
    case 5:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.deserializeBinaryFromReader);
      msg.addConditions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getConditionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time updatedAt = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.prototype.getUpdatedat = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.prototype.setUpdatedat = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.prototype.clearUpdatedat = function() {
  return this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 observedGeneration = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.prototype.getObservedgeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.prototype.setObservedgeneration = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.prototype.clearObservedgeneration = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.prototype.hasObservedgeneration = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string failureReason = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.prototype.getFailurereason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.prototype.setFailurereason = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.prototype.clearFailurereason = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.prototype.hasFailurereason = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string failureMessage = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.prototype.getFailuremessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.prototype.setFailuremessage = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.prototype.clearFailuremessage = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.prototype.hasFailuremessage = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated k8s.io.apimachinery.pkg.apis.meta.v1.Condition conditions = 5;
 * @return {!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.prototype.getConditionsList = function() {
  return /** @type{!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>} */ (
    jspb.Message.getRepeatedWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition, 5));
};


/**
 * @param {!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.prototype.setConditionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.prototype.addConditions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus.prototype.clearConditionsList = function() {
  return this.setConditionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec.prototype.setToken = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec.prototype.clearToken = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec.prototype.hasToken = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    database: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    instance: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabase(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string database = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.getDatabase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.setDatabase = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.clearDatabase = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.hasDatabase = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string instance = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string username = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string password = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string url = 7;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    webhook: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebhook(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string webhook = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec.prototype.getWebhook = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec.prototype.setWebhook = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec.prototype.clearWebhook = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec.prototype.hasWebhook = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    channel: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string channel = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec.prototype.getChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec.prototype.setChannel = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec.prototype.clearChannel = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec.prototype.hasChannel = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string username = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    accesskey: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    secretkey: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    host: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccesskey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecretkey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string accessKey = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec.prototype.getAccesskey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec.prototype.setAccesskey = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec.prototype.clearAccesskey = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec.prototype.hasAccesskey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string secretKey = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec.prototype.getSecretkey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec.prototype.setSecretkey = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec.prototype.clearSecretkey = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec.prototype.hasSecretkey = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string host = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 3:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem.prototype.getMetadata = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ModelaSystemSpec spec = 2;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem.prototype.getSpec = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec, 2));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ModelaSystemStatus status = 3;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem.prototype.getStatus = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus, 3));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList.prototype.getMetadata = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ModelaSystem items = 2;
 * @return {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem, 2));
};


/**
 * @param {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    release: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    active: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    podtemplate: (f = msg.getPodtemplate()) && k8s_io_api_core_v1_generated_pb.PodTemplateSpec.toObject(includeInstance, f),
    publishertemplate: (f = msg.getPublishertemplate()) && k8s_io_api_core_v1_generated_pb.PodTemplateSpec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRelease(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 3:
      var value = new k8s_io_api_core_v1_generated_pb.PodTemplateSpec;
      reader.readMessage(value,k8s_io_api_core_v1_generated_pb.PodTemplateSpec.deserializeBinaryFromReader);
      msg.setPodtemplate(value);
      break;
    case 4:
      var value = new k8s_io_api_core_v1_generated_pb.PodTemplateSpec;
      reader.readMessage(value,k8s_io_api_core_v1_generated_pb.PodTemplateSpec.deserializeBinaryFromReader);
      msg.setPublishertemplate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getPodtemplate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      k8s_io_api_core_v1_generated_pb.PodTemplateSpec.serializeBinaryToWriter
    );
  }
  f = message.getPublishertemplate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      k8s_io_api_core_v1_generated_pb.PodTemplateSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional string release = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec.prototype.getRelease = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec.prototype.setRelease = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec.prototype.clearRelease = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec.prototype.hasRelease = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool active = 2;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec.prototype.setActive = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec.prototype.clearActive = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec.prototype.hasActive = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional k8s.io.api.core.v1.PodTemplateSpec podTemplate = 3;
 * @return {?proto.k8s.io.api.core.v1.PodTemplateSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec.prototype.getPodtemplate = function() {
  return /** @type{?proto.k8s.io.api.core.v1.PodTemplateSpec} */ (
    jspb.Message.getWrapperField(this, k8s_io_api_core_v1_generated_pb.PodTemplateSpec, 3));
};


/**
 * @param {?proto.k8s.io.api.core.v1.PodTemplateSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec.prototype.setPodtemplate = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec.prototype.clearPodtemplate = function() {
  return this.setPodtemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec.prototype.hasPodtemplate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional k8s.io.api.core.v1.PodTemplateSpec publisherTemplate = 4;
 * @return {?proto.k8s.io.api.core.v1.PodTemplateSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec.prototype.getPublishertemplate = function() {
  return /** @type{?proto.k8s.io.api.core.v1.PodTemplateSpec} */ (
    jspb.Message.getWrapperField(this, k8s_io_api_core_v1_generated_pb.PodTemplateSpec, 4));
};


/**
 * @param {?proto.k8s.io.api.core.v1.PodTemplateSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec.prototype.setPublishertemplate = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec.prototype.clearPublishertemplate = function() {
  return this.setPublishertemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec.prototype.hasPublishertemplate = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    observedgeneration: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    failurereason: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    failuremessage: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    lastrelease: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    conditionsList: jspb.Message.toObjectList(msg.getConditionsList(),
    k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setObservedgeneration(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailurereason(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailuremessage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastrelease(value);
      break;
    case 5:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.deserializeBinaryFromReader);
      msg.addConditions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getConditionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 observedGeneration = 1;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.prototype.getObservedgeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.prototype.setObservedgeneration = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.prototype.clearObservedgeneration = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.prototype.hasObservedgeneration = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string failureReason = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.prototype.getFailurereason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.prototype.setFailurereason = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.prototype.clearFailurereason = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.prototype.hasFailurereason = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string failureMessage = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.prototype.getFailuremessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.prototype.setFailuremessage = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.prototype.clearFailuremessage = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.prototype.hasFailuremessage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string lastRelease = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.prototype.getLastrelease = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.prototype.setLastrelease = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.prototype.clearLastrelease = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.prototype.hasLastrelease = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated k8s.io.apimachinery.pkg.apis.meta.v1.Condition conditions = 5;
 * @return {!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.prototype.getConditionsList = function() {
  return /** @type{!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>} */ (
    jspb.Message.getRepeatedWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition, 5));
};


/**
 * @param {!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.prototype.setConditionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.prototype.addConditions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus.prototype.clearConditionsList = function() {
  return this.setConditionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    database: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabase(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string database = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.prototype.getDatabase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.prototype.setDatabase = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.prototype.clearDatabase = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.prototype.hasDatabase = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    database: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabase(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string database = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.prototype.getDatabase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.prototype.setDatabase = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.prototype.clearDatabase = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.prototype.hasDatabase = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 7;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    enabled: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    connectionname: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    info: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    error: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    from: (f = msg.getFrom()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
    to: (f = msg.getTo()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
    destination: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectionname(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInfo(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setError(value);
      break;
    case 5:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
      msg.setFrom(value);
      break;
    case 6:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
      msg.setTo(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getFrom();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter
    );
  }
  f = message.getTo();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional bool enabled = 1;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.setEnabled = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.clearEnabled = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.hasEnabled = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string connectionName = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.getConnectionname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.setConnectionname = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.clearConnectionname = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.hasConnectionname = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool info = 3;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.getInfo = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.setInfo = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.clearInfo = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool error = 4;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.getError = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.setError = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.clearError = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.hasError = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time from = 5;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.getFrom = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 5));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.setFrom = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.clearFrom = function() {
  return this.setFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.hasFrom = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time to = 6;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.getTo = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 6));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.setTo = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.clearTo = function() {
  return this.setTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.hasTo = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string destination = 7;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.getDestination = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.setDestination = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.clearDestination = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    lastmessageat: (f = msg.getLastmessageat()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
    failurereason: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    failuremessage: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
      msg.setLastmessageat(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailurereason(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailuremessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLastmessageat();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastMessageAt = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus.prototype.getLastmessageat = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus.prototype.setLastmessageat = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus.prototype.clearLastmessageat = function() {
  return this.setLastmessageat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus.prototype.hasLastmessageat = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string failureReason = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus.prototype.getFailurereason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus.prototype.setFailurereason = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus.prototype.clearFailurereason = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus.prototype.hasFailurereason = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string failureMessage = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus.prototype.getFailuremessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus.prototype.setFailuremessage = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus.prototype.clearFailuremessage = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus.prototype.hasFailuremessage = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 3:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier.prototype.getMetadata = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional NotifierSpec spec = 2;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier.prototype.getSpec = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec, 2));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional NotifierStatus status = 3;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier.prototype.getStatus = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus, 3));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList.prototype.getMetadata = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Notifier items = 2;
 * @return {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier, 2));
};


/**
 * @param {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier=} opt_value
 * @param {number=} opt_index
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    enabled: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    tenantref: (f = msg.getTenantref()) && k8s_io_api_core_v1_generated_pb.ObjectReference.toObject(includeInstance, f),
    description: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    owner: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    channelsList: jspb.Message.toObjectList(msg.getChannelsList(),
    proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 2:
      var value = new k8s_io_api_core_v1_generated_pb.ObjectReference;
      reader.readMessage(value,k8s_io_api_core_v1_generated_pb.ObjectReference.deserializeBinaryFromReader);
      msg.setTenantref(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 5:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.deserializeBinaryFromReader);
      msg.addChannels(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getTenantref();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      k8s_io_api_core_v1_generated_pb.ObjectReference.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getChannelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool enabled = 1;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.prototype.setEnabled = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.prototype.clearEnabled = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.prototype.hasEnabled = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional k8s.io.api.core.v1.ObjectReference tenantRef = 2;
 * @return {?proto.k8s.io.api.core.v1.ObjectReference}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.prototype.getTenantref = function() {
  return /** @type{?proto.k8s.io.api.core.v1.ObjectReference} */ (
    jspb.Message.getWrapperField(this, k8s_io_api_core_v1_generated_pb.ObjectReference, 2));
};


/**
 * @param {?proto.k8s.io.api.core.v1.ObjectReference|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.prototype.setTenantref = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.prototype.clearTenantref = function() {
  return this.setTenantref(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.prototype.hasTenantref = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string owner = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.prototype.setOwner = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.prototype.clearOwner = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated NotificationChannelSpec channels = 5;
 * @return {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.prototype.getChannelsList = function() {
  return /** @type{!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec, 5));
};


/**
 * @param {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.prototype.setChannelsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.prototype.addChannels = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec.prototype.clearChannelsList = function() {
  return this.setChannelsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    observedgeneration: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    updatedat: (f = msg.getUpdatedat()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
    channelsstatusList: jspb.Message.toObjectList(msg.getChannelsstatusList(),
    proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus.toObject, includeInstance),
    conditionsList: jspb.Message.toObjectList(msg.getConditionsList(),
    k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setObservedgeneration(value);
      break;
    case 3:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    case 4:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus.deserializeBinaryFromReader);
      msg.addChannelsstatus(value);
      break;
    case 5:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.deserializeBinaryFromReader);
      msg.addConditions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter
    );
  }
  f = message.getChannelsstatusList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus.serializeBinaryToWriter
    );
  }
  f = message.getConditionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 observedGeneration = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.prototype.getObservedgeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.prototype.setObservedgeneration = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.prototype.clearObservedgeneration = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.prototype.hasObservedgeneration = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time updatedAt = 3;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.prototype.getUpdatedat = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 3));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.prototype.setUpdatedat = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.prototype.clearUpdatedat = function() {
  return this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated NotificationChannelStatus channelsStatus = 4;
 * @return {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.prototype.getChannelsstatusList = function() {
  return /** @type{!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus, 4));
};


/**
 * @param {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.prototype.setChannelsstatusList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.prototype.addChannelsstatus = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.prototype.clearChannelsstatusList = function() {
  return this.setChannelsstatusList([]);
};


/**
 * repeated k8s.io.apimachinery.pkg.apis.meta.v1.Condition conditions = 5;
 * @return {!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.prototype.getConditionsList = function() {
  return /** @type{!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>} */ (
    jspb.Message.getRepeatedWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition, 5));
};


/**
 * @param {!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.prototype.setConditionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.prototype.addConditions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus.prototype.clearConditionsList = function() {
  return this.setConditionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    conntectionstring: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConntectionstring(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string conntectionString = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec.prototype.getConntectionstring = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec.prototype.setConntectionstring = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec.prototype.clearConntectionstring = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec.prototype.hasConntectionstring = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    username: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    tenantname: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    authurl: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    region: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTenantname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthurl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string username = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string tenantName = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.prototype.getTenantname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.prototype.setTenantname = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.prototype.clearTenantname = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.prototype.hasTenantname = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string password = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string authUrl = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.prototype.getAuthurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.prototype.setAuthurl = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.prototype.clearAuthurl = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.prototype.hasAuthurl = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string region = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.prototype.setRegion = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.prototype.clearRegion = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec.prototype.hasRegion = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    apiid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    apikey: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApiid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setApikey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string apiID = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec.prototype.getApiid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec.prototype.setApiid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec.prototype.clearApiid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec.prototype.hasApiid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string apiKey = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec.prototype.getApikey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec.prototype.setApikey = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec.prototype.clearApikey = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec.prototype.hasApikey = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string url = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    sid: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    driver: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDriver(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string sid = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.getSid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.setSid = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.clearSid = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.hasSid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string driver = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.getDriver = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.setDriver = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.clearDriver = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.hasDriver = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string username = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string password = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string url = 7;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    endpoint: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    application: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    secret: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    consumerkey: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndpoint(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplication(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecret(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsumerkey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string endpoint = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec.prototype.getEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec.prototype.setEndpoint = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec.prototype.clearEndpoint = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec.prototype.hasEndpoint = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string application = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec.prototype.getApplication = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec.prototype.setApplication = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec.prototype.clearApplication = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec.prototype.hasApplication = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string secret = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec.prototype.getSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec.prototype.setSecret = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec.prototype.clearSecret = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec.prototype.hasSecret = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string consumerkey = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec.prototype.getConsumerkey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec.prototype.setConsumerkey = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec.prototype.clearConsumerkey = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec.prototype.hasConsumerkey = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    apiid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    apikey: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApiid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setApikey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string apiID = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec.prototype.getApiid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec.prototype.setApiid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec.prototype.clearApiid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec.prototype.hasApiid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string apiKey = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec.prototype.getApikey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec.prototype.setApikey = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec.prototype.clearApikey = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec.prototype.hasApikey = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string url = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    database: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    schema: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabase(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchema(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string database = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.getDatabase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.setDatabase = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.clearDatabase = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.hasDatabase = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string schema = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.getSchema = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.setSchema = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.clearSchema = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.hasSchema = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string username = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string password = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string url = 7;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    catalog: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    schema: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCatalog(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchema(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string catalog = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.getCatalog = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.setCatalog = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.clearCatalog = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.hasCatalog = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string schema = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.getSchema = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.setSchema = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.clearSchema = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.hasSchema = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string username = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string password = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string url = 7;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    apiid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    apikey: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApiid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setApikey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string apiID = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec.prototype.getApiid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec.prototype.setApiid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec.prototype.clearApiid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec.prototype.hasApiid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string apiKey = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec.prototype.getApikey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec.prototype.setApikey = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec.prototype.clearApikey = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec.prototype.hasApikey = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string url = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string username = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string password = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    enabled: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    maxmem: (f = msg.getMaxmem()) && k8s_io_apimachinery_pkg_api_resource_generated_pb.Quantity.toObject(includeInstance, f),
    maxcpu: (f = msg.getMaxcpu()) && k8s_io_apimachinery_pkg_api_resource_generated_pb.Quantity.toObject(includeInstance, f),
    maxpods: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    maxpvc: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    quota: (f = msg.getQuota()) && k8s_io_api_core_v1_generated_pb.ResourceQuotaSpec.toObject(includeInstance, f),
    limitrange: (f = msg.getLimitrange()) && k8s_io_api_core_v1_generated_pb.LimitRangeSpec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 2:
      var value = new k8s_io_apimachinery_pkg_api_resource_generated_pb.Quantity;
      reader.readMessage(value,k8s_io_apimachinery_pkg_api_resource_generated_pb.Quantity.deserializeBinaryFromReader);
      msg.setMaxmem(value);
      break;
    case 3:
      var value = new k8s_io_apimachinery_pkg_api_resource_generated_pb.Quantity;
      reader.readMessage(value,k8s_io_apimachinery_pkg_api_resource_generated_pb.Quantity.deserializeBinaryFromReader);
      msg.setMaxcpu(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxpods(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxpvc(value);
      break;
    case 6:
      var value = new k8s_io_api_core_v1_generated_pb.ResourceQuotaSpec;
      reader.readMessage(value,k8s_io_api_core_v1_generated_pb.ResourceQuotaSpec.deserializeBinaryFromReader);
      msg.setQuota(value);
      break;
    case 7:
      var value = new k8s_io_api_core_v1_generated_pb.LimitRangeSpec;
      reader.readMessage(value,k8s_io_api_core_v1_generated_pb.LimitRangeSpec.deserializeBinaryFromReader);
      msg.setLimitrange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMaxmem();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      k8s_io_apimachinery_pkg_api_resource_generated_pb.Quantity.serializeBinaryToWriter
    );
  }
  f = message.getMaxcpu();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      k8s_io_apimachinery_pkg_api_resource_generated_pb.Quantity.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getQuota();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      k8s_io_api_core_v1_generated_pb.ResourceQuotaSpec.serializeBinaryToWriter
    );
  }
  f = message.getLimitrange();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      k8s_io_api_core_v1_generated_pb.LimitRangeSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool enabled = 1;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.setEnabled = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.clearEnabled = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.hasEnabled = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional k8s.io.apimachinery.pkg.api.resource.Quantity maxMem = 2;
 * @return {?proto.k8s.io.apimachinery.pkg.api.resource.Quantity}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.getMaxmem = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.api.resource.Quantity} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_api_resource_generated_pb.Quantity, 2));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.api.resource.Quantity|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.setMaxmem = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.clearMaxmem = function() {
  return this.setMaxmem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.hasMaxmem = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional k8s.io.apimachinery.pkg.api.resource.Quantity maxCpu = 3;
 * @return {?proto.k8s.io.apimachinery.pkg.api.resource.Quantity}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.getMaxcpu = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.api.resource.Quantity} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_api_resource_generated_pb.Quantity, 3));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.api.resource.Quantity|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.setMaxcpu = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.clearMaxcpu = function() {
  return this.setMaxcpu(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.hasMaxcpu = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 maxPods = 4;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.getMaxpods = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.setMaxpods = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.clearMaxpods = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.hasMaxpods = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 maxPvc = 5;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.getMaxpvc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.setMaxpvc = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.clearMaxpvc = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.hasMaxpvc = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional k8s.io.api.core.v1.ResourceQuotaSpec quota = 6;
 * @return {?proto.k8s.io.api.core.v1.ResourceQuotaSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.getQuota = function() {
  return /** @type{?proto.k8s.io.api.core.v1.ResourceQuotaSpec} */ (
    jspb.Message.getWrapperField(this, k8s_io_api_core_v1_generated_pb.ResourceQuotaSpec, 6));
};


/**
 * @param {?proto.k8s.io.api.core.v1.ResourceQuotaSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.setQuota = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.clearQuota = function() {
  return this.setQuota(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.hasQuota = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional k8s.io.api.core.v1.LimitRangeSpec limitRange = 7;
 * @return {?proto.k8s.io.api.core.v1.LimitRangeSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.getLimitrange = function() {
  return /** @type{?proto.k8s.io.api.core.v1.LimitRangeSpec} */ (
    jspb.Message.getWrapperField(this, k8s_io_api_core_v1_generated_pb.LimitRangeSpec, 7));
};


/**
 * @param {?proto.k8s.io.api.core.v1.LimitRangeSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.setLimitrange = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.clearLimitrange = function() {
  return this.setLimitrange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.prototype.hasLimitrange = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    resource: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    verbsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResource(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addVerbs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVerbsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string resource = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec.prototype.getResource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec.prototype.setResource = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec.prototype.clearResource = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec.prototype.hasResource = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string verbs = 2;
 * @return {!Array<string>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec.prototype.getVerbsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec.prototype.setVerbsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec.prototype.addVerbs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec.prototype.clearVerbsList = function() {
  return this.setVerbsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    database: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabase(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string database = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.prototype.getDatabase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.prototype.setDatabase = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.prototype.clearDatabase = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.prototype.hasDatabase = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    keyspace: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyspace(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string keyspace = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.prototype.getKeyspace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.prototype.setKeyspace = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.prototype.clearKeyspace = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.prototype.hasKeyspace = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string username = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string password = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    keyspace: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyspace(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string keyspace = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.prototype.getKeyspace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.prototype.setKeyspace = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.prototype.clearKeyspace = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.prototype.hasKeyspace = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SaleforceSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    keyspace: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyspace(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string keyspace = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.prototype.getKeyspace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.prototype.setKeyspace = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.prototype.clearKeyspace = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.prototype.hasKeyspace = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SapCRMSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    actionsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addActions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getActionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string actions = 2;
 * @return {!Array<string>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope.prototype.getActionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope.prototype.setActionsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope.prototype.addActions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope.prototype.clearActionsList = function() {
  return this.setActionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 3:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite.prototype.getMetadata = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ServingSiteSpec spec = 2;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite.prototype.getSpec = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec, 2));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ServingSiteStatus status = 3;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite.prototype.getStatus = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus, 3));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList.prototype.getMetadata = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ServingSite items = 2;
 * @return {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite, 2));
};


/**
 * @param {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite=} opt_value
 * @param {number=} opt_index
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    tenantref: (f = msg.getTenantref()) && k8s_io_api_core_v1_generated_pb.ObjectReference.toObject(includeInstance, f),
    limits: (f = msg.getLimits()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.toObject(includeInstance, f),
    ingress: (f = msg.getIngress()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.toObject(includeInstance, f),
    externalcluster: (f = msg.getExternalcluster()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.toObject(includeInstance, f),
    owner: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    stage: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = new k8s_io_api_core_v1_generated_pb.ObjectReference;
      reader.readMessage(value,k8s_io_api_core_v1_generated_pb.ObjectReference.deserializeBinaryFromReader);
      msg.setTenantref(value);
      break;
    case 3:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.deserializeBinaryFromReader);
      msg.setLimits(value);
      break;
    case 4:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.deserializeBinaryFromReader);
      msg.setIngress(value);
      break;
    case 5:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.deserializeBinaryFromReader);
      msg.setExternalcluster(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setStage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTenantref();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      k8s_io_api_core_v1_generated_pb.ObjectReference.serializeBinaryToWriter
    );
  }
  f = message.getLimits();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.serializeBinaryToWriter
    );
  }
  f = message.getIngress();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec.serializeBinaryToWriter
    );
  }
  f = message.getExternalcluster();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string description = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional k8s.io.api.core.v1.ObjectReference tenantRef = 2;
 * @return {?proto.k8s.io.api.core.v1.ObjectReference}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.getTenantref = function() {
  return /** @type{?proto.k8s.io.api.core.v1.ObjectReference} */ (
    jspb.Message.getWrapperField(this, k8s_io_api_core_v1_generated_pb.ObjectReference, 2));
};


/**
 * @param {?proto.k8s.io.api.core.v1.ObjectReference|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.setTenantref = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.clearTenantref = function() {
  return this.setTenantref(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.hasTenantref = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ResourceLimitSpec limits = 3;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.getLimits = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec, 3));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.setLimits = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.clearLimits = function() {
  return this.setLimits(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.hasLimits = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional IngressSpec ingress = 4;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.getIngress = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec, 4));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.setIngress = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.clearIngress = function() {
  return this.setIngress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.hasIngress = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional VirtualClusterSpec externalCluster = 5;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.getExternalcluster = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec, 5));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.setExternalcluster = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.clearExternalcluster = function() {
  return this.setExternalcluster(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.hasExternalcluster = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string owner = 7;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.setOwner = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.clearOwner = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string stage = 8;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.getStage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.setStage = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.clearStage = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec.prototype.hasStage = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.repeatedFields_ = [8,15];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    observedgeneration: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    updatedat: (f = msg.getUpdatedat()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
    activepredictors: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    inactivepredictors: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    totalpredictorservicefailed: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    totalpredictordatadriftfailed: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    totalpredictoraccuracyfailed: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    dailypredictionscountsList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    failurereason: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    failuremessage: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    grpcingressname: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    restingressname: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    grpcingressready: (f = jspb.Message.getBooleanField(msg, 13)) == null ? undefined : f,
    restingressready: (f = jspb.Message.getBooleanField(msg, 14)) == null ? undefined : f,
    conditionsList: jspb.Message.toObjectList(msg.getConditionsList(),
    k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setObservedgeneration(value);
      break;
    case 2:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setActivepredictors(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInactivepredictors(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalpredictorservicefailed(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalpredictordatadriftfailed(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalpredictoraccuracyfailed(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.addDailypredictionscounts(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailurereason(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailuremessage(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setGrpcingressname(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setRestingressname(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGrpcingressready(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRestingressready(value);
      break;
    case 15:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.deserializeBinaryFromReader);
      msg.addConditions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getDailypredictionscountsList();
  if (f.length > 0) {
    writer.writeRepeatedInt32(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getConditionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 observedGeneration = 1;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.getObservedgeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.setObservedgeneration = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.clearObservedgeneration = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.hasObservedgeneration = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time updatedAt = 2;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.getUpdatedat = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 2));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.setUpdatedat = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.clearUpdatedat = function() {
  return this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 activePredictors = 3;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.getActivepredictors = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.setActivepredictors = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.clearActivepredictors = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.hasActivepredictors = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 inactivePredictors = 4;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.getInactivepredictors = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.setInactivepredictors = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.clearInactivepredictors = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.hasInactivepredictors = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 totalPredictorServiceFailed = 5;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.getTotalpredictorservicefailed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.setTotalpredictorservicefailed = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.clearTotalpredictorservicefailed = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.hasTotalpredictorservicefailed = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int32 totalPredictorDataDriftFailed = 6;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.getTotalpredictordatadriftfailed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.setTotalpredictordatadriftfailed = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.clearTotalpredictordatadriftfailed = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.hasTotalpredictordatadriftfailed = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 totalPredictorAccuracyFailed = 7;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.getTotalpredictoraccuracyfailed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.setTotalpredictoraccuracyfailed = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.clearTotalpredictoraccuracyfailed = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.hasTotalpredictoraccuracyfailed = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated int32 dailyPredictionsCounts = 8;
 * @return {!Array<number>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.getDailypredictionscountsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.setDailypredictionscountsList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.addDailypredictionscounts = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.clearDailypredictionscountsList = function() {
  return this.setDailypredictionscountsList([]);
};


/**
 * optional string failureReason = 9;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.getFailurereason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.setFailurereason = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.clearFailurereason = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.hasFailurereason = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string failureMessage = 10;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.getFailuremessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.setFailuremessage = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.clearFailuremessage = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.hasFailuremessage = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string grpcIngressName = 11;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.getGrpcingressname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.setGrpcingressname = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.clearGrpcingressname = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.hasGrpcingressname = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string restIngressName = 12;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.getRestingressname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.setRestingressname = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.clearRestingressname = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.hasRestingressname = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool grpcIngressReady = 13;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.getGrpcingressready = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.setGrpcingressready = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.clearGrpcingressready = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.hasGrpcingressready = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bool restIngressReady = 14;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.getRestingressready = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.setRestingressready = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.clearRestingressready = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.hasRestingressready = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * repeated k8s.io.apimachinery.pkg.apis.meta.v1.Condition conditions = 15;
 * @return {!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.getConditionsList = function() {
  return /** @type{!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>} */ (
    jspb.Message.getRepeatedWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition, 15));
};


/**
 * @param {!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.setConditionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.addConditions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus.prototype.clearConditionsList = function() {
  return this.setConditionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 7;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string token = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec.prototype.setToken = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec.prototype.clearToken = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec.prototype.hasToken = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    helo: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    email: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    ssl: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
    verifypeer: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    verifyhost: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,
    passwordauth: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHelo(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSsl(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVerifypeer(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVerifyhost(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPasswordauth(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string helo = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.getHelo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.setHelo = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.clearHelo = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.hasHelo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string email = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.setEmail = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.clearEmail = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool ssl = 5;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.getSsl = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.setSsl = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.clearSsl = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.hasSsl = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool verifyPeer = 6;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.getVerifypeer = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.setVerifypeer = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.clearVerifypeer = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.hasVerifypeer = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool verifyHost = 7;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.getVerifyhost = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.setVerifyhost = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.clearVerifyhost = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.hasVerifyhost = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool passwordAuth = 8;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.getPasswordauth = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.setPasswordauth = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.clearPasswordauth = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.hasPasswordauth = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string username = 9;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string password = 10;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    database: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    schema: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    warehouse: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    role: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabase(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchema(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarehouse(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string username = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string password = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string database = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.getDatabase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.setDatabase = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.clearDatabase = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.hasDatabase = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string schema = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.getSchema = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.setSchema = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.clearSchema = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.hasSchema = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string warehouse = 7;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.getWarehouse = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.setWarehouse = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.clearWarehouse = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.hasWarehouse = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string role = 8;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.setRole = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.clearRole = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.hasRole = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string url = 9;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    filename: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilename(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string fileName = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec.prototype.getFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec.prototype.setFilename = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec.prototype.clearFilename = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec.prototype.hasFilename = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    database: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabase(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string database = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.prototype.getDatabase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.prototype.setDatabase = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.prototype.clearDatabase = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.prototype.hasDatabase = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 3:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant.prototype.getMetadata = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TenantSpec spec = 2;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant.prototype.getSpec = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec, 2));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TenantStatus status = 3;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant.prototype.getStatus = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus, 3));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList.prototype.getMetadata = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Tenant items = 2;
 * @return {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant, 2));
};


/**
 * @param {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant=} opt_value
 * @param {number=} opt_index
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultlab: (f = msg.getDefaultlab()) && k8s_io_api_core_v1_generated_pb.ObjectReference.toObject(includeInstance, f),
    defaultservingsiteref: (f = msg.getDefaultservingsiteref()) && k8s_io_api_core_v1_generated_pb.ObjectReference.toObject(includeInstance, f),
    description: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    owner: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    bucketname: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    path: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    permissions: (f = msg.getPermissions()) && github_com_metaprov_modelaapi_pkg_apis_catalog_v1alpha1_generated_pb.PermissionsSpec.toObject(includeInstance, f),
    notification: (f = msg.getNotification()) && github_com_metaprov_modelaapi_pkg_apis_catalog_v1alpha1_generated_pb.NotificationSpec.toObject(includeInstance, f),
    online: (f = msg.getOnline()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec.toObject(includeInstance, f),
    offline: (f = msg.getOffline()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec.toObject(includeInstance, f),
    metrics: (f = msg.getMetrics()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_api_core_v1_generated_pb.ObjectReference;
      reader.readMessage(value,k8s_io_api_core_v1_generated_pb.ObjectReference.deserializeBinaryFromReader);
      msg.setDefaultlab(value);
      break;
    case 2:
      var value = new k8s_io_api_core_v1_generated_pb.ObjectReference;
      reader.readMessage(value,k8s_io_api_core_v1_generated_pb.ObjectReference.deserializeBinaryFromReader);
      msg.setDefaultservingsiteref(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucketname(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 7:
      var value = new github_com_metaprov_modelaapi_pkg_apis_catalog_v1alpha1_generated_pb.PermissionsSpec;
      reader.readMessage(value,github_com_metaprov_modelaapi_pkg_apis_catalog_v1alpha1_generated_pb.PermissionsSpec.deserializeBinaryFromReader);
      msg.setPermissions(value);
      break;
    case 8:
      var value = new github_com_metaprov_modelaapi_pkg_apis_catalog_v1alpha1_generated_pb.NotificationSpec;
      reader.readMessage(value,github_com_metaprov_modelaapi_pkg_apis_catalog_v1alpha1_generated_pb.NotificationSpec.deserializeBinaryFromReader);
      msg.setNotification(value);
      break;
    case 9:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec.deserializeBinaryFromReader);
      msg.setOnline(value);
      break;
    case 10:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec.deserializeBinaryFromReader);
      msg.setOffline(value);
      break;
    case 11:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec.deserializeBinaryFromReader);
      msg.setMetrics(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaultlab();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_api_core_v1_generated_pb.ObjectReference.serializeBinaryToWriter
    );
  }
  f = message.getDefaultservingsiteref();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      k8s_io_api_core_v1_generated_pb.ObjectReference.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPermissions();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      github_com_metaprov_modelaapi_pkg_apis_catalog_v1alpha1_generated_pb.PermissionsSpec.serializeBinaryToWriter
    );
  }
  f = message.getNotification();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      github_com_metaprov_modelaapi_pkg_apis_catalog_v1alpha1_generated_pb.NotificationSpec.serializeBinaryToWriter
    );
  }
  f = message.getOnline();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec.serializeBinaryToWriter
    );
  }
  f = message.getOffline();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec.serializeBinaryToWriter
    );
  }
  f = message.getMetrics();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.api.core.v1.ObjectReference defaultLab = 1;
 * @return {?proto.k8s.io.api.core.v1.ObjectReference}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.getDefaultlab = function() {
  return /** @type{?proto.k8s.io.api.core.v1.ObjectReference} */ (
    jspb.Message.getWrapperField(this, k8s_io_api_core_v1_generated_pb.ObjectReference, 1));
};


/**
 * @param {?proto.k8s.io.api.core.v1.ObjectReference|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.setDefaultlab = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.clearDefaultlab = function() {
  return this.setDefaultlab(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.hasDefaultlab = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional k8s.io.api.core.v1.ObjectReference defaultServingSiteRef = 2;
 * @return {?proto.k8s.io.api.core.v1.ObjectReference}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.getDefaultservingsiteref = function() {
  return /** @type{?proto.k8s.io.api.core.v1.ObjectReference} */ (
    jspb.Message.getWrapperField(this, k8s_io_api_core_v1_generated_pb.ObjectReference, 2));
};


/**
 * @param {?proto.k8s.io.api.core.v1.ObjectReference|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.setDefaultservingsiteref = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.clearDefaultservingsiteref = function() {
  return this.setDefaultservingsiteref(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.hasDefaultservingsiteref = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string owner = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.setOwner = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.clearOwner = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string bucketName = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.getBucketname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.setBucketname = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.clearBucketname = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.hasBucketname = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string path = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.setPath = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.clearPath = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.hasPath = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.PermissionsSpec permissions = 7;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.PermissionsSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.getPermissions = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.PermissionsSpec} */ (
    jspb.Message.getWrapperField(this, github_com_metaprov_modelaapi_pkg_apis_catalog_v1alpha1_generated_pb.PermissionsSpec, 7));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.PermissionsSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.setPermissions = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.clearPermissions = function() {
  return this.setPermissions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.hasPermissions = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.NotificationSpec notification = 8;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.NotificationSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.getNotification = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.NotificationSpec} */ (
    jspb.Message.getWrapperField(this, github_com_metaprov_modelaapi_pkg_apis_catalog_v1alpha1_generated_pb.NotificationSpec, 8));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.NotificationSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.setNotification = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.clearNotification = function() {
  return this.setNotification(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.hasNotification = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional FeatureStoreSpec online = 9;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.getOnline = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec, 9));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.setOnline = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.clearOnline = function() {
  return this.setOnline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.hasOnline = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional FeatureStoreSpec offline = 10;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.getOffline = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec, 10));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.setOffline = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.clearOffline = function() {
  return this.setOffline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.hasOffline = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional FeatureStoreSpec metrics = 11;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.getMetrics = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec, 11));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.setMetrics = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.clearMetrics = function() {
  return this.setMetrics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec.prototype.hasMetrics = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    observedgeneration: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    updatedat: (f = msg.getUpdatedat()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
    failurereason: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    failuremessage: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    online: (f = msg.getOnline()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.toObject(includeInstance, f),
    offline: (f = msg.getOffline()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.toObject(includeInstance, f),
    metrics: (f = msg.getMetrics()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.toObject(includeInstance, f),
    conditionsList: jspb.Message.toObjectList(msg.getConditionsList(),
    k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setObservedgeneration(value);
      break;
    case 2:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailurereason(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailuremessage(value);
      break;
    case 5:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.deserializeBinaryFromReader);
      msg.setOnline(value);
      break;
    case 6:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.deserializeBinaryFromReader);
      msg.setOffline(value);
      break;
    case 7:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.deserializeBinaryFromReader);
      msg.setMetrics(value);
      break;
    case 8:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.deserializeBinaryFromReader);
      msg.addConditions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOnline();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.serializeBinaryToWriter
    );
  }
  f = message.getOffline();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.serializeBinaryToWriter
    );
  }
  f = message.getMetrics();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus.serializeBinaryToWriter
    );
  }
  f = message.getConditionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 observedGeneration = 1;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.getObservedgeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.setObservedgeneration = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.clearObservedgeneration = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.hasObservedgeneration = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time updatedAt = 2;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.getUpdatedat = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 2));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.setUpdatedat = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.clearUpdatedat = function() {
  return this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string failureReason = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.getFailurereason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.setFailurereason = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.clearFailurereason = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.hasFailurereason = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string failureMessage = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.getFailuremessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.setFailuremessage = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.clearFailuremessage = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.hasFailuremessage = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional FeatureStoreStatus online = 5;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.getOnline = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus, 5));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.setOnline = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.clearOnline = function() {
  return this.setOnline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.hasOnline = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional FeatureStoreStatus offline = 6;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.getOffline = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus, 6));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.setOffline = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.clearOffline = function() {
  return this.setOffline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.hasOffline = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional FeatureStoreStatus metrics = 7;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.getMetrics = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus, 7));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FeatureStoreStatus|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.setMetrics = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.clearMetrics = function() {
  return this.setMetrics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.hasMetrics = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated k8s.io.apimachinery.pkg.apis.meta.v1.Condition conditions = 8;
 * @return {!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.getConditionsList = function() {
  return /** @type{!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>} */ (
    jspb.Message.getRepeatedWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition, 8));
};


/**
 * @param {!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.setConditionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.addConditions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus.prototype.clearConditionsList = function() {
  return this.setConditionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    database: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabase(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string database = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.prototype.getDatabase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.prototype.setDatabase = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.prototype.clearDatabase = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.prototype.hasDatabase = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    keyspace: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyspace(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string keyspace = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.prototype.getKeyspace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.prototype.setKeyspace = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.prototype.clearKeyspace = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.prototype.hasKeyspace = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TimescaleDBSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec.prototype.setToken = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec.prototype.clearToken = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec.prototype.hasToken = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass.prototype.getMetadata = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional UserRoleClassSpec spec = 2;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass.prototype.getSpec = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec, 2));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList.prototype.getMetadata = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated UserRoleClass items = 2;
 * @return {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass, 2));
};


/**
 * @param {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass=} opt_value
 * @param {number=} opt_index
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    tenantref: (f = msg.getTenantref()) && k8s_io_api_core_v1_generated_pb.ObjectReference.toObject(includeInstance, f),
    description: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    owner: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    rulesList: jspb.Message.toObjectList(msg.getRulesList(),
    proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_api_core_v1_generated_pb.ObjectReference;
      reader.readMessage(value,k8s_io_api_core_v1_generated_pb.ObjectReference.deserializeBinaryFromReader);
      msg.setTenantref(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 4:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec.deserializeBinaryFromReader);
      msg.addRules(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTenantref();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_api_core_v1_generated_pb.ObjectReference.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRulesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.api.core.v1.ObjectReference tenantRef = 1;
 * @return {?proto.k8s.io.api.core.v1.ObjectReference}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.prototype.getTenantref = function() {
  return /** @type{?proto.k8s.io.api.core.v1.ObjectReference} */ (
    jspb.Message.getWrapperField(this, k8s_io_api_core_v1_generated_pb.ObjectReference, 1));
};


/**
 * @param {?proto.k8s.io.api.core.v1.ObjectReference|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.prototype.setTenantref = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.prototype.clearTenantref = function() {
  return this.setTenantref(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.prototype.hasTenantref = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string owner = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.prototype.setOwner = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.prototype.clearOwner = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated RuleSpec rules = 4;
 * @return {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.prototype.getRulesList = function() {
  return /** @type{!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec, 4));
};


/**
 * @param {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.prototype.setRulesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.prototype.addRules = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec.prototype.clearRulesList = function() {
  return this.setRulesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    database: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabase(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string database = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.prototype.getDatabase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.prototype.setDatabase = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.prototype.clearDatabase = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.prototype.hasDatabase = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    apiid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    apikey: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApiid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setApikey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string apiID = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec.prototype.getApiid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec.prototype.setApiid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec.prototype.clearApiid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec.prototype.hasApiid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string apiKey = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec.prototype.getApikey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec.prototype.setApikey = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec.prototype.clearApikey = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec.prototype.hasApikey = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string url = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    keyspace: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    username: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyspace(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.prototype.clearHost = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.prototype.hasHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string keyspace = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.prototype.getKeyspace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.prototype.setKeyspace = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.prototype.clearKeyspace = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.prototype.hasKeyspace = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictoriaMetricsSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 3:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket.prototype.getMetadata = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional VirtualBucketSpec spec = 2;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket.prototype.getSpec = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec, 2));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional VirtualBucketStatus status = 3;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket.prototype.getStatus = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus, 3));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList.prototype.getMetadata = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated VirtualBucket items = 2;
 * @return {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket, 2));
};


/**
 * @param {!Array<!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket=} opt_value
 * @param {number=} opt_index
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    tenantref: (f = msg.getTenantref()) && k8s_io_api_core_v1_generated_pb.ObjectReference.toObject(includeInstance, f),
    connectionname: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    description: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    owner: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    region: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    versioning: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    quotas: (f = msg.getQuotas()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_api_core_v1_generated_pb.ObjectReference;
      reader.readMessage(value,k8s_io_api_core_v1_generated_pb.ObjectReference.deserializeBinaryFromReader);
      msg.setTenantref(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectionname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVersioning(value);
      break;
    case 7:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas.deserializeBinaryFromReader);
      msg.setQuotas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTenantref();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_api_core_v1_generated_pb.ObjectReference.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getQuotas();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.api.core.v1.ObjectReference tenantRef = 1;
 * @return {?proto.k8s.io.api.core.v1.ObjectReference}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.getTenantref = function() {
  return /** @type{?proto.k8s.io.api.core.v1.ObjectReference} */ (
    jspb.Message.getWrapperField(this, k8s_io_api_core_v1_generated_pb.ObjectReference, 1));
};


/**
 * @param {?proto.k8s.io.api.core.v1.ObjectReference|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.setTenantref = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.clearTenantref = function() {
  return this.setTenantref(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.hasTenantref = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string connectionName = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.getConnectionname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.setConnectionname = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.clearConnectionname = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.hasConnectionname = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string owner = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.setOwner = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.clearOwner = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string region = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.setRegion = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.clearRegion = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.hasRegion = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool versioning = 6;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.getVersioning = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.setVersioning = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.clearVersioning = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.hasVersioning = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional BucketResourceQuotas quotas = 7;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.getQuotas = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas, 7));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.setQuotas = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.clearQuotas = function() {
  return this.setQuotas(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec.prototype.hasQuotas = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    updatedat: (f = msg.getUpdatedat()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
    observedgeneration: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    failurereason: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    failuremessage: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    conditionsList: jspb.Message.toObjectList(msg.getConditionsList(),
    k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setObservedgeneration(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailurereason(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailuremessage(value);
      break;
    case 6:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.deserializeBinaryFromReader);
      msg.addConditions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getConditionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time updatedAt = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.prototype.getUpdatedat = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.prototype.setUpdatedat = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.prototype.clearUpdatedat = function() {
  return this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 observedGeneration = 3;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.prototype.getObservedgeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.prototype.setObservedgeneration = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.prototype.clearObservedgeneration = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.prototype.hasObservedgeneration = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string failureReason = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.prototype.getFailurereason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.prototype.setFailurereason = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.prototype.clearFailurereason = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.prototype.hasFailurereason = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string failureMessage = 5;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.prototype.getFailuremessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.prototype.setFailuremessage = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.prototype.clearFailuremessage = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.prototype.hasFailuremessage = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated k8s.io.apimachinery.pkg.apis.meta.v1.Condition conditions = 6;
 * @return {!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.prototype.getConditionsList = function() {
  return /** @type{!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>} */ (
    jspb.Message.getRepeatedWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Condition, 6));
};


/**
 * @param {!Array<!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition>} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.prototype.setConditionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.prototype.addConditions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.k8s.io.apimachinery.pkg.apis.meta.v1.Condition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus.prototype.clearConditionsList = function() {
  return this.setConditionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    enabled: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    description: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    nodes: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    instancetype: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    gpus: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    gpuclassname: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    volumesize: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    spot: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f,
    connectionname: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    owner: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    limits: (f = msg.getLimits()) && proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.toObject(includeInstance, f),
    region: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    az: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
    kubernetesversion: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    autoscale: (f = jspb.Message.getBooleanField(msg, 15)) == null ? undefined : f,
    minnodes: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
    maxnodes: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
    cloudref: (f = msg.getCloudref()) && k8s_io_api_core_v1_generated_pb.ObjectReference.toObject(includeInstance, f),
    sshkey: (f = jspb.Message.getField(msg, 19)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNodes(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstancetype(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGpus(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setGpuclassname(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVolumesize(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSpot(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectionname(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 11:
      var value = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec;
      reader.readMessage(value,proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.deserializeBinaryFromReader);
      msg.setLimits(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setAz(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setKubernetesversion(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutoscale(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinnodes(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxnodes(value);
      break;
    case 18:
      var value = new k8s_io_api_core_v1_generated_pb.ObjectReference;
      reader.readMessage(value,k8s_io_api_core_v1_generated_pb.ObjectReference.deserializeBinaryFromReader);
      msg.setCloudref(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setSshkey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getLimits();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getCloudref();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      k8s_io_api_core_v1_generated_pb.ObjectReference.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeString(
      19,
      f
    );
  }
};


/**
 * optional bool enabled = 1;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.setEnabled = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.clearEnabled = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.hasEnabled = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 nodes = 3;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.getNodes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.setNodes = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.clearNodes = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.hasNodes = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string instanceType = 4;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.getInstancetype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.setInstancetype = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.clearInstancetype = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.hasInstancetype = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 gpus = 5;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.getGpus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.setGpus = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.clearGpus = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.hasGpus = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string gpuClassName = 6;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.getGpuclassname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.setGpuclassname = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.clearGpuclassname = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.hasGpuclassname = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 volumeSize = 7;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.getVolumesize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.setVolumesize = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.clearVolumesize = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.hasVolumesize = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool spot = 8;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.getSpot = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.setSpot = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.clearSpot = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.hasSpot = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string connectionName = 9;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.getConnectionname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.setConnectionname = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.clearConnectionname = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.hasConnectionname = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string owner = 10;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.setOwner = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.clearOwner = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional ResourceLimitSpec limits = 11;
 * @return {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.getLimits = function() {
  return /** @type{?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec, 11));
};


/**
 * @param {?proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.setLimits = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.clearLimits = function() {
  return this.setLimits(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.hasLimits = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string region = 12;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.setRegion = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.clearRegion = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.hasRegion = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string az = 13;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.getAz = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.setAz = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.clearAz = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.hasAz = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string kubernetesVersion = 14;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.getKubernetesversion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.setKubernetesversion = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.clearKubernetesversion = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.hasKubernetesversion = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool autoscale = 15;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.getAutoscale = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.setAutoscale = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.clearAutoscale = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.hasAutoscale = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional int32 minNodes = 16;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.getMinnodes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.setMinnodes = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.clearMinnodes = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.hasMinnodes = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional int32 maxNodes = 17;
 * @return {number}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.getMaxnodes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.setMaxnodes = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.clearMaxnodes = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.hasMaxnodes = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional k8s.io.api.core.v1.ObjectReference cloudRef = 18;
 * @return {?proto.k8s.io.api.core.v1.ObjectReference}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.getCloudref = function() {
  return /** @type{?proto.k8s.io.api.core.v1.ObjectReference} */ (
    jspb.Message.getWrapperField(this, k8s_io_api_core_v1_generated_pb.ObjectReference, 18));
};


/**
 * @param {?proto.k8s.io.api.core.v1.ObjectReference|undefined} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
*/
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.setCloudref = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.clearCloudref = function() {
  return this.setCloudref(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.hasCloudref = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional string sshKey = 19;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.getSshkey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.setSshkey = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.clearSshkey = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec.prototype.hasSshkey = function() {
  return jspb.Message.getField(this, 19) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    contenttype: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    token: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    headersMap: (f = msg.getHeadersMap()) ? f.toObject(includeInstance, undefined) : [],
    ssl: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec;
  return proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContenttype(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 4:
      var value = msg.getHeadersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSsl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getHeadersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string contentType = 2;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.prototype.getContenttype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.prototype.setContenttype = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.prototype.clearContenttype = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.prototype.hasContenttype = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string token = 3;
 * @return {string}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.prototype.setToken = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.prototype.clearToken = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.prototype.hasToken = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * map<string, string> headers = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.prototype.getHeadersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.prototype.clearHeadersMap = function() {
  this.getHeadersMap().clear();
  return this;};


/**
 * optional bool ssl = 5;
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.prototype.getSsl = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.prototype.setSsl = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec} returns this
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.prototype.clearSsl = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.prototype.hasSsl = function() {
  return jspb.Message.getField(this, 5) != null;
};


goog.object.extend(exports, proto.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1);
