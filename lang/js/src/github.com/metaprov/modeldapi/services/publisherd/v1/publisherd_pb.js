/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var github_com_metaprov_modeldapi_pkg_apis_training_v1alpha1_generated_pb = require('../../../../../../github.com/metaprov/modeldapi/pkg/apis/training/v1alpha1/generated_pb.js');
var github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb = require('../../../../../../github.com/metaprov/modeldapi/pkg/apis/data/v1alpha1/generated_pb.js');
var github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb = require('../../../../../../github.com/metaprov/modeldapi/pkg/apis/infra/v1alpha1/generated_pb.js');
goog.exportSymbol('proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelResponse', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookResponse', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownRequest', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest.displayName = 'proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    notebookname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    notebooknamespace: jspb.Message.getFieldWithDefault(msg, 2, ""),
    notebookspec: (f = msg.getNotebookspec()) && github_com_metaprov_modeldapi_pkg_apis_training_v1alpha1_generated_pb.NotebookSpec.toObject(includeInstance, f),
    notebookcontent: jspb.Message.getFieldWithDefault(msg, 4, ""),
    dockerfile: jspb.Message.getFieldWithDefault(msg, 5, ""),
    provider: jspb.Message.getFieldWithDefault(msg, 6, ""),
    secretMap: (f = msg.getSecretMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest;
  return proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotebookname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotebooknamespace(value);
      break;
    case 3:
      var value = new github_com_metaprov_modeldapi_pkg_apis_training_v1alpha1_generated_pb.NotebookSpec;
      reader.readMessage(value,github_com_metaprov_modeldapi_pkg_apis_training_v1alpha1_generated_pb.NotebookSpec.deserializeBinaryFromReader);
      msg.setNotebookspec(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotebookcontent(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDockerfile(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 7:
      var value = msg.getSecretMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBytes, null, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNotebookname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNotebooknamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNotebookspec();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      github_com_metaprov_modeldapi_pkg_apis_training_v1alpha1_generated_pb.NotebookSpec.serializeBinaryToWriter
    );
  }
  f = message.getNotebookcontent();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDockerfile();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSecretMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBytes);
  }
};


/**
 * optional string notebookName = 1;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest.prototype.getNotebookname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest.prototype.setNotebookname = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string notebookNamespace = 2;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest.prototype.getNotebooknamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest.prototype.setNotebooknamespace = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.NotebookSpec notebookSpec = 3;
 * @return {?proto.github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.NotebookSpec}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest.prototype.getNotebookspec = function() {
  return /** @type{?proto.github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.NotebookSpec} */ (
    jspb.Message.getWrapperField(this, github_com_metaprov_modeldapi_pkg_apis_training_v1alpha1_generated_pb.NotebookSpec, 3));
};


/** @param {?proto.github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.NotebookSpec|undefined} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest.prototype.setNotebookspec = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest.prototype.clearNotebookspec = function() {
  this.setNotebookspec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest.prototype.hasNotebookspec = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string NotebookContent = 4;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest.prototype.getNotebookcontent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest.prototype.setNotebookcontent = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string Dockerfile = 5;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest.prototype.getDockerfile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest.prototype.setDockerfile = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string provider = 6;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest.prototype.setProvider = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * map<string, bytes> secret = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!(string|Uint8Array)>}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest.prototype.getSecretMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!(string|Uint8Array)>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      null));
};


proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookRequest.prototype.clearSecretMap = function() {
  this.getSecretMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookResponse.displayName = 'proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    imagename: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookResponse}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookResponse;
  return proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookResponse}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setImagename(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImagename();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string ImageName = 1;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookResponse.prototype.getImagename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishNotebookResponse.prototype.setImagename = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.displayName = 'proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataproductname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    dataproductnamespace: jspb.Message.getFieldWithDefault(msg, 2, ""),
    dataproductspec: (f = msg.getDataproductspec()) && github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.DataProductSpec.toObject(includeInstance, f),
    dataproductversionname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    dataproductversionnamespace: jspb.Message.getFieldWithDefault(msg, 5, ""),
    dataproductversionspec: (f = msg.getDataproductversionspec()) && github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.DataProductVersionSpec.toObject(includeInstance, f),
    modelname: jspb.Message.getFieldWithDefault(msg, 7, ""),
    modelnamespace: jspb.Message.getFieldWithDefault(msg, 8, ""),
    modelspec: (f = msg.getModelspec()) && github_com_metaprov_modeldapi_pkg_apis_training_v1alpha1_generated_pb.ModelSpec.toObject(includeInstance, f),
    studyname: jspb.Message.getFieldWithDefault(msg, 13, ""),
    studynamespace: jspb.Message.getFieldWithDefault(msg, 14, ""),
    studyspec: (f = msg.getStudyspec()) && github_com_metaprov_modeldapi_pkg_apis_training_v1alpha1_generated_pb.StudySpec.toObject(includeInstance, f),
    datasourcename: jspb.Message.getFieldWithDefault(msg, 16, ""),
    datasourcenamespace: jspb.Message.getFieldWithDefault(msg, 17, ""),
    datasourcespec: (f = msg.getDatasourcespec()) && github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.DataSourceSpec.toObject(includeInstance, f),
    datasetname: jspb.Message.getFieldWithDefault(msg, 19, ""),
    datasetnamespace: jspb.Message.getFieldWithDefault(msg, 20, ""),
    datasetspec: (f = msg.getDatasetspec()) && github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.DatasetSpec.toObject(includeInstance, f),
    provider: jspb.Message.getFieldWithDefault(msg, 22, ""),
    imagename: jspb.Message.getFieldWithDefault(msg, 23, ""),
    push: jspb.Message.getFieldWithDefault(msg, 24, false),
    bucketname: jspb.Message.getFieldWithDefault(msg, 25, ""),
    bucketnamespace: jspb.Message.getFieldWithDefault(msg, 26, ""),
    bucketspec: (f = msg.getBucketspec()) && github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.VirtualBucketSpec.toObject(includeInstance, f),
    cloudconnectionname: jspb.Message.getFieldWithDefault(msg, 28, ""),
    cloudsconnectionnamespace: jspb.Message.getFieldWithDefault(msg, 29, ""),
    cloudconnectionspec: (f = msg.getCloudconnectionspec()) && github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.ConnectionSpec.toObject(includeInstance, f),
    cloudsecretMap: (f = msg.getCloudsecretMap()) ? f.toObject(includeInstance, undefined) : [],
    dockerconnectionname: jspb.Message.getFieldWithDefault(msg, 32, ""),
    dockerconnectionnamespace: jspb.Message.getFieldWithDefault(msg, 33, ""),
    dockerconnectionspec: (f = msg.getDockerconnectionspec()) && github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.ConnectionSpec.toObject(includeInstance, f),
    dockerregistrysecretMap: (f = msg.getDockerregistrysecretMap()) ? f.toObject(includeInstance, undefined) : [],
    modelweightsuri: jspb.Message.getFieldWithDefault(msg, 36, ""),
    preprocessorweightsuri: jspb.Message.getFieldWithDefault(msg, 37, ""),
    labelencoderuri: jspb.Message.getFieldWithDefault(msg, 38, ""),
    kaniko: jspb.Message.getFieldWithDefault(msg, 39, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest;
  return proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataproductname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataproductnamespace(value);
      break;
    case 3:
      var value = new github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.DataProductSpec;
      reader.readMessage(value,github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.DataProductSpec.deserializeBinaryFromReader);
      msg.setDataproductspec(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataproductversionname(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataproductversionnamespace(value);
      break;
    case 6:
      var value = new github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.DataProductVersionSpec;
      reader.readMessage(value,github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.DataProductVersionSpec.deserializeBinaryFromReader);
      msg.setDataproductversionspec(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelname(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelnamespace(value);
      break;
    case 9:
      var value = new github_com_metaprov_modeldapi_pkg_apis_training_v1alpha1_generated_pb.ModelSpec;
      reader.readMessage(value,github_com_metaprov_modeldapi_pkg_apis_training_v1alpha1_generated_pb.ModelSpec.deserializeBinaryFromReader);
      msg.setModelspec(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setStudyname(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setStudynamespace(value);
      break;
    case 15:
      var value = new github_com_metaprov_modeldapi_pkg_apis_training_v1alpha1_generated_pb.StudySpec;
      reader.readMessage(value,github_com_metaprov_modeldapi_pkg_apis_training_v1alpha1_generated_pb.StudySpec.deserializeBinaryFromReader);
      msg.setStudyspec(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatasourcename(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatasourcenamespace(value);
      break;
    case 18:
      var value = new github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.DataSourceSpec;
      reader.readMessage(value,github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.DataSourceSpec.deserializeBinaryFromReader);
      msg.setDatasourcespec(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatasetname(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatasetnamespace(value);
      break;
    case 21:
      var value = new github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.DatasetSpec;
      reader.readMessage(value,github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.DatasetSpec.deserializeBinaryFromReader);
      msg.setDatasetspec(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setImagename(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPush(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucketname(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucketnamespace(value);
      break;
    case 27:
      var value = new github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.VirtualBucketSpec;
      reader.readMessage(value,github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.VirtualBucketSpec.deserializeBinaryFromReader);
      msg.setBucketspec(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setCloudconnectionname(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setCloudsconnectionnamespace(value);
      break;
    case 30:
      var value = new github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.ConnectionSpec;
      reader.readMessage(value,github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.ConnectionSpec.deserializeBinaryFromReader);
      msg.setCloudconnectionspec(value);
      break;
    case 31:
      var value = msg.getCloudsecretMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBytes, null, "");
         });
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setDockerconnectionname(value);
      break;
    case 33:
      var value = /** @type {string} */ (reader.readString());
      msg.setDockerconnectionnamespace(value);
      break;
    case 34:
      var value = new github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.ConnectionSpec;
      reader.readMessage(value,github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.ConnectionSpec.deserializeBinaryFromReader);
      msg.setDockerconnectionspec(value);
      break;
    case 35:
      var value = msg.getDockerregistrysecretMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBytes, null, "");
         });
      break;
    case 36:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelweightsuri(value);
      break;
    case 37:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreprocessorweightsuri(value);
      break;
    case 38:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabelencoderuri(value);
      break;
    case 39:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setKaniko(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataproductname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDataproductnamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDataproductspec();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.DataProductSpec.serializeBinaryToWriter
    );
  }
  f = message.getDataproductversionname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDataproductversionnamespace();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDataproductversionspec();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.DataProductVersionSpec.serializeBinaryToWriter
    );
  }
  f = message.getModelname();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getModelnamespace();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getModelspec();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      github_com_metaprov_modeldapi_pkg_apis_training_v1alpha1_generated_pb.ModelSpec.serializeBinaryToWriter
    );
  }
  f = message.getStudyname();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getStudynamespace();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getStudyspec();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      github_com_metaprov_modeldapi_pkg_apis_training_v1alpha1_generated_pb.StudySpec.serializeBinaryToWriter
    );
  }
  f = message.getDatasourcename();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getDatasourcenamespace();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getDatasourcespec();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.DataSourceSpec.serializeBinaryToWriter
    );
  }
  f = message.getDatasetname();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getDatasetnamespace();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getDatasetspec();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.DatasetSpec.serializeBinaryToWriter
    );
  }
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getImagename();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getPush();
  if (f) {
    writer.writeBool(
      24,
      f
    );
  }
  f = message.getBucketname();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getBucketnamespace();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getBucketspec();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.VirtualBucketSpec.serializeBinaryToWriter
    );
  }
  f = message.getCloudconnectionname();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getCloudsconnectionnamespace();
  if (f.length > 0) {
    writer.writeString(
      29,
      f
    );
  }
  f = message.getCloudconnectionspec();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.ConnectionSpec.serializeBinaryToWriter
    );
  }
  f = message.getCloudsecretMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(31, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBytes);
  }
  f = message.getDockerconnectionname();
  if (f.length > 0) {
    writer.writeString(
      32,
      f
    );
  }
  f = message.getDockerconnectionnamespace();
  if (f.length > 0) {
    writer.writeString(
      33,
      f
    );
  }
  f = message.getDockerconnectionspec();
  if (f != null) {
    writer.writeMessage(
      34,
      f,
      github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.ConnectionSpec.serializeBinaryToWriter
    );
  }
  f = message.getDockerregistrysecretMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(35, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBytes);
  }
  f = message.getModelweightsuri();
  if (f.length > 0) {
    writer.writeString(
      36,
      f
    );
  }
  f = message.getPreprocessorweightsuri();
  if (f.length > 0) {
    writer.writeString(
      37,
      f
    );
  }
  f = message.getLabelencoderuri();
  if (f.length > 0) {
    writer.writeString(
      38,
      f
    );
  }
  f = message.getKaniko();
  if (f) {
    writer.writeBool(
      39,
      f
    );
  }
};


/**
 * optional string dataproductName = 1;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getDataproductname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setDataproductname = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string dataproductNamespace = 2;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getDataproductnamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setDataproductnamespace = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.DataProductSpec dataproductSpec = 3;
 * @return {?proto.github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.DataProductSpec}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getDataproductspec = function() {
  return /** @type{?proto.github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.DataProductSpec} */ (
    jspb.Message.getWrapperField(this, github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.DataProductSpec, 3));
};


/** @param {?proto.github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.DataProductSpec|undefined} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setDataproductspec = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.clearDataproductspec = function() {
  this.setDataproductspec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.hasDataproductspec = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string dataproductversionName = 4;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getDataproductversionname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setDataproductversionname = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string dataproductversionNamespace = 5;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getDataproductversionnamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setDataproductversionnamespace = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.DataProductVersionSpec dataproductversionSpec = 6;
 * @return {?proto.github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.DataProductVersionSpec}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getDataproductversionspec = function() {
  return /** @type{?proto.github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.DataProductVersionSpec} */ (
    jspb.Message.getWrapperField(this, github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.DataProductVersionSpec, 6));
};


/** @param {?proto.github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.DataProductVersionSpec|undefined} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setDataproductversionspec = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.clearDataproductversionspec = function() {
  this.setDataproductversionspec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.hasDataproductversionspec = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string modelName = 7;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getModelname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setModelname = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string modelNamespace = 8;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getModelnamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setModelnamespace = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.ModelSpec modelSpec = 9;
 * @return {?proto.github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.ModelSpec}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getModelspec = function() {
  return /** @type{?proto.github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.ModelSpec} */ (
    jspb.Message.getWrapperField(this, github_com_metaprov_modeldapi_pkg_apis_training_v1alpha1_generated_pb.ModelSpec, 9));
};


/** @param {?proto.github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.ModelSpec|undefined} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setModelspec = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.clearModelspec = function() {
  this.setModelspec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.hasModelspec = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string studyName = 13;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getStudyname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setStudyname = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string studyNamespace = 14;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getStudynamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setStudynamespace = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.StudySpec studySpec = 15;
 * @return {?proto.github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.StudySpec}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getStudyspec = function() {
  return /** @type{?proto.github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.StudySpec} */ (
    jspb.Message.getWrapperField(this, github_com_metaprov_modeldapi_pkg_apis_training_v1alpha1_generated_pb.StudySpec, 15));
};


/** @param {?proto.github.com.metaprov.modeldapi.pkg.apis.training.v1alpha1.StudySpec|undefined} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setStudyspec = function(value) {
  jspb.Message.setWrapperField(this, 15, value);
};


proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.clearStudyspec = function() {
  this.setStudyspec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.hasStudyspec = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string datasourceName = 16;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getDatasourcename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setDatasourcename = function(value) {
  jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string datasourceNamespace = 17;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getDatasourcenamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setDatasourcenamespace = function(value) {
  jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.DataSourceSpec datasourceSpec = 18;
 * @return {?proto.github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.DataSourceSpec}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getDatasourcespec = function() {
  return /** @type{?proto.github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.DataSourceSpec} */ (
    jspb.Message.getWrapperField(this, github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.DataSourceSpec, 18));
};


/** @param {?proto.github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.DataSourceSpec|undefined} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setDatasourcespec = function(value) {
  jspb.Message.setWrapperField(this, 18, value);
};


proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.clearDatasourcespec = function() {
  this.setDatasourcespec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.hasDatasourcespec = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional string datasetName = 19;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getDatasetname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setDatasetname = function(value) {
  jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string datasetNamespace = 20;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getDatasetnamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setDatasetnamespace = function(value) {
  jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.DatasetSpec datasetSpec = 21;
 * @return {?proto.github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.DatasetSpec}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getDatasetspec = function() {
  return /** @type{?proto.github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.DatasetSpec} */ (
    jspb.Message.getWrapperField(this, github_com_metaprov_modeldapi_pkg_apis_data_v1alpha1_generated_pb.DatasetSpec, 21));
};


/** @param {?proto.github.com.metaprov.modeldapi.pkg.apis.data.v1alpha1.DatasetSpec|undefined} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setDatasetspec = function(value) {
  jspb.Message.setWrapperField(this, 21, value);
};


proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.clearDatasetspec = function() {
  this.setDatasetspec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.hasDatasetspec = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional string provider = 22;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setProvider = function(value) {
  jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string imagename = 23;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getImagename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setImagename = function(value) {
  jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional bool push = 24;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getPush = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 24, false));
};


/** @param {boolean} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setPush = function(value) {
  jspb.Message.setProto3BooleanField(this, 24, value);
};


/**
 * optional string bucketName = 25;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getBucketname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setBucketname = function(value) {
  jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string bucketNamespace = 26;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getBucketnamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setBucketnamespace = function(value) {
  jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec bucketSpec = 27;
 * @return {?proto.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getBucketspec = function() {
  return /** @type{?proto.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec} */ (
    jspb.Message.getWrapperField(this, github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.VirtualBucketSpec, 27));
};


/** @param {?proto.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec|undefined} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setBucketspec = function(value) {
  jspb.Message.setWrapperField(this, 27, value);
};


proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.clearBucketspec = function() {
  this.setBucketspec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.hasBucketspec = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional string cloudConnectionName = 28;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getCloudconnectionname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setCloudconnectionname = function(value) {
  jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional string cloudsConnectionNamespace = 29;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getCloudsconnectionnamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setCloudsconnectionnamespace = function(value) {
  jspb.Message.setProto3StringField(this, 29, value);
};


/**
 * optional github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.ConnectionSpec cloudConnectionSpec = 30;
 * @return {?proto.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.ConnectionSpec}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getCloudconnectionspec = function() {
  return /** @type{?proto.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.ConnectionSpec} */ (
    jspb.Message.getWrapperField(this, github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.ConnectionSpec, 30));
};


/** @param {?proto.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.ConnectionSpec|undefined} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setCloudconnectionspec = function(value) {
  jspb.Message.setWrapperField(this, 30, value);
};


proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.clearCloudconnectionspec = function() {
  this.setCloudconnectionspec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.hasCloudconnectionspec = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * map<string, bytes> cloudSecret = 31;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!(string|Uint8Array)>}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getCloudsecretMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!(string|Uint8Array)>} */ (
      jspb.Message.getMapField(this, 31, opt_noLazyCreate,
      null));
};


proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.clearCloudsecretMap = function() {
  this.getCloudsecretMap().clear();
};


/**
 * optional string dockerConnectionName = 32;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getDockerconnectionname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setDockerconnectionname = function(value) {
  jspb.Message.setProto3StringField(this, 32, value);
};


/**
 * optional string dockerConnectionNamespace = 33;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getDockerconnectionnamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 33, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setDockerconnectionnamespace = function(value) {
  jspb.Message.setProto3StringField(this, 33, value);
};


/**
 * optional github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.ConnectionSpec dockerConnectionSpec = 34;
 * @return {?proto.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.ConnectionSpec}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getDockerconnectionspec = function() {
  return /** @type{?proto.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.ConnectionSpec} */ (
    jspb.Message.getWrapperField(this, github_com_metaprov_modeldapi_pkg_apis_infra_v1alpha1_generated_pb.ConnectionSpec, 34));
};


/** @param {?proto.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.ConnectionSpec|undefined} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setDockerconnectionspec = function(value) {
  jspb.Message.setWrapperField(this, 34, value);
};


proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.clearDockerconnectionspec = function() {
  this.setDockerconnectionspec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.hasDockerconnectionspec = function() {
  return jspb.Message.getField(this, 34) != null;
};


/**
 * map<string, bytes> dockerRegistrySecret = 35;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!(string|Uint8Array)>}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getDockerregistrysecretMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!(string|Uint8Array)>} */ (
      jspb.Message.getMapField(this, 35, opt_noLazyCreate,
      null));
};


proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.clearDockerregistrysecretMap = function() {
  this.getDockerregistrysecretMap().clear();
};


/**
 * optional string modelWeightsUri = 36;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getModelweightsuri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 36, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setModelweightsuri = function(value) {
  jspb.Message.setProto3StringField(this, 36, value);
};


/**
 * optional string preprocessorWeightsUri = 37;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getPreprocessorweightsuri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 37, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setPreprocessorweightsuri = function(value) {
  jspb.Message.setProto3StringField(this, 37, value);
};


/**
 * optional string labelEncoderUri = 38;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getLabelencoderuri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 38, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setLabelencoderuri = function(value) {
  jspb.Message.setProto3StringField(this, 38, value);
};


/**
 * optional bool kaniko = 39;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.getKaniko = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 39, false));
};


/** @param {boolean} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelRequest.prototype.setKaniko = function(value) {
  jspb.Message.setProto3BooleanField(this, 39, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelResponse.displayName = 'proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    imagename: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelResponse}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelResponse;
  return proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelResponse}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setImagename(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImagename();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string ImageName = 1;
 * @return {string}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelResponse.prototype.getImagename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.github.com.metaprov.modeld.services.publisherd.v1.PublishModelResponse.prototype.setImagename = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownRequest.displayName = 'proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownRequest}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownRequest;
  return proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownRequest}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownResponse.displayName = 'proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownResponse}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownResponse;
  return proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownResponse}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeld.services.publisherd.v1.ShutdownResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.github.com.metaprov.modeld.services.publisherd.v1);
