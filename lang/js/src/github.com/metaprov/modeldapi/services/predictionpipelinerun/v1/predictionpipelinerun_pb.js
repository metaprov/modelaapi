// source: github.com/metaprov/modeldapi/services/predictionpipelinerun/v1/predictionpipelinerun.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../../../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var github_com_metaprov_modeldapi_pkg_apis_inference_v1alpha1_generated_pb = require('../../../../../../github.com/metaprov/modeldapi/pkg/apis/inference/v1alpha1/generated_pb.js');
goog.object.extend(proto, github_com_metaprov_modeldapi_pkg_apis_inference_v1alpha1_generated_pb);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunResponse', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunRequest', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunResponse', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunRequest', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunResponse', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunRequest', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunResponse', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsRequest', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsResponse', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest', null, global);
goog.exportSymbol('proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsRequest.displayName = 'proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsResponse.displayName = 'proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunResponse.displayName = 'proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest.displayName = 'proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest.displayName = 'proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunResponse.displayName = 'proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunRequest.displayName = 'proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunResponse.displayName = 'proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunRequest.displayName = 'proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunResponse.displayName = 'proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunRequest.displayName = 'proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunResponse.displayName = 'proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    namespace: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsRequest}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsRequest;
  return proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsRequest}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string namespace = 1;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsRequest.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, string> labels = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsRequest.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsRequest.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    items: (f = msg.getItems()) && github_com_metaprov_modeldapi_pkg_apis_inference_v1alpha1_generated_pb.PredictionPipelineRunList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsResponse}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsResponse;
  return proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsResponse}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_metaprov_modeldapi_pkg_apis_inference_v1alpha1_generated_pb.PredictionPipelineRunList;
      reader.readMessage(value,github_com_metaprov_modeldapi_pkg_apis_inference_v1alpha1_generated_pb.PredictionPipelineRunList.deserializeBinaryFromReader);
      msg.setItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItems();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_metaprov_modeldapi_pkg_apis_inference_v1alpha1_generated_pb.PredictionPipelineRunList.serializeBinaryToWriter
    );
  }
};


/**
 * optional github.com.metaprov.modeldapi.pkg.apis.inference.v1alpha1.PredictionPipelineRunList items = 1;
 * @return {?proto.github.com.metaprov.modeldapi.pkg.apis.inference.v1alpha1.PredictionPipelineRunList}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsResponse.prototype.getItems = function() {
  return /** @type{?proto.github.com.metaprov.modeldapi.pkg.apis.inference.v1alpha1.PredictionPipelineRunList} */ (
    jspb.Message.getWrapperField(this, github_com_metaprov_modeldapi_pkg_apis_inference_v1alpha1_generated_pb.PredictionPipelineRunList, 1));
};


/**
 * @param {?proto.github.com.metaprov.modeldapi.pkg.apis.inference.v1alpha1.PredictionPipelineRunList|undefined} value
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsResponse} returns this
*/
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsResponse.prototype.setItems = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsResponse} returns this
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsResponse.prototype.clearItems = function() {
  return this.setItems(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.ListPredictionPipelineRunsResponse.prototype.hasItems = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunResponse}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunResponse;
  return proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunResponse}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    namespace: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    spec: (f = msg.getSpec()) && github_com_metaprov_modeldapi_pkg_apis_inference_v1alpha1_generated_pb.PredictionPipelineRunSpec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest;
  return proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 5:
      var value = new github_com_metaprov_modeldapi_pkg_apis_inference_v1alpha1_generated_pb.PredictionPipelineRunSpec;
      reader.readMessage(value,github_com_metaprov_modeldapi_pkg_apis_inference_v1alpha1_generated_pb.PredictionPipelineRunSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      github_com_metaprov_modeldapi_pkg_apis_inference_v1alpha1_generated_pb.PredictionPipelineRunSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional string namespace = 1;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, string> labels = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
  return this;};


/**
 * optional github.com.metaprov.modeldapi.pkg.apis.inference.v1alpha1.PredictionPipelineRunSpec spec = 5;
 * @return {?proto.github.com.metaprov.modeldapi.pkg.apis.inference.v1alpha1.PredictionPipelineRunSpec}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest.prototype.getSpec = function() {
  return /** @type{?proto.github.com.metaprov.modeldapi.pkg.apis.inference.v1alpha1.PredictionPipelineRunSpec} */ (
    jspb.Message.getWrapperField(this, github_com_metaprov_modeldapi_pkg_apis_inference_v1alpha1_generated_pb.PredictionPipelineRunSpec, 5));
};


/**
 * @param {?proto.github.com.metaprov.modeldapi.pkg.apis.inference.v1alpha1.PredictionPipelineRunSpec|undefined} value
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest} returns this
*/
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.CreatePredictionPipelineRunRequest.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    namespace: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    spec: (f = msg.getSpec()) && github_com_metaprov_modeldapi_pkg_apis_inference_v1alpha1_generated_pb.PredictionPipelineRunSpec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest;
  return proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 5:
      var value = new github_com_metaprov_modeldapi_pkg_apis_inference_v1alpha1_generated_pb.PredictionPipelineRunSpec;
      reader.readMessage(value,github_com_metaprov_modeldapi_pkg_apis_inference_v1alpha1_generated_pb.PredictionPipelineRunSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      github_com_metaprov_modeldapi_pkg_apis_inference_v1alpha1_generated_pb.PredictionPipelineRunSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional string namespace = 1;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, string> labels = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
  return this;};


/**
 * optional github.com.metaprov.modeldapi.pkg.apis.inference.v1alpha1.PredictionPipelineRunSpec spec = 5;
 * @return {?proto.github.com.metaprov.modeldapi.pkg.apis.inference.v1alpha1.PredictionPipelineRunSpec}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest.prototype.getSpec = function() {
  return /** @type{?proto.github.com.metaprov.modeldapi.pkg.apis.inference.v1alpha1.PredictionPipelineRunSpec} */ (
    jspb.Message.getWrapperField(this, github_com_metaprov_modeldapi_pkg_apis_inference_v1alpha1_generated_pb.PredictionPipelineRunSpec, 5));
};


/**
 * @param {?proto.github.com.metaprov.modeldapi.pkg.apis.inference.v1alpha1.PredictionPipelineRunSpec|undefined} value
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest} returns this
*/
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunRequest.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunResponse}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunResponse;
  return proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunResponse}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.UpdatePredictionPipelineRunResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    namespace: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunRequest}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunRequest;
  return proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunRequest}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string namespace = 1;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunRequest.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && github_com_metaprov_modeldapi_pkg_apis_inference_v1alpha1_generated_pb.PredictionPipelineRun.toObject(includeInstance, f),
    yaml: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunResponse}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunResponse;
  return proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunResponse}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_metaprov_modeldapi_pkg_apis_inference_v1alpha1_generated_pb.PredictionPipelineRun;
      reader.readMessage(value,github_com_metaprov_modeldapi_pkg_apis_inference_v1alpha1_generated_pb.PredictionPipelineRun.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setYaml(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_metaprov_modeldapi_pkg_apis_inference_v1alpha1_generated_pb.PredictionPipelineRun.serializeBinaryToWriter
    );
  }
  f = message.getYaml();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional github.com.metaprov.modeldapi.pkg.apis.inference.v1alpha1.PredictionPipelineRun item = 1;
 * @return {?proto.github.com.metaprov.modeldapi.pkg.apis.inference.v1alpha1.PredictionPipelineRun}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunResponse.prototype.getItem = function() {
  return /** @type{?proto.github.com.metaprov.modeldapi.pkg.apis.inference.v1alpha1.PredictionPipelineRun} */ (
    jspb.Message.getWrapperField(this, github_com_metaprov_modeldapi_pkg_apis_inference_v1alpha1_generated_pb.PredictionPipelineRun, 1));
};


/**
 * @param {?proto.github.com.metaprov.modeldapi.pkg.apis.inference.v1alpha1.PredictionPipelineRun|undefined} value
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunResponse} returns this
*/
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunResponse.prototype.setItem = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunResponse} returns this
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunResponse.prototype.clearItem = function() {
  return this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunResponse.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string yaml = 2;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunResponse.prototype.getYaml = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunResponse} returns this
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.GetPredictionPipelineRunResponse.prototype.setYaml = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    namespace: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunRequest}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunRequest;
  return proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunRequest}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string namespace = 1;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunRequest.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunResponse}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunResponse;
  return proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunResponse}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DeletePredictionPipelineRunResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    namespace: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunRequest}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunRequest;
  return proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunRequest}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string namespace = 1;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunRequest.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunRequest} returns this
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    raw: msg.getRaw_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunResponse}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunResponse;
  return proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunResponse}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRaw(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRaw_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes raw = 1;
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunResponse.prototype.getRaw = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes raw = 1;
 * This is a type-conversion wrapper around `getRaw()`
 * @return {string}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunResponse.prototype.getRaw_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRaw()));
};


/**
 * optional bytes raw = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRaw()`
 * @return {!Uint8Array}
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunResponse.prototype.getRaw_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRaw()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunResponse} returns this
 */
proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1.DownloadPredictionPipelineRunResponse.prototype.setRaw = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


goog.object.extend(exports, proto.github.com.metaprov.modeldapi.services.predictionpipelinerun.v1);
