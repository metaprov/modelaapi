# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: github.com/metaprov/modelaapi/services/sqlqueryrun/v1/sqlqueryrun.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import field_mask_pb2 as google_dot_protobuf_dot_field__mask__pb2
from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1 import generated_pb2 as github_dot_com_dot_metaprov_dot_modelaapi_dot_pkg_dot_apis_dot_data_dot_v1alpha1_dot_generated__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\nGgithub.com/metaprov/modelaapi/services/sqlqueryrun/v1/sqlqueryrun.proto\x12\x35github.com.metaprov.modelaapi.services.sqlqueryrun.v1\x1a google/protobuf/field_mask.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x44github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1/generated.proto\"\xd5\x01\n\x17ListSqlQueryRunsRequest\x12\x11\n\tnamespace\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12j\n\x06labels\x18\x03 \x03(\x0b\x32Z.github.com.metaprov.modelaapi.services.sqlqueryrun.v1.ListSqlQueryRunsRequest.LabelsEntry\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x90\x01\n\x18ListSqlQueryRunsResponse\x12[\n\x0csqlqueryruns\x18\x01 \x01(\x0b\x32\x45.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.SqlQueryRunList\x12\x17\n\x0fnext_page_token\x18\x02 \x01(\t\"\x1b\n\x19\x43reateSqlQueryRunResponse\"r\n\x18\x43reateSqlQueryRunRequest\x12V\n\x0bsqlqueryrun\x18\x01 \x01(\x0b\x32\x41.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.SqlQueryRun\"\xa2\x01\n\x18UpdateSqlQueryRunRequest\x12V\n\x0bsqlqueryrun\x18\x01 \x01(\x0b\x32\x41.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.SqlQueryRun\x12.\n\nfield_mask\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.FieldMask\"\x1b\n\x19UpdateSqlQueryRunResponse\"8\n\x15GetSqlQueryRunRequest\x12\x11\n\tnamespace\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\"~\n\x16GetSqlQueryRunResponse\x12V\n\x0bsqlqueryrun\x18\x01 \x01(\x0b\x32\x41.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.SqlQueryRun\x12\x0c\n\x04yaml\x18\x02 \x01(\t\";\n\x18\x44\x65leteSqlQueryRunRequest\x12\x11\n\tnamespace\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\"\x1b\n\x19\x44\x65leteSqlQueryRunResponse\"o\n\x15RunSqlQueryRunRequest\x12V\n\x0bsqlqueryrun\x18\x01 \x01(\x0b\x32\x41.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.SqlQueryRun\"\x18\n\x16RunSqlQueryRunResponse2\xa8\x0b\n\x12SqlQueryRunService\x12\xda\x01\n\x11ListSqlQuerieRuns\x12N.github.com.metaprov.modelaapi.services.sqlqueryrun.v1.ListSqlQueryRunsRequest\x1aO.github.com.metaprov.modelaapi.services.sqlqueryrun.v1.ListSqlQueryRunsResponse\"$\x82\xd3\xe4\x93\x02\x1e\x12\x1c/v1/sqlqueryruns/{namespace}\x12\xd3\x01\n\x11\x43reateSqlQueryRun\x12O.github.com.metaprov.modelaapi.services.sqlqueryrun.v1.CreateSqlQueryRunRequest\x1aP.github.com.metaprov.modelaapi.services.sqlqueryrun.v1.CreateSqlQueryRunResponse\"\x1b\x82\xd3\xe4\x93\x02\x15\"\x10/v1/sqlqueryruns:\x01*\x12\xda\x01\n\x0eGetSqlQueryRun\x12L.github.com.metaprov.modelaapi.services.sqlqueryrun.v1.GetSqlQueryRunRequest\x1aM.github.com.metaprov.modelaapi.services.sqlqueryrun.v1.GetSqlQueryRunResponse\"+\x82\xd3\xe4\x93\x02%\x12#/v1/sqlqueryruns/{namespace}/{name}\x12\x90\x02\n\x11UpdateSqlQueryRun\x12O.github.com.metaprov.modelaapi.services.sqlqueryrun.v1.UpdateSqlQueryRunRequest\x1aP.github.com.metaprov.modelaapi.services.sqlqueryrun.v1.UpdateSqlQueryRunResponse\"X\x82\xd3\xe4\x93\x02R\x1aM/v1/sqlqueryruns/{sqlqueryrun.metadata.namespace}/{sqlqueryrun.metadata.name}:\x01*\x12\xe3\x01\n\x11\x44\x65leteSqlQueryRun\x12O.github.com.metaprov.modelaapi.services.sqlqueryrun.v1.DeleteSqlQueryRunRequest\x1aP.github.com.metaprov.modelaapi.services.sqlqueryrun.v1.DeleteSqlQueryRunResponse\"+\x82\xd3\xe4\x93\x02%*#/v1/sqlqueryruns/{namespace}/{name}\x12\x88\x02\n\x0eRunSqlQueryRun\x12L.github.com.metaprov.modelaapi.services.sqlqueryrun.v1.RunSqlQueryRunRequest\x1aM.github.com.metaprov.modelaapi.services.sqlqueryrun.v1.RunSqlQueryRunResponse\"Y\x82\xd3\xe4\x93\x02S\"Q/v1/sqlqueryruns/{sqlqueryrun.metadata.namespace}/{sqlqueryrun.metadata.name}:runB7Z5github.com/metaprov/modelaapi/services/sqlqueryrun/v1b\x06proto3')



_LISTSQLQUERYRUNSREQUEST = DESCRIPTOR.message_types_by_name['ListSqlQueryRunsRequest']
_LISTSQLQUERYRUNSREQUEST_LABELSENTRY = _LISTSQLQUERYRUNSREQUEST.nested_types_by_name['LabelsEntry']
_LISTSQLQUERYRUNSRESPONSE = DESCRIPTOR.message_types_by_name['ListSqlQueryRunsResponse']
_CREATESQLQUERYRUNRESPONSE = DESCRIPTOR.message_types_by_name['CreateSqlQueryRunResponse']
_CREATESQLQUERYRUNREQUEST = DESCRIPTOR.message_types_by_name['CreateSqlQueryRunRequest']
_UPDATESQLQUERYRUNREQUEST = DESCRIPTOR.message_types_by_name['UpdateSqlQueryRunRequest']
_UPDATESQLQUERYRUNRESPONSE = DESCRIPTOR.message_types_by_name['UpdateSqlQueryRunResponse']
_GETSQLQUERYRUNREQUEST = DESCRIPTOR.message_types_by_name['GetSqlQueryRunRequest']
_GETSQLQUERYRUNRESPONSE = DESCRIPTOR.message_types_by_name['GetSqlQueryRunResponse']
_DELETESQLQUERYRUNREQUEST = DESCRIPTOR.message_types_by_name['DeleteSqlQueryRunRequest']
_DELETESQLQUERYRUNRESPONSE = DESCRIPTOR.message_types_by_name['DeleteSqlQueryRunResponse']
_RUNSQLQUERYRUNREQUEST = DESCRIPTOR.message_types_by_name['RunSqlQueryRunRequest']
_RUNSQLQUERYRUNRESPONSE = DESCRIPTOR.message_types_by_name['RunSqlQueryRunResponse']
ListSqlQueryRunsRequest = _reflection.GeneratedProtocolMessageType('ListSqlQueryRunsRequest', (_message.Message,), {

  'LabelsEntry' : _reflection.GeneratedProtocolMessageType('LabelsEntry', (_message.Message,), {
    'DESCRIPTOR' : _LISTSQLQUERYRUNSREQUEST_LABELSENTRY,
    '__module__' : 'github.com.metaprov.modelaapi.services.sqlqueryrun.v1.sqlqueryrun_pb2'
    # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.services.sqlqueryrun.v1.ListSqlQueryRunsRequest.LabelsEntry)
    })
  ,
  'DESCRIPTOR' : _LISTSQLQUERYRUNSREQUEST,
  '__module__' : 'github.com.metaprov.modelaapi.services.sqlqueryrun.v1.sqlqueryrun_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.services.sqlqueryrun.v1.ListSqlQueryRunsRequest)
  })
_sym_db.RegisterMessage(ListSqlQueryRunsRequest)
_sym_db.RegisterMessage(ListSqlQueryRunsRequest.LabelsEntry)

ListSqlQueryRunsResponse = _reflection.GeneratedProtocolMessageType('ListSqlQueryRunsResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTSQLQUERYRUNSRESPONSE,
  '__module__' : 'github.com.metaprov.modelaapi.services.sqlqueryrun.v1.sqlqueryrun_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.services.sqlqueryrun.v1.ListSqlQueryRunsResponse)
  })
_sym_db.RegisterMessage(ListSqlQueryRunsResponse)

CreateSqlQueryRunResponse = _reflection.GeneratedProtocolMessageType('CreateSqlQueryRunResponse', (_message.Message,), {
  'DESCRIPTOR' : _CREATESQLQUERYRUNRESPONSE,
  '__module__' : 'github.com.metaprov.modelaapi.services.sqlqueryrun.v1.sqlqueryrun_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.services.sqlqueryrun.v1.CreateSqlQueryRunResponse)
  })
_sym_db.RegisterMessage(CreateSqlQueryRunResponse)

CreateSqlQueryRunRequest = _reflection.GeneratedProtocolMessageType('CreateSqlQueryRunRequest', (_message.Message,), {
  'DESCRIPTOR' : _CREATESQLQUERYRUNREQUEST,
  '__module__' : 'github.com.metaprov.modelaapi.services.sqlqueryrun.v1.sqlqueryrun_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.services.sqlqueryrun.v1.CreateSqlQueryRunRequest)
  })
_sym_db.RegisterMessage(CreateSqlQueryRunRequest)

UpdateSqlQueryRunRequest = _reflection.GeneratedProtocolMessageType('UpdateSqlQueryRunRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATESQLQUERYRUNREQUEST,
  '__module__' : 'github.com.metaprov.modelaapi.services.sqlqueryrun.v1.sqlqueryrun_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.services.sqlqueryrun.v1.UpdateSqlQueryRunRequest)
  })
_sym_db.RegisterMessage(UpdateSqlQueryRunRequest)

UpdateSqlQueryRunResponse = _reflection.GeneratedProtocolMessageType('UpdateSqlQueryRunResponse', (_message.Message,), {
  'DESCRIPTOR' : _UPDATESQLQUERYRUNRESPONSE,
  '__module__' : 'github.com.metaprov.modelaapi.services.sqlqueryrun.v1.sqlqueryrun_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.services.sqlqueryrun.v1.UpdateSqlQueryRunResponse)
  })
_sym_db.RegisterMessage(UpdateSqlQueryRunResponse)

GetSqlQueryRunRequest = _reflection.GeneratedProtocolMessageType('GetSqlQueryRunRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETSQLQUERYRUNREQUEST,
  '__module__' : 'github.com.metaprov.modelaapi.services.sqlqueryrun.v1.sqlqueryrun_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.services.sqlqueryrun.v1.GetSqlQueryRunRequest)
  })
_sym_db.RegisterMessage(GetSqlQueryRunRequest)

GetSqlQueryRunResponse = _reflection.GeneratedProtocolMessageType('GetSqlQueryRunResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETSQLQUERYRUNRESPONSE,
  '__module__' : 'github.com.metaprov.modelaapi.services.sqlqueryrun.v1.sqlqueryrun_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.services.sqlqueryrun.v1.GetSqlQueryRunResponse)
  })
_sym_db.RegisterMessage(GetSqlQueryRunResponse)

DeleteSqlQueryRunRequest = _reflection.GeneratedProtocolMessageType('DeleteSqlQueryRunRequest', (_message.Message,), {
  'DESCRIPTOR' : _DELETESQLQUERYRUNREQUEST,
  '__module__' : 'github.com.metaprov.modelaapi.services.sqlqueryrun.v1.sqlqueryrun_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.services.sqlqueryrun.v1.DeleteSqlQueryRunRequest)
  })
_sym_db.RegisterMessage(DeleteSqlQueryRunRequest)

DeleteSqlQueryRunResponse = _reflection.GeneratedProtocolMessageType('DeleteSqlQueryRunResponse', (_message.Message,), {
  'DESCRIPTOR' : _DELETESQLQUERYRUNRESPONSE,
  '__module__' : 'github.com.metaprov.modelaapi.services.sqlqueryrun.v1.sqlqueryrun_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.services.sqlqueryrun.v1.DeleteSqlQueryRunResponse)
  })
_sym_db.RegisterMessage(DeleteSqlQueryRunResponse)

RunSqlQueryRunRequest = _reflection.GeneratedProtocolMessageType('RunSqlQueryRunRequest', (_message.Message,), {
  'DESCRIPTOR' : _RUNSQLQUERYRUNREQUEST,
  '__module__' : 'github.com.metaprov.modelaapi.services.sqlqueryrun.v1.sqlqueryrun_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.services.sqlqueryrun.v1.RunSqlQueryRunRequest)
  })
_sym_db.RegisterMessage(RunSqlQueryRunRequest)

RunSqlQueryRunResponse = _reflection.GeneratedProtocolMessageType('RunSqlQueryRunResponse', (_message.Message,), {
  'DESCRIPTOR' : _RUNSQLQUERYRUNRESPONSE,
  '__module__' : 'github.com.metaprov.modelaapi.services.sqlqueryrun.v1.sqlqueryrun_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.services.sqlqueryrun.v1.RunSqlQueryRunResponse)
  })
_sym_db.RegisterMessage(RunSqlQueryRunResponse)

_SQLQUERYRUNSERVICE = DESCRIPTOR.services_by_name['SqlQueryRunService']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z5github.com/metaprov/modelaapi/services/sqlqueryrun/v1'
  _LISTSQLQUERYRUNSREQUEST_LABELSENTRY._options = None
  _LISTSQLQUERYRUNSREQUEST_LABELSENTRY._serialized_options = b'8\001'
  _SQLQUERYRUNSERVICE.methods_by_name['ListSqlQuerieRuns']._options = None
  _SQLQUERYRUNSERVICE.methods_by_name['ListSqlQuerieRuns']._serialized_options = b'\202\323\344\223\002\036\022\034/v1/sqlqueryruns/{namespace}'
  _SQLQUERYRUNSERVICE.methods_by_name['CreateSqlQueryRun']._options = None
  _SQLQUERYRUNSERVICE.methods_by_name['CreateSqlQueryRun']._serialized_options = b'\202\323\344\223\002\025\"\020/v1/sqlqueryruns:\001*'
  _SQLQUERYRUNSERVICE.methods_by_name['GetSqlQueryRun']._options = None
  _SQLQUERYRUNSERVICE.methods_by_name['GetSqlQueryRun']._serialized_options = b'\202\323\344\223\002%\022#/v1/sqlqueryruns/{namespace}/{name}'
  _SQLQUERYRUNSERVICE.methods_by_name['UpdateSqlQueryRun']._options = None
  _SQLQUERYRUNSERVICE.methods_by_name['UpdateSqlQueryRun']._serialized_options = b'\202\323\344\223\002R\032M/v1/sqlqueryruns/{sqlqueryrun.metadata.namespace}/{sqlqueryrun.metadata.name}:\001*'
  _SQLQUERYRUNSERVICE.methods_by_name['DeleteSqlQueryRun']._options = None
  _SQLQUERYRUNSERVICE.methods_by_name['DeleteSqlQueryRun']._serialized_options = b'\202\323\344\223\002%*#/v1/sqlqueryruns/{namespace}/{name}'
  _SQLQUERYRUNSERVICE.methods_by_name['RunSqlQueryRun']._options = None
  _SQLQUERYRUNSERVICE.methods_by_name['RunSqlQueryRun']._serialized_options = b'\202\323\344\223\002S\"Q/v1/sqlqueryruns/{sqlqueryrun.metadata.namespace}/{sqlqueryrun.metadata.name}:run'
  _LISTSQLQUERYRUNSREQUEST._serialized_start=265
  _LISTSQLQUERYRUNSREQUEST._serialized_end=478
  _LISTSQLQUERYRUNSREQUEST_LABELSENTRY._serialized_start=433
  _LISTSQLQUERYRUNSREQUEST_LABELSENTRY._serialized_end=478
  _LISTSQLQUERYRUNSRESPONSE._serialized_start=481
  _LISTSQLQUERYRUNSRESPONSE._serialized_end=625
  _CREATESQLQUERYRUNRESPONSE._serialized_start=627
  _CREATESQLQUERYRUNRESPONSE._serialized_end=654
  _CREATESQLQUERYRUNREQUEST._serialized_start=656
  _CREATESQLQUERYRUNREQUEST._serialized_end=770
  _UPDATESQLQUERYRUNREQUEST._serialized_start=773
  _UPDATESQLQUERYRUNREQUEST._serialized_end=935
  _UPDATESQLQUERYRUNRESPONSE._serialized_start=937
  _UPDATESQLQUERYRUNRESPONSE._serialized_end=964
  _GETSQLQUERYRUNREQUEST._serialized_start=966
  _GETSQLQUERYRUNREQUEST._serialized_end=1022
  _GETSQLQUERYRUNRESPONSE._serialized_start=1024
  _GETSQLQUERYRUNRESPONSE._serialized_end=1150
  _DELETESQLQUERYRUNREQUEST._serialized_start=1152
  _DELETESQLQUERYRUNREQUEST._serialized_end=1211
  _DELETESQLQUERYRUNRESPONSE._serialized_start=1213
  _DELETESQLQUERYRUNRESPONSE._serialized_end=1240
  _RUNSQLQUERYRUNREQUEST._serialized_start=1242
  _RUNSQLQUERYRUNREQUEST._serialized_end=1353
  _RUNSQLQUERYRUNRESPONSE._serialized_start=1355
  _RUNSQLQUERYRUNRESPONSE._serialized_end=1379
  _SQLQUERYRUNSERVICE._serialized_start=1382
  _SQLQUERYRUNSERVICE._serialized_end=2830
# @@protoc_insertion_point(module_scope)
