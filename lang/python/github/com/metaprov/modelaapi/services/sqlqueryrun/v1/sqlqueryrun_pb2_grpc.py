# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from github.com.metaprov.modelaapi.services.sqlqueryrun.v1 import sqlqueryrun_pb2 as github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2


class SqlQueryRunServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListSqlQuerieRuns = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.sqlqueryrun.v1.SqlQueryRunService/ListSqlQuerieRuns',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.ListSqlQueryRunsRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.ListSqlQueryRunsResponse.FromString,
                )
        self.CreateSqlQueryRun = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.sqlqueryrun.v1.SqlQueryRunService/CreateSqlQueryRun',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.CreateSqlQueryRunRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.CreateSqlQueryRunResponse.FromString,
                )
        self.GetSqlQueryRun = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.sqlqueryrun.v1.SqlQueryRunService/GetSqlQueryRun',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.GetSqlQueryRunRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.GetSqlQueryRunResponse.FromString,
                )
        self.UpdateSqlQueryRun = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.sqlqueryrun.v1.SqlQueryRunService/UpdateSqlQueryRun',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.UpdateSqlQueryRunRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.UpdateSqlQueryRunResponse.FromString,
                )
        self.DeleteSqlQueryRun = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.sqlqueryrun.v1.SqlQueryRunService/DeleteSqlQueryRun',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.DeleteSqlQueryRunRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.DeleteSqlQueryRunResponse.FromString,
                )
        self.RunSqlQueryRun = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.sqlqueryrun.v1.SqlQueryRunService/RunSqlQueryRun',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.RunSqlQueryRunRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.RunSqlQueryRunResponse.FromString,
                )


class SqlQueryRunServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListSqlQuerieRuns(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSqlQueryRun(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSqlQueryRun(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSqlQueryRun(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteSqlQueryRun(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunSqlQueryRun(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SqlQueryRunServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListSqlQuerieRuns': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSqlQuerieRuns,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.ListSqlQueryRunsRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.ListSqlQueryRunsResponse.SerializeToString,
            ),
            'CreateSqlQueryRun': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSqlQueryRun,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.CreateSqlQueryRunRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.CreateSqlQueryRunResponse.SerializeToString,
            ),
            'GetSqlQueryRun': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSqlQueryRun,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.GetSqlQueryRunRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.GetSqlQueryRunResponse.SerializeToString,
            ),
            'UpdateSqlQueryRun': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSqlQueryRun,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.UpdateSqlQueryRunRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.UpdateSqlQueryRunResponse.SerializeToString,
            ),
            'DeleteSqlQueryRun': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteSqlQueryRun,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.DeleteSqlQueryRunRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.DeleteSqlQueryRunResponse.SerializeToString,
            ),
            'RunSqlQueryRun': grpc.unary_unary_rpc_method_handler(
                    servicer.RunSqlQueryRun,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.RunSqlQueryRunRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.RunSqlQueryRunResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'github.com.metaprov.modelaapi.services.sqlqueryrun.v1.SqlQueryRunService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SqlQueryRunService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListSqlQuerieRuns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.sqlqueryrun.v1.SqlQueryRunService/ListSqlQuerieRuns',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.ListSqlQueryRunsRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.ListSqlQueryRunsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateSqlQueryRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.sqlqueryrun.v1.SqlQueryRunService/CreateSqlQueryRun',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.CreateSqlQueryRunRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.CreateSqlQueryRunResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSqlQueryRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.sqlqueryrun.v1.SqlQueryRunService/GetSqlQueryRun',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.GetSqlQueryRunRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.GetSqlQueryRunResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateSqlQueryRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.sqlqueryrun.v1.SqlQueryRunService/UpdateSqlQueryRun',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.UpdateSqlQueryRunRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.UpdateSqlQueryRunResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteSqlQueryRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.sqlqueryrun.v1.SqlQueryRunService/DeleteSqlQueryRun',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.DeleteSqlQueryRunRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.DeleteSqlQueryRunResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RunSqlQueryRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.sqlqueryrun.v1.SqlQueryRunService/RunSqlQueryRun',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.RunSqlQueryRunRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_sqlqueryrun_dot_v1_dot_sqlqueryrun__pb2.RunSqlQueryRunResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
