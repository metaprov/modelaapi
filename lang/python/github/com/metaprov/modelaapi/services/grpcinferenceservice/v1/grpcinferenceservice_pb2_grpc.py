# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from github.com.metaprov.modelaapi.services.grpcinferenceservice.v1 import grpcinferenceservice_pb2 as github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2

GRPC_GENERATED_VERSION = '1.65.4'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.66.0'
SCHEDULED_RELEASE_DATE = 'August 6, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in github.com/metaprov/modelaapi/services/grpcinferenceservice/v1/grpcinferenceservice_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class GRPCInferenceServiceStub(object):
    """====================================== kf serving definitions ==================================

    Inference Server GRPC endpoints.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ServerLive = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.grpcinferenceservice.v1.GRPCInferenceService/ServerLive',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ServerLiveRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ServerLiveResponse.FromString,
                _registered_method=True)
        self.ServerReady = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.grpcinferenceservice.v1.GRPCInferenceService/ServerReady',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ServerReadyRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ServerReadyResponse.FromString,
                _registered_method=True)
        self.ModelReady = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.grpcinferenceservice.v1.GRPCInferenceService/ModelReady',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ModelReadyRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ModelReadyResponse.FromString,
                _registered_method=True)
        self.ServerMetadata = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.grpcinferenceservice.v1.GRPCInferenceService/ServerMetadata',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ServerMetadataRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ServerMetadataResponse.FromString,
                _registered_method=True)
        self.ModelMetadata = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.grpcinferenceservice.v1.GRPCInferenceService/ModelMetadata',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ModelMetadataRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ModelMetadataResponse.FromString,
                _registered_method=True)
        self.ModelInfer = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.grpcinferenceservice.v1.GRPCInferenceService/ModelInfer',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ModelInferRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ModelInferResponse.FromString,
                _registered_method=True)
        self.GetPredictor = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.grpcinferenceservice.v1.GRPCInferenceService/GetPredictor',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.GetPredictorRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.GetPredictorResponse.FromString,
                _registered_method=True)
        self.GetModel = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.grpcinferenceservice.v1.GRPCInferenceService/GetModel',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.GetModelRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.GetModelResponse.FromString,
                _registered_method=True)
        self.Predict = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.grpcinferenceservice.v1.GRPCInferenceService/Predict',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.PredictRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.PredictResponse.FromString,
                _registered_method=True)
        self.Shutdown = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.grpcinferenceservice.v1.GRPCInferenceService/Shutdown',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ServerShutdownRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ServerShutdownResponse.FromString,
                _registered_method=True)


class GRPCInferenceServiceServicer(object):
    """====================================== kf serving definitions ==================================

    Inference Server GRPC endpoints.
    """

    def ServerLive(self, request, context):
        """The ServerLive API indicates if the inference server is able to receive
        and respond to metadata and inference requests.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ServerReady(self, request, context):
        """The ServerReady API indicates if the server is ready for inferencing.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ModelReady(self, request, context):
        """The ModelReady API indicates if a specific model is ready for inferencing.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ServerMetadata(self, request, context):
        """The ServerMetadata API provides information about the server. Errors are
        indicated by the google.rpc.Status returned for the request. The OK code
        indicates success and other codes indicate failure.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ModelMetadata(self, request, context):
        """The per-model metadata API provides information about a model. Errors are
        indicated by the google.rpc.Status returned for the request. The OK code
        indicates success and other codes indicate failure.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ModelInfer(self, request, context):
        """The ModelInfer API performs inference using the specified model. Errors are
        indicated by the google.rpc.Status returned for the request. The OK code
        indicates success and other codes indicate failure.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPredictor(self, request, context):
        """Extention to the api specific to modela
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Predict(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Shutdown(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GRPCInferenceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ServerLive': grpc.unary_unary_rpc_method_handler(
                    servicer.ServerLive,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ServerLiveRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ServerLiveResponse.SerializeToString,
            ),
            'ServerReady': grpc.unary_unary_rpc_method_handler(
                    servicer.ServerReady,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ServerReadyRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ServerReadyResponse.SerializeToString,
            ),
            'ModelReady': grpc.unary_unary_rpc_method_handler(
                    servicer.ModelReady,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ModelReadyRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ModelReadyResponse.SerializeToString,
            ),
            'ServerMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.ServerMetadata,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ServerMetadataRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ServerMetadataResponse.SerializeToString,
            ),
            'ModelMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.ModelMetadata,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ModelMetadataRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ModelMetadataResponse.SerializeToString,
            ),
            'ModelInfer': grpc.unary_unary_rpc_method_handler(
                    servicer.ModelInfer,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ModelInferRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ModelInferResponse.SerializeToString,
            ),
            'GetPredictor': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPredictor,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.GetPredictorRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.GetPredictorResponse.SerializeToString,
            ),
            'GetModel': grpc.unary_unary_rpc_method_handler(
                    servicer.GetModel,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.GetModelRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.GetModelResponse.SerializeToString,
            ),
            'Predict': grpc.unary_unary_rpc_method_handler(
                    servicer.Predict,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.PredictRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.PredictResponse.SerializeToString,
            ),
            'Shutdown': grpc.unary_unary_rpc_method_handler(
                    servicer.Shutdown,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ServerShutdownRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ServerShutdownResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'github.com.metaprov.modelaapi.services.grpcinferenceservice.v1.GRPCInferenceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('github.com.metaprov.modelaapi.services.grpcinferenceservice.v1.GRPCInferenceService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class GRPCInferenceService(object):
    """====================================== kf serving definitions ==================================

    Inference Server GRPC endpoints.
    """

    @staticmethod
    def ServerLive(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/github.com.metaprov.modelaapi.services.grpcinferenceservice.v1.GRPCInferenceService/ServerLive',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ServerLiveRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ServerLiveResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ServerReady(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/github.com.metaprov.modelaapi.services.grpcinferenceservice.v1.GRPCInferenceService/ServerReady',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ServerReadyRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ServerReadyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ModelReady(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/github.com.metaprov.modelaapi.services.grpcinferenceservice.v1.GRPCInferenceService/ModelReady',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ModelReadyRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ModelReadyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ServerMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/github.com.metaprov.modelaapi.services.grpcinferenceservice.v1.GRPCInferenceService/ServerMetadata',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ServerMetadataRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ServerMetadataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ModelMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/github.com.metaprov.modelaapi.services.grpcinferenceservice.v1.GRPCInferenceService/ModelMetadata',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ModelMetadataRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ModelMetadataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ModelInfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/github.com.metaprov.modelaapi.services.grpcinferenceservice.v1.GRPCInferenceService/ModelInfer',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ModelInferRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ModelInferResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPredictor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/github.com.metaprov.modelaapi.services.grpcinferenceservice.v1.GRPCInferenceService/GetPredictor',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.GetPredictorRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.GetPredictorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/github.com.metaprov.modelaapi.services.grpcinferenceservice.v1.GRPCInferenceService/GetModel',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.GetModelRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.GetModelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Predict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/github.com.metaprov.modelaapi.services.grpcinferenceservice.v1.GRPCInferenceService/Predict',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.PredictRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.PredictResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Shutdown(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/github.com.metaprov.modelaapi.services.grpcinferenceservice.v1.GRPCInferenceService/Shutdown',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ServerShutdownRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_grpcinferenceservice_dot_v1_dot_grpcinferenceservice__pb2.ServerShutdownResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
