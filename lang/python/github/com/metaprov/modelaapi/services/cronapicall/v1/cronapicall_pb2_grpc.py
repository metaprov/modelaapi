# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from github.com.metaprov.modelaapi.services.cronapicall.v1 import cronapicall_pb2 as github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2


class CronApiCallServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListCronApiCalls = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.cronapicall.v1.CronApiCallService/ListCronApiCalls',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.ListCronApiCallsRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.ListCronApiCallsResponse.FromString,
                )
        self.CreateCronApiCall = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.cronapicall.v1.CronApiCallService/CreateCronApiCall',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.CreateCronApiCallRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.CreateCronApiCallResponse.FromString,
                )
        self.GetCronApiCall = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.cronapicall.v1.CronApiCallService/GetCronApiCall',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.GetCronApiCallRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.GetCronApiCallResponse.FromString,
                )
        self.UpdateCronApiCall = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.cronapicall.v1.CronApiCallService/UpdateCronApiCall',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.UpdateCronApiCallRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.UpdateCronApiCallResponse.FromString,
                )
        self.DeleteCronApiCall = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.cronapicall.v1.CronApiCallService/DeleteCronApiCall',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.DeleteCronApiCallRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.DeleteCronApiCallResponse.FromString,
                )
        self.PauseCronApiCall = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.cronapicall.v1.CronApiCallService/PauseCronApiCall',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.PauseCronApiCallRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.PauseCronApiCallResponse.FromString,
                )
        self.ResumeCronApiCall = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.cronapicall.v1.CronApiCallService/ResumeCronApiCall',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.ResumeCronApiCallRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.ResumeCronApiCallResponse.FromString,
                )
        self.RunPrediction = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.cronapicall.v1.CronApiCallService/RunPrediction',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.RunCronApiCallRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.RunCronApiCallResponse.FromString,
                )


class CronApiCallServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListCronApiCalls(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCronApiCall(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCronApiCall(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCronApiCall(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCronApiCall(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PauseCronApiCall(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResumeCronApiCall(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunPrediction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CronApiCallServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListCronApiCalls': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCronApiCalls,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.ListCronApiCallsRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.ListCronApiCallsResponse.SerializeToString,
            ),
            'CreateCronApiCall': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCronApiCall,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.CreateCronApiCallRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.CreateCronApiCallResponse.SerializeToString,
            ),
            'GetCronApiCall': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCronApiCall,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.GetCronApiCallRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.GetCronApiCallResponse.SerializeToString,
            ),
            'UpdateCronApiCall': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCronApiCall,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.UpdateCronApiCallRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.UpdateCronApiCallResponse.SerializeToString,
            ),
            'DeleteCronApiCall': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCronApiCall,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.DeleteCronApiCallRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.DeleteCronApiCallResponse.SerializeToString,
            ),
            'PauseCronApiCall': grpc.unary_unary_rpc_method_handler(
                    servicer.PauseCronApiCall,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.PauseCronApiCallRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.PauseCronApiCallResponse.SerializeToString,
            ),
            'ResumeCronApiCall': grpc.unary_unary_rpc_method_handler(
                    servicer.ResumeCronApiCall,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.ResumeCronApiCallRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.ResumeCronApiCallResponse.SerializeToString,
            ),
            'RunPrediction': grpc.unary_unary_rpc_method_handler(
                    servicer.RunPrediction,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.RunCronApiCallRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.RunCronApiCallResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'github.com.metaprov.modelaapi.services.cronapicall.v1.CronApiCallService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CronApiCallService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListCronApiCalls(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.cronapicall.v1.CronApiCallService/ListCronApiCalls',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.ListCronApiCallsRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.ListCronApiCallsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateCronApiCall(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.cronapicall.v1.CronApiCallService/CreateCronApiCall',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.CreateCronApiCallRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.CreateCronApiCallResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCronApiCall(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.cronapicall.v1.CronApiCallService/GetCronApiCall',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.GetCronApiCallRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.GetCronApiCallResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCronApiCall(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.cronapicall.v1.CronApiCallService/UpdateCronApiCall',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.UpdateCronApiCallRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.UpdateCronApiCallResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteCronApiCall(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.cronapicall.v1.CronApiCallService/DeleteCronApiCall',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.DeleteCronApiCallRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.DeleteCronApiCallResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PauseCronApiCall(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.cronapicall.v1.CronApiCallService/PauseCronApiCall',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.PauseCronApiCallRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.PauseCronApiCallResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResumeCronApiCall(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.cronapicall.v1.CronApiCallService/ResumeCronApiCall',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.ResumeCronApiCallRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.ResumeCronApiCallResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RunPrediction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.cronapicall.v1.CronApiCallService/RunPrediction',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.RunCronApiCallRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronapicall_dot_v1_dot_cronapicall__pb2.RunCronApiCallResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
