# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from github.com.metaprov.modelaapi.services.cronwebrequest.v1 import cronwebrequest_pb2 as github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2


class CronWebRequestServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListCronWebRequests = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.cronwebrequest.v1.CronWebRequestService/ListCronWebRequests',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.ListCronWebRequestsRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.ListCronWebRequestsResponse.FromString,
                )
        self.CreateCronWebRequest = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.cronwebrequest.v1.CronWebRequestService/CreateCronWebRequest',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.CreateCronWebRequestRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.CreateCronWebRequestResponse.FromString,
                )
        self.GetCronWebRequest = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.cronwebrequest.v1.CronWebRequestService/GetCronWebRequest',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.GetCronWebRequestRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.GetCronWebRequestResponse.FromString,
                )
        self.UpdateCronWebRequest = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.cronwebrequest.v1.CronWebRequestService/UpdateCronWebRequest',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.UpdateCronWebRequestRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.UpdateCronWebRequestResponse.FromString,
                )
        self.DeleteCronWebRequest = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.cronwebrequest.v1.CronWebRequestService/DeleteCronWebRequest',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.DeleteCronWebRequestRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.DeleteCronWebRequestResponse.FromString,
                )
        self.RunCronWebRequest = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.cronwebrequest.v1.CronWebRequestService/RunCronWebRequest',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.RunCronWebRequestRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.RunCronWebRequestResponse.FromString,
                )


class CronWebRequestServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListCronWebRequests(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCronWebRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCronWebRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCronWebRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCronWebRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunCronWebRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CronWebRequestServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListCronWebRequests': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCronWebRequests,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.ListCronWebRequestsRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.ListCronWebRequestsResponse.SerializeToString,
            ),
            'CreateCronWebRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCronWebRequest,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.CreateCronWebRequestRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.CreateCronWebRequestResponse.SerializeToString,
            ),
            'GetCronWebRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCronWebRequest,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.GetCronWebRequestRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.GetCronWebRequestResponse.SerializeToString,
            ),
            'UpdateCronWebRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCronWebRequest,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.UpdateCronWebRequestRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.UpdateCronWebRequestResponse.SerializeToString,
            ),
            'DeleteCronWebRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCronWebRequest,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.DeleteCronWebRequestRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.DeleteCronWebRequestResponse.SerializeToString,
            ),
            'RunCronWebRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.RunCronWebRequest,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.RunCronWebRequestRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.RunCronWebRequestResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'github.com.metaprov.modelaapi.services.cronwebrequest.v1.CronWebRequestService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CronWebRequestService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListCronWebRequests(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.cronwebrequest.v1.CronWebRequestService/ListCronWebRequests',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.ListCronWebRequestsRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.ListCronWebRequestsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateCronWebRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.cronwebrequest.v1.CronWebRequestService/CreateCronWebRequest',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.CreateCronWebRequestRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.CreateCronWebRequestResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCronWebRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.cronwebrequest.v1.CronWebRequestService/GetCronWebRequest',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.GetCronWebRequestRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.GetCronWebRequestResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCronWebRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.cronwebrequest.v1.CronWebRequestService/UpdateCronWebRequest',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.UpdateCronWebRequestRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.UpdateCronWebRequestResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteCronWebRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.cronwebrequest.v1.CronWebRequestService/DeleteCronWebRequest',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.DeleteCronWebRequestRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.DeleteCronWebRequestResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RunCronWebRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.cronwebrequest.v1.CronWebRequestService/RunCronWebRequest',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.RunCronWebRequestRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronwebrequest_dot_v1_dot_cronwebrequest__pb2.RunCronWebRequestResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
