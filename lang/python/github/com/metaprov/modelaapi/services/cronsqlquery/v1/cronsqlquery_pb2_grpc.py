# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from github.com.metaprov.modelaapi.services.cronsqlquery.v1 import cronsqlquery_pb2 as github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2


class CronSqlQueryServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListCronSqlQuerys = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.cronsqlquery.v1.CronSqlQueryService/ListCronSqlQuerys',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.ListCronSqlQuerysRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.ListCronSqlQuerysResponse.FromString,
                )
        self.CreateCronSqlQuery = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.cronsqlquery.v1.CronSqlQueryService/CreateCronSqlQuery',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.CreateCronSqlQueryRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.CreateCronSqlQueryResponse.FromString,
                )
        self.GetCronSqlQuery = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.cronsqlquery.v1.CronSqlQueryService/GetCronSqlQuery',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.GetCronSqlQueryRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.GetCronSqlQueryResponse.FromString,
                )
        self.UpdateCronSqlQuery = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.cronsqlquery.v1.CronSqlQueryService/UpdateCronSqlQuery',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.UpdateCronSqlQueryRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.UpdateCronSqlQueryResponse.FromString,
                )
        self.DeleteCronSqlQuery = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.cronsqlquery.v1.CronSqlQueryService/DeleteCronSqlQuery',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.DeleteCronSqlQueryRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.DeleteCronSqlQueryResponse.FromString,
                )
        self.RunCronSqlQuery = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.cronsqlquery.v1.CronSqlQueryService/RunCronSqlQuery',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.RunCronSqlQueryRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.RunCronSqlQueryResponse.FromString,
                )


class CronSqlQueryServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListCronSqlQuerys(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCronSqlQuery(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCronSqlQuery(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCronSqlQuery(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCronSqlQuery(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunCronSqlQuery(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CronSqlQueryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListCronSqlQuerys': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCronSqlQuerys,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.ListCronSqlQuerysRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.ListCronSqlQuerysResponse.SerializeToString,
            ),
            'CreateCronSqlQuery': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCronSqlQuery,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.CreateCronSqlQueryRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.CreateCronSqlQueryResponse.SerializeToString,
            ),
            'GetCronSqlQuery': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCronSqlQuery,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.GetCronSqlQueryRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.GetCronSqlQueryResponse.SerializeToString,
            ),
            'UpdateCronSqlQuery': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCronSqlQuery,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.UpdateCronSqlQueryRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.UpdateCronSqlQueryResponse.SerializeToString,
            ),
            'DeleteCronSqlQuery': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCronSqlQuery,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.DeleteCronSqlQueryRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.DeleteCronSqlQueryResponse.SerializeToString,
            ),
            'RunCronSqlQuery': grpc.unary_unary_rpc_method_handler(
                    servicer.RunCronSqlQuery,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.RunCronSqlQueryRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.RunCronSqlQueryResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'github.com.metaprov.modelaapi.services.cronsqlquery.v1.CronSqlQueryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CronSqlQueryService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListCronSqlQuerys(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.cronsqlquery.v1.CronSqlQueryService/ListCronSqlQuerys',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.ListCronSqlQuerysRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.ListCronSqlQuerysResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateCronSqlQuery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.cronsqlquery.v1.CronSqlQueryService/CreateCronSqlQuery',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.CreateCronSqlQueryRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.CreateCronSqlQueryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCronSqlQuery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.cronsqlquery.v1.CronSqlQueryService/GetCronSqlQuery',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.GetCronSqlQueryRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.GetCronSqlQueryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCronSqlQuery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.cronsqlquery.v1.CronSqlQueryService/UpdateCronSqlQuery',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.UpdateCronSqlQueryRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.UpdateCronSqlQueryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteCronSqlQuery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.cronsqlquery.v1.CronSqlQueryService/DeleteCronSqlQuery',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.DeleteCronSqlQueryRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.DeleteCronSqlQueryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RunCronSqlQuery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.cronsqlquery.v1.CronSqlQueryService/RunCronSqlQuery',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.RunCronSqlQueryRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_cronsqlquery_dot_v1_dot_cronsqlquery__pb2.RunCronSqlQueryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
