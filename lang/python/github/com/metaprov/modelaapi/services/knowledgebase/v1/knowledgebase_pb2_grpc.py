# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from github.com.metaprov.modelaapi.services.knowledgebase.v1 import knowledgebase_pb2 as github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2

GRPC_GENERATED_VERSION = '1.65.4'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.66.0'
SCHEDULED_RELEASE_DATE = 'August 6, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in github.com/metaprov/modelaapi/services/knowledgebase/v1/knowledgebase_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class KnowledgeBaseServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListKnowledgeBases = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/ListKnowledgeBases',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.ListKnowledgeBasesRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.ListKnowledgeBasesResponse.FromString,
                _registered_method=True)
        self.CreateKnowledgeBase = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/CreateKnowledgeBase',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.CreateKnowledgeBaseRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.CreateKnowledgeBaseResponse.FromString,
                _registered_method=True)
        self.GetKnowledgeBase = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/GetKnowledgeBase',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.GetKnowledgeBaseRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.GetKnowledgeBaseResponse.FromString,
                _registered_method=True)
        self.UpdateKnowledgeBase = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/UpdateKnowledgeBase',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.UpdateKnowledgeBaseRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.UpdateKnowledgeBaseResponse.FromString,
                _registered_method=True)
        self.DeleteKnowledgeBase = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/DeleteKnowledgeBase',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.DeleteKnowledgeBaseRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.DeleteKnowledgeBaseResponse.FromString,
                _registered_method=True)
        self.RefreshKnowledgeBase = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/RefreshKnowledgeBase',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.RefreshKnowledgeBaseRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.RefreshKnowledgeBaseResponse.FromString,
                _registered_method=True)


class KnowledgeBaseServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListKnowledgeBases(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateKnowledgeBase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetKnowledgeBase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateKnowledgeBase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteKnowledgeBase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RefreshKnowledgeBase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KnowledgeBaseServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListKnowledgeBases': grpc.unary_unary_rpc_method_handler(
                    servicer.ListKnowledgeBases,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.ListKnowledgeBasesRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.ListKnowledgeBasesResponse.SerializeToString,
            ),
            'CreateKnowledgeBase': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateKnowledgeBase,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.CreateKnowledgeBaseRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.CreateKnowledgeBaseResponse.SerializeToString,
            ),
            'GetKnowledgeBase': grpc.unary_unary_rpc_method_handler(
                    servicer.GetKnowledgeBase,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.GetKnowledgeBaseRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.GetKnowledgeBaseResponse.SerializeToString,
            ),
            'UpdateKnowledgeBase': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateKnowledgeBase,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.UpdateKnowledgeBaseRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.UpdateKnowledgeBaseResponse.SerializeToString,
            ),
            'DeleteKnowledgeBase': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteKnowledgeBase,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.DeleteKnowledgeBaseRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.DeleteKnowledgeBaseResponse.SerializeToString,
            ),
            'RefreshKnowledgeBase': grpc.unary_unary_rpc_method_handler(
                    servicer.RefreshKnowledgeBase,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.RefreshKnowledgeBaseRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.RefreshKnowledgeBaseResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class KnowledgeBaseService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListKnowledgeBases(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/ListKnowledgeBases',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.ListKnowledgeBasesRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.ListKnowledgeBasesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateKnowledgeBase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/CreateKnowledgeBase',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.CreateKnowledgeBaseRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.CreateKnowledgeBaseResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetKnowledgeBase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/GetKnowledgeBase',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.GetKnowledgeBaseRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.GetKnowledgeBaseResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateKnowledgeBase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/UpdateKnowledgeBase',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.UpdateKnowledgeBaseRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.UpdateKnowledgeBaseResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteKnowledgeBase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/DeleteKnowledgeBase',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.DeleteKnowledgeBaseRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.DeleteKnowledgeBaseResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RefreshKnowledgeBase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/RefreshKnowledgeBase',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.RefreshKnowledgeBaseRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.RefreshKnowledgeBaseResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
