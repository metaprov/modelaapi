# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from github.com.metaprov.modelaapi.services.knowledgebase.v1 import knowledgebase_pb2 as github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2


class KnowledgeBaseServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListKnowledgeBases = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/ListKnowledgeBases',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.ListKnowledgeBasesRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.ListKnowledgeBasesResponse.FromString,
                )
        self.CreateKnowledgeBase = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/CreateKnowledgeBase',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.CreateKnowledgeBaseRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.CreateKnowledgeBaseResponse.FromString,
                )
        self.GetKnowledgeBase = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/GetKnowledgeBase',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.GetKnowledgeBaseRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.GetKnowledgeBaseResponse.FromString,
                )
        self.UpdateKnowledgeBase = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/UpdateKnowledgeBase',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.UpdateKnowledgeBaseRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.UpdateKnowledgeBaseResponse.FromString,
                )
        self.DeleteKnowledgeBase = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/DeleteKnowledgeBase',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.DeleteKnowledgeBaseRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.DeleteKnowledgeBaseResponse.FromString,
                )
        self.Refresh = channel.unary_unary(
                '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/Refresh',
                request_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.RefreshKnowledgeBaseRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.RefreshKnowledgeBaseResponse.FromString,
                )


class KnowledgeBaseServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListKnowledgeBases(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateKnowledgeBase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetKnowledgeBase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateKnowledgeBase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteKnowledgeBase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Refresh(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KnowledgeBaseServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListKnowledgeBases': grpc.unary_unary_rpc_method_handler(
                    servicer.ListKnowledgeBases,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.ListKnowledgeBasesRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.ListKnowledgeBasesResponse.SerializeToString,
            ),
            'CreateKnowledgeBase': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateKnowledgeBase,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.CreateKnowledgeBaseRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.CreateKnowledgeBaseResponse.SerializeToString,
            ),
            'GetKnowledgeBase': grpc.unary_unary_rpc_method_handler(
                    servicer.GetKnowledgeBase,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.GetKnowledgeBaseRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.GetKnowledgeBaseResponse.SerializeToString,
            ),
            'UpdateKnowledgeBase': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateKnowledgeBase,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.UpdateKnowledgeBaseRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.UpdateKnowledgeBaseResponse.SerializeToString,
            ),
            'DeleteKnowledgeBase': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteKnowledgeBase,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.DeleteKnowledgeBaseRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.DeleteKnowledgeBaseResponse.SerializeToString,
            ),
            'Refresh': grpc.unary_unary_rpc_method_handler(
                    servicer.Refresh,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.RefreshKnowledgeBaseRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.RefreshKnowledgeBaseResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class KnowledgeBaseService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListKnowledgeBases(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/ListKnowledgeBases',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.ListKnowledgeBasesRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.ListKnowledgeBasesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateKnowledgeBase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/CreateKnowledgeBase',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.CreateKnowledgeBaseRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.CreateKnowledgeBaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetKnowledgeBase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/GetKnowledgeBase',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.GetKnowledgeBaseRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.GetKnowledgeBaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateKnowledgeBase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/UpdateKnowledgeBase',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.UpdateKnowledgeBaseRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.UpdateKnowledgeBaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteKnowledgeBase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/DeleteKnowledgeBase',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.DeleteKnowledgeBaseRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.DeleteKnowledgeBaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Refresh(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modelaapi.services.knowledgebase.v1.KnowledgeBaseService/Refresh',
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.RefreshKnowledgeBaseRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modelaapi_dot_services_dot_knowledgebase_dot_v1_dot_knowledgebase__pb2.RefreshKnowledgeBaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
