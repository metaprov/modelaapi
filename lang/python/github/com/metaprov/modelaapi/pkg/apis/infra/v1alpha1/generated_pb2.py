# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: github.com/metaprov/modelaapi/pkg/apis/infra/v1alpha1/generated.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1 import generated_pb2 as github_dot_com_dot_metaprov_dot_modelaapi_dot_pkg_dot_apis_dot_catalog_dot_v1alpha1_dot_generated__pb2
from k8s.io.api.core.v1 import generated_pb2 as k8s_dot_io_dot_api_dot_core_dot_v1_dot_generated__pb2
from k8s.io.apimachinery.pkg.api.resource import generated_pb2 as k8s_dot_io_dot_apimachinery_dot_pkg_dot_api_dot_resource_dot_generated__pb2
from k8s.io.apimachinery.pkg.apis.meta.v1 import generated_pb2 as k8s_dot_io_dot_apimachinery_dot_pkg_dot_apis_dot_meta_dot_v1_dot_generated__pb2
from k8s.io.apimachinery.pkg.runtime import generated_pb2 as k8s_dot_io_dot_apimachinery_dot_pkg_dot_runtime_dot_generated__pb2
from k8s.io.apimachinery.pkg.runtime.schema import generated_pb2 as k8s_dot_io_dot_apimachinery_dot_pkg_dot_runtime_dot_schema_dot_generated__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\nEgithub.com/metaprov/modelaapi/pkg/apis/infra/v1alpha1/generated.proto\x12\x35github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1\x1aGgithub.com/metaprov/modelaapi/pkg/apis/catalog/v1alpha1/generated.proto\x1a\"k8s.io/api/core/v1/generated.proto\x1a\x34k8s.io/apimachinery/pkg/api/resource/generated.proto\x1a\x34k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto\x1a/k8s.io/apimachinery/pkg/runtime/generated.proto\x1a\x36k8s.io/apimachinery/pkg/runtime/schema/generated.proto\"\xf5\x01\n\x07\x41\x63\x63ount\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12P\n\x04spec\x18\x02 \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec\x12T\n\x06status\x18\x03 \x01(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus\"\x99\x01\n\x10\x41\x63\x63ountCondition\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x46\n\x12lastTransitionTime\x18\x03 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x0e\n\x06reason\x18\x04 \x01(\t\x12\x0f\n\x07message\x18\x05 \x01(\t\"\x9e\x01\n\x0b\x41\x63\x63ountList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12M\n\x05items\x18\x02 \x03(\x0b\x32>.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account\"\x8a\x03\n\x0b\x41\x63\x63ountSpec\x12\x36\n\ttenantRef\x18\x01 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12\x0c\n\x04type\x18\x03 \x01(\t\x12\x10\n\x08username\x18\x04 \x01(\t\x12\x11\n\tfirstName\x18\x05 \x01(\t\x12\x10\n\x08lastName\x18\x06 \x01(\t\x12\r\n\x05\x65mail\x18\x07 \x01(\t\x12\r\n\x05phone\x18\x08 \x01(\t\x12\r\n\x05\x61\x64min\x18\t \x01(\x08\x12\x0c\n\x04team\x18\n \x01(\x08\x12\x10\n\x08memberOf\x18\x0b \x01(\t\x12\x15\n\remailPassword\x18\x0c \x01(\x08\x12\x15\n\rresetPassword\x18\r \x01(\x08\x12\x16\n\x0e\x63learenceLevel\x18\x11 \x01(\t\x12Q\n\x06\x61vatar\x18\x12 \x01(\x0b\x32\x41.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec\x12\x18\n\x10\x66\x61voriteProducts\x18\x13 \x03(\t\"\xf8\x01\n\rAccountStatus\x12?\n\x0blastUpdated\x18\x01 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x1a\n\x12observedGeneration\x18\x02 \x01(\x03\x12\x15\n\rfailureReason\x18\x03 \x01(\t\x12\x16\n\x0e\x66\x61ilureMessage\x18\x04 \x01(\t\x12[\n\nconditions\x18\x05 \x03(\x0b\x32G.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountCondition\"\xef\x01\n\x05\x41lert\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12N\n\x04spec\x18\x02 \x01(\x0b\x32@.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec\x12R\n\x06status\x18\x03 \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus\"\x97\x01\n\x0e\x41lertCondition\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x46\n\x12lastTransitionTime\x18\x03 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x0e\n\x06reason\x18\x04 \x01(\t\x12\x0f\n\x07message\x18\x05 \x01(\t\"\x9a\x01\n\tAlertList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12K\n\x05items\x18\x02 \x03(\x0b\x32<.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert\"\x87\x03\n\tAlertSpec\x12\x0f\n\x07subject\x18\x01 \x01(\t\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\r\n\x05level\x18\x03 \x01(\t\x12\x36\n\tentityRef\x18\x04 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12\x14\n\x0cnotifierName\x18\x05 \x01(\t\x12\r\n\x05owner\x18\x06 \x01(\t\x12\x0b\n\x03ttl\x18\x07 \x01(\x05\x12\\\n\x06\x66ields\x18\x08 \x03(\x0b\x32L.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.FieldsEntry\x12\x0b\n\x03url\x18\t \x01(\t\x12\r\n\x05image\x18\n \x01(\t\x12\x36\n\ttenantRef\x18\x0b \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x1a-\n\x0b\x46ieldsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xbb\x02\n\x0b\x41lertStatus\x12\r\n\x05phase\x18\x01 \x01(\t\x12\x36\n\x02\x61t\x18\x02 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x1a\n\x12observedGeneration\x18\x03 \x01(\x03\x12?\n\x0blastUpdated\x18\x04 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x15\n\rfailureReason\x18\x05 \x01(\t\x12\x16\n\x0e\x66\x61ilureMessage\x18\x06 \x01(\t\x12Y\n\nconditions\x18\x07 \x03(\x0b\x32\x45.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertCondition\"R\n\x0c\x41liCloudSpec\x12\x11\n\taccessKey\x18\x01 \x01(\t\x12\x11\n\tsecretKey\x18\x02 \x01(\t\x12\x0e\n\x06region\x18\x03 \x01(\t\x12\x0c\n\x04host\x18\x04 \x01(\t\"e\n\x10\x41mazonAthenaSpec\x12\x10\n\x08hostName\x18\x01 \x01(\t\x12\x10\n\x08username\x18\x02 \x01(\t\x12\x10\n\x08password\x18\x03 \x01(\t\x12\x0e\n\x06region\x18\x04 \x01(\t\x12\x0b\n\x03url\x18\x05 \x01(\t\"s\n\x12\x41mazonRedShiftSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08\x64\x61tabase\x18\x03 \x01(\t\x12\x10\n\x08username\x18\x04 \x01(\t\x12\x10\n\x08password\x18\x05 \x01(\t\x12\x0b\n\x03url\x18\x06 \x01(\t\"t\n\x13\x41pacheCassandraSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08keyspace\x18\x03 \x01(\t\x12\x10\n\x08username\x18\x04 \x01(\t\x12\x10\n\x08password\x18\x05 \x01(\t\x12\x0b\n\x03url\x18\x06 \x01(\t\"p\n\x0f\x41pacheDrillSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08keyspace\x18\x03 \x01(\t\x12\x10\n\x08username\x18\x04 \x01(\t\x12\x10\n\x08password\x18\x05 \x01(\t\x12\x0b\n\x03url\x18\x06 \x01(\t\"p\n\x0f\x41pacheDruidSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08keyspace\x18\x03 \x01(\t\x12\x10\n\x08username\x18\x04 \x01(\t\x12\x10\n\x08password\x18\x05 \x01(\t\x12\x0b\n\x03url\x18\x06 \x01(\t\"m\n\x0e\x41pacheHiveSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x0e\n\x06schema\x18\x03 \x01(\t\x12\x10\n\x08username\x18\x04 \x01(\t\x12\x10\n\x08password\x18\x05 \x01(\t\x12\x0b\n\x03url\x18\x06 \x01(\t\"n\n\x0f\x41pacheSparkSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x0e\n\x06schema\x18\x03 \x01(\t\x12\x10\n\x08username\x18\x04 \x01(\t\x12\x10\n\x08password\x18\x05 \x01(\t\x12\x0b\n\x03url\x18\x06 \x01(\t\"\xf8\x01\n\x08\x41piToken\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12Q\n\x04spec\x18\x02 \x01(\x0b\x32\x43.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApiTokenSpec\x12U\n\x06status\x18\x03 \x01(\x0b\x32\x45.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApiTokenStatus\"\x9a\x01\n\x11\x41piTokenCondition\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x46\n\x12lastTransitionTime\x18\x03 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x0e\n\x06reason\x18\x04 \x01(\t\x12\x0f\n\x07message\x18\x05 \x01(\t\"\xa0\x01\n\x0c\x41piTokenList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12N\n\x05items\x18\x02 \x03(\x0b\x32?.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApiToken\"\x80\x01\n\x0c\x41piTokenSpec\x12\x13\n\x0b\x64\x65scription\x18\x01 \x01(\t\x12L\n\x06scopes\x18\x02 \x03(\x0b\x32<.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope\x12\r\n\x05owner\x18\x03 \x01(\t\"\xcb\x01\n\x0e\x41piTokenStatus\x12\x1a\n\x12observedGeneration\x18\x01 \x01(\x03\x12?\n\x0blastUpdated\x18\x02 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\\\n\nconditions\x18\x03 \x03(\x0b\x32H.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApiTokenCondition\"\xfe\x01\n\nAttachment\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12S\n\x04spec\x18\x02 \x01(\x0b\x32\x45.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec\x12W\n\x06status\x18\x03 \x01(\x0b\x32G.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus\"\x9c\x01\n\x13\x41ttachmentCondition\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x46\n\x12lastTransitionTime\x18\x03 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x0e\n\x06reason\x18\x04 \x01(\t\x12\x0f\n\x07message\x18\x05 \x01(\t\"\xa4\x01\n\x0e\x41ttachmentList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12P\n\x05items\x18\x02 \x03(\x0b\x32\x41.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment\"\xc6\x01\n\x0e\x41ttachmentSpec\x12\r\n\x05owner\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\x36\n\tentityRef\x18\x03 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12\x12\n\nbucketName\x18\x04 \x01(\t\x12\x0c\n\x04path\x18\x05 \x01(\t\x12\x36\n\ttenantRef\x18\x06 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\"\xb6\x02\n\x10\x41ttachmentStatus\x12\x36\n\x02\x61t\x18\x02 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x1a\n\x12observedGeneration\x18\x03 \x01(\x03\x12?\n\x0blastUpdated\x18\x04 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x15\n\rfailureReason\x18\x05 \x01(\t\x12\x16\n\x0e\x66\x61ilureMessage\x18\x06 \x01(\t\x12^\n\nconditions\x18\x07 \x03(\x0b\x32J.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentCondition\".\n\nAvatarSpec\x12\x12\n\nbucketName\x18\x01 \x01(\t\x12\x0c\n\x04path\x18\x02 \x01(\t\"H\n\tAwsS3Spec\x12\x15\n\rdefaultRegion\x18\x01 \x01(\t\x12\x11\n\taccessKey\x18\x02 \x01(\t\x12\x11\n\tsecretKey\x18\x03 \x01(\t\"u\n\x14\x41zureSQLDatabaseSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08username\x18\x03 \x01(\t\x12\x10\n\x08password\x18\x04 \x01(\t\x12\x10\n\x08\x64\x61tabase\x18\x05 \x01(\t\x12\x0b\n\x03url\x18\x06 \x01(\t\"=\n\x10\x41zureStorageSpec\x12\x16\n\x0estorageAccount\x18\x01 \x01(\t\x12\x11\n\taccessKey\x18\x02 \x01(\t\"=\n\rBitbucketSpec\x12\r\n\x05token\x18\x01 \x01(\t\x12\x10\n\x08username\x18\x02 \x01(\t\x12\x0b\n\x03ssh\x18\x03 \x01(\t\"\x18\n\x07\x42oxSpec\x12\r\n\x05token\x18\x01 \x01(\t\"j\n\x14\x42ucketResourceQuotas\x12\x0f\n\x07\x65nabled\x18\x01 \x01(\x08\x12\x41\n\thardLimit\x18\x02 \x01(\x0b\x32..k8s.io.apimachinery.pkg.api.resource.Quantity\"o\n\x0e\x43lickHouseSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08\x64\x61tabase\x18\x03 \x01(\t\x12\x10\n\x08username\x18\x04 \x01(\t\x12\x10\n\x08password\x18\x05 \x01(\t\x12\x0b\n\x03url\x18\x06 \x01(\t\"p\n\x0f\x43ockroachDBSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08\x64\x61tabase\x18\x03 \x01(\t\x12\x10\n\x08username\x18\x04 \x01(\t\x12\x10\n\x08password\x18\x05 \x01(\t\x12\x0b\n\x03url\x18\x06 \x01(\t\"\xf2\x01\n\x06\x43ommit\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12O\n\x04spec\x18\x02 \x01(\x0b\x32\x41.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CommitSpec\x12S\n\x06status\x18\x03 \x01(\x0b\x32\x43.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CommitStatus\"\x98\x01\n\x0f\x43ommitCondition\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x46\n\x12lastTransitionTime\x18\x03 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x0e\n\x06reason\x18\x04 \x01(\t\x12\x0f\n\x07message\x18\x05 \x01(\t\"\x9c\x01\n\nCommitList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12L\n\x05items\x18\x02 \x03(\x0b\x32=.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Commit\"\x9c\x01\n\nCommitSpec\x12\x0f\n\x07message\x18\x01 \x01(\t\x12\x36\n\tentityRef\x18\x02 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12\r\n\x05owner\x18\x03 \x01(\t\x12\x36\n\ttenantRef\x18\x04 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\"\xbd\x02\n\x0c\x43ommitStatus\x12\r\n\x05phase\x18\x01 \x01(\t\x12\x36\n\x02\x61t\x18\x02 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x1a\n\x12observedGeneration\x18\x03 \x01(\x03\x12?\n\x0blastUpdated\x18\x04 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x15\n\rfailureReason\x18\x05 \x01(\t\x12\x16\n\x0e\x66\x61ilureMessage\x18\x06 \x01(\t\x12Z\n\nconditions\x18\x07 \x03(\x0b\x32\x46.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CommitCondition\"\xfe\x01\n\nConnection\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12S\n\x04spec\x18\x02 \x01(\x0b\x32\x45.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec\x12W\n\x06status\x18\x03 \x01(\x0b\x32G.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus\"\x9c\x01\n\x13\x43onnectionCondition\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x46\n\x12lastTransitionTime\x18\x04 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x0e\n\x06reason\x18\x05 \x01(\t\x12\x0f\n\x07message\x18\x06 \x01(\t\"\xa4\x01\n\x0e\x43onnectionList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12P\n\x05items\x18\x02 \x03(\x0b\x32\x41.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection\"\xa2/\n\x0e\x43onnectionSpec\x12\x36\n\ttenantRef\x18\x01 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12\x10\n\x08\x63\x61tegory\x18\x02 \x01(\t\x12\x10\n\x08provider\x18\x03 \x01(\t\x12\x36\n\tsecretRef\x18\x04 \x01(\x0b\x32#.k8s.io.api.core.v1.SecretReference\x12W\n\x06\x61thena\x18\x05 \x01(\x0b\x32G.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec\x12U\n\x05\x64rill\x18\x06 \x01(\x0b\x32\x46.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec\x12U\n\x05\x64ruid\x18\x07 \x01(\x0b\x32\x46.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec\x12S\n\x04hive\x18\x08 \x01(\x0b\x32\x45.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec\x12[\n\x08redshift\x18\t \x01(\x0b\x32I.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec\x12Q\n\x06\x64remio\x18\n \x01(\x0b\x32\x41.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec\x12K\n\x03\x64\x62\x32\x18\x0b \x01(\x0b\x32>.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec\x12X\n\x08\x62igquery\x18\x0c \x01(\x0b\x32\x46.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec\x12]\n\tcassandra\x18\r \x01(\x0b\x32J.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec\x12\x65\n\x10\x61zuresqldatabase\x18\x0e \x01(\x0b\x32K.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec\x12S\n\x07mongodb\x18\x0f \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec\x12O\n\x05mysql\x18\x10 \x01(\x0b\x32@.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec\x12M\n\x04odbc\x18\x11 \x01(\x0b\x32?.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec\x12Q\n\x06oracle\x18\x12 \x01(\x0b\x32\x41.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec\x12X\n\x08postgres\x18\x13 \x01(\x0b\x32\x46.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec\x12Q\n\x06presto\x18\x14 \x01(\x0b\x32\x41.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec\x12W\n\tsnowflake\x18\x16 \x01(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec\x12Q\n\x06sybase\x18\x17 \x01(\x0b\x32\x41.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec\x12S\n\x07vertica\x18\x18 \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec\x12[\n\x0b\x63ockroachdb\x18\x19 \x01(\x0b\x32\x46.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec\x12_\n\relasticsearch\x18\x1a \x01(\x0b\x32H.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec\x12U\n\x08informix\x18\x1b \x01(\x0b\x32\x43.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec\x12P\n\x04hana\x18\x1c \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec\x12U\n\x08teradata\x18\x1d \x01(\x0b\x32\x43.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec\x12V\n\x07spanner\x18\x1e \x01(\x0b\x32\x45.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec\x12U\n\x05spark\x18\x1f \x01(\x0b\x32\x46.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec\x12[\n\x0bmssqlserver\x18  \x01(\x0b\x32\x46.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec\x12Y\n\nclickhouse\x18! \x01(\x0b\x32\x45.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec\x12W\n\tgreenplum\x18\" \x01(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec\x12W\n\tcouchbase\x18# \x01(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec\x12Q\n\x06\x65xasol\x18$ \x01(\x0b\x32\x41.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec\x12Q\n\x06sqlite\x18% \x01(\x0b\x32\x41.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec\x12[\n\x0bsinglestore\x18& \x01(\x0b\x32\x46.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec\x12X\n\x07gsheets\x18\' \x01(\x0b\x32G.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec\x12]\n\x0c\x61zurestorage\x18( \x01(\x0b\x32G.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec\x12U\n\x08\x61licloud\x18) \x01(\x0b\x32\x43.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec\x12]\n\x0c\x64igitalocean\x18* \x01(\x0b\x32G.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec\x12S\n\x07hetzner\x18+ \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec\x12Y\n\ngcpstorage\x18- \x01(\x0b\x32\x45.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec\x12Q\n\x06linode\x18. \x01(\x0b\x32\x41.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec\x12O\n\x05minio\x18/ \x01(\x0b\x32@.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec\x12W\n\topenstack\x18\x30 \x01(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec\x12K\n\x03ovh\x18\x31 \x01(\x0b\x32>.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec\x12M\n\x03\x61ws\x18\x32 \x01(\x0b\x32@.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec\x12M\n\x04smtp\x18\x33 \x01(\x0b\x32?.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec\x12K\n\x03\x66tp\x18\x34 \x01(\x0b\x32>.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec\x12M\n\x04sftp\x18\x35 \x01(\x0b\x32?.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec\x12S\n\x07\x64ropbox\x18\x36 \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec\x12K\n\x03\x62ox\x18\x37 \x01(\x0b\x32>.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec\x12_\n\rimageRegistry\x18\x38 \x01(\x0b\x32H.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec\x12Q\n\x06github\x18\x39 \x01(\x0b\x32\x41.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec\x12Q\n\x06gitlab\x18: \x01(\x0b\x32\x41.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec\x12W\n\tbitbucket\x18; \x01(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec\x12O\n\x05slack\x18< \x01(\x0b\x32@.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec\x12Q\n\x06msteam\x18= \x01(\x0b\x32\x41.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec\x12Y\n\nmatterMost\x18> \x01(\x0b\x32\x45.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec\x12S\n\x07hipchat\x18? \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec\x12U\n\x08victorop\x18@ \x01(\x0b\x32\x43.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec\x12W\n\tpagerduty\x18\x41 \x01(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec\x12U\n\x08pushover\x18\x42 \x01(\x0b\x32\x43.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec\x12U\n\x08opsgenie\x18\x43 \x01(\x0b\x32\x43.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec\x12S\n\x07webhook\x18\x44 \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec\x12U\n\x08\x66\x61\x63\x65\x62ook\x18\x45 \x01(\x0b\x32\x43.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec\x12S\n\x07twitter\x18\x46 \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec\x12U\n\x08rabbitmq\x18G \x01(\x0b\x32\x43.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec\x12O\n\x05kafka\x18H \x01(\x0b\x32@.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec\x12O\n\x05neo4j\x18I \x01(\x0b\x32@.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec\x12S\n\x07\x64iscord\x18J \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec\x12\r\n\x05owner\x18P \x01(\t\"\xfe\x01\n\x10\x43onnectionStatus\x12\x1a\n\x12observedGeneration\x18\x01 \x01(\x03\x12?\n\x0blastUpdated\x18\x02 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x15\n\rfailureReason\x18\x03 \x01(\t\x12\x16\n\x0e\x66\x61ilureMessage\x18\x04 \x01(\t\x12^\n\nconditions\x18\x05 \x03(\x0b\x32J.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionCondition\"\x85\x01\n\rCouchbaseSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08\x64\x61tabase\x18\x03 \x01(\t\x12\x10\n\x08username\x18\x04 \x01(\t\x12\x10\n\x08password\x18\x05 \x01(\t\x12\x15\n\rdefaultBucket\x18\x06 \x01(\t\x12\x0b\n\x03url\x18\x07 \x01(\t\"h\n\x07\x44\x42\x32Spec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08keyspace\x18\x03 \x01(\t\x12\x10\n\x08username\x18\x04 \x01(\t\x12\x10\n\x08password\x18\x05 \x01(\t\x12\x0b\n\x03url\x18\x06 \x01(\t\"l\n\x10\x44igitalOceanSpec\x12\r\n\x05token\x18\x01 \x01(\t\x12\x11\n\taccessKey\x18\x02 \x01(\t\x12\x11\n\tsecretKey\x18\x03 \x01(\t\x12\x15\n\rdefaultRegion\x18\x04 \x01(\t\x12\x0c\n\x04host\x18\x05 \x01(\t\"\xdd\x01\n\x0b\x44iscordSpec\x12\x0b\n\x03url\x18\x01 \x01(\t\x12\x13\n\x0b\x63ontentType\x18\x02 \x01(\t\x12\r\n\x05token\x18\x03 \x01(\t\x12`\n\x07headers\x18\x04 \x03(\x0b\x32O.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.HeadersEntry\x12\x0b\n\x03ssl\x18\x05 \x01(\x08\x1a.\n\x0cHeadersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"k\n\nDremioSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08keyspace\x18\x03 \x01(\t\x12\x10\n\x08username\x18\x04 \x01(\t\x12\x10\n\x08password\x18\x05 \x01(\t\x12\x0b\n\x03url\x18\x06 \x01(\t\"\x1c\n\x0b\x44ropboxSpec\x12\r\n\x05token\x18\x01 \x01(\t\"p\n\x11\x45lasticSearchSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x0e\n\x06prefix\x18\x03 \x01(\t\x12\x10\n\x08username\x18\x04 \x01(\t\x12\x10\n\x08password\x18\x05 \x01(\t\x12\x0b\n\x03url\x18\x06 \x01(\t\"Y\n\nExasolSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08username\x18\x04 \x01(\t\x12\x10\n\x08password\x18\x05 \x01(\t\x12\x0b\n\x03url\x18\x07 \x01(\t\"h\n\x07\x46TPSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08keyspace\x18\x03 \x01(\t\x12\x10\n\x08username\x18\x04 \x01(\t\x12\x10\n\x08password\x18\x05 \x01(\t\x12\x0b\n\x03url\x18\x06 \x01(\t\"\x1d\n\x0c\x46\x61\x63\x65\x62ookSpec\x12\r\n\x05token\x18\x01 \x01(\t\"I\n\x07\x46tpSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08username\x18\x03 \x01(\t\x12\x10\n\x08password\x18\x04 \x01(\t\"\xa3\x01\n\x0fGcpBigQuerySpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08username\x18\x03 \x01(\t\x12\x10\n\x08password\x18\x04 \x01(\t\x12\x11\n\tprojectID\x18\x05 \x01(\t\x12\x11\n\toauthType\x18\x06 \x01(\t\x12\x1d\n\x15serviceAccountKeyPath\x18\x07 \x01(\t\x12\x0b\n\x03url\x18\x08 \x01(\t\"v\n\x0eGcpSpannerSpec\x12\x0f\n\x07project\x18\x01 \x01(\t\x12\x10\n\x08instance\x18\x02 \x01(\t\x12\x10\n\x08username\x18\x03 \x01(\t\x12\x10\n\x08password\x18\x04 \x01(\t\x12\x10\n\x08\x64\x61tabase\x18\x05 \x01(\t\x12\x0b\n\x03url\x18\x06 \x01(\t\"2\n\x0eGcpStorageSpec\x12\x0f\n\x07keyFile\x18\x01 \x01(\t\x12\x0f\n\x07project\x18\x02 \x01(\t\":\n\nGithubSpec\x12\r\n\x05token\x18\x01 \x01(\t\x12\x10\n\x08username\x18\x02 \x01(\t\x12\x0b\n\x03ssh\x18\x03 \x01(\t\"(\n\nGitlabSpec\x12\r\n\x05token\x18\x01 \x01(\t\x12\x0b\n\x03ssh\x18\x02 \x01(\t\"B\n\x10GoogleSheetsSpec\x12\x0e\n\x06scopes\x18\x01 \x01(\t\x12\n\n\x02id\x18\x02 \x01(\t\x12\x12\n\ndataToPull\x18\x03 \x01(\t\"n\n\rGreenPlumSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08\x64\x61tabase\x18\x03 \x01(\t\x12\x10\n\x08username\x18\x04 \x01(\t\x12\x10\n\x08password\x18\x05 \x01(\t\x12\x0b\n\x03url\x18\x06 \x01(\t\")\n\x0bHetznerSpec\x12\r\n\x05token\x18\x01 \x01(\t\x12\x0b\n\x03ssh\x18\x02 \x01(\t\"7\n\x0bHipchatSpec\x12\x0b\n\x03url\x18\x01 \x01(\t\x12\r\n\x05token\x18\x02 \x01(\t\x12\x0c\n\x04room\x18\x03 \x01(\t\"E\n\x11ImageRegistrySpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x10\n\x08username\x18\x02 \x01(\t\x12\x10\n\x08password\x18\x03 \x01(\t\"m\n\x0cInformixSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08\x64\x61tabase\x18\x03 \x01(\t\x12\x10\n\x08username\x18\x04 \x01(\t\x12\x10\n\x08password\x18\x05 \x01(\t\x12\x0b\n\x03url\x18\x06 \x01(\t\"l\n\x0bIngressSpec\x12\x0c\n\x04\x66qdn\x18\x01 \x01(\t\x12\x0c\n\x04grpc\x18\x02 \x01(\x08\x12\x0c\n\x04rest\x18\x03 \x01(\x08\x12\x18\n\x10ingressClassName\x18\x04 \x01(\t\x12\x19\n\x11\x63lusterIssuerName\x18\x05 \x01(\t\"i\n\tKafkaSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x0f\n\x07\x63hannel\x18\x03 \x01(\t\x12\x10\n\x08username\x18\x04 \x01(\t\x12\x10\n\x08password\x18\x05 \x01(\t\x12\x0b\n\x03url\x18\x06 \x01(\t\"\xe9\x01\n\x03Lab\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12L\n\x04spec\x18\x02 \x01(\x0b\x32>.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec\x12P\n\x06status\x18\x03 \x01(\x0b\x32@.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus\"\x95\x01\n\x0cLabCondition\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x46\n\x12lastTransitionTime\x18\x03 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x0e\n\x06reason\x18\x04 \x01(\t\x12\x0f\n\x07message\x18\x05 \x01(\t\"\x96\x01\n\x07LabList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12I\n\x05items\x18\x02 \x03(\x0b\x32:.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab\"\xd4\x01\n\x07LabSpec\x12\x13\n\x0b\x64\x65scription\x18\x01 \x01(\t\x12\x36\n\ttenantRef\x18\x02 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12X\n\x06limits\x18\x03 \x01(\x0b\x32H.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec\x12\x13\n\x0b\x63lusterName\x18\x04 \x01(\t\x12\r\n\x05owner\x18\x05 \x01(\t\"\xc1\x01\n\tLabStatus\x12\x1a\n\x12observedGeneration\x18\x01 \x01(\x03\x12?\n\x0blastUpdated\x18\x02 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12W\n\nconditions\x18\x03 \x03(\x0b\x32\x43.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabCondition\"\xf5\x01\n\x07License\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12P\n\x04spec\x18\x02 \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec\x12T\n\x06status\x18\x03 \x01(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus\"\x99\x01\n\x10LicenseCondition\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x46\n\x12lastTransitionTime\x18\x03 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x0e\n\x06reason\x18\x04 \x01(\t\x12\x0f\n\x07message\x18\x05 \x01(\t\"\x9e\x01\n\x0bLicenseList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12M\n\x05items\x18\x02 \x03(\x0b\x32>.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License\"\xf5\x03\n\x0bLicenseSpec\x12\x36\n\tsecretRef\x18\x02 \x01(\x0b\x32#.k8s.io.api.core.v1.SecretReference\x12\r\n\x05\x65mail\x18\x04 \x01(\t\x12>\n\ntrialStart\x18\x05 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12<\n\x08trialEnd\x18\x06 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x13\n\x0bmaxProducts\x18\x07 \x01(\x05\x12\x13\n\x0bmaxTrainers\x18\x08 \x01(\x05\x12\x12\n\nmaxServers\x18\t \x01(\x05\x12\x10\n\x08maxUsers\x18\n \x01(\x05\x12\x15\n\rmaxDataPlanes\x18\x0b \x01(\x05\x12\x10\n\x08\x66orecast\x18\x0c \x01(\x08\x12\x0b\n\x03nlp\x18\r \x01(\x08\x12\x0e\n\x06vision\x18\x0e \x01(\x08\x12\x0f\n\x07\x63hatbot\x18\x0f \x01(\x08\x12\x13\n\x0bproductName\x18\x10 \x01(\t\x12\x11\n\tpriceName\x18\x11 \x01(\t\x12<\n\x08\x65xpireAt\x18\x12 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x14\n\x0cnotifierName\x18\x13 \x01(\t\"\xf8\x01\n\rLicenseStatus\x12?\n\x0blastUpdated\x18\x01 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x1a\n\x12observedGeneration\x18\x02 \x01(\x03\x12\x15\n\rfailureReason\x18\x03 \x01(\t\x12\x16\n\x0e\x66\x61ilureMessage\x18\x04 \x01(\t\x12[\n\nconditions\x18\x05 \x03(\x0b\x32G.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseCondition\"\x1b\n\nLinodeSpec\x12\r\n\x05token\x18\x01 \x01(\t\"\x82\x01\n\x0fMSSqlServerSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08\x64\x61tabase\x18\x03 \x01(\t\x12\x10\n\x08instance\x18\x04 \x01(\t\x12\x10\n\x08username\x18\x05 \x01(\t\x12\x10\n\x08password\x18\x06 \x01(\t\x12\x0b\n\x03url\x18\x07 \x01(\t\"\x1d\n\nMSTeamSpec\x12\x0f\n\x07webhook\x18\x01 \x01(\t\"@\n\x0eMattermostSpec\x12\x0b\n\x03url\x18\x01 \x01(\t\x12\x0f\n\x07\x63hannel\x18\x02 \x01(\t\x12\x10\n\x08username\x18\x03 \x01(\t\"?\n\tMinioSpec\x12\x11\n\taccessKey\x18\x01 \x01(\t\x12\x11\n\tsecretKey\x18\x02 \x01(\t\x12\x0c\n\x04host\x18\x03 \x01(\t\"\x84\x02\n\x0cModelaSystem\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12U\n\x04spec\x18\x02 \x01(\x0b\x32G.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec\x12Y\n\x06status\x18\x03 \x01(\x0b\x32I.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus\"\x9e\x01\n\x15ModelaSystemCondition\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x46\n\x12lastTransitionTime\x18\x03 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x0e\n\x06reason\x18\x04 \x01(\t\x12\x0f\n\x07message\x18\x05 \x01(\t\"\xa8\x01\n\x10ModelaSystemList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12R\n\x05items\x18\x02 \x03(\x0b\x32\x43.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem\"\xad\x01\n\x10ModelaSystemSpec\x12\x0f\n\x07release\x18\x01 \x01(\t\x12\x0e\n\x06\x61\x63tive\x18\x02 \x01(\x08\x12\x38\n\x0bpodTemplate\x18\x03 \x01(\x0b\x32#.k8s.io.api.core.v1.PodTemplateSpec\x12>\n\x11publisherTemplate\x18\x04 \x01(\x0b\x32#.k8s.io.api.core.v1.PodTemplateSpec\"\xd6\x01\n\x12ModelaSystemStatus\x12\x1a\n\x12observedGeneration\x18\x01 \x01(\x03\x12\x15\n\rfailureReason\x18\x02 \x01(\t\x12\x16\n\x0e\x66\x61ilureMessage\x18\x03 \x01(\t\x12\x13\n\x0blastRelease\x18\x04 \x01(\t\x12`\n\nconditions\x18\x05 \x03(\x0b\x32L.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemCondition\"l\n\x0bMongoDbSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08\x64\x61tabase\x18\x03 \x01(\t\x12\x10\n\x08username\x18\x04 \x01(\t\x12\x10\n\x08password\x18\x05 \x01(\t\x12\x0b\n\x03url\x18\x06 \x01(\t\"j\n\tMySqlSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08\x64\x61tabase\x18\x03 \x01(\t\x12\x10\n\x08username\x18\x04 \x01(\t\x12\x10\n\x08password\x18\x05 \x01(\t\x12\x0b\n\x03url\x18\x06 \x01(\t\"X\n\tNeo4JSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08username\x18\x04 \x01(\t\x12\x10\n\x08password\x18\x05 \x01(\t\x12\x0b\n\x03url\x18\x07 \x01(\t\"\xe6\x01\n\x17NotificationChannelSpec\x12\x0f\n\x07\x65nabled\x18\x01 \x01(\x08\x12\x16\n\x0e\x63onnectionName\x18\x02 \x01(\t\x12\x0c\n\x04info\x18\x03 \x01(\x08\x12\r\n\x05\x65rror\x18\x04 \x01(\x08\x12\x38\n\x04\x66rom\x18\x05 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x36\n\x02to\x18\x06 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x13\n\x0b\x64\x65stination\x18\x07 \x01(\t\"\x8b\x01\n\x19NotificationChannelStatus\x12?\n\x0blastMessage\x18\x01 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x15\n\rfailureReason\x18\x02 \x01(\t\x12\x16\n\x0e\x66\x61ilureMessage\x18\x03 \x01(\t\"\xf8\x01\n\x08Notifier\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12Q\n\x04spec\x18\x02 \x01(\x0b\x32\x43.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec\x12U\n\x06status\x18\x03 \x01(\x0b\x32\x45.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus\"\x9a\x01\n\x11NotifierCondition\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x46\n\x12lastTransitionTime\x18\x03 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x0e\n\x06reason\x18\x04 \x01(\t\x12\x0f\n\x07message\x18\x05 \x01(\t\"\xa0\x01\n\x0cNotifierList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12N\n\x05items\x18\x02 \x03(\x0b\x32?.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier\"\xdd\x01\n\x0cNotifierSpec\x12\x0f\n\x07\x65nabled\x18\x01 \x01(\x08\x12\x36\n\ttenantRef\x18\x02 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\x12\r\n\x05owner\x18\x04 \x01(\t\x12`\n\x08\x63hannels\x18\x05 \x03(\x0b\x32N.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec\"\xb5\x02\n\x0eNotifierStatus\x12\x1a\n\x12observedGeneration\x18\x02 \x01(\x03\x12?\n\x0blastUpdated\x18\x03 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12h\n\x0e\x63hannelsStatus\x18\x04 \x03(\x0b\x32P.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus\x12\\\n\nconditions\x18\x05 \x03(\x0b\x32H.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierCondition\"%\n\x08OdbcSpec\x12\x19\n\x11\x63onntectionString\x18\x01 \x01(\t\"h\n\rOpenstackSpec\x12\x10\n\x08username\x18\x01 \x01(\t\x12\x12\n\ntenantName\x18\x02 \x01(\t\x12\x10\n\x08password\x18\x03 \x01(\t\x12\x0f\n\x07\x61uthUrl\x18\x04 \x01(\t\x12\x0e\n\x06region\x18\x05 \x01(\t\":\n\x0cOpsgenieSpec\x12\r\n\x05\x61piID\x18\x01 \x01(\t\x12\x0e\n\x06\x61piKey\x18\x02 \x01(\t\x12\x0b\n\x03url\x18\x03 \x01(\t\"v\n\nOracleSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x0b\n\x03sid\x18\x03 \x01(\t\x12\x0e\n\x06\x64river\x18\x04 \x01(\t\x12\x10\n\x08username\x18\x05 \x01(\t\x12\x10\n\x08password\x18\x06 \x01(\t\x12\x0b\n\x03url\x18\x07 \x01(\t\"U\n\x07OvhSpec\x12\x10\n\x08\x65ndpoint\x18\x01 \x01(\t\x12\x13\n\x0b\x61pplication\x18\x02 \x01(\t\x12\x0e\n\x06secret\x18\x03 \x01(\t\x12\x13\n\x0b\x63onsumerkey\x18\x04 \x01(\t\";\n\rPagerDutySpec\x12\r\n\x05\x61piID\x18\x01 \x01(\t\x12\x0e\n\x06\x61piKey\x18\x02 \x01(\t\x12\x0b\n\x03url\x18\x03 \x01(\t\"p\n\x0fPostgresSQLSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08\x64\x61tabase\x18\x03 \x01(\t\x12\x10\n\x08username\x18\x04 \x01(\t\x12\x10\n\x08password\x18\x05 \x01(\t\x12\x0b\n\x03url\x18\x06 \x01(\t\"z\n\nPrestoSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x0f\n\x07\x63\x61talog\x18\x03 \x01(\t\x12\x0e\n\x06schema\x18\x04 \x01(\t\x12\x10\n\x08username\x18\x05 \x01(\t\x12\x10\n\x08password\x18\x06 \x01(\t\x12\x0b\n\x03url\x18\x07 \x01(\t\":\n\x0cPushoverSpec\x12\r\n\x05\x61piID\x18\x01 \x01(\t\x12\x0e\n\x06\x61piKey\x18\x02 \x01(\t\x12\x0b\n\x03url\x18\x03 \x01(\t\"N\n\x0cRabbitMQSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08username\x18\x03 \x01(\t\x12\x10\n\x08password\x18\x04 \x01(\t\"\xb3\x02\n\x11ResourceLimitSpec\x12\x0f\n\x07\x65nabled\x18\x01 \x01(\x08\x12>\n\x06maxMem\x18\x02 \x01(\x0b\x32..k8s.io.apimachinery.pkg.api.resource.Quantity\x12>\n\x06maxCpu\x18\x03 \x01(\x0b\x32..k8s.io.apimachinery.pkg.api.resource.Quantity\x12\x0f\n\x07maxPods\x18\x04 \x01(\x05\x12\x0e\n\x06maxPvc\x18\x05 \x01(\x05\x12\x34\n\x05quota\x18\x06 \x01(\x0b\x32%.k8s.io.api.core.v1.ResourceQuotaSpec\x12\x36\n\nlimitRange\x18\x07 \x01(\x0b\x32\".k8s.io.api.core.v1.LimitRangeSpec\"+\n\x08RuleSpec\x12\x10\n\x08resource\x18\x01 \x01(\t\x12\r\n\x05verbs\x18\x02 \x03(\t\"l\n\x0bSAPHanaSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08\x64\x61tabase\x18\x03 \x01(\t\x12\x10\n\x08username\x18\x04 \x01(\t\x12\x10\n\x08password\x18\x05 \x01(\t\x12\x0b\n\x03url\x18\x06 \x01(\t\"i\n\x08SFTPSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08keyspace\x18\x03 \x01(\t\x12\x10\n\x08username\x18\x04 \x01(\t\x12\x10\n\x08password\x18\x05 \x01(\t\x12\x0b\n\x03url\x18\x06 \x01(\t\"J\n\x08SFtpSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08username\x18\x03 \x01(\t\x12\x10\n\x08password\x18\x04 \x01(\t\"&\n\x05Scope\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07\x61\x63tions\x18\x02 \x03(\t\"\x81\x02\n\x0bServingSite\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12T\n\x04spec\x18\x02 \x01(\x0b\x32\x46.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec\x12X\n\x06status\x18\x03 \x01(\x0b\x32H.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus\"\x9d\x01\n\x14ServingSiteCondition\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x46\n\x12lastTransitionTime\x18\x03 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x0e\n\x06reason\x18\x04 \x01(\t\x12\x0f\n\x07message\x18\x05 \x01(\t\"\xa6\x01\n\x0fServingSiteList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12Q\n\x05items\x18\x02 \x03(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite\"\xb1\x02\n\x0fServingSiteSpec\x12\x13\n\x0b\x64\x65scription\x18\x01 \x01(\t\x12\x36\n\ttenantRef\x18\x02 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12X\n\x06limits\x18\x03 \x01(\x0b\x32H.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec\x12S\n\x07ingress\x18\x04 \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec\x12\x13\n\x0b\x63lusterName\x18\x06 \x01(\t\x12\r\n\x05owner\x18\x07 \x01(\t\"\xac\x04\n\x11ServingSiteStatus\x12\x1a\n\x12observedGeneration\x18\x01 \x01(\x03\x12?\n\x0blastUpdated\x18\x02 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x18\n\x10\x61\x63tivePredictors\x18\x03 \x01(\x05\x12\x1a\n\x12inactivePredictors\x18\x04 \x01(\x05\x12#\n\x1btotalPredictorServiceFailed\x18\x05 \x01(\x05\x12%\n\x1dtotalPredictorDataDriftFailed\x18\x06 \x01(\x05\x12$\n\x1ctotalPredictorAccuracyFailed\x18\x07 \x01(\x05\x12\x1c\n\x14lastDailyPredictions\x18\x08 \x03(\x05\x12\x15\n\rfailureReason\x18\t \x01(\t\x12\x16\n\x0e\x66\x61ilureMessage\x18\n \x01(\t\x12\x17\n\x0fgrpcIngressName\x18\x0b \x01(\t\x12\x17\n\x0frestIngressName\x18\x0c \x01(\t\x12\x18\n\x10grpcIngressReady\x18\r \x01(\x08\x12\x18\n\x10restIngressReady\x18\x0e \x01(\x08\x12_\n\nconditions\x18\x0f \x03(\x0b\x32K.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteCondition\"^\n\x0fSingleStoreSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08username\x18\x04 \x01(\t\x12\x10\n\x08password\x18\x05 \x01(\t\x12\x0b\n\x03url\x18\x07 \x01(\t\"\x1a\n\tSlackSpec\x12\r\n\x05token\x18\x04 \x01(\t\"\xb2\x01\n\x08SmtpSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x0c\n\x04helo\x18\x03 \x01(\t\x12\r\n\x05\x65mail\x18\x04 \x01(\t\x12\x0b\n\x03ssl\x18\x05 \x01(\x08\x12\x12\n\nverifyPeer\x18\x06 \x01(\x08\x12\x12\n\nverifyHost\x18\x07 \x01(\x08\x12\x14\n\x0cpasswordAuth\x18\x08 \x01(\x08\x12\x10\n\x08username\x18\t \x01(\t\x12\x10\n\x08password\x18\n \x01(\t\"\x91\x01\n\rSnowflakeSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08username\x18\x03 \x01(\t\x12\x10\n\x08password\x18\x04 \x01(\t\x12\x10\n\x08\x64\x61tabase\x18\x05 \x01(\t\x12\x0e\n\x06schema\x18\x06 \x01(\t\x12\x11\n\twarehouse\x18\x07 \x01(\t\x12\x0b\n\x03url\x18\x08 \x01(\t\"\x1e\n\nSqliteSpec\x12\x10\n\x08\x66ileName\x18\x01 \x01(\t\"k\n\nSybaseSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08\x64\x61tabase\x18\x03 \x01(\t\x12\x10\n\x08username\x18\x04 \x01(\t\x12\x10\n\x08password\x18\x05 \x01(\t\x12\x0b\n\x03url\x18\x06 \x01(\t\"\xf2\x01\n\x06Tenant\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12O\n\x04spec\x18\x02 \x01(\x0b\x32\x41.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec\x12S\n\x06status\x18\x03 \x01(\x0b\x32\x43.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus\"\x98\x01\n\x0fTenantCondition\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x46\n\x12lastTransitionTime\x18\x03 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x0e\n\x06reason\x18\x04 \x01(\t\x12\x0f\n\x07message\x18\x05 \x01(\t\"\x9c\x01\n\nTenantList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12L\n\x05items\x18\x02 \x03(\x0b\x32=.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant\"\x8c\x02\n\nTenantSpec\x12\x37\n\ndefaultLab\x18\x01 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12\x42\n\x15\x64\x65\x66\x61ultServingSiteRef\x18\x02 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\x12\r\n\x05owner\x18\x04 \x01(\t\x12]\n\x0bpermissions\x18\x05 \x01(\x0b\x32H.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.PermissionsSpec\"\xf6\x01\n\x0cTenantStatus\x12\x1a\n\x12observedGeneration\x18\x01 \x01(\x03\x12?\n\x0blastUpdated\x18\x02 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x15\n\rfailureReason\x18\x03 \x01(\t\x12\x16\n\x0e\x66\x61ilureMessage\x18\x04 \x01(\t\x12Z\n\nconditions\x18\x05 \x03(\x0b\x32\x46.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantCondition\"m\n\x0cTeradataSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08\x64\x61tabase\x18\x03 \x01(\t\x12\x10\n\x08username\x18\x04 \x01(\t\x12\x10\n\x08password\x18\x05 \x01(\t\x12\x0b\n\x03url\x18\x06 \x01(\t\"\x1c\n\x0bTwitterSpec\x12\r\n\x05token\x18\x01 \x01(\t\"\xab\x01\n\rUserRoleClass\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12V\n\x04spec\x18\x02 \x01(\x0b\x32H.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec\"\xaa\x01\n\x11UserRoleClassList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12S\n\x05items\x18\x02 \x03(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass\"\xbf\x01\n\x11UserRoleClassSpec\x12\x36\n\ttenantRef\x18\x01 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\r\n\x05owner\x18\x03 \x01(\t\x12N\n\x05rules\x18\x04 \x03(\x0b\x32?.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec\"l\n\x0bVerticaSpec\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08\x64\x61tabase\x18\x03 \x01(\t\x12\x10\n\x08username\x18\x04 \x01(\t\x12\x10\n\x08password\x18\x05 \x01(\t\x12\x0b\n\x03url\x18\x06 \x01(\t\":\n\x0cVictorOpSpec\x12\r\n\x05\x61piID\x18\x01 \x01(\t\x12\x0e\n\x06\x61piKey\x18\x02 \x01(\t\x12\x0b\n\x03url\x18\x03 \x01(\t\"\x87\x02\n\rVirtualBucket\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12V\n\x04spec\x18\x02 \x01(\x0b\x32H.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec\x12Z\n\x06status\x18\x03 \x01(\x0b\x32J.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus\"\x9f\x01\n\x16VirtualBucketCondition\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x46\n\x12lastTransitionTime\x18\x03 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x0e\n\x06reason\x18\x04 \x01(\t\x12\x0f\n\x07message\x18\x05 \x01(\t\"\xaa\x01\n\x11VirtualBucketList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12S\n\x05items\x18\x02 \x03(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket\"\x88\x02\n\x11VirtualBucketSpec\x12\x36\n\ttenantRef\x18\x01 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12\x16\n\x0e\x63onnectionName\x18\x02 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\x12\r\n\x05owner\x18\x04 \x01(\t\x12\x0e\n\x06region\x18\x05 \x01(\t\x12\x12\n\nversioning\x18\x06 \x01(\x08\x12[\n\x06quotas\x18\x07 \x01(\x0b\x32K.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas\"\x84\x02\n\x13VirtualBucketStatus\x12?\n\x0blastUpdated\x18\x01 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x1a\n\x12observedGeneration\x18\x03 \x01(\x03\x12\x15\n\rfailureReason\x18\x04 \x01(\t\x12\x16\n\x0e\x66\x61ilureMessage\x18\x05 \x01(\t\x12\x61\n\nconditions\x18\x06 \x03(\x0b\x32M.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketCondition\"\x8a\x02\n\x0eVirtualCluster\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12W\n\x04spec\x18\x02 \x01(\x0b\x32I.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec\x12[\n\x06status\x18\x03 \x01(\x0b\x32K.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterStatus\"H\n\x1bVirtualClusterAutoScaleSpec\x12\x0f\n\x07\x65nabled\x18\x01 \x01(\x08\x12\x0b\n\x03min\x18\x02 \x01(\x05\x12\x0b\n\x03max\x18\x03 \x01(\x05\"\xa0\x01\n\x17VirtualClusterCondition\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x46\n\x12lastTransitionTime\x18\x03 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x0e\n\x06reason\x18\x04 \x01(\t\x12\x0f\n\x07message\x18\x05 \x01(\t\"\xac\x01\n\x12VirtualClusterList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12T\n\x05items\x18\x02 \x03(\x0b\x32\x45.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualCluster\"\xec\x03\n\x12VirtualClusterSpec\x12\x36\n\ttenantRef\x18\x01 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\r\n\x05nodes\x18\x03 \x01(\x05\x12\x15\n\rnodeClassName\x18\x04 \x01(\t\x12\x0c\n\x04gpus\x18\x05 \x01(\x05\x12\x14\n\x0cgpuClassName\x18\x06 \x01(\t\x12\x12\n\nvolumeSize\x18\x07 \x01(\x05\x12\x0c\n\x04spot\x18\x08 \x01(\x08\x12\x16\n\x0e\x63onnectionName\x18\t \x01(\t\x12\r\n\x05owner\x18\n \x01(\t\x12X\n\x06limits\x18\x0b \x01(\x0b\x32H.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec\x12\x0e\n\x06region\x18\x0c \x01(\t\x12\n\n\x02\x61z\x18\r \x01(\t\x12\x19\n\x11kubernetesVersion\x18\x0e \x01(\t\x12\x65\n\tautoScale\x18\x0f \x01(\x0b\x32R.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterAutoScaleSpec\"\xb5\x02\n\x14VirtualClusterStatus\x12\x1a\n\x12observedGeneration\x18\x01 \x01(\x03\x12\x16\n\x0e\x61vailableNodes\x18\x02 \x01(\x05\x12\x15\n\ravailableGpus\x18\x03 \x01(\x05\x12?\n\x0blastUpdated\x18\x04 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x15\n\rfailureReason\x18\x05 \x01(\t\x12\x16\n\x0e\x66\x61ilureMessage\x18\x06 \x01(\t\x12\x62\n\nconditions\x18\x07 \x03(\x0b\x32N.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterCondition\"\x87\x02\n\rVirtualVolume\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12V\n\x04spec\x18\x02 \x01(\x0b\x32H.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualVolumeSpec\x12Z\n\x06status\x18\x03 \x01(\x0b\x32J.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualVolumeStatus\"\x9f\x01\n\x16VirtualVolumeCondition\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x46\n\x12lastTransitionTime\x18\x04 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x0e\n\x06reason\x18\x05 \x01(\t\x12\x0f\n\x07message\x18\x06 \x01(\t\"\xaa\x01\n\x11VirtualVolumeList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12S\n\x05items\x18\x02 \x03(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualVolume\"\x87\x01\n\x11VirtualVolumeSpec\x12\x36\n\ttenantRef\x18\x01 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12\x16\n\x0e\x63onnectionName\x18\x02 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\x12\r\n\x05owner\x18\x04 \x01(\t\"\x84\x02\n\x13VirtualVolumeStatus\x12\x1a\n\x12observedGeneration\x18\x01 \x01(\x03\x12?\n\x0blastUpdated\x18\x02 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x15\n\rfailureReason\x18\x03 \x01(\t\x12\x16\n\x0e\x66\x61ilureMessage\x18\x04 \x01(\t\x12\x61\n\nconditions\x18\x05 \x03(\x0b\x32M.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualVolumeCondition\"\xdd\x01\n\x0bWebhookSpec\x12\x0b\n\x03url\x18\x01 \x01(\t\x12\x13\n\x0b\x63ontentType\x18\x02 \x01(\t\x12\r\n\x05token\x18\x03 \x01(\t\x12`\n\x07headers\x18\x04 \x03(\x0b\x32O.github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.HeadersEntry\x12\x0b\n\x03ssl\x18\x05 \x01(\x08\x1a.\n\x0cHeadersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x42\x37Z5github.com/metaprov/modelaapi/pkg/apis/infra/v1alpha1')



_ACCOUNT = DESCRIPTOR.message_types_by_name['Account']
_ACCOUNTCONDITION = DESCRIPTOR.message_types_by_name['AccountCondition']
_ACCOUNTLIST = DESCRIPTOR.message_types_by_name['AccountList']
_ACCOUNTSPEC = DESCRIPTOR.message_types_by_name['AccountSpec']
_ACCOUNTSTATUS = DESCRIPTOR.message_types_by_name['AccountStatus']
_ALERT = DESCRIPTOR.message_types_by_name['Alert']
_ALERTCONDITION = DESCRIPTOR.message_types_by_name['AlertCondition']
_ALERTLIST = DESCRIPTOR.message_types_by_name['AlertList']
_ALERTSPEC = DESCRIPTOR.message_types_by_name['AlertSpec']
_ALERTSPEC_FIELDSENTRY = _ALERTSPEC.nested_types_by_name['FieldsEntry']
_ALERTSTATUS = DESCRIPTOR.message_types_by_name['AlertStatus']
_ALICLOUDSPEC = DESCRIPTOR.message_types_by_name['AliCloudSpec']
_AMAZONATHENASPEC = DESCRIPTOR.message_types_by_name['AmazonAthenaSpec']
_AMAZONREDSHIFTSPEC = DESCRIPTOR.message_types_by_name['AmazonRedShiftSpec']
_APACHECASSANDRASPEC = DESCRIPTOR.message_types_by_name['ApacheCassandraSpec']
_APACHEDRILLSPEC = DESCRIPTOR.message_types_by_name['ApacheDrillSpec']
_APACHEDRUIDSPEC = DESCRIPTOR.message_types_by_name['ApacheDruidSpec']
_APACHEHIVESPEC = DESCRIPTOR.message_types_by_name['ApacheHiveSpec']
_APACHESPARKSPEC = DESCRIPTOR.message_types_by_name['ApacheSparkSpec']
_APITOKEN = DESCRIPTOR.message_types_by_name['ApiToken']
_APITOKENCONDITION = DESCRIPTOR.message_types_by_name['ApiTokenCondition']
_APITOKENLIST = DESCRIPTOR.message_types_by_name['ApiTokenList']
_APITOKENSPEC = DESCRIPTOR.message_types_by_name['ApiTokenSpec']
_APITOKENSTATUS = DESCRIPTOR.message_types_by_name['ApiTokenStatus']
_ATTACHMENT = DESCRIPTOR.message_types_by_name['Attachment']
_ATTACHMENTCONDITION = DESCRIPTOR.message_types_by_name['AttachmentCondition']
_ATTACHMENTLIST = DESCRIPTOR.message_types_by_name['AttachmentList']
_ATTACHMENTSPEC = DESCRIPTOR.message_types_by_name['AttachmentSpec']
_ATTACHMENTSTATUS = DESCRIPTOR.message_types_by_name['AttachmentStatus']
_AVATARSPEC = DESCRIPTOR.message_types_by_name['AvatarSpec']
_AWSS3SPEC = DESCRIPTOR.message_types_by_name['AwsS3Spec']
_AZURESQLDATABASESPEC = DESCRIPTOR.message_types_by_name['AzureSQLDatabaseSpec']
_AZURESTORAGESPEC = DESCRIPTOR.message_types_by_name['AzureStorageSpec']
_BITBUCKETSPEC = DESCRIPTOR.message_types_by_name['BitbucketSpec']
_BOXSPEC = DESCRIPTOR.message_types_by_name['BoxSpec']
_BUCKETRESOURCEQUOTAS = DESCRIPTOR.message_types_by_name['BucketResourceQuotas']
_CLICKHOUSESPEC = DESCRIPTOR.message_types_by_name['ClickHouseSpec']
_COCKROACHDBSPEC = DESCRIPTOR.message_types_by_name['CockroachDBSpec']
_COMMIT = DESCRIPTOR.message_types_by_name['Commit']
_COMMITCONDITION = DESCRIPTOR.message_types_by_name['CommitCondition']
_COMMITLIST = DESCRIPTOR.message_types_by_name['CommitList']
_COMMITSPEC = DESCRIPTOR.message_types_by_name['CommitSpec']
_COMMITSTATUS = DESCRIPTOR.message_types_by_name['CommitStatus']
_CONNECTION = DESCRIPTOR.message_types_by_name['Connection']
_CONNECTIONCONDITION = DESCRIPTOR.message_types_by_name['ConnectionCondition']
_CONNECTIONLIST = DESCRIPTOR.message_types_by_name['ConnectionList']
_CONNECTIONSPEC = DESCRIPTOR.message_types_by_name['ConnectionSpec']
_CONNECTIONSTATUS = DESCRIPTOR.message_types_by_name['ConnectionStatus']
_COUCHBASESPEC = DESCRIPTOR.message_types_by_name['CouchbaseSpec']
_DB2SPEC = DESCRIPTOR.message_types_by_name['DB2Spec']
_DIGITALOCEANSPEC = DESCRIPTOR.message_types_by_name['DigitalOceanSpec']
_DISCORDSPEC = DESCRIPTOR.message_types_by_name['DiscordSpec']
_DISCORDSPEC_HEADERSENTRY = _DISCORDSPEC.nested_types_by_name['HeadersEntry']
_DREMIOSPEC = DESCRIPTOR.message_types_by_name['DremioSpec']
_DROPBOXSPEC = DESCRIPTOR.message_types_by_name['DropboxSpec']
_ELASTICSEARCHSPEC = DESCRIPTOR.message_types_by_name['ElasticSearchSpec']
_EXASOLSPEC = DESCRIPTOR.message_types_by_name['ExasolSpec']
_FTPSPEC = DESCRIPTOR.message_types_by_name['FTPSpec']
_FACEBOOKSPEC = DESCRIPTOR.message_types_by_name['FacebookSpec']
_FTPSPEC = DESCRIPTOR.message_types_by_name['FtpSpec']
_GCPBIGQUERYSPEC = DESCRIPTOR.message_types_by_name['GcpBigQuerySpec']
_GCPSPANNERSPEC = DESCRIPTOR.message_types_by_name['GcpSpannerSpec']
_GCPSTORAGESPEC = DESCRIPTOR.message_types_by_name['GcpStorageSpec']
_GITHUBSPEC = DESCRIPTOR.message_types_by_name['GithubSpec']
_GITLABSPEC = DESCRIPTOR.message_types_by_name['GitlabSpec']
_GOOGLESHEETSSPEC = DESCRIPTOR.message_types_by_name['GoogleSheetsSpec']
_GREENPLUMSPEC = DESCRIPTOR.message_types_by_name['GreenPlumSpec']
_HETZNERSPEC = DESCRIPTOR.message_types_by_name['HetznerSpec']
_HIPCHATSPEC = DESCRIPTOR.message_types_by_name['HipchatSpec']
_IMAGEREGISTRYSPEC = DESCRIPTOR.message_types_by_name['ImageRegistrySpec']
_INFORMIXSPEC = DESCRIPTOR.message_types_by_name['InformixSpec']
_INGRESSSPEC = DESCRIPTOR.message_types_by_name['IngressSpec']
_KAFKASPEC = DESCRIPTOR.message_types_by_name['KafkaSpec']
_LAB = DESCRIPTOR.message_types_by_name['Lab']
_LABCONDITION = DESCRIPTOR.message_types_by_name['LabCondition']
_LABLIST = DESCRIPTOR.message_types_by_name['LabList']
_LABSPEC = DESCRIPTOR.message_types_by_name['LabSpec']
_LABSTATUS = DESCRIPTOR.message_types_by_name['LabStatus']
_LICENSE = DESCRIPTOR.message_types_by_name['License']
_LICENSECONDITION = DESCRIPTOR.message_types_by_name['LicenseCondition']
_LICENSELIST = DESCRIPTOR.message_types_by_name['LicenseList']
_LICENSESPEC = DESCRIPTOR.message_types_by_name['LicenseSpec']
_LICENSESTATUS = DESCRIPTOR.message_types_by_name['LicenseStatus']
_LINODESPEC = DESCRIPTOR.message_types_by_name['LinodeSpec']
_MSSQLSERVERSPEC = DESCRIPTOR.message_types_by_name['MSSqlServerSpec']
_MSTEAMSPEC = DESCRIPTOR.message_types_by_name['MSTeamSpec']
_MATTERMOSTSPEC = DESCRIPTOR.message_types_by_name['MattermostSpec']
_MINIOSPEC = DESCRIPTOR.message_types_by_name['MinioSpec']
_MODELASYSTEM = DESCRIPTOR.message_types_by_name['ModelaSystem']
_MODELASYSTEMCONDITION = DESCRIPTOR.message_types_by_name['ModelaSystemCondition']
_MODELASYSTEMLIST = DESCRIPTOR.message_types_by_name['ModelaSystemList']
_MODELASYSTEMSPEC = DESCRIPTOR.message_types_by_name['ModelaSystemSpec']
_MODELASYSTEMSTATUS = DESCRIPTOR.message_types_by_name['ModelaSystemStatus']
_MONGODBSPEC = DESCRIPTOR.message_types_by_name['MongoDbSpec']
_MYSQLSPEC = DESCRIPTOR.message_types_by_name['MySqlSpec']
_NEO4JSPEC = DESCRIPTOR.message_types_by_name['Neo4JSpec']
_NOTIFICATIONCHANNELSPEC = DESCRIPTOR.message_types_by_name['NotificationChannelSpec']
_NOTIFICATIONCHANNELSTATUS = DESCRIPTOR.message_types_by_name['NotificationChannelStatus']
_NOTIFIER = DESCRIPTOR.message_types_by_name['Notifier']
_NOTIFIERCONDITION = DESCRIPTOR.message_types_by_name['NotifierCondition']
_NOTIFIERLIST = DESCRIPTOR.message_types_by_name['NotifierList']
_NOTIFIERSPEC = DESCRIPTOR.message_types_by_name['NotifierSpec']
_NOTIFIERSTATUS = DESCRIPTOR.message_types_by_name['NotifierStatus']
_ODBCSPEC = DESCRIPTOR.message_types_by_name['OdbcSpec']
_OPENSTACKSPEC = DESCRIPTOR.message_types_by_name['OpenstackSpec']
_OPSGENIESPEC = DESCRIPTOR.message_types_by_name['OpsgenieSpec']
_ORACLESPEC = DESCRIPTOR.message_types_by_name['OracleSpec']
_OVHSPEC = DESCRIPTOR.message_types_by_name['OvhSpec']
_PAGERDUTYSPEC = DESCRIPTOR.message_types_by_name['PagerDutySpec']
_POSTGRESSQLSPEC = DESCRIPTOR.message_types_by_name['PostgresSQLSpec']
_PRESTOSPEC = DESCRIPTOR.message_types_by_name['PrestoSpec']
_PUSHOVERSPEC = DESCRIPTOR.message_types_by_name['PushoverSpec']
_RABBITMQSPEC = DESCRIPTOR.message_types_by_name['RabbitMQSpec']
_RESOURCELIMITSPEC = DESCRIPTOR.message_types_by_name['ResourceLimitSpec']
_RULESPEC = DESCRIPTOR.message_types_by_name['RuleSpec']
_SAPHANASPEC = DESCRIPTOR.message_types_by_name['SAPHanaSpec']
_SFTPSPEC = DESCRIPTOR.message_types_by_name['SFTPSpec']
_SFTPSPEC = DESCRIPTOR.message_types_by_name['SFtpSpec']
_SCOPE = DESCRIPTOR.message_types_by_name['Scope']
_SERVINGSITE = DESCRIPTOR.message_types_by_name['ServingSite']
_SERVINGSITECONDITION = DESCRIPTOR.message_types_by_name['ServingSiteCondition']
_SERVINGSITELIST = DESCRIPTOR.message_types_by_name['ServingSiteList']
_SERVINGSITESPEC = DESCRIPTOR.message_types_by_name['ServingSiteSpec']
_SERVINGSITESTATUS = DESCRIPTOR.message_types_by_name['ServingSiteStatus']
_SINGLESTORESPEC = DESCRIPTOR.message_types_by_name['SingleStoreSpec']
_SLACKSPEC = DESCRIPTOR.message_types_by_name['SlackSpec']
_SMTPSPEC = DESCRIPTOR.message_types_by_name['SmtpSpec']
_SNOWFLAKESPEC = DESCRIPTOR.message_types_by_name['SnowflakeSpec']
_SQLITESPEC = DESCRIPTOR.message_types_by_name['SqliteSpec']
_SYBASESPEC = DESCRIPTOR.message_types_by_name['SybaseSpec']
_TENANT = DESCRIPTOR.message_types_by_name['Tenant']
_TENANTCONDITION = DESCRIPTOR.message_types_by_name['TenantCondition']
_TENANTLIST = DESCRIPTOR.message_types_by_name['TenantList']
_TENANTSPEC = DESCRIPTOR.message_types_by_name['TenantSpec']
_TENANTSTATUS = DESCRIPTOR.message_types_by_name['TenantStatus']
_TERADATASPEC = DESCRIPTOR.message_types_by_name['TeradataSpec']
_TWITTERSPEC = DESCRIPTOR.message_types_by_name['TwitterSpec']
_USERROLECLASS = DESCRIPTOR.message_types_by_name['UserRoleClass']
_USERROLECLASSLIST = DESCRIPTOR.message_types_by_name['UserRoleClassList']
_USERROLECLASSSPEC = DESCRIPTOR.message_types_by_name['UserRoleClassSpec']
_VERTICASPEC = DESCRIPTOR.message_types_by_name['VerticaSpec']
_VICTOROPSPEC = DESCRIPTOR.message_types_by_name['VictorOpSpec']
_VIRTUALBUCKET = DESCRIPTOR.message_types_by_name['VirtualBucket']
_VIRTUALBUCKETCONDITION = DESCRIPTOR.message_types_by_name['VirtualBucketCondition']
_VIRTUALBUCKETLIST = DESCRIPTOR.message_types_by_name['VirtualBucketList']
_VIRTUALBUCKETSPEC = DESCRIPTOR.message_types_by_name['VirtualBucketSpec']
_VIRTUALBUCKETSTATUS = DESCRIPTOR.message_types_by_name['VirtualBucketStatus']
_VIRTUALCLUSTER = DESCRIPTOR.message_types_by_name['VirtualCluster']
_VIRTUALCLUSTERAUTOSCALESPEC = DESCRIPTOR.message_types_by_name['VirtualClusterAutoScaleSpec']
_VIRTUALCLUSTERCONDITION = DESCRIPTOR.message_types_by_name['VirtualClusterCondition']
_VIRTUALCLUSTERLIST = DESCRIPTOR.message_types_by_name['VirtualClusterList']
_VIRTUALCLUSTERSPEC = DESCRIPTOR.message_types_by_name['VirtualClusterSpec']
_VIRTUALCLUSTERSTATUS = DESCRIPTOR.message_types_by_name['VirtualClusterStatus']
_VIRTUALVOLUME = DESCRIPTOR.message_types_by_name['VirtualVolume']
_VIRTUALVOLUMECONDITION = DESCRIPTOR.message_types_by_name['VirtualVolumeCondition']
_VIRTUALVOLUMELIST = DESCRIPTOR.message_types_by_name['VirtualVolumeList']
_VIRTUALVOLUMESPEC = DESCRIPTOR.message_types_by_name['VirtualVolumeSpec']
_VIRTUALVOLUMESTATUS = DESCRIPTOR.message_types_by_name['VirtualVolumeStatus']
_WEBHOOKSPEC = DESCRIPTOR.message_types_by_name['WebhookSpec']
_WEBHOOKSPEC_HEADERSENTRY = _WEBHOOKSPEC.nested_types_by_name['HeadersEntry']
Account = _reflection.GeneratedProtocolMessageType('Account', (_message.Message,), {
  'DESCRIPTOR' : _ACCOUNT,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Account)
  })
_sym_db.RegisterMessage(Account)

AccountCondition = _reflection.GeneratedProtocolMessageType('AccountCondition', (_message.Message,), {
  'DESCRIPTOR' : _ACCOUNTCONDITION,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountCondition)
  })
_sym_db.RegisterMessage(AccountCondition)

AccountList = _reflection.GeneratedProtocolMessageType('AccountList', (_message.Message,), {
  'DESCRIPTOR' : _ACCOUNTLIST,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountList)
  })
_sym_db.RegisterMessage(AccountList)

AccountSpec = _reflection.GeneratedProtocolMessageType('AccountSpec', (_message.Message,), {
  'DESCRIPTOR' : _ACCOUNTSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountSpec)
  })
_sym_db.RegisterMessage(AccountSpec)

AccountStatus = _reflection.GeneratedProtocolMessageType('AccountStatus', (_message.Message,), {
  'DESCRIPTOR' : _ACCOUNTSTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AccountStatus)
  })
_sym_db.RegisterMessage(AccountStatus)

Alert = _reflection.GeneratedProtocolMessageType('Alert', (_message.Message,), {
  'DESCRIPTOR' : _ALERT,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Alert)
  })
_sym_db.RegisterMessage(Alert)

AlertCondition = _reflection.GeneratedProtocolMessageType('AlertCondition', (_message.Message,), {
  'DESCRIPTOR' : _ALERTCONDITION,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertCondition)
  })
_sym_db.RegisterMessage(AlertCondition)

AlertList = _reflection.GeneratedProtocolMessageType('AlertList', (_message.Message,), {
  'DESCRIPTOR' : _ALERTLIST,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertList)
  })
_sym_db.RegisterMessage(AlertList)

AlertSpec = _reflection.GeneratedProtocolMessageType('AlertSpec', (_message.Message,), {

  'FieldsEntry' : _reflection.GeneratedProtocolMessageType('FieldsEntry', (_message.Message,), {
    'DESCRIPTOR' : _ALERTSPEC_FIELDSENTRY,
    '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
    # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec.FieldsEntry)
    })
  ,
  'DESCRIPTOR' : _ALERTSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertSpec)
  })
_sym_db.RegisterMessage(AlertSpec)
_sym_db.RegisterMessage(AlertSpec.FieldsEntry)

AlertStatus = _reflection.GeneratedProtocolMessageType('AlertStatus', (_message.Message,), {
  'DESCRIPTOR' : _ALERTSTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AlertStatus)
  })
_sym_db.RegisterMessage(AlertStatus)

AliCloudSpec = _reflection.GeneratedProtocolMessageType('AliCloudSpec', (_message.Message,), {
  'DESCRIPTOR' : _ALICLOUDSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AliCloudSpec)
  })
_sym_db.RegisterMessage(AliCloudSpec)

AmazonAthenaSpec = _reflection.GeneratedProtocolMessageType('AmazonAthenaSpec', (_message.Message,), {
  'DESCRIPTOR' : _AMAZONATHENASPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonAthenaSpec)
  })
_sym_db.RegisterMessage(AmazonAthenaSpec)

AmazonRedShiftSpec = _reflection.GeneratedProtocolMessageType('AmazonRedShiftSpec', (_message.Message,), {
  'DESCRIPTOR' : _AMAZONREDSHIFTSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AmazonRedShiftSpec)
  })
_sym_db.RegisterMessage(AmazonRedShiftSpec)

ApacheCassandraSpec = _reflection.GeneratedProtocolMessageType('ApacheCassandraSpec', (_message.Message,), {
  'DESCRIPTOR' : _APACHECASSANDRASPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheCassandraSpec)
  })
_sym_db.RegisterMessage(ApacheCassandraSpec)

ApacheDrillSpec = _reflection.GeneratedProtocolMessageType('ApacheDrillSpec', (_message.Message,), {
  'DESCRIPTOR' : _APACHEDRILLSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDrillSpec)
  })
_sym_db.RegisterMessage(ApacheDrillSpec)

ApacheDruidSpec = _reflection.GeneratedProtocolMessageType('ApacheDruidSpec', (_message.Message,), {
  'DESCRIPTOR' : _APACHEDRUIDSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheDruidSpec)
  })
_sym_db.RegisterMessage(ApacheDruidSpec)

ApacheHiveSpec = _reflection.GeneratedProtocolMessageType('ApacheHiveSpec', (_message.Message,), {
  'DESCRIPTOR' : _APACHEHIVESPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheHiveSpec)
  })
_sym_db.RegisterMessage(ApacheHiveSpec)

ApacheSparkSpec = _reflection.GeneratedProtocolMessageType('ApacheSparkSpec', (_message.Message,), {
  'DESCRIPTOR' : _APACHESPARKSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApacheSparkSpec)
  })
_sym_db.RegisterMessage(ApacheSparkSpec)

ApiToken = _reflection.GeneratedProtocolMessageType('ApiToken', (_message.Message,), {
  'DESCRIPTOR' : _APITOKEN,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApiToken)
  })
_sym_db.RegisterMessage(ApiToken)

ApiTokenCondition = _reflection.GeneratedProtocolMessageType('ApiTokenCondition', (_message.Message,), {
  'DESCRIPTOR' : _APITOKENCONDITION,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApiTokenCondition)
  })
_sym_db.RegisterMessage(ApiTokenCondition)

ApiTokenList = _reflection.GeneratedProtocolMessageType('ApiTokenList', (_message.Message,), {
  'DESCRIPTOR' : _APITOKENLIST,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApiTokenList)
  })
_sym_db.RegisterMessage(ApiTokenList)

ApiTokenSpec = _reflection.GeneratedProtocolMessageType('ApiTokenSpec', (_message.Message,), {
  'DESCRIPTOR' : _APITOKENSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApiTokenSpec)
  })
_sym_db.RegisterMessage(ApiTokenSpec)

ApiTokenStatus = _reflection.GeneratedProtocolMessageType('ApiTokenStatus', (_message.Message,), {
  'DESCRIPTOR' : _APITOKENSTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ApiTokenStatus)
  })
_sym_db.RegisterMessage(ApiTokenStatus)

Attachment = _reflection.GeneratedProtocolMessageType('Attachment', (_message.Message,), {
  'DESCRIPTOR' : _ATTACHMENT,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Attachment)
  })
_sym_db.RegisterMessage(Attachment)

AttachmentCondition = _reflection.GeneratedProtocolMessageType('AttachmentCondition', (_message.Message,), {
  'DESCRIPTOR' : _ATTACHMENTCONDITION,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentCondition)
  })
_sym_db.RegisterMessage(AttachmentCondition)

AttachmentList = _reflection.GeneratedProtocolMessageType('AttachmentList', (_message.Message,), {
  'DESCRIPTOR' : _ATTACHMENTLIST,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentList)
  })
_sym_db.RegisterMessage(AttachmentList)

AttachmentSpec = _reflection.GeneratedProtocolMessageType('AttachmentSpec', (_message.Message,), {
  'DESCRIPTOR' : _ATTACHMENTSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentSpec)
  })
_sym_db.RegisterMessage(AttachmentSpec)

AttachmentStatus = _reflection.GeneratedProtocolMessageType('AttachmentStatus', (_message.Message,), {
  'DESCRIPTOR' : _ATTACHMENTSTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AttachmentStatus)
  })
_sym_db.RegisterMessage(AttachmentStatus)

AvatarSpec = _reflection.GeneratedProtocolMessageType('AvatarSpec', (_message.Message,), {
  'DESCRIPTOR' : _AVATARSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AvatarSpec)
  })
_sym_db.RegisterMessage(AvatarSpec)

AwsS3Spec = _reflection.GeneratedProtocolMessageType('AwsS3Spec', (_message.Message,), {
  'DESCRIPTOR' : _AWSS3SPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AwsS3Spec)
  })
_sym_db.RegisterMessage(AwsS3Spec)

AzureSQLDatabaseSpec = _reflection.GeneratedProtocolMessageType('AzureSQLDatabaseSpec', (_message.Message,), {
  'DESCRIPTOR' : _AZURESQLDATABASESPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureSQLDatabaseSpec)
  })
_sym_db.RegisterMessage(AzureSQLDatabaseSpec)

AzureStorageSpec = _reflection.GeneratedProtocolMessageType('AzureStorageSpec', (_message.Message,), {
  'DESCRIPTOR' : _AZURESTORAGESPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.AzureStorageSpec)
  })
_sym_db.RegisterMessage(AzureStorageSpec)

BitbucketSpec = _reflection.GeneratedProtocolMessageType('BitbucketSpec', (_message.Message,), {
  'DESCRIPTOR' : _BITBUCKETSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BitbucketSpec)
  })
_sym_db.RegisterMessage(BitbucketSpec)

BoxSpec = _reflection.GeneratedProtocolMessageType('BoxSpec', (_message.Message,), {
  'DESCRIPTOR' : _BOXSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BoxSpec)
  })
_sym_db.RegisterMessage(BoxSpec)

BucketResourceQuotas = _reflection.GeneratedProtocolMessageType('BucketResourceQuotas', (_message.Message,), {
  'DESCRIPTOR' : _BUCKETRESOURCEQUOTAS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.BucketResourceQuotas)
  })
_sym_db.RegisterMessage(BucketResourceQuotas)

ClickHouseSpec = _reflection.GeneratedProtocolMessageType('ClickHouseSpec', (_message.Message,), {
  'DESCRIPTOR' : _CLICKHOUSESPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ClickHouseSpec)
  })
_sym_db.RegisterMessage(ClickHouseSpec)

CockroachDBSpec = _reflection.GeneratedProtocolMessageType('CockroachDBSpec', (_message.Message,), {
  'DESCRIPTOR' : _COCKROACHDBSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CockroachDBSpec)
  })
_sym_db.RegisterMessage(CockroachDBSpec)

Commit = _reflection.GeneratedProtocolMessageType('Commit', (_message.Message,), {
  'DESCRIPTOR' : _COMMIT,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Commit)
  })
_sym_db.RegisterMessage(Commit)

CommitCondition = _reflection.GeneratedProtocolMessageType('CommitCondition', (_message.Message,), {
  'DESCRIPTOR' : _COMMITCONDITION,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CommitCondition)
  })
_sym_db.RegisterMessage(CommitCondition)

CommitList = _reflection.GeneratedProtocolMessageType('CommitList', (_message.Message,), {
  'DESCRIPTOR' : _COMMITLIST,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CommitList)
  })
_sym_db.RegisterMessage(CommitList)

CommitSpec = _reflection.GeneratedProtocolMessageType('CommitSpec', (_message.Message,), {
  'DESCRIPTOR' : _COMMITSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CommitSpec)
  })
_sym_db.RegisterMessage(CommitSpec)

CommitStatus = _reflection.GeneratedProtocolMessageType('CommitStatus', (_message.Message,), {
  'DESCRIPTOR' : _COMMITSTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CommitStatus)
  })
_sym_db.RegisterMessage(CommitStatus)

Connection = _reflection.GeneratedProtocolMessageType('Connection', (_message.Message,), {
  'DESCRIPTOR' : _CONNECTION,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Connection)
  })
_sym_db.RegisterMessage(Connection)

ConnectionCondition = _reflection.GeneratedProtocolMessageType('ConnectionCondition', (_message.Message,), {
  'DESCRIPTOR' : _CONNECTIONCONDITION,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionCondition)
  })
_sym_db.RegisterMessage(ConnectionCondition)

ConnectionList = _reflection.GeneratedProtocolMessageType('ConnectionList', (_message.Message,), {
  'DESCRIPTOR' : _CONNECTIONLIST,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionList)
  })
_sym_db.RegisterMessage(ConnectionList)

ConnectionSpec = _reflection.GeneratedProtocolMessageType('ConnectionSpec', (_message.Message,), {
  'DESCRIPTOR' : _CONNECTIONSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionSpec)
  })
_sym_db.RegisterMessage(ConnectionSpec)

ConnectionStatus = _reflection.GeneratedProtocolMessageType('ConnectionStatus', (_message.Message,), {
  'DESCRIPTOR' : _CONNECTIONSTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ConnectionStatus)
  })
_sym_db.RegisterMessage(ConnectionStatus)

CouchbaseSpec = _reflection.GeneratedProtocolMessageType('CouchbaseSpec', (_message.Message,), {
  'DESCRIPTOR' : _COUCHBASESPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.CouchbaseSpec)
  })
_sym_db.RegisterMessage(CouchbaseSpec)

DB2Spec = _reflection.GeneratedProtocolMessageType('DB2Spec', (_message.Message,), {
  'DESCRIPTOR' : _DB2SPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DB2Spec)
  })
_sym_db.RegisterMessage(DB2Spec)

DigitalOceanSpec = _reflection.GeneratedProtocolMessageType('DigitalOceanSpec', (_message.Message,), {
  'DESCRIPTOR' : _DIGITALOCEANSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DigitalOceanSpec)
  })
_sym_db.RegisterMessage(DigitalOceanSpec)

DiscordSpec = _reflection.GeneratedProtocolMessageType('DiscordSpec', (_message.Message,), {

  'HeadersEntry' : _reflection.GeneratedProtocolMessageType('HeadersEntry', (_message.Message,), {
    'DESCRIPTOR' : _DISCORDSPEC_HEADERSENTRY,
    '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
    # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec.HeadersEntry)
    })
  ,
  'DESCRIPTOR' : _DISCORDSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DiscordSpec)
  })
_sym_db.RegisterMessage(DiscordSpec)
_sym_db.RegisterMessage(DiscordSpec.HeadersEntry)

DremioSpec = _reflection.GeneratedProtocolMessageType('DremioSpec', (_message.Message,), {
  'DESCRIPTOR' : _DREMIOSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DremioSpec)
  })
_sym_db.RegisterMessage(DremioSpec)

DropboxSpec = _reflection.GeneratedProtocolMessageType('DropboxSpec', (_message.Message,), {
  'DESCRIPTOR' : _DROPBOXSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.DropboxSpec)
  })
_sym_db.RegisterMessage(DropboxSpec)

ElasticSearchSpec = _reflection.GeneratedProtocolMessageType('ElasticSearchSpec', (_message.Message,), {
  'DESCRIPTOR' : _ELASTICSEARCHSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ElasticSearchSpec)
  })
_sym_db.RegisterMessage(ElasticSearchSpec)

ExasolSpec = _reflection.GeneratedProtocolMessageType('ExasolSpec', (_message.Message,), {
  'DESCRIPTOR' : _EXASOLSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ExasolSpec)
  })
_sym_db.RegisterMessage(ExasolSpec)

FTPSpec = _reflection.GeneratedProtocolMessageType('FTPSpec', (_message.Message,), {
  'DESCRIPTOR' : _FTPSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FTPSpec)
  })
_sym_db.RegisterMessage(FTPSpec)

FacebookSpec = _reflection.GeneratedProtocolMessageType('FacebookSpec', (_message.Message,), {
  'DESCRIPTOR' : _FACEBOOKSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FacebookSpec)
  })
_sym_db.RegisterMessage(FacebookSpec)

FtpSpec = _reflection.GeneratedProtocolMessageType('FtpSpec', (_message.Message,), {
  'DESCRIPTOR' : _FTPSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.FtpSpec)
  })
_sym_db.RegisterMessage(FtpSpec)

GcpBigQuerySpec = _reflection.GeneratedProtocolMessageType('GcpBigQuerySpec', (_message.Message,), {
  'DESCRIPTOR' : _GCPBIGQUERYSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpBigQuerySpec)
  })
_sym_db.RegisterMessage(GcpBigQuerySpec)

GcpSpannerSpec = _reflection.GeneratedProtocolMessageType('GcpSpannerSpec', (_message.Message,), {
  'DESCRIPTOR' : _GCPSPANNERSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpSpannerSpec)
  })
_sym_db.RegisterMessage(GcpSpannerSpec)

GcpStorageSpec = _reflection.GeneratedProtocolMessageType('GcpStorageSpec', (_message.Message,), {
  'DESCRIPTOR' : _GCPSTORAGESPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GcpStorageSpec)
  })
_sym_db.RegisterMessage(GcpStorageSpec)

GithubSpec = _reflection.GeneratedProtocolMessageType('GithubSpec', (_message.Message,), {
  'DESCRIPTOR' : _GITHUBSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GithubSpec)
  })
_sym_db.RegisterMessage(GithubSpec)

GitlabSpec = _reflection.GeneratedProtocolMessageType('GitlabSpec', (_message.Message,), {
  'DESCRIPTOR' : _GITLABSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GitlabSpec)
  })
_sym_db.RegisterMessage(GitlabSpec)

GoogleSheetsSpec = _reflection.GeneratedProtocolMessageType('GoogleSheetsSpec', (_message.Message,), {
  'DESCRIPTOR' : _GOOGLESHEETSSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GoogleSheetsSpec)
  })
_sym_db.RegisterMessage(GoogleSheetsSpec)

GreenPlumSpec = _reflection.GeneratedProtocolMessageType('GreenPlumSpec', (_message.Message,), {
  'DESCRIPTOR' : _GREENPLUMSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.GreenPlumSpec)
  })
_sym_db.RegisterMessage(GreenPlumSpec)

HetznerSpec = _reflection.GeneratedProtocolMessageType('HetznerSpec', (_message.Message,), {
  'DESCRIPTOR' : _HETZNERSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HetznerSpec)
  })
_sym_db.RegisterMessage(HetznerSpec)

HipchatSpec = _reflection.GeneratedProtocolMessageType('HipchatSpec', (_message.Message,), {
  'DESCRIPTOR' : _HIPCHATSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.HipchatSpec)
  })
_sym_db.RegisterMessage(HipchatSpec)

ImageRegistrySpec = _reflection.GeneratedProtocolMessageType('ImageRegistrySpec', (_message.Message,), {
  'DESCRIPTOR' : _IMAGEREGISTRYSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ImageRegistrySpec)
  })
_sym_db.RegisterMessage(ImageRegistrySpec)

InformixSpec = _reflection.GeneratedProtocolMessageType('InformixSpec', (_message.Message,), {
  'DESCRIPTOR' : _INFORMIXSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.InformixSpec)
  })
_sym_db.RegisterMessage(InformixSpec)

IngressSpec = _reflection.GeneratedProtocolMessageType('IngressSpec', (_message.Message,), {
  'DESCRIPTOR' : _INGRESSSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.IngressSpec)
  })
_sym_db.RegisterMessage(IngressSpec)

KafkaSpec = _reflection.GeneratedProtocolMessageType('KafkaSpec', (_message.Message,), {
  'DESCRIPTOR' : _KAFKASPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.KafkaSpec)
  })
_sym_db.RegisterMessage(KafkaSpec)

Lab = _reflection.GeneratedProtocolMessageType('Lab', (_message.Message,), {
  'DESCRIPTOR' : _LAB,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Lab)
  })
_sym_db.RegisterMessage(Lab)

LabCondition = _reflection.GeneratedProtocolMessageType('LabCondition', (_message.Message,), {
  'DESCRIPTOR' : _LABCONDITION,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabCondition)
  })
_sym_db.RegisterMessage(LabCondition)

LabList = _reflection.GeneratedProtocolMessageType('LabList', (_message.Message,), {
  'DESCRIPTOR' : _LABLIST,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabList)
  })
_sym_db.RegisterMessage(LabList)

LabSpec = _reflection.GeneratedProtocolMessageType('LabSpec', (_message.Message,), {
  'DESCRIPTOR' : _LABSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabSpec)
  })
_sym_db.RegisterMessage(LabSpec)

LabStatus = _reflection.GeneratedProtocolMessageType('LabStatus', (_message.Message,), {
  'DESCRIPTOR' : _LABSTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LabStatus)
  })
_sym_db.RegisterMessage(LabStatus)

License = _reflection.GeneratedProtocolMessageType('License', (_message.Message,), {
  'DESCRIPTOR' : _LICENSE,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.License)
  })
_sym_db.RegisterMessage(License)

LicenseCondition = _reflection.GeneratedProtocolMessageType('LicenseCondition', (_message.Message,), {
  'DESCRIPTOR' : _LICENSECONDITION,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseCondition)
  })
_sym_db.RegisterMessage(LicenseCondition)

LicenseList = _reflection.GeneratedProtocolMessageType('LicenseList', (_message.Message,), {
  'DESCRIPTOR' : _LICENSELIST,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseList)
  })
_sym_db.RegisterMessage(LicenseList)

LicenseSpec = _reflection.GeneratedProtocolMessageType('LicenseSpec', (_message.Message,), {
  'DESCRIPTOR' : _LICENSESPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseSpec)
  })
_sym_db.RegisterMessage(LicenseSpec)

LicenseStatus = _reflection.GeneratedProtocolMessageType('LicenseStatus', (_message.Message,), {
  'DESCRIPTOR' : _LICENSESTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LicenseStatus)
  })
_sym_db.RegisterMessage(LicenseStatus)

LinodeSpec = _reflection.GeneratedProtocolMessageType('LinodeSpec', (_message.Message,), {
  'DESCRIPTOR' : _LINODESPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.LinodeSpec)
  })
_sym_db.RegisterMessage(LinodeSpec)

MSSqlServerSpec = _reflection.GeneratedProtocolMessageType('MSSqlServerSpec', (_message.Message,), {
  'DESCRIPTOR' : _MSSQLSERVERSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSSqlServerSpec)
  })
_sym_db.RegisterMessage(MSSqlServerSpec)

MSTeamSpec = _reflection.GeneratedProtocolMessageType('MSTeamSpec', (_message.Message,), {
  'DESCRIPTOR' : _MSTEAMSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MSTeamSpec)
  })
_sym_db.RegisterMessage(MSTeamSpec)

MattermostSpec = _reflection.GeneratedProtocolMessageType('MattermostSpec', (_message.Message,), {
  'DESCRIPTOR' : _MATTERMOSTSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MattermostSpec)
  })
_sym_db.RegisterMessage(MattermostSpec)

MinioSpec = _reflection.GeneratedProtocolMessageType('MinioSpec', (_message.Message,), {
  'DESCRIPTOR' : _MINIOSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MinioSpec)
  })
_sym_db.RegisterMessage(MinioSpec)

ModelaSystem = _reflection.GeneratedProtocolMessageType('ModelaSystem', (_message.Message,), {
  'DESCRIPTOR' : _MODELASYSTEM,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystem)
  })
_sym_db.RegisterMessage(ModelaSystem)

ModelaSystemCondition = _reflection.GeneratedProtocolMessageType('ModelaSystemCondition', (_message.Message,), {
  'DESCRIPTOR' : _MODELASYSTEMCONDITION,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemCondition)
  })
_sym_db.RegisterMessage(ModelaSystemCondition)

ModelaSystemList = _reflection.GeneratedProtocolMessageType('ModelaSystemList', (_message.Message,), {
  'DESCRIPTOR' : _MODELASYSTEMLIST,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemList)
  })
_sym_db.RegisterMessage(ModelaSystemList)

ModelaSystemSpec = _reflection.GeneratedProtocolMessageType('ModelaSystemSpec', (_message.Message,), {
  'DESCRIPTOR' : _MODELASYSTEMSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemSpec)
  })
_sym_db.RegisterMessage(ModelaSystemSpec)

ModelaSystemStatus = _reflection.GeneratedProtocolMessageType('ModelaSystemStatus', (_message.Message,), {
  'DESCRIPTOR' : _MODELASYSTEMSTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ModelaSystemStatus)
  })
_sym_db.RegisterMessage(ModelaSystemStatus)

MongoDbSpec = _reflection.GeneratedProtocolMessageType('MongoDbSpec', (_message.Message,), {
  'DESCRIPTOR' : _MONGODBSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MongoDbSpec)
  })
_sym_db.RegisterMessage(MongoDbSpec)

MySqlSpec = _reflection.GeneratedProtocolMessageType('MySqlSpec', (_message.Message,), {
  'DESCRIPTOR' : _MYSQLSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.MySqlSpec)
  })
_sym_db.RegisterMessage(MySqlSpec)

Neo4JSpec = _reflection.GeneratedProtocolMessageType('Neo4JSpec', (_message.Message,), {
  'DESCRIPTOR' : _NEO4JSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Neo4JSpec)
  })
_sym_db.RegisterMessage(Neo4JSpec)

NotificationChannelSpec = _reflection.GeneratedProtocolMessageType('NotificationChannelSpec', (_message.Message,), {
  'DESCRIPTOR' : _NOTIFICATIONCHANNELSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelSpec)
  })
_sym_db.RegisterMessage(NotificationChannelSpec)

NotificationChannelStatus = _reflection.GeneratedProtocolMessageType('NotificationChannelStatus', (_message.Message,), {
  'DESCRIPTOR' : _NOTIFICATIONCHANNELSTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotificationChannelStatus)
  })
_sym_db.RegisterMessage(NotificationChannelStatus)

Notifier = _reflection.GeneratedProtocolMessageType('Notifier', (_message.Message,), {
  'DESCRIPTOR' : _NOTIFIER,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Notifier)
  })
_sym_db.RegisterMessage(Notifier)

NotifierCondition = _reflection.GeneratedProtocolMessageType('NotifierCondition', (_message.Message,), {
  'DESCRIPTOR' : _NOTIFIERCONDITION,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierCondition)
  })
_sym_db.RegisterMessage(NotifierCondition)

NotifierList = _reflection.GeneratedProtocolMessageType('NotifierList', (_message.Message,), {
  'DESCRIPTOR' : _NOTIFIERLIST,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierList)
  })
_sym_db.RegisterMessage(NotifierList)

NotifierSpec = _reflection.GeneratedProtocolMessageType('NotifierSpec', (_message.Message,), {
  'DESCRIPTOR' : _NOTIFIERSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierSpec)
  })
_sym_db.RegisterMessage(NotifierSpec)

NotifierStatus = _reflection.GeneratedProtocolMessageType('NotifierStatus', (_message.Message,), {
  'DESCRIPTOR' : _NOTIFIERSTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.NotifierStatus)
  })
_sym_db.RegisterMessage(NotifierStatus)

OdbcSpec = _reflection.GeneratedProtocolMessageType('OdbcSpec', (_message.Message,), {
  'DESCRIPTOR' : _ODBCSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OdbcSpec)
  })
_sym_db.RegisterMessage(OdbcSpec)

OpenstackSpec = _reflection.GeneratedProtocolMessageType('OpenstackSpec', (_message.Message,), {
  'DESCRIPTOR' : _OPENSTACKSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpenstackSpec)
  })
_sym_db.RegisterMessage(OpenstackSpec)

OpsgenieSpec = _reflection.GeneratedProtocolMessageType('OpsgenieSpec', (_message.Message,), {
  'DESCRIPTOR' : _OPSGENIESPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OpsgenieSpec)
  })
_sym_db.RegisterMessage(OpsgenieSpec)

OracleSpec = _reflection.GeneratedProtocolMessageType('OracleSpec', (_message.Message,), {
  'DESCRIPTOR' : _ORACLESPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OracleSpec)
  })
_sym_db.RegisterMessage(OracleSpec)

OvhSpec = _reflection.GeneratedProtocolMessageType('OvhSpec', (_message.Message,), {
  'DESCRIPTOR' : _OVHSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.OvhSpec)
  })
_sym_db.RegisterMessage(OvhSpec)

PagerDutySpec = _reflection.GeneratedProtocolMessageType('PagerDutySpec', (_message.Message,), {
  'DESCRIPTOR' : _PAGERDUTYSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PagerDutySpec)
  })
_sym_db.RegisterMessage(PagerDutySpec)

PostgresSQLSpec = _reflection.GeneratedProtocolMessageType('PostgresSQLSpec', (_message.Message,), {
  'DESCRIPTOR' : _POSTGRESSQLSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PostgresSQLSpec)
  })
_sym_db.RegisterMessage(PostgresSQLSpec)

PrestoSpec = _reflection.GeneratedProtocolMessageType('PrestoSpec', (_message.Message,), {
  'DESCRIPTOR' : _PRESTOSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PrestoSpec)
  })
_sym_db.RegisterMessage(PrestoSpec)

PushoverSpec = _reflection.GeneratedProtocolMessageType('PushoverSpec', (_message.Message,), {
  'DESCRIPTOR' : _PUSHOVERSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.PushoverSpec)
  })
_sym_db.RegisterMessage(PushoverSpec)

RabbitMQSpec = _reflection.GeneratedProtocolMessageType('RabbitMQSpec', (_message.Message,), {
  'DESCRIPTOR' : _RABBITMQSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RabbitMQSpec)
  })
_sym_db.RegisterMessage(RabbitMQSpec)

ResourceLimitSpec = _reflection.GeneratedProtocolMessageType('ResourceLimitSpec', (_message.Message,), {
  'DESCRIPTOR' : _RESOURCELIMITSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ResourceLimitSpec)
  })
_sym_db.RegisterMessage(ResourceLimitSpec)

RuleSpec = _reflection.GeneratedProtocolMessageType('RuleSpec', (_message.Message,), {
  'DESCRIPTOR' : _RULESPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.RuleSpec)
  })
_sym_db.RegisterMessage(RuleSpec)

SAPHanaSpec = _reflection.GeneratedProtocolMessageType('SAPHanaSpec', (_message.Message,), {
  'DESCRIPTOR' : _SAPHANASPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SAPHanaSpec)
  })
_sym_db.RegisterMessage(SAPHanaSpec)

SFTPSpec = _reflection.GeneratedProtocolMessageType('SFTPSpec', (_message.Message,), {
  'DESCRIPTOR' : _SFTPSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFTPSpec)
  })
_sym_db.RegisterMessage(SFTPSpec)

SFtpSpec = _reflection.GeneratedProtocolMessageType('SFtpSpec', (_message.Message,), {
  'DESCRIPTOR' : _SFTPSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SFtpSpec)
  })
_sym_db.RegisterMessage(SFtpSpec)

Scope = _reflection.GeneratedProtocolMessageType('Scope', (_message.Message,), {
  'DESCRIPTOR' : _SCOPE,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Scope)
  })
_sym_db.RegisterMessage(Scope)

ServingSite = _reflection.GeneratedProtocolMessageType('ServingSite', (_message.Message,), {
  'DESCRIPTOR' : _SERVINGSITE,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSite)
  })
_sym_db.RegisterMessage(ServingSite)

ServingSiteCondition = _reflection.GeneratedProtocolMessageType('ServingSiteCondition', (_message.Message,), {
  'DESCRIPTOR' : _SERVINGSITECONDITION,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteCondition)
  })
_sym_db.RegisterMessage(ServingSiteCondition)

ServingSiteList = _reflection.GeneratedProtocolMessageType('ServingSiteList', (_message.Message,), {
  'DESCRIPTOR' : _SERVINGSITELIST,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteList)
  })
_sym_db.RegisterMessage(ServingSiteList)

ServingSiteSpec = _reflection.GeneratedProtocolMessageType('ServingSiteSpec', (_message.Message,), {
  'DESCRIPTOR' : _SERVINGSITESPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteSpec)
  })
_sym_db.RegisterMessage(ServingSiteSpec)

ServingSiteStatus = _reflection.GeneratedProtocolMessageType('ServingSiteStatus', (_message.Message,), {
  'DESCRIPTOR' : _SERVINGSITESTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.ServingSiteStatus)
  })
_sym_db.RegisterMessage(ServingSiteStatus)

SingleStoreSpec = _reflection.GeneratedProtocolMessageType('SingleStoreSpec', (_message.Message,), {
  'DESCRIPTOR' : _SINGLESTORESPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SingleStoreSpec)
  })
_sym_db.RegisterMessage(SingleStoreSpec)

SlackSpec = _reflection.GeneratedProtocolMessageType('SlackSpec', (_message.Message,), {
  'DESCRIPTOR' : _SLACKSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SlackSpec)
  })
_sym_db.RegisterMessage(SlackSpec)

SmtpSpec = _reflection.GeneratedProtocolMessageType('SmtpSpec', (_message.Message,), {
  'DESCRIPTOR' : _SMTPSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SmtpSpec)
  })
_sym_db.RegisterMessage(SmtpSpec)

SnowflakeSpec = _reflection.GeneratedProtocolMessageType('SnowflakeSpec', (_message.Message,), {
  'DESCRIPTOR' : _SNOWFLAKESPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SnowflakeSpec)
  })
_sym_db.RegisterMessage(SnowflakeSpec)

SqliteSpec = _reflection.GeneratedProtocolMessageType('SqliteSpec', (_message.Message,), {
  'DESCRIPTOR' : _SQLITESPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SqliteSpec)
  })
_sym_db.RegisterMessage(SqliteSpec)

SybaseSpec = _reflection.GeneratedProtocolMessageType('SybaseSpec', (_message.Message,), {
  'DESCRIPTOR' : _SYBASESPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.SybaseSpec)
  })
_sym_db.RegisterMessage(SybaseSpec)

Tenant = _reflection.GeneratedProtocolMessageType('Tenant', (_message.Message,), {
  'DESCRIPTOR' : _TENANT,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.Tenant)
  })
_sym_db.RegisterMessage(Tenant)

TenantCondition = _reflection.GeneratedProtocolMessageType('TenantCondition', (_message.Message,), {
  'DESCRIPTOR' : _TENANTCONDITION,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantCondition)
  })
_sym_db.RegisterMessage(TenantCondition)

TenantList = _reflection.GeneratedProtocolMessageType('TenantList', (_message.Message,), {
  'DESCRIPTOR' : _TENANTLIST,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantList)
  })
_sym_db.RegisterMessage(TenantList)

TenantSpec = _reflection.GeneratedProtocolMessageType('TenantSpec', (_message.Message,), {
  'DESCRIPTOR' : _TENANTSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantSpec)
  })
_sym_db.RegisterMessage(TenantSpec)

TenantStatus = _reflection.GeneratedProtocolMessageType('TenantStatus', (_message.Message,), {
  'DESCRIPTOR' : _TENANTSTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TenantStatus)
  })
_sym_db.RegisterMessage(TenantStatus)

TeradataSpec = _reflection.GeneratedProtocolMessageType('TeradataSpec', (_message.Message,), {
  'DESCRIPTOR' : _TERADATASPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TeradataSpec)
  })
_sym_db.RegisterMessage(TeradataSpec)

TwitterSpec = _reflection.GeneratedProtocolMessageType('TwitterSpec', (_message.Message,), {
  'DESCRIPTOR' : _TWITTERSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.TwitterSpec)
  })
_sym_db.RegisterMessage(TwitterSpec)

UserRoleClass = _reflection.GeneratedProtocolMessageType('UserRoleClass', (_message.Message,), {
  'DESCRIPTOR' : _USERROLECLASS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClass)
  })
_sym_db.RegisterMessage(UserRoleClass)

UserRoleClassList = _reflection.GeneratedProtocolMessageType('UserRoleClassList', (_message.Message,), {
  'DESCRIPTOR' : _USERROLECLASSLIST,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassList)
  })
_sym_db.RegisterMessage(UserRoleClassList)

UserRoleClassSpec = _reflection.GeneratedProtocolMessageType('UserRoleClassSpec', (_message.Message,), {
  'DESCRIPTOR' : _USERROLECLASSSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.UserRoleClassSpec)
  })
_sym_db.RegisterMessage(UserRoleClassSpec)

VerticaSpec = _reflection.GeneratedProtocolMessageType('VerticaSpec', (_message.Message,), {
  'DESCRIPTOR' : _VERTICASPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VerticaSpec)
  })
_sym_db.RegisterMessage(VerticaSpec)

VictorOpSpec = _reflection.GeneratedProtocolMessageType('VictorOpSpec', (_message.Message,), {
  'DESCRIPTOR' : _VICTOROPSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VictorOpSpec)
  })
_sym_db.RegisterMessage(VictorOpSpec)

VirtualBucket = _reflection.GeneratedProtocolMessageType('VirtualBucket', (_message.Message,), {
  'DESCRIPTOR' : _VIRTUALBUCKET,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucket)
  })
_sym_db.RegisterMessage(VirtualBucket)

VirtualBucketCondition = _reflection.GeneratedProtocolMessageType('VirtualBucketCondition', (_message.Message,), {
  'DESCRIPTOR' : _VIRTUALBUCKETCONDITION,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketCondition)
  })
_sym_db.RegisterMessage(VirtualBucketCondition)

VirtualBucketList = _reflection.GeneratedProtocolMessageType('VirtualBucketList', (_message.Message,), {
  'DESCRIPTOR' : _VIRTUALBUCKETLIST,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketList)
  })
_sym_db.RegisterMessage(VirtualBucketList)

VirtualBucketSpec = _reflection.GeneratedProtocolMessageType('VirtualBucketSpec', (_message.Message,), {
  'DESCRIPTOR' : _VIRTUALBUCKETSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketSpec)
  })
_sym_db.RegisterMessage(VirtualBucketSpec)

VirtualBucketStatus = _reflection.GeneratedProtocolMessageType('VirtualBucketStatus', (_message.Message,), {
  'DESCRIPTOR' : _VIRTUALBUCKETSTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualBucketStatus)
  })
_sym_db.RegisterMessage(VirtualBucketStatus)

VirtualCluster = _reflection.GeneratedProtocolMessageType('VirtualCluster', (_message.Message,), {
  'DESCRIPTOR' : _VIRTUALCLUSTER,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualCluster)
  })
_sym_db.RegisterMessage(VirtualCluster)

VirtualClusterAutoScaleSpec = _reflection.GeneratedProtocolMessageType('VirtualClusterAutoScaleSpec', (_message.Message,), {
  'DESCRIPTOR' : _VIRTUALCLUSTERAUTOSCALESPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterAutoScaleSpec)
  })
_sym_db.RegisterMessage(VirtualClusterAutoScaleSpec)

VirtualClusterCondition = _reflection.GeneratedProtocolMessageType('VirtualClusterCondition', (_message.Message,), {
  'DESCRIPTOR' : _VIRTUALCLUSTERCONDITION,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterCondition)
  })
_sym_db.RegisterMessage(VirtualClusterCondition)

VirtualClusterList = _reflection.GeneratedProtocolMessageType('VirtualClusterList', (_message.Message,), {
  'DESCRIPTOR' : _VIRTUALCLUSTERLIST,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterList)
  })
_sym_db.RegisterMessage(VirtualClusterList)

VirtualClusterSpec = _reflection.GeneratedProtocolMessageType('VirtualClusterSpec', (_message.Message,), {
  'DESCRIPTOR' : _VIRTUALCLUSTERSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterSpec)
  })
_sym_db.RegisterMessage(VirtualClusterSpec)

VirtualClusterStatus = _reflection.GeneratedProtocolMessageType('VirtualClusterStatus', (_message.Message,), {
  'DESCRIPTOR' : _VIRTUALCLUSTERSTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualClusterStatus)
  })
_sym_db.RegisterMessage(VirtualClusterStatus)

VirtualVolume = _reflection.GeneratedProtocolMessageType('VirtualVolume', (_message.Message,), {
  'DESCRIPTOR' : _VIRTUALVOLUME,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualVolume)
  })
_sym_db.RegisterMessage(VirtualVolume)

VirtualVolumeCondition = _reflection.GeneratedProtocolMessageType('VirtualVolumeCondition', (_message.Message,), {
  'DESCRIPTOR' : _VIRTUALVOLUMECONDITION,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualVolumeCondition)
  })
_sym_db.RegisterMessage(VirtualVolumeCondition)

VirtualVolumeList = _reflection.GeneratedProtocolMessageType('VirtualVolumeList', (_message.Message,), {
  'DESCRIPTOR' : _VIRTUALVOLUMELIST,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualVolumeList)
  })
_sym_db.RegisterMessage(VirtualVolumeList)

VirtualVolumeSpec = _reflection.GeneratedProtocolMessageType('VirtualVolumeSpec', (_message.Message,), {
  'DESCRIPTOR' : _VIRTUALVOLUMESPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualVolumeSpec)
  })
_sym_db.RegisterMessage(VirtualVolumeSpec)

VirtualVolumeStatus = _reflection.GeneratedProtocolMessageType('VirtualVolumeStatus', (_message.Message,), {
  'DESCRIPTOR' : _VIRTUALVOLUMESTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.VirtualVolumeStatus)
  })
_sym_db.RegisterMessage(VirtualVolumeStatus)

WebhookSpec = _reflection.GeneratedProtocolMessageType('WebhookSpec', (_message.Message,), {

  'HeadersEntry' : _reflection.GeneratedProtocolMessageType('HeadersEntry', (_message.Message,), {
    'DESCRIPTOR' : _WEBHOOKSPEC_HEADERSENTRY,
    '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
    # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec.HeadersEntry)
    })
  ,
  'DESCRIPTOR' : _WEBHOOKSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.infra.v1alpha1.WebhookSpec)
  })
_sym_db.RegisterMessage(WebhookSpec)
_sym_db.RegisterMessage(WebhookSpec.HeadersEntry)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z5github.com/metaprov/modelaapi/pkg/apis/infra/v1alpha1'
  _ALERTSPEC_FIELDSENTRY._options = None
  _ALERTSPEC_FIELDSENTRY._serialized_options = b'8\001'
  _DISCORDSPEC_HEADERSENTRY._options = None
  _DISCORDSPEC_HEADERSENTRY._serialized_options = b'8\001'
  _WEBHOOKSPEC_HEADERSENTRY._options = None
  _WEBHOOKSPEC_HEADERSENTRY._serialized_options = b'8\001'
  _ACCOUNT._serialized_start=451
  _ACCOUNT._serialized_end=696
  _ACCOUNTCONDITION._serialized_start=699
  _ACCOUNTCONDITION._serialized_end=852
  _ACCOUNTLIST._serialized_start=855
  _ACCOUNTLIST._serialized_end=1013
  _ACCOUNTSPEC._serialized_start=1016
  _ACCOUNTSPEC._serialized_end=1410
  _ACCOUNTSTATUS._serialized_start=1413
  _ACCOUNTSTATUS._serialized_end=1661
  _ALERT._serialized_start=1664
  _ALERT._serialized_end=1903
  _ALERTCONDITION._serialized_start=1906
  _ALERTCONDITION._serialized_end=2057
  _ALERTLIST._serialized_start=2060
  _ALERTLIST._serialized_end=2214
  _ALERTSPEC._serialized_start=2217
  _ALERTSPEC._serialized_end=2608
  _ALERTSPEC_FIELDSENTRY._serialized_start=2563
  _ALERTSPEC_FIELDSENTRY._serialized_end=2608
  _ALERTSTATUS._serialized_start=2611
  _ALERTSTATUS._serialized_end=2926
  _ALICLOUDSPEC._serialized_start=2928
  _ALICLOUDSPEC._serialized_end=3010
  _AMAZONATHENASPEC._serialized_start=3012
  _AMAZONATHENASPEC._serialized_end=3113
  _AMAZONREDSHIFTSPEC._serialized_start=3115
  _AMAZONREDSHIFTSPEC._serialized_end=3230
  _APACHECASSANDRASPEC._serialized_start=3232
  _APACHECASSANDRASPEC._serialized_end=3348
  _APACHEDRILLSPEC._serialized_start=3350
  _APACHEDRILLSPEC._serialized_end=3462
  _APACHEDRUIDSPEC._serialized_start=3464
  _APACHEDRUIDSPEC._serialized_end=3576
  _APACHEHIVESPEC._serialized_start=3578
  _APACHEHIVESPEC._serialized_end=3687
  _APACHESPARKSPEC._serialized_start=3689
  _APACHESPARKSPEC._serialized_end=3799
  _APITOKEN._serialized_start=3802
  _APITOKEN._serialized_end=4050
  _APITOKENCONDITION._serialized_start=4053
  _APITOKENCONDITION._serialized_end=4207
  _APITOKENLIST._serialized_start=4210
  _APITOKENLIST._serialized_end=4370
  _APITOKENSPEC._serialized_start=4373
  _APITOKENSPEC._serialized_end=4501
  _APITOKENSTATUS._serialized_start=4504
  _APITOKENSTATUS._serialized_end=4707
  _ATTACHMENT._serialized_start=4710
  _ATTACHMENT._serialized_end=4964
  _ATTACHMENTCONDITION._serialized_start=4967
  _ATTACHMENTCONDITION._serialized_end=5123
  _ATTACHMENTLIST._serialized_start=5126
  _ATTACHMENTLIST._serialized_end=5290
  _ATTACHMENTSPEC._serialized_start=5293
  _ATTACHMENTSPEC._serialized_end=5491
  _ATTACHMENTSTATUS._serialized_start=5494
  _ATTACHMENTSTATUS._serialized_end=5804
  _AVATARSPEC._serialized_start=5806
  _AVATARSPEC._serialized_end=5852
  _AWSS3SPEC._serialized_start=5854
  _AWSS3SPEC._serialized_end=5926
  _AZURESQLDATABASESPEC._serialized_start=5928
  _AZURESQLDATABASESPEC._serialized_end=6045
  _AZURESTORAGESPEC._serialized_start=6047
  _AZURESTORAGESPEC._serialized_end=6108
  _BITBUCKETSPEC._serialized_start=6110
  _BITBUCKETSPEC._serialized_end=6171
  _BOXSPEC._serialized_start=6173
  _BOXSPEC._serialized_end=6197
  _BUCKETRESOURCEQUOTAS._serialized_start=6199
  _BUCKETRESOURCEQUOTAS._serialized_end=6305
  _CLICKHOUSESPEC._serialized_start=6307
  _CLICKHOUSESPEC._serialized_end=6418
  _COCKROACHDBSPEC._serialized_start=6420
  _COCKROACHDBSPEC._serialized_end=6532
  _COMMIT._serialized_start=6535
  _COMMIT._serialized_end=6777
  _COMMITCONDITION._serialized_start=6780
  _COMMITCONDITION._serialized_end=6932
  _COMMITLIST._serialized_start=6935
  _COMMITLIST._serialized_end=7091
  _COMMITSPEC._serialized_start=7094
  _COMMITSPEC._serialized_end=7250
  _COMMITSTATUS._serialized_start=7253
  _COMMITSTATUS._serialized_end=7570
  _CONNECTION._serialized_start=7573
  _CONNECTION._serialized_end=7827
  _CONNECTIONCONDITION._serialized_start=7830
  _CONNECTIONCONDITION._serialized_end=7986
  _CONNECTIONLIST._serialized_start=7989
  _CONNECTIONLIST._serialized_end=8153
  _CONNECTIONSPEC._serialized_start=8156
  _CONNECTIONSPEC._serialized_end=14206
  _CONNECTIONSTATUS._serialized_start=14209
  _CONNECTIONSTATUS._serialized_end=14463
  _COUCHBASESPEC._serialized_start=14466
  _COUCHBASESPEC._serialized_end=14599
  _DB2SPEC._serialized_start=14601
  _DB2SPEC._serialized_end=14705
  _DIGITALOCEANSPEC._serialized_start=14707
  _DIGITALOCEANSPEC._serialized_end=14815
  _DISCORDSPEC._serialized_start=14818
  _DISCORDSPEC._serialized_end=15039
  _DISCORDSPEC_HEADERSENTRY._serialized_start=14993
  _DISCORDSPEC_HEADERSENTRY._serialized_end=15039
  _DREMIOSPEC._serialized_start=15041
  _DREMIOSPEC._serialized_end=15148
  _DROPBOXSPEC._serialized_start=15150
  _DROPBOXSPEC._serialized_end=15178
  _ELASTICSEARCHSPEC._serialized_start=15180
  _ELASTICSEARCHSPEC._serialized_end=15292
  _EXASOLSPEC._serialized_start=15294
  _EXASOLSPEC._serialized_end=15383
  _FTPSPEC._serialized_start=15385
  _FTPSPEC._serialized_end=15489
  _FACEBOOKSPEC._serialized_start=15491
  _FACEBOOKSPEC._serialized_end=15520
  _FTPSPEC._serialized_start=15522
  _FTPSPEC._serialized_end=15595
  _GCPBIGQUERYSPEC._serialized_start=15598
  _GCPBIGQUERYSPEC._serialized_end=15761
  _GCPSPANNERSPEC._serialized_start=15763
  _GCPSPANNERSPEC._serialized_end=15881
  _GCPSTORAGESPEC._serialized_start=15883
  _GCPSTORAGESPEC._serialized_end=15933
  _GITHUBSPEC._serialized_start=15935
  _GITHUBSPEC._serialized_end=15993
  _GITLABSPEC._serialized_start=15995
  _GITLABSPEC._serialized_end=16035
  _GOOGLESHEETSSPEC._serialized_start=16037
  _GOOGLESHEETSSPEC._serialized_end=16103
  _GREENPLUMSPEC._serialized_start=16105
  _GREENPLUMSPEC._serialized_end=16215
  _HETZNERSPEC._serialized_start=16217
  _HETZNERSPEC._serialized_end=16258
  _HIPCHATSPEC._serialized_start=16260
  _HIPCHATSPEC._serialized_end=16315
  _IMAGEREGISTRYSPEC._serialized_start=16317
  _IMAGEREGISTRYSPEC._serialized_end=16386
  _INFORMIXSPEC._serialized_start=16388
  _INFORMIXSPEC._serialized_end=16497
  _INGRESSSPEC._serialized_start=16499
  _INGRESSSPEC._serialized_end=16607
  _KAFKASPEC._serialized_start=16609
  _KAFKASPEC._serialized_end=16714
  _LAB._serialized_start=16717
  _LAB._serialized_end=16950
  _LABCONDITION._serialized_start=16953
  _LABCONDITION._serialized_end=17102
  _LABLIST._serialized_start=17105
  _LABLIST._serialized_end=17255
  _LABSPEC._serialized_start=17258
  _LABSPEC._serialized_end=17470
  _LABSTATUS._serialized_start=17473
  _LABSTATUS._serialized_end=17666
  _LICENSE._serialized_start=17669
  _LICENSE._serialized_end=17914
  _LICENSECONDITION._serialized_start=17917
  _LICENSECONDITION._serialized_end=18070
  _LICENSELIST._serialized_start=18073
  _LICENSELIST._serialized_end=18231
  _LICENSESPEC._serialized_start=18234
  _LICENSESPEC._serialized_end=18735
  _LICENSESTATUS._serialized_start=18738
  _LICENSESTATUS._serialized_end=18986
  _LINODESPEC._serialized_start=18988
  _LINODESPEC._serialized_end=19015
  _MSSQLSERVERSPEC._serialized_start=19018
  _MSSQLSERVERSPEC._serialized_end=19148
  _MSTEAMSPEC._serialized_start=19150
  _MSTEAMSPEC._serialized_end=19179
  _MATTERMOSTSPEC._serialized_start=19181
  _MATTERMOSTSPEC._serialized_end=19245
  _MINIOSPEC._serialized_start=19247
  _MINIOSPEC._serialized_end=19310
  _MODELASYSTEM._serialized_start=19313
  _MODELASYSTEM._serialized_end=19573
  _MODELASYSTEMCONDITION._serialized_start=19576
  _MODELASYSTEMCONDITION._serialized_end=19734
  _MODELASYSTEMLIST._serialized_start=19737
  _MODELASYSTEMLIST._serialized_end=19905
  _MODELASYSTEMSPEC._serialized_start=19908
  _MODELASYSTEMSPEC._serialized_end=20081
  _MODELASYSTEMSTATUS._serialized_start=20084
  _MODELASYSTEMSTATUS._serialized_end=20298
  _MONGODBSPEC._serialized_start=20300
  _MONGODBSPEC._serialized_end=20408
  _MYSQLSPEC._serialized_start=20410
  _MYSQLSPEC._serialized_end=20516
  _NEO4JSPEC._serialized_start=20518
  _NEO4JSPEC._serialized_end=20606
  _NOTIFICATIONCHANNELSPEC._serialized_start=20609
  _NOTIFICATIONCHANNELSPEC._serialized_end=20839
  _NOTIFICATIONCHANNELSTATUS._serialized_start=20842
  _NOTIFICATIONCHANNELSTATUS._serialized_end=20981
  _NOTIFIER._serialized_start=20984
  _NOTIFIER._serialized_end=21232
  _NOTIFIERCONDITION._serialized_start=21235
  _NOTIFIERCONDITION._serialized_end=21389
  _NOTIFIERLIST._serialized_start=21392
  _NOTIFIERLIST._serialized_end=21552
  _NOTIFIERSPEC._serialized_start=21555
  _NOTIFIERSPEC._serialized_end=21776
  _NOTIFIERSTATUS._serialized_start=21779
  _NOTIFIERSTATUS._serialized_end=22088
  _ODBCSPEC._serialized_start=22090
  _ODBCSPEC._serialized_end=22127
  _OPENSTACKSPEC._serialized_start=22129
  _OPENSTACKSPEC._serialized_end=22233
  _OPSGENIESPEC._serialized_start=22235
  _OPSGENIESPEC._serialized_end=22293
  _ORACLESPEC._serialized_start=22295
  _ORACLESPEC._serialized_end=22413
  _OVHSPEC._serialized_start=22415
  _OVHSPEC._serialized_end=22500
  _PAGERDUTYSPEC._serialized_start=22502
  _PAGERDUTYSPEC._serialized_end=22561
  _POSTGRESSQLSPEC._serialized_start=22563
  _POSTGRESSQLSPEC._serialized_end=22675
  _PRESTOSPEC._serialized_start=22677
  _PRESTOSPEC._serialized_end=22799
  _PUSHOVERSPEC._serialized_start=22801
  _PUSHOVERSPEC._serialized_end=22859
  _RABBITMQSPEC._serialized_start=22861
  _RABBITMQSPEC._serialized_end=22939
  _RESOURCELIMITSPEC._serialized_start=22942
  _RESOURCELIMITSPEC._serialized_end=23249
  _RULESPEC._serialized_start=23251
  _RULESPEC._serialized_end=23294
  _SAPHANASPEC._serialized_start=23296
  _SAPHANASPEC._serialized_end=23404
  _SFTPSPEC._serialized_start=23406
  _SFTPSPEC._serialized_end=23511
  _SFTPSPEC._serialized_start=23513
  _SFTPSPEC._serialized_end=23587
  _SCOPE._serialized_start=23589
  _SCOPE._serialized_end=23627
  _SERVINGSITE._serialized_start=23630
  _SERVINGSITE._serialized_end=23887
  _SERVINGSITECONDITION._serialized_start=23890
  _SERVINGSITECONDITION._serialized_end=24047
  _SERVINGSITELIST._serialized_start=24050
  _SERVINGSITELIST._serialized_end=24216
  _SERVINGSITESPEC._serialized_start=24219
  _SERVINGSITESPEC._serialized_end=24524
  _SERVINGSITESTATUS._serialized_start=24527
  _SERVINGSITESTATUS._serialized_end=25083
  _SINGLESTORESPEC._serialized_start=25085
  _SINGLESTORESPEC._serialized_end=25179
  _SLACKSPEC._serialized_start=25181
  _SLACKSPEC._serialized_end=25207
  _SMTPSPEC._serialized_start=25210
  _SMTPSPEC._serialized_end=25388
  _SNOWFLAKESPEC._serialized_start=25391
  _SNOWFLAKESPEC._serialized_end=25536
  _SQLITESPEC._serialized_start=25538
  _SQLITESPEC._serialized_end=25568
  _SYBASESPEC._serialized_start=25570
  _SYBASESPEC._serialized_end=25677
  _TENANT._serialized_start=25680
  _TENANT._serialized_end=25922
  _TENANTCONDITION._serialized_start=25925
  _TENANTCONDITION._serialized_end=26077
  _TENANTLIST._serialized_start=26080
  _TENANTLIST._serialized_end=26236
  _TENANTSPEC._serialized_start=26239
  _TENANTSPEC._serialized_end=26507
  _TENANTSTATUS._serialized_start=26510
  _TENANTSTATUS._serialized_end=26756
  _TERADATASPEC._serialized_start=26758
  _TERADATASPEC._serialized_end=26867
  _TWITTERSPEC._serialized_start=26869
  _TWITTERSPEC._serialized_end=26897
  _USERROLECLASS._serialized_start=26900
  _USERROLECLASS._serialized_end=27071
  _USERROLECLASSLIST._serialized_start=27074
  _USERROLECLASSLIST._serialized_end=27244
  _USERROLECLASSSPEC._serialized_start=27247
  _USERROLECLASSSPEC._serialized_end=27438
  _VERTICASPEC._serialized_start=27440
  _VERTICASPEC._serialized_end=27548
  _VICTOROPSPEC._serialized_start=27550
  _VICTOROPSPEC._serialized_end=27608
  _VIRTUALBUCKET._serialized_start=27611
  _VIRTUALBUCKET._serialized_end=27874
  _VIRTUALBUCKETCONDITION._serialized_start=27877
  _VIRTUALBUCKETCONDITION._serialized_end=28036
  _VIRTUALBUCKETLIST._serialized_start=28039
  _VIRTUALBUCKETLIST._serialized_end=28209
  _VIRTUALBUCKETSPEC._serialized_start=28212
  _VIRTUALBUCKETSPEC._serialized_end=28476
  _VIRTUALBUCKETSTATUS._serialized_start=28479
  _VIRTUALBUCKETSTATUS._serialized_end=28739
  _VIRTUALCLUSTER._serialized_start=28742
  _VIRTUALCLUSTER._serialized_end=29008
  _VIRTUALCLUSTERAUTOSCALESPEC._serialized_start=29010
  _VIRTUALCLUSTERAUTOSCALESPEC._serialized_end=29082
  _VIRTUALCLUSTERCONDITION._serialized_start=29085
  _VIRTUALCLUSTERCONDITION._serialized_end=29245
  _VIRTUALCLUSTERLIST._serialized_start=29248
  _VIRTUALCLUSTERLIST._serialized_end=29420
  _VIRTUALCLUSTERSPEC._serialized_start=29423
  _VIRTUALCLUSTERSPEC._serialized_end=29915
  _VIRTUALCLUSTERSTATUS._serialized_start=29918
  _VIRTUALCLUSTERSTATUS._serialized_end=30227
  _VIRTUALVOLUME._serialized_start=30230
  _VIRTUALVOLUME._serialized_end=30493
  _VIRTUALVOLUMECONDITION._serialized_start=30496
  _VIRTUALVOLUMECONDITION._serialized_end=30655
  _VIRTUALVOLUMELIST._serialized_start=30658
  _VIRTUALVOLUMELIST._serialized_end=30828
  _VIRTUALVOLUMESPEC._serialized_start=30831
  _VIRTUALVOLUMESPEC._serialized_end=30966
  _VIRTUALVOLUMESTATUS._serialized_start=30969
  _VIRTUALVOLUMESTATUS._serialized_end=31229
  _WEBHOOKSPEC._serialized_start=31232
  _WEBHOOKSPEC._serialized_end=31453
  _WEBHOOKSPEC_HEADERSENTRY._serialized_start=14993
  _WEBHOOKSPEC_HEADERSENTRY._serialized_end=15039
# @@protoc_insertion_point(module_scope)
