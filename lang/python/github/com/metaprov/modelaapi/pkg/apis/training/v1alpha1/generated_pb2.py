# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: github.com/metaprov/modelaapi/pkg/apis/training/v1alpha1/generated.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1 import generated_pb2 as github_dot_com_dot_metaprov_dot_modelaapi_dot_pkg_dot_apis_dot_catalog_dot_v1alpha1_dot_generated__pb2
from github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1 import generated_pb2 as github_dot_com_dot_metaprov_dot_modelaapi_dot_pkg_dot_apis_dot_data_dot_v1alpha1_dot_generated__pb2
from k8s.io.api.core.v1 import generated_pb2 as k8s_dot_io_dot_api_dot_core_dot_v1_dot_generated__pb2
from k8s.io.apimachinery.pkg.apis.meta.v1 import generated_pb2 as k8s_dot_io_dot_apimachinery_dot_pkg_dot_apis_dot_meta_dot_v1_dot_generated__pb2
from k8s.io.apimachinery.pkg.runtime import generated_pb2 as k8s_dot_io_dot_apimachinery_dot_pkg_dot_runtime_dot_generated__pb2
from k8s.io.apimachinery.pkg.runtime.schema import generated_pb2 as k8s_dot_io_dot_apimachinery_dot_pkg_dot_runtime_dot_schema_dot_generated__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\nHgithub.com/metaprov/modelaapi/pkg/apis/training/v1alpha1/generated.proto\x12\x38github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1\x1aGgithub.com/metaprov/modelaapi/pkg/apis/catalog/v1alpha1/generated.proto\x1a\x44github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1/generated.proto\x1a\"k8s.io/api/core/v1/generated.proto\x1a\x34k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto\x1a/k8s.io/apimachinery/pkg/runtime/generated.proto\x1a\x36k8s.io/apimachinery/pkg/runtime/schema/generated.proto\"\x80\x01\n\x17\x41lgorithmParameterRange\x12\x0c\n\x04name\x18\x01 \x01(\t\x12W\n\x06ranges\x18\x02 \x03(\x0b\x32G.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ParameterRange\"\x9f\x01\n\x18\x41lgorithmSearchSpaceSpec\x12\x0f\n\x07include\x18\x01 \x03(\t\x12\x0f\n\x07\x65xclude\x18\x02 \x03(\t\x12\x61\n\x06\x63ustom\x18\x03 \x03(\x0b\x32Q.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.AlgorithmParameterRange\"`\n\x07\x41nomaly\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x13\n\x0bvalueColumn\x18\x02 \x01(\t\x12\x16\n\x0e\x61\x64jDeltaColumn\x18\x03 \x01(\t\x12\r\n\x05start\x18\x04 \x01(\t\x12\x0b\n\x03\x65nd\x18\x05 \x01(\t\"\'\n\x11\x41udioPipelineSpec\x12\x12\n\nfeaturizer\x18\x01 \x01(\t\"M\n\x0c\x42\x61\x63ktestSpec\x12\x0f\n\x07sliding\x18\x01 \x01(\x08\x12\x0e\n\x06splits\x18\x02 \x01(\x05\x12\x0f\n\x07Initial\x18\x03 \x01(\x05\x12\x0b\n\x03gap\x18\x05 \x01(\x05\"?\n\x0c\x42\x61selineSpec\x12\x0f\n\x07\x65nabled\x18\x01 \x01(\x08\x12\x11\n\tbaselines\x18\x02 \x03(\t\x12\x0b\n\x03\x61ll\x18\x03 \x01(\x08\"\r\n\x0b\x43hangePoint\"$\n\x14\x43hatbotEstimatorSpec\x12\x0c\n\x04\x62\x61se\x18\x01 \x01(\t\"\x93\x01\n\x0e\x43heckpointSpec\x12\x0f\n\x07\x65nabled\x18\x01 \x01(\x08\x12\x1a\n\x12\x63heckpointInterval\x18\x02 \x01(\x05\x12T\n\x08location\x18\x03 \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataLocation\"\x92\x01\n\x16\x43lassicalEstimatorSpec\x12\x15\n\ralgorithmName\x18\x01 \x01(\t\x12\x61\n\nparameters\x18\x02 \x03(\x0b\x32M.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.HyperParameterValue\"a\n\x10\x43ustomReportSpec\x12M\n\x05pages\x18\x08 \x03(\x0b\x32>.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.PageSpec\"L\n\nDataHashes\x12\x11\n\ttrainHash\x18\x01 \x01(\t\x12\x13\n\x0btestingHash\x18\x02 \x01(\t\x12\x16\n\x0evalidationHash\x18\x03 \x01(\t\"\x84\x02\n\rDataSplitSpec\x12\x0e\n\x06method\x18\x01 \x01(\t\x12\r\n\x05train\x18\x02 \x01(\x05\x12\x12\n\nvalidation\x18\x03 \x01(\x05\x12\x0c\n\x04test\x18\x04 \x01(\x05\x12\x13\n\x0bsplitColumn\x18\x05 \x01(\t\x12W\n\x08segments\x18\x06 \x03(\x0b\x32\x45.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.SegmentSpec\x12\x14\n\x0ctrainDataset\x18\x07 \x01(\t\x12\x13\n\x0btestDataset\x18\x08 \x01(\t\x12\x19\n\x11validationDataset\x18\t \x01(\t\"\xa5\x01\n\x12\x44\x65\x65pEstimatorLayer\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04type\x18\x02 \x01(\t\x12^\n\nparameters\x18\x03 \x03(\x0b\x32J.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.NNLayerParameter\x12\x13\n\x0binputLayers\x18\x04 \x03(\t\"\xe6\x01\n\x11\x44\x65\x65pEstimatorSpec\x12\\\n\x06layers\x18\x01 \x03(\x0b\x32L.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.DeepEstimatorLayer\x12\x0c\n\x04type\x18\x02 \x01(\t\x12\x11\n\tbatchSize\x18\x03 \x01(\x05\x12\x0e\n\x06\x65pochs\x18\x04 \x01(\x05\x12\x17\n\x0fvalidationSplit\x18\x05 \x01(\x05\x12\r\n\x05isSeq\x18\x06 \x01(\x08\x12\x0c\n\x04gpus\x18\x07 \x01(\x05\x12\x0c\n\x04loss\x18\x08 \x01(\t\".\n\x13\x44riftDetectorStatus\x12\x17\n\x0foutlierModelURI\x18\x01 \x01(\t\";\n\x0e\x44riftModelSpec\x12\x0f\n\x07\x65nabled\x18\x01 \x01(\x08\x12\x18\n\x10outlierAlgorithm\x18\x02 \x01(\t\"R\n\rEarlyStopSpec\x12\x0f\n\x07\x65nabled\x18\x01 \x01(\x08\x12\x0f\n\x07initial\x18\x02 \x01(\x05\x12\x1f\n\x17minModelsWithNoProgress\x18\x03 \x01(\x05\"\x0f\n\rEnsembleRules\"\xf3\x01\n\x0c\x45nsembleSpec\x12\x0e\n\x06models\x18\x01 \x03(\t\x12\x64\n\nestimators\x18\x02 \x03(\x0b\x32P.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ClassicalEstimatorSpec\x12_\n\x05\x66inal\x18\x03 \x01(\x0b\x32P.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ClassicalEstimatorSpec\x12\x0c\n\x04type\x18\x04 \x01(\t\"_\n\rEnsemblesSpec\x12\x0f\n\x07\x65nabled\x18\x01 \x01(\x08\x12\x16\n\x0evotingEnsemble\x18\x02 \x01(\x08\x12\x18\n\x10stackingEnsemble\x18\x03 \x01(\x08\x12\x0b\n\x03top\x18\x04 \x01(\x05\"*\n\tEntityRef\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07\x65xclude\x18\x02 \x03(\t\"\x89\x01\n\x0b\x45valMetrics\x12\x11\n\tselection\x18\x01 \x01(\t\x12\x11\n\treporting\x18\x02 \x03(\t\x12\x0f\n\x07\x61ggFunc\x18\x03 \x01(\t\x12\x11\n\taggPeriod\x18\x04 \x01(\x05\x12\x17\n\x0fnullModelParams\x18\x05 \x01(\t\x12\x17\n\x0frelErrTolerance\x18\x06 \x01(\x01\"\xe0\x01\n\nEvalPeriod\x12\x13\n\x0btestHorizon\x18\x01 \x01(\x05\x12\x1f\n\x17periodsBetweenTrainTest\x18\x02 \x01(\x05\x12\x1e\n\x16\x63vPeriodsBetweenSplits\x18\x03 \x01(\x05\x12\x1a\n\x12\x63vExpandingWindows\x18\x04 \x01(\x08\x12\x11\n\tcvHorizon\x18\x05 \x01(\x05\x12\x19\n\x11\x63vMinTrainPeriods\x18\x06 \x01(\x05\x12\x13\n\x0b\x63vMaxSplits\x18\x07 \x01(\x05\x12\x1d\n\x15\x63vUseMostRecentSplits\x18\x08 \x01(\x08\"\xc7\x06\n\x1a\x46\x65\x61tureEngineeringPipeline\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x10\n\x08\x64\x61tatype\x18\x02 \x01(\t\x12\x0f\n\x07\x63olumns\x18\x03 \x03(\t\x12\x12\n\nimputation\x18\x04 \x01(\t\x12\x10\n\x08\x65ncoding\x18\x05 \x01(\t\x12\x0f\n\x07scaling\x18\x06 \x01(\t\x12\x16\n\x0e\x64iscretisation\x18\x07 \x01(\t\x12\x1e\n\x16variableTransformation\x18\x08 \x01(\t\x12\x17\n\x0foutlierHandling\x18\t \x01(\t\x12\x1e\n\x16\x64\x61tetimeTransformation\x18\n \x01(\t\x12X\n\x04text\x18\x0b \x01(\x0b\x32J.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.TextPipelineSpec\x12Z\n\x05image\x18\x0c \x01(\x0b\x32K.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ImagePipelineSpec\x12Z\n\x05\x61udio\x18\r \x01(\x0b\x32K.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.AudioPipelineSpec\x12Z\n\x05video\x18\x0e \x01(\x0b\x32K.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.VideoPipelineSpec\x12`\n\tgenerated\x18\x10 \x03(\x0b\x32M.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.GeneratedColumnSpec\x12]\n\x06\x63ustom\x18\x11 \x03(\x0b\x32M.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.GeneratedColumnSpec\x12\x0c\n\x04\x64rop\x18\x12 \x01(\x08\x12\x13\n\x0bpassthrough\x18\x13 \x01(\x08\"\x8d\x03\n\x1c\x46\x65\x61tureEngineeringSearchSpec\x12\x0f\n\x07\x65nabled\x18\x01 \x01(\x08\x12\x19\n\x11imbalancedHandler\x18\x02 \x01(\t\x12\x11\n\testimator\x18\x03 \x01(\t\x12\x11\n\tmaxModels\x18\x04 \x01(\x05\x12\x0f\n\x07maxTime\x18\x05 \x01(\x05\x12\x13\n\x0bmaxTrainers\x18\x06 \x01(\x05\x12\x11\n\tsamplePct\x18\x07 \x01(\x05\x12\x12\n\nautoRemove\x18\x08 \x01(\x08\x12\r\n\x05reuse\x18\t \x01(\x08\x12\x63\n\x0b\x66\x65Selection\x18\n \x01(\x0b\x32N.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.FeatureSelectionSpec\x12Z\n\tearlyStop\x18\x0c \x01(\x0b\x32G.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.EarlyStopSpec\"\x80\x01\n\x1e\x46\x65\x61tureEngineeringSearchStatus\x12^\n\x04\x62\x65st\x18\x01 \x01(\x0b\x32P.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.FeatureEngineeringSpec\"\xf7\x01\n\x16\x46\x65\x61tureEngineeringSpec\x12g\n\tpipelines\x18\x01 \x03(\x0b\x32T.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.FeatureEngineeringPipeline\x12\x11\n\timbalance\x18\x02 \x01(\t\x12\x61\n\tselection\x18\x03 \x01(\x0b\x32N.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.FeatureSelectionSpec\"8\n\x11\x46\x65\x61tureImportance\x12\x0f\n\x07\x66\x65\x61ture\x18\x01 \x01(\t\x12\x12\n\nimportance\x18\x02 \x01(\x01\":\n\x0b\x46\x65\x61tureInfo\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0e\n\x06reason\x18\x02 \x01(\t\x12\r\n\x05value\x18\x03 \x01(\x01\"#\n\x0b\x46\x65\x61turePair\x12\t\n\x01x\x18\x01 \x01(\t\x12\t\n\x01y\x18\x02 \x01(\t\"\xd5\x01\n\x14\x46\x65\x61tureSelectionSpec\x12\x0f\n\x07\x65nabled\x18\x01 \x01(\x08\x12\x11\n\tembedding\x18\x03 \x01(\x08\x12\x0e\n\x06\x66ilter\x18\x04 \x01(\x08\x12\x0f\n\x07wrapper\x18\x05 \x01(\x08\x12\x10\n\x08pipeline\x18\x06 \x03(\t\x12\x14\n\x0cvarThreshold\x18\x07 \x01(\x05\x12\x15\n\rcorrThreshold\x18\x08 \x01(\x05\x12\x13\n\x0bmaxFeatures\x18\t \x01(\x05\x12\x12\n\npercentile\x18\n \x01(\x05\x12\x10\n\x08reserved\x18\x0c \x03(\t\"\xf5\x07\n\x0e\x46orecasterSpec\x12Y\n\x06\x65vents\x18\x02 \x03(\x0b\x32I.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.TimeSeriesEvent\x12R\n\x04past\x18\x03 \x01(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.WindowSpec\x12T\n\x06\x66uture\x18\x04 \x01(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.WindowSpec\x12\x10\n\x08\x66orecast\x18\x05 \x01(\x08\x12\x10\n\x08\x63overage\x18\x06 \x01(\x01\x12Z\n\x0eoutputLocation\x18\x07 \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataLocation\x12\x10\n\x08\x66\x65\x61tures\x18\x08 \x03(\t\x12\x0e\n\x06groups\x18\t \x03(\t\x12\x1a\n\x12predefinedTemplate\x18\n \x01(\t\x12T\n\tanomalies\x18\x0b \x03(\x0b\x32\x41.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Anomaly\x12\x14\n\x0ctrainEndData\x18\x0c \x01(\t\x12\x13\n\x0bvalueColumn\x18\r \x01(\t\x12\x11\n\thpoBudget\x18\x0e \x01(\x05\x12`\n\x11\x65valuationMetrics\x18\x0f \x01(\x0b\x32\x45.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.EvalMetrics\x12^\n\x10\x65valuationPeriod\x18\x10 \x01(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.EvalPeriod\x12^\n\x0bseasonality\x18\x11 \x01(\x0b\x32I.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.SeasonalitySpec\x12\x12\n\nregressors\x18\x12 \x03(\t\x12\x18\n\x10laggedRegressors\x18\x13 \x03(\t\x12\x0e\n\x06growth\x18\x14 \x01(\t\x12\x0b\n\x03key\x18\x15 \x03(\t\x12\x12\n\nestimators\x18\x16 \x03(\t\x12\x0b\n\x03hts\x18\x17 \x01(\t\"x\n\x15GarbageCollectionSpec\x12\x1e\n\x16\x63ollectAtModelClassEnd\x18\x01 \x01(\x08\x12%\n\x1dkeepOnlyBestModelPerAlgorithm\x18\x02 \x01(\x08\x12\x18\n\x10keepPrunedModels\x18\x03 \x01(\x08\"\x8e\x01\n\x17GarbageCollectionStatus\x12\x1c\n\x14\x63ollectedModelsCount\x18\x01 \x01(\x05\x12U\n\x06models\x18\x02 \x03(\x0b\x32\x45.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelResult\"f\n\x13GeneratedColumnSpec\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x10\n\x08\x64\x61tatype\x18\x02 \x01(\t\x12\r\n\x05\x66irst\x18\x03 \x01(\t\x12\x0e\n\x06second\x18\x04 \x01(\t\x12\x10\n\x08original\x18\x05 \x01(\t\"V\n\x17GroupSplitLocationsSpec\x12\x1d\n\x15groupTrainingDataFile\x18\x01 \x01(\t\x12\x1c\n\x14groupTestingDataFile\x18\x02 \x01(\t\"2\n\x13HyperParameterValue\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"o\n\x10HyperbandOptions\x12\x14\n\x0cminResources\x18\x01 \x01(\x05\x12\x14\n\x0cmaxResources\x18\x02 \x01(\x05\x12\x17\n\x0freductionFactor\x18\x03 \x01(\x05\x12\x16\n\x0e\x62ootstrapCount\x18\x04 \x01(\x05\"\'\n\x11ImagePipelineSpec\x12\x12\n\nfeaturizer\x18\x01 \x01(\t\";\n\x15ImbalanceHandlingSpec\x12\x0f\n\x07\x65nabled\x18\x01 \x01(\x08\x12\x11\n\timbalance\x18\x02 \x01(\t\"\x9a\x02\n\x14InterpretabilitySpec\x12\x0b\n\x03ice\x18\x01 \x01(\x08\x12W\n\x08icepairs\x18\x02 \x03(\x0b\x32\x45.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.FeaturePair\x12\x0c\n\x04lime\x18\x03 \x01(\x08\x12\x0c\n\x04shap\x18\x04 \x01(\t\x12X\n\tshappairs\x18\x05 \x03(\x0b\x32\x45.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.FeaturePair\x12\x16\n\x0e\x63ounterfactual\x18\x06 \x01(\x08\x12\x0e\n\x06\x61nchor\x18\x07 \x01(\x08\"\xc6\x02\n\x16InterpretabilityStatus\x12=\n\tstartedAt\x18\x01 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12?\n\x0b\x63ompletedAt\x18\x02 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x14\n\x0c\x65xplainerURI\x18\x03 \x01(\t\x12\x1a\n\x12trainShapValuesURI\x18\x04 \x01(\t\x12\x19\n\x11testShapValuesURI\x18\x05 \x01(\t\x12_\n\nimportance\x18\x06 \x03(\x0b\x32K.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.FeatureImportance\"V\n\x05Level\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05index\x18\x02 \x03(\t\x12\x0f\n\x07horizon\x18\x03 \x01(\x05\x12\x0c\n\x04\x66req\x18\x04 \x01(\t\x12\x11\n\taggregate\x18\x05 \x01(\t\"k\n\x13MedianPrunerOptions\x12\x15\n\rstartupTrials\x18\x01 \x01(\x05\x12\x13\n\x0bwarmupSteps\x18\x02 \x01(\x05\x12\x15\n\rintervalSteps\x18\x03 \x01(\x05\x12\x11\n\tminTrials\x18\x04 \x01(\x05\"\xf5\x01\n\x05Model\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12Q\n\x04spec\x18\x02 \x01(\x0b\x32\x43.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelSpec\x12U\n\x06status\x18\x03 \x01(\x0b\x32\x45.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelStatus\"\x84\x02\n\nModelClass\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12V\n\x04spec\x18\x02 \x01(\x0b\x32H.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassSpec\x12Z\n\x06status\x18\x03 \x01(\x0b\x32J.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassStatus\"\xc7\x04\n\x12ModelClassDataSpec\x12X\n\x0cobservations\x18\x01 \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataLocation\x12W\n\x0bpredictions\x18\x02 \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataLocation\x12L\n\x06schema\x18\x03 \x01(\x0b\x32<.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Schema\x12Z\n\x08\x66latFile\x18\x04 \x01(\x0b\x32H.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.FlatFileFormatSpec\x12\x12\n\nprimaryKey\x18\x05 \x03(\t\x12\x1c\n\x14predictionTimeColumn\x18\x06 \x01(\t\x12\x0e\n\x06target\x18\x07 \x01(\t\x12Q\n\x05tests\x18\x08 \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.TestSuite\x12\x1e\n\x16onlineFeatureStoreName\x18\t \x01(\t\x12\x1f\n\x17offlineFeatureStoreName\x18\n \x01(\t\"\xa7\x01\n\x0eModelClassList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12S\n\x05items\x18\x02 \x03(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClass\"\x8d\x02\n\rModelClassRun\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12Y\n\x04spec\x18\x02 \x01(\x0b\x32K.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassRunSpec\x12]\n\x06status\x18\x03 \x01(\x0b\x32M.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassRunStatus\"\xad\x01\n\x11ModelClassRunList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12V\n\x05items\x18\x02 \x03(\x0b\x32G.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassRun\"\xce\x01\n\x11ModelClassRunSpec\x12\x13\n\x0bversionName\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\x13\n\x0b\x64\x61tasetName\x18\x03 \x01(\t\x12\x16\n\x0emodelClassName\x18\x04 \x01(\t\x12\r\n\x05owner\x18\x05 \x01(\t\x12\x10\n\x08priority\x18\x06 \x01(\t\x12\x0e\n\x06paused\x18\x07 \x01(\x08\x12\x0f\n\x07\x61\x62orted\x18\x08 \x01(\x08\x12\x0b\n\x03ttl\x18\t \x01(\x05\x12\x13\n\x0btriggeredBy\x18\n \x01(\t\"\xed\x04\n\x13ModelClassRunStatus\x12\x13\n\x0b\x64\x61tasetName\x18\x01 \x01(\t\x12\x11\n\tstudyName\x18\x02 \x01(\t\x12\x11\n\tmodelName\x18\x03 \x01(\t\x12?\n\x0b\x63ompletedAt\x18\x05 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\r\n\x05phase\x18\x06 \x01(\t\x12\x1a\n\x12observedGeneration\x18\x07 \x01(\x03\x12\x13\n\x0b\x65valMetrics\x18\x08 \x01(\t\x12\x15\n\rfailureReason\x18\t \x01(\t\x12\x16\n\x0e\x66\x61ilureMessage\x18\n \x01(\t\x12=\n\tupdatedAt\x18\x0c \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12K\n\x04logs\x18\r \x01(\x0b\x32=.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.Logs\x12>\n\npromotedAt\x18\x0e \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x0c\n\x04\x61uto\x18\x0f \x01(\x08\x12\x37\n\napprovedBy\x18\x10 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12\x13\n\x0bmodelsCount\x18\x11 \x01(\x05\x12\x43\n\nconditions\x18\x12 \x03(\x0b\x32/.k8s.io.apimachinery.pkg.apis.meta.v1.Condition\"\xff\x04\n\x15ModelClassServingSpec\x12;\n\x0eservingSiteRef\x18\x01 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12S\n\x06\x61\x63\x63\x65ss\x18\x02 \x01(\x0b\x32\x43.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.AccessSpec\x12\x10\n\x08replicas\x18\x03 \x01(\x05\x12\x0e\n\x06online\x18\x04 \x01(\x08\x12\x11\n\tdashboard\x18\x05 \x01(\x08\x12X\n\tresources\x18\x06 \x01(\x0b\x32\x45.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ResourceSpec\x12\x62\n\x0c\x65nvironments\x18\x07 \x03(\x0b\x32L.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ServingEnvironment\x12\x1d\n\x15predictorTemplateName\x18\x08 \x01(\t\x12`\n\x12monitoringSchedule\x18\t \x01(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.RunSchedule\x12`\n\x12predictionSchedule\x18\n \x01(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.RunSchedule\"\xc9\x06\n\x0eModelClassSpec\x12\r\n\x05owner\x18\x01 \x01(\t\x12\x1e\n\x16\x64\x61taProductVersionName\x18\x02 \x01(\t\x12\x0f\n\x07version\x18\x03 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x04 \x01(\t\x12\x0c\n\x04task\x18\x05 \x01(\t\x12\x0f\n\x07subtask\x18\x06 \x01(\t\x12Y\n\tobjective\x18\x07 \x01(\x0b\x32\x46.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ObjectiveSpec\x12U\n\x08\x65ntities\x18\x08 \x03(\x0b\x32\x43.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.EntityRef\x12Z\n\x04\x64\x61ta\x18\n \x01(\x0b\x32L.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassDataSpec\x12\x62\n\x08training\x18\x0b \x01(\x0b\x32P.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassTrainingSpec\x12`\n\x07serving\x18\x0c \x01(\x0b\x32O.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassServingSpec\x12_\n\x0cnotification\x18\r \x01(\x0b\x32I.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.NotificationSpec\x12\\\n\x0ereportSchedule\x18\x0e \x01(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.RunSchedule\x12\x0c\n\x04\x66\x61st\x18\x0f \x01(\x08\x12\x0e\n\x06paused\x18\x10 \x01(\x08\x12\x12\n\nregistered\x18\x11 \x01(\x08\"\xfb\x08\n\x10ModelClassStatus\x12\x1a\n\x12observedGeneration\x18\x01 \x01(\x03\x12=\n\tupdatedAt\x18\x02 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12`\n\x06\x62\x65stFE\x18\x03 \x01(\x0b\x32P.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.FeatureEngineeringSpec\x12j\n\x16trainingScheduleStatus\x18\x04 \x01(\x0b\x32J.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.RunScheduleStatus\x12k\n\x17predictionSceduleStatus\x18\x05 \x01(\x0b\x32J.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.RunScheduleStatus\x12k\n\x17monitoringSceduleStatus\x18\x06 \x01(\x0b\x32J.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.RunScheduleStatus\x12g\n\x13reportSceduleStatus\x18\x07 \x01(\x0b\x32J.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.RunScheduleStatus\x12\x16\n\x0e\x62\x65stModelScore\x18\x08 \x01(\x01\x12\x0f\n\x07retired\x18\t \x03(\t\x12\x15\n\rpredictorName\x18\n \x01(\t\x12\x13\n\x0b\x64\x61taAppName\x18\x0b \x01(\t\x12\x13\n\x0btriggeredBy\x18\x0c \x01(\t\x12\x15\n\rfailureReason\x18\r \x01(\t\x12\x16\n\x0e\x66\x61ilureMessage\x18\x0e \x01(\t\x12=\n\tlastRunAt\x18\x0f \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x13\n\x0blastRunName\x18\x10 \x01(\t\x12\x44\n\x10lastPredictionAt\x18\x11 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x1a\n\x12lastPredictionName\x18\x12 \x01(\t\x12\x18\n\x10predictionsCount\x18\x13 \x01(\x05\x12\x11\n\trunsCount\x18\x14 \x01(\x05\x12\x13\n\x0bmodelsCount\x18\x15 \x01(\x05\x12\x0c\n\x04live\x18\x16 \x01(\x08\x12\x17\n\x0fpredictorsCount\x18\x17 \x01(\x05\x12\x43\n\nconditions\x18\x18 \x03(\x0b\x32/.k8s.io.apimachinery.pkg.apis.meta.v1.Condition\"\xfe\x05\n\x16ModelClassTrainingSpec\x12\x33\n\x06labRef\x18\x01 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12\x19\n\x11studyTemplateName\x18\x02 \x01(\t\x12Z\n\x0emodelUnitTests\x18\x03 \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.TestSuite\x12^\n\x10trainingSchedule\x18\x04 \x01(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.RunSchedule\x12\\\n\nmodelImage\x18\x05 \x01(\x0b\x32H.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelImageSpec\x12\x17\n\x0fpromotionPolicy\x18\x06 \x01(\t\x12g\n\x0bsearchSpace\x18\x08 \x01(\x0b\x32R.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.AlgorithmSearchSpaceSpec\x12X\n\tresources\x18\t \x01(\x0b\x32\x45.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ResourceSpec\x12\x13\n\x0btriggeredBy\x18\n \x01(\t\x12\x0e\n\x06paused\x18\x0b \x01(\x08\x12\x0f\n\x07maxTime\x18\x0c \x01(\x05\x12\x11\n\tmaxModels\x18\r \x01(\x05\x12\x10\n\x08trainers\x18\x0e \x01(\x05\x12\x0f\n\x07\x61\x62orted\x18\x0f \x01(\x08\x12\x11\n\texplained\x18\x10 \x01(\x08\x12\x0e\n\x06preSQL\x18\x11 \x03(\t\x12\x0f\n\x07postSQL\x18\x12 \x03(\t\"\xb3\x01\n\x12ModelGroupByStatus\x12\x11\n\tmodelsURI\x18\x01 \x01(\t\x12\x13\n\x0bprofilesURI\x18\x02 \x01(\t\x12\x14\n\x0c\x66orecastsURI\x18\x03 \x01(\t\x12_\n\rworkerResults\x18\x04 \x03(\x0b\x32H.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.WorkerRunResult\"R\n\x0eModelImageSpec\x12\r\n\x05\x65xist\x18\x01 \x01(\x08\x12\x11\n\timageName\x18\x02 \x01(\t\x12\x1e\n\x16registryConnectionName\x18\x03 \x01(\t\"\x9d\x01\n\tModelList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12N\n\x05items\x18\x02 \x03(\x0b\x32?.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Model\"W\n\x0bModelResult\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0b\n\x03\x61lg\x18\x02 \x01(\t\x12\r\n\x05score\x18\x03 \x01(\x01\x12\r\n\x05\x65rror\x18\x04 \x01(\x08\x12\x0f\n\x07trialID\x18\x05 \x01(\x05\"\xda\x11\n\tModelSpec\x12\r\n\x05owner\x18\x01 \x01(\t\x12\x13\n\x0bversionName\x18\x02 \x01(\t\x12\x14\n\x0cmodelVersion\x18\x04 \x01(\t\x12\x11\n\tstudyName\x18\x05 \x01(\t\x12\x13\n\x0b\x64\x61tasetName\x18\x06 \x01(\t\x12\x0c\n\x04task\x18\x07 \x01(\t\x12\x0f\n\x07subtask\x18\x08 \x01(\t\x12Y\n\tobjective\x18\t \x01(\x0b\x32\x46.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ObjectiveSpec\x12l\n\x12\x66\x65\x61tureEngineering\x18\n \x01(\x0b\x32P.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.FeatureEngineeringSpec\x12\x63\n\testimator\x18\x0b \x01(\x0b\x32P.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ClassicalEstimatorSpec\x12X\n\x03\x64nn\x18\x0c \x01(\x0b\x32K.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.DeepEstimatorSpec\x12_\n\x07\x63hatbot\x18\r \x01(\x0b\x32N.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ChatbotEstimatorSpec\x12`\n\x0cnlpEstimator\x18\x0e \x01(\x0b\x32J.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.NLPEstimatorSpec\x12X\n\x08\x65nsemble\x18\x0f \x01(\x0b\x32\x46.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.EnsembleSpec\x12X\n\x08training\x18\x10 \x01(\x0b\x32\x46.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.TrainingSpec\x12\x0e\n\x06tested\x18\x12 \x01(\x08\x12\x0f\n\x07\x61\x62orted\x18\x13 \x01(\x08\x12\x10\n\x08packaged\x18\x14 \x01(\x08\x12\x11\n\tpublished\x18\x15 \x01(\x08\x12\x0e\n\x06pushed\x18\x16 \x01(\x08\x12\x10\n\x08reported\x18\x17 \x01(\x08\x12\x0e\n\x06paused\x18\x18 \x01(\x08\x12\x10\n\x08profiled\x18\x19 \x01(\x08\x12\x10\n\x08\x61rchived\x18\x1a \x01(\x08\x12\x12\n\nforecasted\x18\x1b \x01(\x08\x12\x0f\n\x07predict\x18\x1e \x01(\x08\x12\r\n\x05tuned\x18\x1f \x01(\x08\x12\x11\n\texplained\x18  \x01(\x08\x12\x15\n\rcodeGenerated\x18! \x01(\x08\x12\x10\n\x08\x62\x61seline\x18\" \x01(\x08\x12\x18\n\x10genDriftDetector\x18# \x01(\x08\x12\x0c\n\x04\x66\x61st\x18$ \x01(\x08\x12\x12\n\nunitTested\x18% \x01(\x08\x12?\n\x12\x66\x65\x65\x64\x62\x61\x63kDatasetRef\x18& \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12\x0f\n\x07\x66lagged\x18\' \x01(\x08\x12T\n\x08location\x18( \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataLocation\x12]\n\x0b\x66orecasting\x18) \x01(\x0b\x32H.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ForecasterSpec\x12Z\n\x0b\x63ompilation\x18* \x01(\x0b\x32\x45.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.CompilerSpec\x12\x1d\n\x15\x61\x63tiveDeadlineSeconds\x18+ \x01(\x03\x12\x15\n\restimatorType\x18, \x01(\t\x12\x0b\n\x03ttl\x18- \x01(\x05\x12\x12\n\nmodelClass\x18. \x01(\t\x12\x0f\n\x07trialID\x18/ \x01(\x05\x12X\n\ngovernance\x18\x30 \x01(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.GovernanceSpec\x12h\n\x10interpretability\x18\x31 \x01(\x0b\x32N.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.InterpretabilitySpec\x12U\n\tunitTests\x18\x32 \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.TestSuite\x12Y\n\rfeedbackTests\x18\x33 \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.TestSuite\x12q\n\x12partitionLocations\x18\x34 \x01(\x0b\x32U.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.PartitionModelLocationsSpec\x12\x16\n\x0emodelClassName\x18\x35 \x01(\t\x12\x19\n\x11modelClassRunName\x18\x36 \x01(\t\x12\x0c\n\x04role\x18\x37 \x01(\t\x12\x10\n\x08released\x18\x38 \x01(\x08\"\x93\x02\n\x10ModelStageStatus\x12\r\n\x05phase\x18\x01 \x01(\t\x12=\n\tstartedAt\x18\x07 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12?\n\x0b\x63ompletedAt\x18\x08 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x61\n\x0funitTestsResult\x18\t \x01(\x0b\x32H.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.TestSuiteResult\x12\r\n\x05\x65rror\x18\n \x01(\t\"\xbc\"\n\x0bModelStatus\x12\x45\n\x11trainingStartedAt\x18\x02 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12G\n\x13trainingCompletedAt\x18\x03 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x44\n\x10testingStartedAt\x18\x04 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x46\n\x12testingCompletedAt\x18\x05 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x43\n\x0ftuningStartedAt\x18\x06 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x45\n\x11tuningCompletedAt\x18\x07 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12?\n\x0b\x63ompletedAt\x18\x08 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x0f\n\x07\x63vScore\x18\t \x01(\x01\x12\x15\n\rtrainingScore\x18\n \x01(\x01\x12\x11\n\ttestScore\x18\x0b \x01(\x01\x12\x0c\n\x04\x63ost\x18\x0c \x01(\x01\x12\x0c\n\x04\x62\x65st\x18\r \x01(\x08\x12P\n\x02\x63v\x18\x0e \x03(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.Measurement\x12S\n\x05train\x18\x0f \x03(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.Measurement\x12R\n\x04test\x18\x10 \x03(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.Measurement\x12R\n\x04tune\x18\x11 \x03(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.Measurement\x12V\n\x08\x66\x65\x65\x64\x62\x61\x63k\x18\x12 \x03(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.Measurement\x12\x43\n\x16lastFeedbackDatasetRef\x18\x13 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12\r\n\x05phase\x18\x14 \x01(\t\x12\x12\n\nreportName\x18\x15 \x01(\t\x12\x11\n\treportURI\x18\x16 \x01(\t\x12\x13\n\x0bmanifestURI\x18\x17 \x01(\t\x12\x17\n\x0ftrainWeightsURI\x18\x18 \x01(\t\x12\x16\n\x0etestWeightsURI\x18\x19 \x01(\t\x12\x16\n\x0e\x66ullWeightsURI\x18\x1a \x01(\t\x12\x18\n\x10\x64riftDetectorURI\x18\x1b \x01(\t\x12\x1c\n\x14trainLabelEncoderURI\x18\x1c \x01(\t\x12\x1b\n\x13testLabelEncoderURI\x18\x1d \x01(\t\x12\x1b\n\x13\x66ullLabelEncoderURI\x18\x1e \x01(\t\x12\x0f\n\x07logsURI\x18\x1f \x01(\t\x12\x12\n\nprofileURI\x18  \x01(\t\x12\x1c\n\x14misclassificationURI\x18! \x01(\t\x12\x0e\n\x06tarURI\x18\" \x01(\t\x12\x0e\n\x06\x61ppURI\x18# \x01(\t\x12\x11\n\timageName\x18$ \x01(\t\x12g\n\x12impurityImportance\x18% \x03(\x0b\x32K.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.FeatureImportance\x12j\n\x15permutationImportance\x18& \x03(\x0b\x32K.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.FeatureImportance\x12\x13\n\x0b\x66orecastURI\x18\' \x01(\t\x12X\n\x07runtime\x18( \x01(\x0b\x32G.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.RuntimeStatus\x12X\n\x0ctrainDataset\x18) \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataLocation\x12W\n\x0btestDataset\x18* \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataLocation\x12]\n\x11validationDataset\x18+ \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataLocation\x12\x1a\n\x12observedGeneration\x18, \x01(\x03\x12\x14\n\x0ctrainingRows\x18- \x01(\x05\x12\x13\n\x0btestingRows\x18. \x01(\x05\x12\x16\n\x0evalidationRows\x18/ \x01(\x05\x12\x15\n\rfailureReason\x18\x30 \x01(\t\x12\x16\n\x0e\x66\x61ilureMessage\x18\x31 \x01(\t\x12\x10\n\x08progress\x18\x32 \x01(\x05\x12\x13\n\x0bsizeInBytes\x18\x33 \x01(\x05\x12\x0f\n\x07latency\x18\x34 \x01(\x01\x12\x0b\n\x03url\x18\x35 \x01(\t\x12X\n\x07serving\x18\x36 \x01(\x0b\x32G.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ServingStatus\x12>\n\nreleasedAt\x18\x37 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12?\n\x0bpredictedAt\x18\x38 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x13\n\x0btarFileHash\x18\x39 \x01(\t\x12\x11\n\timageHash\x18: \x01(\t\x12^\n\x10trainingDataHash\x18; \x01(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.DataHashes\x12h\n\x11trainingResources\x18< \x01(\x0b\x32M.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ResourceConsumption\x12g\n\x10testingResources\x18= \x01(\x0b\x32M.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ResourceConsumption\x12\x11\n\ttrainedBy\x18> \x01(\t\x12\x0c\n\x04team\x18? \x01(\t\x12K\n\x04logs\x18\x41 \x01(\x0b\x32=.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.Logs\x12V\n\x08rocCurve\x18\x42 \x01(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.RocAucCurve\x12Q\n\x07prCurve\x18\x43 \x01(\x0b\x32@.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.PRCurve\x12\x66\n\x14trainConfusionMatrix\x18\x44 \x01(\x0b\x32H.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ConfusionMatrix\x12\x65\n\x13testConfusionMatrix\x18\x45 \x01(\x0b\x32H.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ConfusionMatrix\x12\x61\n\x16\x63orrelationsWithTarget\x18\x46 \x03(\x0b\x32\x41.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Correlation\x12Z\n\x0ftopCorrelations\x18G \x03(\x0b\x32\x41.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.Correlation\x12=\n\tupdatedAt\x18H \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12Z\n\ngovernance\x18I \x01(\x0b\x32\x46.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.GovernanceStatus\x12j\n\x10interpretability\x18J \x01(\x0b\x32P.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.InterpretabilityStatus\x12O\n\x06images\x18K \x01(\x0b\x32?.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.Images\x12\x61\n\x0funitTestsResult\x18L \x01(\x0b\x32H.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.TestSuiteResult\x12\x65\n\x13\x66\x65\x65\x64\x62\x61\x63kTestsResult\x18M \x01(\x0b\x32H.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.TestSuiteResult\x12]\n\x07groupby\x18N \x01(\x0b\x32L.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelGroupByStatus\x12Z\n\x06stages\x18O \x03(\x0b\x32J.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelStageStatus\x12[\n\x05usage\x18P \x01(\x0b\x32L.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ResourceConsumption\x12\x43\n\nconditions\x18Q \x03(\x0b\x32/.k8s.io.apimachinery.pkg.apis.meta.v1.Condition\"\xdf\x01\n\x0eModelTestSuite\x12=\n\x10\x62\x61selineModelRef\x18\x01 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12\x37\n\ndatasetRef\x18\x02 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12U\n\tunitTests\x18\x03 \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.TestSuite\" \n\x10NLPEstimatorSpec\x12\x0c\n\x04\x62\x61se\x18\x01 \x01(\t\"/\n\x10NNLayerParameter\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"\xcc\x01\n\x1bPartitionModelLocationsSpec\x12\x17\n\x0fpartitionFolder\x18\x01 \x01(\t\x12\x1e\n\x16partitionProfileFolder\x18\x02 \x01(\t\x12\x1b\n\x13partitionReportFile\x18\x03 \x01(\t\x12\x1c\n\x14partitionModelFolder\x18\x04 \x01(\t\x12\x1a\n\x12partitionModelFile\x18\x05 \x01(\t\x12\x1d\n\x15partitionForecastFile\x18\x06 \x01(\t\"\x84\x01\n\x17PercentilePrunerOptions\x12\x12\n\npercentile\x18\x01 \x01(\x05\x12\x15\n\rstartupTrials\x18\x02 \x01(\x05\x12\x13\n\x0bwarmupSteps\x18\x03 \x01(\x05\x12\x16\n\x0eintervalTrials\x18\x04 \x01(\x05\x12\x11\n\tminTrials\x18\x05 \x01(\x05\"\x93\x04\n\nPrunerSpec\x12\x0c\n\x04type\x18\x01 \x01(\t\x12]\n\x06median\x18\x02 \x01(\x0b\x32M.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.MedianPrunerOptions\x12\x65\n\npercentile\x18\x03 \x01(\x0b\x32Q.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.PercentilePrunerOptions\x12m\n\x11successiveHalving\x18\x04 \x01(\x0b\x32R.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.SuccessiveHalvingOptions\x12]\n\thyperband\x18\x05 \x01(\x0b\x32J.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.HyperbandOptions\x12\x63\n\tthreshold\x18\x06 \x01(\x0b\x32P.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ThresholdPrunerOptions\"\xd0\x01\n\x18RegressionForecasterSpec\x12\x10\n\x08\x65nsemble\x18\x01 \x01(\x08\x12\x12\n\nimputation\x18\x02 \x01(\t\x12\x10\n\x08\x65ncoding\x18\x03 \x01(\t\x12\x0f\n\x07scaling\x18\x04 \x01(\t\x12\x0c\n\x04\x64\x61te\x18\x05 \x01(\x08\x12\x0f\n\x07windows\x18\x06 \x03(\x05\x12\x0c\n\x04lags\x18\x07 \x03(\x05\x12\x11\n\tfunctions\x18\x08 \x03(\t\x12\x0b\n\x03\x65ma\x18\t \x01(\x08\x12\x0b\n\x03log\x18\n \x01(\x08\x12\x11\n\treduction\x18\x0b \x01(\t\"\xf8\x01\n\x06Report\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12R\n\x04spec\x18\x02 \x01(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ReportSpec\x12V\n\x06status\x18\x03 \x01(\x0b\x32\x46.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ReportStatus\"\x8a\x01\n\x13ReportGroupByStatus\x12\x12\n\nreportsURI\x18\x01 \x01(\t\x12_\n\rworkerResults\x18\x04 \x03(\x0b\x32H.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.WorkerRunResult\"\x9f\x01\n\nReportList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12O\n\x05items\x18\x02 \x03(\x0b\x32@.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Report\"\xb4\x04\n\nReportSpec\x12\x13\n\x0bversionName\x18\x01 \x01(\t\x12\x36\n\tentityRef\x18\x02 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12T\n\x08location\x18\x05 \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataLocation\x12\x12\n\nreportType\x18\x06 \x01(\t\x12\x0e\n\x06\x66ormat\x18\x07 \x01(\t\x12\x14\n\x0cnotifierName\x18\x08 \x01(\t\x12\r\n\x05owner\x18\t \x01(\t\x12X\n\tresources\x18\n \x01(\x0b\x32\x45.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ResourceSpec\x12\x0f\n\x07timeout\x18\x0b \x01(\x03\x12Z\n\x06\x63ustom\x18\x0c \x01(\x0b\x32J.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.CustomReportSpec\x12\x33\n\x06labRef\x18\x0e \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12\x0b\n\x03key\x18\x0f \x03(\t\x12\x16\n\x0emodelClassName\x18\x10 \x01(\t\x12\x19\n\x11modelClassRunName\x18\x11 \x01(\t\"\xe7\x03\n\x0cReportStatus\x12?\n\x0b\x63ompletedAt\x18\x01 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\r\n\x05phase\x18\x02 \x01(\t\x12\x0b\n\x03uri\x18\x03 \x01(\t\x12\x1a\n\x12observedGeneration\x18\x04 \x01(\x03\x12\x15\n\rfailureReason\x18\x05 \x01(\t\x12\x16\n\x0e\x66\x61ilureMessage\x18\x06 \x01(\t\x12K\n\x04logs\x18\x07 \x01(\x0b\x32=.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.Logs\x12=\n\tupdatedAt\x18\x08 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12^\n\x07groupby\x18\t \x01(\x0b\x32M.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ReportGroupByStatus\x12\x43\n\nconditions\x18\n \x03(\x0b\x32/.k8s.io.apimachinery.pkg.apis.meta.v1.Condition\"<\n\x13ResourceConsumption\x12\x0b\n\x03\x63pu\x18\x01 \x01(\x01\x12\x0b\n\x03mem\x18\x02 \x01(\x01\x12\x0b\n\x03gpu\x18\x03 \x01(\x01\"\xf1\x01\n\rRuntimeStatus\x12\x15\n\rpythonVersion\x18\x01 \x01(\t\x12\x11\n\tpythonCmd\x18\x02 \x01(\t\x12\n\n\x02os\x18\x03 \x01(\t\x12s\n\x0epythonPackages\x18\x04 \x03(\x0b\x32[.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.RuntimeStatus.PythonPackagesEntry\x1a\x35\n\x13PythonPackagesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x9e\x05\n\nSearchSpec\x12\x0f\n\x07sampler\x18\x01 \x01(\t\x12T\n\x06pruner\x18\x02 \x01(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.PrunerSpec\x12\x0f\n\x07maxCost\x18\x03 \x01(\x05\x12\x0f\n\x07maxTime\x18\x04 \x01(\x05\x12\x11\n\tmaxModels\x18\x05 \x01(\x05\x12\x14\n\x0cminBestScore\x18\x06 \x01(\x01\x12\x10\n\x08trainers\x18\x07 \x01(\x05\x12\x0c\n\x04test\x18\x08 \x01(\x05\x12\x11\n\tretainTop\x18\t \x01(\x05\x12\x13\n\x0bretainedFor\x18\n \x01(\x05\x12g\n\x0bsearchSpace\x18\x0b \x01(\x0b\x32R.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.AlgorithmSearchSpaceSpec\x12Z\n\tearlyStop\x18\x0c \x01(\x0b\x32G.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.EarlyStopSpec\x12Y\n\tobjective\x18\x0e \x01(\x0b\x32\x46.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ObjectiveSpec\x12Z\n\nobjective2\x18\x0f \x01(\x0b\x32\x46.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ObjectiveSpec\x12\x0c\n\x04tune\x18\x10 \x01(\x08\x12\x0c\n\x04goal\x18\x11 \x01(\t\"L\n\x15SeasonalityPeriodSpec\x12\x0f\n\x07\x65nabled\x18\x01 \x01(\x08\x12\x0c\n\x04\x61uto\x18\x02 \x01(\x08\x12\x14\n\x0c\x66ourierOrder\x18\x03 \x01(\x05\"\x87\x04\n\x0fSeasonalitySpec\x12\x0c\n\x04\x61uto\x18\x01 \x01(\x08\x12_\n\x06yearly\x18\x02 \x01(\x0b\x32O.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.SeasonalityPeriodSpec\x12\x62\n\tquarterly\x18\x03 \x01(\x0b\x32O.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.SeasonalityPeriodSpec\x12`\n\x07monthly\x18\x04 \x01(\x0b\x32O.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.SeasonalityPeriodSpec\x12_\n\x06weekly\x18\x05 \x01(\x0b\x32O.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.SeasonalityPeriodSpec\x12^\n\x05\x64\x61ily\x18\x06 \x01(\x0b\x32O.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.SeasonalityPeriodSpec\"<\n\x0bSegmentSpec\x12\x12\n\ncolumnName\x18\x01 \x01(\t\x12\n\n\x02op\x18\x02 \x01(\t\x12\r\n\x05value\x18\x03 \x01(\t\"\x96\x03\n\x12ServingEnvironment\x12\x0c\n\x04name\x18\x01 \x01(\t\x12Q\n\x05tests\x18\x02 \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.TestSuite\x12;\n\x0eservingSiteRef\x18\x03 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12S\n\x06\x61\x63\x63\x65ss\x18\x04 \x01(\x0b\x32\x43.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.AccessSpec\x12\x10\n\x08replicas\x18\x05 \x01(\x05\x12\x0e\n\x06online\x18\x06 \x01(\x08\x12\x11\n\tdashboard\x18\x07 \x01(\x08\x12X\n\tresources\x18\x08 \x01(\x0b\x32\x45.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ResourceSpec\"\x93\x04\n\x0bServingSpec\x12\x0f\n\x07\x65nabled\x18\x01 \x01(\x08\x12\x15\n\rpredictorName\x18\x02 \x01(\t\x12X\n\tresources\x18\x03 \x01(\x0b\x32\x45.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ResourceSpec\x12\x1d\n\x15predictorTemplateName\x18\x05 \x01(\t\x12;\n\x0eservingSiteRef\x18\x06 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12\x0e\n\x06online\x18\x07 \x01(\x08\x12\x11\n\tdashboard\x18\x08 \x01(\x08\x12S\n\x06\x61\x63\x63\x65ss\x18\t \x01(\x0b\x32\x43.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.AccessSpec\x12\x10\n\x08replicas\x18\n \x01(\x05\x12\x13\n\x0bshadowFirst\x18\x0b \x01(\x08\x12\x0e\n\x06manual\x18\x0c \x01(\x08\x12\x37\n\napprovedBy\x18\r \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12>\n\napprovedAt\x18\x0e \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\"g\n\rServingStatus\x12\x15\n\rpredictorName\x18\x02 \x01(\t\x12\x13\n\x0b\x64\x61taAppName\x18\x03 \x01(\t\x12\x14\n\x0cpredictorURI\x18\x04 \x01(\t\x12\x14\n\x0c\x64\x61shboardURI\x18\x05 \x01(\t\"\xf5\x01\n\x05Study\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12Q\n\x04spec\x18\x02 \x01(\x0b\x32\x43.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.StudySpec\x12U\n\x06status\x18\x03 \x01(\x0b\x32\x45.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.StudyStatus\"\x89\x01\n\x12StudyGroupByStatus\x12\x12\n\nstudiesURI\x18\x01 \x01(\t\x12_\n\rworkerResults\x18\x02 \x03(\x0b\x32H.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.WorkerRunResult\"\x9d\x01\n\tStudyList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12N\n\x05items\x18\x02 \x03(\x0b\x32?.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study\"\xb4\x02\n\x10StudyPhaseStatus\x12=\n\tstartedAt\x18\x01 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12?\n\x0b\x63ompletedAt\x18\x02 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x1a\n\x12waitingModelsCount\x18\x03 \x01(\x05\x12\x1a\n\x12runningModelsCount\x18\x04 \x01(\x05\x12\x19\n\x11\x66\x61iledModelsCount\x18\x05 \x01(\x05\x12\x1c\n\x14\x63ompletedModelsCount\x18\x06 \x01(\x05\x12\x11\n\tbestScore\x18\x07 \x01(\x01\x12\x1c\n\x14modelsWithNoProgress\x18\x08 \x01(\x05\"a\n\x11StudyScheduleSpec\x12\x0f\n\x07\x65nabled\x18\x01 \x01(\x08\x12;\n\x07startAt\x18\x02 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\"\xd0\x10\n\tStudySpec\x12\x13\n\x0bversionName\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x04 \x01(\t\x12\x33\n\x06labRef\x18\x05 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12\x13\n\x0b\x64\x61tasetName\x18\x06 \x01(\t\x12\x0c\n\x04task\x18\x07 \x01(\t\x12\x0f\n\x07subtask\x18\x08 \x01(\t\x12h\n\x08\x66\x65Search\x18\t \x01(\x0b\x32V.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.FeatureEngineeringSearchSpec\x12i\n\x10imbalanceHandler\x18\n \x01(\x0b\x32O.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ImbalanceHandlingSpec\x12X\n\x08\x62\x61seline\x18\x0b \x01(\x0b\x32\x46.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.BaselineSpec\x12T\n\x06search\x18\x0c \x01(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.SearchSpec\x12Z\n\tensembles\x18\r \x01(\x0b\x32G.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.EnsemblesSpec\x12`\n\x10trainingTemplate\x18\x0e \x01(\x0b\x32\x46.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.TrainingSpec\x12]\n\x0b\x66\x63tTemplate\x18\x10 \x01(\x0b\x32H.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ForecasterSpec\x12]\n\x08schedule\x18\x11 \x01(\x0b\x32K.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.StudyScheduleSpec\x12h\n\x10interpretability\x18\x12 \x01(\x0b\x32N.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.InterpretabilitySpec\x12`\n\x0e\x64riftDetection\x18\x13 \x01(\x0b\x32H.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.DriftModelSpec\x12\x0f\n\x07\x61\x62orted\x18\x14 \x01(\x08\x12\x10\n\x08reported\x18\x15 \x01(\x08\x12\x0e\n\x06paused\x18\x16 \x01(\x08\x12\x10\n\x08profiled\x18\x17 \x01(\x08\x12\x16\n\x0emodelPublished\x18\x18 \x01(\x08\x12\x18\n\x10modelImagePushed\x18\x19 \x01(\x08\x12\x16\n\x0emodelExplained\x18\x1a \x01(\x08\x12\x0c\n\x04\x66\x61st\x18\x1b \x01(\x08\x12T\n\x08location\x18\x1c \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataLocation\x12\r\n\x05owner\x18\x1d \x01(\t\x12Z\n\x0b\x63ompilation\x18\x1e \x01(\x0b\x32\x45.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.CompilerSpec\x12\x10\n\x08template\x18\x1f \x01(\x08\x12\x0f\n\x07\x66lagged\x18  \x01(\x08\x12_\n\x0cnotification\x18! \x01(\x0b\x32I.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.NotificationSpec\x12\\\n\nmodelImage\x18\" \x01(\x0b\x32H.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelImageSpec\x12[\n\x02gc\x18# \x01(\x0b\x32O.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.GarbageCollectionSpec\x12\x0b\n\x03ttl\x18$ \x01(\x05\x12\x14\n\x0cmodelVersion\x18% \x01(\t\x12\x0f\n\x07timeout\x18& \x01(\x05\x12\x15\n\rcodeGenerated\x18\' \x01(\x08\x12]\n\x11unitTestsTemplate\x18( \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.TestSuite\x12i\n\x0egroupLocations\x18) \x01(\x0b\x32Q.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.GroupSplitLocationsSpec\x12\x16\n\x0emodelClassName\x18* \x01(\t\x12\x19\n\x11modelClassRunName\x18+ \x01(\t\"\x8f\x10\n\x0bStudyStatus\x12\x13\n\x0bmodelsCount\x18\x01 \x01(\x05\x12?\n\x0b\x63ompletedAt\x18\x03 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x11\n\tbestModel\x18\x04 \x01(\t\x12\x16\n\x0e\x62\x65stModelScore\x18\x05 \x01(\x01\x12\x12\n\nprofileURI\x18\x06 \x01(\t\x12\x11\n\treportURI\x18\x07 \x01(\t\x12\x12\n\nreportName\x18\x08 \x01(\t\x12\r\n\x05phase\x18\t \x01(\t\x12\x1a\n\x12observedGeneration\x18\n \x01(\x03\x12X\n\x0ctrainDataset\x18\x0b \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataLocation\x12W\n\x0btestDataset\x18\x0c \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataLocation\x12]\n\x11validationDataset\x18\r \x01(\x0b\x32\x42.github.com.metaprov.modelaapi.pkg.apis.data.v1alpha1.DataLocation\x12\x13\n\x0blastModelID\x18\x0e \x01(\x03\x12\x15\n\rfailureReason\x18\x0f \x01(\t\x12\x16\n\x0e\x66\x61ilureMessage\x18\x10 \x01(\t\x12\x19\n\x11trainingRowsCount\x18\x11 \x01(\x05\x12\x18\n\x10testingRowsCount\x18\x12 \x01(\x05\x12\x1b\n\x13validationRowsCount\x18\x13 \x01(\x05\x12\x10\n\x08progress\x18\x14 \x01(\x05\x12^\n\x10trainingDataHash\x18\x16 \x01(\x0b\x32\x44.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.DataHashes\x12\x13\n\x0btriggeredBy\x18\x17 \x01(\t\x12K\n\x04logs\x18\x18 \x01(\x0b\x32=.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.Logs\x12\x66\n\x12\x66\x65\x61tureEngineering\x18\x19 \x01(\x0b\x32J.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.StudyPhaseStatus\x12\\\n\x08\x62\x61seline\x18\x1a \x01(\x0b\x32J.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.StudyPhaseStatus\x12Z\n\x06search\x18\x1b \x01(\x0b\x32J.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.StudyPhaseStatus\x12\\\n\x08\x65nsemble\x18\x1c \x01(\x0b\x32J.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.StudyPhaseStatus\x12X\n\x04test\x18\x1d \x01(\x0b\x32J.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.StudyPhaseStatus\x12[\n\x07\x65xplain\x18\x1e \x01(\x0b\x32J.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.StudyPhaseStatus\x12\x65\n\x0e\x64riftDetection\x18\x1f \x01(\x0b\x32M.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.DriftDetectorStatus\x12=\n\tupdatedAt\x18  \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12`\n\x06\x62\x65stFE\x18! \x01(\x0b\x32P.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.FeatureEngineeringSpec\x12]\n\x02gc\x18\" \x01(\x0b\x32Q.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.GarbageCollectionStatus\x12]\n\x07groupby\x18# \x01(\x0b\x32L.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.StudyGroupByStatus\x12[\n\x05usage\x18$ \x01(\x0b\x32L.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ResourceConsumption\x12\x43\n\nconditions\x18% \x03(\x0b\x32/.k8s.io.apimachinery.pkg.apis.meta.v1.Condition\"\x7f\n\x18SuccessiveHalvingOptions\x12\x14\n\x0cminResources\x18\x01 \x01(\x05\x12\x17\n\x0freductionFactor\x18\x02 \x01(\x05\x12\x1c\n\x14minEarlyStoppingRate\x18\x03 \x01(\x05\x12\x16\n\x0e\x62ootstrapCount\x18\x04 \x01(\x05\"h\n\x15SuccessiveHalvingSpec\x12\x0e\n\x06\x62udget\x18\x01 \x01(\x05\x12\x0f\n\x07\x62racket\x18\x02 \x01(\x05\x12\x0c\n\x04rung\x18\x03 \x01(\x05\x12\x0e\n\x06\x63onfID\x18\x04 \x01(\x05\x12\x10\n\x08modality\x18\x1a \x01(\t\"\xad\x01\n\x10TextPipelineSpec\x12\x0f\n\x07\x65ncoder\x18\x01 \x01(\t\x12\x11\n\ttokenizer\x18\x02 \x01(\t\x12\x11\n\tstopwords\x18\x03 \x01(\x08\x12\x0b\n\x03pos\x18\x04 \x01(\x08\x12\r\n\x05lemma\x18\x05 \x01(\x08\x12\x0c\n\x04stem\x18\x06 \x01(\x08\x12\x11\n\tembedding\x18\x07 \x01(\t\x12\x0b\n\x03svd\x18\x08 \x01(\x08\x12\x18\n\x10maxSvdComponents\x18\t \x01(\x05\"b\n\x16ThresholdPrunerOptions\x12\r\n\x05lower\x18\x01 \x01(\x01\x12\r\n\x05upper\x18\x02 \x01(\x01\x12\x13\n\x0bwarmupSteps\x18\x03 \x01(\x05\x12\x15\n\rintervalSteps\x18\x04 \x01(\x05\"\x8a\x01\n\x0fTimeSeriesEvent\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0e\n\x06method\x18\x02 \x01(\t\x12\x0f\n\x07holiday\x18\x03 \x01(\x08\x12\x0f\n\x07\x63ountry\x18\x04 \x01(\t\x12\x10\n\x08preEvent\x18\x05 \x01(\x05\x12\x11\n\tpostEvent\x18\x06 \x01(\x05\x12\x12\n\ntimePoints\x18\x07 \x03(\t\"\x9c\x05\n\x0cTrainingSpec\x12\x33\n\x06labRef\x18\x01 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12\x10\n\x08priority\x18\x02 \x01(\t\x12\x0e\n\x06\x63vtype\x18\x03 \x01(\t\x12\n\n\x02\x63V\x18\x04 \x01(\x08\x12\r\n\x05\x66olds\x18\x05 \x01(\x05\x12V\n\x05split\x18\x06 \x01(\x0b\x32G.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.DataSplitSpec\x12\x13\n\x0b\x65valMetrics\x18\x07 \x03(\t\x12[\n\x02sh\x18\n \x01(\x0b\x32O.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.SuccessiveHalvingSpec\x12\x0c\n\x04seed\x18\x0b \x01(\x01\x12X\n\tresources\x18\x0c \x01(\x0b\x32\x45.github.com.metaprov.modelaapi.pkg.apis.catalog.v1alpha1.ResourceSpec\x12\x0b\n\x03gpu\x18\r \x01(\x08\x12\x13\n\x0b\x64istributed\x18\x0e \x01(\x08\x12\x19\n\x11\x66\x65\x61tureImportance\x18\x0f \x01(\x08\x12\x11\n\tnodeCount\x18\x10 \x01(\x05\x12\x11\n\tsamplePct\x18\x11 \x01(\x05\x12\\\n\ncheckpoint\x18\x12 \x01(\x0b\x32H.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.CheckpointSpec\x12\x10\n\x08logLevel\x18\x13 \x01(\t\x12\x15\n\rtimeoutInSecs\x18\x14 \x01(\x05\"\xdc\x01\n\x18UnivariateForecastStatus\x12\x1b\n\x13gridSearchResultURI\x18\x01 \x01(\t\x12g\n\rbaseEstimator\x18\x02 \x01(\x0b\x32P.github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ClassicalEstimatorSpec\x12\x10\n\x08modelURI\x18\x03 \x01(\t\x12\x13\n\x0b\x63vResultURI\x18\x04 \x01(\t\x12\x13\n\x0b\x66orecastURI\x18\x05 \x01(\t\"\'\n\x11VideoPipelineSpec\x12\x12\n\nfeaturizer\x18\x01 \x01(\t\"=\n\nWindowSpec\x12\x10\n\x08interval\x18\x01 \x01(\t\x12\r\n\x05start\x18\x02 \x01(\x05\x12\x0e\n\x06length\x18\x03 \x01(\x05\x42:Z8github.com/metaprov/modelaapi/pkg/apis/training/v1alpha1')



_ALGORITHMPARAMETERRANGE = DESCRIPTOR.message_types_by_name['AlgorithmParameterRange']
_ALGORITHMSEARCHSPACESPEC = DESCRIPTOR.message_types_by_name['AlgorithmSearchSpaceSpec']
_ANOMALY = DESCRIPTOR.message_types_by_name['Anomaly']
_AUDIOPIPELINESPEC = DESCRIPTOR.message_types_by_name['AudioPipelineSpec']
_BACKTESTSPEC = DESCRIPTOR.message_types_by_name['BacktestSpec']
_BASELINESPEC = DESCRIPTOR.message_types_by_name['BaselineSpec']
_CHANGEPOINT = DESCRIPTOR.message_types_by_name['ChangePoint']
_CHATBOTESTIMATORSPEC = DESCRIPTOR.message_types_by_name['ChatbotEstimatorSpec']
_CHECKPOINTSPEC = DESCRIPTOR.message_types_by_name['CheckpointSpec']
_CLASSICALESTIMATORSPEC = DESCRIPTOR.message_types_by_name['ClassicalEstimatorSpec']
_CUSTOMREPORTSPEC = DESCRIPTOR.message_types_by_name['CustomReportSpec']
_DATAHASHES = DESCRIPTOR.message_types_by_name['DataHashes']
_DATASPLITSPEC = DESCRIPTOR.message_types_by_name['DataSplitSpec']
_DEEPESTIMATORLAYER = DESCRIPTOR.message_types_by_name['DeepEstimatorLayer']
_DEEPESTIMATORSPEC = DESCRIPTOR.message_types_by_name['DeepEstimatorSpec']
_DRIFTDETECTORSTATUS = DESCRIPTOR.message_types_by_name['DriftDetectorStatus']
_DRIFTMODELSPEC = DESCRIPTOR.message_types_by_name['DriftModelSpec']
_EARLYSTOPSPEC = DESCRIPTOR.message_types_by_name['EarlyStopSpec']
_ENSEMBLERULES = DESCRIPTOR.message_types_by_name['EnsembleRules']
_ENSEMBLESPEC = DESCRIPTOR.message_types_by_name['EnsembleSpec']
_ENSEMBLESSPEC = DESCRIPTOR.message_types_by_name['EnsemblesSpec']
_ENTITYREF = DESCRIPTOR.message_types_by_name['EntityRef']
_EVALMETRICS = DESCRIPTOR.message_types_by_name['EvalMetrics']
_EVALPERIOD = DESCRIPTOR.message_types_by_name['EvalPeriod']
_FEATUREENGINEERINGPIPELINE = DESCRIPTOR.message_types_by_name['FeatureEngineeringPipeline']
_FEATUREENGINEERINGSEARCHSPEC = DESCRIPTOR.message_types_by_name['FeatureEngineeringSearchSpec']
_FEATUREENGINEERINGSEARCHSTATUS = DESCRIPTOR.message_types_by_name['FeatureEngineeringSearchStatus']
_FEATUREENGINEERINGSPEC = DESCRIPTOR.message_types_by_name['FeatureEngineeringSpec']
_FEATUREIMPORTANCE = DESCRIPTOR.message_types_by_name['FeatureImportance']
_FEATUREINFO = DESCRIPTOR.message_types_by_name['FeatureInfo']
_FEATUREPAIR = DESCRIPTOR.message_types_by_name['FeaturePair']
_FEATURESELECTIONSPEC = DESCRIPTOR.message_types_by_name['FeatureSelectionSpec']
_FORECASTERSPEC = DESCRIPTOR.message_types_by_name['ForecasterSpec']
_GARBAGECOLLECTIONSPEC = DESCRIPTOR.message_types_by_name['GarbageCollectionSpec']
_GARBAGECOLLECTIONSTATUS = DESCRIPTOR.message_types_by_name['GarbageCollectionStatus']
_GENERATEDCOLUMNSPEC = DESCRIPTOR.message_types_by_name['GeneratedColumnSpec']
_GROUPSPLITLOCATIONSSPEC = DESCRIPTOR.message_types_by_name['GroupSplitLocationsSpec']
_HYPERPARAMETERVALUE = DESCRIPTOR.message_types_by_name['HyperParameterValue']
_HYPERBANDOPTIONS = DESCRIPTOR.message_types_by_name['HyperbandOptions']
_IMAGEPIPELINESPEC = DESCRIPTOR.message_types_by_name['ImagePipelineSpec']
_IMBALANCEHANDLINGSPEC = DESCRIPTOR.message_types_by_name['ImbalanceHandlingSpec']
_INTERPRETABILITYSPEC = DESCRIPTOR.message_types_by_name['InterpretabilitySpec']
_INTERPRETABILITYSTATUS = DESCRIPTOR.message_types_by_name['InterpretabilityStatus']
_LEVEL = DESCRIPTOR.message_types_by_name['Level']
_MEDIANPRUNEROPTIONS = DESCRIPTOR.message_types_by_name['MedianPrunerOptions']
_MODEL = DESCRIPTOR.message_types_by_name['Model']
_MODELCLASS = DESCRIPTOR.message_types_by_name['ModelClass']
_MODELCLASSDATASPEC = DESCRIPTOR.message_types_by_name['ModelClassDataSpec']
_MODELCLASSLIST = DESCRIPTOR.message_types_by_name['ModelClassList']
_MODELCLASSRUN = DESCRIPTOR.message_types_by_name['ModelClassRun']
_MODELCLASSRUNLIST = DESCRIPTOR.message_types_by_name['ModelClassRunList']
_MODELCLASSRUNSPEC = DESCRIPTOR.message_types_by_name['ModelClassRunSpec']
_MODELCLASSRUNSTATUS = DESCRIPTOR.message_types_by_name['ModelClassRunStatus']
_MODELCLASSSERVINGSPEC = DESCRIPTOR.message_types_by_name['ModelClassServingSpec']
_MODELCLASSSPEC = DESCRIPTOR.message_types_by_name['ModelClassSpec']
_MODELCLASSSTATUS = DESCRIPTOR.message_types_by_name['ModelClassStatus']
_MODELCLASSTRAININGSPEC = DESCRIPTOR.message_types_by_name['ModelClassTrainingSpec']
_MODELGROUPBYSTATUS = DESCRIPTOR.message_types_by_name['ModelGroupByStatus']
_MODELIMAGESPEC = DESCRIPTOR.message_types_by_name['ModelImageSpec']
_MODELLIST = DESCRIPTOR.message_types_by_name['ModelList']
_MODELRESULT = DESCRIPTOR.message_types_by_name['ModelResult']
_MODELSPEC = DESCRIPTOR.message_types_by_name['ModelSpec']
_MODELSTAGESTATUS = DESCRIPTOR.message_types_by_name['ModelStageStatus']
_MODELSTATUS = DESCRIPTOR.message_types_by_name['ModelStatus']
_MODELTESTSUITE = DESCRIPTOR.message_types_by_name['ModelTestSuite']
_NLPESTIMATORSPEC = DESCRIPTOR.message_types_by_name['NLPEstimatorSpec']
_NNLAYERPARAMETER = DESCRIPTOR.message_types_by_name['NNLayerParameter']
_PARTITIONMODELLOCATIONSSPEC = DESCRIPTOR.message_types_by_name['PartitionModelLocationsSpec']
_PERCENTILEPRUNEROPTIONS = DESCRIPTOR.message_types_by_name['PercentilePrunerOptions']
_PRUNERSPEC = DESCRIPTOR.message_types_by_name['PrunerSpec']
_REGRESSIONFORECASTERSPEC = DESCRIPTOR.message_types_by_name['RegressionForecasterSpec']
_REPORT = DESCRIPTOR.message_types_by_name['Report']
_REPORTGROUPBYSTATUS = DESCRIPTOR.message_types_by_name['ReportGroupByStatus']
_REPORTLIST = DESCRIPTOR.message_types_by_name['ReportList']
_REPORTSPEC = DESCRIPTOR.message_types_by_name['ReportSpec']
_REPORTSTATUS = DESCRIPTOR.message_types_by_name['ReportStatus']
_RESOURCECONSUMPTION = DESCRIPTOR.message_types_by_name['ResourceConsumption']
_RUNTIMESTATUS = DESCRIPTOR.message_types_by_name['RuntimeStatus']
_RUNTIMESTATUS_PYTHONPACKAGESENTRY = _RUNTIMESTATUS.nested_types_by_name['PythonPackagesEntry']
_SEARCHSPEC = DESCRIPTOR.message_types_by_name['SearchSpec']
_SEASONALITYPERIODSPEC = DESCRIPTOR.message_types_by_name['SeasonalityPeriodSpec']
_SEASONALITYSPEC = DESCRIPTOR.message_types_by_name['SeasonalitySpec']
_SEGMENTSPEC = DESCRIPTOR.message_types_by_name['SegmentSpec']
_SERVINGENVIRONMENT = DESCRIPTOR.message_types_by_name['ServingEnvironment']
_SERVINGSPEC = DESCRIPTOR.message_types_by_name['ServingSpec']
_SERVINGSTATUS = DESCRIPTOR.message_types_by_name['ServingStatus']
_STUDY = DESCRIPTOR.message_types_by_name['Study']
_STUDYGROUPBYSTATUS = DESCRIPTOR.message_types_by_name['StudyGroupByStatus']
_STUDYLIST = DESCRIPTOR.message_types_by_name['StudyList']
_STUDYPHASESTATUS = DESCRIPTOR.message_types_by_name['StudyPhaseStatus']
_STUDYSCHEDULESPEC = DESCRIPTOR.message_types_by_name['StudyScheduleSpec']
_STUDYSPEC = DESCRIPTOR.message_types_by_name['StudySpec']
_STUDYSTATUS = DESCRIPTOR.message_types_by_name['StudyStatus']
_SUCCESSIVEHALVINGOPTIONS = DESCRIPTOR.message_types_by_name['SuccessiveHalvingOptions']
_SUCCESSIVEHALVINGSPEC = DESCRIPTOR.message_types_by_name['SuccessiveHalvingSpec']
_TEXTPIPELINESPEC = DESCRIPTOR.message_types_by_name['TextPipelineSpec']
_THRESHOLDPRUNEROPTIONS = DESCRIPTOR.message_types_by_name['ThresholdPrunerOptions']
_TIMESERIESEVENT = DESCRIPTOR.message_types_by_name['TimeSeriesEvent']
_TRAININGSPEC = DESCRIPTOR.message_types_by_name['TrainingSpec']
_UNIVARIATEFORECASTSTATUS = DESCRIPTOR.message_types_by_name['UnivariateForecastStatus']
_VIDEOPIPELINESPEC = DESCRIPTOR.message_types_by_name['VideoPipelineSpec']
_WINDOWSPEC = DESCRIPTOR.message_types_by_name['WindowSpec']
AlgorithmParameterRange = _reflection.GeneratedProtocolMessageType('AlgorithmParameterRange', (_message.Message,), {
  'DESCRIPTOR' : _ALGORITHMPARAMETERRANGE,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.AlgorithmParameterRange)
  })
_sym_db.RegisterMessage(AlgorithmParameterRange)

AlgorithmSearchSpaceSpec = _reflection.GeneratedProtocolMessageType('AlgorithmSearchSpaceSpec', (_message.Message,), {
  'DESCRIPTOR' : _ALGORITHMSEARCHSPACESPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.AlgorithmSearchSpaceSpec)
  })
_sym_db.RegisterMessage(AlgorithmSearchSpaceSpec)

Anomaly = _reflection.GeneratedProtocolMessageType('Anomaly', (_message.Message,), {
  'DESCRIPTOR' : _ANOMALY,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Anomaly)
  })
_sym_db.RegisterMessage(Anomaly)

AudioPipelineSpec = _reflection.GeneratedProtocolMessageType('AudioPipelineSpec', (_message.Message,), {
  'DESCRIPTOR' : _AUDIOPIPELINESPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.AudioPipelineSpec)
  })
_sym_db.RegisterMessage(AudioPipelineSpec)

BacktestSpec = _reflection.GeneratedProtocolMessageType('BacktestSpec', (_message.Message,), {
  'DESCRIPTOR' : _BACKTESTSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.BacktestSpec)
  })
_sym_db.RegisterMessage(BacktestSpec)

BaselineSpec = _reflection.GeneratedProtocolMessageType('BaselineSpec', (_message.Message,), {
  'DESCRIPTOR' : _BASELINESPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.BaselineSpec)
  })
_sym_db.RegisterMessage(BaselineSpec)

ChangePoint = _reflection.GeneratedProtocolMessageType('ChangePoint', (_message.Message,), {
  'DESCRIPTOR' : _CHANGEPOINT,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ChangePoint)
  })
_sym_db.RegisterMessage(ChangePoint)

ChatbotEstimatorSpec = _reflection.GeneratedProtocolMessageType('ChatbotEstimatorSpec', (_message.Message,), {
  'DESCRIPTOR' : _CHATBOTESTIMATORSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ChatbotEstimatorSpec)
  })
_sym_db.RegisterMessage(ChatbotEstimatorSpec)

CheckpointSpec = _reflection.GeneratedProtocolMessageType('CheckpointSpec', (_message.Message,), {
  'DESCRIPTOR' : _CHECKPOINTSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.CheckpointSpec)
  })
_sym_db.RegisterMessage(CheckpointSpec)

ClassicalEstimatorSpec = _reflection.GeneratedProtocolMessageType('ClassicalEstimatorSpec', (_message.Message,), {
  'DESCRIPTOR' : _CLASSICALESTIMATORSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ClassicalEstimatorSpec)
  })
_sym_db.RegisterMessage(ClassicalEstimatorSpec)

CustomReportSpec = _reflection.GeneratedProtocolMessageType('CustomReportSpec', (_message.Message,), {
  'DESCRIPTOR' : _CUSTOMREPORTSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.CustomReportSpec)
  })
_sym_db.RegisterMessage(CustomReportSpec)

DataHashes = _reflection.GeneratedProtocolMessageType('DataHashes', (_message.Message,), {
  'DESCRIPTOR' : _DATAHASHES,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.DataHashes)
  })
_sym_db.RegisterMessage(DataHashes)

DataSplitSpec = _reflection.GeneratedProtocolMessageType('DataSplitSpec', (_message.Message,), {
  'DESCRIPTOR' : _DATASPLITSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.DataSplitSpec)
  })
_sym_db.RegisterMessage(DataSplitSpec)

DeepEstimatorLayer = _reflection.GeneratedProtocolMessageType('DeepEstimatorLayer', (_message.Message,), {
  'DESCRIPTOR' : _DEEPESTIMATORLAYER,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.DeepEstimatorLayer)
  })
_sym_db.RegisterMessage(DeepEstimatorLayer)

DeepEstimatorSpec = _reflection.GeneratedProtocolMessageType('DeepEstimatorSpec', (_message.Message,), {
  'DESCRIPTOR' : _DEEPESTIMATORSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.DeepEstimatorSpec)
  })
_sym_db.RegisterMessage(DeepEstimatorSpec)

DriftDetectorStatus = _reflection.GeneratedProtocolMessageType('DriftDetectorStatus', (_message.Message,), {
  'DESCRIPTOR' : _DRIFTDETECTORSTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.DriftDetectorStatus)
  })
_sym_db.RegisterMessage(DriftDetectorStatus)

DriftModelSpec = _reflection.GeneratedProtocolMessageType('DriftModelSpec', (_message.Message,), {
  'DESCRIPTOR' : _DRIFTMODELSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.DriftModelSpec)
  })
_sym_db.RegisterMessage(DriftModelSpec)

EarlyStopSpec = _reflection.GeneratedProtocolMessageType('EarlyStopSpec', (_message.Message,), {
  'DESCRIPTOR' : _EARLYSTOPSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.EarlyStopSpec)
  })
_sym_db.RegisterMessage(EarlyStopSpec)

EnsembleRules = _reflection.GeneratedProtocolMessageType('EnsembleRules', (_message.Message,), {
  'DESCRIPTOR' : _ENSEMBLERULES,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.EnsembleRules)
  })
_sym_db.RegisterMessage(EnsembleRules)

EnsembleSpec = _reflection.GeneratedProtocolMessageType('EnsembleSpec', (_message.Message,), {
  'DESCRIPTOR' : _ENSEMBLESPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.EnsembleSpec)
  })
_sym_db.RegisterMessage(EnsembleSpec)

EnsemblesSpec = _reflection.GeneratedProtocolMessageType('EnsemblesSpec', (_message.Message,), {
  'DESCRIPTOR' : _ENSEMBLESSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.EnsemblesSpec)
  })
_sym_db.RegisterMessage(EnsemblesSpec)

EntityRef = _reflection.GeneratedProtocolMessageType('EntityRef', (_message.Message,), {
  'DESCRIPTOR' : _ENTITYREF,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.EntityRef)
  })
_sym_db.RegisterMessage(EntityRef)

EvalMetrics = _reflection.GeneratedProtocolMessageType('EvalMetrics', (_message.Message,), {
  'DESCRIPTOR' : _EVALMETRICS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.EvalMetrics)
  })
_sym_db.RegisterMessage(EvalMetrics)

EvalPeriod = _reflection.GeneratedProtocolMessageType('EvalPeriod', (_message.Message,), {
  'DESCRIPTOR' : _EVALPERIOD,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.EvalPeriod)
  })
_sym_db.RegisterMessage(EvalPeriod)

FeatureEngineeringPipeline = _reflection.GeneratedProtocolMessageType('FeatureEngineeringPipeline', (_message.Message,), {
  'DESCRIPTOR' : _FEATUREENGINEERINGPIPELINE,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.FeatureEngineeringPipeline)
  })
_sym_db.RegisterMessage(FeatureEngineeringPipeline)

FeatureEngineeringSearchSpec = _reflection.GeneratedProtocolMessageType('FeatureEngineeringSearchSpec', (_message.Message,), {
  'DESCRIPTOR' : _FEATUREENGINEERINGSEARCHSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.FeatureEngineeringSearchSpec)
  })
_sym_db.RegisterMessage(FeatureEngineeringSearchSpec)

FeatureEngineeringSearchStatus = _reflection.GeneratedProtocolMessageType('FeatureEngineeringSearchStatus', (_message.Message,), {
  'DESCRIPTOR' : _FEATUREENGINEERINGSEARCHSTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.FeatureEngineeringSearchStatus)
  })
_sym_db.RegisterMessage(FeatureEngineeringSearchStatus)

FeatureEngineeringSpec = _reflection.GeneratedProtocolMessageType('FeatureEngineeringSpec', (_message.Message,), {
  'DESCRIPTOR' : _FEATUREENGINEERINGSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.FeatureEngineeringSpec)
  })
_sym_db.RegisterMessage(FeatureEngineeringSpec)

FeatureImportance = _reflection.GeneratedProtocolMessageType('FeatureImportance', (_message.Message,), {
  'DESCRIPTOR' : _FEATUREIMPORTANCE,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.FeatureImportance)
  })
_sym_db.RegisterMessage(FeatureImportance)

FeatureInfo = _reflection.GeneratedProtocolMessageType('FeatureInfo', (_message.Message,), {
  'DESCRIPTOR' : _FEATUREINFO,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.FeatureInfo)
  })
_sym_db.RegisterMessage(FeatureInfo)

FeaturePair = _reflection.GeneratedProtocolMessageType('FeaturePair', (_message.Message,), {
  'DESCRIPTOR' : _FEATUREPAIR,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.FeaturePair)
  })
_sym_db.RegisterMessage(FeaturePair)

FeatureSelectionSpec = _reflection.GeneratedProtocolMessageType('FeatureSelectionSpec', (_message.Message,), {
  'DESCRIPTOR' : _FEATURESELECTIONSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.FeatureSelectionSpec)
  })
_sym_db.RegisterMessage(FeatureSelectionSpec)

ForecasterSpec = _reflection.GeneratedProtocolMessageType('ForecasterSpec', (_message.Message,), {
  'DESCRIPTOR' : _FORECASTERSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ForecasterSpec)
  })
_sym_db.RegisterMessage(ForecasterSpec)

GarbageCollectionSpec = _reflection.GeneratedProtocolMessageType('GarbageCollectionSpec', (_message.Message,), {
  'DESCRIPTOR' : _GARBAGECOLLECTIONSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.GarbageCollectionSpec)
  })
_sym_db.RegisterMessage(GarbageCollectionSpec)

GarbageCollectionStatus = _reflection.GeneratedProtocolMessageType('GarbageCollectionStatus', (_message.Message,), {
  'DESCRIPTOR' : _GARBAGECOLLECTIONSTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.GarbageCollectionStatus)
  })
_sym_db.RegisterMessage(GarbageCollectionStatus)

GeneratedColumnSpec = _reflection.GeneratedProtocolMessageType('GeneratedColumnSpec', (_message.Message,), {
  'DESCRIPTOR' : _GENERATEDCOLUMNSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.GeneratedColumnSpec)
  })
_sym_db.RegisterMessage(GeneratedColumnSpec)

GroupSplitLocationsSpec = _reflection.GeneratedProtocolMessageType('GroupSplitLocationsSpec', (_message.Message,), {
  'DESCRIPTOR' : _GROUPSPLITLOCATIONSSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.GroupSplitLocationsSpec)
  })
_sym_db.RegisterMessage(GroupSplitLocationsSpec)

HyperParameterValue = _reflection.GeneratedProtocolMessageType('HyperParameterValue', (_message.Message,), {
  'DESCRIPTOR' : _HYPERPARAMETERVALUE,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.HyperParameterValue)
  })
_sym_db.RegisterMessage(HyperParameterValue)

HyperbandOptions = _reflection.GeneratedProtocolMessageType('HyperbandOptions', (_message.Message,), {
  'DESCRIPTOR' : _HYPERBANDOPTIONS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.HyperbandOptions)
  })
_sym_db.RegisterMessage(HyperbandOptions)

ImagePipelineSpec = _reflection.GeneratedProtocolMessageType('ImagePipelineSpec', (_message.Message,), {
  'DESCRIPTOR' : _IMAGEPIPELINESPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ImagePipelineSpec)
  })
_sym_db.RegisterMessage(ImagePipelineSpec)

ImbalanceHandlingSpec = _reflection.GeneratedProtocolMessageType('ImbalanceHandlingSpec', (_message.Message,), {
  'DESCRIPTOR' : _IMBALANCEHANDLINGSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ImbalanceHandlingSpec)
  })
_sym_db.RegisterMessage(ImbalanceHandlingSpec)

InterpretabilitySpec = _reflection.GeneratedProtocolMessageType('InterpretabilitySpec', (_message.Message,), {
  'DESCRIPTOR' : _INTERPRETABILITYSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.InterpretabilitySpec)
  })
_sym_db.RegisterMessage(InterpretabilitySpec)

InterpretabilityStatus = _reflection.GeneratedProtocolMessageType('InterpretabilityStatus', (_message.Message,), {
  'DESCRIPTOR' : _INTERPRETABILITYSTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.InterpretabilityStatus)
  })
_sym_db.RegisterMessage(InterpretabilityStatus)

Level = _reflection.GeneratedProtocolMessageType('Level', (_message.Message,), {
  'DESCRIPTOR' : _LEVEL,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Level)
  })
_sym_db.RegisterMessage(Level)

MedianPrunerOptions = _reflection.GeneratedProtocolMessageType('MedianPrunerOptions', (_message.Message,), {
  'DESCRIPTOR' : _MEDIANPRUNEROPTIONS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.MedianPrunerOptions)
  })
_sym_db.RegisterMessage(MedianPrunerOptions)

Model = _reflection.GeneratedProtocolMessageType('Model', (_message.Message,), {
  'DESCRIPTOR' : _MODEL,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Model)
  })
_sym_db.RegisterMessage(Model)

ModelClass = _reflection.GeneratedProtocolMessageType('ModelClass', (_message.Message,), {
  'DESCRIPTOR' : _MODELCLASS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClass)
  })
_sym_db.RegisterMessage(ModelClass)

ModelClassDataSpec = _reflection.GeneratedProtocolMessageType('ModelClassDataSpec', (_message.Message,), {
  'DESCRIPTOR' : _MODELCLASSDATASPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassDataSpec)
  })
_sym_db.RegisterMessage(ModelClassDataSpec)

ModelClassList = _reflection.GeneratedProtocolMessageType('ModelClassList', (_message.Message,), {
  'DESCRIPTOR' : _MODELCLASSLIST,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassList)
  })
_sym_db.RegisterMessage(ModelClassList)

ModelClassRun = _reflection.GeneratedProtocolMessageType('ModelClassRun', (_message.Message,), {
  'DESCRIPTOR' : _MODELCLASSRUN,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassRun)
  })
_sym_db.RegisterMessage(ModelClassRun)

ModelClassRunList = _reflection.GeneratedProtocolMessageType('ModelClassRunList', (_message.Message,), {
  'DESCRIPTOR' : _MODELCLASSRUNLIST,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassRunList)
  })
_sym_db.RegisterMessage(ModelClassRunList)

ModelClassRunSpec = _reflection.GeneratedProtocolMessageType('ModelClassRunSpec', (_message.Message,), {
  'DESCRIPTOR' : _MODELCLASSRUNSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassRunSpec)
  })
_sym_db.RegisterMessage(ModelClassRunSpec)

ModelClassRunStatus = _reflection.GeneratedProtocolMessageType('ModelClassRunStatus', (_message.Message,), {
  'DESCRIPTOR' : _MODELCLASSRUNSTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassRunStatus)
  })
_sym_db.RegisterMessage(ModelClassRunStatus)

ModelClassServingSpec = _reflection.GeneratedProtocolMessageType('ModelClassServingSpec', (_message.Message,), {
  'DESCRIPTOR' : _MODELCLASSSERVINGSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassServingSpec)
  })
_sym_db.RegisterMessage(ModelClassServingSpec)

ModelClassSpec = _reflection.GeneratedProtocolMessageType('ModelClassSpec', (_message.Message,), {
  'DESCRIPTOR' : _MODELCLASSSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassSpec)
  })
_sym_db.RegisterMessage(ModelClassSpec)

ModelClassStatus = _reflection.GeneratedProtocolMessageType('ModelClassStatus', (_message.Message,), {
  'DESCRIPTOR' : _MODELCLASSSTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassStatus)
  })
_sym_db.RegisterMessage(ModelClassStatus)

ModelClassTrainingSpec = _reflection.GeneratedProtocolMessageType('ModelClassTrainingSpec', (_message.Message,), {
  'DESCRIPTOR' : _MODELCLASSTRAININGSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelClassTrainingSpec)
  })
_sym_db.RegisterMessage(ModelClassTrainingSpec)

ModelGroupByStatus = _reflection.GeneratedProtocolMessageType('ModelGroupByStatus', (_message.Message,), {
  'DESCRIPTOR' : _MODELGROUPBYSTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelGroupByStatus)
  })
_sym_db.RegisterMessage(ModelGroupByStatus)

ModelImageSpec = _reflection.GeneratedProtocolMessageType('ModelImageSpec', (_message.Message,), {
  'DESCRIPTOR' : _MODELIMAGESPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelImageSpec)
  })
_sym_db.RegisterMessage(ModelImageSpec)

ModelList = _reflection.GeneratedProtocolMessageType('ModelList', (_message.Message,), {
  'DESCRIPTOR' : _MODELLIST,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelList)
  })
_sym_db.RegisterMessage(ModelList)

ModelResult = _reflection.GeneratedProtocolMessageType('ModelResult', (_message.Message,), {
  'DESCRIPTOR' : _MODELRESULT,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelResult)
  })
_sym_db.RegisterMessage(ModelResult)

ModelSpec = _reflection.GeneratedProtocolMessageType('ModelSpec', (_message.Message,), {
  'DESCRIPTOR' : _MODELSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelSpec)
  })
_sym_db.RegisterMessage(ModelSpec)

ModelStageStatus = _reflection.GeneratedProtocolMessageType('ModelStageStatus', (_message.Message,), {
  'DESCRIPTOR' : _MODELSTAGESTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelStageStatus)
  })
_sym_db.RegisterMessage(ModelStageStatus)

ModelStatus = _reflection.GeneratedProtocolMessageType('ModelStatus', (_message.Message,), {
  'DESCRIPTOR' : _MODELSTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelStatus)
  })
_sym_db.RegisterMessage(ModelStatus)

ModelTestSuite = _reflection.GeneratedProtocolMessageType('ModelTestSuite', (_message.Message,), {
  'DESCRIPTOR' : _MODELTESTSUITE,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ModelTestSuite)
  })
_sym_db.RegisterMessage(ModelTestSuite)

NLPEstimatorSpec = _reflection.GeneratedProtocolMessageType('NLPEstimatorSpec', (_message.Message,), {
  'DESCRIPTOR' : _NLPESTIMATORSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.NLPEstimatorSpec)
  })
_sym_db.RegisterMessage(NLPEstimatorSpec)

NNLayerParameter = _reflection.GeneratedProtocolMessageType('NNLayerParameter', (_message.Message,), {
  'DESCRIPTOR' : _NNLAYERPARAMETER,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.NNLayerParameter)
  })
_sym_db.RegisterMessage(NNLayerParameter)

PartitionModelLocationsSpec = _reflection.GeneratedProtocolMessageType('PartitionModelLocationsSpec', (_message.Message,), {
  'DESCRIPTOR' : _PARTITIONMODELLOCATIONSSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.PartitionModelLocationsSpec)
  })
_sym_db.RegisterMessage(PartitionModelLocationsSpec)

PercentilePrunerOptions = _reflection.GeneratedProtocolMessageType('PercentilePrunerOptions', (_message.Message,), {
  'DESCRIPTOR' : _PERCENTILEPRUNEROPTIONS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.PercentilePrunerOptions)
  })
_sym_db.RegisterMessage(PercentilePrunerOptions)

PrunerSpec = _reflection.GeneratedProtocolMessageType('PrunerSpec', (_message.Message,), {
  'DESCRIPTOR' : _PRUNERSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.PrunerSpec)
  })
_sym_db.RegisterMessage(PrunerSpec)

RegressionForecasterSpec = _reflection.GeneratedProtocolMessageType('RegressionForecasterSpec', (_message.Message,), {
  'DESCRIPTOR' : _REGRESSIONFORECASTERSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.RegressionForecasterSpec)
  })
_sym_db.RegisterMessage(RegressionForecasterSpec)

Report = _reflection.GeneratedProtocolMessageType('Report', (_message.Message,), {
  'DESCRIPTOR' : _REPORT,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Report)
  })
_sym_db.RegisterMessage(Report)

ReportGroupByStatus = _reflection.GeneratedProtocolMessageType('ReportGroupByStatus', (_message.Message,), {
  'DESCRIPTOR' : _REPORTGROUPBYSTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ReportGroupByStatus)
  })
_sym_db.RegisterMessage(ReportGroupByStatus)

ReportList = _reflection.GeneratedProtocolMessageType('ReportList', (_message.Message,), {
  'DESCRIPTOR' : _REPORTLIST,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ReportList)
  })
_sym_db.RegisterMessage(ReportList)

ReportSpec = _reflection.GeneratedProtocolMessageType('ReportSpec', (_message.Message,), {
  'DESCRIPTOR' : _REPORTSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ReportSpec)
  })
_sym_db.RegisterMessage(ReportSpec)

ReportStatus = _reflection.GeneratedProtocolMessageType('ReportStatus', (_message.Message,), {
  'DESCRIPTOR' : _REPORTSTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ReportStatus)
  })
_sym_db.RegisterMessage(ReportStatus)

ResourceConsumption = _reflection.GeneratedProtocolMessageType('ResourceConsumption', (_message.Message,), {
  'DESCRIPTOR' : _RESOURCECONSUMPTION,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ResourceConsumption)
  })
_sym_db.RegisterMessage(ResourceConsumption)

RuntimeStatus = _reflection.GeneratedProtocolMessageType('RuntimeStatus', (_message.Message,), {

  'PythonPackagesEntry' : _reflection.GeneratedProtocolMessageType('PythonPackagesEntry', (_message.Message,), {
    'DESCRIPTOR' : _RUNTIMESTATUS_PYTHONPACKAGESENTRY,
    '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
    # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.RuntimeStatus.PythonPackagesEntry)
    })
  ,
  'DESCRIPTOR' : _RUNTIMESTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.RuntimeStatus)
  })
_sym_db.RegisterMessage(RuntimeStatus)
_sym_db.RegisterMessage(RuntimeStatus.PythonPackagesEntry)

SearchSpec = _reflection.GeneratedProtocolMessageType('SearchSpec', (_message.Message,), {
  'DESCRIPTOR' : _SEARCHSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.SearchSpec)
  })
_sym_db.RegisterMessage(SearchSpec)

SeasonalityPeriodSpec = _reflection.GeneratedProtocolMessageType('SeasonalityPeriodSpec', (_message.Message,), {
  'DESCRIPTOR' : _SEASONALITYPERIODSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.SeasonalityPeriodSpec)
  })
_sym_db.RegisterMessage(SeasonalityPeriodSpec)

SeasonalitySpec = _reflection.GeneratedProtocolMessageType('SeasonalitySpec', (_message.Message,), {
  'DESCRIPTOR' : _SEASONALITYSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.SeasonalitySpec)
  })
_sym_db.RegisterMessage(SeasonalitySpec)

SegmentSpec = _reflection.GeneratedProtocolMessageType('SegmentSpec', (_message.Message,), {
  'DESCRIPTOR' : _SEGMENTSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.SegmentSpec)
  })
_sym_db.RegisterMessage(SegmentSpec)

ServingEnvironment = _reflection.GeneratedProtocolMessageType('ServingEnvironment', (_message.Message,), {
  'DESCRIPTOR' : _SERVINGENVIRONMENT,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ServingEnvironment)
  })
_sym_db.RegisterMessage(ServingEnvironment)

ServingSpec = _reflection.GeneratedProtocolMessageType('ServingSpec', (_message.Message,), {
  'DESCRIPTOR' : _SERVINGSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ServingSpec)
  })
_sym_db.RegisterMessage(ServingSpec)

ServingStatus = _reflection.GeneratedProtocolMessageType('ServingStatus', (_message.Message,), {
  'DESCRIPTOR' : _SERVINGSTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ServingStatus)
  })
_sym_db.RegisterMessage(ServingStatus)

Study = _reflection.GeneratedProtocolMessageType('Study', (_message.Message,), {
  'DESCRIPTOR' : _STUDY,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.Study)
  })
_sym_db.RegisterMessage(Study)

StudyGroupByStatus = _reflection.GeneratedProtocolMessageType('StudyGroupByStatus', (_message.Message,), {
  'DESCRIPTOR' : _STUDYGROUPBYSTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.StudyGroupByStatus)
  })
_sym_db.RegisterMessage(StudyGroupByStatus)

StudyList = _reflection.GeneratedProtocolMessageType('StudyList', (_message.Message,), {
  'DESCRIPTOR' : _STUDYLIST,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.StudyList)
  })
_sym_db.RegisterMessage(StudyList)

StudyPhaseStatus = _reflection.GeneratedProtocolMessageType('StudyPhaseStatus', (_message.Message,), {
  'DESCRIPTOR' : _STUDYPHASESTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.StudyPhaseStatus)
  })
_sym_db.RegisterMessage(StudyPhaseStatus)

StudyScheduleSpec = _reflection.GeneratedProtocolMessageType('StudyScheduleSpec', (_message.Message,), {
  'DESCRIPTOR' : _STUDYSCHEDULESPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.StudyScheduleSpec)
  })
_sym_db.RegisterMessage(StudyScheduleSpec)

StudySpec = _reflection.GeneratedProtocolMessageType('StudySpec', (_message.Message,), {
  'DESCRIPTOR' : _STUDYSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.StudySpec)
  })
_sym_db.RegisterMessage(StudySpec)

StudyStatus = _reflection.GeneratedProtocolMessageType('StudyStatus', (_message.Message,), {
  'DESCRIPTOR' : _STUDYSTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.StudyStatus)
  })
_sym_db.RegisterMessage(StudyStatus)

SuccessiveHalvingOptions = _reflection.GeneratedProtocolMessageType('SuccessiveHalvingOptions', (_message.Message,), {
  'DESCRIPTOR' : _SUCCESSIVEHALVINGOPTIONS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.SuccessiveHalvingOptions)
  })
_sym_db.RegisterMessage(SuccessiveHalvingOptions)

SuccessiveHalvingSpec = _reflection.GeneratedProtocolMessageType('SuccessiveHalvingSpec', (_message.Message,), {
  'DESCRIPTOR' : _SUCCESSIVEHALVINGSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.SuccessiveHalvingSpec)
  })
_sym_db.RegisterMessage(SuccessiveHalvingSpec)

TextPipelineSpec = _reflection.GeneratedProtocolMessageType('TextPipelineSpec', (_message.Message,), {
  'DESCRIPTOR' : _TEXTPIPELINESPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.TextPipelineSpec)
  })
_sym_db.RegisterMessage(TextPipelineSpec)

ThresholdPrunerOptions = _reflection.GeneratedProtocolMessageType('ThresholdPrunerOptions', (_message.Message,), {
  'DESCRIPTOR' : _THRESHOLDPRUNEROPTIONS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.ThresholdPrunerOptions)
  })
_sym_db.RegisterMessage(ThresholdPrunerOptions)

TimeSeriesEvent = _reflection.GeneratedProtocolMessageType('TimeSeriesEvent', (_message.Message,), {
  'DESCRIPTOR' : _TIMESERIESEVENT,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.TimeSeriesEvent)
  })
_sym_db.RegisterMessage(TimeSeriesEvent)

TrainingSpec = _reflection.GeneratedProtocolMessageType('TrainingSpec', (_message.Message,), {
  'DESCRIPTOR' : _TRAININGSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.TrainingSpec)
  })
_sym_db.RegisterMessage(TrainingSpec)

UnivariateForecastStatus = _reflection.GeneratedProtocolMessageType('UnivariateForecastStatus', (_message.Message,), {
  'DESCRIPTOR' : _UNIVARIATEFORECASTSTATUS,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.UnivariateForecastStatus)
  })
_sym_db.RegisterMessage(UnivariateForecastStatus)

VideoPipelineSpec = _reflection.GeneratedProtocolMessageType('VideoPipelineSpec', (_message.Message,), {
  'DESCRIPTOR' : _VIDEOPIPELINESPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.VideoPipelineSpec)
  })
_sym_db.RegisterMessage(VideoPipelineSpec)

WindowSpec = _reflection.GeneratedProtocolMessageType('WindowSpec', (_message.Message,), {
  'DESCRIPTOR' : _WINDOWSPEC,
  '__module__' : 'github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.generated_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modelaapi.pkg.apis.training.v1alpha1.WindowSpec)
  })
_sym_db.RegisterMessage(WindowSpec)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z8github.com/metaprov/modelaapi/pkg/apis/training/v1alpha1'
  _RUNTIMESTATUS_PYTHONPACKAGESENTRY._options = None
  _RUNTIMESTATUS_PYTHONPACKAGESENTRY._serialized_options = b'8\001'
  _ALGORITHMPARAMETERRANGE._serialized_start=473
  _ALGORITHMPARAMETERRANGE._serialized_end=601
  _ALGORITHMSEARCHSPACESPEC._serialized_start=604
  _ALGORITHMSEARCHSPACESPEC._serialized_end=763
  _ANOMALY._serialized_start=765
  _ANOMALY._serialized_end=861
  _AUDIOPIPELINESPEC._serialized_start=863
  _AUDIOPIPELINESPEC._serialized_end=902
  _BACKTESTSPEC._serialized_start=904
  _BACKTESTSPEC._serialized_end=981
  _BASELINESPEC._serialized_start=983
  _BASELINESPEC._serialized_end=1046
  _CHANGEPOINT._serialized_start=1048
  _CHANGEPOINT._serialized_end=1061
  _CHATBOTESTIMATORSPEC._serialized_start=1063
  _CHATBOTESTIMATORSPEC._serialized_end=1099
  _CHECKPOINTSPEC._serialized_start=1102
  _CHECKPOINTSPEC._serialized_end=1249
  _CLASSICALESTIMATORSPEC._serialized_start=1252
  _CLASSICALESTIMATORSPEC._serialized_end=1398
  _CUSTOMREPORTSPEC._serialized_start=1400
  _CUSTOMREPORTSPEC._serialized_end=1497
  _DATAHASHES._serialized_start=1499
  _DATAHASHES._serialized_end=1575
  _DATASPLITSPEC._serialized_start=1578
  _DATASPLITSPEC._serialized_end=1838
  _DEEPESTIMATORLAYER._serialized_start=1841
  _DEEPESTIMATORLAYER._serialized_end=2006
  _DEEPESTIMATORSPEC._serialized_start=2009
  _DEEPESTIMATORSPEC._serialized_end=2239
  _DRIFTDETECTORSTATUS._serialized_start=2241
  _DRIFTDETECTORSTATUS._serialized_end=2287
  _DRIFTMODELSPEC._serialized_start=2289
  _DRIFTMODELSPEC._serialized_end=2348
  _EARLYSTOPSPEC._serialized_start=2350
  _EARLYSTOPSPEC._serialized_end=2432
  _ENSEMBLERULES._serialized_start=2434
  _ENSEMBLERULES._serialized_end=2449
  _ENSEMBLESPEC._serialized_start=2452
  _ENSEMBLESPEC._serialized_end=2695
  _ENSEMBLESSPEC._serialized_start=2697
  _ENSEMBLESSPEC._serialized_end=2792
  _ENTITYREF._serialized_start=2794
  _ENTITYREF._serialized_end=2836
  _EVALMETRICS._serialized_start=2839
  _EVALMETRICS._serialized_end=2976
  _EVALPERIOD._serialized_start=2979
  _EVALPERIOD._serialized_end=3203
  _FEATUREENGINEERINGPIPELINE._serialized_start=3206
  _FEATUREENGINEERINGPIPELINE._serialized_end=4045
  _FEATUREENGINEERINGSEARCHSPEC._serialized_start=4048
  _FEATUREENGINEERINGSEARCHSPEC._serialized_end=4445
  _FEATUREENGINEERINGSEARCHSTATUS._serialized_start=4448
  _FEATUREENGINEERINGSEARCHSTATUS._serialized_end=4576
  _FEATUREENGINEERINGSPEC._serialized_start=4579
  _FEATUREENGINEERINGSPEC._serialized_end=4826
  _FEATUREIMPORTANCE._serialized_start=4828
  _FEATUREIMPORTANCE._serialized_end=4884
  _FEATUREINFO._serialized_start=4886
  _FEATUREINFO._serialized_end=4944
  _FEATUREPAIR._serialized_start=4946
  _FEATUREPAIR._serialized_end=4981
  _FEATURESELECTIONSPEC._serialized_start=4984
  _FEATURESELECTIONSPEC._serialized_end=5197
  _FORECASTERSPEC._serialized_start=5200
  _FORECASTERSPEC._serialized_end=6213
  _GARBAGECOLLECTIONSPEC._serialized_start=6215
  _GARBAGECOLLECTIONSPEC._serialized_end=6335
  _GARBAGECOLLECTIONSTATUS._serialized_start=6338
  _GARBAGECOLLECTIONSTATUS._serialized_end=6480
  _GENERATEDCOLUMNSPEC._serialized_start=6482
  _GENERATEDCOLUMNSPEC._serialized_end=6584
  _GROUPSPLITLOCATIONSSPEC._serialized_start=6586
  _GROUPSPLITLOCATIONSSPEC._serialized_end=6672
  _HYPERPARAMETERVALUE._serialized_start=6674
  _HYPERPARAMETERVALUE._serialized_end=6724
  _HYPERBANDOPTIONS._serialized_start=6726
  _HYPERBANDOPTIONS._serialized_end=6837
  _IMAGEPIPELINESPEC._serialized_start=6839
  _IMAGEPIPELINESPEC._serialized_end=6878
  _IMBALANCEHANDLINGSPEC._serialized_start=6880
  _IMBALANCEHANDLINGSPEC._serialized_end=6939
  _INTERPRETABILITYSPEC._serialized_start=6942
  _INTERPRETABILITYSPEC._serialized_end=7224
  _INTERPRETABILITYSTATUS._serialized_start=7227
  _INTERPRETABILITYSTATUS._serialized_end=7553
  _LEVEL._serialized_start=7555
  _LEVEL._serialized_end=7641
  _MEDIANPRUNEROPTIONS._serialized_start=7643
  _MEDIANPRUNEROPTIONS._serialized_end=7750
  _MODEL._serialized_start=7753
  _MODEL._serialized_end=7998
  _MODELCLASS._serialized_start=8001
  _MODELCLASS._serialized_end=8261
  _MODELCLASSDATASPEC._serialized_start=8264
  _MODELCLASSDATASPEC._serialized_end=8847
  _MODELCLASSLIST._serialized_start=8850
  _MODELCLASSLIST._serialized_end=9017
  _MODELCLASSRUN._serialized_start=9020
  _MODELCLASSRUN._serialized_end=9289
  _MODELCLASSRUNLIST._serialized_start=9292
  _MODELCLASSRUNLIST._serialized_end=9465
  _MODELCLASSRUNSPEC._serialized_start=9468
  _MODELCLASSRUNSPEC._serialized_end=9674
  _MODELCLASSRUNSTATUS._serialized_start=9677
  _MODELCLASSRUNSTATUS._serialized_end=10298
  _MODELCLASSSERVINGSPEC._serialized_start=10301
  _MODELCLASSSERVINGSPEC._serialized_end=10940
  _MODELCLASSSPEC._serialized_start=10943
  _MODELCLASSSPEC._serialized_end=11784
  _MODELCLASSSTATUS._serialized_start=11787
  _MODELCLASSSTATUS._serialized_end=12934
  _MODELCLASSTRAININGSPEC._serialized_start=12937
  _MODELCLASSTRAININGSPEC._serialized_end=13703
  _MODELGROUPBYSTATUS._serialized_start=13706
  _MODELGROUPBYSTATUS._serialized_end=13885
  _MODELIMAGESPEC._serialized_start=13887
  _MODELIMAGESPEC._serialized_end=13969
  _MODELLIST._serialized_start=13972
  _MODELLIST._serialized_end=14129
  _MODELRESULT._serialized_start=14131
  _MODELRESULT._serialized_end=14218
  _MODELSPEC._serialized_start=14221
  _MODELSPEC._serialized_end=16487
  _MODELSTAGESTATUS._serialized_start=16490
  _MODELSTAGESTATUS._serialized_end=16765
  _MODELSTATUS._serialized_start=16768
  _MODELSTATUS._serialized_end=21180
  _MODELTESTSUITE._serialized_start=21183
  _MODELTESTSUITE._serialized_end=21406
  _NLPESTIMATORSPEC._serialized_start=21408
  _NLPESTIMATORSPEC._serialized_end=21440
  _NNLAYERPARAMETER._serialized_start=21442
  _NNLAYERPARAMETER._serialized_end=21489
  _PARTITIONMODELLOCATIONSSPEC._serialized_start=21492
  _PARTITIONMODELLOCATIONSSPEC._serialized_end=21696
  _PERCENTILEPRUNEROPTIONS._serialized_start=21699
  _PERCENTILEPRUNEROPTIONS._serialized_end=21831
  _PRUNERSPEC._serialized_start=21834
  _PRUNERSPEC._serialized_end=22365
  _REGRESSIONFORECASTERSPEC._serialized_start=22368
  _REGRESSIONFORECASTERSPEC._serialized_end=22576
  _REPORT._serialized_start=22579
  _REPORT._serialized_end=22827
  _REPORTGROUPBYSTATUS._serialized_start=22830
  _REPORTGROUPBYSTATUS._serialized_end=22968
  _REPORTLIST._serialized_start=22971
  _REPORTLIST._serialized_end=23130
  _REPORTSPEC._serialized_start=23133
  _REPORTSPEC._serialized_end=23697
  _REPORTSTATUS._serialized_start=23700
  _REPORTSTATUS._serialized_end=24187
  _RESOURCECONSUMPTION._serialized_start=24189
  _RESOURCECONSUMPTION._serialized_end=24249
  _RUNTIMESTATUS._serialized_start=24252
  _RUNTIMESTATUS._serialized_end=24493
  _RUNTIMESTATUS_PYTHONPACKAGESENTRY._serialized_start=24440
  _RUNTIMESTATUS_PYTHONPACKAGESENTRY._serialized_end=24493
  _SEARCHSPEC._serialized_start=24496
  _SEARCHSPEC._serialized_end=25166
  _SEASONALITYPERIODSPEC._serialized_start=25168
  _SEASONALITYPERIODSPEC._serialized_end=25244
  _SEASONALITYSPEC._serialized_start=25247
  _SEASONALITYSPEC._serialized_end=25766
  _SEGMENTSPEC._serialized_start=25768
  _SEGMENTSPEC._serialized_end=25828
  _SERVINGENVIRONMENT._serialized_start=25831
  _SERVINGENVIRONMENT._serialized_end=26237
  _SERVINGSPEC._serialized_start=26240
  _SERVINGSPEC._serialized_end=26771
  _SERVINGSTATUS._serialized_start=26773
  _SERVINGSTATUS._serialized_end=26876
  _STUDY._serialized_start=26879
  _STUDY._serialized_end=27124
  _STUDYGROUPBYSTATUS._serialized_start=27127
  _STUDYGROUPBYSTATUS._serialized_end=27264
  _STUDYLIST._serialized_start=27267
  _STUDYLIST._serialized_end=27424
  _STUDYPHASESTATUS._serialized_start=27427
  _STUDYPHASESTATUS._serialized_end=27735
  _STUDYSCHEDULESPEC._serialized_start=27737
  _STUDYSCHEDULESPEC._serialized_end=27834
  _STUDYSPEC._serialized_start=27837
  _STUDYSPEC._serialized_end=29965
  _STUDYSTATUS._serialized_start=29968
  _STUDYSTATUS._serialized_end=32031
  _SUCCESSIVEHALVINGOPTIONS._serialized_start=32033
  _SUCCESSIVEHALVINGOPTIONS._serialized_end=32160
  _SUCCESSIVEHALVINGSPEC._serialized_start=32162
  _SUCCESSIVEHALVINGSPEC._serialized_end=32266
  _TEXTPIPELINESPEC._serialized_start=32269
  _TEXTPIPELINESPEC._serialized_end=32442
  _THRESHOLDPRUNEROPTIONS._serialized_start=32444
  _THRESHOLDPRUNEROPTIONS._serialized_end=32542
  _TIMESERIESEVENT._serialized_start=32545
  _TIMESERIESEVENT._serialized_end=32683
  _TRAININGSPEC._serialized_start=32686
  _TRAININGSPEC._serialized_end=33354
  _UNIVARIATEFORECASTSTATUS._serialized_start=33357
  _UNIVARIATEFORECASTSTATUS._serialized_end=33577
  _VIDEOPIPELINESPEC._serialized_start=33579
  _VIDEOPIPELINESPEC._serialized_end=33618
  _WINDOWSPEC._serialized_start=33620
  _WINDOWSPEC._serialized_end=33681
# @@protoc_insertion_point(module_scope)
