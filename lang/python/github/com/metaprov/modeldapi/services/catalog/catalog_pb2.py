# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: github.com/metaprov/modeldapi/services/catalog/catalog.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from github.com.metaprov.modeldapi.pkg.apis.catalog.v1alpha1 import generated_pb2 as github_dot_com_dot_metaprov_dot_modeldapi_dot_pkg_dot_apis_dot_catalog_dot_v1alpha1_dot_generated__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='github.com/metaprov/modeldapi/services/catalog/catalog.proto',
  package='github.com.metaprov.modeld.services.catalog',
  syntax='proto3',
  serialized_options=b'Z.github.com/metaprov/modeldapi/services/catalog',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n<github.com/metaprov/modeldapi/services/catalog/catalog.proto\x12+github.com.metaprov.modeld.services.catalog\x1a\x1cgoogle/api/annotations.proto\x1aGgithub.com/metaprov/modeldapi/pkg/apis/catalog/v1alpha1/generated.proto\"\xb9\x01\n\x15ListAlgorithmsRequest\x12\x11\n\tnamespace\x18\x01 \x01(\t\x12^\n\x06labels\x18\x02 \x03(\x0b\x32N.github.com.metaprov.modeld.services.catalog.ListAlgorithmsRequest.LabelsEntry\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"o\n\x16ListAlgorithmsResponse\x12U\n\x05items\x18\x01 \x01(\x0b\x32\x46.github.com.metaprov.modeldapi.pkg.apis.catalog.v1alpha1.AlgorithmList\"6\n\x13GetAlgorithmRequest\x12\x11\n\tnamespace\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\"h\n\x14GetAlgorithmResponse\x12P\n\x04item\x18\x01 \x01(\x0b\x32\x42.github.com.metaprov.modeldapi.pkg.apis.catalog.v1alpha1.Algorithm\"\xbd\x01\n\x17ListMLFrameworksRequest\x12\x11\n\tnamespace\x18\x01 \x01(\t\x12`\n\x06labels\x18\x02 \x03(\x0b\x32P.github.com.metaprov.modeld.services.catalog.ListMLFrameworksRequest.LabelsEntry\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"s\n\x18ListMLFrameworksResponse\x12W\n\x05items\x18\x01 \x01(\x0b\x32H.github.com.metaprov.modeldapi.pkg.apis.catalog.v1alpha1.MLFrameworkList\"8\n\x15GetMLFrameworkRequest\x12\x11\n\tnamespace\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\"l\n\x16GetMLFrameworkResponse\x12R\n\x04item\x18\x01 \x01(\x0b\x32\x44.github.com.metaprov.modeldapi.pkg.apis.catalog.v1alpha1.MLFramework\"\xb1\x01\n\x11ListCloudsRequest\x12\x11\n\tnamespace\x18\x01 \x01(\t\x12Z\n\x06labels\x18\x02 \x03(\x0b\x32J.github.com.metaprov.modeld.services.catalog.ListCloudsRequest.LabelsEntry\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"g\n\x12ListCloudsResponse\x12Q\n\x05items\x18\x01 \x01(\x0b\x32\x42.github.com.metaprov.modeldapi.pkg.apis.catalog.v1alpha1.CloudList\"2\n\x0fGetCloudRequest\x12\x11\n\tnamespace\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\"`\n\x10GetCloudResponse\x12L\n\x04item\x18\x01 \x01(\x0b\x32>.github.com.metaprov.modeldapi.pkg.apis.catalog.v1alpha1.Cloud\"\xc1\x01\n\x19ListPublicDatasetsRequest\x12\x11\n\tnamespace\x18\x01 \x01(\t\x12\x62\n\x06labels\x18\x02 \x03(\x0b\x32R.github.com.metaprov.modeld.services.catalog.ListPublicDatasetsRequest.LabelsEntry\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"w\n\x1aListPublicDatasetsResponse\x12Y\n\x05items\x18\x01 \x01(\x0b\x32J.github.com.metaprov.modeldapi.pkg.apis.catalog.v1alpha1.PublicDatasetList\":\n\x17GetPublicDatasetRequest\x12\x11\n\tnamespace\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\"p\n\x18GetPublicDatasetResponse\x12T\n\x04item\x18\x01 \x01(\x0b\x32\x46.github.com.metaprov.modeldapi.pkg.apis.catalog.v1alpha1.PublicDataset\"\xc5\x01\n\x1bListPretrainedModelsRequest\x12\x11\n\tnamespace\x18\x01 \x01(\t\x12\x64\n\x06labels\x18\x02 \x03(\x0b\x32T.github.com.metaprov.modeld.services.catalog.ListPretrainedModelsRequest.LabelsEntry\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"{\n\x1cListPretrainedModelsResponse\x12[\n\x05items\x18\x01 \x01(\x0b\x32L.github.com.metaprov.modeldapi.pkg.apis.catalog.v1alpha1.PretrainedModelList\"<\n\x19GetPretrainedModelRequest\x12\x11\n\tnamespace\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\"t\n\x1aGetPretrainedModelResponse\x12V\n\x04item\x18\x01 \x01(\x0b\x32H.github.com.metaprov.modeldapi.pkg.apis.catalog.v1alpha1.PretrainedModel\"\xc3\x01\n\x1aListWorkloadClassesRequest\x12\x11\n\tnamespace\x18\x01 \x01(\t\x12\x63\n\x06labels\x18\x02 \x03(\x0b\x32S.github.com.metaprov.modeld.services.catalog.ListWorkloadClassesRequest.LabelsEntry\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"x\n\x1bListWorkloadClassesResponse\x12Y\n\x05items\x18\x01 \x01(\x0b\x32J.github.com.metaprov.modeldapi.pkg.apis.catalog.v1alpha1.WorkloadClassList\":\n\x17GetWorkloadClassRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x11\n\tnamespace\x18\x02 \x01(\t\"p\n\x18GetWorkloadClassResponse\x12T\n\x04item\x18\x01 \x01(\x0b\x32\x46.github.com.metaprov.modeldapi.pkg.apis.catalog.v1alpha1.WorkloadClass2\xc5\x0b\n\x0e\x43\x61talogService\x12\xaf\x01\n\rListAlgorithm\x12\x42.github.com.metaprov.modeld.services.catalog.ListAlgorithmsRequest\x1a\x43.github.com.metaprov.modeld.services.catalog.ListAlgorithmsResponse\"\x15\x82\xd3\xe4\x93\x02\x0f\x12\rv1/algorithms\x12\xb2\x01\n\x0cGetAlgorithm\x12@.github.com.metaprov.modeld.services.catalog.GetAlgorithmRequest\x1a\x41.github.com.metaprov.modeld.services.catalog.GetAlgorithmResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/v1/algorithms/{name}\x12\xb9\x01\n\x10ListMLFrameworks\x12\x44.github.com.metaprov.modeld.services.catalog.ListMLFrameworksRequest\x1a\x45.github.com.metaprov.modeld.services.catalog.ListMLFrameworksResponse\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/v1/mlframeworks\x12\xba\x01\n\x0eGetMLFramework\x12\x42.github.com.metaprov.modeld.services.catalog.GetMLFrameworkRequest\x1a\x43.github.com.metaprov.modeld.services.catalog.GetMLFrameworkResponse\"\x1f\x82\xd3\xe4\x93\x02\x19\x12\x17/v1/mlframeworks/{name}\x12\xa1\x01\n\nListClouds\x12>.github.com.metaprov.modeld.services.catalog.ListCloudsRequest\x1a?.github.com.metaprov.modeld.services.catalog.ListCloudsResponse\"\x12\x82\xd3\xe4\x93\x02\x0c\x12\n/v1/clouds\x12\xa2\x01\n\x08GetCloud\x12<.github.com.metaprov.modeld.services.catalog.GetCloudRequest\x1a=.github.com.metaprov.modeld.services.catalog.GetCloudResponse\"\x19\x82\xd3\xe4\x93\x02\x13\x12\x11/v1/clouds/{name}\x12\xc4\x01\n\x13ListWorkloadClasses\x12G.github.com.metaprov.modeld.services.catalog.ListWorkloadClassesRequest\x1aH.github.com.metaprov.modeld.services.catalog.ListWorkloadClassesResponse\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/v1/trainerclasses\x12\xc2\x01\n\x10GetWorkloadClass\x12\x44.github.com.metaprov.modeld.services.catalog.GetWorkloadClassRequest\x1a\x45.github.com.metaprov.modeld.services.catalog.GetWorkloadClassResponse\"!\x82\xd3\xe4\x93\x02\x1b\x12\x19/v1/trainerclasses/{name}B0Z.github.com/metaprov/modeldapi/services/catalogb\x06proto3'
  ,
  dependencies=[google_dot_api_dot_annotations__pb2.DESCRIPTOR,github_dot_com_dot_metaprov_dot_modeldapi_dot_pkg_dot_apis_dot_catalog_dot_v1alpha1_dot_generated__pb2.DESCRIPTOR,])




_LISTALGORITHMSREQUEST_LABELSENTRY = _descriptor.Descriptor(
  name='LabelsEntry',
  full_name='github.com.metaprov.modeld.services.catalog.ListAlgorithmsRequest.LabelsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='github.com.metaprov.modeld.services.catalog.ListAlgorithmsRequest.LabelsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='github.com.metaprov.modeld.services.catalog.ListAlgorithmsRequest.LabelsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=353,
  serialized_end=398,
)

_LISTALGORITHMSREQUEST = _descriptor.Descriptor(
  name='ListAlgorithmsRequest',
  full_name='github.com.metaprov.modeld.services.catalog.ListAlgorithmsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='namespace', full_name='github.com.metaprov.modeld.services.catalog.ListAlgorithmsRequest.namespace', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='labels', full_name='github.com.metaprov.modeld.services.catalog.ListAlgorithmsRequest.labels', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_LISTALGORITHMSREQUEST_LABELSENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=213,
  serialized_end=398,
)


_LISTALGORITHMSRESPONSE = _descriptor.Descriptor(
  name='ListAlgorithmsResponse',
  full_name='github.com.metaprov.modeld.services.catalog.ListAlgorithmsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='items', full_name='github.com.metaprov.modeld.services.catalog.ListAlgorithmsResponse.items', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=400,
  serialized_end=511,
)


_GETALGORITHMREQUEST = _descriptor.Descriptor(
  name='GetAlgorithmRequest',
  full_name='github.com.metaprov.modeld.services.catalog.GetAlgorithmRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='namespace', full_name='github.com.metaprov.modeld.services.catalog.GetAlgorithmRequest.namespace', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='name', full_name='github.com.metaprov.modeld.services.catalog.GetAlgorithmRequest.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=513,
  serialized_end=567,
)


_GETALGORITHMRESPONSE = _descriptor.Descriptor(
  name='GetAlgorithmResponse',
  full_name='github.com.metaprov.modeld.services.catalog.GetAlgorithmResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='item', full_name='github.com.metaprov.modeld.services.catalog.GetAlgorithmResponse.item', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=569,
  serialized_end=673,
)


_LISTMLFRAMEWORKSREQUEST_LABELSENTRY = _descriptor.Descriptor(
  name='LabelsEntry',
  full_name='github.com.metaprov.modeld.services.catalog.ListMLFrameworksRequest.LabelsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='github.com.metaprov.modeld.services.catalog.ListMLFrameworksRequest.LabelsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='github.com.metaprov.modeld.services.catalog.ListMLFrameworksRequest.LabelsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=353,
  serialized_end=398,
)

_LISTMLFRAMEWORKSREQUEST = _descriptor.Descriptor(
  name='ListMLFrameworksRequest',
  full_name='github.com.metaprov.modeld.services.catalog.ListMLFrameworksRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='namespace', full_name='github.com.metaprov.modeld.services.catalog.ListMLFrameworksRequest.namespace', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='labels', full_name='github.com.metaprov.modeld.services.catalog.ListMLFrameworksRequest.labels', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_LISTMLFRAMEWORKSREQUEST_LABELSENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=676,
  serialized_end=865,
)


_LISTMLFRAMEWORKSRESPONSE = _descriptor.Descriptor(
  name='ListMLFrameworksResponse',
  full_name='github.com.metaprov.modeld.services.catalog.ListMLFrameworksResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='items', full_name='github.com.metaprov.modeld.services.catalog.ListMLFrameworksResponse.items', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=867,
  serialized_end=982,
)


_GETMLFRAMEWORKREQUEST = _descriptor.Descriptor(
  name='GetMLFrameworkRequest',
  full_name='github.com.metaprov.modeld.services.catalog.GetMLFrameworkRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='namespace', full_name='github.com.metaprov.modeld.services.catalog.GetMLFrameworkRequest.namespace', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='name', full_name='github.com.metaprov.modeld.services.catalog.GetMLFrameworkRequest.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=984,
  serialized_end=1040,
)


_GETMLFRAMEWORKRESPONSE = _descriptor.Descriptor(
  name='GetMLFrameworkResponse',
  full_name='github.com.metaprov.modeld.services.catalog.GetMLFrameworkResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='item', full_name='github.com.metaprov.modeld.services.catalog.GetMLFrameworkResponse.item', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1042,
  serialized_end=1150,
)


_LISTCLOUDSREQUEST_LABELSENTRY = _descriptor.Descriptor(
  name='LabelsEntry',
  full_name='github.com.metaprov.modeld.services.catalog.ListCloudsRequest.LabelsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='github.com.metaprov.modeld.services.catalog.ListCloudsRequest.LabelsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='github.com.metaprov.modeld.services.catalog.ListCloudsRequest.LabelsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=353,
  serialized_end=398,
)

_LISTCLOUDSREQUEST = _descriptor.Descriptor(
  name='ListCloudsRequest',
  full_name='github.com.metaprov.modeld.services.catalog.ListCloudsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='namespace', full_name='github.com.metaprov.modeld.services.catalog.ListCloudsRequest.namespace', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='labels', full_name='github.com.metaprov.modeld.services.catalog.ListCloudsRequest.labels', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_LISTCLOUDSREQUEST_LABELSENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1153,
  serialized_end=1330,
)


_LISTCLOUDSRESPONSE = _descriptor.Descriptor(
  name='ListCloudsResponse',
  full_name='github.com.metaprov.modeld.services.catalog.ListCloudsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='items', full_name='github.com.metaprov.modeld.services.catalog.ListCloudsResponse.items', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1332,
  serialized_end=1435,
)


_GETCLOUDREQUEST = _descriptor.Descriptor(
  name='GetCloudRequest',
  full_name='github.com.metaprov.modeld.services.catalog.GetCloudRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='namespace', full_name='github.com.metaprov.modeld.services.catalog.GetCloudRequest.namespace', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='name', full_name='github.com.metaprov.modeld.services.catalog.GetCloudRequest.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1437,
  serialized_end=1487,
)


_GETCLOUDRESPONSE = _descriptor.Descriptor(
  name='GetCloudResponse',
  full_name='github.com.metaprov.modeld.services.catalog.GetCloudResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='item', full_name='github.com.metaprov.modeld.services.catalog.GetCloudResponse.item', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1489,
  serialized_end=1585,
)


_LISTPUBLICDATASETSREQUEST_LABELSENTRY = _descriptor.Descriptor(
  name='LabelsEntry',
  full_name='github.com.metaprov.modeld.services.catalog.ListPublicDatasetsRequest.LabelsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='github.com.metaprov.modeld.services.catalog.ListPublicDatasetsRequest.LabelsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='github.com.metaprov.modeld.services.catalog.ListPublicDatasetsRequest.LabelsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=353,
  serialized_end=398,
)

_LISTPUBLICDATASETSREQUEST = _descriptor.Descriptor(
  name='ListPublicDatasetsRequest',
  full_name='github.com.metaprov.modeld.services.catalog.ListPublicDatasetsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='namespace', full_name='github.com.metaprov.modeld.services.catalog.ListPublicDatasetsRequest.namespace', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='labels', full_name='github.com.metaprov.modeld.services.catalog.ListPublicDatasetsRequest.labels', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_LISTPUBLICDATASETSREQUEST_LABELSENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1588,
  serialized_end=1781,
)


_LISTPUBLICDATASETSRESPONSE = _descriptor.Descriptor(
  name='ListPublicDatasetsResponse',
  full_name='github.com.metaprov.modeld.services.catalog.ListPublicDatasetsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='items', full_name='github.com.metaprov.modeld.services.catalog.ListPublicDatasetsResponse.items', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1783,
  serialized_end=1902,
)


_GETPUBLICDATASETREQUEST = _descriptor.Descriptor(
  name='GetPublicDatasetRequest',
  full_name='github.com.metaprov.modeld.services.catalog.GetPublicDatasetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='namespace', full_name='github.com.metaprov.modeld.services.catalog.GetPublicDatasetRequest.namespace', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='name', full_name='github.com.metaprov.modeld.services.catalog.GetPublicDatasetRequest.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1904,
  serialized_end=1962,
)


_GETPUBLICDATASETRESPONSE = _descriptor.Descriptor(
  name='GetPublicDatasetResponse',
  full_name='github.com.metaprov.modeld.services.catalog.GetPublicDatasetResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='item', full_name='github.com.metaprov.modeld.services.catalog.GetPublicDatasetResponse.item', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1964,
  serialized_end=2076,
)


_LISTPRETRAINEDMODELSREQUEST_LABELSENTRY = _descriptor.Descriptor(
  name='LabelsEntry',
  full_name='github.com.metaprov.modeld.services.catalog.ListPretrainedModelsRequest.LabelsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='github.com.metaprov.modeld.services.catalog.ListPretrainedModelsRequest.LabelsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='github.com.metaprov.modeld.services.catalog.ListPretrainedModelsRequest.LabelsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=353,
  serialized_end=398,
)

_LISTPRETRAINEDMODELSREQUEST = _descriptor.Descriptor(
  name='ListPretrainedModelsRequest',
  full_name='github.com.metaprov.modeld.services.catalog.ListPretrainedModelsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='namespace', full_name='github.com.metaprov.modeld.services.catalog.ListPretrainedModelsRequest.namespace', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='labels', full_name='github.com.metaprov.modeld.services.catalog.ListPretrainedModelsRequest.labels', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_LISTPRETRAINEDMODELSREQUEST_LABELSENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2079,
  serialized_end=2276,
)


_LISTPRETRAINEDMODELSRESPONSE = _descriptor.Descriptor(
  name='ListPretrainedModelsResponse',
  full_name='github.com.metaprov.modeld.services.catalog.ListPretrainedModelsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='items', full_name='github.com.metaprov.modeld.services.catalog.ListPretrainedModelsResponse.items', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2278,
  serialized_end=2401,
)


_GETPRETRAINEDMODELREQUEST = _descriptor.Descriptor(
  name='GetPretrainedModelRequest',
  full_name='github.com.metaprov.modeld.services.catalog.GetPretrainedModelRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='namespace', full_name='github.com.metaprov.modeld.services.catalog.GetPretrainedModelRequest.namespace', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='name', full_name='github.com.metaprov.modeld.services.catalog.GetPretrainedModelRequest.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2403,
  serialized_end=2463,
)


_GETPRETRAINEDMODELRESPONSE = _descriptor.Descriptor(
  name='GetPretrainedModelResponse',
  full_name='github.com.metaprov.modeld.services.catalog.GetPretrainedModelResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='item', full_name='github.com.metaprov.modeld.services.catalog.GetPretrainedModelResponse.item', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2465,
  serialized_end=2581,
)


_LISTWORKLOADCLASSESREQUEST_LABELSENTRY = _descriptor.Descriptor(
  name='LabelsEntry',
  full_name='github.com.metaprov.modeld.services.catalog.ListWorkloadClassesRequest.LabelsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='github.com.metaprov.modeld.services.catalog.ListWorkloadClassesRequest.LabelsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='github.com.metaprov.modeld.services.catalog.ListWorkloadClassesRequest.LabelsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=353,
  serialized_end=398,
)

_LISTWORKLOADCLASSESREQUEST = _descriptor.Descriptor(
  name='ListWorkloadClassesRequest',
  full_name='github.com.metaprov.modeld.services.catalog.ListWorkloadClassesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='namespace', full_name='github.com.metaprov.modeld.services.catalog.ListWorkloadClassesRequest.namespace', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='labels', full_name='github.com.metaprov.modeld.services.catalog.ListWorkloadClassesRequest.labels', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_LISTWORKLOADCLASSESREQUEST_LABELSENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2584,
  serialized_end=2779,
)


_LISTWORKLOADCLASSESRESPONSE = _descriptor.Descriptor(
  name='ListWorkloadClassesResponse',
  full_name='github.com.metaprov.modeld.services.catalog.ListWorkloadClassesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='items', full_name='github.com.metaprov.modeld.services.catalog.ListWorkloadClassesResponse.items', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2781,
  serialized_end=2901,
)


_GETWORKLOADCLASSREQUEST = _descriptor.Descriptor(
  name='GetWorkloadClassRequest',
  full_name='github.com.metaprov.modeld.services.catalog.GetWorkloadClassRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='github.com.metaprov.modeld.services.catalog.GetWorkloadClassRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='namespace', full_name='github.com.metaprov.modeld.services.catalog.GetWorkloadClassRequest.namespace', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2903,
  serialized_end=2961,
)


_GETWORKLOADCLASSRESPONSE = _descriptor.Descriptor(
  name='GetWorkloadClassResponse',
  full_name='github.com.metaprov.modeld.services.catalog.GetWorkloadClassResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='item', full_name='github.com.metaprov.modeld.services.catalog.GetWorkloadClassResponse.item', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2963,
  serialized_end=3075,
)

_LISTALGORITHMSREQUEST_LABELSENTRY.containing_type = _LISTALGORITHMSREQUEST
_LISTALGORITHMSREQUEST.fields_by_name['labels'].message_type = _LISTALGORITHMSREQUEST_LABELSENTRY
_LISTALGORITHMSRESPONSE.fields_by_name['items'].message_type = github_dot_com_dot_metaprov_dot_modeldapi_dot_pkg_dot_apis_dot_catalog_dot_v1alpha1_dot_generated__pb2._ALGORITHMLIST
_GETALGORITHMRESPONSE.fields_by_name['item'].message_type = github_dot_com_dot_metaprov_dot_modeldapi_dot_pkg_dot_apis_dot_catalog_dot_v1alpha1_dot_generated__pb2._ALGORITHM
_LISTMLFRAMEWORKSREQUEST_LABELSENTRY.containing_type = _LISTMLFRAMEWORKSREQUEST
_LISTMLFRAMEWORKSREQUEST.fields_by_name['labels'].message_type = _LISTMLFRAMEWORKSREQUEST_LABELSENTRY
_LISTMLFRAMEWORKSRESPONSE.fields_by_name['items'].message_type = github_dot_com_dot_metaprov_dot_modeldapi_dot_pkg_dot_apis_dot_catalog_dot_v1alpha1_dot_generated__pb2._MLFRAMEWORKLIST
_GETMLFRAMEWORKRESPONSE.fields_by_name['item'].message_type = github_dot_com_dot_metaprov_dot_modeldapi_dot_pkg_dot_apis_dot_catalog_dot_v1alpha1_dot_generated__pb2._MLFRAMEWORK
_LISTCLOUDSREQUEST_LABELSENTRY.containing_type = _LISTCLOUDSREQUEST
_LISTCLOUDSREQUEST.fields_by_name['labels'].message_type = _LISTCLOUDSREQUEST_LABELSENTRY
_LISTCLOUDSRESPONSE.fields_by_name['items'].message_type = github_dot_com_dot_metaprov_dot_modeldapi_dot_pkg_dot_apis_dot_catalog_dot_v1alpha1_dot_generated__pb2._CLOUDLIST
_GETCLOUDRESPONSE.fields_by_name['item'].message_type = github_dot_com_dot_metaprov_dot_modeldapi_dot_pkg_dot_apis_dot_catalog_dot_v1alpha1_dot_generated__pb2._CLOUD
_LISTPUBLICDATASETSREQUEST_LABELSENTRY.containing_type = _LISTPUBLICDATASETSREQUEST
_LISTPUBLICDATASETSREQUEST.fields_by_name['labels'].message_type = _LISTPUBLICDATASETSREQUEST_LABELSENTRY
_LISTPUBLICDATASETSRESPONSE.fields_by_name['items'].message_type = github_dot_com_dot_metaprov_dot_modeldapi_dot_pkg_dot_apis_dot_catalog_dot_v1alpha1_dot_generated__pb2._PUBLICDATASETLIST
_GETPUBLICDATASETRESPONSE.fields_by_name['item'].message_type = github_dot_com_dot_metaprov_dot_modeldapi_dot_pkg_dot_apis_dot_catalog_dot_v1alpha1_dot_generated__pb2._PUBLICDATASET
_LISTPRETRAINEDMODELSREQUEST_LABELSENTRY.containing_type = _LISTPRETRAINEDMODELSREQUEST
_LISTPRETRAINEDMODELSREQUEST.fields_by_name['labels'].message_type = _LISTPRETRAINEDMODELSREQUEST_LABELSENTRY
_LISTPRETRAINEDMODELSRESPONSE.fields_by_name['items'].message_type = github_dot_com_dot_metaprov_dot_modeldapi_dot_pkg_dot_apis_dot_catalog_dot_v1alpha1_dot_generated__pb2._PRETRAINEDMODELLIST
_GETPRETRAINEDMODELRESPONSE.fields_by_name['item'].message_type = github_dot_com_dot_metaprov_dot_modeldapi_dot_pkg_dot_apis_dot_catalog_dot_v1alpha1_dot_generated__pb2._PRETRAINEDMODEL
_LISTWORKLOADCLASSESREQUEST_LABELSENTRY.containing_type = _LISTWORKLOADCLASSESREQUEST
_LISTWORKLOADCLASSESREQUEST.fields_by_name['labels'].message_type = _LISTWORKLOADCLASSESREQUEST_LABELSENTRY
_LISTWORKLOADCLASSESRESPONSE.fields_by_name['items'].message_type = github_dot_com_dot_metaprov_dot_modeldapi_dot_pkg_dot_apis_dot_catalog_dot_v1alpha1_dot_generated__pb2._WORKLOADCLASSLIST
_GETWORKLOADCLASSRESPONSE.fields_by_name['item'].message_type = github_dot_com_dot_metaprov_dot_modeldapi_dot_pkg_dot_apis_dot_catalog_dot_v1alpha1_dot_generated__pb2._WORKLOADCLASS
DESCRIPTOR.message_types_by_name['ListAlgorithmsRequest'] = _LISTALGORITHMSREQUEST
DESCRIPTOR.message_types_by_name['ListAlgorithmsResponse'] = _LISTALGORITHMSRESPONSE
DESCRIPTOR.message_types_by_name['GetAlgorithmRequest'] = _GETALGORITHMREQUEST
DESCRIPTOR.message_types_by_name['GetAlgorithmResponse'] = _GETALGORITHMRESPONSE
DESCRIPTOR.message_types_by_name['ListMLFrameworksRequest'] = _LISTMLFRAMEWORKSREQUEST
DESCRIPTOR.message_types_by_name['ListMLFrameworksResponse'] = _LISTMLFRAMEWORKSRESPONSE
DESCRIPTOR.message_types_by_name['GetMLFrameworkRequest'] = _GETMLFRAMEWORKREQUEST
DESCRIPTOR.message_types_by_name['GetMLFrameworkResponse'] = _GETMLFRAMEWORKRESPONSE
DESCRIPTOR.message_types_by_name['ListCloudsRequest'] = _LISTCLOUDSREQUEST
DESCRIPTOR.message_types_by_name['ListCloudsResponse'] = _LISTCLOUDSRESPONSE
DESCRIPTOR.message_types_by_name['GetCloudRequest'] = _GETCLOUDREQUEST
DESCRIPTOR.message_types_by_name['GetCloudResponse'] = _GETCLOUDRESPONSE
DESCRIPTOR.message_types_by_name['ListPublicDatasetsRequest'] = _LISTPUBLICDATASETSREQUEST
DESCRIPTOR.message_types_by_name['ListPublicDatasetsResponse'] = _LISTPUBLICDATASETSRESPONSE
DESCRIPTOR.message_types_by_name['GetPublicDatasetRequest'] = _GETPUBLICDATASETREQUEST
DESCRIPTOR.message_types_by_name['GetPublicDatasetResponse'] = _GETPUBLICDATASETRESPONSE
DESCRIPTOR.message_types_by_name['ListPretrainedModelsRequest'] = _LISTPRETRAINEDMODELSREQUEST
DESCRIPTOR.message_types_by_name['ListPretrainedModelsResponse'] = _LISTPRETRAINEDMODELSRESPONSE
DESCRIPTOR.message_types_by_name['GetPretrainedModelRequest'] = _GETPRETRAINEDMODELREQUEST
DESCRIPTOR.message_types_by_name['GetPretrainedModelResponse'] = _GETPRETRAINEDMODELRESPONSE
DESCRIPTOR.message_types_by_name['ListWorkloadClassesRequest'] = _LISTWORKLOADCLASSESREQUEST
DESCRIPTOR.message_types_by_name['ListWorkloadClassesResponse'] = _LISTWORKLOADCLASSESRESPONSE
DESCRIPTOR.message_types_by_name['GetWorkloadClassRequest'] = _GETWORKLOADCLASSREQUEST
DESCRIPTOR.message_types_by_name['GetWorkloadClassResponse'] = _GETWORKLOADCLASSRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ListAlgorithmsRequest = _reflection.GeneratedProtocolMessageType('ListAlgorithmsRequest', (_message.Message,), {

  'LabelsEntry' : _reflection.GeneratedProtocolMessageType('LabelsEntry', (_message.Message,), {
    'DESCRIPTOR' : _LISTALGORITHMSREQUEST_LABELSENTRY,
    '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
    # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.ListAlgorithmsRequest.LabelsEntry)
    })
  ,
  'DESCRIPTOR' : _LISTALGORITHMSREQUEST,
  '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.ListAlgorithmsRequest)
  })
_sym_db.RegisterMessage(ListAlgorithmsRequest)
_sym_db.RegisterMessage(ListAlgorithmsRequest.LabelsEntry)

ListAlgorithmsResponse = _reflection.GeneratedProtocolMessageType('ListAlgorithmsResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTALGORITHMSRESPONSE,
  '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.ListAlgorithmsResponse)
  })
_sym_db.RegisterMessage(ListAlgorithmsResponse)

GetAlgorithmRequest = _reflection.GeneratedProtocolMessageType('GetAlgorithmRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETALGORITHMREQUEST,
  '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.GetAlgorithmRequest)
  })
_sym_db.RegisterMessage(GetAlgorithmRequest)

GetAlgorithmResponse = _reflection.GeneratedProtocolMessageType('GetAlgorithmResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETALGORITHMRESPONSE,
  '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.GetAlgorithmResponse)
  })
_sym_db.RegisterMessage(GetAlgorithmResponse)

ListMLFrameworksRequest = _reflection.GeneratedProtocolMessageType('ListMLFrameworksRequest', (_message.Message,), {

  'LabelsEntry' : _reflection.GeneratedProtocolMessageType('LabelsEntry', (_message.Message,), {
    'DESCRIPTOR' : _LISTMLFRAMEWORKSREQUEST_LABELSENTRY,
    '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
    # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.ListMLFrameworksRequest.LabelsEntry)
    })
  ,
  'DESCRIPTOR' : _LISTMLFRAMEWORKSREQUEST,
  '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.ListMLFrameworksRequest)
  })
_sym_db.RegisterMessage(ListMLFrameworksRequest)
_sym_db.RegisterMessage(ListMLFrameworksRequest.LabelsEntry)

ListMLFrameworksResponse = _reflection.GeneratedProtocolMessageType('ListMLFrameworksResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTMLFRAMEWORKSRESPONSE,
  '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.ListMLFrameworksResponse)
  })
_sym_db.RegisterMessage(ListMLFrameworksResponse)

GetMLFrameworkRequest = _reflection.GeneratedProtocolMessageType('GetMLFrameworkRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETMLFRAMEWORKREQUEST,
  '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.GetMLFrameworkRequest)
  })
_sym_db.RegisterMessage(GetMLFrameworkRequest)

GetMLFrameworkResponse = _reflection.GeneratedProtocolMessageType('GetMLFrameworkResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETMLFRAMEWORKRESPONSE,
  '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.GetMLFrameworkResponse)
  })
_sym_db.RegisterMessage(GetMLFrameworkResponse)

ListCloudsRequest = _reflection.GeneratedProtocolMessageType('ListCloudsRequest', (_message.Message,), {

  'LabelsEntry' : _reflection.GeneratedProtocolMessageType('LabelsEntry', (_message.Message,), {
    'DESCRIPTOR' : _LISTCLOUDSREQUEST_LABELSENTRY,
    '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
    # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.ListCloudsRequest.LabelsEntry)
    })
  ,
  'DESCRIPTOR' : _LISTCLOUDSREQUEST,
  '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.ListCloudsRequest)
  })
_sym_db.RegisterMessage(ListCloudsRequest)
_sym_db.RegisterMessage(ListCloudsRequest.LabelsEntry)

ListCloudsResponse = _reflection.GeneratedProtocolMessageType('ListCloudsResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTCLOUDSRESPONSE,
  '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.ListCloudsResponse)
  })
_sym_db.RegisterMessage(ListCloudsResponse)

GetCloudRequest = _reflection.GeneratedProtocolMessageType('GetCloudRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETCLOUDREQUEST,
  '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.GetCloudRequest)
  })
_sym_db.RegisterMessage(GetCloudRequest)

GetCloudResponse = _reflection.GeneratedProtocolMessageType('GetCloudResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETCLOUDRESPONSE,
  '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.GetCloudResponse)
  })
_sym_db.RegisterMessage(GetCloudResponse)

ListPublicDatasetsRequest = _reflection.GeneratedProtocolMessageType('ListPublicDatasetsRequest', (_message.Message,), {

  'LabelsEntry' : _reflection.GeneratedProtocolMessageType('LabelsEntry', (_message.Message,), {
    'DESCRIPTOR' : _LISTPUBLICDATASETSREQUEST_LABELSENTRY,
    '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
    # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.ListPublicDatasetsRequest.LabelsEntry)
    })
  ,
  'DESCRIPTOR' : _LISTPUBLICDATASETSREQUEST,
  '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.ListPublicDatasetsRequest)
  })
_sym_db.RegisterMessage(ListPublicDatasetsRequest)
_sym_db.RegisterMessage(ListPublicDatasetsRequest.LabelsEntry)

ListPublicDatasetsResponse = _reflection.GeneratedProtocolMessageType('ListPublicDatasetsResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTPUBLICDATASETSRESPONSE,
  '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.ListPublicDatasetsResponse)
  })
_sym_db.RegisterMessage(ListPublicDatasetsResponse)

GetPublicDatasetRequest = _reflection.GeneratedProtocolMessageType('GetPublicDatasetRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETPUBLICDATASETREQUEST,
  '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.GetPublicDatasetRequest)
  })
_sym_db.RegisterMessage(GetPublicDatasetRequest)

GetPublicDatasetResponse = _reflection.GeneratedProtocolMessageType('GetPublicDatasetResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETPUBLICDATASETRESPONSE,
  '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.GetPublicDatasetResponse)
  })
_sym_db.RegisterMessage(GetPublicDatasetResponse)

ListPretrainedModelsRequest = _reflection.GeneratedProtocolMessageType('ListPretrainedModelsRequest', (_message.Message,), {

  'LabelsEntry' : _reflection.GeneratedProtocolMessageType('LabelsEntry', (_message.Message,), {
    'DESCRIPTOR' : _LISTPRETRAINEDMODELSREQUEST_LABELSENTRY,
    '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
    # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.ListPretrainedModelsRequest.LabelsEntry)
    })
  ,
  'DESCRIPTOR' : _LISTPRETRAINEDMODELSREQUEST,
  '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.ListPretrainedModelsRequest)
  })
_sym_db.RegisterMessage(ListPretrainedModelsRequest)
_sym_db.RegisterMessage(ListPretrainedModelsRequest.LabelsEntry)

ListPretrainedModelsResponse = _reflection.GeneratedProtocolMessageType('ListPretrainedModelsResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTPRETRAINEDMODELSRESPONSE,
  '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.ListPretrainedModelsResponse)
  })
_sym_db.RegisterMessage(ListPretrainedModelsResponse)

GetPretrainedModelRequest = _reflection.GeneratedProtocolMessageType('GetPretrainedModelRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETPRETRAINEDMODELREQUEST,
  '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.GetPretrainedModelRequest)
  })
_sym_db.RegisterMessage(GetPretrainedModelRequest)

GetPretrainedModelResponse = _reflection.GeneratedProtocolMessageType('GetPretrainedModelResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETPRETRAINEDMODELRESPONSE,
  '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.GetPretrainedModelResponse)
  })
_sym_db.RegisterMessage(GetPretrainedModelResponse)

ListWorkloadClassesRequest = _reflection.GeneratedProtocolMessageType('ListWorkloadClassesRequest', (_message.Message,), {

  'LabelsEntry' : _reflection.GeneratedProtocolMessageType('LabelsEntry', (_message.Message,), {
    'DESCRIPTOR' : _LISTWORKLOADCLASSESREQUEST_LABELSENTRY,
    '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
    # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.ListWorkloadClassesRequest.LabelsEntry)
    })
  ,
  'DESCRIPTOR' : _LISTWORKLOADCLASSESREQUEST,
  '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.ListWorkloadClassesRequest)
  })
_sym_db.RegisterMessage(ListWorkloadClassesRequest)
_sym_db.RegisterMessage(ListWorkloadClassesRequest.LabelsEntry)

ListWorkloadClassesResponse = _reflection.GeneratedProtocolMessageType('ListWorkloadClassesResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTWORKLOADCLASSESRESPONSE,
  '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.ListWorkloadClassesResponse)
  })
_sym_db.RegisterMessage(ListWorkloadClassesResponse)

GetWorkloadClassRequest = _reflection.GeneratedProtocolMessageType('GetWorkloadClassRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETWORKLOADCLASSREQUEST,
  '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.GetWorkloadClassRequest)
  })
_sym_db.RegisterMessage(GetWorkloadClassRequest)

GetWorkloadClassResponse = _reflection.GeneratedProtocolMessageType('GetWorkloadClassResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETWORKLOADCLASSRESPONSE,
  '__module__' : 'github.com.metaprov.modeldapi.services.catalog.catalog_pb2'
  # @@protoc_insertion_point(class_scope:github.com.metaprov.modeld.services.catalog.GetWorkloadClassResponse)
  })
_sym_db.RegisterMessage(GetWorkloadClassResponse)


DESCRIPTOR._options = None
_LISTALGORITHMSREQUEST_LABELSENTRY._options = None
_LISTMLFRAMEWORKSREQUEST_LABELSENTRY._options = None
_LISTCLOUDSREQUEST_LABELSENTRY._options = None
_LISTPUBLICDATASETSREQUEST_LABELSENTRY._options = None
_LISTPRETRAINEDMODELSREQUEST_LABELSENTRY._options = None
_LISTWORKLOADCLASSESREQUEST_LABELSENTRY._options = None

_CATALOGSERVICE = _descriptor.ServiceDescriptor(
  name='CatalogService',
  full_name='github.com.metaprov.modeld.services.catalog.CatalogService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=3078,
  serialized_end=4555,
  methods=[
  _descriptor.MethodDescriptor(
    name='ListAlgorithm',
    full_name='github.com.metaprov.modeld.services.catalog.CatalogService.ListAlgorithm',
    index=0,
    containing_service=None,
    input_type=_LISTALGORITHMSREQUEST,
    output_type=_LISTALGORITHMSRESPONSE,
    serialized_options=b'\202\323\344\223\002\017\022\rv1/algorithms',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetAlgorithm',
    full_name='github.com.metaprov.modeld.services.catalog.CatalogService.GetAlgorithm',
    index=1,
    containing_service=None,
    input_type=_GETALGORITHMREQUEST,
    output_type=_GETALGORITHMRESPONSE,
    serialized_options=b'\202\323\344\223\002\027\022\025/v1/algorithms/{name}',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='ListMLFrameworks',
    full_name='github.com.metaprov.modeld.services.catalog.CatalogService.ListMLFrameworks',
    index=2,
    containing_service=None,
    input_type=_LISTMLFRAMEWORKSREQUEST,
    output_type=_LISTMLFRAMEWORKSRESPONSE,
    serialized_options=b'\202\323\344\223\002\022\022\020/v1/mlframeworks',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetMLFramework',
    full_name='github.com.metaprov.modeld.services.catalog.CatalogService.GetMLFramework',
    index=3,
    containing_service=None,
    input_type=_GETMLFRAMEWORKREQUEST,
    output_type=_GETMLFRAMEWORKRESPONSE,
    serialized_options=b'\202\323\344\223\002\031\022\027/v1/mlframeworks/{name}',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='ListClouds',
    full_name='github.com.metaprov.modeld.services.catalog.CatalogService.ListClouds',
    index=4,
    containing_service=None,
    input_type=_LISTCLOUDSREQUEST,
    output_type=_LISTCLOUDSRESPONSE,
    serialized_options=b'\202\323\344\223\002\014\022\n/v1/clouds',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetCloud',
    full_name='github.com.metaprov.modeld.services.catalog.CatalogService.GetCloud',
    index=5,
    containing_service=None,
    input_type=_GETCLOUDREQUEST,
    output_type=_GETCLOUDRESPONSE,
    serialized_options=b'\202\323\344\223\002\023\022\021/v1/clouds/{name}',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='ListWorkloadClasses',
    full_name='github.com.metaprov.modeld.services.catalog.CatalogService.ListWorkloadClasses',
    index=6,
    containing_service=None,
    input_type=_LISTWORKLOADCLASSESREQUEST,
    output_type=_LISTWORKLOADCLASSESRESPONSE,
    serialized_options=b'\202\323\344\223\002\024\022\022/v1/trainerclasses',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetWorkloadClass',
    full_name='github.com.metaprov.modeld.services.catalog.CatalogService.GetWorkloadClass',
    index=7,
    containing_service=None,
    input_type=_GETWORKLOADCLASSREQUEST,
    output_type=_GETWORKLOADCLASSRESPONSE,
    serialized_options=b'\202\323\344\223\002\033\022\031/v1/trainerclasses/{name}',
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_CATALOGSERVICE)

DESCRIPTOR.services_by_name['CatalogService'] = _CATALOGSERVICE

# @@protoc_insertion_point(module_scope)
