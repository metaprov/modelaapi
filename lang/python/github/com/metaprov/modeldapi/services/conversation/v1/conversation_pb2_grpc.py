# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from github.com.metaprov.modeldapi.services.conversation.v1 import conversation_pb2 as github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2


class ConversationServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListConversations = channel.unary_unary(
                '/github.com.metaprov.modeldapi.services.conversation.v1.ConversationService/ListConversations',
                request_serializer=github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.ListConversationRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.ListConversationResponse.FromString,
                )
        self.CreateConversation = channel.unary_unary(
                '/github.com.metaprov.modeldapi.services.conversation.v1.ConversationService/CreateConversation',
                request_serializer=github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.CreateConversationRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.CreateConversationResponse.FromString,
                )
        self.GetConversation = channel.unary_unary(
                '/github.com.metaprov.modeldapi.services.conversation.v1.ConversationService/GetConversation',
                request_serializer=github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.GetConversationRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.GetConversationResponse.FromString,
                )
        self.UpdateConersation = channel.unary_unary(
                '/github.com.metaprov.modeldapi.services.conversation.v1.ConversationService/UpdateConersation',
                request_serializer=github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.UpdateConversationRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.UpdateConversationResponse.FromString,
                )
        self.DeleteConversation = channel.unary_unary(
                '/github.com.metaprov.modeldapi.services.conversation.v1.ConversationService/DeleteConversation',
                request_serializer=github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.DeleteConversationRequest.SerializeToString,
                response_deserializer=github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.DeleteConversationResponse.FromString,
                )


class ConversationServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListConversations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateConversation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConversation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateConersation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteConversation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ConversationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListConversations': grpc.unary_unary_rpc_method_handler(
                    servicer.ListConversations,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.ListConversationRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.ListConversationResponse.SerializeToString,
            ),
            'CreateConversation': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateConversation,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.CreateConversationRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.CreateConversationResponse.SerializeToString,
            ),
            'GetConversation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConversation,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.GetConversationRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.GetConversationResponse.SerializeToString,
            ),
            'UpdateConersation': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateConersation,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.UpdateConversationRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.UpdateConversationResponse.SerializeToString,
            ),
            'DeleteConversation': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteConversation,
                    request_deserializer=github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.DeleteConversationRequest.FromString,
                    response_serializer=github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.DeleteConversationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'github.com.metaprov.modeldapi.services.conversation.v1.ConversationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ConversationService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListConversations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modeldapi.services.conversation.v1.ConversationService/ListConversations',
            github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.ListConversationRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.ListConversationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateConversation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modeldapi.services.conversation.v1.ConversationService/CreateConversation',
            github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.CreateConversationRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.CreateConversationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetConversation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modeldapi.services.conversation.v1.ConversationService/GetConversation',
            github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.GetConversationRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.GetConversationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateConersation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modeldapi.services.conversation.v1.ConversationService/UpdateConersation',
            github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.UpdateConversationRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.UpdateConversationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteConversation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/github.com.metaprov.modeldapi.services.conversation.v1.ConversationService/DeleteConversation',
            github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.DeleteConversationRequest.SerializeToString,
            github_dot_com_dot_metaprov_dot_modeldapi_dot_services_dot_conversation_dot_v1_dot_conversation__pb2.DeleteConversationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
