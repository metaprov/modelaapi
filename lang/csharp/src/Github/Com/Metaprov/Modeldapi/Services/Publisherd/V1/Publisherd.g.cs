// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: github.com/metaprov/modelaapi/services/publisherd/v1/publisherd.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Github.Com.Metaprov.modelaapi.Services.Publisherd.V1 {

  /// <summary>Holder for reflection information generated from github.com/metaprov/modelaapi/services/publisherd/v1/publisherd.proto</summary>
  public static partial class PublisherdReflection {

    #region Descriptor
    /// <summary>File descriptor for github.com/metaprov/modelaapi/services/publisherd/v1/publisherd.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PublisherdReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkVnaXRodWIuY29tL21ldGFwcm92L21vZGVsZGFwaS9zZXJ2aWNlcy9wdWJs",
            "aXNoZXJkL3YxL3B1Ymxpc2hlcmQucHJvdG8SNGdpdGh1Yi5jb20ubWV0YXBy",
            "b3YubW9kZWxkYXBpLnNlcnZpY2VzLnB1Ymxpc2hlcmQudjEaSGdpdGh1Yi5j",
            "b20vbWV0YXByb3YvbW9kZWxkYXBpL3BrZy9hcGlzL3RyYWluaW5nL3YxYWxw",
            "aGExL2dlbmVyYXRlZC5wcm90bxpEZ2l0aHViLmNvbS9tZXRhcHJvdi9tb2Rl",
            "bGRhcGkvcGtnL2FwaXMvZGF0YS92MWFscGhhMS9nZW5lcmF0ZWQucHJvdG8a",
            "RWdpdGh1Yi5jb20vbWV0YXByb3YvbW9kZWxkYXBpL3BrZy9hcGlzL2luZnJh",
            "L3YxYWxwaGExL2dlbmVyYXRlZC5wcm90byL/AgoWUHVibGlzaE5vdGVib29r",
            "UmVxdWVzdBIUCgxub3RlYm9va05hbWUYASABKAkSGQoRbm90ZWJvb2tOYW1l",
            "c3BhY2UYAiABKAkSXAoMbm90ZWJvb2tTcGVjGAMgASgLMkYuZ2l0aHViLmNv",
            "bS5tZXRhcHJvdi5tb2RlbGRhcGkucGtnLmFwaXMudHJhaW5pbmcudjFhbHBo",
            "YTEuTm90ZWJvb2tTcGVjEhcKD05vdGVib29rQ29udGVudBgEIAEoCRISCgpE",
            "b2NrZXJmaWxlGAUgASgJEhAKCHByb3ZpZGVyGAYgASgJEmgKBnNlY3JldBgH",
            "IAMoCzJYLmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnNlcnZpY2Vz",
            "LnB1Ymxpc2hlcmQudjEuUHVibGlzaE5vdGVib29rUmVxdWVzdC5TZWNyZXRF",
            "bnRyeRotCgtTZWNyZXRFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiAB",
            "KAw6AjgBIiwKF1B1Ymxpc2hOb3RlYm9va1Jlc3BvbnNlEhEKCUltYWdlTmFt",
            "ZRgBIAEoCSKdCgoTUHVibGlzaE1vZGVsUmVxdWVzdBJWCgtkYXRhcHJvZHVj",
            "dBgBIAEoCzJBLmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5h",
            "cGlzLmRhdGEudjFhbHBoYTEuRGF0YVByb2R1Y3QSZAoSZGF0YXByb2R1Y3R2",
            "ZXJzaW9uGAIgASgLMkguZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGku",
            "cGtnLmFwaXMuZGF0YS52MWFscGhhMS5EYXRhUHJvZHVjdFZlcnNpb24STgoF",
            "bW9kZWwYAyABKAsyPy5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5w",
            "a2cuYXBpcy50cmFpbmluZy52MWFscGhhMS5Nb2RlbBJOCgVzdHVkeRgEIAEo",
            "CzI/LmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLnRy",
            "YWluaW5nLnYxYWxwaGExLlN0dWR5ElQKCmRhdGFzb3VyY2UYBSABKAsyQC5n",
            "aXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5kYXRhLnYx",
            "YWxwaGExLkRhdGFTb3VyY2USTgoHZGF0YXNldBgGIAEoCzI9LmdpdGh1Yi5j",
            "b20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmRhdGEudjFhbHBoYTEu",
            "RGF0YXNldBIQCghwcm92aWRlchgHIAEoCRIRCglpbWFnZW5hbWUYCCABKAkS",
            "DAoEcHVzaBgJIAEoCBJUCgZidWNrZXQYCiABKAsyRC5naXRodWIuY29tLm1l",
            "dGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5pbmZyYS52MWFscGhhMS5WaXJ0",
            "dWFsQnVja2V0ElQKCWNsb3VkQ29ubhgLIAEoCzJBLmdpdGh1Yi5jb20ubWV0",
            "YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmluZnJhLnYxYWxwaGExLkNvbm5l",
            "Y3Rpb24SbwoLY2xvdWRTZWNyZXQYDCADKAsyWi5naXRodWIuY29tLm1ldGFw",
            "cm92Lm1vZGVsZGFwaS5zZXJ2aWNlcy5wdWJsaXNoZXJkLnYxLlB1Ymxpc2hN",
            "b2RlbFJlcXVlc3QuQ2xvdWRTZWNyZXRFbnRyeRJbChBkb2NrZXJDb25uZWN0",
            "aW9uGA0gASgLMkEuZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkucGtn",
            "LmFwaXMuaW5mcmEudjFhbHBoYTEuQ29ubmVjdGlvbhKBAQoUZG9ja2VyUmVn",
            "aXN0cnlTZWNyZXQYIyADKAsyYy5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVs",
            "ZGFwaS5zZXJ2aWNlcy5wdWJsaXNoZXJkLnYxLlB1Ymxpc2hNb2RlbFJlcXVl",
            "c3QuRG9ja2VyUmVnaXN0cnlTZWNyZXRFbnRyeRIXCg9tb2RlbFdlaWdodHNV",
            "cmkYDiABKAkSHgoWcHJlcHJvY2Vzc29yV2VpZ2h0c1VyaRgPIAEoCRIXCg9s",
            "YWJlbEVuY29kZXJVcmkYECABKAkSDgoGa2FuaWtvGBEgASgIGjIKEENsb3Vk",
            "U2VjcmV0RW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgMOgI4ARo7",
            "ChlEb2NrZXJSZWdpc3RyeVNlY3JldEVudHJ5EgsKA2tleRgBIAEoCRINCgV2",
            "YWx1ZRgCIAEoDDoCOAEiKQoUUHVibGlzaE1vZGVsUmVzcG9uc2USEQoJSW1h",
            "Z2VOYW1lGAEgASgJIhEKD1NodXRkb3duUmVxdWVzdCISChBTaHV0ZG93blJl",
            "c3BvbnNlMpEEChFQdWJsaXNoZXJkU2VydmljZRKqAQoPUHVibGlzaENvbWJp",
            "bmVkEkkuZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkuc2VydmljZXMu",
            "cHVibGlzaGVyZC52MS5QdWJsaXNoTW9kZWxSZXF1ZXN0GkouZ2l0aHViLmNv",
            "bS5tZXRhcHJvdi5tb2RlbGRhcGkuc2VydmljZXMucHVibGlzaGVyZC52MS5Q",
            "dWJsaXNoTW9kZWxSZXNwb25zZSIAErABCg9QdWJsaXNoTm90ZWJvb2sSTC5n",
            "aXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5zZXJ2aWNlcy5wdWJsaXNo",
            "ZXJkLnYxLlB1Ymxpc2hOb3RlYm9va1JlcXVlc3QaTS5naXRodWIuY29tLm1l",
            "dGFwcm92Lm1vZGVsZGFwaS5zZXJ2aWNlcy5wdWJsaXNoZXJkLnYxLlB1Ymxp",
            "c2hOb3RlYm9va1Jlc3BvbnNlIgASmwEKCFNodXRkb3duEkUuZ2l0aHViLmNv",
            "bS5tZXRhcHJvdi5tb2RlbGRhcGkuc2VydmljZXMucHVibGlzaGVyZC52MS5T",
            "aHV0ZG93blJlcXVlc3QaRi5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFw",
            "aS5zZXJ2aWNlcy5wdWJsaXNoZXJkLnYxLlNodXRkb3duUmVzcG9uc2UiAEI2",
            "WjRnaXRodWIuY29tL21ldGFwcm92L21vZGVsZGFwaS9zZXJ2aWNlcy9wdWJs",
            "aXNoZXJkL3YxYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Training.V1Alpha1.GeneratedReflection.Descriptor, global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor, global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.modelaapi.Services.Publisherd.V1.PublishNotebookRequest), global::Github.Com.Metaprov.modelaapi.Services.Publisherd.V1.PublishNotebookRequest.Parser, new[]{ "NotebookName", "NotebookNamespace", "NotebookSpec", "NotebookContent", "Dockerfile", "Provider", "Secret" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.modelaapi.Services.Publisherd.V1.PublishNotebookResponse), global::Github.Com.Metaprov.modelaapi.Services.Publisherd.V1.PublishNotebookResponse.Parser, new[]{ "ImageName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.modelaapi.Services.Publisherd.V1.PublishModelRequest), global::Github.Com.Metaprov.modelaapi.Services.Publisherd.V1.PublishModelRequest.Parser, new[]{ "Dataproduct", "Dataproductversion", "Model", "Study", "Datasource", "Dataset", "Provider", "Imagename", "Push", "Bucket", "CloudConn", "CloudSecret", "DockerConnection", "DockerRegistrySecret", "ModelWeightsUri", "PreprocessorWeightsUri", "LabelEncoderUri", "Kaniko" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.modelaapi.Services.Publisherd.V1.PublishModelResponse), global::Github.Com.Metaprov.modelaapi.Services.Publisherd.V1.PublishModelResponse.Parser, new[]{ "ImageName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.modelaapi.Services.Publisherd.V1.ShutdownRequest), global::Github.Com.Metaprov.modelaapi.Services.Publisherd.V1.ShutdownRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.modelaapi.Services.Publisherd.V1.ShutdownResponse), global::Github.Com.Metaprov.modelaapi.Services.Publisherd.V1.ShutdownResponse.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PublishNotebookRequest : pb::IMessage<PublishNotebookRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PublishNotebookRequest> _parser = new pb::MessageParser<PublishNotebookRequest>(() => new PublishNotebookRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PublishNotebookRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.modelaapi.Services.Publisherd.V1.PublisherdReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishNotebookRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishNotebookRequest(PublishNotebookRequest other) : this() {
      notebookName_ = other.notebookName_;
      notebookNamespace_ = other.notebookNamespace_;
      notebookSpec_ = other.notebookSpec_ != null ? other.notebookSpec_.Clone() : null;
      notebookContent_ = other.notebookContent_;
      dockerfile_ = other.dockerfile_;
      provider_ = other.provider_;
      secret_ = other.secret_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishNotebookRequest Clone() {
      return new PublishNotebookRequest(this);
    }

    /// <summary>Field number for the "notebookName" field.</summary>
    public const int NotebookNameFieldNumber = 1;
    private string notebookName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotebookName {
      get { return notebookName_; }
      set {
        notebookName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "notebookNamespace" field.</summary>
    public const int NotebookNamespaceFieldNumber = 2;
    private string notebookNamespace_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotebookNamespace {
      get { return notebookNamespace_; }
      set {
        notebookNamespace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "notebookSpec" field.</summary>
    public const int NotebookSpecFieldNumber = 3;
    private global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Training.V1Alpha1.NotebookSpec notebookSpec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Training.V1Alpha1.NotebookSpec NotebookSpec {
      get { return notebookSpec_; }
      set {
        notebookSpec_ = value;
      }
    }

    /// <summary>Field number for the "NotebookContent" field.</summary>
    public const int NotebookContentFieldNumber = 4;
    private string notebookContent_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotebookContent {
      get { return notebookContent_; }
      set {
        notebookContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Dockerfile" field.</summary>
    public const int DockerfileFieldNumber = 5;
    private string dockerfile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dockerfile {
      get { return dockerfile_; }
      set {
        dockerfile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "provider" field.</summary>
    public const int ProviderFieldNumber = 6;
    private string provider_ = "";
    /// <summary>
    /// the image registry provider
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Provider {
      get { return provider_; }
      set {
        provider_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "secret" field.</summary>
    public const int SecretFieldNumber = 7;
    private static readonly pbc::MapField<string, pb::ByteString>.Codec _map_secret_codec
        = new pbc::MapField<string, pb::ByteString>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForBytes(18, pb::ByteString.Empty), 58);
    private readonly pbc::MapField<string, pb::ByteString> secret_ = new pbc::MapField<string, pb::ByteString>();
    /// <summary>
    /// the image registry login details
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, pb::ByteString> Secret {
      get { return secret_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PublishNotebookRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PublishNotebookRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NotebookName != other.NotebookName) return false;
      if (NotebookNamespace != other.NotebookNamespace) return false;
      if (!object.Equals(NotebookSpec, other.NotebookSpec)) return false;
      if (NotebookContent != other.NotebookContent) return false;
      if (Dockerfile != other.Dockerfile) return false;
      if (Provider != other.Provider) return false;
      if (!Secret.Equals(other.Secret)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NotebookName.Length != 0) hash ^= NotebookName.GetHashCode();
      if (NotebookNamespace.Length != 0) hash ^= NotebookNamespace.GetHashCode();
      if (notebookSpec_ != null) hash ^= NotebookSpec.GetHashCode();
      if (NotebookContent.Length != 0) hash ^= NotebookContent.GetHashCode();
      if (Dockerfile.Length != 0) hash ^= Dockerfile.GetHashCode();
      if (Provider.Length != 0) hash ^= Provider.GetHashCode();
      hash ^= Secret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NotebookName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NotebookName);
      }
      if (NotebookNamespace.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NotebookNamespace);
      }
      if (notebookSpec_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(NotebookSpec);
      }
      if (NotebookContent.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NotebookContent);
      }
      if (Dockerfile.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Dockerfile);
      }
      if (Provider.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Provider);
      }
      secret_.WriteTo(output, _map_secret_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NotebookName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NotebookName);
      }
      if (NotebookNamespace.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NotebookNamespace);
      }
      if (notebookSpec_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(NotebookSpec);
      }
      if (NotebookContent.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NotebookContent);
      }
      if (Dockerfile.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Dockerfile);
      }
      if (Provider.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Provider);
      }
      secret_.WriteTo(ref output, _map_secret_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NotebookName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotebookName);
      }
      if (NotebookNamespace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotebookNamespace);
      }
      if (notebookSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NotebookSpec);
      }
      if (NotebookContent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotebookContent);
      }
      if (Dockerfile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Dockerfile);
      }
      if (Provider.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Provider);
      }
      size += secret_.CalculateSize(_map_secret_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PublishNotebookRequest other) {
      if (other == null) {
        return;
      }
      if (other.NotebookName.Length != 0) {
        NotebookName = other.NotebookName;
      }
      if (other.NotebookNamespace.Length != 0) {
        NotebookNamespace = other.NotebookNamespace;
      }
      if (other.notebookSpec_ != null) {
        if (notebookSpec_ == null) {
          NotebookSpec = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Training.V1Alpha1.NotebookSpec();
        }
        NotebookSpec.MergeFrom(other.NotebookSpec);
      }
      if (other.NotebookContent.Length != 0) {
        NotebookContent = other.NotebookContent;
      }
      if (other.Dockerfile.Length != 0) {
        Dockerfile = other.Dockerfile;
      }
      if (other.Provider.Length != 0) {
        Provider = other.Provider;
      }
      secret_.Add(other.secret_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NotebookName = input.ReadString();
            break;
          }
          case 18: {
            NotebookNamespace = input.ReadString();
            break;
          }
          case 26: {
            if (notebookSpec_ == null) {
              NotebookSpec = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Training.V1Alpha1.NotebookSpec();
            }
            input.ReadMessage(NotebookSpec);
            break;
          }
          case 34: {
            NotebookContent = input.ReadString();
            break;
          }
          case 42: {
            Dockerfile = input.ReadString();
            break;
          }
          case 50: {
            Provider = input.ReadString();
            break;
          }
          case 58: {
            secret_.AddEntriesFrom(input, _map_secret_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            NotebookName = input.ReadString();
            break;
          }
          case 18: {
            NotebookNamespace = input.ReadString();
            break;
          }
          case 26: {
            if (notebookSpec_ == null) {
              NotebookSpec = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Training.V1Alpha1.NotebookSpec();
            }
            input.ReadMessage(NotebookSpec);
            break;
          }
          case 34: {
            NotebookContent = input.ReadString();
            break;
          }
          case 42: {
            Dockerfile = input.ReadString();
            break;
          }
          case 50: {
            Provider = input.ReadString();
            break;
          }
          case 58: {
            secret_.AddEntriesFrom(ref input, _map_secret_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PublishNotebookResponse : pb::IMessage<PublishNotebookResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PublishNotebookResponse> _parser = new pb::MessageParser<PublishNotebookResponse>(() => new PublishNotebookResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PublishNotebookResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.modelaapi.Services.Publisherd.V1.PublisherdReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishNotebookResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishNotebookResponse(PublishNotebookResponse other) : this() {
      imageName_ = other.imageName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishNotebookResponse Clone() {
      return new PublishNotebookResponse(this);
    }

    /// <summary>Field number for the "ImageName" field.</summary>
    public const int ImageNameFieldNumber = 1;
    private string imageName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageName {
      get { return imageName_; }
      set {
        imageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PublishNotebookResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PublishNotebookResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ImageName != other.ImageName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ImageName.Length != 0) hash ^= ImageName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ImageName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ImageName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ImageName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ImageName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ImageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PublishNotebookResponse other) {
      if (other == null) {
        return;
      }
      if (other.ImageName.Length != 0) {
        ImageName = other.ImageName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ImageName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ImageName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PublishModelRequest : pb::IMessage<PublishModelRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PublishModelRequest> _parser = new pb::MessageParser<PublishModelRequest>(() => new PublishModelRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PublishModelRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.modelaapi.Services.Publisherd.V1.PublisherdReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishModelRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishModelRequest(PublishModelRequest other) : this() {
      dataproduct_ = other.dataproduct_ != null ? other.dataproduct_.Clone() : null;
      dataproductversion_ = other.dataproductversion_ != null ? other.dataproductversion_.Clone() : null;
      model_ = other.model_ != null ? other.model_.Clone() : null;
      study_ = other.study_ != null ? other.study_.Clone() : null;
      datasource_ = other.datasource_ != null ? other.datasource_.Clone() : null;
      dataset_ = other.dataset_ != null ? other.dataset_.Clone() : null;
      provider_ = other.provider_;
      imagename_ = other.imagename_;
      push_ = other.push_;
      bucket_ = other.bucket_ != null ? other.bucket_.Clone() : null;
      cloudConn_ = other.cloudConn_ != null ? other.cloudConn_.Clone() : null;
      cloudSecret_ = other.cloudSecret_.Clone();
      dockerConnection_ = other.dockerConnection_ != null ? other.dockerConnection_.Clone() : null;
      dockerRegistrySecret_ = other.dockerRegistrySecret_.Clone();
      modelWeightsUri_ = other.modelWeightsUri_;
      preprocessorWeightsUri_ = other.preprocessorWeightsUri_;
      labelEncoderUri_ = other.labelEncoderUri_;
      kaniko_ = other.kaniko_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishModelRequest Clone() {
      return new PublishModelRequest(this);
    }

    /// <summary>Field number for the "dataproduct" field.</summary>
    public const int DataproductFieldNumber = 1;
    private global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Data.V1Alpha1.DataProduct dataproduct_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Data.V1Alpha1.DataProduct Dataproduct {
      get { return dataproduct_; }
      set {
        dataproduct_ = value;
      }
    }

    /// <summary>Field number for the "dataproductversion" field.</summary>
    public const int DataproductversionFieldNumber = 2;
    private global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersion dataproductversion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersion Dataproductversion {
      get { return dataproductversion_; }
      set {
        dataproductversion_ = value;
      }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 3;
    private global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Training.V1Alpha1.Model model_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Training.V1Alpha1.Model Model {
      get { return model_; }
      set {
        model_ = value;
      }
    }

    /// <summary>Field number for the "study" field.</summary>
    public const int StudyFieldNumber = 4;
    private global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Training.V1Alpha1.Study study_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Training.V1Alpha1.Study Study {
      get { return study_; }
      set {
        study_ = value;
      }
    }

    /// <summary>Field number for the "datasource" field.</summary>
    public const int DatasourceFieldNumber = 5;
    private global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Data.V1Alpha1.DataSource datasource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Data.V1Alpha1.DataSource Datasource {
      get { return datasource_; }
      set {
        datasource_ = value;
      }
    }

    /// <summary>Field number for the "dataset" field.</summary>
    public const int DatasetFieldNumber = 6;
    private global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Data.V1Alpha1.Dataset dataset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Data.V1Alpha1.Dataset Dataset {
      get { return dataset_; }
      set {
        dataset_ = value;
      }
    }

    /// <summary>Field number for the "provider" field.</summary>
    public const int ProviderFieldNumber = 7;
    private string provider_ = "";
    /// <summary>
    /// the image registry provider
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Provider {
      get { return provider_; }
      set {
        provider_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "imagename" field.</summary>
    public const int ImagenameFieldNumber = 8;
    private string imagename_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Imagename {
      get { return imagename_; }
      set {
        imagename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "push" field.</summary>
    public const int PushFieldNumber = 9;
    private bool push_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Push {
      get { return push_; }
      set {
        push_ = value;
      }
    }

    /// <summary>Field number for the "bucket" field.</summary>
    public const int BucketFieldNumber = 10;
    private global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucket bucket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucket Bucket {
      get { return bucket_; }
      set {
        bucket_ = value;
      }
    }

    /// <summary>Field number for the "cloudConn" field.</summary>
    public const int CloudConnFieldNumber = 11;
    private global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Infra.V1Alpha1.Connection cloudConn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Infra.V1Alpha1.Connection CloudConn {
      get { return cloudConn_; }
      set {
        cloudConn_ = value;
      }
    }

    /// <summary>Field number for the "cloudSecret" field.</summary>
    public const int CloudSecretFieldNumber = 12;
    private static readonly pbc::MapField<string, pb::ByteString>.Codec _map_cloudSecret_codec
        = new pbc::MapField<string, pb::ByteString>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForBytes(18, pb::ByteString.Empty), 98);
    private readonly pbc::MapField<string, pb::ByteString> cloudSecret_ = new pbc::MapField<string, pb::ByteString>();
    /// <summary>
    /// the image registry login details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, pb::ByteString> CloudSecret {
      get { return cloudSecret_; }
    }

    /// <summary>Field number for the "dockerConnection" field.</summary>
    public const int DockerConnectionFieldNumber = 13;
    private global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Infra.V1Alpha1.Connection dockerConnection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Infra.V1Alpha1.Connection DockerConnection {
      get { return dockerConnection_; }
      set {
        dockerConnection_ = value;
      }
    }

    /// <summary>Field number for the "dockerRegistrySecret" field.</summary>
    public const int DockerRegistrySecretFieldNumber = 35;
    private static readonly pbc::MapField<string, pb::ByteString>.Codec _map_dockerRegistrySecret_codec
        = new pbc::MapField<string, pb::ByteString>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForBytes(18, pb::ByteString.Empty), 282);
    private readonly pbc::MapField<string, pb::ByteString> dockerRegistrySecret_ = new pbc::MapField<string, pb::ByteString>();
    /// <summary>
    /// the image registry login details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, pb::ByteString> DockerRegistrySecret {
      get { return dockerRegistrySecret_; }
    }

    /// <summary>Field number for the "modelWeightsUri" field.</summary>
    public const int ModelWeightsUriFieldNumber = 14;
    private string modelWeightsUri_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelWeightsUri {
      get { return modelWeightsUri_; }
      set {
        modelWeightsUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "preprocessorWeightsUri" field.</summary>
    public const int PreprocessorWeightsUriFieldNumber = 15;
    private string preprocessorWeightsUri_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PreprocessorWeightsUri {
      get { return preprocessorWeightsUri_; }
      set {
        preprocessorWeightsUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labelEncoderUri" field.</summary>
    public const int LabelEncoderUriFieldNumber = 16;
    private string labelEncoderUri_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LabelEncoderUri {
      get { return labelEncoderUri_; }
      set {
        labelEncoderUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "kaniko" field.</summary>
    public const int KanikoFieldNumber = 17;
    private bool kaniko_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Kaniko {
      get { return kaniko_; }
      set {
        kaniko_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PublishModelRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PublishModelRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Dataproduct, other.Dataproduct)) return false;
      if (!object.Equals(Dataproductversion, other.Dataproductversion)) return false;
      if (!object.Equals(Model, other.Model)) return false;
      if (!object.Equals(Study, other.Study)) return false;
      if (!object.Equals(Datasource, other.Datasource)) return false;
      if (!object.Equals(Dataset, other.Dataset)) return false;
      if (Provider != other.Provider) return false;
      if (Imagename != other.Imagename) return false;
      if (Push != other.Push) return false;
      if (!object.Equals(Bucket, other.Bucket)) return false;
      if (!object.Equals(CloudConn, other.CloudConn)) return false;
      if (!CloudSecret.Equals(other.CloudSecret)) return false;
      if (!object.Equals(DockerConnection, other.DockerConnection)) return false;
      if (!DockerRegistrySecret.Equals(other.DockerRegistrySecret)) return false;
      if (ModelWeightsUri != other.ModelWeightsUri) return false;
      if (PreprocessorWeightsUri != other.PreprocessorWeightsUri) return false;
      if (LabelEncoderUri != other.LabelEncoderUri) return false;
      if (Kaniko != other.Kaniko) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dataproduct_ != null) hash ^= Dataproduct.GetHashCode();
      if (dataproductversion_ != null) hash ^= Dataproductversion.GetHashCode();
      if (model_ != null) hash ^= Model.GetHashCode();
      if (study_ != null) hash ^= Study.GetHashCode();
      if (datasource_ != null) hash ^= Datasource.GetHashCode();
      if (dataset_ != null) hash ^= Dataset.GetHashCode();
      if (Provider.Length != 0) hash ^= Provider.GetHashCode();
      if (Imagename.Length != 0) hash ^= Imagename.GetHashCode();
      if (Push != false) hash ^= Push.GetHashCode();
      if (bucket_ != null) hash ^= Bucket.GetHashCode();
      if (cloudConn_ != null) hash ^= CloudConn.GetHashCode();
      hash ^= CloudSecret.GetHashCode();
      if (dockerConnection_ != null) hash ^= DockerConnection.GetHashCode();
      hash ^= DockerRegistrySecret.GetHashCode();
      if (ModelWeightsUri.Length != 0) hash ^= ModelWeightsUri.GetHashCode();
      if (PreprocessorWeightsUri.Length != 0) hash ^= PreprocessorWeightsUri.GetHashCode();
      if (LabelEncoderUri.Length != 0) hash ^= LabelEncoderUri.GetHashCode();
      if (Kaniko != false) hash ^= Kaniko.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dataproduct_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Dataproduct);
      }
      if (dataproductversion_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Dataproductversion);
      }
      if (model_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Model);
      }
      if (study_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Study);
      }
      if (datasource_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Datasource);
      }
      if (dataset_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Dataset);
      }
      if (Provider.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Provider);
      }
      if (Imagename.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Imagename);
      }
      if (Push != false) {
        output.WriteRawTag(72);
        output.WriteBool(Push);
      }
      if (bucket_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Bucket);
      }
      if (cloudConn_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(CloudConn);
      }
      cloudSecret_.WriteTo(output, _map_cloudSecret_codec);
      if (dockerConnection_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(DockerConnection);
      }
      if (ModelWeightsUri.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ModelWeightsUri);
      }
      if (PreprocessorWeightsUri.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(PreprocessorWeightsUri);
      }
      if (LabelEncoderUri.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(LabelEncoderUri);
      }
      if (Kaniko != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(Kaniko);
      }
      dockerRegistrySecret_.WriteTo(output, _map_dockerRegistrySecret_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dataproduct_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Dataproduct);
      }
      if (dataproductversion_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Dataproductversion);
      }
      if (model_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Model);
      }
      if (study_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Study);
      }
      if (datasource_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Datasource);
      }
      if (dataset_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Dataset);
      }
      if (Provider.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Provider);
      }
      if (Imagename.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Imagename);
      }
      if (Push != false) {
        output.WriteRawTag(72);
        output.WriteBool(Push);
      }
      if (bucket_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Bucket);
      }
      if (cloudConn_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(CloudConn);
      }
      cloudSecret_.WriteTo(ref output, _map_cloudSecret_codec);
      if (dockerConnection_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(DockerConnection);
      }
      if (ModelWeightsUri.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ModelWeightsUri);
      }
      if (PreprocessorWeightsUri.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(PreprocessorWeightsUri);
      }
      if (LabelEncoderUri.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(LabelEncoderUri);
      }
      if (Kaniko != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(Kaniko);
      }
      dockerRegistrySecret_.WriteTo(ref output, _map_dockerRegistrySecret_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dataproduct_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dataproduct);
      }
      if (dataproductversion_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dataproductversion);
      }
      if (model_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Model);
      }
      if (study_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Study);
      }
      if (datasource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Datasource);
      }
      if (dataset_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dataset);
      }
      if (Provider.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Provider);
      }
      if (Imagename.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Imagename);
      }
      if (Push != false) {
        size += 1 + 1;
      }
      if (bucket_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bucket);
      }
      if (cloudConn_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CloudConn);
      }
      size += cloudSecret_.CalculateSize(_map_cloudSecret_codec);
      if (dockerConnection_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DockerConnection);
      }
      size += dockerRegistrySecret_.CalculateSize(_map_dockerRegistrySecret_codec);
      if (ModelWeightsUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelWeightsUri);
      }
      if (PreprocessorWeightsUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PreprocessorWeightsUri);
      }
      if (LabelEncoderUri.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LabelEncoderUri);
      }
      if (Kaniko != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PublishModelRequest other) {
      if (other == null) {
        return;
      }
      if (other.dataproduct_ != null) {
        if (dataproduct_ == null) {
          Dataproduct = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Data.V1Alpha1.DataProduct();
        }
        Dataproduct.MergeFrom(other.Dataproduct);
      }
      if (other.dataproductversion_ != null) {
        if (dataproductversion_ == null) {
          Dataproductversion = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersion();
        }
        Dataproductversion.MergeFrom(other.Dataproductversion);
      }
      if (other.model_ != null) {
        if (model_ == null) {
          Model = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Training.V1Alpha1.Model();
        }
        Model.MergeFrom(other.Model);
      }
      if (other.study_ != null) {
        if (study_ == null) {
          Study = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Training.V1Alpha1.Study();
        }
        Study.MergeFrom(other.Study);
      }
      if (other.datasource_ != null) {
        if (datasource_ == null) {
          Datasource = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Data.V1Alpha1.DataSource();
        }
        Datasource.MergeFrom(other.Datasource);
      }
      if (other.dataset_ != null) {
        if (dataset_ == null) {
          Dataset = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Data.V1Alpha1.Dataset();
        }
        Dataset.MergeFrom(other.Dataset);
      }
      if (other.Provider.Length != 0) {
        Provider = other.Provider;
      }
      if (other.Imagename.Length != 0) {
        Imagename = other.Imagename;
      }
      if (other.Push != false) {
        Push = other.Push;
      }
      if (other.bucket_ != null) {
        if (bucket_ == null) {
          Bucket = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucket();
        }
        Bucket.MergeFrom(other.Bucket);
      }
      if (other.cloudConn_ != null) {
        if (cloudConn_ == null) {
          CloudConn = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Infra.V1Alpha1.Connection();
        }
        CloudConn.MergeFrom(other.CloudConn);
      }
      cloudSecret_.Add(other.cloudSecret_);
      if (other.dockerConnection_ != null) {
        if (dockerConnection_ == null) {
          DockerConnection = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Infra.V1Alpha1.Connection();
        }
        DockerConnection.MergeFrom(other.DockerConnection);
      }
      dockerRegistrySecret_.Add(other.dockerRegistrySecret_);
      if (other.ModelWeightsUri.Length != 0) {
        ModelWeightsUri = other.ModelWeightsUri;
      }
      if (other.PreprocessorWeightsUri.Length != 0) {
        PreprocessorWeightsUri = other.PreprocessorWeightsUri;
      }
      if (other.LabelEncoderUri.Length != 0) {
        LabelEncoderUri = other.LabelEncoderUri;
      }
      if (other.Kaniko != false) {
        Kaniko = other.Kaniko;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dataproduct_ == null) {
              Dataproduct = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Data.V1Alpha1.DataProduct();
            }
            input.ReadMessage(Dataproduct);
            break;
          }
          case 18: {
            if (dataproductversion_ == null) {
              Dataproductversion = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersion();
            }
            input.ReadMessage(Dataproductversion);
            break;
          }
          case 26: {
            if (model_ == null) {
              Model = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Training.V1Alpha1.Model();
            }
            input.ReadMessage(Model);
            break;
          }
          case 34: {
            if (study_ == null) {
              Study = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Training.V1Alpha1.Study();
            }
            input.ReadMessage(Study);
            break;
          }
          case 42: {
            if (datasource_ == null) {
              Datasource = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Data.V1Alpha1.DataSource();
            }
            input.ReadMessage(Datasource);
            break;
          }
          case 50: {
            if (dataset_ == null) {
              Dataset = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Data.V1Alpha1.Dataset();
            }
            input.ReadMessage(Dataset);
            break;
          }
          case 58: {
            Provider = input.ReadString();
            break;
          }
          case 66: {
            Imagename = input.ReadString();
            break;
          }
          case 72: {
            Push = input.ReadBool();
            break;
          }
          case 82: {
            if (bucket_ == null) {
              Bucket = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucket();
            }
            input.ReadMessage(Bucket);
            break;
          }
          case 90: {
            if (cloudConn_ == null) {
              CloudConn = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Infra.V1Alpha1.Connection();
            }
            input.ReadMessage(CloudConn);
            break;
          }
          case 98: {
            cloudSecret_.AddEntriesFrom(input, _map_cloudSecret_codec);
            break;
          }
          case 106: {
            if (dockerConnection_ == null) {
              DockerConnection = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Infra.V1Alpha1.Connection();
            }
            input.ReadMessage(DockerConnection);
            break;
          }
          case 114: {
            ModelWeightsUri = input.ReadString();
            break;
          }
          case 122: {
            PreprocessorWeightsUri = input.ReadString();
            break;
          }
          case 130: {
            LabelEncoderUri = input.ReadString();
            break;
          }
          case 136: {
            Kaniko = input.ReadBool();
            break;
          }
          case 282: {
            dockerRegistrySecret_.AddEntriesFrom(input, _map_dockerRegistrySecret_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (dataproduct_ == null) {
              Dataproduct = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Data.V1Alpha1.DataProduct();
            }
            input.ReadMessage(Dataproduct);
            break;
          }
          case 18: {
            if (dataproductversion_ == null) {
              Dataproductversion = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersion();
            }
            input.ReadMessage(Dataproductversion);
            break;
          }
          case 26: {
            if (model_ == null) {
              Model = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Training.V1Alpha1.Model();
            }
            input.ReadMessage(Model);
            break;
          }
          case 34: {
            if (study_ == null) {
              Study = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Training.V1Alpha1.Study();
            }
            input.ReadMessage(Study);
            break;
          }
          case 42: {
            if (datasource_ == null) {
              Datasource = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Data.V1Alpha1.DataSource();
            }
            input.ReadMessage(Datasource);
            break;
          }
          case 50: {
            if (dataset_ == null) {
              Dataset = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Data.V1Alpha1.Dataset();
            }
            input.ReadMessage(Dataset);
            break;
          }
          case 58: {
            Provider = input.ReadString();
            break;
          }
          case 66: {
            Imagename = input.ReadString();
            break;
          }
          case 72: {
            Push = input.ReadBool();
            break;
          }
          case 82: {
            if (bucket_ == null) {
              Bucket = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucket();
            }
            input.ReadMessage(Bucket);
            break;
          }
          case 90: {
            if (cloudConn_ == null) {
              CloudConn = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Infra.V1Alpha1.Connection();
            }
            input.ReadMessage(CloudConn);
            break;
          }
          case 98: {
            cloudSecret_.AddEntriesFrom(ref input, _map_cloudSecret_codec);
            break;
          }
          case 106: {
            if (dockerConnection_ == null) {
              DockerConnection = new global::Github.Com.Metaprov.modelaapi.Pkg.Apis.Infra.V1Alpha1.Connection();
            }
            input.ReadMessage(DockerConnection);
            break;
          }
          case 114: {
            ModelWeightsUri = input.ReadString();
            break;
          }
          case 122: {
            PreprocessorWeightsUri = input.ReadString();
            break;
          }
          case 130: {
            LabelEncoderUri = input.ReadString();
            break;
          }
          case 136: {
            Kaniko = input.ReadBool();
            break;
          }
          case 282: {
            dockerRegistrySecret_.AddEntriesFrom(ref input, _map_dockerRegistrySecret_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PublishModelResponse : pb::IMessage<PublishModelResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PublishModelResponse> _parser = new pb::MessageParser<PublishModelResponse>(() => new PublishModelResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PublishModelResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.modelaapi.Services.Publisherd.V1.PublisherdReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishModelResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishModelResponse(PublishModelResponse other) : this() {
      imageName_ = other.imageName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishModelResponse Clone() {
      return new PublishModelResponse(this);
    }

    /// <summary>Field number for the "ImageName" field.</summary>
    public const int ImageNameFieldNumber = 1;
    private string imageName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageName {
      get { return imageName_; }
      set {
        imageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PublishModelResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PublishModelResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ImageName != other.ImageName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ImageName.Length != 0) hash ^= ImageName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ImageName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ImageName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ImageName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ImageName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ImageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PublishModelResponse other) {
      if (other == null) {
        return;
      }
      if (other.ImageName.Length != 0) {
        ImageName = other.ImageName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ImageName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ImageName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ShutdownRequest : pb::IMessage<ShutdownRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShutdownRequest> _parser = new pb::MessageParser<ShutdownRequest>(() => new ShutdownRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShutdownRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.modelaapi.Services.Publisherd.V1.PublisherdReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownRequest(ShutdownRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownRequest Clone() {
      return new ShutdownRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShutdownRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShutdownRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShutdownRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class ShutdownResponse : pb::IMessage<ShutdownResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShutdownResponse> _parser = new pb::MessageParser<ShutdownResponse>(() => new ShutdownResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShutdownResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.modelaapi.Services.Publisherd.V1.PublisherdReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownResponse(ShutdownResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownResponse Clone() {
      return new ShutdownResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShutdownResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShutdownResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShutdownResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
