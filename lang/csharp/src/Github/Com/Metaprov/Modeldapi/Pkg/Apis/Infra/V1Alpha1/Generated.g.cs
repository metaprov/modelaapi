// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: github.com/metaprov/modelaapi/pkg/apis/infra/v1alpha1/generated.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1 {

  /// <summary>Holder for reflection information generated from github.com/metaprov/modelaapi/pkg/apis/infra/v1alpha1/generated.proto</summary>
  public static partial class GeneratedReflection {

    #region Descriptor
    /// <summary>File descriptor for github.com/metaprov/modelaapi/pkg/apis/infra/v1alpha1/generated.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GeneratedReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkVnaXRodWIuY29tL21ldGFwcm92L21vZGVsZGFwaS9wa2cvYXBpcy9pbmZy",
            "YS92MWFscGhhMS9nZW5lcmF0ZWQucHJvdG8SNWdpdGh1Yi5jb20ubWV0YXBy",
            "b3YubW9kZWxkYXBpLnBrZy5hcGlzLmluZnJhLnYxYWxwaGExGkdnaXRodWIu",
            "Y29tL21ldGFwcm92L21vZGVsZGFwaS9wa2cvYXBpcy9jYXRhbG9nL3YxYWxw",
            "aGExL2dlbmVyYXRlZC5wcm90bxoiazhzLmlvL2FwaS9jb3JlL3YxL2dlbmVy",
            "YXRlZC5wcm90bxo0azhzLmlvL2FwaW1hY2hpbmVyeS9wa2cvYXBpcy9tZXRh",
            "L3YxL2dlbmVyYXRlZC5wcm90bxovazhzLmlvL2FwaW1hY2hpbmVyeS9wa2cv",
            "cnVudGltZS9nZW5lcmF0ZWQucHJvdG8aNms4cy5pby9hcGltYWNoaW5lcnkv",
            "cGtnL3J1bnRpbWUvc2NoZW1hL2dlbmVyYXRlZC5wcm90byL1AQoHQWNjb3Vu",
            "dBJCCghtZXRhZGF0YRgBIAEoCzIwLms4cy5pby5hcGltYWNoaW5lcnkucGtn",
            "LmFwaXMubWV0YS52MS5PYmplY3RNZXRhElAKBHNwZWMYAiABKAsyQi5naXRo",
            "dWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5pbmZyYS52MWFs",
            "cGhhMS5BY2NvdW50U3BlYxJUCgZzdGF0dXMYAyABKAsyRC5naXRodWIuY29t",
            "Lm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5pbmZyYS52MWFscGhhMS5B",
            "Y2NvdW50U3RhdHVzIpkBChBBY2NvdW50Q29uZGl0aW9uEgwKBHR5cGUYASAB",
            "KAkSDgoGc3RhdHVzGAIgASgJEkYKEmxhc3RUcmFuc2l0aW9uVGltZRgDIAEo",
            "CzIqLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5UaW1l",
            "Eg4KBnJlYXNvbhgEIAEoCRIPCgdtZXNzYWdlGAUgASgJIp4BCgtBY2NvdW50",
            "TGlzdBJACghtZXRhZGF0YRgBIAEoCzIuLms4cy5pby5hcGltYWNoaW5lcnku",
            "cGtnLmFwaXMubWV0YS52MS5MaXN0TWV0YRJNCgVpdGVtcxgCIAMoCzI+Lmdp",
            "dGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmluZnJhLnYx",
            "YWxwaGExLkFjY291bnQiMgoSQWNjb3VudFJvbGVCaW5kaW5nEg4KBmVudGl0",
            "eRgBIAEoCRIMCgRyb2xlGAIgASgJIp0ECgtBY2NvdW50U3BlYxI2Cgl0ZW5h",
            "bnRSZWYYASABKAsyIy5rOHMuaW8uYXBpLmNvcmUudjEuT2JqZWN0UmVmZXJl",
            "bmNlEhEKCWdyb3VwTmFtZRgCIAEoCRIMCgR0eXBlGAMgASgJEhAKCHVzZXJu",
            "YW1lGAQgASgJEhEKCWZpcnN0TmFtZRgFIAEoCRIQCghsYXN0TmFtZRgGIAEo",
            "CRINCgVlbWFpbBgHIAEoCRINCgVwaG9uZRgIIAEoCRINCgVhZG1pbhgJIAEo",
            "CBIVCg1lbWFpbFBhc3N3b3JkGAogASgIEhUKDXJlc2V0UGFzc3dvcmQYCyAB",
            "KAgSYgoPcHJvZHVjdEJpbmRpbmdzGAwgAygLMkkuZ2l0aHViLmNvbS5tZXRh",
            "cHJvdi5tb2RlbGRhcGkucGtnLmFwaXMuaW5mcmEudjFhbHBoYTEuQWNjb3Vu",
            "dFJvbGVCaW5kaW5nEl4KC2xhYkJpbmRpbmdzGA0gAygLMkkuZ2l0aHViLmNv",
            "bS5tZXRhcHJvdi5tb2RlbGRhcGkucGtnLmFwaXMuaW5mcmEudjFhbHBoYTEu",
            "QWNjb3VudFJvbGVCaW5kaW5nEl8KDHNpdGVCaW5kaW5ncxgOIAMoCzJJLmdp",
            "dGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmluZnJhLnYx",
            "YWxwaGExLkFjY291bnRSb2xlQmluZGluZyJsCg1BY2NvdW50U3RhdHVzElsK",
            "CmNvbmRpdGlvbnMYASADKAsyRy5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVs",
            "ZGFwaS5wa2cuYXBpcy5pbmZyYS52MWFscGhhMS5BY2NvdW50Q29uZGl0aW9u",
            "IlIKDEFsaUNsb3VkU3BlYxIRCglhY2Nlc3NLZXkYASABKAkSEQoJc2VjcmV0",
            "S2V5GAIgASgJEg4KBnJlZ2lvbhgDIAEoCRIMCgRob3N0GAQgASgJIl4KCkF0",
            "aGVuYVNwZWMSEAoIaG9zdE5hbWUYASABKAkSGAoQczNPdXRwdXRMb2NhdGlv",
            "bhgCIAEoCRIRCglhY2Nlc3NLZXkYAyABKAkSEQoJc2VjcmV0S2V5GAQgASgJ",
            "IkYKB0F3c1NwZWMSFQoNZGVmYXVsdFJlZ2lvbhgBIAEoCRIRCglhY2Nlc3NL",
            "ZXkYAiABKAkSEQoJc2VjcmV0S2V5GAMgASgJIj0KEEF6dXJlU3RvcmFnZVNw",
            "ZWMSFgoOc3RvcmFnZUFjY291bnQYASABKAkSEQoJYWNjZXNzS2V5GAIgASgJ",
            "IiYKDEJpZ1F1ZXJ5U3BlYxIWCg5zZXJ2aWNlQWNjb3VudBgBIAEoCSI9Cg1C",
            "aXRidWNrZXRTcGVjEg0KBXRva2VuGAEgASgJEhAKCHVzZXJOYW1lGAIgASgJ",
            "EgsKA3NzaBgDIAEoCSJhCg1DYXNzYW5kcmFTcGVjEgwKBGhvc3QYASABKAkS",
            "DAoEcG9ydBgCIAEoBRIQCghkYXRhYmFzZRgDIAEoCRIQCgh1c2VybmFtZRgE",
            "IAEoCRIQCghwYXNzd29yZBgFIAEoCSL+AQoKQ29ubmVjdGlvbhJCCghtZXRh",
            "ZGF0YRgBIAEoCzIwLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0",
            "YS52MS5PYmplY3RNZXRhElMKBHNwZWMYAiABKAsyRS5naXRodWIuY29tLm1l",
            "dGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5pbmZyYS52MWFscGhhMS5Db25u",
            "ZWN0aW9uU3BlYxJXCgZzdGF0dXMYAyABKAsyRy5naXRodWIuY29tLm1ldGFw",
            "cm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5pbmZyYS52MWFscGhhMS5Db25uZWN0",
            "aW9uU3RhdHVzIpwBChNDb25uZWN0aW9uQ29uZGl0aW9uEgwKBHR5cGUYASAB",
            "KAkSDgoGc3RhdHVzGAIgASgJEkYKEmxhc3RUcmFuc2l0aW9uVGltZRgEIAEo",
            "CzIqLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5UaW1l",
            "Eg4KBnJlYXNvbhgFIAEoCRIPCgdtZXNzYWdlGAYgASgJIqQBCg5Db25uZWN0",
            "aW9uTGlzdBJACghtZXRhZGF0YRgBIAEoCzIuLms4cy5pby5hcGltYWNoaW5l",
            "cnkucGtnLmFwaXMubWV0YS52MS5MaXN0TWV0YRJQCgVpdGVtcxgCIAMoCzJB",
            "LmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmluZnJh",
            "LnYxYWxwaGExLkNvbm5lY3Rpb24i8BcKDkNvbm5lY3Rpb25TcGVjEjYKCXRl",
            "bmFudFJlZhgBIAEoCzIjLms4cy5pby5hcGkuY29yZS52MS5PYmplY3RSZWZl",
            "cmVuY2USEAoIY2F0ZWdvcnkYAiABKAkSEAoIcHJvdmlkZXIYAyABKAkSEgoK",
            "c2VjcmV0TmFtZRgEIAEoCRJRCgZhdGhlbmEYBSABKAsyQS5naXRodWIuY29t",
            "Lm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5pbmZyYS52MWFscGhhMS5B",
            "dGhlbmFTcGVjEl0KDGF6dXJlU3RvcmFnZRgGIAEoCzJHLmdpdGh1Yi5jb20u",
            "bWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmluZnJhLnYxYWxwaGExLkF6",
            "dXJlU3RvcmFnZVNwZWMSVQoIYWxpQ2xvdWQYByABKAsyQy5naXRodWIuY29t",
            "Lm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5pbmZyYS52MWFscGhhMS5B",
            "bGlDbG91ZFNwZWMSVQoIYmlnUXVlcnkYCCABKAsyQy5naXRodWIuY29tLm1l",
            "dGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5pbmZyYS52MWFscGhhMS5CaWdR",
            "dWVyeVNwZWMSVwoJYml0YnVja2V0GAkgASgLMkQuZ2l0aHViLmNvbS5tZXRh",
            "cHJvdi5tb2RlbGRhcGkucGtnLmFwaXMuaW5mcmEudjFhbHBoYTEuQml0YnVj",
            "a2V0U3BlYxJXCgljYXNzYW5kcmEYCiABKAsyRC5naXRodWIuY29tLm1ldGFw",
            "cm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5pbmZyYS52MWFscGhhMS5DYXNzYW5k",
            "cmFTcGVjEl0KDGRpZ2l0YWxvY2VhbhgLIAEoCzJHLmdpdGh1Yi5jb20ubWV0",
            "YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmluZnJhLnYxYWxwaGExLkRpZ2l0",
            "YWxPY2VhblNwZWMSTQoEc210cBgMIAEoCzI/LmdpdGh1Yi5jb20ubWV0YXBy",
            "b3YubW9kZWxkYXBpLnBrZy5hcGlzLmluZnJhLnYxYWxwaGExLlNtdHBTcGVj",
            "ElMKB2hldHpuZXIYDSABKAsyQi5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVs",
            "ZGFwaS5wa2cuYXBpcy5pbmZyYS52MWFscGhhMS5IZXR6bmVyU3BlYxJfCg1p",
            "bWFnZVJlZ2lzdHJ5GA4gASgLMkguZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2Rl",
            "bGRhcGkucGtnLmFwaXMuaW5mcmEudjFhbHBoYTEuSW1hZ2VSZWdpc3RyeVNw",
            "ZWMSUQoGZ2l0aHViGA8gASgLMkEuZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2Rl",
            "bGRhcGkucGtnLmFwaXMuaW5mcmEudjFhbHBoYTEuR2l0aHViU3BlYxJRCgZn",
            "aXRsYWIYECABKAsyQS5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5w",
            "a2cuYXBpcy5pbmZyYS52MWFscGhhMS5HaXRsYWJTcGVjElkKCmdjcHN0b3Jh",
            "Z2UYESABKAsyRS5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cu",
            "YXBpcy5pbmZyYS52MWFscGhhMS5HY3BTdG9yYWdlU3BlYxJRCgZsaW5vZGUY",
            "EiABKAsyQS5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBp",
            "cy5pbmZyYS52MWFscGhhMS5MaW5vZGVTcGVjElMKB21vbmdvZGIYEyABKAsy",
            "Qi5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5pbmZy",
            "YS52MWFscGhhMS5Nb25nb0RiU3BlYxJPCgVteXNxbBgUIAEoCzJALmdpdGh1",
            "Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmluZnJhLnYxYWxw",
            "aGExLk15U3FsU3BlYxJPCgVtaW5pbxgVIAEoCzJALmdpdGh1Yi5jb20ubWV0",
            "YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmluZnJhLnYxYWxwaGExLk1pbmlv",
            "U3BlYxJbCgttc3NxbHNlcnZlchgWIAEoCzJGLmdpdGh1Yi5jb20ubWV0YXBy",
            "b3YubW9kZWxkYXBpLnBrZy5hcGlzLmluZnJhLnYxYWxwaGExLk1TU3FsU2Vy",
            "dmVyU3BlYxJNCgRvZGJjGBcgASgLMj8uZ2l0aHViLmNvbS5tZXRhcHJvdi5t",
            "b2RlbGRhcGkucGtnLmFwaXMuaW5mcmEudjFhbHBoYTEuT2RiY1NwZWMSUQoG",
            "b3JhY2xlGBggASgLMkEuZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGku",
            "cGtnLmFwaXMuaW5mcmEudjFhbHBoYTEuT3JhY2xlU3BlYxJXCglvcGVuc3Rh",
            "Y2sYGSABKAsyRC5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cu",
            "YXBpcy5pbmZyYS52MWFscGhhMS5PcGVuc3RhY2tTcGVjEksKA292aBgaIAEo",
            "CzI+LmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmlu",
            "ZnJhLnYxYWxwaGExLk92aFNwZWMSWAoIcG9zdGdyZXMYGyABKAsyRi5naXRo",
            "dWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5pbmZyYS52MWFs",
            "cGhhMS5Qb3N0Z3Jlc1NRTFNwZWMSUQoGcHJlc3RvGBwgASgLMkEuZ2l0aHVi",
            "LmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkucGtnLmFwaXMuaW5mcmEudjFhbHBo",
            "YTEuUHJlc3RvU3BlYxJVCghyZWRzaGlmdBgdIAEoCzJDLmdpdGh1Yi5jb20u",
            "bWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmluZnJhLnYxYWxwaGExLlJl",
            "ZFNoaWZ0U3BlYxJXCglzbm93Zmxha2UYHiABKAsyRC5naXRodWIuY29tLm1l",
            "dGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5pbmZyYS52MWFscGhhMS5Tbm93",
            "Rmxha2VTcGVjElUKCHNxbExpZ2h0GB8gASgLMkMuZ2l0aHViLmNvbS5tZXRh",
            "cHJvdi5tb2RlbGRhcGkucGtnLmFwaXMuaW5mcmEudjFhbHBoYTEuU3FsTGln",
            "aHRTcGVjEksKA2F3cxggIAEoCzI+LmdpdGh1Yi5jb20ubWV0YXByb3YubW9k",
            "ZWxkYXBpLnBrZy5hcGlzLmluZnJhLnYxYWxwaGExLkF3c1NwZWMSTwoFc2xh",
            "Y2sYISABKAsyQC5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cu",
            "YXBpcy5pbmZyYS52MWFscGhhMS5TbGFja1NwZWMSTwoFZmxvY2sYIiABKAsy",
            "QC5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5pbmZy",
            "YS52MWFscGhhMS5GbG9ja1NwZWMSUQoGbXN0ZWFtGCMgASgLMkEuZ2l0aHVi",
            "LmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkucGtnLmFwaXMuaW5mcmEudjFhbHBo",
            "YTEuTVNUZWFtU3BlYxJZCgptYXR0ZXJNb3N0GCQgASgLMkUuZ2l0aHViLmNv",
            "bS5tZXRhcHJvdi5tb2RlbGRhcGkucGtnLmFwaXMuaW5mcmEudjFhbHBoYTEu",
            "TWF0dGVybW9zdFNwZWMSUwoHaGlwY2hhdBglIAEoCzJCLmdpdGh1Yi5jb20u",
            "bWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmluZnJhLnYxYWxwaGExLkhp",
            "cGNoYXRTcGVjElMKB3dlYmhvb2sYJiABKAsyQi5naXRodWIuY29tLm1ldGFw",
            "cm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5pbmZyYS52MWFscGhhMS5XZWJob29r",
            "U3BlYxINCgVvd25lchgnIAEoCSJyChBDb25uZWN0aW9uU3RhdHVzEl4KCmNv",
            "bmRpdGlvbnMYASADKAsySi5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFw",
            "aS5wa2cuYXBpcy5pbmZyYS52MWFscGhhMS5Db25uZWN0aW9uQ29uZGl0aW9u",
            "ImwKEERpZ2l0YWxPY2VhblNwZWMSDQoFdG9rZW4YASABKAkSEQoJYWNjZXNz",
            "S2V5GAIgASgJEhEKCXNlY3JldEtleRgDIAEoCRIVCg1kZWZhdWx0UmVnaW9u",
            "GAQgASgJEgwKBGhvc3QYBSABKAkiGAoJRmxvY2tTcGVjEgsKA3VybBgBIAEo",
            "CSIyCg5HY3BTdG9yYWdlU3BlYxIPCgdrZXlGaWxlGAEgASgJEg8KB3Byb2pl",
            "Y3QYAiABKAkiOgoKR2l0aHViU3BlYxINCgV0b2tlbhgBIAEoCRIQCgh1c2Vy",
            "TmFtZRgCIAEoCRILCgNzc2gYAyABKAkiKAoKR2l0bGFiU3BlYxINCgV0b2tl",
            "bhgBIAEoCRILCgNzc2gYAiABKAkiKQoLSGV0em5lclNwZWMSDQoFdG9rZW4Y",
            "ASABKAkSCwoDc3NoGAIgASgJIjcKC0hpcGNoYXRTcGVjEgsKA3VybBgBIAEo",
            "CRINCgV0b2tlbhgCIAEoCRIMCgRyb29tGAMgASgJIkUKEUltYWdlUmVnaXN0",
            "cnlTcGVjEgwKBGhvc3QYASABKAkSEAoIdXNlcm5hbWUYAiABKAkSEAoIcGFz",
            "c3dvcmQYAyABKAki6QEKA0xhYhJCCghtZXRhZGF0YRgBIAEoCzIwLms4cy5p",
            "by5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5PYmplY3RNZXRhEkwK",
            "BHNwZWMYAiABKAsyPi5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5w",
            "a2cuYXBpcy5pbmZyYS52MWFscGhhMS5MYWJTcGVjElAKBnN0YXR1cxgDIAEo",
            "CzJALmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmlu",
            "ZnJhLnYxYWxwaGExLkxhYlN0YXR1cyKVAQoMTGFiQ29uZGl0aW9uEgwKBHR5",
            "cGUYASABKAkSDgoGc3RhdHVzGAIgASgJEkYKEmxhc3RUcmFuc2l0aW9uVGlt",
            "ZRgDIAEoCzIqLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52",
            "MS5UaW1lEg4KBnJlYXNvbhgEIAEoCRIPCgdtZXNzYWdlGAUgASgJIpYBCgdM",
            "YWJMaXN0EkAKCG1ldGFkYXRhGAEgASgLMi4uazhzLmlvLmFwaW1hY2hpbmVy",
            "eS5wa2cuYXBpcy5tZXRhLnYxLkxpc3RNZXRhEkkKBWl0ZW1zGAIgAygLMjou",
            "Z2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkucGtnLmFwaXMuaW5mcmEu",
            "djFhbHBoYTEuTGFiIvABCgdMYWJTcGVjEhMKC2Rlc2NyaXB0aW9uGAEgASgJ",
            "EjYKCXRlbmFudFJlZhgCIAEoCzIjLms4cy5pby5hcGkuY29yZS52MS5PYmpl",
            "Y3RSZWZlcmVuY2USOAoJcXVvdGFTcGVjGAMgASgLMiUuazhzLmlvLmFwaS5j",
            "b3JlLnYxLlJlc291cmNlUXVvdGFTcGVjEjoKDmxpbWl0UmFuZ2VTcGVjGAQg",
            "ASgLMiIuazhzLmlvLmFwaS5jb3JlLnYxLkxpbWl0UmFuZ2VTcGVjEhMKC2Ns",
            "dXN0ZXJOYW1lGAUgASgJEg0KBW93bmVyGAYgASgJImQKCUxhYlN0YXR1cxJX",
            "Cgpjb25kaXRpb25zGAEgAygLMkMuZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2Rl",
            "bGRhcGkucGtnLmFwaXMuaW5mcmEudjFhbHBoYTEuTGFiQ29uZGl0aW9uIvUB",
            "CgdMaWNlbnNlEkIKCG1ldGFkYXRhGAEgASgLMjAuazhzLmlvLmFwaW1hY2hp",
            "bmVyeS5wa2cuYXBpcy5tZXRhLnYxLk9iamVjdE1ldGESUAoEc3BlYxgCIAEo",
            "CzJCLmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmlu",
            "ZnJhLnYxYWxwaGExLkxpY2Vuc2VTcGVjElQKBnN0YXR1cxgDIAEoCzJELmdp",
            "dGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmluZnJhLnYx",
            "YWxwaGExLkxpY2Vuc2VTdGF0dXMimQEKEExpY2Vuc2VDb25kaXRpb24SDAoE",
            "dHlwZRgBIAEoCRIOCgZzdGF0dXMYAiABKAkSRgoSbGFzdFRyYW5zaXRpb25U",
            "aW1lGAMgASgLMiouazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRh",
            "LnYxLlRpbWUSDgoGcmVhc29uGAQgASgJEg8KB21lc3NhZ2UYBSABKAkingEK",
            "C0xpY2Vuc2VMaXN0EkAKCG1ldGFkYXRhGAEgASgLMi4uazhzLmlvLmFwaW1h",
            "Y2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLkxpc3RNZXRhEk0KBWl0ZW1zGAIg",
            "AygLMj4uZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkucGtnLmFwaXMu",
            "aW5mcmEudjFhbHBoYTEuTGljZW5zZSKYBAoLTGljZW5zZVNwZWMSNgoJdGVu",
            "YW50UmVmGAEgASgLMiMuazhzLmlvLmFwaS5jb3JlLnYxLk9iamVjdFJlZmVy",
            "ZW5jZRISCgpzZWNyZXROYW1lGAIgASgJEg0KBW93bmVyGAMgASgJEg0KBWVt",
            "YWlsGAQgASgJEj4KCnRyaWFsU3RhcnQYBSABKAsyKi5rOHMuaW8uYXBpbWFj",
            "aGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuVGltZRI8Cgh0cmlhbEVuZBgGIAEo",
            "CzIqLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5UaW1l",
            "EhMKC21heFByb2R1Y3RzGAcgASgFEhMKC21heFRyYWluZXJzGAggASgFEhIK",
            "Cm1heFNlcnZlcnMYCSABKAUSEAoIbWF4VXNlcnMYCiABKAUSFQoNbWF4RGF0",
            "YVBsYW5lcxgLIAEoBRIQCghmb3JlY2FzdBgMIAEoCBILCgNubHAYDSABKAgS",
            "DgoGdmlzaW9uGA4gASgIEg8KB2NoYXRib3QYDyABKAgSEwoLcHJvZHVjdE5h",
            "bWUYECABKAkSEQoJcHJpY2VOYW1lGBEgASgJEjwKCGV4cGlyZUF0GBIgASgL",
            "MiouazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLlRpbWUS",
            "FAoMbm90aWZpZXJOYW1lGBMgASgJImwKDUxpY2Vuc2VTdGF0dXMSWwoKY29u",
            "ZGl0aW9ucxgBIAMoCzJHLmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBp",
            "LnBrZy5hcGlzLmluZnJhLnYxYWxwaGExLkxpY2Vuc2VDb25kaXRpb24iHAoK",
            "TGlub2RlU3BlYxIOCgZhcGlrZXkYASABKAkicwoPTVNTcWxTZXJ2ZXJTcGVj",
            "EgwKBGhvc3QYASABKAkSDAoEcG9ydBgCIAEoBRIQCghkYXRhYmFzZRgDIAEo",
            "CRIOCgZkb21haW4YBCABKAkSEAoIdXNlcm5hbWUYBSABKAkSEAoIcGFzc3dv",
            "cmQYBiABKAkiHQoKTVNUZWFtU3BlYxIPCgd3ZWJob29rGAEgASgJIkAKDk1h",
            "dHRlcm1vc3RTcGVjEgsKA3VybBgBIAEoCRIPCgdjaGFubmVsGAIgASgJEhAK",
            "CHVzZXJuYW1lGAMgASgJIj8KCU1pbmlvU3BlYxIRCglhY2Nlc3NLZXkYASAB",
            "KAkSEQoJc2VjcmV0S2V5GAIgASgJEgwKBGhvc3QYAyABKAkiXwoLTW9uZ29E",
            "YlNwZWMSDAoEaG9zdBgBIAEoCRIMCgRwb3J0GAIgASgFEhAKCGRhdGFiYXNl",
            "GAMgASgJEhAKCHVzZXJuYW1lGAQgASgJEhAKCHBhc3N3b3JkGAUgASgJIl0K",
            "CU15U3FsU3BlYxIMCgRob3N0GAEgASgJEgwKBHBvcnQYAiABKAUSEAoIZGF0",
            "YWJhc2UYAyABKAkSEAoIdXNlcm5hbWUYBCABKAkSEAoIcGFzc3dvcmQYBSAB",
            "KAki+AEKCE5vdGlmaWVyEkIKCG1ldGFkYXRhGAEgASgLMjAuazhzLmlvLmFw",
            "aW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLk9iamVjdE1ldGESUQoEc3Bl",
            "YxgCIAEoCzJDLmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5h",
            "cGlzLmluZnJhLnYxYWxwaGExLk5vdGlmaWVyU3BlYxJVCgZzdGF0dXMYAyAB",
            "KAsyRS5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5p",
            "bmZyYS52MWFscGhhMS5Ob3RpZmllclN0YXR1cyKaAQoRTm90aWZpZXJDb25k",
            "aXRpb24SDAoEdHlwZRgBIAEoCRIOCgZzdGF0dXMYAiABKAkSRgoSbGFzdFRy",
            "YW5zaXRpb25UaW1lGAMgASgLMiouazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cu",
            "YXBpcy5tZXRhLnYxLlRpbWUSDgoGcmVhc29uGAQgASgJEg8KB21lc3NhZ2UY",
            "BSABKAkioAEKDE5vdGlmaWVyTGlzdBJACghtZXRhZGF0YRgBIAEoCzIuLms4",
            "cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5MaXN0TWV0YRJO",
            "CgVpdGVtcxgCIAMoCzI/LmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBp",
            "LnBrZy5hcGlzLmluZnJhLnYxYWxwaGExLk5vdGlmaWVyIpwBCgxOb3RpZmll",
            "clNwZWMSNgoJdGVuYW50UmVmGAEgASgLMiMuazhzLmlvLmFwaS5jb3JlLnYx",
            "Lk9iamVjdFJlZmVyZW5jZRITCgtkZXNjcmlwdGlvbhgCIAEoCRIKCgJ0bxgD",
            "IAEoCRIMCgRmcm9tGAQgASgJEhYKDmNvbm5lY3Rpb25OYW1lGAUgASgJEg0K",
            "BW93bmVyGAYgASgJIm4KDk5vdGlmaWVyU3RhdHVzElwKCmNvbmRpdGlvbnMY",
            "ASADKAsySC5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBp",
            "cy5pbmZyYS52MWFscGhhMS5Ob3RpZmllckNvbmRpdGlvbiIlCghPZGJjU3Bl",
            "YxIZChFjb25udGVjdGlvblN0cmluZxgBIAEoCSJoCg1PcGVuc3RhY2tTcGVj",
            "EhAKCHVzZXJOYW1lGAEgASgJEhIKCnRlbmFudE5hbWUYAiABKAkSEAoIcGFz",
            "c3dvcmQYAyABKAkSDwoHYXV0aFVybBgEIAEoCRIOCgZyZWdpb24YBSABKAki",
            "gQEKCk9yYWNsZVNwZWMSDAoEaG9zdBgBIAEoCRIMCgRwb3J0GAIgASgFEhAK",
            "CGRhdGFiYXNlGAMgASgJEhMKC3NlcnZpY2VOYW1lGAQgASgJEgwKBHJvbGUY",
            "BSABKAkSEAoIdXNlcm5hbWUYBiABKAkSEAoIcGFzc3dvcmQYByABKAkiVQoH",
            "T3ZoU3BlYxIQCghlbmRwb2ludBgBIAEoCRITCgthcHBsaWNhdGlvbhgCIAEo",
            "CRIOCgZzZWNyZXQYAyABKAkSEwoLY29uc3VtZXJrZXkYBCABKAkiYwoPUG9z",
            "dGdyZXNTUUxTcGVjEgwKBGhvc3QYASABKAkSDAoEcG9ydBgCIAEoBRIQCghk",
            "YXRhYmFzZRgDIAEoCRIQCgh1c2VybmFtZRgEIAEoCRIQCghwYXNzd29yZBgF",
            "IAEoCSJtCgpQcmVzdG9TcGVjEgwKBGhvc3QYASABKAkSDAoEcG9ydBgCIAEo",
            "BRIPCgdjYXRhbG9nGAMgASgJEg4KBnNjaGVtYRgEIAEoCRIQCgh1c2VybmFt",
            "ZRgFIAEoCRIQCghwYXNzd29yZBgGIAEoCSJgCgxSZWRTaGlmdFNwZWMSDAoE",
            "aG9zdBgBIAEoCRIMCgRwb3J0GAIgASgFEhAKCGRhdGFiYXNlGAMgASgJEhAK",
            "CHVzZXJuYW1lGAQgASgJEhAKCHBhc3N3b3JkGAUgASgJIoECCgtTZXJ2aW5n",
            "U2l0ZRJCCghtZXRhZGF0YRgBIAEoCzIwLms4cy5pby5hcGltYWNoaW5lcnku",
            "cGtnLmFwaXMubWV0YS52MS5PYmplY3RNZXRhElQKBHNwZWMYAiABKAsyRi5n",
            "aXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5pbmZyYS52",
            "MWFscGhhMS5TZXJ2aW5nU2l0ZVNwZWMSWAoGc3RhdHVzGAMgASgLMkguZ2l0",
            "aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkucGtnLmFwaXMuaW5mcmEudjFh",
            "bHBoYTEuU2VydmluZ1NpdGVTdGF0dXMinQEKFFNlcnZpbmdTaXRlQ29uZGl0",
            "aW9uEgwKBHR5cGUYASABKAkSDgoGc3RhdHVzGAIgASgJEkYKEmxhc3RUcmFu",
            "c2l0aW9uVGltZRgDIAEoCzIqLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFw",
            "aXMubWV0YS52MS5UaW1lEg4KBnJlYXNvbhgEIAEoCRIPCgdtZXNzYWdlGAUg",
            "ASgJIqYBCg9TZXJ2aW5nU2l0ZUxpc3QSQAoIbWV0YWRhdGEYASABKAsyLi5r",
            "OHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuTGlzdE1ldGES",
            "UQoFaXRlbXMYAiADKAsyQi5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFw",
            "aS5wa2cuYXBpcy5pbmZyYS52MWFscGhhMS5TZXJ2aW5nU2l0ZSKbAgoPU2Vy",
            "dmluZ1NpdGVTcGVjEhMKC2Rlc2NyaXB0aW9uGAEgASgJEjYKCXRlbmFudFJl",
            "ZhgCIAEoCzIjLms4cy5pby5hcGkuY29yZS52MS5PYmplY3RSZWZlcmVuY2US",
            "OAoJcXVvdGFTcGVjGAMgASgLMiUuazhzLmlvLmFwaS5jb3JlLnYxLlJlc291",
            "cmNlUXVvdGFTcGVjEjoKDmxpbWl0UmFuZ2VTcGVjGAQgASgLMiIuazhzLmlv",
            "LmFwaS5jb3JlLnYxLkxpbWl0UmFuZ2VTcGVjEhMKC2luZ3Jlc3NOYW1lGAUg",
            "ASgJEgwKBGZkcW4YBiABKAkSEwoLY2x1c3Rlck5hbWUYByABKAkSDQoFb3du",
            "ZXIYCCABKAkiugIKEVNlcnZpbmdTaXRlU3RhdHVzEl8KCmNvbmRpdGlvbnMY",
            "ASADKAsySy5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBp",
            "cy5pbmZyYS52MWFscGhhMS5TZXJ2aW5nU2l0ZUNvbmRpdGlvbhIYChBhY3Rp",
            "dmVQcmVkaWN0b3JzGAIgASgFEhoKEmluYWN0aXZlUHJlZGljdG9ycxgDIAEo",
            "BRIjCht0b3RhbFByZWRpY3RvclNlcnZpY2VGYWlsZWQYBCABKAUSJQoddG90",
            "YWxQcmVkaWN0b3JEYXRhRHJpZnRGYWlsZWQYBSABKAUSJAocdG90YWxQcmVk",
            "aWN0b3JBY2N1cmFjeUZhaWxlZBgGIAEoBRIcChRsYXN0RGFpbHlQcmVkaWN0",
            "aW9ucxgHIAMoBSJRCglTbGFja1NwZWMSEgoKd2ViaG9va1VybBgBIAEoCRIP",
            "CgdjaGFubmVsGAIgASgJEhAKCHVzZXJOYW1lGAMgASgJEg0KBXRva2VuGAQg",
            "ASgJIkoKCFNtdHBTcGVjEgwKBGhvc3QYASABKAkSDAoEcG9ydBgCIAEoBRIQ",
            "Cgh1c2VyTmFtZRgDIAEoCRIQCghwYXNzd29yZBgEIAEoCSJpCg1Tbm93Rmxh",
            "a2VTcGVjEg8KB2FjY291bnQYASABKAkSEQoJd2FyZWhvdXNlGAIgASgJEhAK",
            "CGRhdGFiYXNlGAMgASgJEhAKCHVzZXJuYW1lGAQgASgJEhAKCHBhc3N3b3Jk",
            "GAUgASgJIiAKDFNxbExpZ2h0U3BlYxIQCghmaWxlTmFtZRgBIAEoCSLyAQoG",
            "VGVuYW50EkIKCG1ldGFkYXRhGAEgASgLMjAuazhzLmlvLmFwaW1hY2hpbmVy",
            "eS5wa2cuYXBpcy5tZXRhLnYxLk9iamVjdE1ldGESTwoEc3BlYxgCIAEoCzJB",
            "LmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmluZnJh",
            "LnYxYWxwaGExLlRlbmFudFNwZWMSUwoGc3RhdHVzGAMgASgLMkMuZ2l0aHVi",
            "LmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkucGtnLmFwaXMuaW5mcmEudjFhbHBo",
            "YTEuVGVuYW50U3RhdHVzIpgBCg9UZW5hbnRDb25kaXRpb24SDAoEdHlwZRgB",
            "IAEoCRIOCgZzdGF0dXMYAiABKAkSRgoSbGFzdFRyYW5zaXRpb25UaW1lGAMg",
            "ASgLMiouazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLlRp",
            "bWUSDgoGcmVhc29uGAQgASgJEg8KB21lc3NhZ2UYBSABKAkinAEKClRlbmFu",
            "dExpc3QSQAoIbWV0YWRhdGEYASABKAsyLi5rOHMuaW8uYXBpbWFjaGluZXJ5",
            "LnBrZy5hcGlzLm1ldGEudjEuTGlzdE1ldGESTAoFaXRlbXMYAiADKAsyPS5n",
            "aXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5pbmZyYS52",
            "MWFscGhhMS5UZW5hbnQirQEKClRlbmFudFNwZWMSNwoKZGVmYXVsdExhYhgB",
            "IAEoCzIjLms4cy5pby5hcGkuY29yZS52MS5PYmplY3RSZWZlcmVuY2USQgoV",
            "ZGVmYXVsdFNlcnZpbmdTaXRlUmVmGAIgASgLMiMuazhzLmlvLmFwaS5jb3Jl",
            "LnYxLk9iamVjdFJlZmVyZW5jZRITCgtkZXNjcmlwdGlvbhgDIAEoCRINCgVv",
            "d25lchgEIAEoCSJqCgxUZW5hbnRTdGF0dXMSWgoKY29uZGl0aW9ucxgBIAMo",
            "CzJGLmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmlu",
            "ZnJhLnYxYWxwaGExLlRlbmFudENvbmRpdGlvbiKHAgoNVmlydHVhbEJ1Y2tl",
            "dBJCCghtZXRhZGF0YRgBIAEoCzIwLms4cy5pby5hcGltYWNoaW5lcnkucGtn",
            "LmFwaXMubWV0YS52MS5PYmplY3RNZXRhElYKBHNwZWMYAiABKAsySC5naXRo",
            "dWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5pbmZyYS52MWFs",
            "cGhhMS5WaXJ0dWFsQnVja2V0U3BlYxJaCgZzdGF0dXMYAyABKAsySi5naXRo",
            "dWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5pbmZyYS52MWFs",
            "cGhhMS5WaXJ0dWFsQnVja2V0U3RhdHVzIp8BChZWaXJ0dWFsQnVja2V0Q29u",
            "ZGl0aW9uEgwKBHR5cGUYASABKAkSDgoGc3RhdHVzGAIgASgJEkYKEmxhc3RU",
            "cmFuc2l0aW9uVGltZRgDIAEoCzIqLms4cy5pby5hcGltYWNoaW5lcnkucGtn",
            "LmFwaXMubWV0YS52MS5UaW1lEg4KBnJlYXNvbhgEIAEoCRIPCgdtZXNzYWdl",
            "GAUgASgJIqoBChFWaXJ0dWFsQnVja2V0TGlzdBJACghtZXRhZGF0YRgBIAEo",
            "CzIuLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5MaXN0",
            "TWV0YRJTCgVpdGVtcxgCIAMoCzJELmdpdGh1Yi5jb20ubWV0YXByb3YubW9k",
            "ZWxkYXBpLnBrZy5hcGlzLmluZnJhLnYxYWxwaGExLlZpcnR1YWxCdWNrZXQi",
            "hwEKEVZpcnR1YWxCdWNrZXRTcGVjEjYKCXRlbmFudFJlZhgBIAEoCzIjLms4",
            "cy5pby5hcGkuY29yZS52MS5PYmplY3RSZWZlcmVuY2USFgoOY29ubmVjdGlv",
            "bk5hbWUYAiABKAkSEwoLZGVzY3JpcHRpb24YAyABKAkSDQoFb3duZXIYBCAB",
            "KAkieAoTVmlydHVhbEJ1Y2tldFN0YXR1cxJhCgpjb25kaXRpb25zGAEgAygL",
            "Mk0uZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkucGtnLmFwaXMuaW5m",
            "cmEudjFhbHBoYTEuVmlydHVhbEJ1Y2tldENvbmRpdGlvbiKKAgoOVmlydHVh",
            "bENsdXN0ZXISQgoIbWV0YWRhdGEYASABKAsyMC5rOHMuaW8uYXBpbWFjaGlu",
            "ZXJ5LnBrZy5hcGlzLm1ldGEudjEuT2JqZWN0TWV0YRJXCgRzcGVjGAIgASgL",
            "MkkuZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkucGtnLmFwaXMuaW5m",
            "cmEudjFhbHBoYTEuVmlydHVhbENsdXN0ZXJTcGVjElsKBnN0YXR1cxgDIAEo",
            "CzJLLmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmlu",
            "ZnJhLnYxYWxwaGExLlZpcnR1YWxDbHVzdGVyU3RhdHVzIqABChdWaXJ0dWFs",
            "Q2x1c3RlckNvbmRpdGlvbhIMCgR0eXBlGAEgASgJEg4KBnN0YXR1cxgCIAEo",
            "CRJGChJsYXN0VHJhbnNpdGlvblRpbWUYAyABKAsyKi5rOHMuaW8uYXBpbWFj",
            "aGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuVGltZRIOCgZyZWFzb24YBCABKAkS",
            "DwoHbWVzc2FnZRgFIAEoCSKsAQoSVmlydHVhbENsdXN0ZXJMaXN0EkAKCG1l",
            "dGFkYXRhGAEgASgLMi4uazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5t",
            "ZXRhLnYxLkxpc3RNZXRhElQKBWl0ZW1zGAIgAygLMkUuZ2l0aHViLmNvbS5t",
            "ZXRhcHJvdi5tb2RlbGRhcGkucGtnLmFwaXMuaW5mcmEudjFhbHBoYTEuVmly",
            "dHVhbENsdXN0ZXIivAEKElZpcnR1YWxDbHVzdGVyU3BlYxITCgtkZXNjcmlw",
            "dGlvbhgBIAEoCRINCgVub2RlcxgCIAEoBRIVCg1ub2RlQ2xhc3NOYW1lGAMg",
            "ASgJEgwKBGdwdXMYBCABKAUSFAoMZ3B1Q2xhc3NOYW1lGAUgASgJEhIKCnZv",
            "bHVtZVNpemUYBiABKAUSDAoEc3BvdBgHIAEoCBIWCg5jb25uZWN0aW9uTmFt",
            "ZRgIIAEoCRINCgVvd25lchgJIAEoCSKpAQoUVmlydHVhbENsdXN0ZXJTdGF0",
            "dXMSFgoOYXZhaWxhYmxlTm9kZXMYASABKAUSFQoNYXZhaWxhYmxlR3B1cxgC",
            "IAEoBRJiCgpjb25kaXRpb25zGAMgAygLMk4uZ2l0aHViLmNvbS5tZXRhcHJv",
            "di5tb2RlbGRhcGkucGtnLmFwaXMuaW5mcmEudjFhbHBoYTEuVmlydHVhbENs",
            "dXN0ZXJDb25kaXRpb24ihwIKDVZpcnR1YWxWb2x1bWUSQgoIbWV0YWRhdGEY",
            "ASABKAsyMC5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEu",
            "T2JqZWN0TWV0YRJWCgRzcGVjGAIgASgLMkguZ2l0aHViLmNvbS5tZXRhcHJv",
            "di5tb2RlbGRhcGkucGtnLmFwaXMuaW5mcmEudjFhbHBoYTEuVmlydHVhbFZv",
            "bHVtZVNwZWMSWgoGc3RhdHVzGAMgASgLMkouZ2l0aHViLmNvbS5tZXRhcHJv",
            "di5tb2RlbGRhcGkucGtnLmFwaXMuaW5mcmEudjFhbHBoYTEuVmlydHVhbFZv",
            "bHVtZVN0YXR1cyKfAQoWVmlydHVhbFZvbHVtZUNvbmRpdGlvbhIMCgR0eXBl",
            "GAEgASgJEg4KBnN0YXR1cxgCIAEoCRJGChJsYXN0VHJhbnNpdGlvblRpbWUY",
            "BCABKAsyKi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEu",
            "VGltZRIOCgZyZWFzb24YBSABKAkSDwoHbWVzc2FnZRgGIAEoCSKqAQoRVmly",
            "dHVhbFZvbHVtZUxpc3QSQAoIbWV0YWRhdGEYASABKAsyLi5rOHMuaW8uYXBp",
            "bWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuTGlzdE1ldGESUwoFaXRlbXMY",
            "AiADKAsyRC5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBp",
            "cy5pbmZyYS52MWFscGhhMS5WaXJ0dWFsVm9sdW1lIocBChFWaXJ0dWFsVm9s",
            "dW1lU3BlYxI2Cgl0ZW5hbnRSZWYYASABKAsyIy5rOHMuaW8uYXBpLmNvcmUu",
            "djEuT2JqZWN0UmVmZXJlbmNlEhYKDmNvbm5lY3Rpb25OYW1lGAIgASgJEhMK",
            "C2Rlc2NyaXB0aW9uGAMgASgJEg0KBW93bmVyGAQgASgJIngKE1ZpcnR1YWxW",
            "b2x1bWVTdGF0dXMSYQoKY29uZGl0aW9ucxgBIAMoCzJNLmdpdGh1Yi5jb20u",
            "bWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmluZnJhLnYxYWxwaGExLlZp",
            "cnR1YWxWb2x1bWVDb25kaXRpb24iGgoLV2ViaG9va1NwZWMSCwoDdXJsGAEg",
            "ASgJQgpaCHYxYWxwaGEx"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor, global::K8S.Io.Api.Core.V1.GeneratedReflection.Descriptor, global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.GeneratedReflection.Descriptor, global::K8S.Io.Apimachinery.Pkg.Runtime.GeneratedReflection.Descriptor, global::K8S.Io.Apimachinery.Pkg.Runtime.Schema.GeneratedReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Account), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Account.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountCondition), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountCondition.Parser, new[]{ "Type", "Status", "LastTransitionTime", "Reason", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountList), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountRoleBinding), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountRoleBinding.Parser, new[]{ "Entity", "Role" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountSpec.Parser, new[]{ "TenantRef", "GroupName", "Type", "Username", "FirstName", "LastName", "Email", "Phone", "Admin", "EmailPassword", "ResetPassword", "ProductBindings", "LabBindings", "SiteBindings" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountStatus.Parser, new[]{ "Conditions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AliCloudSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AliCloudSpec.Parser, new[]{ "AccessKey", "SecretKey", "Region", "Host" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AthenaSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AthenaSpec.Parser, new[]{ "HostName", "S3OutputLocation", "AccessKey", "SecretKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AwsSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AwsSpec.Parser, new[]{ "DefaultRegion", "AccessKey", "SecretKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AzureStorageSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AzureStorageSpec.Parser, new[]{ "StorageAccount", "AccessKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.BigQuerySpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.BigQuerySpec.Parser, new[]{ "ServiceAccount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.BitbucketSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.BitbucketSpec.Parser, new[]{ "Token", "UserName", "Ssh" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.CassandraSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.CassandraSpec.Parser, new[]{ "Host", "Port", "Database", "Username", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Connection), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Connection.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ConnectionCondition), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ConnectionCondition.Parser, new[]{ "Type", "Status", "LastTransitionTime", "Reason", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ConnectionList), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ConnectionList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ConnectionSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ConnectionSpec.Parser, new[]{ "TenantRef", "Category", "Provider", "SecretName", "Athena", "AzureStorage", "AliCloud", "BigQuery", "Bitbucket", "Cassandra", "Digitalocean", "Smtp", "Hetzner", "ImageRegistry", "Github", "Gitlab", "Gcpstorage", "Linode", "Mongodb", "Mysql", "Minio", "Mssqlserver", "Odbc", "Oracle", "Openstack", "Ovh", "Postgres", "Presto", "Redshift", "Snowflake", "SqlLight", "Aws", "Slack", "Flock", "Msteam", "MatterMost", "Hipchat", "Webhook", "Owner" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ConnectionStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ConnectionStatus.Parser, new[]{ "Conditions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.DigitalOceanSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.DigitalOceanSpec.Parser, new[]{ "Token", "AccessKey", "SecretKey", "DefaultRegion", "Host" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.FlockSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.FlockSpec.Parser, new[]{ "Url" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GcpStorageSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GcpStorageSpec.Parser, new[]{ "KeyFile", "Project" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GithubSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GithubSpec.Parser, new[]{ "Token", "UserName", "Ssh" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GitlabSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GitlabSpec.Parser, new[]{ "Token", "Ssh" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.HetznerSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.HetznerSpec.Parser, new[]{ "Token", "Ssh" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.HipchatSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.HipchatSpec.Parser, new[]{ "Url", "Token", "Room" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ImageRegistrySpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ImageRegistrySpec.Parser, new[]{ "Host", "Username", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Lab), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Lab.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LabCondition), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LabCondition.Parser, new[]{ "Type", "Status", "LastTransitionTime", "Reason", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LabList), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LabList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LabSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LabSpec.Parser, new[]{ "Description", "TenantRef", "QuotaSpec", "LimitRangeSpec", "ClusterName", "Owner" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LabStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LabStatus.Parser, new[]{ "Conditions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.License), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.License.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LicenseCondition), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LicenseCondition.Parser, new[]{ "Type", "Status", "LastTransitionTime", "Reason", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LicenseList), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LicenseList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LicenseSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LicenseSpec.Parser, new[]{ "TenantRef", "SecretName", "Owner", "Email", "TrialStart", "TrialEnd", "MaxProducts", "MaxTrainers", "MaxServers", "MaxUsers", "MaxDataPlanes", "Forecast", "Nlp", "Vision", "Chatbot", "ProductName", "PriceName", "ExpireAt", "NotifierName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LicenseStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LicenseStatus.Parser, new[]{ "Conditions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LinodeSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LinodeSpec.Parser, new[]{ "Apikey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MSSqlServerSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MSSqlServerSpec.Parser, new[]{ "Host", "Port", "Database", "Domain", "Username", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MSTeamSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MSTeamSpec.Parser, new[]{ "Webhook" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MattermostSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MattermostSpec.Parser, new[]{ "Url", "Channel", "Username" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MinioSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MinioSpec.Parser, new[]{ "AccessKey", "SecretKey", "Host" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MongoDbSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MongoDbSpec.Parser, new[]{ "Host", "Port", "Database", "Username", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MySqlSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MySqlSpec.Parser, new[]{ "Host", "Port", "Database", "Username", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Notifier), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Notifier.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.NotifierCondition), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.NotifierCondition.Parser, new[]{ "Type", "Status", "LastTransitionTime", "Reason", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.NotifierList), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.NotifierList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.NotifierSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.NotifierSpec.Parser, new[]{ "TenantRef", "Description", "To", "From", "ConnectionName", "Owner" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.NotifierStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.NotifierStatus.Parser, new[]{ "Conditions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.OdbcSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.OdbcSpec.Parser, new[]{ "ConntectionString" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.OpenstackSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.OpenstackSpec.Parser, new[]{ "UserName", "TenantName", "Password", "AuthUrl", "Region" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.OracleSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.OracleSpec.Parser, new[]{ "Host", "Port", "Database", "ServiceName", "Role", "Username", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.OvhSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.OvhSpec.Parser, new[]{ "Endpoint", "Application", "Secret", "Consumerkey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.PostgresSQLSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.PostgresSQLSpec.Parser, new[]{ "Host", "Port", "Database", "Username", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.PrestoSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.PrestoSpec.Parser, new[]{ "Host", "Port", "Catalog", "Schema", "Username", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.RedShiftSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.RedShiftSpec.Parser, new[]{ "Host", "Port", "Database", "Username", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSite), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSite.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSiteCondition), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSiteCondition.Parser, new[]{ "Type", "Status", "LastTransitionTime", "Reason", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSiteList), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSiteList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSiteSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSiteSpec.Parser, new[]{ "Description", "TenantRef", "QuotaSpec", "LimitRangeSpec", "IngressName", "Fdqn", "ClusterName", "Owner" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSiteStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSiteStatus.Parser, new[]{ "Conditions", "ActivePredictors", "InactivePredictors", "TotalPredictorServiceFailed", "TotalPredictorDataDriftFailed", "TotalPredictorAccuracyFailed", "LastDailyPredictions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.SlackSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.SlackSpec.Parser, new[]{ "WebhookUrl", "Channel", "UserName", "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.SmtpSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.SmtpSpec.Parser, new[]{ "Host", "Port", "UserName", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.SnowFlakeSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.SnowFlakeSpec.Parser, new[]{ "Account", "Warehouse", "Database", "Username", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.SqlLightSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.SqlLightSpec.Parser, new[]{ "FileName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Tenant), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Tenant.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.TenantCondition), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.TenantCondition.Parser, new[]{ "Type", "Status", "LastTransitionTime", "Reason", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.TenantList), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.TenantList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.TenantSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.TenantSpec.Parser, new[]{ "DefaultLab", "DefaultServingSiteRef", "Description", "Owner" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.TenantStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.TenantStatus.Parser, new[]{ "Conditions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucket), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucket.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucketCondition), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucketCondition.Parser, new[]{ "Type", "Status", "LastTransitionTime", "Reason", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucketList), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucketList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucketSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucketSpec.Parser, new[]{ "TenantRef", "ConnectionName", "Description", "Owner" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucketStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucketStatus.Parser, new[]{ "Conditions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualCluster), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualCluster.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualClusterCondition), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualClusterCondition.Parser, new[]{ "Type", "Status", "LastTransitionTime", "Reason", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualClusterList), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualClusterList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualClusterSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualClusterSpec.Parser, new[]{ "Description", "Nodes", "NodeClassName", "Gpus", "GpuClassName", "VolumeSize", "Spot", "ConnectionName", "Owner" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualClusterStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualClusterStatus.Parser, new[]{ "AvailableNodes", "AvailableGpus", "Conditions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolume), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolume.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolumeCondition), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolumeCondition.Parser, new[]{ "Type", "Status", "LastTransitionTime", "Reason", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolumeList), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolumeList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolumeSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolumeSpec.Parser, new[]{ "TenantRef", "ConnectionName", "Description", "Owner" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolumeStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolumeStatus.Parser, new[]{ "Conditions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.WebhookSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.WebhookSpec.Parser, new[]{ "Url" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Account represents a user or team in the system
  /// +kubebuilder:object:root=true
  /// +kubebuilder:subresource:status
  /// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
  /// +kubebuilder:printcolumn:name="Username",type="string",JSONPath=".spec.userName",description=""
  /// +kubebuilder:printcolumn:name="Phone",type="string",JSONPath=".spec.phone",description=""
  /// +kubebuilder:printcolumn:name="Smtp",type="string",JSONPath=".spec.email",description=""
  /// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
  /// +kubebuilder:resource:path=accounts,shortName=act,singular=account,categories={infra,modela}
  /// </summary>
  public sealed partial class Account : pb::IMessage<Account>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Account> _parser = new pb::MessageParser<Account>(() => new Account());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Account> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account(Account other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account Clone() {
      return new Account(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Account);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Account other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Account other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// AccountCondition describes the state of a account at a certain point.
  /// </summary>
  public sealed partial class AccountCondition : pb::IMessage<AccountCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AccountCondition> _parser = new pb::MessageParser<AccountCondition>(() => new AccountCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountCondition(AccountCondition other) : this() {
      type_ = other.type_;
      status_ = other.status_;
      lastTransitionTime_ = other.lastTransitionTime_ != null ? other.lastTransitionTime_.Clone() : null;
      reason_ = other.reason_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountCondition Clone() {
      return new AccountCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// Type of account condition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    /// <summary>
    /// Status of the condition, one of True, False, Unknown.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "lastTransitionTime" field.</summary>
    public const int LastTransitionTimeFieldNumber = 3;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastTransitionTime_;
    /// <summary>
    /// Last time the condition transitioned from one status to another.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastTransitionTime {
      get { return lastTransitionTime_; }
      set {
        lastTransitionTime_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 4;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// The reason for the condition's last transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 5;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// A human readable message indicating details about the transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LastTransitionTime, other.LastTransitionTime)) return false;
      if (Reason != other.Reason) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (lastTransitionTime_ != null) hash ^= LastTransitionTime.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (lastTransitionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTransitionTime);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountCondition other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.lastTransitionTime_ != null) {
        if (lastTransitionTime_ == null) {
          LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastTransitionTime.MergeFrom(other.LastTransitionTime);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// AccountList represent list of accounts.
  /// </summary>
  public sealed partial class AccountList : pb::IMessage<AccountList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AccountList> _parser = new pb::MessageParser<AccountList>(() => new AccountList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountList(AccountList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountList Clone() {
      return new AccountList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Account> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Account.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Account> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Account>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Account> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AccountRoleBinding : pb::IMessage<AccountRoleBinding>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AccountRoleBinding> _parser = new pb::MessageParser<AccountRoleBinding>(() => new AccountRoleBinding());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountRoleBinding> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountRoleBinding() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountRoleBinding(AccountRoleBinding other) : this() {
      entity_ = other.entity_;
      role_ = other.role_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountRoleBinding Clone() {
      return new AccountRoleBinding(this);
    }

    /// <summary>Field number for the "entity" field.</summary>
    public const int EntityFieldNumber = 1;
    private readonly static string EntityDefaultValue = "";

    private string entity_;
    /// <summary>
    /// Entity is the name of the entity, can be a product name,lab name or serving site name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Entity {
      get { return entity_ ?? EntityDefaultValue; }
      set {
        entity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "entity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEntity {
      get { return entity_ != null; }
    }
    /// <summary>Clears the value of the "entity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEntity() {
      entity_ = null;
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 2;
    private readonly static string RoleDefaultValue = "";

    private string role_;
    /// <summary>
    /// The role in relation to the entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Role {
      get { return role_ ?? RoleDefaultValue; }
      set {
        role_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "role" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRole {
      get { return role_ != null; }
    }
    /// <summary>Clears the value of the "role" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRole() {
      role_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountRoleBinding);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountRoleBinding other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entity != other.Entity) return false;
      if (Role != other.Role) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEntity) hash ^= Entity.GetHashCode();
      if (HasRole) hash ^= Role.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasEntity) {
        output.WriteRawTag(10);
        output.WriteString(Entity);
      }
      if (HasRole) {
        output.WriteRawTag(18);
        output.WriteString(Role);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasEntity) {
        output.WriteRawTag(10);
        output.WriteString(Entity);
      }
      if (HasRole) {
        output.WriteRawTag(18);
        output.WriteString(Role);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasEntity) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Entity);
      }
      if (HasRole) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Role);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountRoleBinding other) {
      if (other == null) {
        return;
      }
      if (other.HasEntity) {
        Entity = other.Entity;
      }
      if (other.HasRole) {
        Role = other.Role;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Entity = input.ReadString();
            break;
          }
          case 18: {
            Role = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Entity = input.ReadString();
            break;
          }
          case 18: {
            Role = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// AccountSpec defines the desired state of Account
  /// </summary>
  public sealed partial class AccountSpec : pb::IMessage<AccountSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AccountSpec> _parser = new pb::MessageParser<AccountSpec>(() => new AccountSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountSpec(AccountSpec other) : this() {
      _hasBits0 = other._hasBits0;
      tenantRef_ = other.tenantRef_ != null ? other.tenantRef_.Clone() : null;
      groupName_ = other.groupName_;
      type_ = other.type_;
      username_ = other.username_;
      firstName_ = other.firstName_;
      lastName_ = other.lastName_;
      email_ = other.email_;
      phone_ = other.phone_;
      admin_ = other.admin_;
      emailPassword_ = other.emailPassword_;
      resetPassword_ = other.resetPassword_;
      productBindings_ = other.productBindings_.Clone();
      labBindings_ = other.labBindings_.Clone();
      siteBindings_ = other.siteBindings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountSpec Clone() {
      return new AccountSpec(this);
    }

    /// <summary>Field number for the "tenantRef" field.</summary>
    public const int TenantRefFieldNumber = 1;
    private global::K8S.Io.Api.Core.V1.ObjectReference tenantRef_;
    /// <summary>
    /// TenantRef is the account tenant
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Api.Core.V1.ObjectReference TenantRef {
      get { return tenantRef_; }
      set {
        tenantRef_ = value;
      }
    }

    /// <summary>Field number for the "groupName" field.</summary>
    public const int GroupNameFieldNumber = 2;
    private readonly static string GroupNameDefaultValue = "";

    private string groupName_;
    /// <summary>
    /// GroupName is a reference to the group account
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupName {
      get { return groupName_ ?? GroupNameDefaultValue; }
      set {
        groupName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "groupName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGroupName {
      get { return groupName_ != null; }
    }
    /// <summary>Clears the value of the "groupName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGroupName() {
      groupName_ = null;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// Type is the type of account - user, group. default is user
    /// +kubebuilder:default:=user
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 4;
    private readonly static string UsernameDefaultValue = "";

    private string username_;
    /// <summary>
    /// UserName specifies the name of the account
    /// +kubebuilder:validation:MinLength=4
    /// +kubebuilder:validation:MaxLength=64
    /// +kubebuilder:validation:Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_ ?? UsernameDefaultValue; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "username" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUsername {
      get { return username_ != null; }
    }
    /// <summary>Clears the value of the "username" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUsername() {
      username_ = null;
    }

    /// <summary>Field number for the "firstName" field.</summary>
    public const int FirstNameFieldNumber = 5;
    private readonly static string FirstNameDefaultValue = "";

    private string firstName_;
    /// <summary>
    /// First FileName is the user first name
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:default:=""
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:MaxLength=64
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_ ?? FirstNameDefaultValue; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "firstName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFirstName {
      get { return firstName_ != null; }
    }
    /// <summary>Clears the value of the "firstName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFirstName() {
      firstName_ = null;
    }

    /// <summary>Field number for the "lastName" field.</summary>
    public const int LastNameFieldNumber = 6;
    private readonly static string LastNameDefaultValue = "";

    private string lastName_;
    /// <summary>
    /// LastName is the user last name
    /// +kubebuilder:default:=""
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:MaxLength=64
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastName {
      get { return lastName_ ?? LastNameDefaultValue; }
      set {
        lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "lastName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLastName {
      get { return lastName_ != null; }
    }
    /// <summary>Clears the value of the "lastName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLastName() {
      lastName_ = null;
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 7;
    private readonly static string EmailDefaultValue = "";

    private string email_;
    /// <summary>
    /// Email specify the email of the user
    /// +kubebuilder:default:=""
    /// +kubebuilder:validation:MaxLength=64
    /// +kubebuilder:validation:Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_ ?? EmailDefaultValue; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "email" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEmail {
      get { return email_ != null; }
    }
    /// <summary>Clears the value of the "email" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEmail() {
      email_ = null;
    }

    /// <summary>Field number for the "phone" field.</summary>
    public const int PhoneFieldNumber = 8;
    private readonly static string PhoneDefaultValue = "";

    private string phone_;
    /// <summary>
    /// Phone specify the phone of the user
    /// +kubebuilder:default:=""
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:MaxLength=64
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Phone {
      get { return phone_ ?? PhoneDefaultValue; }
      set {
        phone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "phone" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPhone {
      get { return phone_ != null; }
    }
    /// <summary>Clears the value of the "phone" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPhone() {
      phone_ = null;
    }

    /// <summary>Field number for the "admin" field.</summary>
    public const int AdminFieldNumber = 9;
    private readonly static bool AdminDefaultValue = false;

    private bool admin_;
    /// <summary>
    /// User is admin. Admin have full control on other accounts.
    /// +kubebuilder:default:=false
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Admin {
      get { if ((_hasBits0 & 1) != 0) { return admin_; } else { return AdminDefaultValue; } }
      set {
        _hasBits0 |= 1;
        admin_ = value;
      }
    }
    /// <summary>Gets whether the "admin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAdmin {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "admin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAdmin() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "emailPassword" field.</summary>
    public const int EmailPasswordFieldNumber = 10;
    private readonly static bool EmailPasswordDefaultValue = false;

    private bool emailPassword_;
    /// <summary>
    /// Email account creation event to user (using the user email)
    /// +kubebuilder:default:=false
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EmailPassword {
      get { if ((_hasBits0 & 2) != 0) { return emailPassword_; } else { return EmailPasswordDefaultValue; } }
      set {
        _hasBits0 |= 2;
        emailPassword_ = value;
      }
    }
    /// <summary>Gets whether the "emailPassword" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEmailPassword {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "emailPassword" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEmailPassword() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "resetPassword" field.</summary>
    public const int ResetPasswordFieldNumber = 11;
    private readonly static bool ResetPasswordDefaultValue = false;

    private bool resetPassword_;
    /// <summary>
    /// User need to reset password upon login
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:default:=false
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ResetPassword {
      get { if ((_hasBits0 & 4) != 0) { return resetPassword_; } else { return ResetPasswordDefaultValue; } }
      set {
        _hasBits0 |= 4;
        resetPassword_ = value;
      }
    }
    /// <summary>Gets whether the "resetPassword" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResetPassword {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "resetPassword" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResetPassword() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "productBindings" field.</summary>
    public const int ProductBindingsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountRoleBinding> _repeated_productBindings_codec
        = pb::FieldCodec.ForMessage(98, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountRoleBinding.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountRoleBinding> productBindings_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountRoleBinding>();
    /// <summary>
    /// ProductBinding is the premission that the user have for each product
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountRoleBinding> ProductBindings {
      get { return productBindings_; }
    }

    /// <summary>Field number for the "labBindings" field.</summary>
    public const int LabBindingsFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountRoleBinding> _repeated_labBindings_codec
        = pb::FieldCodec.ForMessage(106, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountRoleBinding.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountRoleBinding> labBindings_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountRoleBinding>();
    /// <summary>
    /// LabBinding is the RBAC roles that the user have within each lab
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountRoleBinding> LabBindings {
      get { return labBindings_; }
    }

    /// <summary>Field number for the "siteBindings" field.</summary>
    public const int SiteBindingsFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountRoleBinding> _repeated_siteBindings_codec
        = pb::FieldCodec.ForMessage(114, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountRoleBinding.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountRoleBinding> siteBindings_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountRoleBinding>();
    /// <summary>
    /// SiteBindings is the RBAC roles that the user have within each serving site.
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountRoleBinding> SiteBindings {
      get { return siteBindings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TenantRef, other.TenantRef)) return false;
      if (GroupName != other.GroupName) return false;
      if (Type != other.Type) return false;
      if (Username != other.Username) return false;
      if (FirstName != other.FirstName) return false;
      if (LastName != other.LastName) return false;
      if (Email != other.Email) return false;
      if (Phone != other.Phone) return false;
      if (Admin != other.Admin) return false;
      if (EmailPassword != other.EmailPassword) return false;
      if (ResetPassword != other.ResetPassword) return false;
      if(!productBindings_.Equals(other.productBindings_)) return false;
      if(!labBindings_.Equals(other.labBindings_)) return false;
      if(!siteBindings_.Equals(other.siteBindings_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (tenantRef_ != null) hash ^= TenantRef.GetHashCode();
      if (HasGroupName) hash ^= GroupName.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasUsername) hash ^= Username.GetHashCode();
      if (HasFirstName) hash ^= FirstName.GetHashCode();
      if (HasLastName) hash ^= LastName.GetHashCode();
      if (HasEmail) hash ^= Email.GetHashCode();
      if (HasPhone) hash ^= Phone.GetHashCode();
      if (HasAdmin) hash ^= Admin.GetHashCode();
      if (HasEmailPassword) hash ^= EmailPassword.GetHashCode();
      if (HasResetPassword) hash ^= ResetPassword.GetHashCode();
      hash ^= productBindings_.GetHashCode();
      hash ^= labBindings_.GetHashCode();
      hash ^= siteBindings_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (tenantRef_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TenantRef);
      }
      if (HasGroupName) {
        output.WriteRawTag(18);
        output.WriteString(GroupName);
      }
      if (HasType) {
        output.WriteRawTag(26);
        output.WriteString(Type);
      }
      if (HasUsername) {
        output.WriteRawTag(34);
        output.WriteString(Username);
      }
      if (HasFirstName) {
        output.WriteRawTag(42);
        output.WriteString(FirstName);
      }
      if (HasLastName) {
        output.WriteRawTag(50);
        output.WriteString(LastName);
      }
      if (HasEmail) {
        output.WriteRawTag(58);
        output.WriteString(Email);
      }
      if (HasPhone) {
        output.WriteRawTag(66);
        output.WriteString(Phone);
      }
      if (HasAdmin) {
        output.WriteRawTag(72);
        output.WriteBool(Admin);
      }
      if (HasEmailPassword) {
        output.WriteRawTag(80);
        output.WriteBool(EmailPassword);
      }
      if (HasResetPassword) {
        output.WriteRawTag(88);
        output.WriteBool(ResetPassword);
      }
      productBindings_.WriteTo(output, _repeated_productBindings_codec);
      labBindings_.WriteTo(output, _repeated_labBindings_codec);
      siteBindings_.WriteTo(output, _repeated_siteBindings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (tenantRef_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TenantRef);
      }
      if (HasGroupName) {
        output.WriteRawTag(18);
        output.WriteString(GroupName);
      }
      if (HasType) {
        output.WriteRawTag(26);
        output.WriteString(Type);
      }
      if (HasUsername) {
        output.WriteRawTag(34);
        output.WriteString(Username);
      }
      if (HasFirstName) {
        output.WriteRawTag(42);
        output.WriteString(FirstName);
      }
      if (HasLastName) {
        output.WriteRawTag(50);
        output.WriteString(LastName);
      }
      if (HasEmail) {
        output.WriteRawTag(58);
        output.WriteString(Email);
      }
      if (HasPhone) {
        output.WriteRawTag(66);
        output.WriteString(Phone);
      }
      if (HasAdmin) {
        output.WriteRawTag(72);
        output.WriteBool(Admin);
      }
      if (HasEmailPassword) {
        output.WriteRawTag(80);
        output.WriteBool(EmailPassword);
      }
      if (HasResetPassword) {
        output.WriteRawTag(88);
        output.WriteBool(ResetPassword);
      }
      productBindings_.WriteTo(ref output, _repeated_productBindings_codec);
      labBindings_.WriteTo(ref output, _repeated_labBindings_codec);
      siteBindings_.WriteTo(ref output, _repeated_siteBindings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (tenantRef_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TenantRef);
      }
      if (HasGroupName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupName);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasUsername) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (HasFirstName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (HasLastName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
      }
      if (HasEmail) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (HasPhone) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Phone);
      }
      if (HasAdmin) {
        size += 1 + 1;
      }
      if (HasEmailPassword) {
        size += 1 + 1;
      }
      if (HasResetPassword) {
        size += 1 + 1;
      }
      size += productBindings_.CalculateSize(_repeated_productBindings_codec);
      size += labBindings_.CalculateSize(_repeated_labBindings_codec);
      size += siteBindings_.CalculateSize(_repeated_siteBindings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountSpec other) {
      if (other == null) {
        return;
      }
      if (other.tenantRef_ != null) {
        if (tenantRef_ == null) {
          TenantRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
        }
        TenantRef.MergeFrom(other.TenantRef);
      }
      if (other.HasGroupName) {
        GroupName = other.GroupName;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasUsername) {
        Username = other.Username;
      }
      if (other.HasFirstName) {
        FirstName = other.FirstName;
      }
      if (other.HasLastName) {
        LastName = other.LastName;
      }
      if (other.HasEmail) {
        Email = other.Email;
      }
      if (other.HasPhone) {
        Phone = other.Phone;
      }
      if (other.HasAdmin) {
        Admin = other.Admin;
      }
      if (other.HasEmailPassword) {
        EmailPassword = other.EmailPassword;
      }
      if (other.HasResetPassword) {
        ResetPassword = other.ResetPassword;
      }
      productBindings_.Add(other.productBindings_);
      labBindings_.Add(other.labBindings_);
      siteBindings_.Add(other.siteBindings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (tenantRef_ == null) {
              TenantRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(TenantRef);
            break;
          }
          case 18: {
            GroupName = input.ReadString();
            break;
          }
          case 26: {
            Type = input.ReadString();
            break;
          }
          case 34: {
            Username = input.ReadString();
            break;
          }
          case 42: {
            FirstName = input.ReadString();
            break;
          }
          case 50: {
            LastName = input.ReadString();
            break;
          }
          case 58: {
            Email = input.ReadString();
            break;
          }
          case 66: {
            Phone = input.ReadString();
            break;
          }
          case 72: {
            Admin = input.ReadBool();
            break;
          }
          case 80: {
            EmailPassword = input.ReadBool();
            break;
          }
          case 88: {
            ResetPassword = input.ReadBool();
            break;
          }
          case 98: {
            productBindings_.AddEntriesFrom(input, _repeated_productBindings_codec);
            break;
          }
          case 106: {
            labBindings_.AddEntriesFrom(input, _repeated_labBindings_codec);
            break;
          }
          case 114: {
            siteBindings_.AddEntriesFrom(input, _repeated_siteBindings_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (tenantRef_ == null) {
              TenantRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(TenantRef);
            break;
          }
          case 18: {
            GroupName = input.ReadString();
            break;
          }
          case 26: {
            Type = input.ReadString();
            break;
          }
          case 34: {
            Username = input.ReadString();
            break;
          }
          case 42: {
            FirstName = input.ReadString();
            break;
          }
          case 50: {
            LastName = input.ReadString();
            break;
          }
          case 58: {
            Email = input.ReadString();
            break;
          }
          case 66: {
            Phone = input.ReadString();
            break;
          }
          case 72: {
            Admin = input.ReadBool();
            break;
          }
          case 80: {
            EmailPassword = input.ReadBool();
            break;
          }
          case 88: {
            ResetPassword = input.ReadBool();
            break;
          }
          case 98: {
            productBindings_.AddEntriesFrom(ref input, _repeated_productBindings_codec);
            break;
          }
          case 106: {
            labBindings_.AddEntriesFrom(ref input, _repeated_labBindings_codec);
            break;
          }
          case 114: {
            siteBindings_.AddEntriesFrom(ref input, _repeated_siteBindings_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// AccountStatus defines the actual state of the api object
  /// </summary>
  public sealed partial class AccountStatus : pb::IMessage<AccountStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AccountStatus> _parser = new pb::MessageParser<AccountStatus>(() => new AccountStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountStatus(AccountStatus other) : this() {
      conditions_ = other.conditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountStatus Clone() {
      return new AccountStatus(this);
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(10, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountCondition.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountCondition> conditions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountCondition>();
    /// <summary>
    /// Represents the latest available observations of a account state.
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AccountCondition> Conditions {
      get { return conditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!conditions_.Equals(other.conditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= conditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountStatus other) {
      if (other == null) {
        return;
      }
      conditions_.Add(other.conditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AliCloudSpec : pb::IMessage<AliCloudSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AliCloudSpec> _parser = new pb::MessageParser<AliCloudSpec>(() => new AliCloudSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AliCloudSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AliCloudSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AliCloudSpec(AliCloudSpec other) : this() {
      accessKey_ = other.accessKey_;
      secretKey_ = other.secretKey_;
      region_ = other.region_;
      host_ = other.host_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AliCloudSpec Clone() {
      return new AliCloudSpec(this);
    }

    /// <summary>Field number for the "accessKey" field.</summary>
    public const int AccessKeyFieldNumber = 1;
    private readonly static string AccessKeyDefaultValue = "";

    private string accessKey_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessKey {
      get { return accessKey_ ?? AccessKeyDefaultValue; }
      set {
        accessKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "accessKey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccessKey {
      get { return accessKey_ != null; }
    }
    /// <summary>Clears the value of the "accessKey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccessKey() {
      accessKey_ = null;
    }

    /// <summary>Field number for the "secretKey" field.</summary>
    public const int SecretKeyFieldNumber = 2;
    private readonly static string SecretKeyDefaultValue = "";

    private string secretKey_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SecretKey {
      get { return secretKey_ ?? SecretKeyDefaultValue; }
      set {
        secretKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "secretKey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSecretKey {
      get { return secretKey_ != null; }
    }
    /// <summary>Clears the value of the "secretKey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSecretKey() {
      secretKey_ = null;
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 3;
    private readonly static string RegionDefaultValue = "";

    private string region_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Region {
      get { return region_ ?? RegionDefaultValue; }
      set {
        region_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "region" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRegion {
      get { return region_ != null; }
    }
    /// <summary>Clears the value of the "region" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRegion() {
      region_ = null;
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 4;
    private readonly static string HostDefaultValue = "";

    private string host_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Host {
      get { return host_ ?? HostDefaultValue; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "host" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHost {
      get { return host_ != null; }
    }
    /// <summary>Clears the value of the "host" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHost() {
      host_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AliCloudSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AliCloudSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccessKey != other.AccessKey) return false;
      if (SecretKey != other.SecretKey) return false;
      if (Region != other.Region) return false;
      if (Host != other.Host) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccessKey) hash ^= AccessKey.GetHashCode();
      if (HasSecretKey) hash ^= SecretKey.GetHashCode();
      if (HasRegion) hash ^= Region.GetHashCode();
      if (HasHost) hash ^= Host.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccessKey) {
        output.WriteRawTag(10);
        output.WriteString(AccessKey);
      }
      if (HasSecretKey) {
        output.WriteRawTag(18);
        output.WriteString(SecretKey);
      }
      if (HasRegion) {
        output.WriteRawTag(26);
        output.WriteString(Region);
      }
      if (HasHost) {
        output.WriteRawTag(34);
        output.WriteString(Host);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccessKey) {
        output.WriteRawTag(10);
        output.WriteString(AccessKey);
      }
      if (HasSecretKey) {
        output.WriteRawTag(18);
        output.WriteString(SecretKey);
      }
      if (HasRegion) {
        output.WriteRawTag(26);
        output.WriteString(Region);
      }
      if (HasHost) {
        output.WriteRawTag(34);
        output.WriteString(Host);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccessKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessKey);
      }
      if (HasSecretKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SecretKey);
      }
      if (HasRegion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Region);
      }
      if (HasHost) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AliCloudSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasAccessKey) {
        AccessKey = other.AccessKey;
      }
      if (other.HasSecretKey) {
        SecretKey = other.SecretKey;
      }
      if (other.HasRegion) {
        Region = other.Region;
      }
      if (other.HasHost) {
        Host = other.Host;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccessKey = input.ReadString();
            break;
          }
          case 18: {
            SecretKey = input.ReadString();
            break;
          }
          case 26: {
            Region = input.ReadString();
            break;
          }
          case 34: {
            Host = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AccessKey = input.ReadString();
            break;
          }
          case 18: {
            SecretKey = input.ReadString();
            break;
          }
          case 26: {
            Region = input.ReadString();
            break;
          }
          case 34: {
            Host = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// =================== Definitions of spec files for each type
  /// AthenaSpec defines the connection to Athena db
  /// </summary>
  public sealed partial class AthenaSpec : pb::IMessage<AthenaSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AthenaSpec> _parser = new pb::MessageParser<AthenaSpec>(() => new AthenaSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AthenaSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AthenaSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AthenaSpec(AthenaSpec other) : this() {
      hostName_ = other.hostName_;
      s3OutputLocation_ = other.s3OutputLocation_;
      accessKey_ = other.accessKey_;
      secretKey_ = other.secretKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AthenaSpec Clone() {
      return new AthenaSpec(this);
    }

    /// <summary>Field number for the "hostName" field.</summary>
    public const int HostNameFieldNumber = 1;
    private readonly static string HostNameDefaultValue = "";

    private string hostName_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HostName {
      get { return hostName_ ?? HostNameDefaultValue; }
      set {
        hostName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hostName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHostName {
      get { return hostName_ != null; }
    }
    /// <summary>Clears the value of the "hostName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHostName() {
      hostName_ = null;
    }

    /// <summary>Field number for the "s3OutputLocation" field.</summary>
    public const int S3OutputLocationFieldNumber = 2;
    private readonly static string S3OutputLocationDefaultValue = "";

    private string s3OutputLocation_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string S3OutputLocation {
      get { return s3OutputLocation_ ?? S3OutputLocationDefaultValue; }
      set {
        s3OutputLocation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "s3OutputLocation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasS3OutputLocation {
      get { return s3OutputLocation_ != null; }
    }
    /// <summary>Clears the value of the "s3OutputLocation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearS3OutputLocation() {
      s3OutputLocation_ = null;
    }

    /// <summary>Field number for the "accessKey" field.</summary>
    public const int AccessKeyFieldNumber = 3;
    private readonly static string AccessKeyDefaultValue = "";

    private string accessKey_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessKey {
      get { return accessKey_ ?? AccessKeyDefaultValue; }
      set {
        accessKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "accessKey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccessKey {
      get { return accessKey_ != null; }
    }
    /// <summary>Clears the value of the "accessKey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccessKey() {
      accessKey_ = null;
    }

    /// <summary>Field number for the "secretKey" field.</summary>
    public const int SecretKeyFieldNumber = 4;
    private readonly static string SecretKeyDefaultValue = "";

    private string secretKey_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SecretKey {
      get { return secretKey_ ?? SecretKeyDefaultValue; }
      set {
        secretKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "secretKey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSecretKey {
      get { return secretKey_ != null; }
    }
    /// <summary>Clears the value of the "secretKey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSecretKey() {
      secretKey_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AthenaSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AthenaSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HostName != other.HostName) return false;
      if (S3OutputLocation != other.S3OutputLocation) return false;
      if (AccessKey != other.AccessKey) return false;
      if (SecretKey != other.SecretKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHostName) hash ^= HostName.GetHashCode();
      if (HasS3OutputLocation) hash ^= S3OutputLocation.GetHashCode();
      if (HasAccessKey) hash ^= AccessKey.GetHashCode();
      if (HasSecretKey) hash ^= SecretKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasHostName) {
        output.WriteRawTag(10);
        output.WriteString(HostName);
      }
      if (HasS3OutputLocation) {
        output.WriteRawTag(18);
        output.WriteString(S3OutputLocation);
      }
      if (HasAccessKey) {
        output.WriteRawTag(26);
        output.WriteString(AccessKey);
      }
      if (HasSecretKey) {
        output.WriteRawTag(34);
        output.WriteString(SecretKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHostName) {
        output.WriteRawTag(10);
        output.WriteString(HostName);
      }
      if (HasS3OutputLocation) {
        output.WriteRawTag(18);
        output.WriteString(S3OutputLocation);
      }
      if (HasAccessKey) {
        output.WriteRawTag(26);
        output.WriteString(AccessKey);
      }
      if (HasSecretKey) {
        output.WriteRawTag(34);
        output.WriteString(SecretKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasHostName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HostName);
      }
      if (HasS3OutputLocation) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(S3OutputLocation);
      }
      if (HasAccessKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessKey);
      }
      if (HasSecretKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SecretKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AthenaSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasHostName) {
        HostName = other.HostName;
      }
      if (other.HasS3OutputLocation) {
        S3OutputLocation = other.S3OutputLocation;
      }
      if (other.HasAccessKey) {
        AccessKey = other.AccessKey;
      }
      if (other.HasSecretKey) {
        SecretKey = other.SecretKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HostName = input.ReadString();
            break;
          }
          case 18: {
            S3OutputLocation = input.ReadString();
            break;
          }
          case 26: {
            AccessKey = input.ReadString();
            break;
          }
          case 34: {
            SecretKey = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            HostName = input.ReadString();
            break;
          }
          case 18: {
            S3OutputLocation = input.ReadString();
            break;
          }
          case 26: {
            AccessKey = input.ReadString();
            break;
          }
          case 34: {
            SecretKey = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// //////////////////////////
  /// Cloud connection
  /// //////////////////////////
  /// </summary>
  public sealed partial class AwsSpec : pb::IMessage<AwsSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AwsSpec> _parser = new pb::MessageParser<AwsSpec>(() => new AwsSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AwsSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwsSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwsSpec(AwsSpec other) : this() {
      defaultRegion_ = other.defaultRegion_;
      accessKey_ = other.accessKey_;
      secretKey_ = other.secretKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwsSpec Clone() {
      return new AwsSpec(this);
    }

    /// <summary>Field number for the "defaultRegion" field.</summary>
    public const int DefaultRegionFieldNumber = 1;
    private readonly static string DefaultRegionDefaultValue = "";

    private string defaultRegion_;
    /// <summary>
    /// Default zone.
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefaultRegion {
      get { return defaultRegion_ ?? DefaultRegionDefaultValue; }
      set {
        defaultRegion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "defaultRegion" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDefaultRegion {
      get { return defaultRegion_ != null; }
    }
    /// <summary>Clears the value of the "defaultRegion" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDefaultRegion() {
      defaultRegion_ = null;
    }

    /// <summary>Field number for the "accessKey" field.</summary>
    public const int AccessKeyFieldNumber = 2;
    private readonly static string AccessKeyDefaultValue = "";

    private string accessKey_;
    /// <summary>
    /// Aws Access key. This is an hidden fields which are stored in the secret
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessKey {
      get { return accessKey_ ?? AccessKeyDefaultValue; }
      set {
        accessKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "accessKey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccessKey {
      get { return accessKey_ != null; }
    }
    /// <summary>Clears the value of the "accessKey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccessKey() {
      accessKey_ = null;
    }

    /// <summary>Field number for the "secretKey" field.</summary>
    public const int SecretKeyFieldNumber = 3;
    private readonly static string SecretKeyDefaultValue = "";

    private string secretKey_;
    /// <summary>
    /// Aws StorageSecret key. This is an hidden fields which are stored in the secret
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SecretKey {
      get { return secretKey_ ?? SecretKeyDefaultValue; }
      set {
        secretKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "secretKey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSecretKey {
      get { return secretKey_ != null; }
    }
    /// <summary>Clears the value of the "secretKey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSecretKey() {
      secretKey_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AwsSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AwsSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DefaultRegion != other.DefaultRegion) return false;
      if (AccessKey != other.AccessKey) return false;
      if (SecretKey != other.SecretKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDefaultRegion) hash ^= DefaultRegion.GetHashCode();
      if (HasAccessKey) hash ^= AccessKey.GetHashCode();
      if (HasSecretKey) hash ^= SecretKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDefaultRegion) {
        output.WriteRawTag(10);
        output.WriteString(DefaultRegion);
      }
      if (HasAccessKey) {
        output.WriteRawTag(18);
        output.WriteString(AccessKey);
      }
      if (HasSecretKey) {
        output.WriteRawTag(26);
        output.WriteString(SecretKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDefaultRegion) {
        output.WriteRawTag(10);
        output.WriteString(DefaultRegion);
      }
      if (HasAccessKey) {
        output.WriteRawTag(18);
        output.WriteString(AccessKey);
      }
      if (HasSecretKey) {
        output.WriteRawTag(26);
        output.WriteString(SecretKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDefaultRegion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultRegion);
      }
      if (HasAccessKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessKey);
      }
      if (HasSecretKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SecretKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AwsSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasDefaultRegion) {
        DefaultRegion = other.DefaultRegion;
      }
      if (other.HasAccessKey) {
        AccessKey = other.AccessKey;
      }
      if (other.HasSecretKey) {
        SecretKey = other.SecretKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DefaultRegion = input.ReadString();
            break;
          }
          case 18: {
            AccessKey = input.ReadString();
            break;
          }
          case 26: {
            SecretKey = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DefaultRegion = input.ReadString();
            break;
          }
          case 18: {
            AccessKey = input.ReadString();
            break;
          }
          case 26: {
            SecretKey = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AzureStorageSpec : pb::IMessage<AzureStorageSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AzureStorageSpec> _parser = new pb::MessageParser<AzureStorageSpec>(() => new AzureStorageSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AzureStorageSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureStorageSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureStorageSpec(AzureStorageSpec other) : this() {
      storageAccount_ = other.storageAccount_;
      accessKey_ = other.accessKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureStorageSpec Clone() {
      return new AzureStorageSpec(this);
    }

    /// <summary>Field number for the "storageAccount" field.</summary>
    public const int StorageAccountFieldNumber = 1;
    private readonly static string StorageAccountDefaultValue = "";

    private string storageAccount_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StorageAccount {
      get { return storageAccount_ ?? StorageAccountDefaultValue; }
      set {
        storageAccount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "storageAccount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStorageAccount {
      get { return storageAccount_ != null; }
    }
    /// <summary>Clears the value of the "storageAccount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStorageAccount() {
      storageAccount_ = null;
    }

    /// <summary>Field number for the "accessKey" field.</summary>
    public const int AccessKeyFieldNumber = 2;
    private readonly static string AccessKeyDefaultValue = "";

    private string accessKey_;
    /// <summary>
    /// This is an hidden field which is stored in a p
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessKey {
      get { return accessKey_ ?? AccessKeyDefaultValue; }
      set {
        accessKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "accessKey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccessKey {
      get { return accessKey_ != null; }
    }
    /// <summary>Clears the value of the "accessKey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccessKey() {
      accessKey_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AzureStorageSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AzureStorageSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StorageAccount != other.StorageAccount) return false;
      if (AccessKey != other.AccessKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStorageAccount) hash ^= StorageAccount.GetHashCode();
      if (HasAccessKey) hash ^= AccessKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasStorageAccount) {
        output.WriteRawTag(10);
        output.WriteString(StorageAccount);
      }
      if (HasAccessKey) {
        output.WriteRawTag(18);
        output.WriteString(AccessKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasStorageAccount) {
        output.WriteRawTag(10);
        output.WriteString(StorageAccount);
      }
      if (HasAccessKey) {
        output.WriteRawTag(18);
        output.WriteString(AccessKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasStorageAccount) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StorageAccount);
      }
      if (HasAccessKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AzureStorageSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasStorageAccount) {
        StorageAccount = other.StorageAccount;
      }
      if (other.HasAccessKey) {
        AccessKey = other.AccessKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StorageAccount = input.ReadString();
            break;
          }
          case 18: {
            AccessKey = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            StorageAccount = input.ReadString();
            break;
          }
          case 18: {
            AccessKey = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// BigQuerySpec defines the connection to big query
  /// </summary>
  public sealed partial class BigQuerySpec : pb::IMessage<BigQuerySpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BigQuerySpec> _parser = new pb::MessageParser<BigQuerySpec>(() => new BigQuerySpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BigQuerySpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigQuerySpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigQuerySpec(BigQuerySpec other) : this() {
      serviceAccount_ = other.serviceAccount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigQuerySpec Clone() {
      return new BigQuerySpec(this);
    }

    /// <summary>Field number for the "serviceAccount" field.</summary>
    public const int ServiceAccountFieldNumber = 1;
    private readonly static string ServiceAccountDefaultValue = "";

    private string serviceAccount_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceAccount {
      get { return serviceAccount_ ?? ServiceAccountDefaultValue; }
      set {
        serviceAccount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "serviceAccount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasServiceAccount {
      get { return serviceAccount_ != null; }
    }
    /// <summary>Clears the value of the "serviceAccount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearServiceAccount() {
      serviceAccount_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BigQuerySpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BigQuerySpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServiceAccount != other.ServiceAccount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasServiceAccount) hash ^= ServiceAccount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasServiceAccount) {
        output.WriteRawTag(10);
        output.WriteString(ServiceAccount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasServiceAccount) {
        output.WriteRawTag(10);
        output.WriteString(ServiceAccount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasServiceAccount) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceAccount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BigQuerySpec other) {
      if (other == null) {
        return;
      }
      if (other.HasServiceAccount) {
        ServiceAccount = other.ServiceAccount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ServiceAccount = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ServiceAccount = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BitbucketSpec : pb::IMessage<BitbucketSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BitbucketSpec> _parser = new pb::MessageParser<BitbucketSpec>(() => new BitbucketSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BitbucketSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BitbucketSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BitbucketSpec(BitbucketSpec other) : this() {
      token_ = other.token_;
      userName_ = other.userName_;
      ssh_ = other.ssh_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BitbucketSpec Clone() {
      return new BitbucketSpec(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private readonly static string TokenDefaultValue = "";

    private string token_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearToken() {
      token_ = null;
    }

    /// <summary>Field number for the "userName" field.</summary>
    public const int UserNameFieldNumber = 2;
    private readonly static string UserNameDefaultValue = "";

    private string userName_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_ ?? UserNameDefaultValue; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "userName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserName {
      get { return userName_ != null; }
    }
    /// <summary>Clears the value of the "userName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserName() {
      userName_ = null;
    }

    /// <summary>Field number for the "ssh" field.</summary>
    public const int SshFieldNumber = 3;
    private readonly static string SshDefaultValue = "";

    private string ssh_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ssh {
      get { return ssh_ ?? SshDefaultValue; }
      set {
        ssh_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ssh" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSsh {
      get { return ssh_ != null; }
    }
    /// <summary>Clears the value of the "ssh" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSsh() {
      ssh_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BitbucketSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BitbucketSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      if (UserName != other.UserName) return false;
      if (Ssh != other.Ssh) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasToken) hash ^= Token.GetHashCode();
      if (HasUserName) hash ^= UserName.GetHashCode();
      if (HasSsh) hash ^= Ssh.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasToken) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (HasUserName) {
        output.WriteRawTag(18);
        output.WriteString(UserName);
      }
      if (HasSsh) {
        output.WriteRawTag(26);
        output.WriteString(Ssh);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasToken) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (HasUserName) {
        output.WriteRawTag(18);
        output.WriteString(UserName);
      }
      if (HasSsh) {
        output.WriteRawTag(26);
        output.WriteString(Ssh);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (HasUserName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (HasSsh) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ssh);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BitbucketSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      if (other.HasUserName) {
        UserName = other.UserName;
      }
      if (other.HasSsh) {
        Ssh = other.Ssh;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
          case 26: {
            Ssh = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
          case 26: {
            Ssh = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CassandraSpec defines the connection to cassandra
  /// </summary>
  public sealed partial class CassandraSpec : pb::IMessage<CassandraSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CassandraSpec> _parser = new pb::MessageParser<CassandraSpec>(() => new CassandraSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CassandraSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CassandraSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CassandraSpec(CassandraSpec other) : this() {
      _hasBits0 = other._hasBits0;
      host_ = other.host_;
      port_ = other.port_;
      database_ = other.database_;
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CassandraSpec Clone() {
      return new CassandraSpec(this);
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 1;
    private readonly static string HostDefaultValue = "";

    private string host_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Host {
      get { return host_ ?? HostDefaultValue; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "host" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHost {
      get { return host_ != null; }
    }
    /// <summary>Clears the value of the "host" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHost() {
      host_ = null;
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private readonly static int PortDefaultValue = 0;

    private int port_;
    /// <summary>
    /// +kubebuilder:default:= 9042
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { if ((_hasBits0 & 1) != 0) { return port_; } else { return PortDefaultValue; } }
      set {
        _hasBits0 |= 1;
        port_ = value;
      }
    }
    /// <summary>Gets whether the "port" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPort {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "port" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPort() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 3;
    private readonly static string DatabaseDefaultValue = "";

    private string database_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_ ?? DatabaseDefaultValue; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "database" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDatabase {
      get { return database_ != null; }
    }
    /// <summary>Clears the value of the "database" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDatabase() {
      database_ = null;
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 4;
    private readonly static string UsernameDefaultValue = "";

    private string username_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_ ?? UsernameDefaultValue; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "username" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUsername {
      get { return username_ != null; }
    }
    /// <summary>Clears the value of the "username" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUsername() {
      username_ = null;
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 5;
    private readonly static string PasswordDefaultValue = "";

    private string password_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_ ?? PasswordDefaultValue; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "password" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPassword {
      get { return password_ != null; }
    }
    /// <summary>Clears the value of the "password" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPassword() {
      password_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CassandraSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CassandraSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Host != other.Host) return false;
      if (Port != other.Port) return false;
      if (Database != other.Database) return false;
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHost) hash ^= Host.GetHashCode();
      if (HasPort) hash ^= Port.GetHashCode();
      if (HasDatabase) hash ^= Database.GetHashCode();
      if (HasUsername) hash ^= Username.GetHashCode();
      if (HasPassword) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasHost) {
        output.WriteRawTag(10);
        output.WriteString(Host);
      }
      if (HasPort) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (HasDatabase) {
        output.WriteRawTag(26);
        output.WriteString(Database);
      }
      if (HasUsername) {
        output.WriteRawTag(34);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(42);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHost) {
        output.WriteRawTag(10);
        output.WriteString(Host);
      }
      if (HasPort) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (HasDatabase) {
        output.WriteRawTag(26);
        output.WriteString(Database);
      }
      if (HasUsername) {
        output.WriteRawTag(34);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(42);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasHost) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (HasPort) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (HasDatabase) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (HasUsername) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (HasPassword) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CassandraSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasHost) {
        Host = other.Host;
      }
      if (other.HasPort) {
        Port = other.Port;
      }
      if (other.HasDatabase) {
        Database = other.Database;
      }
      if (other.HasUsername) {
        Username = other.Username;
      }
      if (other.HasPassword) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Host = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
          case 26: {
            Database = input.ReadString();
            break;
          }
          case 34: {
            Username = input.ReadString();
            break;
          }
          case 42: {
            Password = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Host = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
          case 26: {
            Database = input.ReadString();
            break;
          }
          case 34: {
            Username = input.ReadString();
            break;
          }
          case 42: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Connection define a connection to an external system (e.g. database, public cloud)
  /// +kubebuilder:object:root=true
  /// +kubebuilder:subresource:status
  /// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
  /// +kubebuilder:printcolumn:name="Provider",type="string",JSONPath=".spec.provider",description=""
  /// +kubebuilder:printcolumn:name="StorageSecret",type="string",JSONPath=".spec.secretName",description=""
  /// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
  /// +kubebuilder:resource:path=connections,shortName=cred,singular=connection,categories={infra,modela}
  /// </summary>
  public sealed partial class Connection : pb::IMessage<Connection>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Connection> _parser = new pb::MessageParser<Connection>(() => new Connection());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Connection> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Connection() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Connection(Connection other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Connection Clone() {
      return new Connection(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ConnectionSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ConnectionSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ConnectionStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ConnectionStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Connection);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Connection other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Connection other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ConnectionSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ConnectionStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ConnectionSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ConnectionStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ConnectionSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ConnectionStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// ConnectionCondition describes the state of a connection at a certain point.
  /// </summary>
  public sealed partial class ConnectionCondition : pb::IMessage<ConnectionCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConnectionCondition> _parser = new pb::MessageParser<ConnectionCondition>(() => new ConnectionCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConnectionCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectionCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectionCondition(ConnectionCondition other) : this() {
      type_ = other.type_;
      status_ = other.status_;
      lastTransitionTime_ = other.lastTransitionTime_ != null ? other.lastTransitionTime_.Clone() : null;
      reason_ = other.reason_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectionCondition Clone() {
      return new ConnectionCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// Type of account condition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    /// <summary>
    /// Status of the condition, one of True, False, AutoScaler.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "lastTransitionTime" field.</summary>
    public const int LastTransitionTimeFieldNumber = 4;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastTransitionTime_;
    /// <summary>
    /// Last time the condition transitioned from one status to another.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastTransitionTime {
      get { return lastTransitionTime_; }
      set {
        lastTransitionTime_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 5;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// The reason for the condition's last transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 6;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// A human readable message indicating details about the transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConnectionCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConnectionCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LastTransitionTime, other.LastTransitionTime)) return false;
      if (Reason != other.Reason) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (lastTransitionTime_ != null) hash ^= LastTransitionTime.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(42);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(50);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(42);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(50);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (lastTransitionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTransitionTime);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConnectionCondition other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.lastTransitionTime_ != null) {
        if (lastTransitionTime_ == null) {
          LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastTransitionTime.MergeFrom(other.LastTransitionTime);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 34: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 42: {
            Reason = input.ReadString();
            break;
          }
          case 50: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 34: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 42: {
            Reason = input.ReadString();
            break;
          }
          case 50: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// ConnectionList is a list of Connections.
  /// </summary>
  public sealed partial class ConnectionList : pb::IMessage<ConnectionList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConnectionList> _parser = new pb::MessageParser<ConnectionList>(() => new ConnectionList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConnectionList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectionList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectionList(ConnectionList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectionList Clone() {
      return new ConnectionList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Connection> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Connection.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Connection> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Connection>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Connection> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConnectionList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConnectionList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConnectionList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// ConnectionSpec defines the desired state of Connection
  /// </summary>
  public sealed partial class ConnectionSpec : pb::IMessage<ConnectionSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConnectionSpec> _parser = new pb::MessageParser<ConnectionSpec>(() => new ConnectionSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConnectionSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectionSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectionSpec(ConnectionSpec other) : this() {
      tenantRef_ = other.tenantRef_ != null ? other.tenantRef_.Clone() : null;
      category_ = other.category_;
      provider_ = other.provider_;
      secretName_ = other.secretName_;
      athena_ = other.athena_ != null ? other.athena_.Clone() : null;
      azureStorage_ = other.azureStorage_ != null ? other.azureStorage_.Clone() : null;
      aliCloud_ = other.aliCloud_ != null ? other.aliCloud_.Clone() : null;
      bigQuery_ = other.bigQuery_ != null ? other.bigQuery_.Clone() : null;
      bitbucket_ = other.bitbucket_ != null ? other.bitbucket_.Clone() : null;
      cassandra_ = other.cassandra_ != null ? other.cassandra_.Clone() : null;
      digitalocean_ = other.digitalocean_ != null ? other.digitalocean_.Clone() : null;
      smtp_ = other.smtp_ != null ? other.smtp_.Clone() : null;
      hetzner_ = other.hetzner_ != null ? other.hetzner_.Clone() : null;
      imageRegistry_ = other.imageRegistry_ != null ? other.imageRegistry_.Clone() : null;
      github_ = other.github_ != null ? other.github_.Clone() : null;
      gitlab_ = other.gitlab_ != null ? other.gitlab_.Clone() : null;
      gcpstorage_ = other.gcpstorage_ != null ? other.gcpstorage_.Clone() : null;
      linode_ = other.linode_ != null ? other.linode_.Clone() : null;
      mongodb_ = other.mongodb_ != null ? other.mongodb_.Clone() : null;
      mysql_ = other.mysql_ != null ? other.mysql_.Clone() : null;
      minio_ = other.minio_ != null ? other.minio_.Clone() : null;
      mssqlserver_ = other.mssqlserver_ != null ? other.mssqlserver_.Clone() : null;
      odbc_ = other.odbc_ != null ? other.odbc_.Clone() : null;
      oracle_ = other.oracle_ != null ? other.oracle_.Clone() : null;
      openstack_ = other.openstack_ != null ? other.openstack_.Clone() : null;
      ovh_ = other.ovh_ != null ? other.ovh_.Clone() : null;
      postgres_ = other.postgres_ != null ? other.postgres_.Clone() : null;
      presto_ = other.presto_ != null ? other.presto_.Clone() : null;
      redshift_ = other.redshift_ != null ? other.redshift_.Clone() : null;
      snowflake_ = other.snowflake_ != null ? other.snowflake_.Clone() : null;
      sqlLight_ = other.sqlLight_ != null ? other.sqlLight_.Clone() : null;
      aws_ = other.aws_ != null ? other.aws_.Clone() : null;
      slack_ = other.slack_ != null ? other.slack_.Clone() : null;
      flock_ = other.flock_ != null ? other.flock_.Clone() : null;
      msteam_ = other.msteam_ != null ? other.msteam_.Clone() : null;
      matterMost_ = other.matterMost_ != null ? other.matterMost_.Clone() : null;
      hipchat_ = other.hipchat_ != null ? other.hipchat_.Clone() : null;
      webhook_ = other.webhook_ != null ? other.webhook_.Clone() : null;
      owner_ = other.owner_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectionSpec Clone() {
      return new ConnectionSpec(this);
    }

    /// <summary>Field number for the "tenantRef" field.</summary>
    public const int TenantRefFieldNumber = 1;
    private global::K8S.Io.Api.Core.V1.ObjectReference tenantRef_;
    /// <summary>
    /// TenantRef is the tenant of the connection
    /// default to the default tenant
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Api.Core.V1.ObjectReference TenantRef {
      get { return tenantRef_; }
      set {
        tenantRef_ = value;
      }
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 2;
    private readonly static string CategoryDefaultValue = "";

    private string category_;
    /// <summary>
    /// The connection category
    /// +kubebuilder:default:="general"
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Category {
      get { return category_ ?? CategoryDefaultValue; }
      set {
        category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "category" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCategory {
      get { return category_ != null; }
    }
    /// <summary>Clears the value of the "category" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCategory() {
      category_ = null;
    }

    /// <summary>Field number for the "provider" field.</summary>
    public const int ProviderFieldNumber = 3;
    private readonly static string ProviderDefaultValue = "";

    private string provider_;
    /// <summary>
    /// Provider specifies the name api provider (E.g. aws)
    /// +kubebuilder:validation:Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Provider {
      get { return provider_ ?? ProviderDefaultValue; }
      set {
        provider_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "provider" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProvider {
      get { return provider_ != null; }
    }
    /// <summary>Clears the value of the "provider" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProvider() {
      provider_ = null;
    }

    /// <summary>Field number for the "secretName" field.</summary>
    public const int SecretNameFieldNumber = 4;
    private readonly static string SecretNameDefaultValue = "";

    private string secretName_;
    /// <summary>
    /// SecretName is a reference to a secret which holds the connection credentials
    /// +kubebuilder:validation:Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SecretName {
      get { return secretName_ ?? SecretNameDefaultValue; }
      set {
        secretName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "secretName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSecretName {
      get { return secretName_ != null; }
    }
    /// <summary>Clears the value of the "secretName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSecretName() {
      secretName_ = null;
    }

    /// <summary>Field number for the "athena" field.</summary>
    public const int AthenaFieldNumber = 5;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AthenaSpec athena_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AthenaSpec Athena {
      get { return athena_; }
      set {
        athena_ = value;
      }
    }

    /// <summary>Field number for the "azureStorage" field.</summary>
    public const int AzureStorageFieldNumber = 6;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AzureStorageSpec azureStorage_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AzureStorageSpec AzureStorage {
      get { return azureStorage_; }
      set {
        azureStorage_ = value;
      }
    }

    /// <summary>Field number for the "aliCloud" field.</summary>
    public const int AliCloudFieldNumber = 7;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AliCloudSpec aliCloud_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AliCloudSpec AliCloud {
      get { return aliCloud_; }
      set {
        aliCloud_ = value;
      }
    }

    /// <summary>Field number for the "bigQuery" field.</summary>
    public const int BigQueryFieldNumber = 8;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.BigQuerySpec bigQuery_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.BigQuerySpec BigQuery {
      get { return bigQuery_; }
      set {
        bigQuery_ = value;
      }
    }

    /// <summary>Field number for the "bitbucket" field.</summary>
    public const int BitbucketFieldNumber = 9;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.BitbucketSpec bitbucket_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.BitbucketSpec Bitbucket {
      get { return bitbucket_; }
      set {
        bitbucket_ = value;
      }
    }

    /// <summary>Field number for the "cassandra" field.</summary>
    public const int CassandraFieldNumber = 10;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.CassandraSpec cassandra_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.CassandraSpec Cassandra {
      get { return cassandra_; }
      set {
        cassandra_ = value;
      }
    }

    /// <summary>Field number for the "digitalocean" field.</summary>
    public const int DigitaloceanFieldNumber = 11;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.DigitalOceanSpec digitalocean_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.DigitalOceanSpec Digitalocean {
      get { return digitalocean_; }
      set {
        digitalocean_ = value;
      }
    }

    /// <summary>Field number for the "smtp" field.</summary>
    public const int SmtpFieldNumber = 12;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.SmtpSpec smtp_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.SmtpSpec Smtp {
      get { return smtp_; }
      set {
        smtp_ = value;
      }
    }

    /// <summary>Field number for the "hetzner" field.</summary>
    public const int HetznerFieldNumber = 13;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.HetznerSpec hetzner_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.HetznerSpec Hetzner {
      get { return hetzner_; }
      set {
        hetzner_ = value;
      }
    }

    /// <summary>Field number for the "imageRegistry" field.</summary>
    public const int ImageRegistryFieldNumber = 14;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ImageRegistrySpec imageRegistry_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ImageRegistrySpec ImageRegistry {
      get { return imageRegistry_; }
      set {
        imageRegistry_ = value;
      }
    }

    /// <summary>Field number for the "github" field.</summary>
    public const int GithubFieldNumber = 15;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GithubSpec github_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GithubSpec Github {
      get { return github_; }
      set {
        github_ = value;
      }
    }

    /// <summary>Field number for the "gitlab" field.</summary>
    public const int GitlabFieldNumber = 16;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GitlabSpec gitlab_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GitlabSpec Gitlab {
      get { return gitlab_; }
      set {
        gitlab_ = value;
      }
    }

    /// <summary>Field number for the "gcpstorage" field.</summary>
    public const int GcpstorageFieldNumber = 17;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GcpStorageSpec gcpstorage_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GcpStorageSpec Gcpstorage {
      get { return gcpstorage_; }
      set {
        gcpstorage_ = value;
      }
    }

    /// <summary>Field number for the "linode" field.</summary>
    public const int LinodeFieldNumber = 18;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LinodeSpec linode_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LinodeSpec Linode {
      get { return linode_; }
      set {
        linode_ = value;
      }
    }

    /// <summary>Field number for the "mongodb" field.</summary>
    public const int MongodbFieldNumber = 19;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MongoDbSpec mongodb_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MongoDbSpec Mongodb {
      get { return mongodb_; }
      set {
        mongodb_ = value;
      }
    }

    /// <summary>Field number for the "mysql" field.</summary>
    public const int MysqlFieldNumber = 20;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MySqlSpec mysql_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MySqlSpec Mysql {
      get { return mysql_; }
      set {
        mysql_ = value;
      }
    }

    /// <summary>Field number for the "minio" field.</summary>
    public const int MinioFieldNumber = 21;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MinioSpec minio_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MinioSpec Minio {
      get { return minio_; }
      set {
        minio_ = value;
      }
    }

    /// <summary>Field number for the "mssqlserver" field.</summary>
    public const int MssqlserverFieldNumber = 22;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MSSqlServerSpec mssqlserver_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MSSqlServerSpec Mssqlserver {
      get { return mssqlserver_; }
      set {
        mssqlserver_ = value;
      }
    }

    /// <summary>Field number for the "odbc" field.</summary>
    public const int OdbcFieldNumber = 23;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.OdbcSpec odbc_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.OdbcSpec Odbc {
      get { return odbc_; }
      set {
        odbc_ = value;
      }
    }

    /// <summary>Field number for the "oracle" field.</summary>
    public const int OracleFieldNumber = 24;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.OracleSpec oracle_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.OracleSpec Oracle {
      get { return oracle_; }
      set {
        oracle_ = value;
      }
    }

    /// <summary>Field number for the "openstack" field.</summary>
    public const int OpenstackFieldNumber = 25;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.OpenstackSpec openstack_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.OpenstackSpec Openstack {
      get { return openstack_; }
      set {
        openstack_ = value;
      }
    }

    /// <summary>Field number for the "ovh" field.</summary>
    public const int OvhFieldNumber = 26;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.OvhSpec ovh_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.OvhSpec Ovh {
      get { return ovh_; }
      set {
        ovh_ = value;
      }
    }

    /// <summary>Field number for the "postgres" field.</summary>
    public const int PostgresFieldNumber = 27;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.PostgresSQLSpec postgres_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.PostgresSQLSpec Postgres {
      get { return postgres_; }
      set {
        postgres_ = value;
      }
    }

    /// <summary>Field number for the "presto" field.</summary>
    public const int PrestoFieldNumber = 28;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.PrestoSpec presto_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.PrestoSpec Presto {
      get { return presto_; }
      set {
        presto_ = value;
      }
    }

    /// <summary>Field number for the "redshift" field.</summary>
    public const int RedshiftFieldNumber = 29;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.RedShiftSpec redshift_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.RedShiftSpec Redshift {
      get { return redshift_; }
      set {
        redshift_ = value;
      }
    }

    /// <summary>Field number for the "snowflake" field.</summary>
    public const int SnowflakeFieldNumber = 30;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.SnowFlakeSpec snowflake_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.SnowFlakeSpec Snowflake {
      get { return snowflake_; }
      set {
        snowflake_ = value;
      }
    }

    /// <summary>Field number for the "sqlLight" field.</summary>
    public const int SqlLightFieldNumber = 31;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.SqlLightSpec sqlLight_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.SqlLightSpec SqlLight {
      get { return sqlLight_; }
      set {
        sqlLight_ = value;
      }
    }

    /// <summary>Field number for the "aws" field.</summary>
    public const int AwsFieldNumber = 32;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AwsSpec aws_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AwsSpec Aws {
      get { return aws_; }
      set {
        aws_ = value;
      }
    }

    /// <summary>Field number for the "slack" field.</summary>
    public const int SlackFieldNumber = 33;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.SlackSpec slack_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.SlackSpec Slack {
      get { return slack_; }
      set {
        slack_ = value;
      }
    }

    /// <summary>Field number for the "flock" field.</summary>
    public const int FlockFieldNumber = 34;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.FlockSpec flock_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.FlockSpec Flock {
      get { return flock_; }
      set {
        flock_ = value;
      }
    }

    /// <summary>Field number for the "msteam" field.</summary>
    public const int MsteamFieldNumber = 35;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MSTeamSpec msteam_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MSTeamSpec Msteam {
      get { return msteam_; }
      set {
        msteam_ = value;
      }
    }

    /// <summary>Field number for the "matterMost" field.</summary>
    public const int MatterMostFieldNumber = 36;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MattermostSpec matterMost_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MattermostSpec MatterMost {
      get { return matterMost_; }
      set {
        matterMost_ = value;
      }
    }

    /// <summary>Field number for the "hipchat" field.</summary>
    public const int HipchatFieldNumber = 37;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.HipchatSpec hipchat_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.HipchatSpec Hipchat {
      get { return hipchat_; }
      set {
        hipchat_ = value;
      }
    }

    /// <summary>Field number for the "webhook" field.</summary>
    public const int WebhookFieldNumber = 38;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.WebhookSpec webhook_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.WebhookSpec Webhook {
      get { return webhook_; }
      set {
        webhook_ = value;
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 39;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwner() {
      owner_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConnectionSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConnectionSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TenantRef, other.TenantRef)) return false;
      if (Category != other.Category) return false;
      if (Provider != other.Provider) return false;
      if (SecretName != other.SecretName) return false;
      if (!object.Equals(Athena, other.Athena)) return false;
      if (!object.Equals(AzureStorage, other.AzureStorage)) return false;
      if (!object.Equals(AliCloud, other.AliCloud)) return false;
      if (!object.Equals(BigQuery, other.BigQuery)) return false;
      if (!object.Equals(Bitbucket, other.Bitbucket)) return false;
      if (!object.Equals(Cassandra, other.Cassandra)) return false;
      if (!object.Equals(Digitalocean, other.Digitalocean)) return false;
      if (!object.Equals(Smtp, other.Smtp)) return false;
      if (!object.Equals(Hetzner, other.Hetzner)) return false;
      if (!object.Equals(ImageRegistry, other.ImageRegistry)) return false;
      if (!object.Equals(Github, other.Github)) return false;
      if (!object.Equals(Gitlab, other.Gitlab)) return false;
      if (!object.Equals(Gcpstorage, other.Gcpstorage)) return false;
      if (!object.Equals(Linode, other.Linode)) return false;
      if (!object.Equals(Mongodb, other.Mongodb)) return false;
      if (!object.Equals(Mysql, other.Mysql)) return false;
      if (!object.Equals(Minio, other.Minio)) return false;
      if (!object.Equals(Mssqlserver, other.Mssqlserver)) return false;
      if (!object.Equals(Odbc, other.Odbc)) return false;
      if (!object.Equals(Oracle, other.Oracle)) return false;
      if (!object.Equals(Openstack, other.Openstack)) return false;
      if (!object.Equals(Ovh, other.Ovh)) return false;
      if (!object.Equals(Postgres, other.Postgres)) return false;
      if (!object.Equals(Presto, other.Presto)) return false;
      if (!object.Equals(Redshift, other.Redshift)) return false;
      if (!object.Equals(Snowflake, other.Snowflake)) return false;
      if (!object.Equals(SqlLight, other.SqlLight)) return false;
      if (!object.Equals(Aws, other.Aws)) return false;
      if (!object.Equals(Slack, other.Slack)) return false;
      if (!object.Equals(Flock, other.Flock)) return false;
      if (!object.Equals(Msteam, other.Msteam)) return false;
      if (!object.Equals(MatterMost, other.MatterMost)) return false;
      if (!object.Equals(Hipchat, other.Hipchat)) return false;
      if (!object.Equals(Webhook, other.Webhook)) return false;
      if (Owner != other.Owner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (tenantRef_ != null) hash ^= TenantRef.GetHashCode();
      if (HasCategory) hash ^= Category.GetHashCode();
      if (HasProvider) hash ^= Provider.GetHashCode();
      if (HasSecretName) hash ^= SecretName.GetHashCode();
      if (athena_ != null) hash ^= Athena.GetHashCode();
      if (azureStorage_ != null) hash ^= AzureStorage.GetHashCode();
      if (aliCloud_ != null) hash ^= AliCloud.GetHashCode();
      if (bigQuery_ != null) hash ^= BigQuery.GetHashCode();
      if (bitbucket_ != null) hash ^= Bitbucket.GetHashCode();
      if (cassandra_ != null) hash ^= Cassandra.GetHashCode();
      if (digitalocean_ != null) hash ^= Digitalocean.GetHashCode();
      if (smtp_ != null) hash ^= Smtp.GetHashCode();
      if (hetzner_ != null) hash ^= Hetzner.GetHashCode();
      if (imageRegistry_ != null) hash ^= ImageRegistry.GetHashCode();
      if (github_ != null) hash ^= Github.GetHashCode();
      if (gitlab_ != null) hash ^= Gitlab.GetHashCode();
      if (gcpstorage_ != null) hash ^= Gcpstorage.GetHashCode();
      if (linode_ != null) hash ^= Linode.GetHashCode();
      if (mongodb_ != null) hash ^= Mongodb.GetHashCode();
      if (mysql_ != null) hash ^= Mysql.GetHashCode();
      if (minio_ != null) hash ^= Minio.GetHashCode();
      if (mssqlserver_ != null) hash ^= Mssqlserver.GetHashCode();
      if (odbc_ != null) hash ^= Odbc.GetHashCode();
      if (oracle_ != null) hash ^= Oracle.GetHashCode();
      if (openstack_ != null) hash ^= Openstack.GetHashCode();
      if (ovh_ != null) hash ^= Ovh.GetHashCode();
      if (postgres_ != null) hash ^= Postgres.GetHashCode();
      if (presto_ != null) hash ^= Presto.GetHashCode();
      if (redshift_ != null) hash ^= Redshift.GetHashCode();
      if (snowflake_ != null) hash ^= Snowflake.GetHashCode();
      if (sqlLight_ != null) hash ^= SqlLight.GetHashCode();
      if (aws_ != null) hash ^= Aws.GetHashCode();
      if (slack_ != null) hash ^= Slack.GetHashCode();
      if (flock_ != null) hash ^= Flock.GetHashCode();
      if (msteam_ != null) hash ^= Msteam.GetHashCode();
      if (matterMost_ != null) hash ^= MatterMost.GetHashCode();
      if (hipchat_ != null) hash ^= Hipchat.GetHashCode();
      if (webhook_ != null) hash ^= Webhook.GetHashCode();
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (tenantRef_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TenantRef);
      }
      if (HasCategory) {
        output.WriteRawTag(18);
        output.WriteString(Category);
      }
      if (HasProvider) {
        output.WriteRawTag(26);
        output.WriteString(Provider);
      }
      if (HasSecretName) {
        output.WriteRawTag(34);
        output.WriteString(SecretName);
      }
      if (athena_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Athena);
      }
      if (azureStorage_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(AzureStorage);
      }
      if (aliCloud_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(AliCloud);
      }
      if (bigQuery_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(BigQuery);
      }
      if (bitbucket_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Bitbucket);
      }
      if (cassandra_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Cassandra);
      }
      if (digitalocean_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Digitalocean);
      }
      if (smtp_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Smtp);
      }
      if (hetzner_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Hetzner);
      }
      if (imageRegistry_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(ImageRegistry);
      }
      if (github_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Github);
      }
      if (gitlab_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Gitlab);
      }
      if (gcpstorage_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Gcpstorage);
      }
      if (linode_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Linode);
      }
      if (mongodb_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(Mongodb);
      }
      if (mysql_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Mysql);
      }
      if (minio_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(Minio);
      }
      if (mssqlserver_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(Mssqlserver);
      }
      if (odbc_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(Odbc);
      }
      if (oracle_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(Oracle);
      }
      if (openstack_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(Openstack);
      }
      if (ovh_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(Ovh);
      }
      if (postgres_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(Postgres);
      }
      if (presto_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(Presto);
      }
      if (redshift_ != null) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(Redshift);
      }
      if (snowflake_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(Snowflake);
      }
      if (sqlLight_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(SqlLight);
      }
      if (aws_ != null) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(Aws);
      }
      if (slack_ != null) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(Slack);
      }
      if (flock_ != null) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(Flock);
      }
      if (msteam_ != null) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(Msteam);
      }
      if (matterMost_ != null) {
        output.WriteRawTag(162, 2);
        output.WriteMessage(MatterMost);
      }
      if (hipchat_ != null) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(Hipchat);
      }
      if (webhook_ != null) {
        output.WriteRawTag(178, 2);
        output.WriteMessage(Webhook);
      }
      if (HasOwner) {
        output.WriteRawTag(186, 2);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (tenantRef_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TenantRef);
      }
      if (HasCategory) {
        output.WriteRawTag(18);
        output.WriteString(Category);
      }
      if (HasProvider) {
        output.WriteRawTag(26);
        output.WriteString(Provider);
      }
      if (HasSecretName) {
        output.WriteRawTag(34);
        output.WriteString(SecretName);
      }
      if (athena_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Athena);
      }
      if (azureStorage_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(AzureStorage);
      }
      if (aliCloud_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(AliCloud);
      }
      if (bigQuery_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(BigQuery);
      }
      if (bitbucket_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Bitbucket);
      }
      if (cassandra_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Cassandra);
      }
      if (digitalocean_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Digitalocean);
      }
      if (smtp_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Smtp);
      }
      if (hetzner_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Hetzner);
      }
      if (imageRegistry_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(ImageRegistry);
      }
      if (github_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Github);
      }
      if (gitlab_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Gitlab);
      }
      if (gcpstorage_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Gcpstorage);
      }
      if (linode_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Linode);
      }
      if (mongodb_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(Mongodb);
      }
      if (mysql_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Mysql);
      }
      if (minio_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(Minio);
      }
      if (mssqlserver_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(Mssqlserver);
      }
      if (odbc_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(Odbc);
      }
      if (oracle_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(Oracle);
      }
      if (openstack_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(Openstack);
      }
      if (ovh_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(Ovh);
      }
      if (postgres_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(Postgres);
      }
      if (presto_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(Presto);
      }
      if (redshift_ != null) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(Redshift);
      }
      if (snowflake_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(Snowflake);
      }
      if (sqlLight_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(SqlLight);
      }
      if (aws_ != null) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(Aws);
      }
      if (slack_ != null) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(Slack);
      }
      if (flock_ != null) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(Flock);
      }
      if (msteam_ != null) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(Msteam);
      }
      if (matterMost_ != null) {
        output.WriteRawTag(162, 2);
        output.WriteMessage(MatterMost);
      }
      if (hipchat_ != null) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(Hipchat);
      }
      if (webhook_ != null) {
        output.WriteRawTag(178, 2);
        output.WriteMessage(Webhook);
      }
      if (HasOwner) {
        output.WriteRawTag(186, 2);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (tenantRef_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TenantRef);
      }
      if (HasCategory) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
      }
      if (HasProvider) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Provider);
      }
      if (HasSecretName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SecretName);
      }
      if (athena_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Athena);
      }
      if (azureStorage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AzureStorage);
      }
      if (aliCloud_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AliCloud);
      }
      if (bigQuery_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BigQuery);
      }
      if (bitbucket_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bitbucket);
      }
      if (cassandra_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cassandra);
      }
      if (digitalocean_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Digitalocean);
      }
      if (smtp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Smtp);
      }
      if (hetzner_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hetzner);
      }
      if (imageRegistry_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ImageRegistry);
      }
      if (github_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Github);
      }
      if (gitlab_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Gitlab);
      }
      if (gcpstorage_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Gcpstorage);
      }
      if (linode_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Linode);
      }
      if (mongodb_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Mongodb);
      }
      if (mysql_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Mysql);
      }
      if (minio_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Minio);
      }
      if (mssqlserver_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Mssqlserver);
      }
      if (odbc_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Odbc);
      }
      if (oracle_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Oracle);
      }
      if (openstack_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Openstack);
      }
      if (ovh_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Ovh);
      }
      if (postgres_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Postgres);
      }
      if (presto_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Presto);
      }
      if (redshift_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Redshift);
      }
      if (snowflake_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Snowflake);
      }
      if (sqlLight_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SqlLight);
      }
      if (aws_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Aws);
      }
      if (slack_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Slack);
      }
      if (flock_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Flock);
      }
      if (msteam_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Msteam);
      }
      if (matterMost_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MatterMost);
      }
      if (hipchat_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Hipchat);
      }
      if (webhook_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Webhook);
      }
      if (HasOwner) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConnectionSpec other) {
      if (other == null) {
        return;
      }
      if (other.tenantRef_ != null) {
        if (tenantRef_ == null) {
          TenantRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
        }
        TenantRef.MergeFrom(other.TenantRef);
      }
      if (other.HasCategory) {
        Category = other.Category;
      }
      if (other.HasProvider) {
        Provider = other.Provider;
      }
      if (other.HasSecretName) {
        SecretName = other.SecretName;
      }
      if (other.athena_ != null) {
        if (athena_ == null) {
          Athena = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AthenaSpec();
        }
        Athena.MergeFrom(other.Athena);
      }
      if (other.azureStorage_ != null) {
        if (azureStorage_ == null) {
          AzureStorage = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AzureStorageSpec();
        }
        AzureStorage.MergeFrom(other.AzureStorage);
      }
      if (other.aliCloud_ != null) {
        if (aliCloud_ == null) {
          AliCloud = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AliCloudSpec();
        }
        AliCloud.MergeFrom(other.AliCloud);
      }
      if (other.bigQuery_ != null) {
        if (bigQuery_ == null) {
          BigQuery = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.BigQuerySpec();
        }
        BigQuery.MergeFrom(other.BigQuery);
      }
      if (other.bitbucket_ != null) {
        if (bitbucket_ == null) {
          Bitbucket = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.BitbucketSpec();
        }
        Bitbucket.MergeFrom(other.Bitbucket);
      }
      if (other.cassandra_ != null) {
        if (cassandra_ == null) {
          Cassandra = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.CassandraSpec();
        }
        Cassandra.MergeFrom(other.Cassandra);
      }
      if (other.digitalocean_ != null) {
        if (digitalocean_ == null) {
          Digitalocean = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.DigitalOceanSpec();
        }
        Digitalocean.MergeFrom(other.Digitalocean);
      }
      if (other.smtp_ != null) {
        if (smtp_ == null) {
          Smtp = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.SmtpSpec();
        }
        Smtp.MergeFrom(other.Smtp);
      }
      if (other.hetzner_ != null) {
        if (hetzner_ == null) {
          Hetzner = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.HetznerSpec();
        }
        Hetzner.MergeFrom(other.Hetzner);
      }
      if (other.imageRegistry_ != null) {
        if (imageRegistry_ == null) {
          ImageRegistry = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ImageRegistrySpec();
        }
        ImageRegistry.MergeFrom(other.ImageRegistry);
      }
      if (other.github_ != null) {
        if (github_ == null) {
          Github = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GithubSpec();
        }
        Github.MergeFrom(other.Github);
      }
      if (other.gitlab_ != null) {
        if (gitlab_ == null) {
          Gitlab = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GitlabSpec();
        }
        Gitlab.MergeFrom(other.Gitlab);
      }
      if (other.gcpstorage_ != null) {
        if (gcpstorage_ == null) {
          Gcpstorage = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GcpStorageSpec();
        }
        Gcpstorage.MergeFrom(other.Gcpstorage);
      }
      if (other.linode_ != null) {
        if (linode_ == null) {
          Linode = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LinodeSpec();
        }
        Linode.MergeFrom(other.Linode);
      }
      if (other.mongodb_ != null) {
        if (mongodb_ == null) {
          Mongodb = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MongoDbSpec();
        }
        Mongodb.MergeFrom(other.Mongodb);
      }
      if (other.mysql_ != null) {
        if (mysql_ == null) {
          Mysql = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MySqlSpec();
        }
        Mysql.MergeFrom(other.Mysql);
      }
      if (other.minio_ != null) {
        if (minio_ == null) {
          Minio = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MinioSpec();
        }
        Minio.MergeFrom(other.Minio);
      }
      if (other.mssqlserver_ != null) {
        if (mssqlserver_ == null) {
          Mssqlserver = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MSSqlServerSpec();
        }
        Mssqlserver.MergeFrom(other.Mssqlserver);
      }
      if (other.odbc_ != null) {
        if (odbc_ == null) {
          Odbc = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.OdbcSpec();
        }
        Odbc.MergeFrom(other.Odbc);
      }
      if (other.oracle_ != null) {
        if (oracle_ == null) {
          Oracle = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.OracleSpec();
        }
        Oracle.MergeFrom(other.Oracle);
      }
      if (other.openstack_ != null) {
        if (openstack_ == null) {
          Openstack = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.OpenstackSpec();
        }
        Openstack.MergeFrom(other.Openstack);
      }
      if (other.ovh_ != null) {
        if (ovh_ == null) {
          Ovh = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.OvhSpec();
        }
        Ovh.MergeFrom(other.Ovh);
      }
      if (other.postgres_ != null) {
        if (postgres_ == null) {
          Postgres = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.PostgresSQLSpec();
        }
        Postgres.MergeFrom(other.Postgres);
      }
      if (other.presto_ != null) {
        if (presto_ == null) {
          Presto = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.PrestoSpec();
        }
        Presto.MergeFrom(other.Presto);
      }
      if (other.redshift_ != null) {
        if (redshift_ == null) {
          Redshift = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.RedShiftSpec();
        }
        Redshift.MergeFrom(other.Redshift);
      }
      if (other.snowflake_ != null) {
        if (snowflake_ == null) {
          Snowflake = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.SnowFlakeSpec();
        }
        Snowflake.MergeFrom(other.Snowflake);
      }
      if (other.sqlLight_ != null) {
        if (sqlLight_ == null) {
          SqlLight = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.SqlLightSpec();
        }
        SqlLight.MergeFrom(other.SqlLight);
      }
      if (other.aws_ != null) {
        if (aws_ == null) {
          Aws = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AwsSpec();
        }
        Aws.MergeFrom(other.Aws);
      }
      if (other.slack_ != null) {
        if (slack_ == null) {
          Slack = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.SlackSpec();
        }
        Slack.MergeFrom(other.Slack);
      }
      if (other.flock_ != null) {
        if (flock_ == null) {
          Flock = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.FlockSpec();
        }
        Flock.MergeFrom(other.Flock);
      }
      if (other.msteam_ != null) {
        if (msteam_ == null) {
          Msteam = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MSTeamSpec();
        }
        Msteam.MergeFrom(other.Msteam);
      }
      if (other.matterMost_ != null) {
        if (matterMost_ == null) {
          MatterMost = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MattermostSpec();
        }
        MatterMost.MergeFrom(other.MatterMost);
      }
      if (other.hipchat_ != null) {
        if (hipchat_ == null) {
          Hipchat = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.HipchatSpec();
        }
        Hipchat.MergeFrom(other.Hipchat);
      }
      if (other.webhook_ != null) {
        if (webhook_ == null) {
          Webhook = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.WebhookSpec();
        }
        Webhook.MergeFrom(other.Webhook);
      }
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (tenantRef_ == null) {
              TenantRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(TenantRef);
            break;
          }
          case 18: {
            Category = input.ReadString();
            break;
          }
          case 26: {
            Provider = input.ReadString();
            break;
          }
          case 34: {
            SecretName = input.ReadString();
            break;
          }
          case 42: {
            if (athena_ == null) {
              Athena = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AthenaSpec();
            }
            input.ReadMessage(Athena);
            break;
          }
          case 50: {
            if (azureStorage_ == null) {
              AzureStorage = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AzureStorageSpec();
            }
            input.ReadMessage(AzureStorage);
            break;
          }
          case 58: {
            if (aliCloud_ == null) {
              AliCloud = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AliCloudSpec();
            }
            input.ReadMessage(AliCloud);
            break;
          }
          case 66: {
            if (bigQuery_ == null) {
              BigQuery = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.BigQuerySpec();
            }
            input.ReadMessage(BigQuery);
            break;
          }
          case 74: {
            if (bitbucket_ == null) {
              Bitbucket = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.BitbucketSpec();
            }
            input.ReadMessage(Bitbucket);
            break;
          }
          case 82: {
            if (cassandra_ == null) {
              Cassandra = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.CassandraSpec();
            }
            input.ReadMessage(Cassandra);
            break;
          }
          case 90: {
            if (digitalocean_ == null) {
              Digitalocean = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.DigitalOceanSpec();
            }
            input.ReadMessage(Digitalocean);
            break;
          }
          case 98: {
            if (smtp_ == null) {
              Smtp = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.SmtpSpec();
            }
            input.ReadMessage(Smtp);
            break;
          }
          case 106: {
            if (hetzner_ == null) {
              Hetzner = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.HetznerSpec();
            }
            input.ReadMessage(Hetzner);
            break;
          }
          case 114: {
            if (imageRegistry_ == null) {
              ImageRegistry = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ImageRegistrySpec();
            }
            input.ReadMessage(ImageRegistry);
            break;
          }
          case 122: {
            if (github_ == null) {
              Github = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GithubSpec();
            }
            input.ReadMessage(Github);
            break;
          }
          case 130: {
            if (gitlab_ == null) {
              Gitlab = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GitlabSpec();
            }
            input.ReadMessage(Gitlab);
            break;
          }
          case 138: {
            if (gcpstorage_ == null) {
              Gcpstorage = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GcpStorageSpec();
            }
            input.ReadMessage(Gcpstorage);
            break;
          }
          case 146: {
            if (linode_ == null) {
              Linode = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LinodeSpec();
            }
            input.ReadMessage(Linode);
            break;
          }
          case 154: {
            if (mongodb_ == null) {
              Mongodb = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MongoDbSpec();
            }
            input.ReadMessage(Mongodb);
            break;
          }
          case 162: {
            if (mysql_ == null) {
              Mysql = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MySqlSpec();
            }
            input.ReadMessage(Mysql);
            break;
          }
          case 170: {
            if (minio_ == null) {
              Minio = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MinioSpec();
            }
            input.ReadMessage(Minio);
            break;
          }
          case 178: {
            if (mssqlserver_ == null) {
              Mssqlserver = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MSSqlServerSpec();
            }
            input.ReadMessage(Mssqlserver);
            break;
          }
          case 186: {
            if (odbc_ == null) {
              Odbc = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.OdbcSpec();
            }
            input.ReadMessage(Odbc);
            break;
          }
          case 194: {
            if (oracle_ == null) {
              Oracle = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.OracleSpec();
            }
            input.ReadMessage(Oracle);
            break;
          }
          case 202: {
            if (openstack_ == null) {
              Openstack = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.OpenstackSpec();
            }
            input.ReadMessage(Openstack);
            break;
          }
          case 210: {
            if (ovh_ == null) {
              Ovh = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.OvhSpec();
            }
            input.ReadMessage(Ovh);
            break;
          }
          case 218: {
            if (postgres_ == null) {
              Postgres = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.PostgresSQLSpec();
            }
            input.ReadMessage(Postgres);
            break;
          }
          case 226: {
            if (presto_ == null) {
              Presto = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.PrestoSpec();
            }
            input.ReadMessage(Presto);
            break;
          }
          case 234: {
            if (redshift_ == null) {
              Redshift = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.RedShiftSpec();
            }
            input.ReadMessage(Redshift);
            break;
          }
          case 242: {
            if (snowflake_ == null) {
              Snowflake = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.SnowFlakeSpec();
            }
            input.ReadMessage(Snowflake);
            break;
          }
          case 250: {
            if (sqlLight_ == null) {
              SqlLight = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.SqlLightSpec();
            }
            input.ReadMessage(SqlLight);
            break;
          }
          case 258: {
            if (aws_ == null) {
              Aws = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AwsSpec();
            }
            input.ReadMessage(Aws);
            break;
          }
          case 266: {
            if (slack_ == null) {
              Slack = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.SlackSpec();
            }
            input.ReadMessage(Slack);
            break;
          }
          case 274: {
            if (flock_ == null) {
              Flock = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.FlockSpec();
            }
            input.ReadMessage(Flock);
            break;
          }
          case 282: {
            if (msteam_ == null) {
              Msteam = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MSTeamSpec();
            }
            input.ReadMessage(Msteam);
            break;
          }
          case 290: {
            if (matterMost_ == null) {
              MatterMost = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MattermostSpec();
            }
            input.ReadMessage(MatterMost);
            break;
          }
          case 298: {
            if (hipchat_ == null) {
              Hipchat = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.HipchatSpec();
            }
            input.ReadMessage(Hipchat);
            break;
          }
          case 306: {
            if (webhook_ == null) {
              Webhook = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.WebhookSpec();
            }
            input.ReadMessage(Webhook);
            break;
          }
          case 314: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (tenantRef_ == null) {
              TenantRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(TenantRef);
            break;
          }
          case 18: {
            Category = input.ReadString();
            break;
          }
          case 26: {
            Provider = input.ReadString();
            break;
          }
          case 34: {
            SecretName = input.ReadString();
            break;
          }
          case 42: {
            if (athena_ == null) {
              Athena = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AthenaSpec();
            }
            input.ReadMessage(Athena);
            break;
          }
          case 50: {
            if (azureStorage_ == null) {
              AzureStorage = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AzureStorageSpec();
            }
            input.ReadMessage(AzureStorage);
            break;
          }
          case 58: {
            if (aliCloud_ == null) {
              AliCloud = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AliCloudSpec();
            }
            input.ReadMessage(AliCloud);
            break;
          }
          case 66: {
            if (bigQuery_ == null) {
              BigQuery = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.BigQuerySpec();
            }
            input.ReadMessage(BigQuery);
            break;
          }
          case 74: {
            if (bitbucket_ == null) {
              Bitbucket = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.BitbucketSpec();
            }
            input.ReadMessage(Bitbucket);
            break;
          }
          case 82: {
            if (cassandra_ == null) {
              Cassandra = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.CassandraSpec();
            }
            input.ReadMessage(Cassandra);
            break;
          }
          case 90: {
            if (digitalocean_ == null) {
              Digitalocean = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.DigitalOceanSpec();
            }
            input.ReadMessage(Digitalocean);
            break;
          }
          case 98: {
            if (smtp_ == null) {
              Smtp = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.SmtpSpec();
            }
            input.ReadMessage(Smtp);
            break;
          }
          case 106: {
            if (hetzner_ == null) {
              Hetzner = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.HetznerSpec();
            }
            input.ReadMessage(Hetzner);
            break;
          }
          case 114: {
            if (imageRegistry_ == null) {
              ImageRegistry = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ImageRegistrySpec();
            }
            input.ReadMessage(ImageRegistry);
            break;
          }
          case 122: {
            if (github_ == null) {
              Github = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GithubSpec();
            }
            input.ReadMessage(Github);
            break;
          }
          case 130: {
            if (gitlab_ == null) {
              Gitlab = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GitlabSpec();
            }
            input.ReadMessage(Gitlab);
            break;
          }
          case 138: {
            if (gcpstorage_ == null) {
              Gcpstorage = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GcpStorageSpec();
            }
            input.ReadMessage(Gcpstorage);
            break;
          }
          case 146: {
            if (linode_ == null) {
              Linode = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LinodeSpec();
            }
            input.ReadMessage(Linode);
            break;
          }
          case 154: {
            if (mongodb_ == null) {
              Mongodb = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MongoDbSpec();
            }
            input.ReadMessage(Mongodb);
            break;
          }
          case 162: {
            if (mysql_ == null) {
              Mysql = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MySqlSpec();
            }
            input.ReadMessage(Mysql);
            break;
          }
          case 170: {
            if (minio_ == null) {
              Minio = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MinioSpec();
            }
            input.ReadMessage(Minio);
            break;
          }
          case 178: {
            if (mssqlserver_ == null) {
              Mssqlserver = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MSSqlServerSpec();
            }
            input.ReadMessage(Mssqlserver);
            break;
          }
          case 186: {
            if (odbc_ == null) {
              Odbc = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.OdbcSpec();
            }
            input.ReadMessage(Odbc);
            break;
          }
          case 194: {
            if (oracle_ == null) {
              Oracle = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.OracleSpec();
            }
            input.ReadMessage(Oracle);
            break;
          }
          case 202: {
            if (openstack_ == null) {
              Openstack = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.OpenstackSpec();
            }
            input.ReadMessage(Openstack);
            break;
          }
          case 210: {
            if (ovh_ == null) {
              Ovh = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.OvhSpec();
            }
            input.ReadMessage(Ovh);
            break;
          }
          case 218: {
            if (postgres_ == null) {
              Postgres = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.PostgresSQLSpec();
            }
            input.ReadMessage(Postgres);
            break;
          }
          case 226: {
            if (presto_ == null) {
              Presto = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.PrestoSpec();
            }
            input.ReadMessage(Presto);
            break;
          }
          case 234: {
            if (redshift_ == null) {
              Redshift = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.RedShiftSpec();
            }
            input.ReadMessage(Redshift);
            break;
          }
          case 242: {
            if (snowflake_ == null) {
              Snowflake = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.SnowFlakeSpec();
            }
            input.ReadMessage(Snowflake);
            break;
          }
          case 250: {
            if (sqlLight_ == null) {
              SqlLight = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.SqlLightSpec();
            }
            input.ReadMessage(SqlLight);
            break;
          }
          case 258: {
            if (aws_ == null) {
              Aws = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.AwsSpec();
            }
            input.ReadMessage(Aws);
            break;
          }
          case 266: {
            if (slack_ == null) {
              Slack = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.SlackSpec();
            }
            input.ReadMessage(Slack);
            break;
          }
          case 274: {
            if (flock_ == null) {
              Flock = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.FlockSpec();
            }
            input.ReadMessage(Flock);
            break;
          }
          case 282: {
            if (msteam_ == null) {
              Msteam = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MSTeamSpec();
            }
            input.ReadMessage(Msteam);
            break;
          }
          case 290: {
            if (matterMost_ == null) {
              MatterMost = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.MattermostSpec();
            }
            input.ReadMessage(MatterMost);
            break;
          }
          case 298: {
            if (hipchat_ == null) {
              Hipchat = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.HipchatSpec();
            }
            input.ReadMessage(Hipchat);
            break;
          }
          case 306: {
            if (webhook_ == null) {
              Webhook = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.WebhookSpec();
            }
            input.ReadMessage(Webhook);
            break;
          }
          case 314: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// ConnectionStatus is the observed state of a Connection
  /// </summary>
  public sealed partial class ConnectionStatus : pb::IMessage<ConnectionStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConnectionStatus> _parser = new pb::MessageParser<ConnectionStatus>(() => new ConnectionStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConnectionStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectionStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectionStatus(ConnectionStatus other) : this() {
      conditions_ = other.conditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectionStatus Clone() {
      return new ConnectionStatus(this);
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ConnectionCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(10, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ConnectionCondition.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ConnectionCondition> conditions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ConnectionCondition>();
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ConnectionCondition> Conditions {
      get { return conditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConnectionStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConnectionStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!conditions_.Equals(other.conditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= conditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConnectionStatus other) {
      if (other == null) {
        return;
      }
      conditions_.Add(other.conditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DigitalOceanSpec : pb::IMessage<DigitalOceanSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DigitalOceanSpec> _parser = new pb::MessageParser<DigitalOceanSpec>(() => new DigitalOceanSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DigitalOceanSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DigitalOceanSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DigitalOceanSpec(DigitalOceanSpec other) : this() {
      token_ = other.token_;
      accessKey_ = other.accessKey_;
      secretKey_ = other.secretKey_;
      defaultRegion_ = other.defaultRegion_;
      host_ = other.host_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DigitalOceanSpec Clone() {
      return new DigitalOceanSpec(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private readonly static string TokenDefaultValue = "";

    private string token_;
    /// <summary>
    /// Token for digital ocean
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearToken() {
      token_ = null;
    }

    /// <summary>Field number for the "accessKey" field.</summary>
    public const int AccessKeyFieldNumber = 2;
    private readonly static string AccessKeyDefaultValue = "";

    private string accessKey_;
    /// <summary>
    /// Access Key for digital ocean spaces
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessKey {
      get { return accessKey_ ?? AccessKeyDefaultValue; }
      set {
        accessKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "accessKey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccessKey {
      get { return accessKey_ != null; }
    }
    /// <summary>Clears the value of the "accessKey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccessKey() {
      accessKey_ = null;
    }

    /// <summary>Field number for the "secretKey" field.</summary>
    public const int SecretKeyFieldNumber = 3;
    private readonly static string SecretKeyDefaultValue = "";

    private string secretKey_;
    /// <summary>
    /// StorageSecret Key for digital ocean spaces
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SecretKey {
      get { return secretKey_ ?? SecretKeyDefaultValue; }
      set {
        secretKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "secretKey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSecretKey {
      get { return secretKey_ != null; }
    }
    /// <summary>Clears the value of the "secretKey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSecretKey() {
      secretKey_ = null;
    }

    /// <summary>Field number for the "defaultRegion" field.</summary>
    public const int DefaultRegionFieldNumber = 4;
    private readonly static string DefaultRegionDefaultValue = "";

    private string defaultRegion_;
    /// <summary>
    /// Default digital ocean
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefaultRegion {
      get { return defaultRegion_ ?? DefaultRegionDefaultValue; }
      set {
        defaultRegion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "defaultRegion" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDefaultRegion {
      get { return defaultRegion_ != null; }
    }
    /// <summary>Clears the value of the "defaultRegion" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDefaultRegion() {
      defaultRegion_ = null;
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 5;
    private readonly static string HostDefaultValue = "";

    private string host_;
    /// <summary>
    /// url or connection string
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Host {
      get { return host_ ?? HostDefaultValue; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "host" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHost {
      get { return host_ != null; }
    }
    /// <summary>Clears the value of the "host" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHost() {
      host_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DigitalOceanSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DigitalOceanSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      if (AccessKey != other.AccessKey) return false;
      if (SecretKey != other.SecretKey) return false;
      if (DefaultRegion != other.DefaultRegion) return false;
      if (Host != other.Host) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasToken) hash ^= Token.GetHashCode();
      if (HasAccessKey) hash ^= AccessKey.GetHashCode();
      if (HasSecretKey) hash ^= SecretKey.GetHashCode();
      if (HasDefaultRegion) hash ^= DefaultRegion.GetHashCode();
      if (HasHost) hash ^= Host.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasToken) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (HasAccessKey) {
        output.WriteRawTag(18);
        output.WriteString(AccessKey);
      }
      if (HasSecretKey) {
        output.WriteRawTag(26);
        output.WriteString(SecretKey);
      }
      if (HasDefaultRegion) {
        output.WriteRawTag(34);
        output.WriteString(DefaultRegion);
      }
      if (HasHost) {
        output.WriteRawTag(42);
        output.WriteString(Host);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasToken) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (HasAccessKey) {
        output.WriteRawTag(18);
        output.WriteString(AccessKey);
      }
      if (HasSecretKey) {
        output.WriteRawTag(26);
        output.WriteString(SecretKey);
      }
      if (HasDefaultRegion) {
        output.WriteRawTag(34);
        output.WriteString(DefaultRegion);
      }
      if (HasHost) {
        output.WriteRawTag(42);
        output.WriteString(Host);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (HasAccessKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessKey);
      }
      if (HasSecretKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SecretKey);
      }
      if (HasDefaultRegion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultRegion);
      }
      if (HasHost) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DigitalOceanSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      if (other.HasAccessKey) {
        AccessKey = other.AccessKey;
      }
      if (other.HasSecretKey) {
        SecretKey = other.SecretKey;
      }
      if (other.HasDefaultRegion) {
        DefaultRegion = other.DefaultRegion;
      }
      if (other.HasHost) {
        Host = other.Host;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 18: {
            AccessKey = input.ReadString();
            break;
          }
          case 26: {
            SecretKey = input.ReadString();
            break;
          }
          case 34: {
            DefaultRegion = input.ReadString();
            break;
          }
          case 42: {
            Host = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 18: {
            AccessKey = input.ReadString();
            break;
          }
          case 26: {
            SecretKey = input.ReadString();
            break;
          }
          case 34: {
            DefaultRegion = input.ReadString();
            break;
          }
          case 42: {
            Host = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FlockSpec : pb::IMessage<FlockSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FlockSpec> _parser = new pb::MessageParser<FlockSpec>(() => new FlockSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FlockSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlockSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlockSpec(FlockSpec other) : this() {
      url_ = other.url_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlockSpec Clone() {
      return new FlockSpec(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUrl() {
      url_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FlockSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FlockSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUrl) hash ^= Url.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FlockSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GcpStorageSpec : pb::IMessage<GcpStorageSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GcpStorageSpec> _parser = new pb::MessageParser<GcpStorageSpec>(() => new GcpStorageSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GcpStorageSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GcpStorageSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GcpStorageSpec(GcpStorageSpec other) : this() {
      keyFile_ = other.keyFile_;
      project_ = other.project_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GcpStorageSpec Clone() {
      return new GcpStorageSpec(this);
    }

    /// <summary>Field number for the "keyFile" field.</summary>
    public const int KeyFileFieldNumber = 1;
    private readonly static string KeyFileDefaultValue = "";

    private string keyFile_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string KeyFile {
      get { return keyFile_ ?? KeyFileDefaultValue; }
      set {
        keyFile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "keyFile" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasKeyFile {
      get { return keyFile_ != null; }
    }
    /// <summary>Clears the value of the "keyFile" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearKeyFile() {
      keyFile_ = null;
    }

    /// <summary>Field number for the "project" field.</summary>
    public const int ProjectFieldNumber = 2;
    private readonly static string ProjectDefaultValue = "";

    private string project_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Project {
      get { return project_ ?? ProjectDefaultValue; }
      set {
        project_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "project" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProject {
      get { return project_ != null; }
    }
    /// <summary>Clears the value of the "project" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProject() {
      project_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GcpStorageSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GcpStorageSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (KeyFile != other.KeyFile) return false;
      if (Project != other.Project) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasKeyFile) hash ^= KeyFile.GetHashCode();
      if (HasProject) hash ^= Project.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasKeyFile) {
        output.WriteRawTag(10);
        output.WriteString(KeyFile);
      }
      if (HasProject) {
        output.WriteRawTag(18);
        output.WriteString(Project);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasKeyFile) {
        output.WriteRawTag(10);
        output.WriteString(KeyFile);
      }
      if (HasProject) {
        output.WriteRawTag(18);
        output.WriteString(Project);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasKeyFile) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KeyFile);
      }
      if (HasProject) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Project);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GcpStorageSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasKeyFile) {
        KeyFile = other.KeyFile;
      }
      if (other.HasProject) {
        Project = other.Project;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            KeyFile = input.ReadString();
            break;
          }
          case 18: {
            Project = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            KeyFile = input.ReadString();
            break;
          }
          case 18: {
            Project = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GithubSpec : pb::IMessage<GithubSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GithubSpec> _parser = new pb::MessageParser<GithubSpec>(() => new GithubSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GithubSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GithubSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GithubSpec(GithubSpec other) : this() {
      token_ = other.token_;
      userName_ = other.userName_;
      ssh_ = other.ssh_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GithubSpec Clone() {
      return new GithubSpec(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private readonly static string TokenDefaultValue = "";

    private string token_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearToken() {
      token_ = null;
    }

    /// <summary>Field number for the "userName" field.</summary>
    public const int UserNameFieldNumber = 2;
    private readonly static string UserNameDefaultValue = "";

    private string userName_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_ ?? UserNameDefaultValue; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "userName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserName {
      get { return userName_ != null; }
    }
    /// <summary>Clears the value of the "userName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserName() {
      userName_ = null;
    }

    /// <summary>Field number for the "ssh" field.</summary>
    public const int SshFieldNumber = 3;
    private readonly static string SshDefaultValue = "";

    private string ssh_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ssh {
      get { return ssh_ ?? SshDefaultValue; }
      set {
        ssh_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ssh" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSsh {
      get { return ssh_ != null; }
    }
    /// <summary>Clears the value of the "ssh" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSsh() {
      ssh_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GithubSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GithubSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      if (UserName != other.UserName) return false;
      if (Ssh != other.Ssh) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasToken) hash ^= Token.GetHashCode();
      if (HasUserName) hash ^= UserName.GetHashCode();
      if (HasSsh) hash ^= Ssh.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasToken) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (HasUserName) {
        output.WriteRawTag(18);
        output.WriteString(UserName);
      }
      if (HasSsh) {
        output.WriteRawTag(26);
        output.WriteString(Ssh);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasToken) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (HasUserName) {
        output.WriteRawTag(18);
        output.WriteString(UserName);
      }
      if (HasSsh) {
        output.WriteRawTag(26);
        output.WriteString(Ssh);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (HasUserName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (HasSsh) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ssh);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GithubSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      if (other.HasUserName) {
        UserName = other.UserName;
      }
      if (other.HasSsh) {
        Ssh = other.Ssh;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
          case 26: {
            Ssh = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
          case 26: {
            Ssh = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GitlabSpec : pb::IMessage<GitlabSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GitlabSpec> _parser = new pb::MessageParser<GitlabSpec>(() => new GitlabSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GitlabSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GitlabSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GitlabSpec(GitlabSpec other) : this() {
      token_ = other.token_;
      ssh_ = other.ssh_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GitlabSpec Clone() {
      return new GitlabSpec(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private readonly static string TokenDefaultValue = "";

    private string token_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearToken() {
      token_ = null;
    }

    /// <summary>Field number for the "ssh" field.</summary>
    public const int SshFieldNumber = 2;
    private readonly static string SshDefaultValue = "";

    private string ssh_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ssh {
      get { return ssh_ ?? SshDefaultValue; }
      set {
        ssh_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ssh" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSsh {
      get { return ssh_ != null; }
    }
    /// <summary>Clears the value of the "ssh" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSsh() {
      ssh_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GitlabSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GitlabSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      if (Ssh != other.Ssh) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasToken) hash ^= Token.GetHashCode();
      if (HasSsh) hash ^= Ssh.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasToken) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (HasSsh) {
        output.WriteRawTag(18);
        output.WriteString(Ssh);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasToken) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (HasSsh) {
        output.WriteRawTag(18);
        output.WriteString(Ssh);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (HasSsh) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ssh);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GitlabSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      if (other.HasSsh) {
        Ssh = other.Ssh;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 18: {
            Ssh = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 18: {
            Ssh = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HetznerSpec : pb::IMessage<HetznerSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HetznerSpec> _parser = new pb::MessageParser<HetznerSpec>(() => new HetznerSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HetznerSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HetznerSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HetznerSpec(HetznerSpec other) : this() {
      token_ = other.token_;
      ssh_ = other.ssh_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HetznerSpec Clone() {
      return new HetznerSpec(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private readonly static string TokenDefaultValue = "";

    private string token_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearToken() {
      token_ = null;
    }

    /// <summary>Field number for the "ssh" field.</summary>
    public const int SshFieldNumber = 2;
    private readonly static string SshDefaultValue = "";

    private string ssh_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ssh {
      get { return ssh_ ?? SshDefaultValue; }
      set {
        ssh_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ssh" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSsh {
      get { return ssh_ != null; }
    }
    /// <summary>Clears the value of the "ssh" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSsh() {
      ssh_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HetznerSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HetznerSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      if (Ssh != other.Ssh) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasToken) hash ^= Token.GetHashCode();
      if (HasSsh) hash ^= Ssh.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasToken) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (HasSsh) {
        output.WriteRawTag(18);
        output.WriteString(Ssh);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasToken) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (HasSsh) {
        output.WriteRawTag(18);
        output.WriteString(Ssh);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (HasSsh) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ssh);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HetznerSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      if (other.HasSsh) {
        Ssh = other.Ssh;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 18: {
            Ssh = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 18: {
            Ssh = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HipchatSpec : pb::IMessage<HipchatSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HipchatSpec> _parser = new pb::MessageParser<HipchatSpec>(() => new HipchatSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HipchatSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HipchatSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HipchatSpec(HipchatSpec other) : this() {
      url_ = other.url_;
      token_ = other.token_;
      room_ = other.room_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HipchatSpec Clone() {
      return new HipchatSpec(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private readonly static string TokenDefaultValue = "";

    private string token_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearToken() {
      token_ = null;
    }

    /// <summary>Field number for the "room" field.</summary>
    public const int RoomFieldNumber = 3;
    private readonly static string RoomDefaultValue = "";

    private string room_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Room {
      get { return room_ ?? RoomDefaultValue; }
      set {
        room_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "room" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRoom {
      get { return room_ != null; }
    }
    /// <summary>Clears the value of the "room" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRoom() {
      room_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HipchatSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HipchatSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      if (Token != other.Token) return false;
      if (Room != other.Room) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasToken) hash ^= Token.GetHashCode();
      if (HasRoom) hash ^= Room.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (HasToken) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (HasRoom) {
        output.WriteRawTag(26);
        output.WriteString(Room);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (HasToken) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (HasRoom) {
        output.WriteRawTag(26);
        output.WriteString(Room);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (HasRoom) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Room);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HipchatSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      if (other.HasRoom) {
        Room = other.Room;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 26: {
            Room = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 26: {
            Room = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ImageRegistrySpec : pb::IMessage<ImageRegistrySpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ImageRegistrySpec> _parser = new pb::MessageParser<ImageRegistrySpec>(() => new ImageRegistrySpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImageRegistrySpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageRegistrySpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageRegistrySpec(ImageRegistrySpec other) : this() {
      host_ = other.host_;
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageRegistrySpec Clone() {
      return new ImageRegistrySpec(this);
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 1;
    private readonly static string HostDefaultValue = "";

    private string host_;
    /// <summary>
    /// Hostname for the image registry
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Host {
      get { return host_ ?? HostDefaultValue; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "host" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHost {
      get { return host_ != null; }
    }
    /// <summary>Clears the value of the "host" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHost() {
      host_ = null;
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 2;
    private readonly static string UsernameDefaultValue = "";

    private string username_;
    /// <summary>
    /// Username for image registry
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_ ?? UsernameDefaultValue; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "username" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUsername {
      get { return username_ != null; }
    }
    /// <summary>Clears the value of the "username" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUsername() {
      username_ = null;
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 3;
    private readonly static string PasswordDefaultValue = "";

    private string password_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_ ?? PasswordDefaultValue; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "password" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPassword {
      get { return password_ != null; }
    }
    /// <summary>Clears the value of the "password" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPassword() {
      password_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImageRegistrySpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImageRegistrySpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Host != other.Host) return false;
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHost) hash ^= Host.GetHashCode();
      if (HasUsername) hash ^= Username.GetHashCode();
      if (HasPassword) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasHost) {
        output.WriteRawTag(10);
        output.WriteString(Host);
      }
      if (HasUsername) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHost) {
        output.WriteRawTag(10);
        output.WriteString(Host);
      }
      if (HasUsername) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasHost) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (HasUsername) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (HasPassword) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImageRegistrySpec other) {
      if (other == null) {
        return;
      }
      if (other.HasHost) {
        Host = other.Host;
      }
      if (other.HasUsername) {
        Username = other.Username;
      }
      if (other.HasPassword) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Host = input.ReadString();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Host = input.ReadString();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Lab is a namespace used for training and data analysis operations.
  /// +kubebuilder:object:root=true
  /// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
  /// +kubebuilder:printcolumn:name="Git SecretRepo",type="string",JSONPath=".spec.gitrepoName"
  /// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
  /// +kubebuilder:resource:path=labs,singular=lab,categories={infra,modela,all}
  /// +kubebuilder:subresource:status
  /// </summary>
  public sealed partial class Lab : pb::IMessage<Lab>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Lab> _parser = new pb::MessageParser<Lab>(() => new Lab());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Lab> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Lab() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Lab(Lab other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Lab Clone() {
      return new Lab(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LabSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LabSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LabStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LabStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Lab);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Lab other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Lab other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LabSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LabStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LabSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LabStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LabSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LabStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// LabCondition describes the state of a lab at a certain point.
  /// </summary>
  public sealed partial class LabCondition : pb::IMessage<LabCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LabCondition> _parser = new pb::MessageParser<LabCondition>(() => new LabCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LabCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabCondition(LabCondition other) : this() {
      type_ = other.type_;
      status_ = other.status_;
      lastTransitionTime_ = other.lastTransitionTime_ != null ? other.lastTransitionTime_.Clone() : null;
      reason_ = other.reason_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabCondition Clone() {
      return new LabCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// Type of account condition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    /// <summary>
    /// Status of the condition, one of True, False, Unknown.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "lastTransitionTime" field.</summary>
    public const int LastTransitionTimeFieldNumber = 3;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastTransitionTime_;
    /// <summary>
    /// Last time the condition transitioned from one status to another.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastTransitionTime {
      get { return lastTransitionTime_; }
      set {
        lastTransitionTime_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 4;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// The reason for the condition's last transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 5;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// A human readable message indicating details about the transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LabCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LabCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LastTransitionTime, other.LastTransitionTime)) return false;
      if (Reason != other.Reason) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (lastTransitionTime_ != null) hash ^= LastTransitionTime.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (lastTransitionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTransitionTime);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LabCondition other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.lastTransitionTime_ != null) {
        if (lastTransitionTime_ == null) {
          LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastTransitionTime.MergeFrom(other.LastTransitionTime);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// LabList is a list of labs
  /// </summary>
  public sealed partial class LabList : pb::IMessage<LabList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LabList> _parser = new pb::MessageParser<LabList>(() => new LabList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LabList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabList(LabList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabList Clone() {
      return new LabList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Lab> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Lab.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Lab> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Lab>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Lab> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LabList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LabList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LabList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// LabSpec defines the desired state of a Lab
  /// </summary>
  public sealed partial class LabSpec : pb::IMessage<LabSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LabSpec> _parser = new pb::MessageParser<LabSpec>(() => new LabSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LabSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabSpec(LabSpec other) : this() {
      description_ = other.description_;
      tenantRef_ = other.tenantRef_ != null ? other.tenantRef_.Clone() : null;
      quotaSpec_ = other.quotaSpec_ != null ? other.quotaSpec_.Clone() : null;
      limitRangeSpec_ = other.limitRangeSpec_ != null ? other.limitRangeSpec_.Clone() : null;
      clusterName_ = other.clusterName_;
      owner_ = other.owner_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabSpec Clone() {
      return new LabSpec(this);
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 1;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// Description is a user provided description
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:default:=""
    /// +kubebuilder:validation:MaxLength=256
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "tenantRef" field.</summary>
    public const int TenantRefFieldNumber = 2;
    private global::K8S.Io.Api.Core.V1.ObjectReference tenantRef_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// TenantRef is a reference to the tenant owning this lab
    /// Default to default tenant.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Api.Core.V1.ObjectReference TenantRef {
      get { return tenantRef_; }
      set {
        tenantRef_ = value;
      }
    }

    /// <summary>Field number for the "quotaSpec" field.</summary>
    public const int QuotaSpecFieldNumber = 3;
    private global::K8S.Io.Api.Core.V1.ResourceQuotaSpec quotaSpec_;
    /// <summary>
    /// QuotaSpec is quoute specification for the lab namespace.
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Api.Core.V1.ResourceQuotaSpec QuotaSpec {
      get { return quotaSpec_; }
      set {
        quotaSpec_ = value;
      }
    }

    /// <summary>Field number for the "limitRangeSpec" field.</summary>
    public const int LimitRangeSpecFieldNumber = 4;
    private global::K8S.Io.Api.Core.V1.LimitRangeSpec limitRangeSpec_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Api.Core.V1.LimitRangeSpec LimitRangeSpec {
      get { return limitRangeSpec_; }
      set {
        limitRangeSpec_ = value;
      }
    }

    /// <summary>Field number for the "clusterName" field.</summary>
    public const int ClusterNameFieldNumber = 5;
    private readonly static string ClusterNameDefaultValue = "";

    private string clusterName_;
    /// <summary>
    /// ClusterName is the name of a remote cluster that is used to execute jobs for this lab
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterName {
      get { return clusterName_ ?? ClusterNameDefaultValue; }
      set {
        clusterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clusterName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClusterName {
      get { return clusterName_ != null; }
    }
    /// <summary>Clears the value of the "clusterName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClusterName() {
      clusterName_ = null;
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 6;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// The owner account name
    /// +kubebuilder:default:="no-one"
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwner() {
      owner_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LabSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LabSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Description != other.Description) return false;
      if (!object.Equals(TenantRef, other.TenantRef)) return false;
      if (!object.Equals(QuotaSpec, other.QuotaSpec)) return false;
      if (!object.Equals(LimitRangeSpec, other.LimitRangeSpec)) return false;
      if (ClusterName != other.ClusterName) return false;
      if (Owner != other.Owner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDescription) hash ^= Description.GetHashCode();
      if (tenantRef_ != null) hash ^= TenantRef.GetHashCode();
      if (quotaSpec_ != null) hash ^= QuotaSpec.GetHashCode();
      if (limitRangeSpec_ != null) hash ^= LimitRangeSpec.GetHashCode();
      if (HasClusterName) hash ^= ClusterName.GetHashCode();
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDescription) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      if (tenantRef_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TenantRef);
      }
      if (quotaSpec_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(QuotaSpec);
      }
      if (limitRangeSpec_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LimitRangeSpec);
      }
      if (HasClusterName) {
        output.WriteRawTag(42);
        output.WriteString(ClusterName);
      }
      if (HasOwner) {
        output.WriteRawTag(50);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDescription) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      if (tenantRef_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TenantRef);
      }
      if (quotaSpec_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(QuotaSpec);
      }
      if (limitRangeSpec_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LimitRangeSpec);
      }
      if (HasClusterName) {
        output.WriteRawTag(42);
        output.WriteString(ClusterName);
      }
      if (HasOwner) {
        output.WriteRawTag(50);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (tenantRef_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TenantRef);
      }
      if (quotaSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QuotaSpec);
      }
      if (limitRangeSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LimitRangeSpec);
      }
      if (HasClusterName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterName);
      }
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LabSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.tenantRef_ != null) {
        if (tenantRef_ == null) {
          TenantRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
        }
        TenantRef.MergeFrom(other.TenantRef);
      }
      if (other.quotaSpec_ != null) {
        if (quotaSpec_ == null) {
          QuotaSpec = new global::K8S.Io.Api.Core.V1.ResourceQuotaSpec();
        }
        QuotaSpec.MergeFrom(other.QuotaSpec);
      }
      if (other.limitRangeSpec_ != null) {
        if (limitRangeSpec_ == null) {
          LimitRangeSpec = new global::K8S.Io.Api.Core.V1.LimitRangeSpec();
        }
        LimitRangeSpec.MergeFrom(other.LimitRangeSpec);
      }
      if (other.HasClusterName) {
        ClusterName = other.ClusterName;
      }
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 18: {
            if (tenantRef_ == null) {
              TenantRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(TenantRef);
            break;
          }
          case 26: {
            if (quotaSpec_ == null) {
              QuotaSpec = new global::K8S.Io.Api.Core.V1.ResourceQuotaSpec();
            }
            input.ReadMessage(QuotaSpec);
            break;
          }
          case 34: {
            if (limitRangeSpec_ == null) {
              LimitRangeSpec = new global::K8S.Io.Api.Core.V1.LimitRangeSpec();
            }
            input.ReadMessage(LimitRangeSpec);
            break;
          }
          case 42: {
            ClusterName = input.ReadString();
            break;
          }
          case 50: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 18: {
            if (tenantRef_ == null) {
              TenantRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(TenantRef);
            break;
          }
          case 26: {
            if (quotaSpec_ == null) {
              QuotaSpec = new global::K8S.Io.Api.Core.V1.ResourceQuotaSpec();
            }
            input.ReadMessage(QuotaSpec);
            break;
          }
          case 34: {
            if (limitRangeSpec_ == null) {
              LimitRangeSpec = new global::K8S.Io.Api.Core.V1.LimitRangeSpec();
            }
            input.ReadMessage(LimitRangeSpec);
            break;
          }
          case 42: {
            ClusterName = input.ReadString();
            break;
          }
          case 50: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// LabStatus is the observed state of a Lab
  /// </summary>
  public sealed partial class LabStatus : pb::IMessage<LabStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LabStatus> _parser = new pb::MessageParser<LabStatus>(() => new LabStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LabStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabStatus(LabStatus other) : this() {
      conditions_ = other.conditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabStatus Clone() {
      return new LabStatus(this);
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LabCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(10, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LabCondition.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LabCondition> conditions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LabCondition>();
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LabCondition> Conditions {
      get { return conditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LabStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LabStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!conditions_.Equals(other.conditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= conditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LabStatus other) {
      if (other == null) {
        return;
      }
      conditions_.Add(other.conditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// +kubebuilder:subresource:status
  /// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
  /// +kubebuilder:printcolumn:name="Type",type="string",JSONPath=".spec.type",description=""
  /// +kubebuilder:printcolumn:name="Expire At",type="date",JSONPath=".status.expireAt",description=""
  /// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
  /// +kubebuilder:resource:path=licenses,singular=license,categories={infra,modela}
  /// License is an abstraction that represent the cluster wide license
  /// as obtained from Modela. The license is store inside a a secret
  /// </summary>
  public sealed partial class License : pb::IMessage<License>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<License> _parser = new pb::MessageParser<License>(() => new License());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<License> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public License() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public License(License other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public License Clone() {
      return new License(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LicenseSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LicenseSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LicenseStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LicenseStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as License);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(License other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(License other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LicenseSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LicenseStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LicenseSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LicenseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LicenseSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LicenseStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// LicenseCondition describes the state of the license at a certain point.
  /// </summary>
  public sealed partial class LicenseCondition : pb::IMessage<LicenseCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LicenseCondition> _parser = new pb::MessageParser<LicenseCondition>(() => new LicenseCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LicenseCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LicenseCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LicenseCondition(LicenseCondition other) : this() {
      type_ = other.type_;
      status_ = other.status_;
      lastTransitionTime_ = other.lastTransitionTime_ != null ? other.lastTransitionTime_.Clone() : null;
      reason_ = other.reason_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LicenseCondition Clone() {
      return new LicenseCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// Type of condition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    /// <summary>
    /// Status of the condition, one of True, False, Unknown.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "lastTransitionTime" field.</summary>
    public const int LastTransitionTimeFieldNumber = 3;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastTransitionTime_;
    /// <summary>
    /// Last time the condition transitioned from one status to another.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastTransitionTime {
      get { return lastTransitionTime_; }
      set {
        lastTransitionTime_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 4;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// The reason for the condition's last transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 5;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// A human readable message indicating details about the transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LicenseCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LicenseCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LastTransitionTime, other.LastTransitionTime)) return false;
      if (Reason != other.Reason) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (lastTransitionTime_ != null) hash ^= LastTransitionTime.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (lastTransitionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTransitionTime);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LicenseCondition other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.lastTransitionTime_ != null) {
        if (lastTransitionTime_ == null) {
          LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastTransitionTime.MergeFrom(other.LastTransitionTime);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// LicenseList is a list of License
  /// </summary>
  public sealed partial class LicenseList : pb::IMessage<LicenseList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LicenseList> _parser = new pb::MessageParser<LicenseList>(() => new LicenseList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LicenseList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LicenseList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LicenseList(LicenseList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LicenseList Clone() {
      return new LicenseList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.License> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.License.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.License> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.License>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.License> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LicenseList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LicenseList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LicenseList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// LicenseSpec defines the desired state of License
  /// </summary>
  public sealed partial class LicenseSpec : pb::IMessage<LicenseSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LicenseSpec> _parser = new pb::MessageParser<LicenseSpec>(() => new LicenseSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LicenseSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LicenseSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LicenseSpec(LicenseSpec other) : this() {
      _hasBits0 = other._hasBits0;
      tenantRef_ = other.tenantRef_ != null ? other.tenantRef_.Clone() : null;
      secretName_ = other.secretName_;
      owner_ = other.owner_;
      email_ = other.email_;
      trialStart_ = other.trialStart_ != null ? other.trialStart_.Clone() : null;
      trialEnd_ = other.trialEnd_ != null ? other.trialEnd_.Clone() : null;
      maxProducts_ = other.maxProducts_;
      maxTrainers_ = other.maxTrainers_;
      maxServers_ = other.maxServers_;
      maxUsers_ = other.maxUsers_;
      maxDataPlanes_ = other.maxDataPlanes_;
      forecast_ = other.forecast_;
      nlp_ = other.nlp_;
      vision_ = other.vision_;
      chatbot_ = other.chatbot_;
      productName_ = other.productName_;
      priceName_ = other.priceName_;
      expireAt_ = other.expireAt_ != null ? other.expireAt_.Clone() : null;
      notifierName_ = other.notifierName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LicenseSpec Clone() {
      return new LicenseSpec(this);
    }

    /// <summary>Field number for the "tenantRef" field.</summary>
    public const int TenantRefFieldNumber = 1;
    private global::K8S.Io.Api.Core.V1.ObjectReference tenantRef_;
    /// <summary>
    /// Reference to the tenant owning this license
    /// +kubebuilder:validation:Optional
    /// Default to default tenant.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Api.Core.V1.ObjectReference TenantRef {
      get { return tenantRef_; }
      set {
        tenantRef_ = value;
      }
    }

    /// <summary>Field number for the "secretName" field.</summary>
    public const int SecretNameFieldNumber = 2;
    private readonly static string SecretNameDefaultValue = "";

    private string secretName_;
    /// <summary>
    /// The secret containing the license token
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:MaxLength=63
    /// +kubebuilder:validation:MinLength=1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SecretName {
      get { return secretName_ ?? SecretNameDefaultValue; }
      set {
        secretName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "secretName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSecretName {
      get { return secretName_ != null; }
    }
    /// <summary>Clears the value of the "secretName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSecretName() {
      secretName_ = null;
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 3;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// Owner is the account owning this license
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwner() {
      owner_ = null;
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 4;
    private readonly static string EmailDefaultValue = "";

    private string email_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_ ?? EmailDefaultValue; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "email" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEmail {
      get { return email_ != null; }
    }
    /// <summary>Clears the value of the "email" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEmail() {
      email_ = null;
    }

    /// <summary>Field number for the "trialStart" field.</summary>
    public const int TrialStartFieldNumber = 5;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time trialStart_;
    /// <summary>
    /// TrialStart is the start date for free trial
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time TrialStart {
      get { return trialStart_; }
      set {
        trialStart_ = value;
      }
    }

    /// <summary>Field number for the "trialEnd" field.</summary>
    public const int TrialEndFieldNumber = 6;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time trialEnd_;
    /// <summary>
    /// TrialEnd when free trial end
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time TrialEnd {
      get { return trialEnd_; }
      set {
        trialEnd_ = value;
      }
    }

    /// <summary>Field number for the "maxProducts" field.</summary>
    public const int MaxProductsFieldNumber = 7;
    private readonly static int MaxProductsDefaultValue = 0;

    private int maxProducts_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxProducts {
      get { if ((_hasBits0 & 1) != 0) { return maxProducts_; } else { return MaxProductsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        maxProducts_ = value;
      }
    }
    /// <summary>Gets whether the "maxProducts" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMaxProducts {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "maxProducts" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMaxProducts() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "maxTrainers" field.</summary>
    public const int MaxTrainersFieldNumber = 8;
    private readonly static int MaxTrainersDefaultValue = 0;

    private int maxTrainers_;
    /// <summary>
    /// MaxTrainers is max number of trainers
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxTrainers {
      get { if ((_hasBits0 & 2) != 0) { return maxTrainers_; } else { return MaxTrainersDefaultValue; } }
      set {
        _hasBits0 |= 2;
        maxTrainers_ = value;
      }
    }
    /// <summary>Gets whether the "maxTrainers" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMaxTrainers {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "maxTrainers" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMaxTrainers() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "maxServers" field.</summary>
    public const int MaxServersFieldNumber = 9;
    private readonly static int MaxServersDefaultValue = 0;

    private int maxServers_;
    /// <summary>
    /// MaxServers is the max number of worker nodes
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxServers {
      get { if ((_hasBits0 & 4) != 0) { return maxServers_; } else { return MaxServersDefaultValue; } }
      set {
        _hasBits0 |= 4;
        maxServers_ = value;
      }
    }
    /// <summary>Gets whether the "maxServers" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMaxServers {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "maxServers" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMaxServers() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "maxUsers" field.</summary>
    public const int MaxUsersFieldNumber = 10;
    private readonly static int MaxUsersDefaultValue = 0;

    private int maxUsers_;
    /// <summary>
    /// MaxUsers is the max number of active accounts
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxUsers {
      get { if ((_hasBits0 & 8) != 0) { return maxUsers_; } else { return MaxUsersDefaultValue; } }
      set {
        _hasBits0 |= 8;
        maxUsers_ = value;
      }
    }
    /// <summary>Gets whether the "maxUsers" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMaxUsers {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "maxUsers" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMaxUsers() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "maxDataPlanes" field.</summary>
    public const int MaxDataPlanesFieldNumber = 11;
    private readonly static int MaxDataPlanesDefaultValue = 0;

    private int maxDataPlanes_;
    /// <summary>
    /// max data planes
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxDataPlanes {
      get { if ((_hasBits0 & 16) != 0) { return maxDataPlanes_; } else { return MaxDataPlanesDefaultValue; } }
      set {
        _hasBits0 |= 16;
        maxDataPlanes_ = value;
      }
    }
    /// <summary>Gets whether the "maxDataPlanes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMaxDataPlanes {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "maxDataPlanes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMaxDataPlanes() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "forecast" field.</summary>
    public const int ForecastFieldNumber = 12;
    private readonly static bool ForecastDefaultValue = false;

    private bool forecast_;
    /// <summary>
    /// Forcast denote if forecast feature supported
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Forecast {
      get { if ((_hasBits0 & 32) != 0) { return forecast_; } else { return ForecastDefaultValue; } }
      set {
        _hasBits0 |= 32;
        forecast_ = value;
      }
    }
    /// <summary>Gets whether the "forecast" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasForecast {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "forecast" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearForecast() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "nlp" field.</summary>
    public const int NlpFieldNumber = 13;
    private readonly static bool NlpDefaultValue = false;

    private bool nlp_;
    /// <summary>
    /// NLP is nlp feature supported
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Nlp {
      get { if ((_hasBits0 & 64) != 0) { return nlp_; } else { return NlpDefaultValue; } }
      set {
        _hasBits0 |= 64;
        nlp_ = value;
      }
    }
    /// <summary>Gets whether the "nlp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNlp {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "nlp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNlp() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "vision" field.</summary>
    public const int VisionFieldNumber = 14;
    private readonly static bool VisionDefaultValue = false;

    private bool vision_;
    /// <summary>
    /// Is vision feature supported
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Vision {
      get { if ((_hasBits0 & 128) != 0) { return vision_; } else { return VisionDefaultValue; } }
      set {
        _hasBits0 |= 128;
        vision_ = value;
      }
    }
    /// <summary>Gets whether the "vision" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVision {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "vision" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVision() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "chatbot" field.</summary>
    public const int ChatbotFieldNumber = 15;
    private readonly static bool ChatbotDefaultValue = false;

    private bool chatbot_;
    /// <summary>
    /// Is chatbot feature supported
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Chatbot {
      get { if ((_hasBits0 & 256) != 0) { return chatbot_; } else { return ChatbotDefaultValue; } }
      set {
        _hasBits0 |= 256;
        chatbot_ = value;
      }
    }
    /// <summary>Gets whether the "chatbot" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasChatbot {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "chatbot" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearChatbot() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "productName" field.</summary>
    public const int ProductNameFieldNumber = 16;
    private readonly static string ProductNameDefaultValue = "";

    private string productName_;
    /// <summary>
    /// The product name
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProductName {
      get { return productName_ ?? ProductNameDefaultValue; }
      set {
        productName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "productName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProductName {
      get { return productName_ != null; }
    }
    /// <summary>Clears the value of the "productName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProductName() {
      productName_ = null;
    }

    /// <summary>Field number for the "priceName" field.</summary>
    public const int PriceNameFieldNumber = 17;
    private readonly static string PriceNameDefaultValue = "";

    private string priceName_;
    /// <summary>
    /// The price name
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceName {
      get { return priceName_ ?? PriceNameDefaultValue; }
      set {
        priceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "priceName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPriceName {
      get { return priceName_ != null; }
    }
    /// <summary>Clears the value of the "priceName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPriceName() {
      priceName_ = null;
    }

    /// <summary>Field number for the "expireAt" field.</summary>
    public const int ExpireAtFieldNumber = 18;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time expireAt_;
    /// <summary>
    /// When the license expire
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time ExpireAt {
      get { return expireAt_; }
      set {
        expireAt_ = value;
      }
    }

    /// <summary>Field number for the "notifierName" field.</summary>
    public const int NotifierNameFieldNumber = 19;
    private readonly static string NotifierNameDefaultValue = "";

    private string notifierName_;
    /// <summary>
    /// NotifierName is a reference to a notifier to receive the license expiration notification
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotifierName {
      get { return notifierName_ ?? NotifierNameDefaultValue; }
      set {
        notifierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "notifierName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNotifierName {
      get { return notifierName_ != null; }
    }
    /// <summary>Clears the value of the "notifierName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNotifierName() {
      notifierName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LicenseSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LicenseSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TenantRef, other.TenantRef)) return false;
      if (SecretName != other.SecretName) return false;
      if (Owner != other.Owner) return false;
      if (Email != other.Email) return false;
      if (!object.Equals(TrialStart, other.TrialStart)) return false;
      if (!object.Equals(TrialEnd, other.TrialEnd)) return false;
      if (MaxProducts != other.MaxProducts) return false;
      if (MaxTrainers != other.MaxTrainers) return false;
      if (MaxServers != other.MaxServers) return false;
      if (MaxUsers != other.MaxUsers) return false;
      if (MaxDataPlanes != other.MaxDataPlanes) return false;
      if (Forecast != other.Forecast) return false;
      if (Nlp != other.Nlp) return false;
      if (Vision != other.Vision) return false;
      if (Chatbot != other.Chatbot) return false;
      if (ProductName != other.ProductName) return false;
      if (PriceName != other.PriceName) return false;
      if (!object.Equals(ExpireAt, other.ExpireAt)) return false;
      if (NotifierName != other.NotifierName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (tenantRef_ != null) hash ^= TenantRef.GetHashCode();
      if (HasSecretName) hash ^= SecretName.GetHashCode();
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (HasEmail) hash ^= Email.GetHashCode();
      if (trialStart_ != null) hash ^= TrialStart.GetHashCode();
      if (trialEnd_ != null) hash ^= TrialEnd.GetHashCode();
      if (HasMaxProducts) hash ^= MaxProducts.GetHashCode();
      if (HasMaxTrainers) hash ^= MaxTrainers.GetHashCode();
      if (HasMaxServers) hash ^= MaxServers.GetHashCode();
      if (HasMaxUsers) hash ^= MaxUsers.GetHashCode();
      if (HasMaxDataPlanes) hash ^= MaxDataPlanes.GetHashCode();
      if (HasForecast) hash ^= Forecast.GetHashCode();
      if (HasNlp) hash ^= Nlp.GetHashCode();
      if (HasVision) hash ^= Vision.GetHashCode();
      if (HasChatbot) hash ^= Chatbot.GetHashCode();
      if (HasProductName) hash ^= ProductName.GetHashCode();
      if (HasPriceName) hash ^= PriceName.GetHashCode();
      if (expireAt_ != null) hash ^= ExpireAt.GetHashCode();
      if (HasNotifierName) hash ^= NotifierName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (tenantRef_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TenantRef);
      }
      if (HasSecretName) {
        output.WriteRawTag(18);
        output.WriteString(SecretName);
      }
      if (HasOwner) {
        output.WriteRawTag(26);
        output.WriteString(Owner);
      }
      if (HasEmail) {
        output.WriteRawTag(34);
        output.WriteString(Email);
      }
      if (trialStart_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(TrialStart);
      }
      if (trialEnd_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TrialEnd);
      }
      if (HasMaxProducts) {
        output.WriteRawTag(56);
        output.WriteInt32(MaxProducts);
      }
      if (HasMaxTrainers) {
        output.WriteRawTag(64);
        output.WriteInt32(MaxTrainers);
      }
      if (HasMaxServers) {
        output.WriteRawTag(72);
        output.WriteInt32(MaxServers);
      }
      if (HasMaxUsers) {
        output.WriteRawTag(80);
        output.WriteInt32(MaxUsers);
      }
      if (HasMaxDataPlanes) {
        output.WriteRawTag(88);
        output.WriteInt32(MaxDataPlanes);
      }
      if (HasForecast) {
        output.WriteRawTag(96);
        output.WriteBool(Forecast);
      }
      if (HasNlp) {
        output.WriteRawTag(104);
        output.WriteBool(Nlp);
      }
      if (HasVision) {
        output.WriteRawTag(112);
        output.WriteBool(Vision);
      }
      if (HasChatbot) {
        output.WriteRawTag(120);
        output.WriteBool(Chatbot);
      }
      if (HasProductName) {
        output.WriteRawTag(130, 1);
        output.WriteString(ProductName);
      }
      if (HasPriceName) {
        output.WriteRawTag(138, 1);
        output.WriteString(PriceName);
      }
      if (expireAt_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(ExpireAt);
      }
      if (HasNotifierName) {
        output.WriteRawTag(154, 1);
        output.WriteString(NotifierName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (tenantRef_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TenantRef);
      }
      if (HasSecretName) {
        output.WriteRawTag(18);
        output.WriteString(SecretName);
      }
      if (HasOwner) {
        output.WriteRawTag(26);
        output.WriteString(Owner);
      }
      if (HasEmail) {
        output.WriteRawTag(34);
        output.WriteString(Email);
      }
      if (trialStart_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(TrialStart);
      }
      if (trialEnd_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TrialEnd);
      }
      if (HasMaxProducts) {
        output.WriteRawTag(56);
        output.WriteInt32(MaxProducts);
      }
      if (HasMaxTrainers) {
        output.WriteRawTag(64);
        output.WriteInt32(MaxTrainers);
      }
      if (HasMaxServers) {
        output.WriteRawTag(72);
        output.WriteInt32(MaxServers);
      }
      if (HasMaxUsers) {
        output.WriteRawTag(80);
        output.WriteInt32(MaxUsers);
      }
      if (HasMaxDataPlanes) {
        output.WriteRawTag(88);
        output.WriteInt32(MaxDataPlanes);
      }
      if (HasForecast) {
        output.WriteRawTag(96);
        output.WriteBool(Forecast);
      }
      if (HasNlp) {
        output.WriteRawTag(104);
        output.WriteBool(Nlp);
      }
      if (HasVision) {
        output.WriteRawTag(112);
        output.WriteBool(Vision);
      }
      if (HasChatbot) {
        output.WriteRawTag(120);
        output.WriteBool(Chatbot);
      }
      if (HasProductName) {
        output.WriteRawTag(130, 1);
        output.WriteString(ProductName);
      }
      if (HasPriceName) {
        output.WriteRawTag(138, 1);
        output.WriteString(PriceName);
      }
      if (expireAt_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(ExpireAt);
      }
      if (HasNotifierName) {
        output.WriteRawTag(154, 1);
        output.WriteString(NotifierName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (tenantRef_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TenantRef);
      }
      if (HasSecretName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SecretName);
      }
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (HasEmail) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (trialStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrialStart);
      }
      if (trialEnd_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrialEnd);
      }
      if (HasMaxProducts) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxProducts);
      }
      if (HasMaxTrainers) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxTrainers);
      }
      if (HasMaxServers) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxServers);
      }
      if (HasMaxUsers) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxUsers);
      }
      if (HasMaxDataPlanes) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxDataPlanes);
      }
      if (HasForecast) {
        size += 1 + 1;
      }
      if (HasNlp) {
        size += 1 + 1;
      }
      if (HasVision) {
        size += 1 + 1;
      }
      if (HasChatbot) {
        size += 1 + 1;
      }
      if (HasProductName) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ProductName);
      }
      if (HasPriceName) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PriceName);
      }
      if (expireAt_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ExpireAt);
      }
      if (HasNotifierName) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(NotifierName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LicenseSpec other) {
      if (other == null) {
        return;
      }
      if (other.tenantRef_ != null) {
        if (tenantRef_ == null) {
          TenantRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
        }
        TenantRef.MergeFrom(other.TenantRef);
      }
      if (other.HasSecretName) {
        SecretName = other.SecretName;
      }
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      if (other.HasEmail) {
        Email = other.Email;
      }
      if (other.trialStart_ != null) {
        if (trialStart_ == null) {
          TrialStart = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        TrialStart.MergeFrom(other.TrialStart);
      }
      if (other.trialEnd_ != null) {
        if (trialEnd_ == null) {
          TrialEnd = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        TrialEnd.MergeFrom(other.TrialEnd);
      }
      if (other.HasMaxProducts) {
        MaxProducts = other.MaxProducts;
      }
      if (other.HasMaxTrainers) {
        MaxTrainers = other.MaxTrainers;
      }
      if (other.HasMaxServers) {
        MaxServers = other.MaxServers;
      }
      if (other.HasMaxUsers) {
        MaxUsers = other.MaxUsers;
      }
      if (other.HasMaxDataPlanes) {
        MaxDataPlanes = other.MaxDataPlanes;
      }
      if (other.HasForecast) {
        Forecast = other.Forecast;
      }
      if (other.HasNlp) {
        Nlp = other.Nlp;
      }
      if (other.HasVision) {
        Vision = other.Vision;
      }
      if (other.HasChatbot) {
        Chatbot = other.Chatbot;
      }
      if (other.HasProductName) {
        ProductName = other.ProductName;
      }
      if (other.HasPriceName) {
        PriceName = other.PriceName;
      }
      if (other.expireAt_ != null) {
        if (expireAt_ == null) {
          ExpireAt = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        ExpireAt.MergeFrom(other.ExpireAt);
      }
      if (other.HasNotifierName) {
        NotifierName = other.NotifierName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (tenantRef_ == null) {
              TenantRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(TenantRef);
            break;
          }
          case 18: {
            SecretName = input.ReadString();
            break;
          }
          case 26: {
            Owner = input.ReadString();
            break;
          }
          case 34: {
            Email = input.ReadString();
            break;
          }
          case 42: {
            if (trialStart_ == null) {
              TrialStart = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(TrialStart);
            break;
          }
          case 50: {
            if (trialEnd_ == null) {
              TrialEnd = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(TrialEnd);
            break;
          }
          case 56: {
            MaxProducts = input.ReadInt32();
            break;
          }
          case 64: {
            MaxTrainers = input.ReadInt32();
            break;
          }
          case 72: {
            MaxServers = input.ReadInt32();
            break;
          }
          case 80: {
            MaxUsers = input.ReadInt32();
            break;
          }
          case 88: {
            MaxDataPlanes = input.ReadInt32();
            break;
          }
          case 96: {
            Forecast = input.ReadBool();
            break;
          }
          case 104: {
            Nlp = input.ReadBool();
            break;
          }
          case 112: {
            Vision = input.ReadBool();
            break;
          }
          case 120: {
            Chatbot = input.ReadBool();
            break;
          }
          case 130: {
            ProductName = input.ReadString();
            break;
          }
          case 138: {
            PriceName = input.ReadString();
            break;
          }
          case 146: {
            if (expireAt_ == null) {
              ExpireAt = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(ExpireAt);
            break;
          }
          case 154: {
            NotifierName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (tenantRef_ == null) {
              TenantRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(TenantRef);
            break;
          }
          case 18: {
            SecretName = input.ReadString();
            break;
          }
          case 26: {
            Owner = input.ReadString();
            break;
          }
          case 34: {
            Email = input.ReadString();
            break;
          }
          case 42: {
            if (trialStart_ == null) {
              TrialStart = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(TrialStart);
            break;
          }
          case 50: {
            if (trialEnd_ == null) {
              TrialEnd = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(TrialEnd);
            break;
          }
          case 56: {
            MaxProducts = input.ReadInt32();
            break;
          }
          case 64: {
            MaxTrainers = input.ReadInt32();
            break;
          }
          case 72: {
            MaxServers = input.ReadInt32();
            break;
          }
          case 80: {
            MaxUsers = input.ReadInt32();
            break;
          }
          case 88: {
            MaxDataPlanes = input.ReadInt32();
            break;
          }
          case 96: {
            Forecast = input.ReadBool();
            break;
          }
          case 104: {
            Nlp = input.ReadBool();
            break;
          }
          case 112: {
            Vision = input.ReadBool();
            break;
          }
          case 120: {
            Chatbot = input.ReadBool();
            break;
          }
          case 130: {
            ProductName = input.ReadString();
            break;
          }
          case 138: {
            PriceName = input.ReadString();
            break;
          }
          case 146: {
            if (expireAt_ == null) {
              ExpireAt = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(ExpireAt);
            break;
          }
          case 154: {
            NotifierName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// LicenseStatus is the observed state of a License
  /// </summary>
  public sealed partial class LicenseStatus : pb::IMessage<LicenseStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LicenseStatus> _parser = new pb::MessageParser<LicenseStatus>(() => new LicenseStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LicenseStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LicenseStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LicenseStatus(LicenseStatus other) : this() {
      conditions_ = other.conditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LicenseStatus Clone() {
      return new LicenseStatus(this);
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LicenseCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(10, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LicenseCondition.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LicenseCondition> conditions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LicenseCondition>();
    /// <summary>
    /// Represents the latest available observations of a license state.
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.LicenseCondition> Conditions {
      get { return conditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LicenseStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LicenseStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!conditions_.Equals(other.conditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= conditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LicenseStatus other) {
      if (other == null) {
        return;
      }
      conditions_.Add(other.conditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LinodeSpec : pb::IMessage<LinodeSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LinodeSpec> _parser = new pb::MessageParser<LinodeSpec>(() => new LinodeSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LinodeSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LinodeSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LinodeSpec(LinodeSpec other) : this() {
      apikey_ = other.apikey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LinodeSpec Clone() {
      return new LinodeSpec(this);
    }

    /// <summary>Field number for the "apikey" field.</summary>
    public const int ApikeyFieldNumber = 1;
    private readonly static string ApikeyDefaultValue = "";

    private string apikey_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Apikey {
      get { return apikey_ ?? ApikeyDefaultValue; }
      set {
        apikey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "apikey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasApikey {
      get { return apikey_ != null; }
    }
    /// <summary>Clears the value of the "apikey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearApikey() {
      apikey_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LinodeSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LinodeSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Apikey != other.Apikey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasApikey) hash ^= Apikey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasApikey) {
        output.WriteRawTag(10);
        output.WriteString(Apikey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasApikey) {
        output.WriteRawTag(10);
        output.WriteString(Apikey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasApikey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Apikey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LinodeSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasApikey) {
        Apikey = other.Apikey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Apikey = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Apikey = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MSSqlServerSpec : pb::IMessage<MSSqlServerSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MSSqlServerSpec> _parser = new pb::MessageParser<MSSqlServerSpec>(() => new MSSqlServerSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MSSqlServerSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MSSqlServerSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MSSqlServerSpec(MSSqlServerSpec other) : this() {
      _hasBits0 = other._hasBits0;
      host_ = other.host_;
      port_ = other.port_;
      database_ = other.database_;
      domain_ = other.domain_;
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MSSqlServerSpec Clone() {
      return new MSSqlServerSpec(this);
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 1;
    private readonly static string HostDefaultValue = "";

    private string host_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Host {
      get { return host_ ?? HostDefaultValue; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "host" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHost {
      get { return host_ != null; }
    }
    /// <summary>Clears the value of the "host" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHost() {
      host_ = null;
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private readonly static int PortDefaultValue = 0;

    private int port_;
    /// <summary>
    /// +kubebuilder:default:=1433
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { if ((_hasBits0 & 1) != 0) { return port_; } else { return PortDefaultValue; } }
      set {
        _hasBits0 |= 1;
        port_ = value;
      }
    }
    /// <summary>Gets whether the "port" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPort {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "port" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPort() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 3;
    private readonly static string DatabaseDefaultValue = "";

    private string database_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_ ?? DatabaseDefaultValue; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "database" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDatabase {
      get { return database_ != null; }
    }
    /// <summary>Clears the value of the "database" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDatabase() {
      database_ = null;
    }

    /// <summary>Field number for the "domain" field.</summary>
    public const int DomainFieldNumber = 4;
    private readonly static string DomainDefaultValue = "";

    private string domain_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Domain {
      get { return domain_ ?? DomainDefaultValue; }
      set {
        domain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "domain" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDomain {
      get { return domain_ != null; }
    }
    /// <summary>Clears the value of the "domain" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDomain() {
      domain_ = null;
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 5;
    private readonly static string UsernameDefaultValue = "";

    private string username_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_ ?? UsernameDefaultValue; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "username" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUsername {
      get { return username_ != null; }
    }
    /// <summary>Clears the value of the "username" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUsername() {
      username_ = null;
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 6;
    private readonly static string PasswordDefaultValue = "";

    private string password_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_ ?? PasswordDefaultValue; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "password" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPassword {
      get { return password_ != null; }
    }
    /// <summary>Clears the value of the "password" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPassword() {
      password_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MSSqlServerSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MSSqlServerSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Host != other.Host) return false;
      if (Port != other.Port) return false;
      if (Database != other.Database) return false;
      if (Domain != other.Domain) return false;
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHost) hash ^= Host.GetHashCode();
      if (HasPort) hash ^= Port.GetHashCode();
      if (HasDatabase) hash ^= Database.GetHashCode();
      if (HasDomain) hash ^= Domain.GetHashCode();
      if (HasUsername) hash ^= Username.GetHashCode();
      if (HasPassword) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasHost) {
        output.WriteRawTag(10);
        output.WriteString(Host);
      }
      if (HasPort) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (HasDatabase) {
        output.WriteRawTag(26);
        output.WriteString(Database);
      }
      if (HasDomain) {
        output.WriteRawTag(34);
        output.WriteString(Domain);
      }
      if (HasUsername) {
        output.WriteRawTag(42);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(50);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHost) {
        output.WriteRawTag(10);
        output.WriteString(Host);
      }
      if (HasPort) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (HasDatabase) {
        output.WriteRawTag(26);
        output.WriteString(Database);
      }
      if (HasDomain) {
        output.WriteRawTag(34);
        output.WriteString(Domain);
      }
      if (HasUsername) {
        output.WriteRawTag(42);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(50);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasHost) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (HasPort) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (HasDatabase) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (HasDomain) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Domain);
      }
      if (HasUsername) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (HasPassword) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MSSqlServerSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasHost) {
        Host = other.Host;
      }
      if (other.HasPort) {
        Port = other.Port;
      }
      if (other.HasDatabase) {
        Database = other.Database;
      }
      if (other.HasDomain) {
        Domain = other.Domain;
      }
      if (other.HasUsername) {
        Username = other.Username;
      }
      if (other.HasPassword) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Host = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
          case 26: {
            Database = input.ReadString();
            break;
          }
          case 34: {
            Domain = input.ReadString();
            break;
          }
          case 42: {
            Username = input.ReadString();
            break;
          }
          case 50: {
            Password = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Host = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
          case 26: {
            Database = input.ReadString();
            break;
          }
          case 34: {
            Domain = input.ReadString();
            break;
          }
          case 42: {
            Username = input.ReadString();
            break;
          }
          case 50: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MSTeamSpec : pb::IMessage<MSTeamSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MSTeamSpec> _parser = new pb::MessageParser<MSTeamSpec>(() => new MSTeamSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MSTeamSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MSTeamSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MSTeamSpec(MSTeamSpec other) : this() {
      webhook_ = other.webhook_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MSTeamSpec Clone() {
      return new MSTeamSpec(this);
    }

    /// <summary>Field number for the "webhook" field.</summary>
    public const int WebhookFieldNumber = 1;
    private readonly static string WebhookDefaultValue = "";

    private string webhook_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Webhook {
      get { return webhook_ ?? WebhookDefaultValue; }
      set {
        webhook_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "webhook" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasWebhook {
      get { return webhook_ != null; }
    }
    /// <summary>Clears the value of the "webhook" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearWebhook() {
      webhook_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MSTeamSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MSTeamSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Webhook != other.Webhook) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasWebhook) hash ^= Webhook.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasWebhook) {
        output.WriteRawTag(10);
        output.WriteString(Webhook);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasWebhook) {
        output.WriteRawTag(10);
        output.WriteString(Webhook);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasWebhook) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Webhook);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MSTeamSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasWebhook) {
        Webhook = other.Webhook;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Webhook = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Webhook = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MattermostSpec : pb::IMessage<MattermostSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MattermostSpec> _parser = new pb::MessageParser<MattermostSpec>(() => new MattermostSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MattermostSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MattermostSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MattermostSpec(MattermostSpec other) : this() {
      url_ = other.url_;
      channel_ = other.channel_;
      username_ = other.username_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MattermostSpec Clone() {
      return new MattermostSpec(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 2;
    private readonly static string ChannelDefaultValue = "";

    private string channel_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_ ?? ChannelDefaultValue; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "channel" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasChannel {
      get { return channel_ != null; }
    }
    /// <summary>Clears the value of the "channel" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearChannel() {
      channel_ = null;
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 3;
    private readonly static string UsernameDefaultValue = "";

    private string username_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_ ?? UsernameDefaultValue; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "username" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUsername {
      get { return username_ != null; }
    }
    /// <summary>Clears the value of the "username" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUsername() {
      username_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MattermostSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MattermostSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      if (Channel != other.Channel) return false;
      if (Username != other.Username) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasChannel) hash ^= Channel.GetHashCode();
      if (HasUsername) hash ^= Username.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (HasChannel) {
        output.WriteRawTag(18);
        output.WriteString(Channel);
      }
      if (HasUsername) {
        output.WriteRawTag(26);
        output.WriteString(Username);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (HasChannel) {
        output.WriteRawTag(18);
        output.WriteString(Channel);
      }
      if (HasUsername) {
        output.WriteRawTag(26);
        output.WriteString(Username);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasChannel) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (HasUsername) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MattermostSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasChannel) {
        Channel = other.Channel;
      }
      if (other.HasUsername) {
        Username = other.Username;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            Channel = input.ReadString();
            break;
          }
          case 26: {
            Username = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            Channel = input.ReadString();
            break;
          }
          case 26: {
            Username = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MinioSpec : pb::IMessage<MinioSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MinioSpec> _parser = new pb::MessageParser<MinioSpec>(() => new MinioSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MinioSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MinioSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MinioSpec(MinioSpec other) : this() {
      accessKey_ = other.accessKey_;
      secretKey_ = other.secretKey_;
      host_ = other.host_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MinioSpec Clone() {
      return new MinioSpec(this);
    }

    /// <summary>Field number for the "accessKey" field.</summary>
    public const int AccessKeyFieldNumber = 1;
    private readonly static string AccessKeyDefaultValue = "";

    private string accessKey_;
    /// <summary>
    /// Access key for minio
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessKey {
      get { return accessKey_ ?? AccessKeyDefaultValue; }
      set {
        accessKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "accessKey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccessKey {
      get { return accessKey_ != null; }
    }
    /// <summary>Clears the value of the "accessKey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccessKey() {
      accessKey_ = null;
    }

    /// <summary>Field number for the "secretKey" field.</summary>
    public const int SecretKeyFieldNumber = 2;
    private readonly static string SecretKeyDefaultValue = "";

    private string secretKey_;
    /// <summary>
    /// StorageSecret key for minio
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SecretKey {
      get { return secretKey_ ?? SecretKeyDefaultValue; }
      set {
        secretKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "secretKey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSecretKey {
      get { return secretKey_ != null; }
    }
    /// <summary>Clears the value of the "secretKey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSecretKey() {
      secretKey_ = null;
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 3;
    private readonly static string HostDefaultValue = "";

    private string host_;
    /// <summary>
    /// Minio url connection.
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Host {
      get { return host_ ?? HostDefaultValue; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "host" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHost {
      get { return host_ != null; }
    }
    /// <summary>Clears the value of the "host" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHost() {
      host_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MinioSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MinioSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccessKey != other.AccessKey) return false;
      if (SecretKey != other.SecretKey) return false;
      if (Host != other.Host) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccessKey) hash ^= AccessKey.GetHashCode();
      if (HasSecretKey) hash ^= SecretKey.GetHashCode();
      if (HasHost) hash ^= Host.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccessKey) {
        output.WriteRawTag(10);
        output.WriteString(AccessKey);
      }
      if (HasSecretKey) {
        output.WriteRawTag(18);
        output.WriteString(SecretKey);
      }
      if (HasHost) {
        output.WriteRawTag(26);
        output.WriteString(Host);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccessKey) {
        output.WriteRawTag(10);
        output.WriteString(AccessKey);
      }
      if (HasSecretKey) {
        output.WriteRawTag(18);
        output.WriteString(SecretKey);
      }
      if (HasHost) {
        output.WriteRawTag(26);
        output.WriteString(Host);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccessKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessKey);
      }
      if (HasSecretKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SecretKey);
      }
      if (HasHost) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MinioSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasAccessKey) {
        AccessKey = other.AccessKey;
      }
      if (other.HasSecretKey) {
        SecretKey = other.SecretKey;
      }
      if (other.HasHost) {
        Host = other.Host;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccessKey = input.ReadString();
            break;
          }
          case 18: {
            SecretKey = input.ReadString();
            break;
          }
          case 26: {
            Host = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AccessKey = input.ReadString();
            break;
          }
          case 18: {
            SecretKey = input.ReadString();
            break;
          }
          case 26: {
            Host = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MongoDbSpec : pb::IMessage<MongoDbSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MongoDbSpec> _parser = new pb::MessageParser<MongoDbSpec>(() => new MongoDbSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MongoDbSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MongoDbSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MongoDbSpec(MongoDbSpec other) : this() {
      _hasBits0 = other._hasBits0;
      host_ = other.host_;
      port_ = other.port_;
      database_ = other.database_;
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MongoDbSpec Clone() {
      return new MongoDbSpec(this);
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 1;
    private readonly static string HostDefaultValue = "";

    private string host_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Host {
      get { return host_ ?? HostDefaultValue; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "host" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHost {
      get { return host_ != null; }
    }
    /// <summary>Clears the value of the "host" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHost() {
      host_ = null;
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private readonly static int PortDefaultValue = 0;

    private int port_;
    /// <summary>
    /// +kubebuilder:default:=27017
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { if ((_hasBits0 & 1) != 0) { return port_; } else { return PortDefaultValue; } }
      set {
        _hasBits0 |= 1;
        port_ = value;
      }
    }
    /// <summary>Gets whether the "port" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPort {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "port" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPort() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 3;
    private readonly static string DatabaseDefaultValue = "";

    private string database_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_ ?? DatabaseDefaultValue; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "database" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDatabase {
      get { return database_ != null; }
    }
    /// <summary>Clears the value of the "database" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDatabase() {
      database_ = null;
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 4;
    private readonly static string UsernameDefaultValue = "";

    private string username_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_ ?? UsernameDefaultValue; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "username" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUsername {
      get { return username_ != null; }
    }
    /// <summary>Clears the value of the "username" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUsername() {
      username_ = null;
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 5;
    private readonly static string PasswordDefaultValue = "";

    private string password_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_ ?? PasswordDefaultValue; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "password" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPassword {
      get { return password_ != null; }
    }
    /// <summary>Clears the value of the "password" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPassword() {
      password_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MongoDbSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MongoDbSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Host != other.Host) return false;
      if (Port != other.Port) return false;
      if (Database != other.Database) return false;
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHost) hash ^= Host.GetHashCode();
      if (HasPort) hash ^= Port.GetHashCode();
      if (HasDatabase) hash ^= Database.GetHashCode();
      if (HasUsername) hash ^= Username.GetHashCode();
      if (HasPassword) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasHost) {
        output.WriteRawTag(10);
        output.WriteString(Host);
      }
      if (HasPort) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (HasDatabase) {
        output.WriteRawTag(26);
        output.WriteString(Database);
      }
      if (HasUsername) {
        output.WriteRawTag(34);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(42);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHost) {
        output.WriteRawTag(10);
        output.WriteString(Host);
      }
      if (HasPort) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (HasDatabase) {
        output.WriteRawTag(26);
        output.WriteString(Database);
      }
      if (HasUsername) {
        output.WriteRawTag(34);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(42);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasHost) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (HasPort) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (HasDatabase) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (HasUsername) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (HasPassword) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MongoDbSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasHost) {
        Host = other.Host;
      }
      if (other.HasPort) {
        Port = other.Port;
      }
      if (other.HasDatabase) {
        Database = other.Database;
      }
      if (other.HasUsername) {
        Username = other.Username;
      }
      if (other.HasPassword) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Host = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
          case 26: {
            Database = input.ReadString();
            break;
          }
          case 34: {
            Username = input.ReadString();
            break;
          }
          case 42: {
            Password = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Host = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
          case 26: {
            Database = input.ReadString();
            break;
          }
          case 34: {
            Username = input.ReadString();
            break;
          }
          case 42: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MySqlSpec : pb::IMessage<MySqlSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MySqlSpec> _parser = new pb::MessageParser<MySqlSpec>(() => new MySqlSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MySqlSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MySqlSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MySqlSpec(MySqlSpec other) : this() {
      _hasBits0 = other._hasBits0;
      host_ = other.host_;
      port_ = other.port_;
      database_ = other.database_;
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MySqlSpec Clone() {
      return new MySqlSpec(this);
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 1;
    private readonly static string HostDefaultValue = "";

    private string host_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Host {
      get { return host_ ?? HostDefaultValue; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "host" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHost {
      get { return host_ != null; }
    }
    /// <summary>Clears the value of the "host" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHost() {
      host_ = null;
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private readonly static int PortDefaultValue = 0;

    private int port_;
    /// <summary>
    /// +kubebuilder:default:=3306
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { if ((_hasBits0 & 1) != 0) { return port_; } else { return PortDefaultValue; } }
      set {
        _hasBits0 |= 1;
        port_ = value;
      }
    }
    /// <summary>Gets whether the "port" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPort {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "port" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPort() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 3;
    private readonly static string DatabaseDefaultValue = "";

    private string database_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_ ?? DatabaseDefaultValue; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "database" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDatabase {
      get { return database_ != null; }
    }
    /// <summary>Clears the value of the "database" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDatabase() {
      database_ = null;
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 4;
    private readonly static string UsernameDefaultValue = "";

    private string username_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_ ?? UsernameDefaultValue; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "username" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUsername {
      get { return username_ != null; }
    }
    /// <summary>Clears the value of the "username" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUsername() {
      username_ = null;
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 5;
    private readonly static string PasswordDefaultValue = "";

    private string password_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_ ?? PasswordDefaultValue; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "password" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPassword {
      get { return password_ != null; }
    }
    /// <summary>Clears the value of the "password" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPassword() {
      password_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MySqlSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MySqlSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Host != other.Host) return false;
      if (Port != other.Port) return false;
      if (Database != other.Database) return false;
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHost) hash ^= Host.GetHashCode();
      if (HasPort) hash ^= Port.GetHashCode();
      if (HasDatabase) hash ^= Database.GetHashCode();
      if (HasUsername) hash ^= Username.GetHashCode();
      if (HasPassword) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasHost) {
        output.WriteRawTag(10);
        output.WriteString(Host);
      }
      if (HasPort) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (HasDatabase) {
        output.WriteRawTag(26);
        output.WriteString(Database);
      }
      if (HasUsername) {
        output.WriteRawTag(34);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(42);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHost) {
        output.WriteRawTag(10);
        output.WriteString(Host);
      }
      if (HasPort) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (HasDatabase) {
        output.WriteRawTag(26);
        output.WriteString(Database);
      }
      if (HasUsername) {
        output.WriteRawTag(34);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(42);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasHost) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (HasPort) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (HasDatabase) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (HasUsername) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (HasPassword) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MySqlSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasHost) {
        Host = other.Host;
      }
      if (other.HasPort) {
        Port = other.Port;
      }
      if (other.HasDatabase) {
        Database = other.Database;
      }
      if (other.HasUsername) {
        Username = other.Username;
      }
      if (other.HasPassword) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Host = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
          case 26: {
            Database = input.ReadString();
            break;
          }
          case 34: {
            Username = input.ReadString();
            break;
          }
          case 42: {
            Password = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Host = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
          case 26: {
            Database = input.ReadString();
            break;
          }
          case 34: {
            Username = input.ReadString();
            break;
          }
          case 42: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// +kubebuilder:subresource:status
  /// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
  /// +kubebuilder:printcolumn:name="Type",type="string",JSONPath=".spec.type",description=""
  /// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
  /// +kubebuilder:resource:path=notifiers,singular=notifier,categories={infra,modela}
  /// </summary>
  public sealed partial class Notifier : pb::IMessage<Notifier>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Notifier> _parser = new pb::MessageParser<Notifier>(() => new Notifier());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Notifier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Notifier() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Notifier(Notifier other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Notifier Clone() {
      return new Notifier(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.NotifierSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.NotifierSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.NotifierStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.NotifierStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Notifier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Notifier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Notifier other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.NotifierSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.NotifierStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.NotifierSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.NotifierStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.NotifierSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.NotifierStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// NotifierCondition describes the state of the license at a certain point.
  /// </summary>
  public sealed partial class NotifierCondition : pb::IMessage<NotifierCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NotifierCondition> _parser = new pb::MessageParser<NotifierCondition>(() => new NotifierCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotifierCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifierCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifierCondition(NotifierCondition other) : this() {
      type_ = other.type_;
      status_ = other.status_;
      lastTransitionTime_ = other.lastTransitionTime_ != null ? other.lastTransitionTime_.Clone() : null;
      reason_ = other.reason_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifierCondition Clone() {
      return new NotifierCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// Type of account condition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    /// <summary>
    /// Status of the condition, one of True, False, AutoScaler.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "lastTransitionTime" field.</summary>
    public const int LastTransitionTimeFieldNumber = 3;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastTransitionTime_;
    /// <summary>
    /// Last time the condition transitioned from one status to another.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastTransitionTime {
      get { return lastTransitionTime_; }
      set {
        lastTransitionTime_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 4;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// The reason for the condition's last transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 5;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// A human readable message indicating details about the transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotifierCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotifierCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LastTransitionTime, other.LastTransitionTime)) return false;
      if (Reason != other.Reason) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (lastTransitionTime_ != null) hash ^= LastTransitionTime.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (lastTransitionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTransitionTime);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotifierCondition other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.lastTransitionTime_ != null) {
        if (lastTransitionTime_ == null) {
          LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastTransitionTime.MergeFrom(other.LastTransitionTime);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// NotifierList is a list of Notifiers
  /// </summary>
  public sealed partial class NotifierList : pb::IMessage<NotifierList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NotifierList> _parser = new pb::MessageParser<NotifierList>(() => new NotifierList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotifierList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifierList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifierList(NotifierList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifierList Clone() {
      return new NotifierList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Notifier> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Notifier.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Notifier> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Notifier>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Notifier> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotifierList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotifierList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotifierList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// NotifierSpec defines the desired state of Notifier
  /// </summary>
  public sealed partial class NotifierSpec : pb::IMessage<NotifierSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NotifierSpec> _parser = new pb::MessageParser<NotifierSpec>(() => new NotifierSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotifierSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifierSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifierSpec(NotifierSpec other) : this() {
      tenantRef_ = other.tenantRef_ != null ? other.tenantRef_.Clone() : null;
      description_ = other.description_;
      to_ = other.to_;
      from_ = other.from_;
      connectionName_ = other.connectionName_;
      owner_ = other.owner_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifierSpec Clone() {
      return new NotifierSpec(this);
    }

    /// <summary>Field number for the "tenantRef" field.</summary>
    public const int TenantRefFieldNumber = 1;
    private global::K8S.Io.Api.Core.V1.ObjectReference tenantRef_;
    /// <summary>
    /// The tenant that own the notifier
    /// Default to default tenant.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Api.Core.V1.ObjectReference TenantRef {
      get { return tenantRef_; }
      set {
        tenantRef_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// User provided description
    /// +kubebuilder:default:=""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 3;
    private readonly static string ToDefaultValue = "";

    private string to_;
    /// <summary>
    /// Address within the provider to send the notifiaction to.
    /// +kubebuilder:default:=""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string To {
      get { return to_ ?? ToDefaultValue; }
      set {
        to_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "to" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTo {
      get { return to_ != null; }
    }
    /// <summary>Clears the value of the "to" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTo() {
      to_ = null;
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 4;
    private readonly static string FromDefaultValue = "";

    private string from_;
    /// <summary>
    /// The sender address. For example, from email.
    /// +kubebuilder:default:=""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string From {
      get { return from_ ?? FromDefaultValue; }
      set {
        from_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "from" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFrom {
      get { return from_ != null; }
    }
    /// <summary>Clears the value of the "from" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFrom() {
      from_ = null;
    }

    /// <summary>Field number for the "connectionName" field.</summary>
    public const int ConnectionNameFieldNumber = 5;
    private readonly static string ConnectionNameDefaultValue = "";

    private string connectionName_;
    /// <summary>
    /// +kubebuilder:validation:Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConnectionName {
      get { return connectionName_ ?? ConnectionNameDefaultValue; }
      set {
        connectionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "connectionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConnectionName {
      get { return connectionName_ != null; }
    }
    /// <summary>Clears the value of the "connectionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConnectionName() {
      connectionName_ = null;
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 6;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// The owner account name
    /// +kubebuilder:default:="no-one"
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwner() {
      owner_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotifierSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotifierSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TenantRef, other.TenantRef)) return false;
      if (Description != other.Description) return false;
      if (To != other.To) return false;
      if (From != other.From) return false;
      if (ConnectionName != other.ConnectionName) return false;
      if (Owner != other.Owner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (tenantRef_ != null) hash ^= TenantRef.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (HasTo) hash ^= To.GetHashCode();
      if (HasFrom) hash ^= From.GetHashCode();
      if (HasConnectionName) hash ^= ConnectionName.GetHashCode();
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (tenantRef_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TenantRef);
      }
      if (HasDescription) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (HasTo) {
        output.WriteRawTag(26);
        output.WriteString(To);
      }
      if (HasFrom) {
        output.WriteRawTag(34);
        output.WriteString(From);
      }
      if (HasConnectionName) {
        output.WriteRawTag(42);
        output.WriteString(ConnectionName);
      }
      if (HasOwner) {
        output.WriteRawTag(50);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (tenantRef_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TenantRef);
      }
      if (HasDescription) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (HasTo) {
        output.WriteRawTag(26);
        output.WriteString(To);
      }
      if (HasFrom) {
        output.WriteRawTag(34);
        output.WriteString(From);
      }
      if (HasConnectionName) {
        output.WriteRawTag(42);
        output.WriteString(ConnectionName);
      }
      if (HasOwner) {
        output.WriteRawTag(50);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (tenantRef_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TenantRef);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (HasTo) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(To);
      }
      if (HasFrom) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(From);
      }
      if (HasConnectionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionName);
      }
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotifierSpec other) {
      if (other == null) {
        return;
      }
      if (other.tenantRef_ != null) {
        if (tenantRef_ == null) {
          TenantRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
        }
        TenantRef.MergeFrom(other.TenantRef);
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.HasTo) {
        To = other.To;
      }
      if (other.HasFrom) {
        From = other.From;
      }
      if (other.HasConnectionName) {
        ConnectionName = other.ConnectionName;
      }
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (tenantRef_ == null) {
              TenantRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(TenantRef);
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            To = input.ReadString();
            break;
          }
          case 34: {
            From = input.ReadString();
            break;
          }
          case 42: {
            ConnectionName = input.ReadString();
            break;
          }
          case 50: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (tenantRef_ == null) {
              TenantRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(TenantRef);
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            To = input.ReadString();
            break;
          }
          case 34: {
            From = input.ReadString();
            break;
          }
          case 42: {
            ConnectionName = input.ReadString();
            break;
          }
          case 50: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// NotifierStatus is the observed state of a Notifier
  /// </summary>
  public sealed partial class NotifierStatus : pb::IMessage<NotifierStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NotifierStatus> _parser = new pb::MessageParser<NotifierStatus>(() => new NotifierStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotifierStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifierStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifierStatus(NotifierStatus other) : this() {
      conditions_ = other.conditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifierStatus Clone() {
      return new NotifierStatus(this);
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.NotifierCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(10, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.NotifierCondition.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.NotifierCondition> conditions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.NotifierCondition>();
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.NotifierCondition> Conditions {
      get { return conditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotifierStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotifierStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!conditions_.Equals(other.conditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= conditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotifierStatus other) {
      if (other == null) {
        return;
      }
      conditions_.Add(other.conditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OdbcSpec : pb::IMessage<OdbcSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OdbcSpec> _parser = new pb::MessageParser<OdbcSpec>(() => new OdbcSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OdbcSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OdbcSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OdbcSpec(OdbcSpec other) : this() {
      conntectionString_ = other.conntectionString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OdbcSpec Clone() {
      return new OdbcSpec(this);
    }

    /// <summary>Field number for the "conntectionString" field.</summary>
    public const int ConntectionStringFieldNumber = 1;
    private readonly static string ConntectionStringDefaultValue = "";

    private string conntectionString_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConntectionString {
      get { return conntectionString_ ?? ConntectionStringDefaultValue; }
      set {
        conntectionString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "conntectionString" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConntectionString {
      get { return conntectionString_ != null; }
    }
    /// <summary>Clears the value of the "conntectionString" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConntectionString() {
      conntectionString_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OdbcSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OdbcSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConntectionString != other.ConntectionString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasConntectionString) hash ^= ConntectionString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasConntectionString) {
        output.WriteRawTag(10);
        output.WriteString(ConntectionString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasConntectionString) {
        output.WriteRawTag(10);
        output.WriteString(ConntectionString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasConntectionString) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConntectionString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OdbcSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasConntectionString) {
        ConntectionString = other.ConntectionString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ConntectionString = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ConntectionString = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OpenstackSpec : pb::IMessage<OpenstackSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OpenstackSpec> _parser = new pb::MessageParser<OpenstackSpec>(() => new OpenstackSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OpenstackSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenstackSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenstackSpec(OpenstackSpec other) : this() {
      userName_ = other.userName_;
      tenantName_ = other.tenantName_;
      password_ = other.password_;
      authUrl_ = other.authUrl_;
      region_ = other.region_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenstackSpec Clone() {
      return new OpenstackSpec(this);
    }

    /// <summary>Field number for the "userName" field.</summary>
    public const int UserNameFieldNumber = 1;
    private readonly static string UserNameDefaultValue = "";

    private string userName_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_ ?? UserNameDefaultValue; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "userName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserName {
      get { return userName_ != null; }
    }
    /// <summary>Clears the value of the "userName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserName() {
      userName_ = null;
    }

    /// <summary>Field number for the "tenantName" field.</summary>
    public const int TenantNameFieldNumber = 2;
    private readonly static string TenantNameDefaultValue = "";

    private string tenantName_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TenantName {
      get { return tenantName_ ?? TenantNameDefaultValue; }
      set {
        tenantName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tenantName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTenantName {
      get { return tenantName_ != null; }
    }
    /// <summary>Clears the value of the "tenantName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTenantName() {
      tenantName_ = null;
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 3;
    private readonly static string PasswordDefaultValue = "";

    private string password_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_ ?? PasswordDefaultValue; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "password" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPassword {
      get { return password_ != null; }
    }
    /// <summary>Clears the value of the "password" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPassword() {
      password_ = null;
    }

    /// <summary>Field number for the "authUrl" field.</summary>
    public const int AuthUrlFieldNumber = 4;
    private readonly static string AuthUrlDefaultValue = "";

    private string authUrl_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthUrl {
      get { return authUrl_ ?? AuthUrlDefaultValue; }
      set {
        authUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "authUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAuthUrl {
      get { return authUrl_ != null; }
    }
    /// <summary>Clears the value of the "authUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAuthUrl() {
      authUrl_ = null;
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 5;
    private readonly static string RegionDefaultValue = "";

    private string region_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Region {
      get { return region_ ?? RegionDefaultValue; }
      set {
        region_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "region" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRegion {
      get { return region_ != null; }
    }
    /// <summary>Clears the value of the "region" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRegion() {
      region_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OpenstackSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OpenstackSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      if (TenantName != other.TenantName) return false;
      if (Password != other.Password) return false;
      if (AuthUrl != other.AuthUrl) return false;
      if (Region != other.Region) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUserName) hash ^= UserName.GetHashCode();
      if (HasTenantName) hash ^= TenantName.GetHashCode();
      if (HasPassword) hash ^= Password.GetHashCode();
      if (HasAuthUrl) hash ^= AuthUrl.GetHashCode();
      if (HasRegion) hash ^= Region.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUserName) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (HasTenantName) {
        output.WriteRawTag(18);
        output.WriteString(TenantName);
      }
      if (HasPassword) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (HasAuthUrl) {
        output.WriteRawTag(34);
        output.WriteString(AuthUrl);
      }
      if (HasRegion) {
        output.WriteRawTag(42);
        output.WriteString(Region);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUserName) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (HasTenantName) {
        output.WriteRawTag(18);
        output.WriteString(TenantName);
      }
      if (HasPassword) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (HasAuthUrl) {
        output.WriteRawTag(34);
        output.WriteString(AuthUrl);
      }
      if (HasRegion) {
        output.WriteRawTag(42);
        output.WriteString(Region);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUserName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (HasTenantName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TenantName);
      }
      if (HasPassword) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (HasAuthUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthUrl);
      }
      if (HasRegion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Region);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OpenstackSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasUserName) {
        UserName = other.UserName;
      }
      if (other.HasTenantName) {
        TenantName = other.TenantName;
      }
      if (other.HasPassword) {
        Password = other.Password;
      }
      if (other.HasAuthUrl) {
        AuthUrl = other.AuthUrl;
      }
      if (other.HasRegion) {
        Region = other.Region;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            TenantName = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
          case 34: {
            AuthUrl = input.ReadString();
            break;
          }
          case 42: {
            Region = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            TenantName = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
          case 34: {
            AuthUrl = input.ReadString();
            break;
          }
          case 42: {
            Region = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OracleSpec : pb::IMessage<OracleSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OracleSpec> _parser = new pb::MessageParser<OracleSpec>(() => new OracleSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OracleSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OracleSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OracleSpec(OracleSpec other) : this() {
      _hasBits0 = other._hasBits0;
      host_ = other.host_;
      port_ = other.port_;
      database_ = other.database_;
      serviceName_ = other.serviceName_;
      role_ = other.role_;
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OracleSpec Clone() {
      return new OracleSpec(this);
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 1;
    private readonly static string HostDefaultValue = "";

    private string host_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Host {
      get { return host_ ?? HostDefaultValue; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "host" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHost {
      get { return host_ != null; }
    }
    /// <summary>Clears the value of the "host" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHost() {
      host_ = null;
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private readonly static int PortDefaultValue = 0;

    private int port_;
    /// <summary>
    /// +kubebuilder:default:=1521
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { if ((_hasBits0 & 1) != 0) { return port_; } else { return PortDefaultValue; } }
      set {
        _hasBits0 |= 1;
        port_ = value;
      }
    }
    /// <summary>Gets whether the "port" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPort {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "port" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPort() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 3;
    private readonly static string DatabaseDefaultValue = "";

    private string database_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_ ?? DatabaseDefaultValue; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "database" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDatabase {
      get { return database_ != null; }
    }
    /// <summary>Clears the value of the "database" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDatabase() {
      database_ = null;
    }

    /// <summary>Field number for the "serviceName" field.</summary>
    public const int ServiceNameFieldNumber = 4;
    private readonly static string ServiceNameDefaultValue = "";

    private string serviceName_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_ ?? ServiceNameDefaultValue; }
      set {
        serviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "serviceName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasServiceName {
      get { return serviceName_ != null; }
    }
    /// <summary>Clears the value of the "serviceName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearServiceName() {
      serviceName_ = null;
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 5;
    private readonly static string RoleDefaultValue = "";

    private string role_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Role {
      get { return role_ ?? RoleDefaultValue; }
      set {
        role_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "role" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRole {
      get { return role_ != null; }
    }
    /// <summary>Clears the value of the "role" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRole() {
      role_ = null;
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 6;
    private readonly static string UsernameDefaultValue = "";

    private string username_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_ ?? UsernameDefaultValue; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "username" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUsername {
      get { return username_ != null; }
    }
    /// <summary>Clears the value of the "username" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUsername() {
      username_ = null;
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 7;
    private readonly static string PasswordDefaultValue = "";

    private string password_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_ ?? PasswordDefaultValue; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "password" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPassword {
      get { return password_ != null; }
    }
    /// <summary>Clears the value of the "password" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPassword() {
      password_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OracleSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OracleSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Host != other.Host) return false;
      if (Port != other.Port) return false;
      if (Database != other.Database) return false;
      if (ServiceName != other.ServiceName) return false;
      if (Role != other.Role) return false;
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHost) hash ^= Host.GetHashCode();
      if (HasPort) hash ^= Port.GetHashCode();
      if (HasDatabase) hash ^= Database.GetHashCode();
      if (HasServiceName) hash ^= ServiceName.GetHashCode();
      if (HasRole) hash ^= Role.GetHashCode();
      if (HasUsername) hash ^= Username.GetHashCode();
      if (HasPassword) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasHost) {
        output.WriteRawTag(10);
        output.WriteString(Host);
      }
      if (HasPort) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (HasDatabase) {
        output.WriteRawTag(26);
        output.WriteString(Database);
      }
      if (HasServiceName) {
        output.WriteRawTag(34);
        output.WriteString(ServiceName);
      }
      if (HasRole) {
        output.WriteRawTag(42);
        output.WriteString(Role);
      }
      if (HasUsername) {
        output.WriteRawTag(50);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(58);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHost) {
        output.WriteRawTag(10);
        output.WriteString(Host);
      }
      if (HasPort) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (HasDatabase) {
        output.WriteRawTag(26);
        output.WriteString(Database);
      }
      if (HasServiceName) {
        output.WriteRawTag(34);
        output.WriteString(ServiceName);
      }
      if (HasRole) {
        output.WriteRawTag(42);
        output.WriteString(Role);
      }
      if (HasUsername) {
        output.WriteRawTag(50);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(58);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasHost) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (HasPort) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (HasDatabase) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (HasServiceName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceName);
      }
      if (HasRole) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Role);
      }
      if (HasUsername) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (HasPassword) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OracleSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasHost) {
        Host = other.Host;
      }
      if (other.HasPort) {
        Port = other.Port;
      }
      if (other.HasDatabase) {
        Database = other.Database;
      }
      if (other.HasServiceName) {
        ServiceName = other.ServiceName;
      }
      if (other.HasRole) {
        Role = other.Role;
      }
      if (other.HasUsername) {
        Username = other.Username;
      }
      if (other.HasPassword) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Host = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
          case 26: {
            Database = input.ReadString();
            break;
          }
          case 34: {
            ServiceName = input.ReadString();
            break;
          }
          case 42: {
            Role = input.ReadString();
            break;
          }
          case 50: {
            Username = input.ReadString();
            break;
          }
          case 58: {
            Password = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Host = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
          case 26: {
            Database = input.ReadString();
            break;
          }
          case 34: {
            ServiceName = input.ReadString();
            break;
          }
          case 42: {
            Role = input.ReadString();
            break;
          }
          case 50: {
            Username = input.ReadString();
            break;
          }
          case 58: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OvhSpec : pb::IMessage<OvhSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OvhSpec> _parser = new pb::MessageParser<OvhSpec>(() => new OvhSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OvhSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OvhSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OvhSpec(OvhSpec other) : this() {
      endpoint_ = other.endpoint_;
      application_ = other.application_;
      secret_ = other.secret_;
      consumerkey_ = other.consumerkey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OvhSpec Clone() {
      return new OvhSpec(this);
    }

    /// <summary>Field number for the "endpoint" field.</summary>
    public const int EndpointFieldNumber = 1;
    private readonly static string EndpointDefaultValue = "";

    private string endpoint_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Endpoint {
      get { return endpoint_ ?? EndpointDefaultValue; }
      set {
        endpoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "endpoint" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEndpoint {
      get { return endpoint_ != null; }
    }
    /// <summary>Clears the value of the "endpoint" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEndpoint() {
      endpoint_ = null;
    }

    /// <summary>Field number for the "application" field.</summary>
    public const int ApplicationFieldNumber = 2;
    private readonly static string ApplicationDefaultValue = "";

    private string application_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Application {
      get { return application_ ?? ApplicationDefaultValue; }
      set {
        application_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "application" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasApplication {
      get { return application_ != null; }
    }
    /// <summary>Clears the value of the "application" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearApplication() {
      application_ = null;
    }

    /// <summary>Field number for the "secret" field.</summary>
    public const int SecretFieldNumber = 3;
    private readonly static string SecretDefaultValue = "";

    private string secret_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Secret {
      get { return secret_ ?? SecretDefaultValue; }
      set {
        secret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "secret" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSecret {
      get { return secret_ != null; }
    }
    /// <summary>Clears the value of the "secret" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSecret() {
      secret_ = null;
    }

    /// <summary>Field number for the "consumerkey" field.</summary>
    public const int ConsumerkeyFieldNumber = 4;
    private readonly static string ConsumerkeyDefaultValue = "";

    private string consumerkey_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Consumerkey {
      get { return consumerkey_ ?? ConsumerkeyDefaultValue; }
      set {
        consumerkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "consumerkey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConsumerkey {
      get { return consumerkey_ != null; }
    }
    /// <summary>Clears the value of the "consumerkey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConsumerkey() {
      consumerkey_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OvhSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OvhSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Endpoint != other.Endpoint) return false;
      if (Application != other.Application) return false;
      if (Secret != other.Secret) return false;
      if (Consumerkey != other.Consumerkey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEndpoint) hash ^= Endpoint.GetHashCode();
      if (HasApplication) hash ^= Application.GetHashCode();
      if (HasSecret) hash ^= Secret.GetHashCode();
      if (HasConsumerkey) hash ^= Consumerkey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasEndpoint) {
        output.WriteRawTag(10);
        output.WriteString(Endpoint);
      }
      if (HasApplication) {
        output.WriteRawTag(18);
        output.WriteString(Application);
      }
      if (HasSecret) {
        output.WriteRawTag(26);
        output.WriteString(Secret);
      }
      if (HasConsumerkey) {
        output.WriteRawTag(34);
        output.WriteString(Consumerkey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasEndpoint) {
        output.WriteRawTag(10);
        output.WriteString(Endpoint);
      }
      if (HasApplication) {
        output.WriteRawTag(18);
        output.WriteString(Application);
      }
      if (HasSecret) {
        output.WriteRawTag(26);
        output.WriteString(Secret);
      }
      if (HasConsumerkey) {
        output.WriteRawTag(34);
        output.WriteString(Consumerkey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasEndpoint) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Endpoint);
      }
      if (HasApplication) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Application);
      }
      if (HasSecret) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Secret);
      }
      if (HasConsumerkey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Consumerkey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OvhSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasEndpoint) {
        Endpoint = other.Endpoint;
      }
      if (other.HasApplication) {
        Application = other.Application;
      }
      if (other.HasSecret) {
        Secret = other.Secret;
      }
      if (other.HasConsumerkey) {
        Consumerkey = other.Consumerkey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Endpoint = input.ReadString();
            break;
          }
          case 18: {
            Application = input.ReadString();
            break;
          }
          case 26: {
            Secret = input.ReadString();
            break;
          }
          case 34: {
            Consumerkey = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Endpoint = input.ReadString();
            break;
          }
          case 18: {
            Application = input.ReadString();
            break;
          }
          case 26: {
            Secret = input.ReadString();
            break;
          }
          case 34: {
            Consumerkey = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PostgresSQLSpec : pb::IMessage<PostgresSQLSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PostgresSQLSpec> _parser = new pb::MessageParser<PostgresSQLSpec>(() => new PostgresSQLSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostgresSQLSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostgresSQLSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostgresSQLSpec(PostgresSQLSpec other) : this() {
      _hasBits0 = other._hasBits0;
      host_ = other.host_;
      port_ = other.port_;
      database_ = other.database_;
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostgresSQLSpec Clone() {
      return new PostgresSQLSpec(this);
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 1;
    private readonly static string HostDefaultValue = "";

    private string host_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Host {
      get { return host_ ?? HostDefaultValue; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "host" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHost {
      get { return host_ != null; }
    }
    /// <summary>Clears the value of the "host" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHost() {
      host_ = null;
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private readonly static int PortDefaultValue = 0;

    private int port_;
    /// <summary>
    /// +kubebuilder:default:=5432
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { if ((_hasBits0 & 1) != 0) { return port_; } else { return PortDefaultValue; } }
      set {
        _hasBits0 |= 1;
        port_ = value;
      }
    }
    /// <summary>Gets whether the "port" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPort {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "port" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPort() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 3;
    private readonly static string DatabaseDefaultValue = "";

    private string database_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_ ?? DatabaseDefaultValue; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "database" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDatabase {
      get { return database_ != null; }
    }
    /// <summary>Clears the value of the "database" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDatabase() {
      database_ = null;
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 4;
    private readonly static string UsernameDefaultValue = "";

    private string username_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_ ?? UsernameDefaultValue; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "username" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUsername {
      get { return username_ != null; }
    }
    /// <summary>Clears the value of the "username" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUsername() {
      username_ = null;
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 5;
    private readonly static string PasswordDefaultValue = "";

    private string password_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_ ?? PasswordDefaultValue; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "password" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPassword {
      get { return password_ != null; }
    }
    /// <summary>Clears the value of the "password" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPassword() {
      password_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostgresSQLSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostgresSQLSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Host != other.Host) return false;
      if (Port != other.Port) return false;
      if (Database != other.Database) return false;
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHost) hash ^= Host.GetHashCode();
      if (HasPort) hash ^= Port.GetHashCode();
      if (HasDatabase) hash ^= Database.GetHashCode();
      if (HasUsername) hash ^= Username.GetHashCode();
      if (HasPassword) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasHost) {
        output.WriteRawTag(10);
        output.WriteString(Host);
      }
      if (HasPort) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (HasDatabase) {
        output.WriteRawTag(26);
        output.WriteString(Database);
      }
      if (HasUsername) {
        output.WriteRawTag(34);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(42);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHost) {
        output.WriteRawTag(10);
        output.WriteString(Host);
      }
      if (HasPort) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (HasDatabase) {
        output.WriteRawTag(26);
        output.WriteString(Database);
      }
      if (HasUsername) {
        output.WriteRawTag(34);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(42);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasHost) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (HasPort) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (HasDatabase) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (HasUsername) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (HasPassword) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostgresSQLSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasHost) {
        Host = other.Host;
      }
      if (other.HasPort) {
        Port = other.Port;
      }
      if (other.HasDatabase) {
        Database = other.Database;
      }
      if (other.HasUsername) {
        Username = other.Username;
      }
      if (other.HasPassword) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Host = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
          case 26: {
            Database = input.ReadString();
            break;
          }
          case 34: {
            Username = input.ReadString();
            break;
          }
          case 42: {
            Password = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Host = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
          case 26: {
            Database = input.ReadString();
            break;
          }
          case 34: {
            Username = input.ReadString();
            break;
          }
          case 42: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PrestoSpec : pb::IMessage<PrestoSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PrestoSpec> _parser = new pb::MessageParser<PrestoSpec>(() => new PrestoSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrestoSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrestoSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrestoSpec(PrestoSpec other) : this() {
      _hasBits0 = other._hasBits0;
      host_ = other.host_;
      port_ = other.port_;
      catalog_ = other.catalog_;
      schema_ = other.schema_;
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrestoSpec Clone() {
      return new PrestoSpec(this);
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 1;
    private readonly static string HostDefaultValue = "";

    private string host_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Host {
      get { return host_ ?? HostDefaultValue; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "host" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHost {
      get { return host_ != null; }
    }
    /// <summary>Clears the value of the "host" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHost() {
      host_ = null;
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private readonly static int PortDefaultValue = 0;

    private int port_;
    /// <summary>
    /// +kubebuilder:default:=8080
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { if ((_hasBits0 & 1) != 0) { return port_; } else { return PortDefaultValue; } }
      set {
        _hasBits0 |= 1;
        port_ = value;
      }
    }
    /// <summary>Gets whether the "port" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPort {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "port" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPort() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "catalog" field.</summary>
    public const int CatalogFieldNumber = 3;
    private readonly static string CatalogDefaultValue = "";

    private string catalog_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Catalog {
      get { return catalog_ ?? CatalogDefaultValue; }
      set {
        catalog_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "catalog" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCatalog {
      get { return catalog_ != null; }
    }
    /// <summary>Clears the value of the "catalog" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCatalog() {
      catalog_ = null;
    }

    /// <summary>Field number for the "schema" field.</summary>
    public const int SchemaFieldNumber = 4;
    private readonly static string SchemaDefaultValue = "";

    private string schema_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Schema {
      get { return schema_ ?? SchemaDefaultValue; }
      set {
        schema_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "schema" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSchema {
      get { return schema_ != null; }
    }
    /// <summary>Clears the value of the "schema" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSchema() {
      schema_ = null;
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 5;
    private readonly static string UsernameDefaultValue = "";

    private string username_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_ ?? UsernameDefaultValue; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "username" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUsername {
      get { return username_ != null; }
    }
    /// <summary>Clears the value of the "username" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUsername() {
      username_ = null;
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 6;
    private readonly static string PasswordDefaultValue = "";

    private string password_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_ ?? PasswordDefaultValue; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "password" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPassword {
      get { return password_ != null; }
    }
    /// <summary>Clears the value of the "password" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPassword() {
      password_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrestoSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrestoSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Host != other.Host) return false;
      if (Port != other.Port) return false;
      if (Catalog != other.Catalog) return false;
      if (Schema != other.Schema) return false;
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHost) hash ^= Host.GetHashCode();
      if (HasPort) hash ^= Port.GetHashCode();
      if (HasCatalog) hash ^= Catalog.GetHashCode();
      if (HasSchema) hash ^= Schema.GetHashCode();
      if (HasUsername) hash ^= Username.GetHashCode();
      if (HasPassword) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasHost) {
        output.WriteRawTag(10);
        output.WriteString(Host);
      }
      if (HasPort) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (HasCatalog) {
        output.WriteRawTag(26);
        output.WriteString(Catalog);
      }
      if (HasSchema) {
        output.WriteRawTag(34);
        output.WriteString(Schema);
      }
      if (HasUsername) {
        output.WriteRawTag(42);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(50);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHost) {
        output.WriteRawTag(10);
        output.WriteString(Host);
      }
      if (HasPort) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (HasCatalog) {
        output.WriteRawTag(26);
        output.WriteString(Catalog);
      }
      if (HasSchema) {
        output.WriteRawTag(34);
        output.WriteString(Schema);
      }
      if (HasUsername) {
        output.WriteRawTag(42);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(50);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasHost) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (HasPort) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (HasCatalog) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Catalog);
      }
      if (HasSchema) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Schema);
      }
      if (HasUsername) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (HasPassword) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrestoSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasHost) {
        Host = other.Host;
      }
      if (other.HasPort) {
        Port = other.Port;
      }
      if (other.HasCatalog) {
        Catalog = other.Catalog;
      }
      if (other.HasSchema) {
        Schema = other.Schema;
      }
      if (other.HasUsername) {
        Username = other.Username;
      }
      if (other.HasPassword) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Host = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
          case 26: {
            Catalog = input.ReadString();
            break;
          }
          case 34: {
            Schema = input.ReadString();
            break;
          }
          case 42: {
            Username = input.ReadString();
            break;
          }
          case 50: {
            Password = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Host = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
          case 26: {
            Catalog = input.ReadString();
            break;
          }
          case 34: {
            Schema = input.ReadString();
            break;
          }
          case 42: {
            Username = input.ReadString();
            break;
          }
          case 50: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RedShiftSpec : pb::IMessage<RedShiftSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RedShiftSpec> _parser = new pb::MessageParser<RedShiftSpec>(() => new RedShiftSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RedShiftSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedShiftSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedShiftSpec(RedShiftSpec other) : this() {
      _hasBits0 = other._hasBits0;
      host_ = other.host_;
      port_ = other.port_;
      database_ = other.database_;
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedShiftSpec Clone() {
      return new RedShiftSpec(this);
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 1;
    private readonly static string HostDefaultValue = "";

    private string host_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Host {
      get { return host_ ?? HostDefaultValue; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "host" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHost {
      get { return host_ != null; }
    }
    /// <summary>Clears the value of the "host" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHost() {
      host_ = null;
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private readonly static int PortDefaultValue = 0;

    private int port_;
    /// <summary>
    /// +kubebuilder:default:=5439
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { if ((_hasBits0 & 1) != 0) { return port_; } else { return PortDefaultValue; } }
      set {
        _hasBits0 |= 1;
        port_ = value;
      }
    }
    /// <summary>Gets whether the "port" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPort {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "port" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPort() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 3;
    private readonly static string DatabaseDefaultValue = "";

    private string database_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_ ?? DatabaseDefaultValue; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "database" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDatabase {
      get { return database_ != null; }
    }
    /// <summary>Clears the value of the "database" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDatabase() {
      database_ = null;
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 4;
    private readonly static string UsernameDefaultValue = "";

    private string username_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_ ?? UsernameDefaultValue; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "username" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUsername {
      get { return username_ != null; }
    }
    /// <summary>Clears the value of the "username" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUsername() {
      username_ = null;
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 5;
    private readonly static string PasswordDefaultValue = "";

    private string password_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_ ?? PasswordDefaultValue; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "password" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPassword {
      get { return password_ != null; }
    }
    /// <summary>Clears the value of the "password" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPassword() {
      password_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RedShiftSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RedShiftSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Host != other.Host) return false;
      if (Port != other.Port) return false;
      if (Database != other.Database) return false;
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHost) hash ^= Host.GetHashCode();
      if (HasPort) hash ^= Port.GetHashCode();
      if (HasDatabase) hash ^= Database.GetHashCode();
      if (HasUsername) hash ^= Username.GetHashCode();
      if (HasPassword) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasHost) {
        output.WriteRawTag(10);
        output.WriteString(Host);
      }
      if (HasPort) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (HasDatabase) {
        output.WriteRawTag(26);
        output.WriteString(Database);
      }
      if (HasUsername) {
        output.WriteRawTag(34);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(42);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHost) {
        output.WriteRawTag(10);
        output.WriteString(Host);
      }
      if (HasPort) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (HasDatabase) {
        output.WriteRawTag(26);
        output.WriteString(Database);
      }
      if (HasUsername) {
        output.WriteRawTag(34);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(42);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasHost) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (HasPort) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (HasDatabase) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (HasUsername) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (HasPassword) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RedShiftSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasHost) {
        Host = other.Host;
      }
      if (other.HasPort) {
        Port = other.Port;
      }
      if (other.HasDatabase) {
        Database = other.Database;
      }
      if (other.HasUsername) {
        Username = other.Username;
      }
      if (other.HasPassword) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Host = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
          case 26: {
            Database = input.ReadString();
            break;
          }
          case 34: {
            Username = input.ReadString();
            break;
          }
          case 42: {
            Password = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Host = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
          case 26: {
            Database = input.ReadString();
            break;
          }
          case 34: {
            Username = input.ReadString();
            break;
          }
          case 42: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// ServingSite is a namespace used for serving
  /// +kubebuilder:object:root=true
  /// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
  /// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
  /// +kubebuilder:subresource:status
  /// +kubebuilder:resource:path=servingsites,singular=servingsite,categories={infra,modela}
  /// </summary>
  public sealed partial class ServingSite : pb::IMessage<ServingSite>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServingSite> _parser = new pb::MessageParser<ServingSite>(() => new ServingSite());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServingSite> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServingSite() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServingSite(ServingSite other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServingSite Clone() {
      return new ServingSite(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSiteSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSiteSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSiteStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSiteStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServingSite);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServingSite other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServingSite other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSiteSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSiteStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSiteSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSiteStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSiteSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSiteStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// ServingSiteCondition describes the state of a servingsite at a certain point.
  /// </summary>
  public sealed partial class ServingSiteCondition : pb::IMessage<ServingSiteCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServingSiteCondition> _parser = new pb::MessageParser<ServingSiteCondition>(() => new ServingSiteCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServingSiteCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServingSiteCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServingSiteCondition(ServingSiteCondition other) : this() {
      type_ = other.type_;
      status_ = other.status_;
      lastTransitionTime_ = other.lastTransitionTime_ != null ? other.lastTransitionTime_.Clone() : null;
      reason_ = other.reason_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServingSiteCondition Clone() {
      return new ServingSiteCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// Type of  condition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    /// <summary>
    /// Status of the condition, one of True, False, Unknown.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "lastTransitionTime" field.</summary>
    public const int LastTransitionTimeFieldNumber = 3;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastTransitionTime_;
    /// <summary>
    /// Last time the condition transitioned from one status to another.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastTransitionTime {
      get { return lastTransitionTime_; }
      set {
        lastTransitionTime_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 4;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// The reason for the condition's last transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 5;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// A human readable message indicating details about the transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServingSiteCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServingSiteCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LastTransitionTime, other.LastTransitionTime)) return false;
      if (Reason != other.Reason) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (lastTransitionTime_ != null) hash ^= LastTransitionTime.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (lastTransitionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTransitionTime);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServingSiteCondition other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.lastTransitionTime_ != null) {
        if (lastTransitionTime_ == null) {
          LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastTransitionTime.MergeFrom(other.LastTransitionTime);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// ServingSiteList is a list of ServingSite
  /// </summary>
  public sealed partial class ServingSiteList : pb::IMessage<ServingSiteList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServingSiteList> _parser = new pb::MessageParser<ServingSiteList>(() => new ServingSiteList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServingSiteList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServingSiteList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServingSiteList(ServingSiteList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServingSiteList Clone() {
      return new ServingSiteList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSite> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSite.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSite> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSite>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSite> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServingSiteList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServingSiteList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServingSiteList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ServingSiteSpec : pb::IMessage<ServingSiteSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServingSiteSpec> _parser = new pb::MessageParser<ServingSiteSpec>(() => new ServingSiteSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServingSiteSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServingSiteSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServingSiteSpec(ServingSiteSpec other) : this() {
      description_ = other.description_;
      tenantRef_ = other.tenantRef_ != null ? other.tenantRef_.Clone() : null;
      quotaSpec_ = other.quotaSpec_ != null ? other.quotaSpec_.Clone() : null;
      limitRangeSpec_ = other.limitRangeSpec_ != null ? other.limitRangeSpec_.Clone() : null;
      ingressName_ = other.ingressName_;
      fdqn_ = other.fdqn_;
      clusterName_ = other.clusterName_;
      owner_ = other.owner_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServingSiteSpec Clone() {
      return new ServingSiteSpec(this);
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 1;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// Description is user provided description
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:default:=""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "tenantRef" field.</summary>
    public const int TenantRefFieldNumber = 2;
    private global::K8S.Io.Api.Core.V1.ObjectReference tenantRef_;
    /// <summary>
    /// Reference to the tenant owning this serving site.
    /// Default to default tenant.
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Api.Core.V1.ObjectReference TenantRef {
      get { return tenantRef_; }
      set {
        tenantRef_ = value;
      }
    }

    /// <summary>Field number for the "quotaSpec" field.</summary>
    public const int QuotaSpecFieldNumber = 3;
    private global::K8S.Io.Api.Core.V1.ResourceQuotaSpec quotaSpec_;
    /// <summary>
    /// QuotaSpec is  resource quota for the serving site
    /// By default, not quota is applied
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Api.Core.V1.ResourceQuotaSpec QuotaSpec {
      get { return quotaSpec_; }
      set {
        quotaSpec_ = value;
      }
    }

    /// <summary>Field number for the "limitRangeSpec" field.</summary>
    public const int LimitRangeSpecFieldNumber = 4;
    private global::K8S.Io.Api.Core.V1.LimitRangeSpec limitRangeSpec_;
    /// <summary>
    /// LimitRangeSpec limit range for the serving site
    /// By default, no limit range apply
    /// +kubebuilder:validation:Optional.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Api.Core.V1.LimitRangeSpec LimitRangeSpec {
      get { return limitRangeSpec_; }
      set {
        limitRangeSpec_ = value;
      }
    }

    /// <summary>Field number for the "ingressName" field.</summary>
    public const int IngressNameFieldNumber = 5;
    private readonly static string IngressNameDefaultValue = "";

    private string ingressName_;
    /// <summary>
    /// IngressName denote the name of the ingress object where the serving site
    /// places the external points used to access the predictors
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:default:=""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IngressName {
      get { return ingressName_ ?? IngressNameDefaultValue; }
      set {
        ingressName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ingressName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIngressName {
      get { return ingressName_ != null; }
    }
    /// <summary>Clears the value of the "ingressName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIngressName() {
      ingressName_ = null;
    }

    /// <summary>Field number for the "fdqn" field.</summary>
    public const int FdqnFieldNumber = 6;
    private readonly static string FdqnDefaultValue = "";

    private string fdqn_;
    /// <summary>
    /// The FDQN for this site. This will register with ingress.
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:default:=""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fdqn {
      get { return fdqn_ ?? FdqnDefaultValue; }
      set {
        fdqn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "fdqn" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFdqn {
      get { return fdqn_ != null; }
    }
    /// <summary>Clears the value of the "fdqn" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFdqn() {
      fdqn_ = null;
    }

    /// <summary>Field number for the "clusterName" field.</summary>
    public const int ClusterNameFieldNumber = 7;
    private readonly static string ClusterNameDefaultValue = "";

    private string clusterName_;
    /// <summary>
    /// ClusterName is  the virtual cluster name in case that the lab is not on the same cluster
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:default:=""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterName {
      get { return clusterName_ ?? ClusterNameDefaultValue; }
      set {
        clusterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clusterName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClusterName {
      get { return clusterName_ != null; }
    }
    /// <summary>Clears the value of the "clusterName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClusterName() {
      clusterName_ = null;
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 8;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// Owner is the owner account name
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:default:="no-one"
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwner() {
      owner_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServingSiteSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServingSiteSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Description != other.Description) return false;
      if (!object.Equals(TenantRef, other.TenantRef)) return false;
      if (!object.Equals(QuotaSpec, other.QuotaSpec)) return false;
      if (!object.Equals(LimitRangeSpec, other.LimitRangeSpec)) return false;
      if (IngressName != other.IngressName) return false;
      if (Fdqn != other.Fdqn) return false;
      if (ClusterName != other.ClusterName) return false;
      if (Owner != other.Owner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDescription) hash ^= Description.GetHashCode();
      if (tenantRef_ != null) hash ^= TenantRef.GetHashCode();
      if (quotaSpec_ != null) hash ^= QuotaSpec.GetHashCode();
      if (limitRangeSpec_ != null) hash ^= LimitRangeSpec.GetHashCode();
      if (HasIngressName) hash ^= IngressName.GetHashCode();
      if (HasFdqn) hash ^= Fdqn.GetHashCode();
      if (HasClusterName) hash ^= ClusterName.GetHashCode();
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDescription) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      if (tenantRef_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TenantRef);
      }
      if (quotaSpec_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(QuotaSpec);
      }
      if (limitRangeSpec_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LimitRangeSpec);
      }
      if (HasIngressName) {
        output.WriteRawTag(42);
        output.WriteString(IngressName);
      }
      if (HasFdqn) {
        output.WriteRawTag(50);
        output.WriteString(Fdqn);
      }
      if (HasClusterName) {
        output.WriteRawTag(58);
        output.WriteString(ClusterName);
      }
      if (HasOwner) {
        output.WriteRawTag(66);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDescription) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      if (tenantRef_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TenantRef);
      }
      if (quotaSpec_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(QuotaSpec);
      }
      if (limitRangeSpec_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LimitRangeSpec);
      }
      if (HasIngressName) {
        output.WriteRawTag(42);
        output.WriteString(IngressName);
      }
      if (HasFdqn) {
        output.WriteRawTag(50);
        output.WriteString(Fdqn);
      }
      if (HasClusterName) {
        output.WriteRawTag(58);
        output.WriteString(ClusterName);
      }
      if (HasOwner) {
        output.WriteRawTag(66);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (tenantRef_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TenantRef);
      }
      if (quotaSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QuotaSpec);
      }
      if (limitRangeSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LimitRangeSpec);
      }
      if (HasIngressName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IngressName);
      }
      if (HasFdqn) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fdqn);
      }
      if (HasClusterName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterName);
      }
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServingSiteSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.tenantRef_ != null) {
        if (tenantRef_ == null) {
          TenantRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
        }
        TenantRef.MergeFrom(other.TenantRef);
      }
      if (other.quotaSpec_ != null) {
        if (quotaSpec_ == null) {
          QuotaSpec = new global::K8S.Io.Api.Core.V1.ResourceQuotaSpec();
        }
        QuotaSpec.MergeFrom(other.QuotaSpec);
      }
      if (other.limitRangeSpec_ != null) {
        if (limitRangeSpec_ == null) {
          LimitRangeSpec = new global::K8S.Io.Api.Core.V1.LimitRangeSpec();
        }
        LimitRangeSpec.MergeFrom(other.LimitRangeSpec);
      }
      if (other.HasIngressName) {
        IngressName = other.IngressName;
      }
      if (other.HasFdqn) {
        Fdqn = other.Fdqn;
      }
      if (other.HasClusterName) {
        ClusterName = other.ClusterName;
      }
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 18: {
            if (tenantRef_ == null) {
              TenantRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(TenantRef);
            break;
          }
          case 26: {
            if (quotaSpec_ == null) {
              QuotaSpec = new global::K8S.Io.Api.Core.V1.ResourceQuotaSpec();
            }
            input.ReadMessage(QuotaSpec);
            break;
          }
          case 34: {
            if (limitRangeSpec_ == null) {
              LimitRangeSpec = new global::K8S.Io.Api.Core.V1.LimitRangeSpec();
            }
            input.ReadMessage(LimitRangeSpec);
            break;
          }
          case 42: {
            IngressName = input.ReadString();
            break;
          }
          case 50: {
            Fdqn = input.ReadString();
            break;
          }
          case 58: {
            ClusterName = input.ReadString();
            break;
          }
          case 66: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 18: {
            if (tenantRef_ == null) {
              TenantRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(TenantRef);
            break;
          }
          case 26: {
            if (quotaSpec_ == null) {
              QuotaSpec = new global::K8S.Io.Api.Core.V1.ResourceQuotaSpec();
            }
            input.ReadMessage(QuotaSpec);
            break;
          }
          case 34: {
            if (limitRangeSpec_ == null) {
              LimitRangeSpec = new global::K8S.Io.Api.Core.V1.LimitRangeSpec();
            }
            input.ReadMessage(LimitRangeSpec);
            break;
          }
          case 42: {
            IngressName = input.ReadString();
            break;
          }
          case 50: {
            Fdqn = input.ReadString();
            break;
          }
          case 58: {
            ClusterName = input.ReadString();
            break;
          }
          case 66: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ServingSiteStatus : pb::IMessage<ServingSiteStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServingSiteStatus> _parser = new pb::MessageParser<ServingSiteStatus>(() => new ServingSiteStatus());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServingSiteStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServingSiteStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServingSiteStatus(ServingSiteStatus other) : this() {
      _hasBits0 = other._hasBits0;
      conditions_ = other.conditions_.Clone();
      activePredictors_ = other.activePredictors_;
      inactivePredictors_ = other.inactivePredictors_;
      totalPredictorServiceFailed_ = other.totalPredictorServiceFailed_;
      totalPredictorDataDriftFailed_ = other.totalPredictorDataDriftFailed_;
      totalPredictorAccuracyFailed_ = other.totalPredictorAccuracyFailed_;
      lastDailyPredictions_ = other.lastDailyPredictions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServingSiteStatus Clone() {
      return new ServingSiteStatus(this);
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSiteCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(10, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSiteCondition.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSiteCondition> conditions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSiteCondition>();
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.ServingSiteCondition> Conditions {
      get { return conditions_; }
    }

    /// <summary>Field number for the "activePredictors" field.</summary>
    public const int ActivePredictorsFieldNumber = 2;
    private readonly static int ActivePredictorsDefaultValue = 0;

    private int activePredictors_;
    /// <summary>
    /// active predictors
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActivePredictors {
      get { if ((_hasBits0 & 1) != 0) { return activePredictors_; } else { return ActivePredictorsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        activePredictors_ = value;
      }
    }
    /// <summary>Gets whether the "activePredictors" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasActivePredictors {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "activePredictors" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearActivePredictors() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "inactivePredictors" field.</summary>
    public const int InactivePredictorsFieldNumber = 3;
    private readonly static int InactivePredictorsDefaultValue = 0;

    private int inactivePredictors_;
    /// <summary>
    /// inactive predictors
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InactivePredictors {
      get { if ((_hasBits0 & 2) != 0) { return inactivePredictors_; } else { return InactivePredictorsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        inactivePredictors_ = value;
      }
    }
    /// <summary>Gets whether the "inactivePredictors" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInactivePredictors {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "inactivePredictors" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInactivePredictors() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "totalPredictorServiceFailed" field.</summary>
    public const int TotalPredictorServiceFailedFieldNumber = 4;
    private readonly static int TotalPredictorServiceFailedDefaultValue = 0;

    private int totalPredictorServiceFailed_;
    /// <summary>
    /// total predictors service failed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalPredictorServiceFailed {
      get { if ((_hasBits0 & 4) != 0) { return totalPredictorServiceFailed_; } else { return TotalPredictorServiceFailedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        totalPredictorServiceFailed_ = value;
      }
    }
    /// <summary>Gets whether the "totalPredictorServiceFailed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTotalPredictorServiceFailed {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "totalPredictorServiceFailed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTotalPredictorServiceFailed() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "totalPredictorDataDriftFailed" field.</summary>
    public const int TotalPredictorDataDriftFailedFieldNumber = 5;
    private readonly static int TotalPredictorDataDriftFailedDefaultValue = 0;

    private int totalPredictorDataDriftFailed_;
    /// <summary>
    /// total predictors with data drift failed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalPredictorDataDriftFailed {
      get { if ((_hasBits0 & 8) != 0) { return totalPredictorDataDriftFailed_; } else { return TotalPredictorDataDriftFailedDefaultValue; } }
      set {
        _hasBits0 |= 8;
        totalPredictorDataDriftFailed_ = value;
      }
    }
    /// <summary>Gets whether the "totalPredictorDataDriftFailed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTotalPredictorDataDriftFailed {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "totalPredictorDataDriftFailed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTotalPredictorDataDriftFailed() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "totalPredictorAccuracyFailed" field.</summary>
    public const int TotalPredictorAccuracyFailedFieldNumber = 6;
    private readonly static int TotalPredictorAccuracyFailedDefaultValue = 0;

    private int totalPredictorAccuracyFailed_;
    /// <summary>
    /// total predictors accuracy failed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalPredictorAccuracyFailed {
      get { if ((_hasBits0 & 16) != 0) { return totalPredictorAccuracyFailed_; } else { return TotalPredictorAccuracyFailedDefaultValue; } }
      set {
        _hasBits0 |= 16;
        totalPredictorAccuracyFailed_ = value;
      }
    }
    /// <summary>Gets whether the "totalPredictorAccuracyFailed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTotalPredictorAccuracyFailed {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "totalPredictorAccuracyFailed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTotalPredictorAccuracyFailed() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "lastDailyPredictions" field.</summary>
    public const int LastDailyPredictionsFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_lastDailyPredictions_codec
        = pb::FieldCodec.ForInt32(56);
    private readonly pbc::RepeatedField<int> lastDailyPredictions_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// Last 7 days predictions
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> LastDailyPredictions {
      get { return lastDailyPredictions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServingSiteStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServingSiteStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!conditions_.Equals(other.conditions_)) return false;
      if (ActivePredictors != other.ActivePredictors) return false;
      if (InactivePredictors != other.InactivePredictors) return false;
      if (TotalPredictorServiceFailed != other.TotalPredictorServiceFailed) return false;
      if (TotalPredictorDataDriftFailed != other.TotalPredictorDataDriftFailed) return false;
      if (TotalPredictorAccuracyFailed != other.TotalPredictorAccuracyFailed) return false;
      if(!lastDailyPredictions_.Equals(other.lastDailyPredictions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= conditions_.GetHashCode();
      if (HasActivePredictors) hash ^= ActivePredictors.GetHashCode();
      if (HasInactivePredictors) hash ^= InactivePredictors.GetHashCode();
      if (HasTotalPredictorServiceFailed) hash ^= TotalPredictorServiceFailed.GetHashCode();
      if (HasTotalPredictorDataDriftFailed) hash ^= TotalPredictorDataDriftFailed.GetHashCode();
      if (HasTotalPredictorAccuracyFailed) hash ^= TotalPredictorAccuracyFailed.GetHashCode();
      hash ^= lastDailyPredictions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (HasActivePredictors) {
        output.WriteRawTag(16);
        output.WriteInt32(ActivePredictors);
      }
      if (HasInactivePredictors) {
        output.WriteRawTag(24);
        output.WriteInt32(InactivePredictors);
      }
      if (HasTotalPredictorServiceFailed) {
        output.WriteRawTag(32);
        output.WriteInt32(TotalPredictorServiceFailed);
      }
      if (HasTotalPredictorDataDriftFailed) {
        output.WriteRawTag(40);
        output.WriteInt32(TotalPredictorDataDriftFailed);
      }
      if (HasTotalPredictorAccuracyFailed) {
        output.WriteRawTag(48);
        output.WriteInt32(TotalPredictorAccuracyFailed);
      }
      lastDailyPredictions_.WriteTo(output, _repeated_lastDailyPredictions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (HasActivePredictors) {
        output.WriteRawTag(16);
        output.WriteInt32(ActivePredictors);
      }
      if (HasInactivePredictors) {
        output.WriteRawTag(24);
        output.WriteInt32(InactivePredictors);
      }
      if (HasTotalPredictorServiceFailed) {
        output.WriteRawTag(32);
        output.WriteInt32(TotalPredictorServiceFailed);
      }
      if (HasTotalPredictorDataDriftFailed) {
        output.WriteRawTag(40);
        output.WriteInt32(TotalPredictorDataDriftFailed);
      }
      if (HasTotalPredictorAccuracyFailed) {
        output.WriteRawTag(48);
        output.WriteInt32(TotalPredictorAccuracyFailed);
      }
      lastDailyPredictions_.WriteTo(ref output, _repeated_lastDailyPredictions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (HasActivePredictors) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActivePredictors);
      }
      if (HasInactivePredictors) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InactivePredictors);
      }
      if (HasTotalPredictorServiceFailed) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPredictorServiceFailed);
      }
      if (HasTotalPredictorDataDriftFailed) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPredictorDataDriftFailed);
      }
      if (HasTotalPredictorAccuracyFailed) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPredictorAccuracyFailed);
      }
      size += lastDailyPredictions_.CalculateSize(_repeated_lastDailyPredictions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServingSiteStatus other) {
      if (other == null) {
        return;
      }
      conditions_.Add(other.conditions_);
      if (other.HasActivePredictors) {
        ActivePredictors = other.ActivePredictors;
      }
      if (other.HasInactivePredictors) {
        InactivePredictors = other.InactivePredictors;
      }
      if (other.HasTotalPredictorServiceFailed) {
        TotalPredictorServiceFailed = other.TotalPredictorServiceFailed;
      }
      if (other.HasTotalPredictorDataDriftFailed) {
        TotalPredictorDataDriftFailed = other.TotalPredictorDataDriftFailed;
      }
      if (other.HasTotalPredictorAccuracyFailed) {
        TotalPredictorAccuracyFailed = other.TotalPredictorAccuracyFailed;
      }
      lastDailyPredictions_.Add(other.lastDailyPredictions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
          case 16: {
            ActivePredictors = input.ReadInt32();
            break;
          }
          case 24: {
            InactivePredictors = input.ReadInt32();
            break;
          }
          case 32: {
            TotalPredictorServiceFailed = input.ReadInt32();
            break;
          }
          case 40: {
            TotalPredictorDataDriftFailed = input.ReadInt32();
            break;
          }
          case 48: {
            TotalPredictorAccuracyFailed = input.ReadInt32();
            break;
          }
          case 58:
          case 56: {
            lastDailyPredictions_.AddEntriesFrom(input, _repeated_lastDailyPredictions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
          case 16: {
            ActivePredictors = input.ReadInt32();
            break;
          }
          case 24: {
            InactivePredictors = input.ReadInt32();
            break;
          }
          case 32: {
            TotalPredictorServiceFailed = input.ReadInt32();
            break;
          }
          case 40: {
            TotalPredictorDataDriftFailed = input.ReadInt32();
            break;
          }
          case 48: {
            TotalPredictorAccuracyFailed = input.ReadInt32();
            break;
          }
          case 58:
          case 56: {
            lastDailyPredictions_.AddEntriesFrom(ref input, _repeated_lastDailyPredictions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SlackSpec : pb::IMessage<SlackSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SlackSpec> _parser = new pb::MessageParser<SlackSpec>(() => new SlackSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SlackSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SlackSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SlackSpec(SlackSpec other) : this() {
      webhookUrl_ = other.webhookUrl_;
      channel_ = other.channel_;
      userName_ = other.userName_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SlackSpec Clone() {
      return new SlackSpec(this);
    }

    /// <summary>Field number for the "webhookUrl" field.</summary>
    public const int WebhookUrlFieldNumber = 1;
    private readonly static string WebhookUrlDefaultValue = "";

    private string webhookUrl_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WebhookUrl {
      get { return webhookUrl_ ?? WebhookUrlDefaultValue; }
      set {
        webhookUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "webhookUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasWebhookUrl {
      get { return webhookUrl_ != null; }
    }
    /// <summary>Clears the value of the "webhookUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearWebhookUrl() {
      webhookUrl_ = null;
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 2;
    private readonly static string ChannelDefaultValue = "";

    private string channel_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_ ?? ChannelDefaultValue; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "channel" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasChannel {
      get { return channel_ != null; }
    }
    /// <summary>Clears the value of the "channel" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearChannel() {
      channel_ = null;
    }

    /// <summary>Field number for the "userName" field.</summary>
    public const int UserNameFieldNumber = 3;
    private readonly static string UserNameDefaultValue = "";

    private string userName_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_ ?? UserNameDefaultValue; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "userName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserName {
      get { return userName_ != null; }
    }
    /// <summary>Clears the value of the "userName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserName() {
      userName_ = null;
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 4;
    private readonly static string TokenDefaultValue = "";

    private string token_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearToken() {
      token_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SlackSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SlackSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WebhookUrl != other.WebhookUrl) return false;
      if (Channel != other.Channel) return false;
      if (UserName != other.UserName) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasWebhookUrl) hash ^= WebhookUrl.GetHashCode();
      if (HasChannel) hash ^= Channel.GetHashCode();
      if (HasUserName) hash ^= UserName.GetHashCode();
      if (HasToken) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasWebhookUrl) {
        output.WriteRawTag(10);
        output.WriteString(WebhookUrl);
      }
      if (HasChannel) {
        output.WriteRawTag(18);
        output.WriteString(Channel);
      }
      if (HasUserName) {
        output.WriteRawTag(26);
        output.WriteString(UserName);
      }
      if (HasToken) {
        output.WriteRawTag(34);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasWebhookUrl) {
        output.WriteRawTag(10);
        output.WriteString(WebhookUrl);
      }
      if (HasChannel) {
        output.WriteRawTag(18);
        output.WriteString(Channel);
      }
      if (HasUserName) {
        output.WriteRawTag(26);
        output.WriteString(UserName);
      }
      if (HasToken) {
        output.WriteRawTag(34);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasWebhookUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WebhookUrl);
      }
      if (HasChannel) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (HasUserName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SlackSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasWebhookUrl) {
        WebhookUrl = other.WebhookUrl;
      }
      if (other.HasChannel) {
        Channel = other.Channel;
      }
      if (other.HasUserName) {
        UserName = other.UserName;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            WebhookUrl = input.ReadString();
            break;
          }
          case 18: {
            Channel = input.ReadString();
            break;
          }
          case 26: {
            UserName = input.ReadString();
            break;
          }
          case 34: {
            Token = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            WebhookUrl = input.ReadString();
            break;
          }
          case 18: {
            Channel = input.ReadString();
            break;
          }
          case 26: {
            UserName = input.ReadString();
            break;
          }
          case 34: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SmtpSpec : pb::IMessage<SmtpSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SmtpSpec> _parser = new pb::MessageParser<SmtpSpec>(() => new SmtpSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SmtpSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SmtpSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SmtpSpec(SmtpSpec other) : this() {
      _hasBits0 = other._hasBits0;
      host_ = other.host_;
      port_ = other.port_;
      userName_ = other.userName_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SmtpSpec Clone() {
      return new SmtpSpec(this);
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 1;
    private readonly static string HostDefaultValue = "";

    private string host_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Host {
      get { return host_ ?? HostDefaultValue; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "host" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHost {
      get { return host_ != null; }
    }
    /// <summary>Clears the value of the "host" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHost() {
      host_ = null;
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private readonly static int PortDefaultValue = 0;

    private int port_;
    /// <summary>
    /// +kubebuilder:default:=25
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { if ((_hasBits0 & 1) != 0) { return port_; } else { return PortDefaultValue; } }
      set {
        _hasBits0 |= 1;
        port_ = value;
      }
    }
    /// <summary>Gets whether the "port" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPort {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "port" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPort() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "userName" field.</summary>
    public const int UserNameFieldNumber = 3;
    private readonly static string UserNameDefaultValue = "";

    private string userName_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_ ?? UserNameDefaultValue; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "userName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserName {
      get { return userName_ != null; }
    }
    /// <summary>Clears the value of the "userName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserName() {
      userName_ = null;
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 4;
    private readonly static string PasswordDefaultValue = "";

    private string password_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_ ?? PasswordDefaultValue; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "password" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPassword {
      get { return password_ != null; }
    }
    /// <summary>Clears the value of the "password" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPassword() {
      password_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SmtpSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SmtpSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Host != other.Host) return false;
      if (Port != other.Port) return false;
      if (UserName != other.UserName) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHost) hash ^= Host.GetHashCode();
      if (HasPort) hash ^= Port.GetHashCode();
      if (HasUserName) hash ^= UserName.GetHashCode();
      if (HasPassword) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasHost) {
        output.WriteRawTag(10);
        output.WriteString(Host);
      }
      if (HasPort) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (HasUserName) {
        output.WriteRawTag(26);
        output.WriteString(UserName);
      }
      if (HasPassword) {
        output.WriteRawTag(34);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHost) {
        output.WriteRawTag(10);
        output.WriteString(Host);
      }
      if (HasPort) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (HasUserName) {
        output.WriteRawTag(26);
        output.WriteString(UserName);
      }
      if (HasPassword) {
        output.WriteRawTag(34);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasHost) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (HasPort) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (HasUserName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (HasPassword) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SmtpSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasHost) {
        Host = other.Host;
      }
      if (other.HasPort) {
        Port = other.Port;
      }
      if (other.HasUserName) {
        UserName = other.UserName;
      }
      if (other.HasPassword) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Host = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
          case 26: {
            UserName = input.ReadString();
            break;
          }
          case 34: {
            Password = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Host = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
          case 26: {
            UserName = input.ReadString();
            break;
          }
          case 34: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SnowFlakeSpec : pb::IMessage<SnowFlakeSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SnowFlakeSpec> _parser = new pb::MessageParser<SnowFlakeSpec>(() => new SnowFlakeSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SnowFlakeSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SnowFlakeSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SnowFlakeSpec(SnowFlakeSpec other) : this() {
      account_ = other.account_;
      warehouse_ = other.warehouse_;
      database_ = other.database_;
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SnowFlakeSpec Clone() {
      return new SnowFlakeSpec(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private readonly static string AccountDefaultValue = "";

    private string account_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_ ?? AccountDefaultValue; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "account" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccount {
      get { return account_ != null; }
    }
    /// <summary>Clears the value of the "account" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccount() {
      account_ = null;
    }

    /// <summary>Field number for the "warehouse" field.</summary>
    public const int WarehouseFieldNumber = 2;
    private readonly static string WarehouseDefaultValue = "";

    private string warehouse_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Warehouse {
      get { return warehouse_ ?? WarehouseDefaultValue; }
      set {
        warehouse_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "warehouse" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasWarehouse {
      get { return warehouse_ != null; }
    }
    /// <summary>Clears the value of the "warehouse" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearWarehouse() {
      warehouse_ = null;
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 3;
    private readonly static string DatabaseDefaultValue = "";

    private string database_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_ ?? DatabaseDefaultValue; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "database" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDatabase {
      get { return database_ != null; }
    }
    /// <summary>Clears the value of the "database" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDatabase() {
      database_ = null;
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 4;
    private readonly static string UsernameDefaultValue = "";

    private string username_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_ ?? UsernameDefaultValue; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "username" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUsername {
      get { return username_ != null; }
    }
    /// <summary>Clears the value of the "username" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUsername() {
      username_ = null;
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 5;
    private readonly static string PasswordDefaultValue = "";

    private string password_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_ ?? PasswordDefaultValue; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "password" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPassword {
      get { return password_ != null; }
    }
    /// <summary>Clears the value of the "password" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPassword() {
      password_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SnowFlakeSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SnowFlakeSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (Warehouse != other.Warehouse) return false;
      if (Database != other.Database) return false;
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccount) hash ^= Account.GetHashCode();
      if (HasWarehouse) hash ^= Warehouse.GetHashCode();
      if (HasDatabase) hash ^= Database.GetHashCode();
      if (HasUsername) hash ^= Username.GetHashCode();
      if (HasPassword) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccount) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (HasWarehouse) {
        output.WriteRawTag(18);
        output.WriteString(Warehouse);
      }
      if (HasDatabase) {
        output.WriteRawTag(26);
        output.WriteString(Database);
      }
      if (HasUsername) {
        output.WriteRawTag(34);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(42);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccount) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (HasWarehouse) {
        output.WriteRawTag(18);
        output.WriteString(Warehouse);
      }
      if (HasDatabase) {
        output.WriteRawTag(26);
        output.WriteString(Database);
      }
      if (HasUsername) {
        output.WriteRawTag(34);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(42);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccount) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (HasWarehouse) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Warehouse);
      }
      if (HasDatabase) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (HasUsername) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (HasPassword) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SnowFlakeSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasAccount) {
        Account = other.Account;
      }
      if (other.HasWarehouse) {
        Warehouse = other.Warehouse;
      }
      if (other.HasDatabase) {
        Database = other.Database;
      }
      if (other.HasUsername) {
        Username = other.Username;
      }
      if (other.HasPassword) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 18: {
            Warehouse = input.ReadString();
            break;
          }
          case 26: {
            Database = input.ReadString();
            break;
          }
          case 34: {
            Username = input.ReadString();
            break;
          }
          case 42: {
            Password = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 18: {
            Warehouse = input.ReadString();
            break;
          }
          case 26: {
            Database = input.ReadString();
            break;
          }
          case 34: {
            Username = input.ReadString();
            break;
          }
          case 42: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SqlLightSpec : pb::IMessage<SqlLightSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SqlLightSpec> _parser = new pb::MessageParser<SqlLightSpec>(() => new SqlLightSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SqlLightSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SqlLightSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SqlLightSpec(SqlLightSpec other) : this() {
      fileName_ = other.fileName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SqlLightSpec Clone() {
      return new SqlLightSpec(this);
    }

    /// <summary>Field number for the "fileName" field.</summary>
    public const int FileNameFieldNumber = 1;
    private readonly static string FileNameDefaultValue = "";

    private string fileName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileName {
      get { return fileName_ ?? FileNameDefaultValue; }
      set {
        fileName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "fileName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFileName {
      get { return fileName_ != null; }
    }
    /// <summary>Clears the value of the "fileName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFileName() {
      fileName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SqlLightSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SqlLightSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FileName != other.FileName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFileName) hash ^= FileName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFileName) {
        output.WriteRawTag(10);
        output.WriteString(FileName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFileName) {
        output.WriteRawTag(10);
        output.WriteString(FileName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasFileName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SqlLightSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasFileName) {
        FileName = other.FileName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FileName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            FileName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// +kubebuilder:subresource:status
  /// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
  /// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
  /// +kubebuilder:resource:path=tenants,singular=tenant,categories={infra,modela}
  /// Tenant represents root tenant.
  /// </summary>
  public sealed partial class Tenant : pb::IMessage<Tenant>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Tenant> _parser = new pb::MessageParser<Tenant>(() => new Tenant());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Tenant> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tenant() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tenant(Tenant other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tenant Clone() {
      return new Tenant(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.TenantSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.TenantSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.TenantStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.TenantStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Tenant);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Tenant other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Tenant other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.TenantSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.TenantStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.TenantSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.TenantStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.TenantSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.TenantStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// TenantCondition describes the state of a tenant at a certain point.
  /// </summary>
  public sealed partial class TenantCondition : pb::IMessage<TenantCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TenantCondition> _parser = new pb::MessageParser<TenantCondition>(() => new TenantCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TenantCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TenantCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TenantCondition(TenantCondition other) : this() {
      type_ = other.type_;
      status_ = other.status_;
      lastTransitionTime_ = other.lastTransitionTime_ != null ? other.lastTransitionTime_.Clone() : null;
      reason_ = other.reason_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TenantCondition Clone() {
      return new TenantCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// Type of tenant condition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    /// <summary>
    /// Status of the condition, one of True, False, Unknown.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "lastTransitionTime" field.</summary>
    public const int LastTransitionTimeFieldNumber = 3;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastTransitionTime_;
    /// <summary>
    /// Last time the condition transitioned from one status to another.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastTransitionTime {
      get { return lastTransitionTime_; }
      set {
        lastTransitionTime_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 4;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// The reason for the condition's last transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 5;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// A human readable message indicating details about the transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TenantCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TenantCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LastTransitionTime, other.LastTransitionTime)) return false;
      if (Reason != other.Reason) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (lastTransitionTime_ != null) hash ^= LastTransitionTime.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (lastTransitionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTransitionTime);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TenantCondition other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.lastTransitionTime_ != null) {
        if (lastTransitionTime_ == null) {
          LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastTransitionTime.MergeFrom(other.LastTransitionTime);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// TenantList represent list of tenants.
  /// </summary>
  public sealed partial class TenantList : pb::IMessage<TenantList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TenantList> _parser = new pb::MessageParser<TenantList>(() => new TenantList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TenantList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TenantList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TenantList(TenantList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TenantList Clone() {
      return new TenantList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Tenant> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Tenant.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Tenant> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Tenant>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.Tenant> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TenantList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TenantList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TenantList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// TenantSpec defines the desired state of Tenant
  /// </summary>
  public sealed partial class TenantSpec : pb::IMessage<TenantSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TenantSpec> _parser = new pb::MessageParser<TenantSpec>(() => new TenantSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TenantSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TenantSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TenantSpec(TenantSpec other) : this() {
      defaultLab_ = other.defaultLab_ != null ? other.defaultLab_.Clone() : null;
      defaultServingSiteRef_ = other.defaultServingSiteRef_ != null ? other.defaultServingSiteRef_.Clone() : null;
      description_ = other.description_;
      owner_ = other.owner_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TenantSpec Clone() {
      return new TenantSpec(this);
    }

    /// <summary>Field number for the "defaultLab" field.</summary>
    public const int DefaultLabFieldNumber = 1;
    private global::K8S.Io.Api.Core.V1.ObjectReference defaultLab_;
    /// <summary>
    /// the default lab for this account
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Api.Core.V1.ObjectReference DefaultLab {
      get { return defaultLab_; }
      set {
        defaultLab_ = value;
      }
    }

    /// <summary>Field number for the "defaultServingSiteRef" field.</summary>
    public const int DefaultServingSiteRefFieldNumber = 2;
    private global::K8S.Io.Api.Core.V1.ObjectReference defaultServingSiteRef_;
    /// <summary>
    /// the default serving site for this account
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Api.Core.V1.ObjectReference DefaultServingSiteRef {
      get { return defaultServingSiteRef_; }
      set {
        defaultServingSiteRef_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// Description is user provided description
    /// +kubebuilder:default:=""
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:MaxLength=512
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 4;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// Owner is the owner account name
    /// +kubebuilder:default:=""
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwner() {
      owner_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TenantSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TenantSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DefaultLab, other.DefaultLab)) return false;
      if (!object.Equals(DefaultServingSiteRef, other.DefaultServingSiteRef)) return false;
      if (Description != other.Description) return false;
      if (Owner != other.Owner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (defaultLab_ != null) hash ^= DefaultLab.GetHashCode();
      if (defaultServingSiteRef_ != null) hash ^= DefaultServingSiteRef.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (defaultLab_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DefaultLab);
      }
      if (defaultServingSiteRef_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DefaultServingSiteRef);
      }
      if (HasDescription) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (HasOwner) {
        output.WriteRawTag(34);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (defaultLab_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DefaultLab);
      }
      if (defaultServingSiteRef_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DefaultServingSiteRef);
      }
      if (HasDescription) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (HasOwner) {
        output.WriteRawTag(34);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (defaultLab_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DefaultLab);
      }
      if (defaultServingSiteRef_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DefaultServingSiteRef);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TenantSpec other) {
      if (other == null) {
        return;
      }
      if (other.defaultLab_ != null) {
        if (defaultLab_ == null) {
          DefaultLab = new global::K8S.Io.Api.Core.V1.ObjectReference();
        }
        DefaultLab.MergeFrom(other.DefaultLab);
      }
      if (other.defaultServingSiteRef_ != null) {
        if (defaultServingSiteRef_ == null) {
          DefaultServingSiteRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
        }
        DefaultServingSiteRef.MergeFrom(other.DefaultServingSiteRef);
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (defaultLab_ == null) {
              DefaultLab = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(DefaultLab);
            break;
          }
          case 18: {
            if (defaultServingSiteRef_ == null) {
              DefaultServingSiteRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(DefaultServingSiteRef);
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (defaultLab_ == null) {
              DefaultLab = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(DefaultLab);
            break;
          }
          case 18: {
            if (defaultServingSiteRef_ == null) {
              DefaultServingSiteRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(DefaultServingSiteRef);
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// TenantStatus defines the actual state of a Tenant
  /// </summary>
  public sealed partial class TenantStatus : pb::IMessage<TenantStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TenantStatus> _parser = new pb::MessageParser<TenantStatus>(() => new TenantStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TenantStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TenantStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TenantStatus(TenantStatus other) : this() {
      conditions_ = other.conditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TenantStatus Clone() {
      return new TenantStatus(this);
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.TenantCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(10, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.TenantCondition.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.TenantCondition> conditions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.TenantCondition>();
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.TenantCondition> Conditions {
      get { return conditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TenantStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TenantStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!conditions_.Equals(other.conditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= conditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TenantStatus other) {
      if (other == null) {
        return;
      }
      conditions_.Add(other.conditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// +kubebuilder:subresource:status
  /// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
  /// +kubebuilder:printcolumn:name="StorageConnection",type="string",JSONPath=".spec.connectionName",description="virtual bucket connections"
  /// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
  /// +kubebuilder:resource:path=virtualbuckets,shortName=vb,singular=virtualbucket,categories={infra,modela,all}
  /// VirtualBucket represent a object storage location in the cloud or on-prem
  /// </summary>
  public sealed partial class VirtualBucket : pb::IMessage<VirtualBucket>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VirtualBucket> _parser = new pb::MessageParser<VirtualBucket>(() => new VirtualBucket());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VirtualBucket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualBucket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualBucket(VirtualBucket other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualBucket Clone() {
      return new VirtualBucket(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucketSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucketSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucketStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucketStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VirtualBucket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VirtualBucket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VirtualBucket other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucketSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucketStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucketSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucketStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucketSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucketStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// VitualBucketCondition describes the state of a virtual bucket at a certain point.
  /// </summary>
  public sealed partial class VirtualBucketCondition : pb::IMessage<VirtualBucketCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VirtualBucketCondition> _parser = new pb::MessageParser<VirtualBucketCondition>(() => new VirtualBucketCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VirtualBucketCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualBucketCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualBucketCondition(VirtualBucketCondition other) : this() {
      type_ = other.type_;
      status_ = other.status_;
      lastTransitionTime_ = other.lastTransitionTime_ != null ? other.lastTransitionTime_.Clone() : null;
      reason_ = other.reason_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualBucketCondition Clone() {
      return new VirtualBucketCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// Type of bucket condition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    /// <summary>
    /// Status of the condition, one of True, False, Unknown.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "lastTransitionTime" field.</summary>
    public const int LastTransitionTimeFieldNumber = 3;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastTransitionTime_;
    /// <summary>
    /// Last time the condition transitioned from one status to another.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastTransitionTime {
      get { return lastTransitionTime_; }
      set {
        lastTransitionTime_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 4;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// The reason for the condition's last transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 5;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// A human readable message indicating details about the transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VirtualBucketCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VirtualBucketCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LastTransitionTime, other.LastTransitionTime)) return false;
      if (Reason != other.Reason) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (lastTransitionTime_ != null) hash ^= LastTransitionTime.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (lastTransitionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTransitionTime);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VirtualBucketCondition other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.lastTransitionTime_ != null) {
        if (lastTransitionTime_ == null) {
          LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastTransitionTime.MergeFrom(other.LastTransitionTime);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// VirtualBucketList is a list of VirtualBucket
  /// </summary>
  public sealed partial class VirtualBucketList : pb::IMessage<VirtualBucketList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VirtualBucketList> _parser = new pb::MessageParser<VirtualBucketList>(() => new VirtualBucketList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VirtualBucketList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualBucketList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualBucketList(VirtualBucketList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualBucketList Clone() {
      return new VirtualBucketList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucket> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucket.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucket> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucket>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucket> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VirtualBucketList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VirtualBucketList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VirtualBucketList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// VirtualBucketSpec defines the desired state of Bucket
  /// </summary>
  public sealed partial class VirtualBucketSpec : pb::IMessage<VirtualBucketSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VirtualBucketSpec> _parser = new pb::MessageParser<VirtualBucketSpec>(() => new VirtualBucketSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VirtualBucketSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualBucketSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualBucketSpec(VirtualBucketSpec other) : this() {
      tenantRef_ = other.tenantRef_ != null ? other.tenantRef_.Clone() : null;
      connectionName_ = other.connectionName_;
      description_ = other.description_;
      owner_ = other.owner_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualBucketSpec Clone() {
      return new VirtualBucketSpec(this);
    }

    /// <summary>Field number for the "tenantRef" field.</summary>
    public const int TenantRefFieldNumber = 1;
    private global::K8S.Io.Api.Core.V1.ObjectReference tenantRef_;
    /// <summary>
    /// The owner of the virtual bucket
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Api.Core.V1.ObjectReference TenantRef {
      get { return tenantRef_; }
      set {
        tenantRef_ = value;
      }
    }

    /// <summary>Field number for the "connectionName" field.</summary>
    public const int ConnectionNameFieldNumber = 2;
    private readonly static string ConnectionNameDefaultValue = "";

    private string connectionName_;
    /// <summary>
    /// ConnectionName specify the api connections of this bucket cloud provider.
    /// +kubebuilder:validation:Required
    /// +kubebuilder:validation:MaxLength=64
    /// +kubebuilder:validation:MinLength=1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConnectionName {
      get { return connectionName_ ?? ConnectionNameDefaultValue; }
      set {
        connectionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "connectionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConnectionName {
      get { return connectionName_ != null; }
    }
    /// <summary>Clears the value of the "connectionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConnectionName() {
      connectionName_ = null;
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// User provided description
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:MaxLength=512
    /// +kubebuilder:default:=""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 4;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// Owner of the bucket
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:default:=""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwner() {
      owner_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VirtualBucketSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VirtualBucketSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TenantRef, other.TenantRef)) return false;
      if (ConnectionName != other.ConnectionName) return false;
      if (Description != other.Description) return false;
      if (Owner != other.Owner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (tenantRef_ != null) hash ^= TenantRef.GetHashCode();
      if (HasConnectionName) hash ^= ConnectionName.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (tenantRef_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TenantRef);
      }
      if (HasConnectionName) {
        output.WriteRawTag(18);
        output.WriteString(ConnectionName);
      }
      if (HasDescription) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (HasOwner) {
        output.WriteRawTag(34);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (tenantRef_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TenantRef);
      }
      if (HasConnectionName) {
        output.WriteRawTag(18);
        output.WriteString(ConnectionName);
      }
      if (HasDescription) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (HasOwner) {
        output.WriteRawTag(34);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (tenantRef_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TenantRef);
      }
      if (HasConnectionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionName);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VirtualBucketSpec other) {
      if (other == null) {
        return;
      }
      if (other.tenantRef_ != null) {
        if (tenantRef_ == null) {
          TenantRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
        }
        TenantRef.MergeFrom(other.TenantRef);
      }
      if (other.HasConnectionName) {
        ConnectionName = other.ConnectionName;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (tenantRef_ == null) {
              TenantRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(TenantRef);
            break;
          }
          case 18: {
            ConnectionName = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (tenantRef_ == null) {
              TenantRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(TenantRef);
            break;
          }
          case 18: {
            ConnectionName = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// VirtualBucketStatus defines the actual state of a VirtualBucket
  /// </summary>
  public sealed partial class VirtualBucketStatus : pb::IMessage<VirtualBucketStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VirtualBucketStatus> _parser = new pb::MessageParser<VirtualBucketStatus>(() => new VirtualBucketStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VirtualBucketStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualBucketStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualBucketStatus(VirtualBucketStatus other) : this() {
      conditions_ = other.conditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualBucketStatus Clone() {
      return new VirtualBucketStatus(this);
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucketCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(10, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucketCondition.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucketCondition> conditions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucketCondition>();
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualBucketCondition> Conditions {
      get { return conditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VirtualBucketStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VirtualBucketStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!conditions_.Equals(other.conditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= conditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VirtualBucketStatus other) {
      if (other == null) {
        return;
      }
      conditions_.Add(other.conditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class VirtualCluster : pb::IMessage<VirtualCluster>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VirtualCluster> _parser = new pb::MessageParser<VirtualCluster>(() => new VirtualCluster());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VirtualCluster> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualCluster() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualCluster(VirtualCluster other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualCluster Clone() {
      return new VirtualCluster(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualClusterSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualClusterSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualClusterStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualClusterStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VirtualCluster);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VirtualCluster other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VirtualCluster other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualClusterSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualClusterStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualClusterSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualClusterStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualClusterSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualClusterStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// DeploymentCondition describes the state of a deployment at a certain point.
  /// </summary>
  public sealed partial class VirtualClusterCondition : pb::IMessage<VirtualClusterCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VirtualClusterCondition> _parser = new pb::MessageParser<VirtualClusterCondition>(() => new VirtualClusterCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VirtualClusterCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualClusterCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualClusterCondition(VirtualClusterCondition other) : this() {
      type_ = other.type_;
      status_ = other.status_;
      lastTransitionTime_ = other.lastTransitionTime_ != null ? other.lastTransitionTime_.Clone() : null;
      reason_ = other.reason_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualClusterCondition Clone() {
      return new VirtualClusterCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// Type of account condition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    /// <summary>
    /// Status of the condition, one of True, False, Unknown.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "lastTransitionTime" field.</summary>
    public const int LastTransitionTimeFieldNumber = 3;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastTransitionTime_;
    /// <summary>
    /// Last time the condition transitioned from one status to another.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastTransitionTime {
      get { return lastTransitionTime_; }
      set {
        lastTransitionTime_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 4;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// The reason for the condition's last transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 5;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// A human readable message indicating details about the transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VirtualClusterCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VirtualClusterCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LastTransitionTime, other.LastTransitionTime)) return false;
      if (Reason != other.Reason) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (lastTransitionTime_ != null) hash ^= LastTransitionTime.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (lastTransitionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTransitionTime);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VirtualClusterCondition other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.lastTransitionTime_ != null) {
        if (lastTransitionTime_ == null) {
          LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastTransitionTime.MergeFrom(other.LastTransitionTime);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// VirtualClusterList is a list of VirtualCluster
  /// </summary>
  public sealed partial class VirtualClusterList : pb::IMessage<VirtualClusterList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VirtualClusterList> _parser = new pb::MessageParser<VirtualClusterList>(() => new VirtualClusterList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VirtualClusterList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualClusterList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualClusterList(VirtualClusterList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualClusterList Clone() {
      return new VirtualClusterList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualCluster> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualCluster.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualCluster> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualCluster>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualCluster> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VirtualClusterList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VirtualClusterList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VirtualClusterList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class VirtualClusterSpec : pb::IMessage<VirtualClusterSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VirtualClusterSpec> _parser = new pb::MessageParser<VirtualClusterSpec>(() => new VirtualClusterSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VirtualClusterSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualClusterSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualClusterSpec(VirtualClusterSpec other) : this() {
      _hasBits0 = other._hasBits0;
      description_ = other.description_;
      nodes_ = other.nodes_;
      nodeClassName_ = other.nodeClassName_;
      gpus_ = other.gpus_;
      gpuClassName_ = other.gpuClassName_;
      volumeSize_ = other.volumeSize_;
      spot_ = other.spot_;
      connectionName_ = other.connectionName_;
      owner_ = other.owner_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualClusterSpec Clone() {
      return new VirtualClusterSpec(this);
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 1;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// Description is the user provided description
    /// +kubebuilder:default:=""
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "nodes" field.</summary>
    public const int NodesFieldNumber = 2;
    private readonly static int NodesDefaultValue = 0;

    private int nodes_;
    /// <summary>
    /// Nodes is the desired number of nodes
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:default:=1
    /// +kubebuilder:validation:Minimum=1
    /// +kubebuilder:validation:Maximum=10
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Nodes {
      get { if ((_hasBits0 & 1) != 0) { return nodes_; } else { return NodesDefaultValue; } }
      set {
        _hasBits0 |= 1;
        nodes_ = value;
      }
    }
    /// <summary>Gets whether the "nodes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNodes {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "nodes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNodes() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "nodeClassName" field.</summary>
    public const int NodeClassNameFieldNumber = 3;
    private readonly static string NodeClassNameDefaultValue = "";

    private string nodeClassName_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// NodeClassName is the class of nodes or vm
    /// +kubebuilder:default:=""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeClassName {
      get { return nodeClassName_ ?? NodeClassNameDefaultValue; }
      set {
        nodeClassName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "nodeClassName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNodeClassName {
      get { return nodeClassName_ != null; }
    }
    /// <summary>Clears the value of the "nodeClassName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNodeClassName() {
      nodeClassName_ = null;
    }

    /// <summary>Field number for the "gpus" field.</summary>
    public const int GpusFieldNumber = 4;
    private readonly static int GpusDefaultValue = 0;

    private int gpus_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// Gpus is the desired number of gpus
    /// +kubebuilder:default:=0
    /// +kubebuilder:validation:Minimum=0
    /// +kubebuilder:validation:Maximum=10
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gpus {
      get { if ((_hasBits0 & 2) != 0) { return gpus_; } else { return GpusDefaultValue; } }
      set {
        _hasBits0 |= 2;
        gpus_ = value;
      }
    }
    /// <summary>Gets whether the "gpus" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGpus {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "gpus" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGpus() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "gpuClassName" field.</summary>
    public const int GpuClassNameFieldNumber = 5;
    private readonly static string GpuClassNameDefaultValue = "";

    private string gpuClassName_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// GpuClassName is the The class of gpu.
    /// +kubebuilder:default:=""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GpuClassName {
      get { return gpuClassName_ ?? GpuClassNameDefaultValue; }
      set {
        gpuClassName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "gpuClassName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGpuClassName {
      get { return gpuClassName_ != null; }
    }
    /// <summary>Clears the value of the "gpuClassName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGpuClassName() {
      gpuClassName_ = null;
    }

    /// <summary>Field number for the "volumeSize" field.</summary>
    public const int VolumeSizeFieldNumber = 6;
    private readonly static int VolumeSizeDefaultValue = 0;

    private int volumeSize_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// VolumeSize is the size of the volume that would be mounted on all the node of the cluster
    /// +kubebuilder:default:=0
    /// +kubebuilder:validation:Minimum=0
    /// +kubebuilder:validation:Maximum=10
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VolumeSize {
      get { if ((_hasBits0 & 4) != 0) { return volumeSize_; } else { return VolumeSizeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        volumeSize_ = value;
      }
    }
    /// <summary>Gets whether the "volumeSize" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVolumeSize {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "volumeSize" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVolumeSize() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "spot" field.</summary>
    public const int SpotFieldNumber = 7;
    private readonly static bool SpotDefaultValue = false;

    private bool spot_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// Spot indicate if we should we use spot instances.
    /// +kubebuilder:default:=false
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Spot {
      get { if ((_hasBits0 & 8) != 0) { return spot_; } else { return SpotDefaultValue; } }
      set {
        _hasBits0 |= 8;
        spot_ = value;
      }
    }
    /// <summary>Gets whether the "spot" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSpot {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "spot" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSpot() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "connectionName" field.</summary>
    public const int ConnectionNameFieldNumber = 8;
    private readonly static string ConnectionNameDefaultValue = "";

    private string connectionName_;
    /// <summary>
    /// ConnectionName refer to the name of the provider connection
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConnectionName {
      get { return connectionName_ ?? ConnectionNameDefaultValue; }
      set {
        connectionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "connectionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConnectionName {
      get { return connectionName_ != null; }
    }
    /// <summary>Clears the value of the "connectionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConnectionName() {
      connectionName_ = null;
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 9;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// Owner is the account name of the owner of this cluster
    /// +kubebuilder:default:=""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwner() {
      owner_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VirtualClusterSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VirtualClusterSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Description != other.Description) return false;
      if (Nodes != other.Nodes) return false;
      if (NodeClassName != other.NodeClassName) return false;
      if (Gpus != other.Gpus) return false;
      if (GpuClassName != other.GpuClassName) return false;
      if (VolumeSize != other.VolumeSize) return false;
      if (Spot != other.Spot) return false;
      if (ConnectionName != other.ConnectionName) return false;
      if (Owner != other.Owner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDescription) hash ^= Description.GetHashCode();
      if (HasNodes) hash ^= Nodes.GetHashCode();
      if (HasNodeClassName) hash ^= NodeClassName.GetHashCode();
      if (HasGpus) hash ^= Gpus.GetHashCode();
      if (HasGpuClassName) hash ^= GpuClassName.GetHashCode();
      if (HasVolumeSize) hash ^= VolumeSize.GetHashCode();
      if (HasSpot) hash ^= Spot.GetHashCode();
      if (HasConnectionName) hash ^= ConnectionName.GetHashCode();
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDescription) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      if (HasNodes) {
        output.WriteRawTag(16);
        output.WriteInt32(Nodes);
      }
      if (HasNodeClassName) {
        output.WriteRawTag(26);
        output.WriteString(NodeClassName);
      }
      if (HasGpus) {
        output.WriteRawTag(32);
        output.WriteInt32(Gpus);
      }
      if (HasGpuClassName) {
        output.WriteRawTag(42);
        output.WriteString(GpuClassName);
      }
      if (HasVolumeSize) {
        output.WriteRawTag(48);
        output.WriteInt32(VolumeSize);
      }
      if (HasSpot) {
        output.WriteRawTag(56);
        output.WriteBool(Spot);
      }
      if (HasConnectionName) {
        output.WriteRawTag(66);
        output.WriteString(ConnectionName);
      }
      if (HasOwner) {
        output.WriteRawTag(74);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDescription) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      if (HasNodes) {
        output.WriteRawTag(16);
        output.WriteInt32(Nodes);
      }
      if (HasNodeClassName) {
        output.WriteRawTag(26);
        output.WriteString(NodeClassName);
      }
      if (HasGpus) {
        output.WriteRawTag(32);
        output.WriteInt32(Gpus);
      }
      if (HasGpuClassName) {
        output.WriteRawTag(42);
        output.WriteString(GpuClassName);
      }
      if (HasVolumeSize) {
        output.WriteRawTag(48);
        output.WriteInt32(VolumeSize);
      }
      if (HasSpot) {
        output.WriteRawTag(56);
        output.WriteBool(Spot);
      }
      if (HasConnectionName) {
        output.WriteRawTag(66);
        output.WriteString(ConnectionName);
      }
      if (HasOwner) {
        output.WriteRawTag(74);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (HasNodes) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Nodes);
      }
      if (HasNodeClassName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeClassName);
      }
      if (HasGpus) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gpus);
      }
      if (HasGpuClassName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GpuClassName);
      }
      if (HasVolumeSize) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VolumeSize);
      }
      if (HasSpot) {
        size += 1 + 1;
      }
      if (HasConnectionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionName);
      }
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VirtualClusterSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.HasNodes) {
        Nodes = other.Nodes;
      }
      if (other.HasNodeClassName) {
        NodeClassName = other.NodeClassName;
      }
      if (other.HasGpus) {
        Gpus = other.Gpus;
      }
      if (other.HasGpuClassName) {
        GpuClassName = other.GpuClassName;
      }
      if (other.HasVolumeSize) {
        VolumeSize = other.VolumeSize;
      }
      if (other.HasSpot) {
        Spot = other.Spot;
      }
      if (other.HasConnectionName) {
        ConnectionName = other.ConnectionName;
      }
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 16: {
            Nodes = input.ReadInt32();
            break;
          }
          case 26: {
            NodeClassName = input.ReadString();
            break;
          }
          case 32: {
            Gpus = input.ReadInt32();
            break;
          }
          case 42: {
            GpuClassName = input.ReadString();
            break;
          }
          case 48: {
            VolumeSize = input.ReadInt32();
            break;
          }
          case 56: {
            Spot = input.ReadBool();
            break;
          }
          case 66: {
            ConnectionName = input.ReadString();
            break;
          }
          case 74: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 16: {
            Nodes = input.ReadInt32();
            break;
          }
          case 26: {
            NodeClassName = input.ReadString();
            break;
          }
          case 32: {
            Gpus = input.ReadInt32();
            break;
          }
          case 42: {
            GpuClassName = input.ReadString();
            break;
          }
          case 48: {
            VolumeSize = input.ReadInt32();
            break;
          }
          case 56: {
            Spot = input.ReadBool();
            break;
          }
          case 66: {
            ConnectionName = input.ReadString();
            break;
          }
          case 74: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class VirtualClusterStatus : pb::IMessage<VirtualClusterStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VirtualClusterStatus> _parser = new pb::MessageParser<VirtualClusterStatus>(() => new VirtualClusterStatus());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VirtualClusterStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualClusterStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualClusterStatus(VirtualClusterStatus other) : this() {
      _hasBits0 = other._hasBits0;
      availableNodes_ = other.availableNodes_;
      availableGpus_ = other.availableGpus_;
      conditions_ = other.conditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualClusterStatus Clone() {
      return new VirtualClusterStatus(this);
    }

    /// <summary>Field number for the "availableNodes" field.</summary>
    public const int AvailableNodesFieldNumber = 1;
    private readonly static int AvailableNodesDefaultValue = 0;

    private int availableNodes_;
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AvailableNodes {
      get { if ((_hasBits0 & 1) != 0) { return availableNodes_; } else { return AvailableNodesDefaultValue; } }
      set {
        _hasBits0 |= 1;
        availableNodes_ = value;
      }
    }
    /// <summary>Gets whether the "availableNodes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAvailableNodes {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "availableNodes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAvailableNodes() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "availableGpus" field.</summary>
    public const int AvailableGpusFieldNumber = 2;
    private readonly static int AvailableGpusDefaultValue = 0;

    private int availableGpus_;
    /// <summary>
    /// Number of available Gpus
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AvailableGpus {
      get { if ((_hasBits0 & 2) != 0) { return availableGpus_; } else { return AvailableGpusDefaultValue; } }
      set {
        _hasBits0 |= 2;
        availableGpus_ = value;
      }
    }
    /// <summary>Gets whether the "availableGpus" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAvailableGpus {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "availableGpus" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAvailableGpus() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualClusterCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(26, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualClusterCondition.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualClusterCondition> conditions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualClusterCondition>();
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualClusterCondition> Conditions {
      get { return conditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VirtualClusterStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VirtualClusterStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AvailableNodes != other.AvailableNodes) return false;
      if (AvailableGpus != other.AvailableGpus) return false;
      if(!conditions_.Equals(other.conditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAvailableNodes) hash ^= AvailableNodes.GetHashCode();
      if (HasAvailableGpus) hash ^= AvailableGpus.GetHashCode();
      hash ^= conditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAvailableNodes) {
        output.WriteRawTag(8);
        output.WriteInt32(AvailableNodes);
      }
      if (HasAvailableGpus) {
        output.WriteRawTag(16);
        output.WriteInt32(AvailableGpus);
      }
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAvailableNodes) {
        output.WriteRawTag(8);
        output.WriteInt32(AvailableNodes);
      }
      if (HasAvailableGpus) {
        output.WriteRawTag(16);
        output.WriteInt32(AvailableGpus);
      }
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAvailableNodes) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvailableNodes);
      }
      if (HasAvailableGpus) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvailableGpus);
      }
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VirtualClusterStatus other) {
      if (other == null) {
        return;
      }
      if (other.HasAvailableNodes) {
        AvailableNodes = other.AvailableNodes;
      }
      if (other.HasAvailableGpus) {
        AvailableGpus = other.AvailableGpus;
      }
      conditions_.Add(other.conditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AvailableNodes = input.ReadInt32();
            break;
          }
          case 16: {
            AvailableGpus = input.ReadInt32();
            break;
          }
          case 26: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AvailableNodes = input.ReadInt32();
            break;
          }
          case 16: {
            AvailableGpus = input.ReadInt32();
            break;
          }
          case 26: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// +kubebuilder:subresource:status
  /// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
  /// +kubebuilder:printcolumn:name="StorageConnection",type="string",JSONPath=".spec.connectionName",description="virtual bucket connections"
  /// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
  /// +kubebuilder:resource:path=virtualvolumes,shortName=vol,singular=virtualvolume,categories={infra,modela,all}
  /// VirtualVolume represent a volume api object
  /// </summary>
  public sealed partial class VirtualVolume : pb::IMessage<VirtualVolume>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VirtualVolume> _parser = new pb::MessageParser<VirtualVolume>(() => new VirtualVolume());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VirtualVolume> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualVolume() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualVolume(VirtualVolume other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualVolume Clone() {
      return new VirtualVolume(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolumeSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolumeSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolumeStatus status_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolumeStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VirtualVolume);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VirtualVolume other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VirtualVolume other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolumeSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolumeStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolumeSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolumeStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolumeSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolumeStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class VirtualVolumeCondition : pb::IMessage<VirtualVolumeCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VirtualVolumeCondition> _parser = new pb::MessageParser<VirtualVolumeCondition>(() => new VirtualVolumeCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VirtualVolumeCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[80]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualVolumeCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualVolumeCondition(VirtualVolumeCondition other) : this() {
      type_ = other.type_;
      status_ = other.status_;
      lastTransitionTime_ = other.lastTransitionTime_ != null ? other.lastTransitionTime_.Clone() : null;
      reason_ = other.reason_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualVolumeCondition Clone() {
      return new VirtualVolumeCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// Type of account condition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    /// <summary>
    /// Status of the condition, one of True, False, Unknown.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "lastTransitionTime" field.</summary>
    public const int LastTransitionTimeFieldNumber = 4;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastTransitionTime_;
    /// <summary>
    /// Last time the condition transitioned from one status to another.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastTransitionTime {
      get { return lastTransitionTime_; }
      set {
        lastTransitionTime_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 5;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// The reason for the condition's last transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 6;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// A human readable message indicating details about the transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VirtualVolumeCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VirtualVolumeCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LastTransitionTime, other.LastTransitionTime)) return false;
      if (Reason != other.Reason) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (lastTransitionTime_ != null) hash ^= LastTransitionTime.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(42);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(50);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(42);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(50);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (lastTransitionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTransitionTime);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VirtualVolumeCondition other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.lastTransitionTime_ != null) {
        if (lastTransitionTime_ == null) {
          LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastTransitionTime.MergeFrom(other.LastTransitionTime);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 34: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 42: {
            Reason = input.ReadString();
            break;
          }
          case 50: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 34: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 42: {
            Reason = input.ReadString();
            break;
          }
          case 50: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// VirtualVolumeList is a list of mdvolumes
  /// </summary>
  public sealed partial class VirtualVolumeList : pb::IMessage<VirtualVolumeList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VirtualVolumeList> _parser = new pb::MessageParser<VirtualVolumeList>(() => new VirtualVolumeList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VirtualVolumeList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[81]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualVolumeList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualVolumeList(VirtualVolumeList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualVolumeList Clone() {
      return new VirtualVolumeList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolume> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolume.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolume> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolume>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolume> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VirtualVolumeList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VirtualVolumeList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VirtualVolumeList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// VirtualVolumeSpec define the desired state of the mdvolume.
  /// </summary>
  public sealed partial class VirtualVolumeSpec : pb::IMessage<VirtualVolumeSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VirtualVolumeSpec> _parser = new pb::MessageParser<VirtualVolumeSpec>(() => new VirtualVolumeSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VirtualVolumeSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[82]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualVolumeSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualVolumeSpec(VirtualVolumeSpec other) : this() {
      tenantRef_ = other.tenantRef_ != null ? other.tenantRef_.Clone() : null;
      connectionName_ = other.connectionName_;
      description_ = other.description_;
      owner_ = other.owner_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualVolumeSpec Clone() {
      return new VirtualVolumeSpec(this);
    }

    /// <summary>Field number for the "tenantRef" field.</summary>
    public const int TenantRefFieldNumber = 1;
    private global::K8S.Io.Api.Core.V1.ObjectReference tenantRef_;
    /// <summary>
    /// The Lab that own the git repository
    /// Default to the default volume.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Api.Core.V1.ObjectReference TenantRef {
      get { return tenantRef_; }
      set {
        tenantRef_ = value;
      }
    }

    /// <summary>Field number for the "connectionName" field.</summary>
    public const int ConnectionNameFieldNumber = 2;
    private readonly static string ConnectionNameDefaultValue = "";

    private string connectionName_;
    /// <summary>
    ///  specify the api connections of this mdvolume cloud provider.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConnectionName {
      get { return connectionName_ ?? ConnectionNameDefaultValue; }
      set {
        connectionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "connectionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConnectionName {
      get { return connectionName_ != null; }
    }
    /// <summary>Clears the value of the "connectionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConnectionName() {
      connectionName_ = null;
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// User provided description
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:default:=""
    /// +kubebuilder:validation:MaxLength=512
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 4;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// The owner account name
    /// +kubebuilder:default:="no-one"
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwner() {
      owner_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VirtualVolumeSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VirtualVolumeSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TenantRef, other.TenantRef)) return false;
      if (ConnectionName != other.ConnectionName) return false;
      if (Description != other.Description) return false;
      if (Owner != other.Owner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (tenantRef_ != null) hash ^= TenantRef.GetHashCode();
      if (HasConnectionName) hash ^= ConnectionName.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (tenantRef_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TenantRef);
      }
      if (HasConnectionName) {
        output.WriteRawTag(18);
        output.WriteString(ConnectionName);
      }
      if (HasDescription) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (HasOwner) {
        output.WriteRawTag(34);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (tenantRef_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TenantRef);
      }
      if (HasConnectionName) {
        output.WriteRawTag(18);
        output.WriteString(ConnectionName);
      }
      if (HasDescription) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (HasOwner) {
        output.WriteRawTag(34);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (tenantRef_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TenantRef);
      }
      if (HasConnectionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionName);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VirtualVolumeSpec other) {
      if (other == null) {
        return;
      }
      if (other.tenantRef_ != null) {
        if (tenantRef_ == null) {
          TenantRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
        }
        TenantRef.MergeFrom(other.TenantRef);
      }
      if (other.HasConnectionName) {
        ConnectionName = other.ConnectionName;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (tenantRef_ == null) {
              TenantRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(TenantRef);
            break;
          }
          case 18: {
            ConnectionName = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (tenantRef_ == null) {
              TenantRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(TenantRef);
            break;
          }
          case 18: {
            ConnectionName = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class VirtualVolumeStatus : pb::IMessage<VirtualVolumeStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VirtualVolumeStatus> _parser = new pb::MessageParser<VirtualVolumeStatus>(() => new VirtualVolumeStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VirtualVolumeStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[83]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualVolumeStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualVolumeStatus(VirtualVolumeStatus other) : this() {
      conditions_ = other.conditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualVolumeStatus Clone() {
      return new VirtualVolumeStatus(this);
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolumeCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(10, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolumeCondition.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolumeCondition> conditions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolumeCondition>();
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.VirtualVolumeCondition> Conditions {
      get { return conditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VirtualVolumeStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VirtualVolumeStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!conditions_.Equals(other.conditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= conditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VirtualVolumeStatus other) {
      if (other == null) {
        return;
      }
      conditions_.Add(other.conditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WebhookSpec : pb::IMessage<WebhookSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WebhookSpec> _parser = new pb::MessageParser<WebhookSpec>(() => new WebhookSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebhookSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Infra.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[84]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebhookSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebhookSpec(WebhookSpec other) : this() {
      url_ = other.url_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebhookSpec Clone() {
      return new WebhookSpec(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    /// <summary>
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUrl() {
      url_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebhookSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebhookSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUrl) hash ^= Url.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebhookSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
