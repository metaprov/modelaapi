// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: github.com/metaprov/modelaapi/pkg/apis/inference/v1alpha1/generated.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1 {

  /// <summary>Holder for reflection information generated from github.com/metaprov/modelaapi/pkg/apis/inference/v1alpha1/generated.proto</summary>
  public static partial class GeneratedReflection {

    #region Descriptor
    /// <summary>File descriptor for github.com/metaprov/modelaapi/pkg/apis/inference/v1alpha1/generated.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GeneratedReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CklnaXRodWIuY29tL21ldGFwcm92L21vZGVsZGFwaS9wa2cvYXBpcy9pbmZl",
            "cmVuY2UvdjFhbHBoYTEvZ2VuZXJhdGVkLnByb3RvEjlnaXRodWIuY29tLm1l",
            "dGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5pbmZlcmVuY2UudjFhbHBoYTEa",
            "R2dpdGh1Yi5jb20vbWV0YXByb3YvbW9kZWxkYXBpL3BrZy9hcGlzL2NhdGFs",
            "b2cvdjFhbHBoYTEvZ2VuZXJhdGVkLnByb3RvGkRnaXRodWIuY29tL21ldGFw",
            "cm92L21vZGVsZGFwaS9wa2cvYXBpcy9kYXRhL3YxYWxwaGExL2dlbmVyYXRl",
            "ZC5wcm90bxoiazhzLmlvL2FwaS9jb3JlL3YxL2dlbmVyYXRlZC5wcm90bxo0",
            "azhzLmlvL2FwaW1hY2hpbmVyeS9wa2cvYXBpcy9tZXRhL3YxL2dlbmVyYXRl",
            "ZC5wcm90bxovazhzLmlvL2FwaW1hY2hpbmVyeS9wa2cvcnVudGltZS9nZW5l",
            "cmF0ZWQucHJvdG8aNms4cy5pby9hcGltYWNoaW5lcnkvcGtnL3J1bnRpbWUv",
            "c2NoZW1hL2dlbmVyYXRlZC5wcm90byI+Cg5Cb3RDaGFubmVsU3BlYxIWCg5j",
            "b25uZWN0aW9uTmFtZRgBIAEoCRIUCgxub3RpZmllck5hbWUYAiABKAkicwoR",
            "QnVja2V0Q2hhbm5lbFNwZWMSFgoOY29ubmVjdGlvbk5hbWUYASABKAkSHgoW",
            "ZGF0YWJhc2VDb25uZWN0aW9uTmFtZRgCIAEoCRIQCghpbnB1dEtleRgDIAEo",
            "CRIUCgxzY2FuSW50ZXJ2YWwYBCABKAUiLAoNQ2hhbm5lbFN0YXR1cxIMCgRu",
            "YW1lGAEgASgJEg0KBWVycm9yGAIgASgJIv0BCgdDdXJ0YWluEkIKCG1ldGFk",
            "YXRhGAEgASgLMjAuazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRh",
            "LnYxLk9iamVjdE1ldGESVAoEc3BlYxgCIAEoCzJGLmdpdGh1Yi5jb20ubWV0",
            "YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmluZmVyZW5jZS52MWFscGhhMS5D",
            "dXJ0YWluU3BlYxJYCgZzdGF0dXMYAyABKAsySC5naXRodWIuY29tLm1ldGFw",
            "cm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5pbmZlcmVuY2UudjFhbHBoYTEuQ3Vy",
            "dGFpblN0YXR1cyKZAQoQQ3VydGFpbkNvbmRpdGlvbhIMCgR0eXBlGAEgASgJ",
            "Eg4KBnN0YXR1cxgCIAEoCRJGChJsYXN0VHJhbnNpdGlvblRpbWUYAyABKAsy",
            "Ki5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuVGltZRIO",
            "CgZyZWFzb24YBCABKAkSDwoHbWVzc2FnZRgFIAEoCSKiAQoLQ3VydGFpbkxp",
            "c3QSQAoIbWV0YWRhdGEYASABKAsyLi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBr",
            "Zy5hcGlzLm1ldGEudjEuTGlzdE1ldGESUQoFaXRlbXMYAiADKAsyQi5naXRo",
            "dWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5pbmZlcmVuY2Uu",
            "djFhbHBoYTEuQ3VydGFpbiKXAQoLQ3VydGFpblNwZWMSEwoLZGVzY3JpcHRp",
            "b24YASABKAkSEwoLdmVyc2lvbk5hbWUYAiABKAkSFwoPc2VydmluZ3NpdGVO",
            "YW1lGAMgASgJEhMKC2RhdGFzZXROYW1lGAQgASgJEg8KB3dpemFyZHMYBSAD",
            "KAkSEAoIcXVlc3Rpb24YBiABKAkSDQoFb3duZXIYByABKAkicAoNQ3VydGFp",
            "blN0YXR1cxJfCgpjb25kaXRpb25zGAEgAygLMksuZ2l0aHViLmNvbS5tZXRh",
            "cHJvdi5tb2RlbGRhcGkucGtnLmFwaXMuaW5mZXJlbmNlLnYxYWxwaGExLkN1",
            "cnRhaW5Db25kaXRpb24irwEKE0N1cnRhaW5UZW1wbGF0ZVNwZWMSQgoIbWV0",
            "YWRhdGEYASABKAsyMC5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1l",
            "dGEudjEuT2JqZWN0TWV0YRJUCgRzcGVjGAIgASgLMkYuZ2l0aHViLmNvbS5t",
            "ZXRhcHJvdi5tb2RlbGRhcGkucGtnLmFwaXMuaW5mZXJlbmNlLnYxYWxwaGEx",
            "LkN1cnRhaW5TcGVjIl8KDkRyaWZ0Q2hlY2tTcGVjEhAKCGNyb25FeHByGAEg",
            "ASgJEhAKCHRyZXNob2xkGAIgASgBEhQKDG5vdGlmaWVyTmFtZRgDIAEoCRIT",
            "Cgt0ZXN0RGF0YXNldBgEIAEoCSKkAQoTTW9kZWxEZXBsb3ltZW50U3BlYxIR",
            "Cgltb2RlbE5hbWUYASABKAkSEAoIcmVwbGljYXMYAiABKAUSEQoJYXV0b3Nj",
            "YWxlGAMgASgIEg4KBndlaWdodBgEIAEoBRIOCgZjYW5hcnkYBSABKAgSDgoG",
            "c2hhZG93GAYgASgIEg4KBmZpbHRlchgHIAEoCRIVCg1jYW5hcnlNZXRyaWNz",
            "GAggAygJIu4BChVNb2RlbERlcGxveW1lbnRTdGF0dXMSEQoJaW1hZ2VOYW1l",
            "GAEgASgJEhYKDmRlcGxveW1lbnROYW1lGAIgASgJEhMKC3NlcnZpY2VOYW1l",
            "GAMgASgJEg8KB2hwYU5hbWUYBCABKAkSEQoJY3VycmVudDk1GAUgASgBEhEK",
            "CWN1cnJlbnQ5ORgGIAEoARJCCg5sYXN0UHJlZGljdGlvbhgHIAEoCzIqLms4",
            "cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5UaW1lEhoKEmRh",
            "aWx5UHJlZGljdGlvbkF2ZxgIIAEoBSKJAwoRUHJlZGljdGlvbkNoYW5uZWwS",
            "WgoFdGFibGUYASABKAsySy5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFw",
            "aS5wa2cuYXBpcy5pbmZlcmVuY2UudjFhbHBoYTEuVGFibGVDaGFubmVsU3Bl",
            "YxJWCgNib3QYAiABKAsySS5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFw",
            "aS5wa2cuYXBpcy5pbmZlcmVuY2UudjFhbHBoYTEuQm90Q2hhbm5lbFNwZWMS",
            "XAoGYnVja2V0GAMgASgLMkwuZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRh",
            "cGkucGtnLmFwaXMuaW5mZXJlbmNlLnYxYWxwaGExLkJ1Y2tldENoYW5uZWxT",
            "cGVjEmIKCXN0cmVhbWluZxgEIAEoCzJPLmdpdGh1Yi5jb20ubWV0YXByb3Yu",
            "bW9kZWxkYXBpLnBrZy5hcGlzLmluZmVyZW5jZS52MWFscGhhMS5TdHJlYW1p",
            "bmdDaGFubmVsU3BlYyKeAgoSUHJlZGljdGlvblBpcGVsaW5lEkIKCG1ldGFk",
            "YXRhGAEgASgLMjAuazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRh",
            "LnYxLk9iamVjdE1ldGESXwoEc3BlYxgCIAEoCzJRLmdpdGh1Yi5jb20ubWV0",
            "YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmluZmVyZW5jZS52MWFscGhhMS5Q",
            "cmVkaWN0aW9uUGlwZWxpbmVTcGVjEmMKBnN0YXR1cxgDIAEoCzJTLmdpdGh1",
            "Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmluZmVyZW5jZS52",
            "MWFscGhhMS5QcmVkaWN0aW9uUGlwZWxpbmVTdGF0dXMipAEKG1ByZWRpY3Rp",
            "b25QaXBlbGluZUNvbmRpdGlvbhIMCgR0eXBlGAEgASgJEg4KBnN0YXR1cxgC",
            "IAEoCRJGChJsYXN0VHJhbnNpdGlvblRpbWUYAyABKAsyKi5rOHMuaW8uYXBp",
            "bWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuVGltZRIOCgZyZWFzb24YBCAB",
            "KAkSDwoHbWVzc2FnZRgFIAEoCSK4AQoWUHJlZGljdGlvblBpcGVsaW5lTGlz",
            "dBJACghtZXRhZGF0YRgBIAEoCzIuLms4cy5pby5hcGltYWNoaW5lcnkucGtn",
            "LmFwaXMubWV0YS52MS5MaXN0TWV0YRJcCgVpdGVtcxgCIAMoCzJNLmdpdGh1",
            "Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmluZmVyZW5jZS52",
            "MWFscGhhMS5QcmVkaWN0aW9uUGlwZWxpbmUipwIKFVByZWRpY3Rpb25QaXBl",
            "bGluZVJ1bhJCCghtZXRhZGF0YRgBIAEoCzIwLms4cy5pby5hcGltYWNoaW5l",
            "cnkucGtnLmFwaXMubWV0YS52MS5PYmplY3RNZXRhEmIKBHNwZWMYAiABKAsy",
            "VC5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5pbmZl",
            "cmVuY2UudjFhbHBoYTEuUHJlZGljdGlvblBpcGVsaW5lUnVuU3BlYxJmCgZz",
            "dGF0dXMYAyABKAsyVi5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5w",
            "a2cuYXBpcy5pbmZlcmVuY2UudjFhbHBoYTEuUHJlZGljdGlvblBpcGVsaW5l",
            "UnVuU3RhdHVzIqcBCh5QcmVkaWN0aW9uUGlwZWxpbmVSdW5Db25kaXRpb24S",
            "DAoEdHlwZRgBIAEoCRIOCgZzdGF0dXMYAiABKAkSRgoSbGFzdFRyYW5zaXRp",
            "b25UaW1lGAMgASgLMiouazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5t",
            "ZXRhLnYxLlRpbWUSDgoGcmVhc29uGAQgASgJEg8KB21lc3NhZ2UYBSABKAki",
            "vgEKGVByZWRpY3Rpb25QaXBlbGluZVJ1bkxpc3QSQAoIbWV0YWRhdGEYASAB",
            "KAsyLi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuTGlz",
            "dE1ldGESXwoFaXRlbXMYAiADKAsyUC5naXRodWIuY29tLm1ldGFwcm92Lm1v",
            "ZGVsZGFwaS5wa2cuYXBpcy5pbmZlcmVuY2UudjFhbHBoYTEuUHJlZGljdGlv",
            "blBpcGVsaW5lUnVuIqECChlQcmVkaWN0aW9uUGlwZWxpbmVSdW5TcGVjEhUK",
            "DXByZWRpY3Rvck5hbWUYASABKAkSDwoHbGFiZWxlZBgCIAEoCBIRCglvYmpl",
            "Y3RpdmUYAyABKAkSEwoLZGF0YXNldE5hbWUYBCABKAkSUQoFaW5wdXQYBSAB",
            "KAsyQi5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5k",
            "YXRhLnYxYWxwaGExLkRhdGFMb2NhdGlvbhJSCgZvdXRwdXQYBiABKAsyQi5n",
            "aXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5kYXRhLnYx",
            "YWxwaGExLkRhdGFMb2NhdGlvbhINCgVvd25lchgHIAEoCSKtAgobUHJlZGlj",
            "dGlvblBpcGVsaW5lUnVuU3RhdHVzEg0KBXNjb3JlGAIgASgBEg0KBXBoYXNl",
            "GAMgASgJEj0KCXN0YXJ0VGltZRgEIAEoCzIqLms4cy5pby5hcGltYWNoaW5l",
            "cnkucGtnLmFwaXMubWV0YS52MS5UaW1lEkIKDmNvbXBsZXRpb25UaW1lGAUg",
            "ASgLMiouazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLlRp",
            "bWUSbQoKY29uZGl0aW9ucxgGIAMoCzJZLmdpdGh1Yi5jb20ubWV0YXByb3Yu",
            "bW9kZWxkYXBpLnBrZy5hcGlzLmluZmVyZW5jZS52MWFscGhhMS5QcmVkaWN0",
            "aW9uUGlwZWxpbmVSdW5Db25kaXRpb24ingIKFlByZWRpY3Rpb25QaXBlbGlu",
            "ZVNwZWMSFQoNcHJlZGljdG9yTmFtZRgBIAEoCRIPCgdsYWJlbGVkGAIgASgI",
            "EhEKCW9iamVjdGl2ZRgDIAEoCRITCgtkYXRhc2V0TmFtZRgEIAEoCRJRCgVp",
            "bnB1dBgFIAEoCzJCLmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBr",
            "Zy5hcGlzLmRhdGEudjFhbHBoYTEuRGF0YUxvY2F0aW9uElIKBm91dHB1dBgG",
            "IAEoCzJCLmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlz",
            "LmRhdGEudjFhbHBoYTEuRGF0YUxvY2F0aW9uEg0KBW93bmVyGAcgASgJIpUB",
            "ChhQcmVkaWN0aW9uUGlwZWxpbmVTdGF0dXMSDQoFcGhhc2UYAyABKAkSagoK",
            "Y29uZGl0aW9ucxgGIAMoCzJWLmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxk",
            "YXBpLnBrZy5hcGlzLmluZmVyZW5jZS52MWFscGhhMS5QcmVkaWN0aW9uUGlw",
            "ZWxpbmVDb25kaXRpb24igwIKCVByZWRpY3RvchJCCghtZXRhZGF0YRgBIAEo",
            "CzIwLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5PYmpl",
            "Y3RNZXRhElYKBHNwZWMYAiABKAsySC5naXRodWIuY29tLm1ldGFwcm92Lm1v",
            "ZGVsZGFwaS5wa2cuYXBpcy5pbmZlcmVuY2UudjFhbHBoYTEuUHJlZGljdG9y",
            "U3BlYxJaCgZzdGF0dXMYAyABKAsySi5naXRodWIuY29tLm1ldGFwcm92Lm1v",
            "ZGVsZGFwaS5wa2cuYXBpcy5pbmZlcmVuY2UudjFhbHBoYTEuUHJlZGljdG9y",
            "U3RhdHVzIpsBChJQcmVkaWN0b3JDb25kaXRpb24SDAoEdHlwZRgBIAEoCRIO",
            "CgZzdGF0dXMYAiABKAkSRgoSbGFzdFRyYW5zaXRpb25UaW1lGAMgASgLMiou",
            "azhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLlRpbWUSDgoG",
            "cmVhc29uGAQgASgJEg8KB21lc3NhZ2UYBSABKAkilgEKD1ByZWRpY3Rvckhl",
            "YWx0aBIYChB0b3RhbFByZWRpY3Rpb25zGAEgASgFEhUKDXRvdGFsUmVxdWVz",
            "dHMYAiABKAUSGAoQdG90YWxQOTVSZXF1ZXN0cxgDIAEoBRIaChJtZWRpYW5S",
            "ZXNwb25zZVRpbWUYBCABKAUSHAoUbGFzdERhaWx5UHJlZGljdGlvbnMYBSAD",
            "KAUipgEKDVByZWRpY3Rvckxpc3QSQAoIbWV0YWRhdGEYASABKAsyLi5rOHMu",
            "aW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuTGlzdE1ldGESUwoF",
            "aXRlbXMYAiADKAsyRC5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5w",
            "a2cuYXBpcy5pbmZlcmVuY2UudjFhbHBoYTEuUHJlZGljdG9yIqMGCg1QcmVk",
            "aWN0b3JTcGVjEhEKCW93bmVyTmFtZRgBIAEoCRITCgtkZXNjcmlwdGlvbhgC",
            "IAEoCRI3Cgpwcm9kdWN0UmVmGAMgASgLMiMuazhzLmlvLmFwaS5jb3JlLnYx",
            "Lk9iamVjdFJlZmVyZW5jZRI7Cg5zZXJ2aW5nc2l0ZVJlZhgEIAEoCzIjLms4",
            "cy5pby5hcGkuY29yZS52MS5PYmplY3RSZWZlcmVuY2USDAoEcG9ydBgFIAEo",
            "BRIMCgRwYXRoGAYgASgJEhIKCmFjY2Vzc1R5cGUYByABKAkSMQoIdGVtcGxh",
            "dGUYCCABKAsyHy5rOHMuaW8uYXBpLmNvcmUudjEuUG9kVGVtcGxhdGUSXgoG",
            "bW9kZWxzGAkgAygLMk4uZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGku",
            "cGtnLmFwaXMuaW5mZXJlbmNlLnYxYWxwaGExLk1vZGVsRGVwbG95bWVudFNw",
            "ZWMSXQoKZHJpZnRDaGVjaxgMIAEoCzJJLmdpdGh1Yi5jb20ubWV0YXByb3Yu",
            "bW9kZWxkYXBpLnBrZy5hcGlzLmluZmVyZW5jZS52MWFscGhhMS5EcmlmdENo",
            "ZWNrU3BlYxJfCgtwcm9ncmVzc2l2ZRgNIAEoCzJKLmdpdGh1Yi5jb20ubWV0",
            "YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmluZmVyZW5jZS52MWFscGhhMS5Q",
            "cm9ncmVzc2l2ZVNwZWMSFwoPYXJ0aWZhY3RzRm9sZGVyGA4gASgJEmMKDWlu",
            "cHV0Q2hhbm5lbHMYDyADKAsyTC5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVs",
            "ZGFwaS5wa2cuYXBpcy5pbmZlcmVuY2UudjFhbHBoYTEuUHJlZGljdGlvbkNo",
            "YW5uZWwSZAoOb3V0cHV0Q2hhbm5lbHMYECADKAsyTC5naXRodWIuY29tLm1l",
            "dGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5pbmZlcmVuY2UudjFhbHBoYTEu",
            "UHJlZGljdGlvbkNoYW5uZWwSDQoFb3duZXIYESABKAkimAQKD1ByZWRpY3Rv",
            "clN0YXR1cxJlCgttb2RlbFN0YXR1cxgBIAMoCzJQLmdpdGh1Yi5jb20ubWV0",
            "YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmluZmVyZW5jZS52MWFscGhhMS5N",
            "b2RlbERlcGxveW1lbnRTdGF0dXMSYQoKY29uZGl0aW9ucxgCIAMoCzJNLmdp",
            "dGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmluZmVyZW5j",
            "ZS52MWFscGhhMS5QcmVkaWN0b3JDb25kaXRpb24STQoUbW9uaXRvckxhc3RB",
            "dHRlbXB0QXQYAyABKAsyLy5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlz",
            "Lm1ldGEudjEuVGltZXN0YW1wEhgKEG1vbml0b3JMYXN0U2NvcmUYBCABKAES",
            "GgoSbW9uaXRvckxhc3RMYXRlbmN5GAUgASgBEloKBmhlYWx0aBgGIAEoCzJK",
            "LmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmluZmVy",
            "ZW5jZS52MWFscGhhMS5QcmVkaWN0b3JIZWFsdGgSWgoIc3RhdHVzZXMYByAD",
            "KAsySC5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5p",
            "bmZlcmVuY2UudjFhbHBoYTEuQ2hhbm5lbFN0YXR1cyJSCg9Qcm9ncmVzc2l2",
            "ZVNwZWMSDgoGd2FybXVwGAEgASgFEhgKEHRyYWZmaWNJbmNyZW1lbnQYAiAB",
            "KAUSFQoNY2FuYXJ5TWV0cmljcxgDIAMoCSJAChRTdHJlYW1pbmdDaGFubmVs",
            "U3BlYxIWCg5jb25uZWN0aW9uTmFtZRgBIAEoCRIQCghpbnB1dEtleRgCIAEo",
            "CSJrChBUYWJsZUNoYW5uZWxTcGVjEhYKDmNvbm5lY3Rpb25OYW1lGAEgASgJ",
            "EhYKDmRhdGFzb3VyY2VOYW1lGAIgASgJEhEKCXRhYmxlTmFtZRgDIAEoCRIU",
            "CgxzY2FuSW50ZXJ2YWwYBCABKAVCCloIdjFhbHBoYTE="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor, global::K8S.Io.Api.Core.V1.GeneratedReflection.Descriptor, global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.GeneratedReflection.Descriptor, global::K8S.Io.Apimachinery.Pkg.Runtime.GeneratedReflection.Descriptor, global::K8S.Io.Apimachinery.Pkg.Runtime.Schema.GeneratedReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.BotChannelSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.BotChannelSpec.Parser, new[]{ "ConnectionName", "NotifierName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.BucketChannelSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.BucketChannelSpec.Parser, new[]{ "ConnectionName", "DatabaseConnectionName", "InputKey", "ScanInterval" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.ChannelStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.ChannelStatus.Parser, new[]{ "Name", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.Curtain), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.Curtain.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainCondition), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainCondition.Parser, new[]{ "Type", "Status", "LastTransitionTime", "Reason", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainList), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainSpec.Parser, new[]{ "Description", "VersionName", "ServingsiteName", "DatasetName", "Wizards", "Question", "Owner" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainStatus.Parser, new[]{ "Conditions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainTemplateSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainTemplateSpec.Parser, new[]{ "Metadata", "Spec" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.DriftCheckSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.DriftCheckSpec.Parser, new[]{ "CronExpr", "Treshold", "NotifierName", "TestDataset" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.ModelDeploymentSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.ModelDeploymentSpec.Parser, new[]{ "ModelName", "Replicas", "Autoscale", "Weight", "Canary", "Shadow", "Filter", "CanaryMetrics" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.ModelDeploymentStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.ModelDeploymentStatus.Parser, new[]{ "ImageName", "DeploymentName", "ServiceName", "HpaName", "Current95", "Current99", "LastPrediction", "DailyPredictionAvg" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionChannel), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionChannel.Parser, new[]{ "Table", "Bot", "Bucket", "Streaming" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipeline), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipeline.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineCondition), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineCondition.Parser, new[]{ "Type", "Status", "LastTransitionTime", "Reason", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineList), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRun), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRun.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRunCondition), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRunCondition.Parser, new[]{ "Type", "Status", "LastTransitionTime", "Reason", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRunList), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRunList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRunSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRunSpec.Parser, new[]{ "PredictorName", "Labeled", "Objective", "DatasetName", "Input", "Output", "Owner" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRunStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRunStatus.Parser, new[]{ "Score", "Phase", "StartTime", "CompletionTime", "Conditions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineSpec.Parser, new[]{ "PredictorName", "Labeled", "Objective", "DatasetName", "Input", "Output", "Owner" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineStatus.Parser, new[]{ "Phase", "Conditions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.Predictor), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.Predictor.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorCondition), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorCondition.Parser, new[]{ "Type", "Status", "LastTransitionTime", "Reason", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorHealth), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorHealth.Parser, new[]{ "TotalPredictions", "TotalRequests", "TotalP95Requests", "MedianResponseTime", "LastDailyPredictions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorList), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorSpec.Parser, new[]{ "OwnerName", "Description", "ProductRef", "ServingsiteRef", "Port", "Path", "AccessType", "Template", "Models", "DriftCheck", "Progressive", "ArtifactsFolder", "InputChannels", "OutputChannels", "Owner" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorStatus.Parser, new[]{ "ModelStatus", "Conditions", "MonitorLastAttemptAt", "MonitorLastScore", "MonitorLastLatency", "Health", "Statuses" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.ProgressiveSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.ProgressiveSpec.Parser, new[]{ "Warmup", "TrafficIncrement", "CanaryMetrics" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.StreamingChannelSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.StreamingChannelSpec.Parser, new[]{ "ConnectionName", "InputKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.TableChannelSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.TableChannelSpec.Parser, new[]{ "ConnectionName", "DatasourceName", "TableName", "ScanInterval" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class BotChannelSpec : pb::IMessage<BotChannelSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BotChannelSpec> _parser = new pb::MessageParser<BotChannelSpec>(() => new BotChannelSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BotChannelSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotChannelSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotChannelSpec(BotChannelSpec other) : this() {
      connectionName_ = other.connectionName_;
      notifierName_ = other.notifierName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotChannelSpec Clone() {
      return new BotChannelSpec(this);
    }

    /// <summary>Field number for the "connectionName" field.</summary>
    public const int ConnectionNameFieldNumber = 1;
    private readonly static string ConnectionNameDefaultValue = "";

    private string connectionName_;
    /// <summary>
    /// the connection to the messaging provider
    /// Required,
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConnectionName {
      get { return connectionName_ ?? ConnectionNameDefaultValue; }
      set {
        connectionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "connectionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConnectionName {
      get { return connectionName_ != null; }
    }
    /// <summary>Clears the value of the "connectionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConnectionName() {
      connectionName_ = null;
    }

    /// <summary>Field number for the "notifierName" field.</summary>
    public const int NotifierNameFieldNumber = 2;
    private readonly static string NotifierNameDefaultValue = "";

    private string notifierName_;
    /// <summary>
    /// The name of the notifier that will be used by the prediction bot.
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotifierName {
      get { return notifierName_ ?? NotifierNameDefaultValue; }
      set {
        notifierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "notifierName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNotifierName {
      get { return notifierName_ != null; }
    }
    /// <summary>Clears the value of the "notifierName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNotifierName() {
      notifierName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BotChannelSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BotChannelSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConnectionName != other.ConnectionName) return false;
      if (NotifierName != other.NotifierName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasConnectionName) hash ^= ConnectionName.GetHashCode();
      if (HasNotifierName) hash ^= NotifierName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasConnectionName) {
        output.WriteRawTag(10);
        output.WriteString(ConnectionName);
      }
      if (HasNotifierName) {
        output.WriteRawTag(18);
        output.WriteString(NotifierName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasConnectionName) {
        output.WriteRawTag(10);
        output.WriteString(ConnectionName);
      }
      if (HasNotifierName) {
        output.WriteRawTag(18);
        output.WriteString(NotifierName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasConnectionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionName);
      }
      if (HasNotifierName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotifierName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BotChannelSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasConnectionName) {
        ConnectionName = other.ConnectionName;
      }
      if (other.HasNotifierName) {
        NotifierName = other.NotifierName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ConnectionName = input.ReadString();
            break;
          }
          case 18: {
            NotifierName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ConnectionName = input.ReadString();
            break;
          }
          case 18: {
            NotifierName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Look for prediction in a bucket key.
  /// Request for prediction will be placed in the key.
  /// Result will be placed in the output bucket
  /// </summary>
  public sealed partial class BucketChannelSpec : pb::IMessage<BucketChannelSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BucketChannelSpec> _parser = new pb::MessageParser<BucketChannelSpec>(() => new BucketChannelSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BucketChannelSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BucketChannelSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BucketChannelSpec(BucketChannelSpec other) : this() {
      _hasBits0 = other._hasBits0;
      connectionName_ = other.connectionName_;
      databaseConnectionName_ = other.databaseConnectionName_;
      inputKey_ = other.inputKey_;
      scanInterval_ = other.scanInterval_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BucketChannelSpec Clone() {
      return new BucketChannelSpec(this);
    }

    /// <summary>Field number for the "connectionName" field.</summary>
    public const int ConnectionNameFieldNumber = 1;
    private readonly static string ConnectionNameDefaultValue = "";

    private string connectionName_;
    /// <summary>
    /// the connection to the cloud provider
    /// Required,
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConnectionName {
      get { return connectionName_ ?? ConnectionNameDefaultValue; }
      set {
        connectionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "connectionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConnectionName {
      get { return connectionName_ != null; }
    }
    /// <summary>Clears the value of the "connectionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConnectionName() {
      connectionName_ = null;
    }

    /// <summary>Field number for the "databaseConnectionName" field.</summary>
    public const int DatabaseConnectionNameFieldNumber = 2;
    private readonly static string DatabaseConnectionNameDefaultValue = "";

    private string databaseConnectionName_;
    /// <summary>
    /// Required,
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DatabaseConnectionName {
      get { return databaseConnectionName_ ?? DatabaseConnectionNameDefaultValue; }
      set {
        databaseConnectionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "databaseConnectionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDatabaseConnectionName {
      get { return databaseConnectionName_ != null; }
    }
    /// <summary>Clears the value of the "databaseConnectionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDatabaseConnectionName() {
      databaseConnectionName_ = null;
    }

    /// <summary>Field number for the "inputKey" field.</summary>
    public const int InputKeyFieldNumber = 3;
    private readonly static string InputKeyDefaultValue = "";

    private string inputKey_;
    /// <summary>
    /// The location of the input or the output
    /// Required,
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InputKey {
      get { return inputKey_ ?? InputKeyDefaultValue; }
      set {
        inputKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "inputKey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInputKey {
      get { return inputKey_ != null; }
    }
    /// <summary>Clears the value of the "inputKey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInputKey() {
      inputKey_ = null;
    }

    /// <summary>Field number for the "scanInterval" field.</summary>
    public const int ScanIntervalFieldNumber = 4;
    private readonly static int ScanIntervalDefaultValue = 0;

    private int scanInterval_;
    /// <summary>
    /// In seconds, the interval.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ScanInterval {
      get { if ((_hasBits0 & 1) != 0) { return scanInterval_; } else { return ScanIntervalDefaultValue; } }
      set {
        _hasBits0 |= 1;
        scanInterval_ = value;
      }
    }
    /// <summary>Gets whether the "scanInterval" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasScanInterval {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "scanInterval" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearScanInterval() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BucketChannelSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BucketChannelSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConnectionName != other.ConnectionName) return false;
      if (DatabaseConnectionName != other.DatabaseConnectionName) return false;
      if (InputKey != other.InputKey) return false;
      if (ScanInterval != other.ScanInterval) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasConnectionName) hash ^= ConnectionName.GetHashCode();
      if (HasDatabaseConnectionName) hash ^= DatabaseConnectionName.GetHashCode();
      if (HasInputKey) hash ^= InputKey.GetHashCode();
      if (HasScanInterval) hash ^= ScanInterval.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasConnectionName) {
        output.WriteRawTag(10);
        output.WriteString(ConnectionName);
      }
      if (HasDatabaseConnectionName) {
        output.WriteRawTag(18);
        output.WriteString(DatabaseConnectionName);
      }
      if (HasInputKey) {
        output.WriteRawTag(26);
        output.WriteString(InputKey);
      }
      if (HasScanInterval) {
        output.WriteRawTag(32);
        output.WriteInt32(ScanInterval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasConnectionName) {
        output.WriteRawTag(10);
        output.WriteString(ConnectionName);
      }
      if (HasDatabaseConnectionName) {
        output.WriteRawTag(18);
        output.WriteString(DatabaseConnectionName);
      }
      if (HasInputKey) {
        output.WriteRawTag(26);
        output.WriteString(InputKey);
      }
      if (HasScanInterval) {
        output.WriteRawTag(32);
        output.WriteInt32(ScanInterval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasConnectionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionName);
      }
      if (HasDatabaseConnectionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DatabaseConnectionName);
      }
      if (HasInputKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputKey);
      }
      if (HasScanInterval) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ScanInterval);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BucketChannelSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasConnectionName) {
        ConnectionName = other.ConnectionName;
      }
      if (other.HasDatabaseConnectionName) {
        DatabaseConnectionName = other.DatabaseConnectionName;
      }
      if (other.HasInputKey) {
        InputKey = other.InputKey;
      }
      if (other.HasScanInterval) {
        ScanInterval = other.ScanInterval;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ConnectionName = input.ReadString();
            break;
          }
          case 18: {
            DatabaseConnectionName = input.ReadString();
            break;
          }
          case 26: {
            InputKey = input.ReadString();
            break;
          }
          case 32: {
            ScanInterval = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ConnectionName = input.ReadString();
            break;
          }
          case 18: {
            DatabaseConnectionName = input.ReadString();
            break;
          }
          case 26: {
            InputKey = input.ReadString();
            break;
          }
          case 32: {
            ScanInterval = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ChannelStatus : pb::IMessage<ChannelStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChannelStatus> _parser = new pb::MessageParser<ChannelStatus>(() => new ChannelStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChannelStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChannelStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChannelStatus(ChannelStatus other) : this() {
      name_ = other.name_;
      error_ = other.error_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChannelStatus Clone() {
      return new ChannelStatus(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private readonly static string ErrorDefaultValue = "";

    private string error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_ ?? ErrorDefaultValue; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "error" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasError {
      get { return error_ != null; }
    }
    /// <summary>Clears the value of the "error" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearError() {
      error_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChannelStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChannelStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Error != other.Error) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasError) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasError) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasError) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasError) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChannelStatus other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasError) {
        Error = other.Error;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Curtain represent an object which can be placed before or after predictor
  /// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
  /// +kubebuilder:printcolumn:name="Serving Site",type="string",JSONPath=".spec.servingsiteRef.name"
  /// +kubebuilder:printcolumn:name="Dataset",type="string",JSONPath=".spec.datasetRef.name"
  /// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
  /// +kubebuilder:object:root=true
  /// +kubebuilder:subresource:status
  /// +kubebuilder:resource:path=curtains,singular=curtain,categories={inference,modela,all}
  /// </summary>
  public sealed partial class Curtain : pb::IMessage<Curtain>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Curtain> _parser = new pb::MessageParser<Curtain>(() => new Curtain());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Curtain> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Curtain() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Curtain(Curtain other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Curtain Clone() {
      return new Curtain(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainStatus status_;
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Curtain);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Curtain other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Curtain other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CurtainCondition describes the state of a wizard of oz at a certain point.
  /// </summary>
  public sealed partial class CurtainCondition : pb::IMessage<CurtainCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CurtainCondition> _parser = new pb::MessageParser<CurtainCondition>(() => new CurtainCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CurtainCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurtainCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurtainCondition(CurtainCondition other) : this() {
      type_ = other.type_;
      status_ = other.status_;
      lastTransitionTime_ = other.lastTransitionTime_ != null ? other.lastTransitionTime_.Clone() : null;
      reason_ = other.reason_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurtainCondition Clone() {
      return new CurtainCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// Type of account condition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    /// <summary>
    /// Status of the condition, one of True, False, Unknown.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "lastTransitionTime" field.</summary>
    public const int LastTransitionTimeFieldNumber = 3;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastTransitionTime_;
    /// <summary>
    /// Last time the condition transitioned from one status to another.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastTransitionTime {
      get { return lastTransitionTime_; }
      set {
        lastTransitionTime_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 4;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// The reason for the condition's last transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 5;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// A human readable message indicating details about the transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CurtainCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CurtainCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LastTransitionTime, other.LastTransitionTime)) return false;
      if (Reason != other.Reason) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (lastTransitionTime_ != null) hash ^= LastTransitionTime.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (lastTransitionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTransitionTime);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CurtainCondition other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.lastTransitionTime_ != null) {
        if (lastTransitionTime_ == null) {
          LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastTransitionTime.MergeFrom(other.LastTransitionTime);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// CurtainList represent a list of Curtain resources
  /// </summary>
  public sealed partial class CurtainList : pb::IMessage<CurtainList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CurtainList> _parser = new pb::MessageParser<CurtainList>(() => new CurtainList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CurtainList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurtainList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurtainList(CurtainList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurtainList Clone() {
      return new CurtainList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.Curtain> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.Curtain.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.Curtain> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.Curtain>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.Curtain> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CurtainList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CurtainList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CurtainList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CurtainSpec define the desired state of a Curtain
  /// </summary>
  public sealed partial class CurtainSpec : pb::IMessage<CurtainSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CurtainSpec> _parser = new pb::MessageParser<CurtainSpec>(() => new CurtainSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CurtainSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurtainSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurtainSpec(CurtainSpec other) : this() {
      description_ = other.description_;
      versionName_ = other.versionName_;
      servingsiteName_ = other.servingsiteName_;
      datasetName_ = other.datasetName_;
      wizards_ = other.wizards_.Clone();
      question_ = other.question_;
      owner_ = other.owner_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurtainSpec Clone() {
      return new CurtainSpec(this);
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 1;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// User provided description
    /// +kubebuilder:default =""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "versionName" field.</summary>
    public const int VersionNameFieldNumber = 2;
    private readonly static string VersionNameDefaultValue = "";

    private string versionName_;
    /// <summary>
    /// User provided description
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionName {
      get { return versionName_ ?? VersionNameDefaultValue; }
      set {
        versionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "versionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersionName {
      get { return versionName_ != null; }
    }
    /// <summary>Clears the value of the "versionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersionName() {
      versionName_ = null;
    }

    /// <summary>Field number for the "servingsiteName" field.</summary>
    public const int ServingsiteNameFieldNumber = 3;
    private readonly static string ServingsiteNameDefaultValue = "";

    private string servingsiteName_;
    /// <summary>
    /// The product of the resource
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServingsiteName {
      get { return servingsiteName_ ?? ServingsiteNameDefaultValue; }
      set {
        servingsiteName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "servingsiteName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasServingsiteName {
      get { return servingsiteName_ != null; }
    }
    /// <summary>Clears the value of the "servingsiteName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearServingsiteName() {
      servingsiteName_ = null;
    }

    /// <summary>Field number for the "datasetName" field.</summary>
    public const int DatasetNameFieldNumber = 4;
    private readonly static string DatasetNameDefaultValue = "";

    private string datasetName_;
    /// <summary>
    /// The dataset that store the wizard answers
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DatasetName {
      get { return datasetName_ ?? DatasetNameDefaultValue; }
      set {
        datasetName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "datasetName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDatasetName {
      get { return datasetName_ != null; }
    }
    /// <summary>Clears the value of the "datasetName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDatasetName() {
      datasetName_ = null;
    }

    /// <summary>Field number for the "wizards" field.</summary>
    public const int WizardsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_wizards_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> wizards_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The wizards him self. This is a reference to one or more wizards objects.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Wizards {
      get { return wizards_; }
    }

    /// <summary>Field number for the "question" field.</summary>
    public const int QuestionFieldNumber = 6;
    private readonly static string QuestionDefaultValue = "";

    private string question_;
    /// <summary>
    /// Question to ask the wizard
    /// +kubebuilder:validation:MaxLength=256
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Question {
      get { return question_ ?? QuestionDefaultValue; }
      set {
        question_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "question" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasQuestion {
      get { return question_ != null; }
    }
    /// <summary>Clears the value of the "question" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearQuestion() {
      question_ = null;
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 7;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// The owner account name
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwner() {
      owner_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CurtainSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CurtainSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Description != other.Description) return false;
      if (VersionName != other.VersionName) return false;
      if (ServingsiteName != other.ServingsiteName) return false;
      if (DatasetName != other.DatasetName) return false;
      if(!wizards_.Equals(other.wizards_)) return false;
      if (Question != other.Question) return false;
      if (Owner != other.Owner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDescription) hash ^= Description.GetHashCode();
      if (HasVersionName) hash ^= VersionName.GetHashCode();
      if (HasServingsiteName) hash ^= ServingsiteName.GetHashCode();
      if (HasDatasetName) hash ^= DatasetName.GetHashCode();
      hash ^= wizards_.GetHashCode();
      if (HasQuestion) hash ^= Question.GetHashCode();
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDescription) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      if (HasVersionName) {
        output.WriteRawTag(18);
        output.WriteString(VersionName);
      }
      if (HasServingsiteName) {
        output.WriteRawTag(26);
        output.WriteString(ServingsiteName);
      }
      if (HasDatasetName) {
        output.WriteRawTag(34);
        output.WriteString(DatasetName);
      }
      wizards_.WriteTo(output, _repeated_wizards_codec);
      if (HasQuestion) {
        output.WriteRawTag(50);
        output.WriteString(Question);
      }
      if (HasOwner) {
        output.WriteRawTag(58);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDescription) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      if (HasVersionName) {
        output.WriteRawTag(18);
        output.WriteString(VersionName);
      }
      if (HasServingsiteName) {
        output.WriteRawTag(26);
        output.WriteString(ServingsiteName);
      }
      if (HasDatasetName) {
        output.WriteRawTag(34);
        output.WriteString(DatasetName);
      }
      wizards_.WriteTo(ref output, _repeated_wizards_codec);
      if (HasQuestion) {
        output.WriteRawTag(50);
        output.WriteString(Question);
      }
      if (HasOwner) {
        output.WriteRawTag(58);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (HasVersionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionName);
      }
      if (HasServingsiteName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServingsiteName);
      }
      if (HasDatasetName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DatasetName);
      }
      size += wizards_.CalculateSize(_repeated_wizards_codec);
      if (HasQuestion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Question);
      }
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CurtainSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.HasVersionName) {
        VersionName = other.VersionName;
      }
      if (other.HasServingsiteName) {
        ServingsiteName = other.ServingsiteName;
      }
      if (other.HasDatasetName) {
        DatasetName = other.DatasetName;
      }
      wizards_.Add(other.wizards_);
      if (other.HasQuestion) {
        Question = other.Question;
      }
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 18: {
            VersionName = input.ReadString();
            break;
          }
          case 26: {
            ServingsiteName = input.ReadString();
            break;
          }
          case 34: {
            DatasetName = input.ReadString();
            break;
          }
          case 42: {
            wizards_.AddEntriesFrom(input, _repeated_wizards_codec);
            break;
          }
          case 50: {
            Question = input.ReadString();
            break;
          }
          case 58: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 18: {
            VersionName = input.ReadString();
            break;
          }
          case 26: {
            ServingsiteName = input.ReadString();
            break;
          }
          case 34: {
            DatasetName = input.ReadString();
            break;
          }
          case 42: {
            wizards_.AddEntriesFrom(ref input, _repeated_wizards_codec);
            break;
          }
          case 50: {
            Question = input.ReadString();
            break;
          }
          case 58: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CurtainStatus contain the observed state of the Curtain object.
  /// </summary>
  public sealed partial class CurtainStatus : pb::IMessage<CurtainStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CurtainStatus> _parser = new pb::MessageParser<CurtainStatus>(() => new CurtainStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CurtainStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurtainStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurtainStatus(CurtainStatus other) : this() {
      conditions_ = other.conditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurtainStatus Clone() {
      return new CurtainStatus(this);
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(10, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainCondition.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainCondition> conditions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainCondition>();
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainCondition> Conditions {
      get { return conditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CurtainStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CurtainStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!conditions_.Equals(other.conditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= conditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CurtainStatus other) {
      if (other == null) {
        return;
      }
      conditions_.Add(other.conditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CurtainTemplateSpec : pb::IMessage<CurtainTemplateSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CurtainTemplateSpec> _parser = new pb::MessageParser<CurtainTemplateSpec>(() => new CurtainTemplateSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CurtainTemplateSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurtainTemplateSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurtainTemplateSpec(CurtainTemplateSpec other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurtainTemplateSpec Clone() {
      return new CurtainTemplateSpec(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    /// <summary>
    /// Standard object's metadata.
    /// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CurtainTemplateSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CurtainTemplateSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CurtainTemplateSpec other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.CurtainSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Specification for drift detection
  /// </summary>
  public sealed partial class DriftCheckSpec : pb::IMessage<DriftCheckSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DriftCheckSpec> _parser = new pb::MessageParser<DriftCheckSpec>(() => new DriftCheckSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DriftCheckSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DriftCheckSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DriftCheckSpec(DriftCheckSpec other) : this() {
      _hasBits0 = other._hasBits0;
      cronExpr_ = other.cronExpr_;
      treshold_ = other.treshold_;
      notifierName_ = other.notifierName_;
      testDataset_ = other.testDataset_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DriftCheckSpec Clone() {
      return new DriftCheckSpec(this);
    }

    /// <summary>Field number for the "cronExpr" field.</summary>
    public const int CronExprFieldNumber = 1;
    private readonly static string CronExprDefaultValue = "";

    private string cronExpr_;
    /// <summary>
    /// The crdn schedule to run the drift detection
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CronExpr {
      get { return cronExpr_ ?? CronExprDefaultValue; }
      set {
        cronExpr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "cronExpr" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCronExpr {
      get { return cronExpr_ != null; }
    }
    /// <summary>Clears the value of the "cronExpr" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCronExpr() {
      cronExpr_ = null;
    }

    /// <summary>Field number for the "treshold" field.</summary>
    public const int TresholdFieldNumber = 2;
    private readonly static double TresholdDefaultValue = 0D;

    private double treshold_;
    /// <summary>
    /// The drift threshold.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Treshold {
      get { if ((_hasBits0 & 1) != 0) { return treshold_; } else { return TresholdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        treshold_ = value;
      }
    }
    /// <summary>Gets whether the "treshold" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTreshold {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "treshold" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTreshold() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "notifierName" field.</summary>
    public const int NotifierNameFieldNumber = 3;
    private readonly static string NotifierNameDefaultValue = "";

    private string notifierName_;
    /// <summary>
    /// The notifier to invoke in case of
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotifierName {
      get { return notifierName_ ?? NotifierNameDefaultValue; }
      set {
        notifierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "notifierName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNotifierName {
      get { return notifierName_ != null; }
    }
    /// <summary>Clears the value of the "notifierName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNotifierName() {
      notifierName_ = null;
    }

    /// <summary>Field number for the "testDataset" field.</summary>
    public const int TestDatasetFieldNumber = 4;
    private readonly static string TestDatasetDefaultValue = "";

    private string testDataset_;
    /// <summary>
    /// Tested dataset
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TestDataset {
      get { return testDataset_ ?? TestDatasetDefaultValue; }
      set {
        testDataset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "testDataset" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTestDataset {
      get { return testDataset_ != null; }
    }
    /// <summary>Clears the value of the "testDataset" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTestDataset() {
      testDataset_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DriftCheckSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DriftCheckSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CronExpr != other.CronExpr) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Treshold, other.Treshold)) return false;
      if (NotifierName != other.NotifierName) return false;
      if (TestDataset != other.TestDataset) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCronExpr) hash ^= CronExpr.GetHashCode();
      if (HasTreshold) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Treshold);
      if (HasNotifierName) hash ^= NotifierName.GetHashCode();
      if (HasTestDataset) hash ^= TestDataset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCronExpr) {
        output.WriteRawTag(10);
        output.WriteString(CronExpr);
      }
      if (HasTreshold) {
        output.WriteRawTag(17);
        output.WriteDouble(Treshold);
      }
      if (HasNotifierName) {
        output.WriteRawTag(26);
        output.WriteString(NotifierName);
      }
      if (HasTestDataset) {
        output.WriteRawTag(34);
        output.WriteString(TestDataset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCronExpr) {
        output.WriteRawTag(10);
        output.WriteString(CronExpr);
      }
      if (HasTreshold) {
        output.WriteRawTag(17);
        output.WriteDouble(Treshold);
      }
      if (HasNotifierName) {
        output.WriteRawTag(26);
        output.WriteString(NotifierName);
      }
      if (HasTestDataset) {
        output.WriteRawTag(34);
        output.WriteString(TestDataset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCronExpr) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CronExpr);
      }
      if (HasTreshold) {
        size += 1 + 8;
      }
      if (HasNotifierName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotifierName);
      }
      if (HasTestDataset) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TestDataset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DriftCheckSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasCronExpr) {
        CronExpr = other.CronExpr;
      }
      if (other.HasTreshold) {
        Treshold = other.Treshold;
      }
      if (other.HasNotifierName) {
        NotifierName = other.NotifierName;
      }
      if (other.HasTestDataset) {
        TestDataset = other.TestDataset;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CronExpr = input.ReadString();
            break;
          }
          case 17: {
            Treshold = input.ReadDouble();
            break;
          }
          case 26: {
            NotifierName = input.ReadString();
            break;
          }
          case 34: {
            TestDataset = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CronExpr = input.ReadString();
            break;
          }
          case 17: {
            Treshold = input.ReadDouble();
            break;
          }
          case 26: {
            NotifierName = input.ReadString();
            break;
          }
          case 34: {
            TestDataset = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The desired state of the model.
  /// </summary>
  public sealed partial class ModelDeploymentSpec : pb::IMessage<ModelDeploymentSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ModelDeploymentSpec> _parser = new pb::MessageParser<ModelDeploymentSpec>(() => new ModelDeploymentSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModelDeploymentSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelDeploymentSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelDeploymentSpec(ModelDeploymentSpec other) : this() {
      _hasBits0 = other._hasBits0;
      modelName_ = other.modelName_;
      replicas_ = other.replicas_;
      autoscale_ = other.autoscale_;
      weight_ = other.weight_;
      canary_ = other.canary_;
      shadow_ = other.shadow_;
      filter_ = other.filter_;
      canaryMetrics_ = other.canaryMetrics_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelDeploymentSpec Clone() {
      return new ModelDeploymentSpec(this);
    }

    /// <summary>Field number for the "modelName" field.</summary>
    public const int ModelNameFieldNumber = 1;
    private readonly static string ModelNameDefaultValue = "";

    private string modelName_;
    /// <summary>
    /// The model serving the prediction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelName {
      get { return modelName_ ?? ModelNameDefaultValue; }
      set {
        modelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "modelName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasModelName {
      get { return modelName_ != null; }
    }
    /// <summary>Clears the value of the "modelName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearModelName() {
      modelName_ = null;
    }

    /// <summary>Field number for the "replicas" field.</summary>
    public const int ReplicasFieldNumber = 2;
    private readonly static int ReplicasDefaultValue = 0;

    private int replicas_;
    /// <summary>
    /// number of replicas of the current model
    /// Default: 1
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Maximum=10
    /// +kubebuilder:validation:Minimum=0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Replicas {
      get { if ((_hasBits0 & 1) != 0) { return replicas_; } else { return ReplicasDefaultValue; } }
      set {
        _hasBits0 |= 1;
        replicas_ = value;
      }
    }
    /// <summary>Gets whether the "replicas" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReplicas {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "replicas" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReplicas() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "autoscale" field.</summary>
    public const int AutoscaleFieldNumber = 3;
    private readonly static bool AutoscaleDefaultValue = false;

    private bool autoscale_;
    /// <summary>
    /// Does the current model pods needs autoscaling. If yes we will use HPA.
    /// Default is false
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Autoscale {
      get { if ((_hasBits0 & 2) != 0) { return autoscale_; } else { return AutoscaleDefaultValue; } }
      set {
        _hasBits0 |= 2;
        autoscale_ = value;
      }
    }
    /// <summary>Gets whether the "autoscale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAutoscale {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "autoscale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAutoscale() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 4;
    private readonly static int WeightDefaultValue = 0;

    private int weight_;
    /// <summary>
    /// How much traffic to the current model
    /// Default: 100.
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Maximum=100
    /// +kubebuilder:validation:Minimum=0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Weight {
      get { if ((_hasBits0 & 4) != 0) { return weight_; } else { return WeightDefaultValue; } }
      set {
        _hasBits0 |= 4;
        weight_ = value;
      }
    }
    /// <summary>Gets whether the "weight" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasWeight {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "weight" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearWeight() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "canary" field.</summary>
    public const int CanaryFieldNumber = 5;
    private readonly static bool CanaryDefaultValue = false;

    private bool canary_;
    /// <summary>
    /// Denotes if this deployment is canary. This must be false for the prod deployment.
    /// Default: false
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Canary {
      get { if ((_hasBits0 & 8) != 0) { return canary_; } else { return CanaryDefaultValue; } }
      set {
        _hasBits0 |= 8;
        canary_ = value;
      }
    }
    /// <summary>Gets whether the "canary" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanary {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "canary" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanary() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "shadow" field.</summary>
    public const int ShadowFieldNumber = 6;
    private readonly static bool ShadowDefaultValue = false;

    private bool shadow_;
    /// <summary>
    /// Denotes if the model is a shadow. This must be false for the prod deployment.
    /// Default: false
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Shadow {
      get { if ((_hasBits0 & 16) != 0) { return shadow_; } else { return ShadowDefaultValue; } }
      set {
        _hasBits0 |= 16;
        shadow_ = value;
      }
    }
    /// <summary>Gets whether the "shadow" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasShadow {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "shadow" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearShadow() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 7;
    private readonly static string FilterDefaultValue = "";

    private string filter_;
    /// <summary>
    /// Filter donotes a selection on the model
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_ ?? FilterDefaultValue; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "filter" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFilter {
      get { return filter_ != null; }
    }
    /// <summary>Clears the value of the "filter" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFilter() {
      filter_ = null;
    }

    /// <summary>Field number for the "canaryMetrics" field.</summary>
    public const int CanaryMetricsFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _repeated_canaryMetrics_codec
        = pb::FieldCodec.ForString(66);
    private readonly pbc::RepeatedField<string> canaryMetrics_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// If the deployment is canary, the metric define how to evaluate the canary.
    /// Default: none
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> CanaryMetrics {
      get { return canaryMetrics_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModelDeploymentSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModelDeploymentSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ModelName != other.ModelName) return false;
      if (Replicas != other.Replicas) return false;
      if (Autoscale != other.Autoscale) return false;
      if (Weight != other.Weight) return false;
      if (Canary != other.Canary) return false;
      if (Shadow != other.Shadow) return false;
      if (Filter != other.Filter) return false;
      if(!canaryMetrics_.Equals(other.canaryMetrics_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasModelName) hash ^= ModelName.GetHashCode();
      if (HasReplicas) hash ^= Replicas.GetHashCode();
      if (HasAutoscale) hash ^= Autoscale.GetHashCode();
      if (HasWeight) hash ^= Weight.GetHashCode();
      if (HasCanary) hash ^= Canary.GetHashCode();
      if (HasShadow) hash ^= Shadow.GetHashCode();
      if (HasFilter) hash ^= Filter.GetHashCode();
      hash ^= canaryMetrics_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasModelName) {
        output.WriteRawTag(10);
        output.WriteString(ModelName);
      }
      if (HasReplicas) {
        output.WriteRawTag(16);
        output.WriteInt32(Replicas);
      }
      if (HasAutoscale) {
        output.WriteRawTag(24);
        output.WriteBool(Autoscale);
      }
      if (HasWeight) {
        output.WriteRawTag(32);
        output.WriteInt32(Weight);
      }
      if (HasCanary) {
        output.WriteRawTag(40);
        output.WriteBool(Canary);
      }
      if (HasShadow) {
        output.WriteRawTag(48);
        output.WriteBool(Shadow);
      }
      if (HasFilter) {
        output.WriteRawTag(58);
        output.WriteString(Filter);
      }
      canaryMetrics_.WriteTo(output, _repeated_canaryMetrics_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasModelName) {
        output.WriteRawTag(10);
        output.WriteString(ModelName);
      }
      if (HasReplicas) {
        output.WriteRawTag(16);
        output.WriteInt32(Replicas);
      }
      if (HasAutoscale) {
        output.WriteRawTag(24);
        output.WriteBool(Autoscale);
      }
      if (HasWeight) {
        output.WriteRawTag(32);
        output.WriteInt32(Weight);
      }
      if (HasCanary) {
        output.WriteRawTag(40);
        output.WriteBool(Canary);
      }
      if (HasShadow) {
        output.WriteRawTag(48);
        output.WriteBool(Shadow);
      }
      if (HasFilter) {
        output.WriteRawTag(58);
        output.WriteString(Filter);
      }
      canaryMetrics_.WriteTo(ref output, _repeated_canaryMetrics_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasModelName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelName);
      }
      if (HasReplicas) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Replicas);
      }
      if (HasAutoscale) {
        size += 1 + 1;
      }
      if (HasWeight) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Weight);
      }
      if (HasCanary) {
        size += 1 + 1;
      }
      if (HasShadow) {
        size += 1 + 1;
      }
      if (HasFilter) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      size += canaryMetrics_.CalculateSize(_repeated_canaryMetrics_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModelDeploymentSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasModelName) {
        ModelName = other.ModelName;
      }
      if (other.HasReplicas) {
        Replicas = other.Replicas;
      }
      if (other.HasAutoscale) {
        Autoscale = other.Autoscale;
      }
      if (other.HasWeight) {
        Weight = other.Weight;
      }
      if (other.HasCanary) {
        Canary = other.Canary;
      }
      if (other.HasShadow) {
        Shadow = other.Shadow;
      }
      if (other.HasFilter) {
        Filter = other.Filter;
      }
      canaryMetrics_.Add(other.canaryMetrics_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ModelName = input.ReadString();
            break;
          }
          case 16: {
            Replicas = input.ReadInt32();
            break;
          }
          case 24: {
            Autoscale = input.ReadBool();
            break;
          }
          case 32: {
            Weight = input.ReadInt32();
            break;
          }
          case 40: {
            Canary = input.ReadBool();
            break;
          }
          case 48: {
            Shadow = input.ReadBool();
            break;
          }
          case 58: {
            Filter = input.ReadString();
            break;
          }
          case 66: {
            canaryMetrics_.AddEntriesFrom(input, _repeated_canaryMetrics_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ModelName = input.ReadString();
            break;
          }
          case 16: {
            Replicas = input.ReadInt32();
            break;
          }
          case 24: {
            Autoscale = input.ReadBool();
            break;
          }
          case 32: {
            Weight = input.ReadInt32();
            break;
          }
          case 40: {
            Canary = input.ReadBool();
            break;
          }
          case 48: {
            Shadow = input.ReadBool();
            break;
          }
          case 58: {
            Filter = input.ReadString();
            break;
          }
          case 66: {
            canaryMetrics_.AddEntriesFrom(ref input, _repeated_canaryMetrics_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ModelDeploymentStatus : pb::IMessage<ModelDeploymentStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ModelDeploymentStatus> _parser = new pb::MessageParser<ModelDeploymentStatus>(() => new ModelDeploymentStatus());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModelDeploymentStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelDeploymentStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelDeploymentStatus(ModelDeploymentStatus other) : this() {
      _hasBits0 = other._hasBits0;
      imageName_ = other.imageName_;
      deploymentName_ = other.deploymentName_;
      serviceName_ = other.serviceName_;
      hpaName_ = other.hpaName_;
      current95_ = other.current95_;
      current99_ = other.current99_;
      lastPrediction_ = other.lastPrediction_ != null ? other.lastPrediction_.Clone() : null;
      dailyPredictionAvg_ = other.dailyPredictionAvg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelDeploymentStatus Clone() {
      return new ModelDeploymentStatus(this);
    }

    /// <summary>Field number for the "imageName" field.</summary>
    public const int ImageNameFieldNumber = 1;
    private readonly static string ImageNameDefaultValue = "";

    private string imageName_;
    /// <summary>
    /// The model image name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageName {
      get { return imageName_ ?? ImageNameDefaultValue; }
      set {
        imageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "imageName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasImageName {
      get { return imageName_ != null; }
    }
    /// <summary>Clears the value of the "imageName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearImageName() {
      imageName_ = null;
    }

    /// <summary>Field number for the "deploymentName" field.</summary>
    public const int DeploymentNameFieldNumber = 2;
    private readonly static string DeploymentNameDefaultValue = "";

    private string deploymentName_;
    /// <summary>
    /// The deployment name that serves this model
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeploymentName {
      get { return deploymentName_ ?? DeploymentNameDefaultValue; }
      set {
        deploymentName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "deploymentName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeploymentName {
      get { return deploymentName_ != null; }
    }
    /// <summary>Clears the value of the "deploymentName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeploymentName() {
      deploymentName_ = null;
    }

    /// <summary>Field number for the "serviceName" field.</summary>
    public const int ServiceNameFieldNumber = 3;
    private readonly static string ServiceNameDefaultValue = "";

    private string serviceName_;
    /// <summary>
    /// The service name that serves this model
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_ ?? ServiceNameDefaultValue; }
      set {
        serviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "serviceName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasServiceName {
      get { return serviceName_ != null; }
    }
    /// <summary>Clears the value of the "serviceName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearServiceName() {
      serviceName_ = null;
    }

    /// <summary>Field number for the "hpaName" field.</summary>
    public const int HpaNameFieldNumber = 4;
    private readonly static string HpaNameDefaultValue = "";

    private string hpaName_;
    /// <summary>
    /// the name of the horizonal pod autoscaler, if autoscaling is true
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HpaName {
      get { return hpaName_ ?? HpaNameDefaultValue; }
      set {
        hpaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hpaName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHpaName {
      get { return hpaName_ != null; }
    }
    /// <summary>Clears the value of the "hpaName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHpaName() {
      hpaName_ = null;
    }

    /// <summary>Field number for the "current95" field.</summary>
    public const int Current95FieldNumber = 5;
    private readonly static double Current95DefaultValue = 0D;

    private double current95_;
    /// <summary>
    /// P95 latency
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Current95 {
      get { if ((_hasBits0 & 1) != 0) { return current95_; } else { return Current95DefaultValue; } }
      set {
        _hasBits0 |= 1;
        current95_ = value;
      }
    }
    /// <summary>Gets whether the "current95" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCurrent95 {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "current95" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCurrent95() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "current99" field.</summary>
    public const int Current99FieldNumber = 6;
    private readonly static double Current99DefaultValue = 0D;

    private double current99_;
    /// <summary>
    /// P95 latency
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Current99 {
      get { if ((_hasBits0 & 2) != 0) { return current99_; } else { return Current99DefaultValue; } }
      set {
        _hasBits0 |= 2;
        current99_ = value;
      }
    }
    /// <summary>Gets whether the "current99" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCurrent99 {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "current99" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCurrent99() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "lastPrediction" field.</summary>
    public const int LastPredictionFieldNumber = 7;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastPrediction_;
    /// <summary>
    /// Last current prediction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastPrediction {
      get { return lastPrediction_; }
      set {
        lastPrediction_ = value;
      }
    }

    /// <summary>Field number for the "dailyPredictionAvg" field.</summary>
    public const int DailyPredictionAvgFieldNumber = 8;
    private readonly static int DailyPredictionAvgDefaultValue = 0;

    private int dailyPredictionAvg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DailyPredictionAvg {
      get { if ((_hasBits0 & 4) != 0) { return dailyPredictionAvg_; } else { return DailyPredictionAvgDefaultValue; } }
      set {
        _hasBits0 |= 4;
        dailyPredictionAvg_ = value;
      }
    }
    /// <summary>Gets whether the "dailyPredictionAvg" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDailyPredictionAvg {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "dailyPredictionAvg" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDailyPredictionAvg() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModelDeploymentStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModelDeploymentStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ImageName != other.ImageName) return false;
      if (DeploymentName != other.DeploymentName) return false;
      if (ServiceName != other.ServiceName) return false;
      if (HpaName != other.HpaName) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Current95, other.Current95)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Current99, other.Current99)) return false;
      if (!object.Equals(LastPrediction, other.LastPrediction)) return false;
      if (DailyPredictionAvg != other.DailyPredictionAvg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasImageName) hash ^= ImageName.GetHashCode();
      if (HasDeploymentName) hash ^= DeploymentName.GetHashCode();
      if (HasServiceName) hash ^= ServiceName.GetHashCode();
      if (HasHpaName) hash ^= HpaName.GetHashCode();
      if (HasCurrent95) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Current95);
      if (HasCurrent99) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Current99);
      if (lastPrediction_ != null) hash ^= LastPrediction.GetHashCode();
      if (HasDailyPredictionAvg) hash ^= DailyPredictionAvg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasImageName) {
        output.WriteRawTag(10);
        output.WriteString(ImageName);
      }
      if (HasDeploymentName) {
        output.WriteRawTag(18);
        output.WriteString(DeploymentName);
      }
      if (HasServiceName) {
        output.WriteRawTag(26);
        output.WriteString(ServiceName);
      }
      if (HasHpaName) {
        output.WriteRawTag(34);
        output.WriteString(HpaName);
      }
      if (HasCurrent95) {
        output.WriteRawTag(41);
        output.WriteDouble(Current95);
      }
      if (HasCurrent99) {
        output.WriteRawTag(49);
        output.WriteDouble(Current99);
      }
      if (lastPrediction_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(LastPrediction);
      }
      if (HasDailyPredictionAvg) {
        output.WriteRawTag(64);
        output.WriteInt32(DailyPredictionAvg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasImageName) {
        output.WriteRawTag(10);
        output.WriteString(ImageName);
      }
      if (HasDeploymentName) {
        output.WriteRawTag(18);
        output.WriteString(DeploymentName);
      }
      if (HasServiceName) {
        output.WriteRawTag(26);
        output.WriteString(ServiceName);
      }
      if (HasHpaName) {
        output.WriteRawTag(34);
        output.WriteString(HpaName);
      }
      if (HasCurrent95) {
        output.WriteRawTag(41);
        output.WriteDouble(Current95);
      }
      if (HasCurrent99) {
        output.WriteRawTag(49);
        output.WriteDouble(Current99);
      }
      if (lastPrediction_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(LastPrediction);
      }
      if (HasDailyPredictionAvg) {
        output.WriteRawTag(64);
        output.WriteInt32(DailyPredictionAvg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasImageName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageName);
      }
      if (HasDeploymentName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeploymentName);
      }
      if (HasServiceName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceName);
      }
      if (HasHpaName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HpaName);
      }
      if (HasCurrent95) {
        size += 1 + 8;
      }
      if (HasCurrent99) {
        size += 1 + 8;
      }
      if (lastPrediction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastPrediction);
      }
      if (HasDailyPredictionAvg) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DailyPredictionAvg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModelDeploymentStatus other) {
      if (other == null) {
        return;
      }
      if (other.HasImageName) {
        ImageName = other.ImageName;
      }
      if (other.HasDeploymentName) {
        DeploymentName = other.DeploymentName;
      }
      if (other.HasServiceName) {
        ServiceName = other.ServiceName;
      }
      if (other.HasHpaName) {
        HpaName = other.HpaName;
      }
      if (other.HasCurrent95) {
        Current95 = other.Current95;
      }
      if (other.HasCurrent99) {
        Current99 = other.Current99;
      }
      if (other.lastPrediction_ != null) {
        if (lastPrediction_ == null) {
          LastPrediction = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastPrediction.MergeFrom(other.LastPrediction);
      }
      if (other.HasDailyPredictionAvg) {
        DailyPredictionAvg = other.DailyPredictionAvg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ImageName = input.ReadString();
            break;
          }
          case 18: {
            DeploymentName = input.ReadString();
            break;
          }
          case 26: {
            ServiceName = input.ReadString();
            break;
          }
          case 34: {
            HpaName = input.ReadString();
            break;
          }
          case 41: {
            Current95 = input.ReadDouble();
            break;
          }
          case 49: {
            Current99 = input.ReadDouble();
            break;
          }
          case 58: {
            if (lastPrediction_ == null) {
              LastPrediction = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastPrediction);
            break;
          }
          case 64: {
            DailyPredictionAvg = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ImageName = input.ReadString();
            break;
          }
          case 18: {
            DeploymentName = input.ReadString();
            break;
          }
          case 26: {
            ServiceName = input.ReadString();
            break;
          }
          case 34: {
            HpaName = input.ReadString();
            break;
          }
          case 41: {
            Current95 = input.ReadDouble();
            break;
          }
          case 49: {
            Current99 = input.ReadDouble();
            break;
          }
          case 58: {
            if (lastPrediction_ == null) {
              LastPrediction = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastPrediction);
            break;
          }
          case 64: {
            DailyPredictionAvg = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The specific of a prediction channel
  /// </summary>
  public sealed partial class PredictionChannel : pb::IMessage<PredictionChannel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PredictionChannel> _parser = new pb::MessageParser<PredictionChannel>(() => new PredictionChannel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PredictionChannel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionChannel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionChannel(PredictionChannel other) : this() {
      table_ = other.table_ != null ? other.table_.Clone() : null;
      bot_ = other.bot_ != null ? other.bot_.Clone() : null;
      bucket_ = other.bucket_ != null ? other.bucket_.Clone() : null;
      streaming_ = other.streaming_ != null ? other.streaming_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionChannel Clone() {
      return new PredictionChannel(this);
    }

    /// <summary>Field number for the "table" field.</summary>
    public const int TableFieldNumber = 1;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.TableChannelSpec table_;
    /// <summary>
    /// Define a prediction via table
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.TableChannelSpec Table {
      get { return table_; }
      set {
        table_ = value;
      }
    }

    /// <summary>Field number for the "bot" field.</summary>
    public const int BotFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.BotChannelSpec bot_;
    /// <summary>
    /// Define a prediction via a bot
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.BotChannelSpec Bot {
      get { return bot_; }
      set {
        bot_ = value;
      }
    }

    /// <summary>Field number for the "bucket" field.</summary>
    public const int BucketFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.BucketChannelSpec bucket_;
    /// <summary>
    /// Define a prediction via a bot
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.BucketChannelSpec Bucket {
      get { return bucket_; }
      set {
        bucket_ = value;
      }
    }

    /// <summary>Field number for the "streaming" field.</summary>
    public const int StreamingFieldNumber = 4;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.StreamingChannelSpec streaming_;
    /// <summary>
    /// Define a streaming spec for the predictor
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.StreamingChannelSpec Streaming {
      get { return streaming_; }
      set {
        streaming_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PredictionChannel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PredictionChannel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Table, other.Table)) return false;
      if (!object.Equals(Bot, other.Bot)) return false;
      if (!object.Equals(Bucket, other.Bucket)) return false;
      if (!object.Equals(Streaming, other.Streaming)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (table_ != null) hash ^= Table.GetHashCode();
      if (bot_ != null) hash ^= Bot.GetHashCode();
      if (bucket_ != null) hash ^= Bucket.GetHashCode();
      if (streaming_ != null) hash ^= Streaming.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (table_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Table);
      }
      if (bot_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Bot);
      }
      if (bucket_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Bucket);
      }
      if (streaming_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Streaming);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (table_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Table);
      }
      if (bot_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Bot);
      }
      if (bucket_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Bucket);
      }
      if (streaming_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Streaming);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (table_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Table);
      }
      if (bot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bot);
      }
      if (bucket_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bucket);
      }
      if (streaming_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Streaming);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PredictionChannel other) {
      if (other == null) {
        return;
      }
      if (other.table_ != null) {
        if (table_ == null) {
          Table = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.TableChannelSpec();
        }
        Table.MergeFrom(other.Table);
      }
      if (other.bot_ != null) {
        if (bot_ == null) {
          Bot = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.BotChannelSpec();
        }
        Bot.MergeFrom(other.Bot);
      }
      if (other.bucket_ != null) {
        if (bucket_ == null) {
          Bucket = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.BucketChannelSpec();
        }
        Bucket.MergeFrom(other.Bucket);
      }
      if (other.streaming_ != null) {
        if (streaming_ == null) {
          Streaming = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.StreamingChannelSpec();
        }
        Streaming.MergeFrom(other.Streaming);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (table_ == null) {
              Table = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.TableChannelSpec();
            }
            input.ReadMessage(Table);
            break;
          }
          case 18: {
            if (bot_ == null) {
              Bot = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.BotChannelSpec();
            }
            input.ReadMessage(Bot);
            break;
          }
          case 26: {
            if (bucket_ == null) {
              Bucket = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.BucketChannelSpec();
            }
            input.ReadMessage(Bucket);
            break;
          }
          case 34: {
            if (streaming_ == null) {
              Streaming = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.StreamingChannelSpec();
            }
            input.ReadMessage(Streaming);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (table_ == null) {
              Table = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.TableChannelSpec();
            }
            input.ReadMessage(Table);
            break;
          }
          case 18: {
            if (bot_ == null) {
              Bot = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.BotChannelSpec();
            }
            input.ReadMessage(Bot);
            break;
          }
          case 26: {
            if (bucket_ == null) {
              Bucket = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.BucketChannelSpec();
            }
            input.ReadMessage(Bucket);
            break;
          }
          case 34: {
            if (streaming_ == null) {
              Streaming = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.StreamingChannelSpec();
            }
            input.ReadMessage(Streaming);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// PredictionTemplate represents a prediction object
  /// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status"
  /// +kubebuilder:printcolumn:name="Predictor",type="string",JSONPath=".spec.predictorName"
  /// +kubebuilder:printcolumn:name="Bucket",type="string",JSONPath=".spec.datasetName"
  /// +kubebuilder:printcolumn:name="File",type="string",JSONPath=".spec.datasetName"
  /// +kubebuilder:printcolumn:name="Labeled",type="string",JSONPath=".spec.datasetName"
  /// +kubebuilder:printcolumn:name="Score",type="string",JSONPath=".status.score"
  /// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
  /// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
  /// +kubebuilder:object:root=true
  /// +kubebuilder:subresource:status
  /// +kubebuilder:resource:path=predictionpipelines,singular=predictionpipeline,categories={inference,modela}
  /// </summary>
  public sealed partial class PredictionPipeline : pb::IMessage<PredictionPipeline>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PredictionPipeline> _parser = new pb::MessageParser<PredictionPipeline>(() => new PredictionPipeline());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PredictionPipeline> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipeline() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipeline(PredictionPipeline other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipeline Clone() {
      return new PredictionPipeline(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PredictionPipeline);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PredictionPipeline other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PredictionPipeline other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// PredictionPipelineCondition describes the state of PredictionTemplate
  /// </summary>
  public sealed partial class PredictionPipelineCondition : pb::IMessage<PredictionPipelineCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PredictionPipelineCondition> _parser = new pb::MessageParser<PredictionPipelineCondition>(() => new PredictionPipelineCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PredictionPipelineCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipelineCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipelineCondition(PredictionPipelineCondition other) : this() {
      type_ = other.type_;
      status_ = other.status_;
      lastTransitionTime_ = other.lastTransitionTime_ != null ? other.lastTransitionTime_.Clone() : null;
      reason_ = other.reason_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipelineCondition Clone() {
      return new PredictionPipelineCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// Type of  condition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    /// <summary>
    /// Status of the condition, one of True, False, Unknown.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "lastTransitionTime" field.</summary>
    public const int LastTransitionTimeFieldNumber = 3;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastTransitionTime_;
    /// <summary>
    /// Last time the condition transitioned from one status to another.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastTransitionTime {
      get { return lastTransitionTime_; }
      set {
        lastTransitionTime_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 4;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// The reason for the condition's last transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 5;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// A human readable message indicating details about the transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PredictionPipelineCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PredictionPipelineCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LastTransitionTime, other.LastTransitionTime)) return false;
      if (Reason != other.Reason) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (lastTransitionTime_ != null) hash ^= LastTransitionTime.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (lastTransitionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTransitionTime);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PredictionPipelineCondition other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.lastTransitionTime_ != null) {
        if (lastTransitionTime_ == null) {
          LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastTransitionTime.MergeFrom(other.LastTransitionTime);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// PredictionPipelineList is a list of PredictionPipeline
  /// </summary>
  public sealed partial class PredictionPipelineList : pb::IMessage<PredictionPipelineList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PredictionPipelineList> _parser = new pb::MessageParser<PredictionPipelineList>(() => new PredictionPipelineList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PredictionPipelineList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipelineList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipelineList(PredictionPipelineList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipelineList Clone() {
      return new PredictionPipelineList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipeline> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipeline.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipeline> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipeline>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipeline> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PredictionPipelineList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PredictionPipelineList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PredictionPipelineList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// +kubebuilder:subresource:status
  /// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status"
  /// +kubebuilder:printcolumn:name="Predictor",type="string",JSONPath=".spec.predictorName"
  /// +kubebuilder:printcolumn:name="Bucket",type="string",JSONPath=".spec.datasetName"
  /// +kubebuilder:printcolumn:name="File",type="string",JSONPath=".spec.datasetName"
  /// +kubebuilder:printcolumn:name="Labeled",type="string",JSONPath=".spec.datasetName"
  /// +kubebuilder:printcolumn:name="Score",type="string",JSONPath=".status.score"
  /// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
  /// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
  /// +kubebuilder:resource:path=predictionpipelineruns,singular=predictionpipelinerun,categories={inference,modela}
  /// PredictionPipelineRun represents a single run of the Prediction Pipeline
  /// </summary>
  public sealed partial class PredictionPipelineRun : pb::IMessage<PredictionPipelineRun>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PredictionPipelineRun> _parser = new pb::MessageParser<PredictionPipelineRun>(() => new PredictionPipelineRun());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PredictionPipelineRun> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipelineRun() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipelineRun(PredictionPipelineRun other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipelineRun Clone() {
      return new PredictionPipelineRun(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRunSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRunSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRunStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRunStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PredictionPipelineRun);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PredictionPipelineRun other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PredictionPipelineRun other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRunSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRunStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRunSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRunStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRunSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRunStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// PredictionPipelineCondition describes the state of PredictionTemplate
  /// </summary>
  public sealed partial class PredictionPipelineRunCondition : pb::IMessage<PredictionPipelineRunCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PredictionPipelineRunCondition> _parser = new pb::MessageParser<PredictionPipelineRunCondition>(() => new PredictionPipelineRunCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PredictionPipelineRunCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipelineRunCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipelineRunCondition(PredictionPipelineRunCondition other) : this() {
      type_ = other.type_;
      status_ = other.status_;
      lastTransitionTime_ = other.lastTransitionTime_ != null ? other.lastTransitionTime_.Clone() : null;
      reason_ = other.reason_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipelineRunCondition Clone() {
      return new PredictionPipelineRunCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// Type of  condition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    /// <summary>
    /// Status of the condition, one of True, False, Unknown.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "lastTransitionTime" field.</summary>
    public const int LastTransitionTimeFieldNumber = 3;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastTransitionTime_;
    /// <summary>
    /// Last time the condition transitioned from one status to another.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastTransitionTime {
      get { return lastTransitionTime_; }
      set {
        lastTransitionTime_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 4;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// The reason for the condition's last transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 5;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// A human readable message indicating details about the transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PredictionPipelineRunCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PredictionPipelineRunCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LastTransitionTime, other.LastTransitionTime)) return false;
      if (Reason != other.Reason) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (lastTransitionTime_ != null) hash ^= LastTransitionTime.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (lastTransitionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTransitionTime);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PredictionPipelineRunCondition other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.lastTransitionTime_ != null) {
        if (lastTransitionTime_ == null) {
          LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastTransitionTime.MergeFrom(other.LastTransitionTime);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// PredictionPipelineRunList is a list of PredictionPipelineRun
  /// </summary>
  public sealed partial class PredictionPipelineRunList : pb::IMessage<PredictionPipelineRunList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PredictionPipelineRunList> _parser = new pb::MessageParser<PredictionPipelineRunList>(() => new PredictionPipelineRunList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PredictionPipelineRunList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipelineRunList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipelineRunList(PredictionPipelineRunList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipelineRunList Clone() {
      return new PredictionPipelineRunList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRun> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRun.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRun> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRun>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRun> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PredictionPipelineRunList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PredictionPipelineRunList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PredictionPipelineRunList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// PredictionPipelineRunSpec represent the desired state of PredictionPipelineRun
  /// </summary>
  public sealed partial class PredictionPipelineRunSpec : pb::IMessage<PredictionPipelineRunSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PredictionPipelineRunSpec> _parser = new pb::MessageParser<PredictionPipelineRunSpec>(() => new PredictionPipelineRunSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PredictionPipelineRunSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipelineRunSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipelineRunSpec(PredictionPipelineRunSpec other) : this() {
      _hasBits0 = other._hasBits0;
      predictorName_ = other.predictorName_;
      labeled_ = other.labeled_;
      objective_ = other.objective_;
      datasetName_ = other.datasetName_;
      input_ = other.input_ != null ? other.input_.Clone() : null;
      output_ = other.output_ != null ? other.output_.Clone() : null;
      owner_ = other.owner_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipelineRunSpec Clone() {
      return new PredictionPipelineRunSpec(this);
    }

    /// <summary>Field number for the "predictorName" field.</summary>
    public const int PredictorNameFieldNumber = 1;
    private readonly static string PredictorNameDefaultValue = "";

    private string predictorName_;
    /// <summary>
    /// PredictorName refer to the predictor which would predict the dataset of this prediction.
    /// +kubebuilder:validation:MaxLength=63
    /// +kubebuilder:validation:MinLength=1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PredictorName {
      get { return predictorName_ ?? PredictorNameDefaultValue; }
      set {
        predictorName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "predictorName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPredictorName {
      get { return predictorName_ != null; }
    }
    /// <summary>Clears the value of the "predictorName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPredictorName() {
      predictorName_ = null;
    }

    /// <summary>Field number for the "labeled" field.</summary>
    public const int LabeledFieldNumber = 2;
    private readonly static bool LabeledDefaultValue = false;

    private bool labeled_;
    /// <summary>
    /// Labeled , true if this is labeled prediction request.
    /// Used usually for unit testing
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Labeled {
      get { if ((_hasBits0 & 1) != 0) { return labeled_; } else { return LabeledDefaultValue; } }
      set {
        _hasBits0 |= 1;
        labeled_ = value;
      }
    }
    /// <summary>Gets whether the "labeled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLabeled {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "labeled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLabeled() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "objective" field.</summary>
    public const int ObjectiveFieldNumber = 3;
    private readonly static string ObjectiveDefaultValue = "";

    private string objective_;
    /// <summary>
    /// Objective is the objective metric used to score
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Objective {
      get { return objective_ ?? ObjectiveDefaultValue; }
      set {
        objective_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "objective" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasObjective {
      get { return objective_ != null; }
    }
    /// <summary>Clears the value of the "objective" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearObjective() {
      objective_ = null;
    }

    /// <summary>Field number for the "datasetName" field.</summary>
    public const int DatasetNameFieldNumber = 4;
    private readonly static string DatasetNameDefaultValue = "";

    private string datasetName_;
    /// <summary>
    /// DatasetName is where we are using a dataset name. This can be dataset name
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DatasetName {
      get { return datasetName_ ?? DatasetNameDefaultValue; }
      set {
        datasetName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "datasetName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDatasetName {
      get { return datasetName_ != null; }
    }
    /// <summary>Clears the value of the "datasetName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDatasetName() {
      datasetName_ = null;
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 5;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation input_;
    /// <summary>
    /// Input is of the input if using direct input file
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation Input {
      get { return input_; }
      set {
        input_ = value;
      }
    }

    /// <summary>Field number for the "output" field.</summary>
    public const int OutputFieldNumber = 6;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation output_;
    /// <summary>
    /// Output is the key in the bucket for storing all the prediction output
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation Output {
      get { return output_; }
      set {
        output_ = value;
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 7;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// Owner of the run
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwner() {
      owner_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PredictionPipelineRunSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PredictionPipelineRunSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PredictorName != other.PredictorName) return false;
      if (Labeled != other.Labeled) return false;
      if (Objective != other.Objective) return false;
      if (DatasetName != other.DatasetName) return false;
      if (!object.Equals(Input, other.Input)) return false;
      if (!object.Equals(Output, other.Output)) return false;
      if (Owner != other.Owner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPredictorName) hash ^= PredictorName.GetHashCode();
      if (HasLabeled) hash ^= Labeled.GetHashCode();
      if (HasObjective) hash ^= Objective.GetHashCode();
      if (HasDatasetName) hash ^= DatasetName.GetHashCode();
      if (input_ != null) hash ^= Input.GetHashCode();
      if (output_ != null) hash ^= Output.GetHashCode();
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPredictorName) {
        output.WriteRawTag(10);
        output.WriteString(PredictorName);
      }
      if (HasLabeled) {
        output.WriteRawTag(16);
        output.WriteBool(Labeled);
      }
      if (HasObjective) {
        output.WriteRawTag(26);
        output.WriteString(Objective);
      }
      if (HasDatasetName) {
        output.WriteRawTag(34);
        output.WriteString(DatasetName);
      }
      if (input_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Input);
      }
      if (output_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Output);
      }
      if (HasOwner) {
        output.WriteRawTag(58);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPredictorName) {
        output.WriteRawTag(10);
        output.WriteString(PredictorName);
      }
      if (HasLabeled) {
        output.WriteRawTag(16);
        output.WriteBool(Labeled);
      }
      if (HasObjective) {
        output.WriteRawTag(26);
        output.WriteString(Objective);
      }
      if (HasDatasetName) {
        output.WriteRawTag(34);
        output.WriteString(DatasetName);
      }
      if (input_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Input);
      }
      if (output_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Output);
      }
      if (HasOwner) {
        output.WriteRawTag(58);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasPredictorName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PredictorName);
      }
      if (HasLabeled) {
        size += 1 + 1;
      }
      if (HasObjective) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Objective);
      }
      if (HasDatasetName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DatasetName);
      }
      if (input_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      if (output_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Output);
      }
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PredictionPipelineRunSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasPredictorName) {
        PredictorName = other.PredictorName;
      }
      if (other.HasLabeled) {
        Labeled = other.Labeled;
      }
      if (other.HasObjective) {
        Objective = other.Objective;
      }
      if (other.HasDatasetName) {
        DatasetName = other.DatasetName;
      }
      if (other.input_ != null) {
        if (input_ == null) {
          Input = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
        }
        Input.MergeFrom(other.Input);
      }
      if (other.output_ != null) {
        if (output_ == null) {
          Output = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
        }
        Output.MergeFrom(other.Output);
      }
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PredictorName = input.ReadString();
            break;
          }
          case 16: {
            Labeled = input.ReadBool();
            break;
          }
          case 26: {
            Objective = input.ReadString();
            break;
          }
          case 34: {
            DatasetName = input.ReadString();
            break;
          }
          case 42: {
            if (input_ == null) {
              Input = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
            }
            input.ReadMessage(Input);
            break;
          }
          case 50: {
            if (output_ == null) {
              Output = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
            }
            input.ReadMessage(Output);
            break;
          }
          case 58: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PredictorName = input.ReadString();
            break;
          }
          case 16: {
            Labeled = input.ReadBool();
            break;
          }
          case 26: {
            Objective = input.ReadString();
            break;
          }
          case 34: {
            DatasetName = input.ReadString();
            break;
          }
          case 42: {
            if (input_ == null) {
              Input = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
            }
            input.ReadMessage(Input);
            break;
          }
          case 50: {
            if (output_ == null) {
              Output = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
            }
            input.ReadMessage(Output);
            break;
          }
          case 58: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// PredictionPipelineRunStatus is the observed state of a PredictionTemplate
  /// </summary>
  public sealed partial class PredictionPipelineRunStatus : pb::IMessage<PredictionPipelineRunStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PredictionPipelineRunStatus> _parser = new pb::MessageParser<PredictionPipelineRunStatus>(() => new PredictionPipelineRunStatus());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PredictionPipelineRunStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipelineRunStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipelineRunStatus(PredictionPipelineRunStatus other) : this() {
      _hasBits0 = other._hasBits0;
      score_ = other.score_;
      phase_ = other.phase_;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      completionTime_ = other.completionTime_ != null ? other.completionTime_.Clone() : null;
      conditions_ = other.conditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipelineRunStatus Clone() {
      return new PredictionPipelineRunStatus(this);
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 2;
    private readonly static double ScoreDefaultValue = 0D;

    private double score_;
    /// <summary>
    /// PredictionPipelineRun score based on the objective.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Score {
      get { if ((_hasBits0 & 1) != 0) { return score_; } else { return ScoreDefaultValue; } }
      set {
        _hasBits0 |= 1;
        score_ = value;
      }
    }
    /// <summary>Gets whether the "score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasScore {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearScore() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "phase" field.</summary>
    public const int PhaseFieldNumber = 3;
    private readonly static string PhaseDefaultValue = "";

    private string phase_;
    /// <summary>
    /// The phase of the prediction
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Phase {
      get { return phase_ ?? PhaseDefaultValue; }
      set {
        phase_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "phase" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPhase {
      get { return phase_ != null; }
    }
    /// <summary>Clears the value of the "phase" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPhase() {
      phase_ = null;
    }

    /// <summary>Field number for the "startTime" field.</summary>
    public const int StartTimeFieldNumber = 4;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time startTime_;
    /// <summary>
    /// StartTime is the times that this prediction job started
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "completionTime" field.</summary>
    public const int CompletionTimeFieldNumber = 5;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time completionTime_;
    /// <summary>
    /// CompletionTime is the time that this prediction job finished
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time CompletionTime {
      get { return completionTime_; }
      set {
        completionTime_ = value;
      }
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRunCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(50, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRunCondition.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRunCondition> conditions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRunCondition>();
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineRunCondition> Conditions {
      get { return conditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PredictionPipelineRunStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PredictionPipelineRunStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Score, other.Score)) return false;
      if (Phase != other.Phase) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(CompletionTime, other.CompletionTime)) return false;
      if(!conditions_.Equals(other.conditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasScore) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Score);
      if (HasPhase) hash ^= Phase.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (completionTime_ != null) hash ^= CompletionTime.GetHashCode();
      hash ^= conditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasScore) {
        output.WriteRawTag(17);
        output.WriteDouble(Score);
      }
      if (HasPhase) {
        output.WriteRawTag(26);
        output.WriteString(Phase);
      }
      if (startTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StartTime);
      }
      if (completionTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CompletionTime);
      }
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasScore) {
        output.WriteRawTag(17);
        output.WriteDouble(Score);
      }
      if (HasPhase) {
        output.WriteRawTag(26);
        output.WriteString(Phase);
      }
      if (startTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StartTime);
      }
      if (completionTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CompletionTime);
      }
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasScore) {
        size += 1 + 8;
      }
      if (HasPhase) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Phase);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (completionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompletionTime);
      }
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PredictionPipelineRunStatus other) {
      if (other == null) {
        return;
      }
      if (other.HasScore) {
        Score = other.Score;
      }
      if (other.HasPhase) {
        Phase = other.Phase;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.completionTime_ != null) {
        if (completionTime_ == null) {
          CompletionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        CompletionTime.MergeFrom(other.CompletionTime);
      }
      conditions_.Add(other.conditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 17: {
            Score = input.ReadDouble();
            break;
          }
          case 26: {
            Phase = input.ReadString();
            break;
          }
          case 34: {
            if (startTime_ == null) {
              StartTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 42: {
            if (completionTime_ == null) {
              CompletionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(CompletionTime);
            break;
          }
          case 50: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 17: {
            Score = input.ReadDouble();
            break;
          }
          case 26: {
            Phase = input.ReadString();
            break;
          }
          case 34: {
            if (startTime_ == null) {
              StartTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 42: {
            if (completionTime_ == null) {
              CompletionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(CompletionTime);
            break;
          }
          case 50: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// PredictionPipelineSpec represent the desired state of PredictionPipeline
  /// </summary>
  public sealed partial class PredictionPipelineSpec : pb::IMessage<PredictionPipelineSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PredictionPipelineSpec> _parser = new pb::MessageParser<PredictionPipelineSpec>(() => new PredictionPipelineSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PredictionPipelineSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipelineSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipelineSpec(PredictionPipelineSpec other) : this() {
      _hasBits0 = other._hasBits0;
      predictorName_ = other.predictorName_;
      labeled_ = other.labeled_;
      objective_ = other.objective_;
      datasetName_ = other.datasetName_;
      input_ = other.input_ != null ? other.input_.Clone() : null;
      output_ = other.output_ != null ? other.output_.Clone() : null;
      owner_ = other.owner_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipelineSpec Clone() {
      return new PredictionPipelineSpec(this);
    }

    /// <summary>Field number for the "predictorName" field.</summary>
    public const int PredictorNameFieldNumber = 1;
    private readonly static string PredictorNameDefaultValue = "";

    private string predictorName_;
    /// <summary>
    /// PredictorName refer to the predictor which would predict the dataset of this prediction.
    /// +kubebuilder:validation:MaxLength=63
    /// +kubebuilder:validation:MinLength=1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PredictorName {
      get { return predictorName_ ?? PredictorNameDefaultValue; }
      set {
        predictorName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "predictorName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPredictorName {
      get { return predictorName_ != null; }
    }
    /// <summary>Clears the value of the "predictorName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPredictorName() {
      predictorName_ = null;
    }

    /// <summary>Field number for the "labeled" field.</summary>
    public const int LabeledFieldNumber = 2;
    private readonly static bool LabeledDefaultValue = false;

    private bool labeled_;
    /// <summary>
    /// Labeled , true if this is labeled prediction request.
    /// Used usally for unit testing
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Labeled {
      get { if ((_hasBits0 & 1) != 0) { return labeled_; } else { return LabeledDefaultValue; } }
      set {
        _hasBits0 |= 1;
        labeled_ = value;
      }
    }
    /// <summary>Gets whether the "labeled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLabeled {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "labeled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLabeled() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "objective" field.</summary>
    public const int ObjectiveFieldNumber = 3;
    private readonly static string ObjectiveDefaultValue = "";

    private string objective_;
    /// <summary>
    /// The objective metric used to score
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Objective {
      get { return objective_ ?? ObjectiveDefaultValue; }
      set {
        objective_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "objective" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasObjective {
      get { return objective_ != null; }
    }
    /// <summary>Clears the value of the "objective" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearObjective() {
      objective_ = null;
    }

    /// <summary>Field number for the "datasetName" field.</summary>
    public const int DatasetNameFieldNumber = 4;
    private readonly static string DatasetNameDefaultValue = "";

    private string datasetName_;
    /// <summary>
    /// DatasetName is where we are using a dataset name. This can be dataset name
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DatasetName {
      get { return datasetName_ ?? DatasetNameDefaultValue; }
      set {
        datasetName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "datasetName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDatasetName {
      get { return datasetName_ != null; }
    }
    /// <summary>Clears the value of the "datasetName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDatasetName() {
      datasetName_ = null;
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 5;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation input_;
    /// <summary>
    /// Input is the DataLocation of the input if using direct input file
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation Input {
      get { return input_; }
      set {
        input_ = value;
      }
    }

    /// <summary>Field number for the "output" field.</summary>
    public const int OutputFieldNumber = 6;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation output_;
    /// <summary>
    /// Output is the key in the bucket for storing all the prediction output
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation Output {
      get { return output_; }
      set {
        output_ = value;
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 7;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// The owner account name
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwner() {
      owner_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PredictionPipelineSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PredictionPipelineSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PredictorName != other.PredictorName) return false;
      if (Labeled != other.Labeled) return false;
      if (Objective != other.Objective) return false;
      if (DatasetName != other.DatasetName) return false;
      if (!object.Equals(Input, other.Input)) return false;
      if (!object.Equals(Output, other.Output)) return false;
      if (Owner != other.Owner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPredictorName) hash ^= PredictorName.GetHashCode();
      if (HasLabeled) hash ^= Labeled.GetHashCode();
      if (HasObjective) hash ^= Objective.GetHashCode();
      if (HasDatasetName) hash ^= DatasetName.GetHashCode();
      if (input_ != null) hash ^= Input.GetHashCode();
      if (output_ != null) hash ^= Output.GetHashCode();
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPredictorName) {
        output.WriteRawTag(10);
        output.WriteString(PredictorName);
      }
      if (HasLabeled) {
        output.WriteRawTag(16);
        output.WriteBool(Labeled);
      }
      if (HasObjective) {
        output.WriteRawTag(26);
        output.WriteString(Objective);
      }
      if (HasDatasetName) {
        output.WriteRawTag(34);
        output.WriteString(DatasetName);
      }
      if (input_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Input);
      }
      if (output_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Output);
      }
      if (HasOwner) {
        output.WriteRawTag(58);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPredictorName) {
        output.WriteRawTag(10);
        output.WriteString(PredictorName);
      }
      if (HasLabeled) {
        output.WriteRawTag(16);
        output.WriteBool(Labeled);
      }
      if (HasObjective) {
        output.WriteRawTag(26);
        output.WriteString(Objective);
      }
      if (HasDatasetName) {
        output.WriteRawTag(34);
        output.WriteString(DatasetName);
      }
      if (input_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Input);
      }
      if (output_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Output);
      }
      if (HasOwner) {
        output.WriteRawTag(58);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasPredictorName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PredictorName);
      }
      if (HasLabeled) {
        size += 1 + 1;
      }
      if (HasObjective) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Objective);
      }
      if (HasDatasetName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DatasetName);
      }
      if (input_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      if (output_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Output);
      }
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PredictionPipelineSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasPredictorName) {
        PredictorName = other.PredictorName;
      }
      if (other.HasLabeled) {
        Labeled = other.Labeled;
      }
      if (other.HasObjective) {
        Objective = other.Objective;
      }
      if (other.HasDatasetName) {
        DatasetName = other.DatasetName;
      }
      if (other.input_ != null) {
        if (input_ == null) {
          Input = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
        }
        Input.MergeFrom(other.Input);
      }
      if (other.output_ != null) {
        if (output_ == null) {
          Output = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
        }
        Output.MergeFrom(other.Output);
      }
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PredictorName = input.ReadString();
            break;
          }
          case 16: {
            Labeled = input.ReadBool();
            break;
          }
          case 26: {
            Objective = input.ReadString();
            break;
          }
          case 34: {
            DatasetName = input.ReadString();
            break;
          }
          case 42: {
            if (input_ == null) {
              Input = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
            }
            input.ReadMessage(Input);
            break;
          }
          case 50: {
            if (output_ == null) {
              Output = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
            }
            input.ReadMessage(Output);
            break;
          }
          case 58: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PredictorName = input.ReadString();
            break;
          }
          case 16: {
            Labeled = input.ReadBool();
            break;
          }
          case 26: {
            Objective = input.ReadString();
            break;
          }
          case 34: {
            DatasetName = input.ReadString();
            break;
          }
          case 42: {
            if (input_ == null) {
              Input = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
            }
            input.ReadMessage(Input);
            break;
          }
          case 50: {
            if (output_ == null) {
              Output = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
            }
            input.ReadMessage(Output);
            break;
          }
          case 58: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// PredictionPipelineStatus is the observed state of a PredictionTemplate
  /// </summary>
  public sealed partial class PredictionPipelineStatus : pb::IMessage<PredictionPipelineStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PredictionPipelineStatus> _parser = new pb::MessageParser<PredictionPipelineStatus>(() => new PredictionPipelineStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PredictionPipelineStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipelineStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipelineStatus(PredictionPipelineStatus other) : this() {
      phase_ = other.phase_;
      conditions_ = other.conditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionPipelineStatus Clone() {
      return new PredictionPipelineStatus(this);
    }

    /// <summary>Field number for the "phase" field.</summary>
    public const int PhaseFieldNumber = 3;
    private readonly static string PhaseDefaultValue = "";

    private string phase_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Phase {
      get { return phase_ ?? PhaseDefaultValue; }
      set {
        phase_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "phase" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPhase {
      get { return phase_ != null; }
    }
    /// <summary>Clears the value of the "phase" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPhase() {
      phase_ = null;
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(50, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineCondition.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineCondition> conditions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineCondition>();
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionPipelineCondition> Conditions {
      get { return conditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PredictionPipelineStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PredictionPipelineStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Phase != other.Phase) return false;
      if(!conditions_.Equals(other.conditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPhase) hash ^= Phase.GetHashCode();
      hash ^= conditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPhase) {
        output.WriteRawTag(26);
        output.WriteString(Phase);
      }
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPhase) {
        output.WriteRawTag(26);
        output.WriteString(Phase);
      }
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasPhase) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Phase);
      }
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PredictionPipelineStatus other) {
      if (other == null) {
        return;
      }
      if (other.HasPhase) {
        Phase = other.Phase;
      }
      conditions_.Add(other.conditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            Phase = input.ReadString();
            break;
          }
          case 50: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 26: {
            Phase = input.ReadString();
            break;
          }
          case 50: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Predictor represent an PredictorName API object
  /// +kubebuilder:object:root=true
  /// +kubebuilder:subresource:status
  /// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
  /// +kubebuilder:printcolumn:name="Port",type="integer",JSONPath=".spec.port",description=""
  /// +kubebuilder:printcolumn:name="Production",type="string",JSONPath=".spec.prod.modelName",description=""
  /// +kubebuilder:printcolumn:name="Weight",type="string",JSONPath=".spec.prod.weight",description=""
  /// +kubebuilder:printcolumn:name="Access",type="string",JSONPath=".spec.accessType",description=""
  /// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
  /// +kubebuilder:resource:path=predictors,singular=predictor,categories={inference,modela}
  /// </summary>
  public sealed partial class Predictor : pb::IMessage<Predictor>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Predictor> _parser = new pb::MessageParser<Predictor>(() => new Predictor());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Predictor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Predictor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Predictor(Predictor other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Predictor Clone() {
      return new Predictor(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Predictor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Predictor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Predictor other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// PredictorCondition describes the state of a prediction at a certain point.
  /// </summary>
  public sealed partial class PredictorCondition : pb::IMessage<PredictorCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PredictorCondition> _parser = new pb::MessageParser<PredictorCondition>(() => new PredictorCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PredictorCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictorCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictorCondition(PredictorCondition other) : this() {
      type_ = other.type_;
      status_ = other.status_;
      lastTransitionTime_ = other.lastTransitionTime_ != null ? other.lastTransitionTime_.Clone() : null;
      reason_ = other.reason_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictorCondition Clone() {
      return new PredictorCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// Type of account condition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    /// <summary>
    /// Status of the condition, one of True, False, Unknown.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "lastTransitionTime" field.</summary>
    public const int LastTransitionTimeFieldNumber = 3;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastTransitionTime_;
    /// <summary>
    /// Last time the condition transitioned from one status to another.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastTransitionTime {
      get { return lastTransitionTime_; }
      set {
        lastTransitionTime_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 4;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// The reason for the condition's last transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 5;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// A human readable message indicating details about the transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PredictorCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PredictorCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LastTransitionTime, other.LastTransitionTime)) return false;
      if (Reason != other.Reason) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (lastTransitionTime_ != null) hash ^= LastTransitionTime.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (lastTransitionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTransitionTime);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PredictorCondition other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.lastTransitionTime_ != null) {
        if (lastTransitionTime_ == null) {
          LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastTransitionTime.MergeFrom(other.LastTransitionTime);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PredictorHealth : pb::IMessage<PredictorHealth>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PredictorHealth> _parser = new pb::MessageParser<PredictorHealth>(() => new PredictorHealth());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PredictorHealth> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictorHealth() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictorHealth(PredictorHealth other) : this() {
      _hasBits0 = other._hasBits0;
      totalPredictions_ = other.totalPredictions_;
      totalRequests_ = other.totalRequests_;
      totalP95Requests_ = other.totalP95Requests_;
      medianResponseTime_ = other.medianResponseTime_;
      lastDailyPredictions_ = other.lastDailyPredictions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictorHealth Clone() {
      return new PredictorHealth(this);
    }

    /// <summary>Field number for the "totalPredictions" field.</summary>
    public const int TotalPredictionsFieldNumber = 1;
    private readonly static int TotalPredictionsDefaultValue = 0;

    private int totalPredictions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalPredictions {
      get { if ((_hasBits0 & 1) != 0) { return totalPredictions_; } else { return TotalPredictionsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        totalPredictions_ = value;
      }
    }
    /// <summary>Gets whether the "totalPredictions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTotalPredictions {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "totalPredictions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTotalPredictions() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "totalRequests" field.</summary>
    public const int TotalRequestsFieldNumber = 2;
    private readonly static int TotalRequestsDefaultValue = 0;

    private int totalRequests_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalRequests {
      get { if ((_hasBits0 & 2) != 0) { return totalRequests_; } else { return TotalRequestsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        totalRequests_ = value;
      }
    }
    /// <summary>Gets whether the "totalRequests" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTotalRequests {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "totalRequests" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTotalRequests() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "totalP95Requests" field.</summary>
    public const int TotalP95RequestsFieldNumber = 3;
    private readonly static int TotalP95RequestsDefaultValue = 0;

    private int totalP95Requests_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalP95Requests {
      get { if ((_hasBits0 & 4) != 0) { return totalP95Requests_; } else { return TotalP95RequestsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        totalP95Requests_ = value;
      }
    }
    /// <summary>Gets whether the "totalP95Requests" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTotalP95Requests {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "totalP95Requests" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTotalP95Requests() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "medianResponseTime" field.</summary>
    public const int MedianResponseTimeFieldNumber = 4;
    private readonly static int MedianResponseTimeDefaultValue = 0;

    private int medianResponseTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MedianResponseTime {
      get { if ((_hasBits0 & 8) != 0) { return medianResponseTime_; } else { return MedianResponseTimeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        medianResponseTime_ = value;
      }
    }
    /// <summary>Gets whether the "medianResponseTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMedianResponseTime {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "medianResponseTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMedianResponseTime() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "lastDailyPredictions" field.</summary>
    public const int LastDailyPredictionsFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_lastDailyPredictions_codec
        = pb::FieldCodec.ForInt32(40);
    private readonly pbc::RepeatedField<int> lastDailyPredictions_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// Last 7 days predictions
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> LastDailyPredictions {
      get { return lastDailyPredictions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PredictorHealth);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PredictorHealth other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TotalPredictions != other.TotalPredictions) return false;
      if (TotalRequests != other.TotalRequests) return false;
      if (TotalP95Requests != other.TotalP95Requests) return false;
      if (MedianResponseTime != other.MedianResponseTime) return false;
      if(!lastDailyPredictions_.Equals(other.lastDailyPredictions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTotalPredictions) hash ^= TotalPredictions.GetHashCode();
      if (HasTotalRequests) hash ^= TotalRequests.GetHashCode();
      if (HasTotalP95Requests) hash ^= TotalP95Requests.GetHashCode();
      if (HasMedianResponseTime) hash ^= MedianResponseTime.GetHashCode();
      hash ^= lastDailyPredictions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTotalPredictions) {
        output.WriteRawTag(8);
        output.WriteInt32(TotalPredictions);
      }
      if (HasTotalRequests) {
        output.WriteRawTag(16);
        output.WriteInt32(TotalRequests);
      }
      if (HasTotalP95Requests) {
        output.WriteRawTag(24);
        output.WriteInt32(TotalP95Requests);
      }
      if (HasMedianResponseTime) {
        output.WriteRawTag(32);
        output.WriteInt32(MedianResponseTime);
      }
      lastDailyPredictions_.WriteTo(output, _repeated_lastDailyPredictions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTotalPredictions) {
        output.WriteRawTag(8);
        output.WriteInt32(TotalPredictions);
      }
      if (HasTotalRequests) {
        output.WriteRawTag(16);
        output.WriteInt32(TotalRequests);
      }
      if (HasTotalP95Requests) {
        output.WriteRawTag(24);
        output.WriteInt32(TotalP95Requests);
      }
      if (HasMedianResponseTime) {
        output.WriteRawTag(32);
        output.WriteInt32(MedianResponseTime);
      }
      lastDailyPredictions_.WriteTo(ref output, _repeated_lastDailyPredictions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTotalPredictions) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPredictions);
      }
      if (HasTotalRequests) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalRequests);
      }
      if (HasTotalP95Requests) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalP95Requests);
      }
      if (HasMedianResponseTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MedianResponseTime);
      }
      size += lastDailyPredictions_.CalculateSize(_repeated_lastDailyPredictions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PredictorHealth other) {
      if (other == null) {
        return;
      }
      if (other.HasTotalPredictions) {
        TotalPredictions = other.TotalPredictions;
      }
      if (other.HasTotalRequests) {
        TotalRequests = other.TotalRequests;
      }
      if (other.HasTotalP95Requests) {
        TotalP95Requests = other.TotalP95Requests;
      }
      if (other.HasMedianResponseTime) {
        MedianResponseTime = other.MedianResponseTime;
      }
      lastDailyPredictions_.Add(other.lastDailyPredictions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TotalPredictions = input.ReadInt32();
            break;
          }
          case 16: {
            TotalRequests = input.ReadInt32();
            break;
          }
          case 24: {
            TotalP95Requests = input.ReadInt32();
            break;
          }
          case 32: {
            MedianResponseTime = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            lastDailyPredictions_.AddEntriesFrom(input, _repeated_lastDailyPredictions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TotalPredictions = input.ReadInt32();
            break;
          }
          case 16: {
            TotalRequests = input.ReadInt32();
            break;
          }
          case 24: {
            TotalP95Requests = input.ReadInt32();
            break;
          }
          case 32: {
            MedianResponseTime = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            lastDailyPredictions_.AddEntriesFrom(ref input, _repeated_lastDailyPredictions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// PredictorList represent a list of predictors
  /// </summary>
  public sealed partial class PredictorList : pb::IMessage<PredictorList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PredictorList> _parser = new pb::MessageParser<PredictorList>(() => new PredictorList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PredictorList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictorList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictorList(PredictorList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictorList Clone() {
      return new PredictorList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.Predictor> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.Predictor.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.Predictor> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.Predictor>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.Predictor> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PredictorList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PredictorList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PredictorList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// PredictorSpec define the desired state of the predictor
  /// </summary>
  public sealed partial class PredictorSpec : pb::IMessage<PredictorSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PredictorSpec> _parser = new pb::MessageParser<PredictorSpec>(() => new PredictorSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PredictorSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictorSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictorSpec(PredictorSpec other) : this() {
      _hasBits0 = other._hasBits0;
      ownerName_ = other.ownerName_;
      description_ = other.description_;
      productRef_ = other.productRef_ != null ? other.productRef_.Clone() : null;
      servingsiteRef_ = other.servingsiteRef_ != null ? other.servingsiteRef_.Clone() : null;
      port_ = other.port_;
      path_ = other.path_;
      accessType_ = other.accessType_;
      template_ = other.template_ != null ? other.template_.Clone() : null;
      models_ = other.models_.Clone();
      driftCheck_ = other.driftCheck_ != null ? other.driftCheck_.Clone() : null;
      progressive_ = other.progressive_ != null ? other.progressive_.Clone() : null;
      artifactsFolder_ = other.artifactsFolder_;
      inputChannels_ = other.inputChannels_.Clone();
      outputChannels_ = other.outputChannels_.Clone();
      owner_ = other.owner_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictorSpec Clone() {
      return new PredictorSpec(this);
    }

    /// <summary>Field number for the "ownerName" field.</summary>
    public const int OwnerNameFieldNumber = 1;
    private readonly static string OwnerNameDefaultValue = "";

    private string ownerName_;
    /// <summary>
    /// The account name of the owner of this predictor
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerName {
      get { return ownerName_ ?? OwnerNameDefaultValue; }
      set {
        ownerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ownerName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOwnerName {
      get { return ownerName_ != null; }
    }
    /// <summary>Clears the value of the "ownerName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwnerName() {
      ownerName_ = null;
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// User provided description
    /// +kubebuilder:validation:MaxLength=256
    /// +kubebuilder:default =""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "productRef" field.</summary>
    public const int ProductRefFieldNumber = 3;
    private global::K8S.Io.Api.Core.V1.ObjectReference productRef_;
    /// <summary>
    /// The product that this predictor serve.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Api.Core.V1.ObjectReference ProductRef {
      get { return productRef_; }
      set {
        productRef_ = value;
      }
    }

    /// <summary>Field number for the "servingsiteRef" field.</summary>
    public const int ServingsiteRefFieldNumber = 4;
    private global::K8S.Io.Api.Core.V1.ObjectReference servingsiteRef_;
    /// <summary>
    /// The serving site that owns the
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Api.Core.V1.ObjectReference ServingsiteRef {
      get { return servingsiteRef_; }
      set {
        servingsiteRef_ = value;
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 5;
    private readonly static int PortDefaultValue = 0;

    private int port_;
    /// <summary>
    /// Service port specify the predictor port.
    /// Default: 8080
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { if ((_hasBits0 & 1) != 0) { return port_; } else { return PortDefaultValue; } }
      set {
        _hasBits0 |= 1;
        port_ = value;
      }
    }
    /// <summary>Gets whether the "port" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPort {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "port" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPort() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 6;
    private readonly static string PathDefaultValue = "";

    private string path_;
    /// <summary>
    /// This is the path relative to the ingress path
    /// +kubebuilder:validation:MaxLength=256
    /// +kubebuilder:validation:MinLength=1
    /// Default: /predict
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_ ?? PathDefaultValue; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "path" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPath {
      get { return path_ != null; }
    }
    /// <summary>Clears the value of the "path" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPath() {
      path_ = null;
    }

    /// <summary>Field number for the "accessType" field.</summary>
    public const int AccessTypeFieldNumber = 7;
    private readonly static string AccessTypeDefaultValue = "";

    private string accessType_;
    /// <summary>
    /// The access method specified how external clients will access the predictor
    /// Default: ClusterPort
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessType {
      get { return accessType_ ?? AccessTypeDefaultValue; }
      set {
        accessType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "accessType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccessType {
      get { return accessType_ != null; }
    }
    /// <summary>Clears the value of the "accessType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccessType() {
      accessType_ = null;
    }

    /// <summary>Field number for the "template" field.</summary>
    public const int TemplateFieldNumber = 8;
    private global::K8S.Io.Api.Core.V1.PodTemplate template_;
    /// <summary>
    /// A template for the predictor pod. The system will create the deployment based on this template.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Api.Core.V1.PodTemplate Template {
      get { return template_; }
      set {
        template_ = value;
      }
    }

    /// <summary>Field number for the "models" field.</summary>
    public const int ModelsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.ModelDeploymentSpec> _repeated_models_codec
        = pb::FieldCodec.ForMessage(74, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.ModelDeploymentSpec.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.ModelDeploymentSpec> models_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.ModelDeploymentSpec>();
    /// <summary>
    /// Production model deployment
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.ModelDeploymentSpec> Models {
      get { return models_; }
    }

    /// <summary>Field number for the "driftCheck" field.</summary>
    public const int DriftCheckFieldNumber = 12;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.DriftCheckSpec driftCheck_;
    /// <summary>
    /// How much do we increment the warm up traffic
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.DriftCheckSpec DriftCheck {
      get { return driftCheck_; }
      set {
        driftCheck_ = value;
      }
    }

    /// <summary>Field number for the "progressive" field.</summary>
    public const int ProgressiveFieldNumber = 13;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.ProgressiveSpec progressive_;
    /// <summary>
    /// Denotes the progressive spec
    /// What metric to use when comparing the candidate to the current
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.ProgressiveSpec Progressive {
      get { return progressive_; }
      set {
        progressive_ = value;
      }
    }

    /// <summary>Field number for the "artifactsFolder" field.</summary>
    public const int ArtifactsFolderFieldNumber = 14;
    private readonly static string ArtifactsFolderDefaultValue = "";

    private string artifactsFolder_;
    /// <summary>
    /// The key in the bucket for storing all the predictor artifacts.
    /// +kubebuilder:validation:MaxLength=512
    /// +kubebuilder:validation:MinLength=1
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ArtifactsFolder {
      get { return artifactsFolder_ ?? ArtifactsFolderDefaultValue; }
      set {
        artifactsFolder_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "artifactsFolder" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasArtifactsFolder {
      get { return artifactsFolder_ != null; }
    }
    /// <summary>Clears the value of the "artifactsFolder" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearArtifactsFolder() {
      artifactsFolder_ = null;
    }

    /// <summary>Field number for the "inputChannels" field.</summary>
    public const int InputChannelsFieldNumber = 15;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionChannel> _repeated_inputChannels_codec
        = pb::FieldCodec.ForMessage(122, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionChannel.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionChannel> inputChannels_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionChannel>();
    /// <summary>
    /// set of input channel, the predictor will watch those channels for predictions
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionChannel> InputChannels {
      get { return inputChannels_; }
    }

    /// <summary>Field number for the "outputChannels" field.</summary>
    public const int OutputChannelsFieldNumber = 16;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionChannel> _repeated_outputChannels_codec
        = pb::FieldCodec.ForMessage(130, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionChannel.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionChannel> outputChannels_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionChannel>();
    /// <summary>
    /// set of output channels, the predictor will
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictionChannel> OutputChannels {
      get { return outputChannels_; }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 17;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// The owner account name
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwner() {
      owner_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PredictorSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PredictorSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerName != other.OwnerName) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(ProductRef, other.ProductRef)) return false;
      if (!object.Equals(ServingsiteRef, other.ServingsiteRef)) return false;
      if (Port != other.Port) return false;
      if (Path != other.Path) return false;
      if (AccessType != other.AccessType) return false;
      if (!object.Equals(Template, other.Template)) return false;
      if(!models_.Equals(other.models_)) return false;
      if (!object.Equals(DriftCheck, other.DriftCheck)) return false;
      if (!object.Equals(Progressive, other.Progressive)) return false;
      if (ArtifactsFolder != other.ArtifactsFolder) return false;
      if(!inputChannels_.Equals(other.inputChannels_)) return false;
      if(!outputChannels_.Equals(other.outputChannels_)) return false;
      if (Owner != other.Owner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasOwnerName) hash ^= OwnerName.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (productRef_ != null) hash ^= ProductRef.GetHashCode();
      if (servingsiteRef_ != null) hash ^= ServingsiteRef.GetHashCode();
      if (HasPort) hash ^= Port.GetHashCode();
      if (HasPath) hash ^= Path.GetHashCode();
      if (HasAccessType) hash ^= AccessType.GetHashCode();
      if (template_ != null) hash ^= Template.GetHashCode();
      hash ^= models_.GetHashCode();
      if (driftCheck_ != null) hash ^= DriftCheck.GetHashCode();
      if (progressive_ != null) hash ^= Progressive.GetHashCode();
      if (HasArtifactsFolder) hash ^= ArtifactsFolder.GetHashCode();
      hash ^= inputChannels_.GetHashCode();
      hash ^= outputChannels_.GetHashCode();
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasOwnerName) {
        output.WriteRawTag(10);
        output.WriteString(OwnerName);
      }
      if (HasDescription) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (productRef_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ProductRef);
      }
      if (servingsiteRef_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ServingsiteRef);
      }
      if (HasPort) {
        output.WriteRawTag(40);
        output.WriteInt32(Port);
      }
      if (HasPath) {
        output.WriteRawTag(50);
        output.WriteString(Path);
      }
      if (HasAccessType) {
        output.WriteRawTag(58);
        output.WriteString(AccessType);
      }
      if (template_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Template);
      }
      models_.WriteTo(output, _repeated_models_codec);
      if (driftCheck_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(DriftCheck);
      }
      if (progressive_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Progressive);
      }
      if (HasArtifactsFolder) {
        output.WriteRawTag(114);
        output.WriteString(ArtifactsFolder);
      }
      inputChannels_.WriteTo(output, _repeated_inputChannels_codec);
      outputChannels_.WriteTo(output, _repeated_outputChannels_codec);
      if (HasOwner) {
        output.WriteRawTag(138, 1);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasOwnerName) {
        output.WriteRawTag(10);
        output.WriteString(OwnerName);
      }
      if (HasDescription) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (productRef_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ProductRef);
      }
      if (servingsiteRef_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ServingsiteRef);
      }
      if (HasPort) {
        output.WriteRawTag(40);
        output.WriteInt32(Port);
      }
      if (HasPath) {
        output.WriteRawTag(50);
        output.WriteString(Path);
      }
      if (HasAccessType) {
        output.WriteRawTag(58);
        output.WriteString(AccessType);
      }
      if (template_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Template);
      }
      models_.WriteTo(ref output, _repeated_models_codec);
      if (driftCheck_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(DriftCheck);
      }
      if (progressive_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Progressive);
      }
      if (HasArtifactsFolder) {
        output.WriteRawTag(114);
        output.WriteString(ArtifactsFolder);
      }
      inputChannels_.WriteTo(ref output, _repeated_inputChannels_codec);
      outputChannels_.WriteTo(ref output, _repeated_outputChannels_codec);
      if (HasOwner) {
        output.WriteRawTag(138, 1);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasOwnerName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerName);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (productRef_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProductRef);
      }
      if (servingsiteRef_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ServingsiteRef);
      }
      if (HasPort) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (HasPath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (HasAccessType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessType);
      }
      if (template_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Template);
      }
      size += models_.CalculateSize(_repeated_models_codec);
      if (driftCheck_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DriftCheck);
      }
      if (progressive_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Progressive);
      }
      if (HasArtifactsFolder) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ArtifactsFolder);
      }
      size += inputChannels_.CalculateSize(_repeated_inputChannels_codec);
      size += outputChannels_.CalculateSize(_repeated_outputChannels_codec);
      if (HasOwner) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PredictorSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasOwnerName) {
        OwnerName = other.OwnerName;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.productRef_ != null) {
        if (productRef_ == null) {
          ProductRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
        }
        ProductRef.MergeFrom(other.ProductRef);
      }
      if (other.servingsiteRef_ != null) {
        if (servingsiteRef_ == null) {
          ServingsiteRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
        }
        ServingsiteRef.MergeFrom(other.ServingsiteRef);
      }
      if (other.HasPort) {
        Port = other.Port;
      }
      if (other.HasPath) {
        Path = other.Path;
      }
      if (other.HasAccessType) {
        AccessType = other.AccessType;
      }
      if (other.template_ != null) {
        if (template_ == null) {
          Template = new global::K8S.Io.Api.Core.V1.PodTemplate();
        }
        Template.MergeFrom(other.Template);
      }
      models_.Add(other.models_);
      if (other.driftCheck_ != null) {
        if (driftCheck_ == null) {
          DriftCheck = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.DriftCheckSpec();
        }
        DriftCheck.MergeFrom(other.DriftCheck);
      }
      if (other.progressive_ != null) {
        if (progressive_ == null) {
          Progressive = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.ProgressiveSpec();
        }
        Progressive.MergeFrom(other.Progressive);
      }
      if (other.HasArtifactsFolder) {
        ArtifactsFolder = other.ArtifactsFolder;
      }
      inputChannels_.Add(other.inputChannels_);
      outputChannels_.Add(other.outputChannels_);
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerName = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            if (productRef_ == null) {
              ProductRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(ProductRef);
            break;
          }
          case 34: {
            if (servingsiteRef_ == null) {
              ServingsiteRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(ServingsiteRef);
            break;
          }
          case 40: {
            Port = input.ReadInt32();
            break;
          }
          case 50: {
            Path = input.ReadString();
            break;
          }
          case 58: {
            AccessType = input.ReadString();
            break;
          }
          case 66: {
            if (template_ == null) {
              Template = new global::K8S.Io.Api.Core.V1.PodTemplate();
            }
            input.ReadMessage(Template);
            break;
          }
          case 74: {
            models_.AddEntriesFrom(input, _repeated_models_codec);
            break;
          }
          case 98: {
            if (driftCheck_ == null) {
              DriftCheck = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.DriftCheckSpec();
            }
            input.ReadMessage(DriftCheck);
            break;
          }
          case 106: {
            if (progressive_ == null) {
              Progressive = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.ProgressiveSpec();
            }
            input.ReadMessage(Progressive);
            break;
          }
          case 114: {
            ArtifactsFolder = input.ReadString();
            break;
          }
          case 122: {
            inputChannels_.AddEntriesFrom(input, _repeated_inputChannels_codec);
            break;
          }
          case 130: {
            outputChannels_.AddEntriesFrom(input, _repeated_outputChannels_codec);
            break;
          }
          case 138: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            OwnerName = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            if (productRef_ == null) {
              ProductRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(ProductRef);
            break;
          }
          case 34: {
            if (servingsiteRef_ == null) {
              ServingsiteRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(ServingsiteRef);
            break;
          }
          case 40: {
            Port = input.ReadInt32();
            break;
          }
          case 50: {
            Path = input.ReadString();
            break;
          }
          case 58: {
            AccessType = input.ReadString();
            break;
          }
          case 66: {
            if (template_ == null) {
              Template = new global::K8S.Io.Api.Core.V1.PodTemplate();
            }
            input.ReadMessage(Template);
            break;
          }
          case 74: {
            models_.AddEntriesFrom(ref input, _repeated_models_codec);
            break;
          }
          case 98: {
            if (driftCheck_ == null) {
              DriftCheck = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.DriftCheckSpec();
            }
            input.ReadMessage(DriftCheck);
            break;
          }
          case 106: {
            if (progressive_ == null) {
              Progressive = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.ProgressiveSpec();
            }
            input.ReadMessage(Progressive);
            break;
          }
          case 114: {
            ArtifactsFolder = input.ReadString();
            break;
          }
          case 122: {
            inputChannels_.AddEntriesFrom(ref input, _repeated_inputChannels_codec);
            break;
          }
          case 130: {
            outputChannels_.AddEntriesFrom(ref input, _repeated_outputChannels_codec);
            break;
          }
          case 138: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// PredictorStatus contain the current state of the Predictor resource
  /// </summary>
  public sealed partial class PredictorStatus : pb::IMessage<PredictorStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PredictorStatus> _parser = new pb::MessageParser<PredictorStatus>(() => new PredictorStatus());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PredictorStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictorStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictorStatus(PredictorStatus other) : this() {
      _hasBits0 = other._hasBits0;
      modelStatus_ = other.modelStatus_.Clone();
      conditions_ = other.conditions_.Clone();
      monitorLastAttemptAt_ = other.monitorLastAttemptAt_ != null ? other.monitorLastAttemptAt_.Clone() : null;
      monitorLastScore_ = other.monitorLastScore_;
      monitorLastLatency_ = other.monitorLastLatency_;
      health_ = other.health_ != null ? other.health_.Clone() : null;
      statuses_ = other.statuses_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictorStatus Clone() {
      return new PredictorStatus(this);
    }

    /// <summary>Field number for the "modelStatus" field.</summary>
    public const int ModelStatusFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.ModelDeploymentStatus> _repeated_modelStatus_codec
        = pb::FieldCodec.ForMessage(10, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.ModelDeploymentStatus.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.ModelDeploymentStatus> modelStatus_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.ModelDeploymentStatus>();
    /// <summary>
    /// Model one status
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.ModelDeploymentStatus> ModelStatus {
      get { return modelStatus_; }
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorCondition.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorCondition> conditions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorCondition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorCondition> Conditions {
      get { return conditions_; }
    }

    /// <summary>Field number for the "monitorLastAttemptAt" field.</summary>
    public const int MonitorLastAttemptAtFieldNumber = 3;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Timestamp monitorLastAttemptAt_;
    /// <summary>
    /// When was the last check attempt
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Timestamp MonitorLastAttemptAt {
      get { return monitorLastAttemptAt_; }
      set {
        monitorLastAttemptAt_ = value;
      }
    }

    /// <summary>Field number for the "monitorLastScore" field.</summary>
    public const int MonitorLastScoreFieldNumber = 4;
    private readonly static double MonitorLastScoreDefaultValue = 0D;

    private double monitorLastScore_;
    /// <summary>
    /// What was the last score
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MonitorLastScore {
      get { if ((_hasBits0 & 1) != 0) { return monitorLastScore_; } else { return MonitorLastScoreDefaultValue; } }
      set {
        _hasBits0 |= 1;
        monitorLastScore_ = value;
      }
    }
    /// <summary>Gets whether the "monitorLastScore" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMonitorLastScore {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "monitorLastScore" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMonitorLastScore() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "monitorLastLatency" field.</summary>
    public const int MonitorLastLatencyFieldNumber = 5;
    private readonly static double MonitorLastLatencyDefaultValue = 0D;

    private double monitorLastLatency_;
    /// <summary>
    /// What was the last latency
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MonitorLastLatency {
      get { if ((_hasBits0 & 2) != 0) { return monitorLastLatency_; } else { return MonitorLastLatencyDefaultValue; } }
      set {
        _hasBits0 |= 2;
        monitorLastLatency_ = value;
      }
    }
    /// <summary>Gets whether the "monitorLastLatency" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMonitorLastLatency {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "monitorLastLatency" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMonitorLastLatency() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "health" field.</summary>
    public const int HealthFieldNumber = 6;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorHealth health_;
    /// <summary>
    /// The Health of the predictor
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorHealth Health {
      get { return health_; }
      set {
        health_ = value;
      }
    }

    /// <summary>Field number for the "statuses" field.</summary>
    public const int StatusesFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.ChannelStatus> _repeated_statuses_codec
        = pb::FieldCodec.ForMessage(58, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.ChannelStatus.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.ChannelStatus> statuses_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.ChannelStatus>();
    /// <summary>
    /// The channels
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.ChannelStatus> Statuses {
      get { return statuses_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PredictorStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PredictorStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!modelStatus_.Equals(other.modelStatus_)) return false;
      if(!conditions_.Equals(other.conditions_)) return false;
      if (!object.Equals(MonitorLastAttemptAt, other.MonitorLastAttemptAt)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MonitorLastScore, other.MonitorLastScore)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MonitorLastLatency, other.MonitorLastLatency)) return false;
      if (!object.Equals(Health, other.Health)) return false;
      if(!statuses_.Equals(other.statuses_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= modelStatus_.GetHashCode();
      hash ^= conditions_.GetHashCode();
      if (monitorLastAttemptAt_ != null) hash ^= MonitorLastAttemptAt.GetHashCode();
      if (HasMonitorLastScore) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MonitorLastScore);
      if (HasMonitorLastLatency) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MonitorLastLatency);
      if (health_ != null) hash ^= Health.GetHashCode();
      hash ^= statuses_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      modelStatus_.WriteTo(output, _repeated_modelStatus_codec);
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (monitorLastAttemptAt_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MonitorLastAttemptAt);
      }
      if (HasMonitorLastScore) {
        output.WriteRawTag(33);
        output.WriteDouble(MonitorLastScore);
      }
      if (HasMonitorLastLatency) {
        output.WriteRawTag(41);
        output.WriteDouble(MonitorLastLatency);
      }
      if (health_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Health);
      }
      statuses_.WriteTo(output, _repeated_statuses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      modelStatus_.WriteTo(ref output, _repeated_modelStatus_codec);
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (monitorLastAttemptAt_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MonitorLastAttemptAt);
      }
      if (HasMonitorLastScore) {
        output.WriteRawTag(33);
        output.WriteDouble(MonitorLastScore);
      }
      if (HasMonitorLastLatency) {
        output.WriteRawTag(41);
        output.WriteDouble(MonitorLastLatency);
      }
      if (health_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Health);
      }
      statuses_.WriteTo(ref output, _repeated_statuses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += modelStatus_.CalculateSize(_repeated_modelStatus_codec);
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (monitorLastAttemptAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MonitorLastAttemptAt);
      }
      if (HasMonitorLastScore) {
        size += 1 + 8;
      }
      if (HasMonitorLastLatency) {
        size += 1 + 8;
      }
      if (health_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Health);
      }
      size += statuses_.CalculateSize(_repeated_statuses_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PredictorStatus other) {
      if (other == null) {
        return;
      }
      modelStatus_.Add(other.modelStatus_);
      conditions_.Add(other.conditions_);
      if (other.monitorLastAttemptAt_ != null) {
        if (monitorLastAttemptAt_ == null) {
          MonitorLastAttemptAt = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Timestamp();
        }
        MonitorLastAttemptAt.MergeFrom(other.MonitorLastAttemptAt);
      }
      if (other.HasMonitorLastScore) {
        MonitorLastScore = other.MonitorLastScore;
      }
      if (other.HasMonitorLastLatency) {
        MonitorLastLatency = other.MonitorLastLatency;
      }
      if (other.health_ != null) {
        if (health_ == null) {
          Health = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorHealth();
        }
        Health.MergeFrom(other.Health);
      }
      statuses_.Add(other.statuses_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            modelStatus_.AddEntriesFrom(input, _repeated_modelStatus_codec);
            break;
          }
          case 18: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
          case 26: {
            if (monitorLastAttemptAt_ == null) {
              MonitorLastAttemptAt = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Timestamp();
            }
            input.ReadMessage(MonitorLastAttemptAt);
            break;
          }
          case 33: {
            MonitorLastScore = input.ReadDouble();
            break;
          }
          case 41: {
            MonitorLastLatency = input.ReadDouble();
            break;
          }
          case 50: {
            if (health_ == null) {
              Health = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorHealth();
            }
            input.ReadMessage(Health);
            break;
          }
          case 58: {
            statuses_.AddEntriesFrom(input, _repeated_statuses_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            modelStatus_.AddEntriesFrom(ref input, _repeated_modelStatus_codec);
            break;
          }
          case 18: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
          case 26: {
            if (monitorLastAttemptAt_ == null) {
              MonitorLastAttemptAt = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Timestamp();
            }
            input.ReadMessage(MonitorLastAttemptAt);
            break;
          }
          case 33: {
            MonitorLastScore = input.ReadDouble();
            break;
          }
          case 41: {
            MonitorLastLatency = input.ReadDouble();
            break;
          }
          case 50: {
            if (health_ == null) {
              Health = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.PredictorHealth();
            }
            input.ReadMessage(Health);
            break;
          }
          case 58: {
            statuses_.AddEntriesFrom(ref input, _repeated_statuses_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProgressiveSpec : pb::IMessage<ProgressiveSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProgressiveSpec> _parser = new pb::MessageParser<ProgressiveSpec>(() => new ProgressiveSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProgressiveSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProgressiveSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProgressiveSpec(ProgressiveSpec other) : this() {
      _hasBits0 = other._hasBits0;
      warmup_ = other.warmup_;
      trafficIncrement_ = other.trafficIncrement_;
      canaryMetrics_ = other.canaryMetrics_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProgressiveSpec Clone() {
      return new ProgressiveSpec(this);
    }

    /// <summary>Field number for the "warmup" field.</summary>
    public const int WarmupFieldNumber = 1;
    private readonly static int WarmupDefaultValue = 0;

    private int warmup_;
    /// <summary>
    /// How long in seconds does the warm up period started
    /// This is used only during progressive deployment
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:Maximum=100
    /// +kubebuilder:validation:Minimum=0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Warmup {
      get { if ((_hasBits0 & 1) != 0) { return warmup_; } else { return WarmupDefaultValue; } }
      set {
        _hasBits0 |= 1;
        warmup_ = value;
      }
    }
    /// <summary>Gets whether the "warmup" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasWarmup {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "warmup" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearWarmup() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "trafficIncrement" field.</summary>
    public const int TrafficIncrementFieldNumber = 2;
    private readonly static int TrafficIncrementDefaultValue = 0;

    private int trafficIncrement_;
    /// <summary>
    /// How much do we increment the warm up traffic
    /// +kubebuilder:validation:Maximum=10
    /// +kubebuilder:validation:Minimum=1
    /// Default : 10
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TrafficIncrement {
      get { if ((_hasBits0 & 2) != 0) { return trafficIncrement_; } else { return TrafficIncrementDefaultValue; } }
      set {
        _hasBits0 |= 2;
        trafficIncrement_ = value;
      }
    }
    /// <summary>Gets whether the "trafficIncrement" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTrafficIncrement {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "trafficIncrement" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTrafficIncrement() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "canaryMetrics" field.</summary>
    public const int CanaryMetricsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_canaryMetrics_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> canaryMetrics_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// What metric to use when comparing the candidate to the current
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> CanaryMetrics {
      get { return canaryMetrics_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProgressiveSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProgressiveSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Warmup != other.Warmup) return false;
      if (TrafficIncrement != other.TrafficIncrement) return false;
      if(!canaryMetrics_.Equals(other.canaryMetrics_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasWarmup) hash ^= Warmup.GetHashCode();
      if (HasTrafficIncrement) hash ^= TrafficIncrement.GetHashCode();
      hash ^= canaryMetrics_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasWarmup) {
        output.WriteRawTag(8);
        output.WriteInt32(Warmup);
      }
      if (HasTrafficIncrement) {
        output.WriteRawTag(16);
        output.WriteInt32(TrafficIncrement);
      }
      canaryMetrics_.WriteTo(output, _repeated_canaryMetrics_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasWarmup) {
        output.WriteRawTag(8);
        output.WriteInt32(Warmup);
      }
      if (HasTrafficIncrement) {
        output.WriteRawTag(16);
        output.WriteInt32(TrafficIncrement);
      }
      canaryMetrics_.WriteTo(ref output, _repeated_canaryMetrics_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasWarmup) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Warmup);
      }
      if (HasTrafficIncrement) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TrafficIncrement);
      }
      size += canaryMetrics_.CalculateSize(_repeated_canaryMetrics_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProgressiveSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasWarmup) {
        Warmup = other.Warmup;
      }
      if (other.HasTrafficIncrement) {
        TrafficIncrement = other.TrafficIncrement;
      }
      canaryMetrics_.Add(other.canaryMetrics_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Warmup = input.ReadInt32();
            break;
          }
          case 16: {
            TrafficIncrement = input.ReadInt32();
            break;
          }
          case 26: {
            canaryMetrics_.AddEntriesFrom(input, _repeated_canaryMetrics_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Warmup = input.ReadInt32();
            break;
          }
          case 16: {
            TrafficIncrement = input.ReadInt32();
            break;
          }
          case 26: {
            canaryMetrics_.AddEntriesFrom(ref input, _repeated_canaryMetrics_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StreamingChannelSpec : pb::IMessage<StreamingChannelSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamingChannelSpec> _parser = new pb::MessageParser<StreamingChannelSpec>(() => new StreamingChannelSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamingChannelSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingChannelSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingChannelSpec(StreamingChannelSpec other) : this() {
      connectionName_ = other.connectionName_;
      inputKey_ = other.inputKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingChannelSpec Clone() {
      return new StreamingChannelSpec(this);
    }

    /// <summary>Field number for the "connectionName" field.</summary>
    public const int ConnectionNameFieldNumber = 1;
    private readonly static string ConnectionNameDefaultValue = "";

    private string connectionName_;
    /// <summary>
    /// StorageConnection name to the streaming provider
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConnectionName {
      get { return connectionName_ ?? ConnectionNameDefaultValue; }
      set {
        connectionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "connectionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConnectionName {
      get { return connectionName_ != null; }
    }
    /// <summary>Clears the value of the "connectionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConnectionName() {
      connectionName_ = null;
    }

    /// <summary>Field number for the "inputKey" field.</summary>
    public const int InputKeyFieldNumber = 2;
    private readonly static string InputKeyDefaultValue = "";

    private string inputKey_;
    /// <summary>
    /// the streaming topic (input or output)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InputKey {
      get { return inputKey_ ?? InputKeyDefaultValue; }
      set {
        inputKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "inputKey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInputKey {
      get { return inputKey_ != null; }
    }
    /// <summary>Clears the value of the "inputKey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInputKey() {
      inputKey_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamingChannelSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamingChannelSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConnectionName != other.ConnectionName) return false;
      if (InputKey != other.InputKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasConnectionName) hash ^= ConnectionName.GetHashCode();
      if (HasInputKey) hash ^= InputKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasConnectionName) {
        output.WriteRawTag(10);
        output.WriteString(ConnectionName);
      }
      if (HasInputKey) {
        output.WriteRawTag(18);
        output.WriteString(InputKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasConnectionName) {
        output.WriteRawTag(10);
        output.WriteString(ConnectionName);
      }
      if (HasInputKey) {
        output.WriteRawTag(18);
        output.WriteString(InputKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasConnectionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionName);
      }
      if (HasInputKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamingChannelSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasConnectionName) {
        ConnectionName = other.ConnectionName;
      }
      if (other.HasInputKey) {
        InputKey = other.InputKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ConnectionName = input.ReadString();
            break;
          }
          case 18: {
            InputKey = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ConnectionName = input.ReadString();
            break;
          }
          case 18: {
            InputKey = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A prediction table describes a dataset and a table that will be used to enter unseen data, and get prediction
  /// </summary>
  public sealed partial class TableChannelSpec : pb::IMessage<TableChannelSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TableChannelSpec> _parser = new pb::MessageParser<TableChannelSpec>(() => new TableChannelSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TableChannelSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Inference.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableChannelSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableChannelSpec(TableChannelSpec other) : this() {
      _hasBits0 = other._hasBits0;
      connectionName_ = other.connectionName_;
      datasourceName_ = other.datasourceName_;
      tableName_ = other.tableName_;
      scanInterval_ = other.scanInterval_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableChannelSpec Clone() {
      return new TableChannelSpec(this);
    }

    /// <summary>Field number for the "connectionName" field.</summary>
    public const int ConnectionNameFieldNumber = 1;
    private readonly static string ConnectionNameDefaultValue = "";

    private string connectionName_;
    /// <summary>
    /// connection to the database provider
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConnectionName {
      get { return connectionName_ ?? ConnectionNameDefaultValue; }
      set {
        connectionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "connectionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConnectionName {
      get { return connectionName_ != null; }
    }
    /// <summary>Clears the value of the "connectionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConnectionName() {
      connectionName_ = null;
    }

    /// <summary>Field number for the "datasourceName" field.</summary>
    public const int DatasourceNameFieldNumber = 2;
    private readonly static string DatasourceNameDefaultValue = "";

    private string datasourceName_;
    /// <summary>
    /// Options, this is the datasource containing the table schema
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DatasourceName {
      get { return datasourceName_ ?? DatasourceNameDefaultValue; }
      set {
        datasourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "datasourceName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDatasourceName {
      get { return datasourceName_ != null; }
    }
    /// <summary>Clears the value of the "datasourceName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDatasourceName() {
      datasourceName_ = null;
    }

    /// <summary>Field number for the "tableName" field.</summary>
    public const int TableNameFieldNumber = 3;
    private readonly static string TableNameDefaultValue = "";

    private string tableName_;
    /// <summary>
    /// The table name. Optional
    /// Default to the predictor name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_ ?? TableNameDefaultValue; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tableName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTableName {
      get { return tableName_ != null; }
    }
    /// <summary>Clears the value of the "tableName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTableName() {
      tableName_ = null;
    }

    /// <summary>Field number for the "scanInterval" field.</summary>
    public const int ScanIntervalFieldNumber = 4;
    private readonly static int ScanIntervalDefaultValue = 0;

    private int scanInterval_;
    /// <summary>
    /// In seconds, the interval.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ScanInterval {
      get { if ((_hasBits0 & 1) != 0) { return scanInterval_; } else { return ScanIntervalDefaultValue; } }
      set {
        _hasBits0 |= 1;
        scanInterval_ = value;
      }
    }
    /// <summary>Gets whether the "scanInterval" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasScanInterval {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "scanInterval" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearScanInterval() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TableChannelSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TableChannelSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConnectionName != other.ConnectionName) return false;
      if (DatasourceName != other.DatasourceName) return false;
      if (TableName != other.TableName) return false;
      if (ScanInterval != other.ScanInterval) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasConnectionName) hash ^= ConnectionName.GetHashCode();
      if (HasDatasourceName) hash ^= DatasourceName.GetHashCode();
      if (HasTableName) hash ^= TableName.GetHashCode();
      if (HasScanInterval) hash ^= ScanInterval.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasConnectionName) {
        output.WriteRawTag(10);
        output.WriteString(ConnectionName);
      }
      if (HasDatasourceName) {
        output.WriteRawTag(18);
        output.WriteString(DatasourceName);
      }
      if (HasTableName) {
        output.WriteRawTag(26);
        output.WriteString(TableName);
      }
      if (HasScanInterval) {
        output.WriteRawTag(32);
        output.WriteInt32(ScanInterval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasConnectionName) {
        output.WriteRawTag(10);
        output.WriteString(ConnectionName);
      }
      if (HasDatasourceName) {
        output.WriteRawTag(18);
        output.WriteString(DatasourceName);
      }
      if (HasTableName) {
        output.WriteRawTag(26);
        output.WriteString(TableName);
      }
      if (HasScanInterval) {
        output.WriteRawTag(32);
        output.WriteInt32(ScanInterval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasConnectionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionName);
      }
      if (HasDatasourceName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DatasourceName);
      }
      if (HasTableName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (HasScanInterval) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ScanInterval);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TableChannelSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasConnectionName) {
        ConnectionName = other.ConnectionName;
      }
      if (other.HasDatasourceName) {
        DatasourceName = other.DatasourceName;
      }
      if (other.HasTableName) {
        TableName = other.TableName;
      }
      if (other.HasScanInterval) {
        ScanInterval = other.ScanInterval;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ConnectionName = input.ReadString();
            break;
          }
          case 18: {
            DatasourceName = input.ReadString();
            break;
          }
          case 26: {
            TableName = input.ReadString();
            break;
          }
          case 32: {
            ScanInterval = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ConnectionName = input.ReadString();
            break;
          }
          case 18: {
            DatasourceName = input.ReadString();
            break;
          }
          case 26: {
            TableName = input.ReadString();
            break;
          }
          case 32: {
            ScanInterval = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
