// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: github.com/metaprov/modeldapi/pkg/apis/catalog/v1alpha1/generated.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1 {

  /// <summary>Holder for reflection information generated from github.com/metaprov/modeldapi/pkg/apis/catalog/v1alpha1/generated.proto</summary>
  public static partial class GeneratedReflection {

    #region Descriptor
    /// <summary>File descriptor for github.com/metaprov/modeldapi/pkg/apis/catalog/v1alpha1/generated.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GeneratedReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkdnaXRodWIuY29tL21ldGFwcm92L21vZGVsZGFwaS9wa2cvYXBpcy9jYXRh",
            "bG9nL3YxYWxwaGExL2dlbmVyYXRlZC5wcm90bxI3Z2l0aHViLmNvbS5tZXRh",
            "cHJvdi5tb2RlbGRhcGkucGtnLmFwaXMuY2F0YWxvZy52MWFscGhhMRoiazhz",
            "LmlvL2FwaS9jb3JlL3YxL2dlbmVyYXRlZC5wcm90bxoiazhzLmlvL2FwaS9y",
            "YmFjL3YxL2dlbmVyYXRlZC5wcm90bxo0azhzLmlvL2FwaW1hY2hpbmVyeS9w",
            "a2cvYXBpL3Jlc291cmNlL2dlbmVyYXRlZC5wcm90bxo0azhzLmlvL2FwaW1h",
            "Y2hpbmVyeS9wa2cvYXBpcy9tZXRhL3YxL2dlbmVyYXRlZC5wcm90bxovazhz",
            "LmlvL2FwaW1hY2hpbmVyeS9wa2cvcnVudGltZS9nZW5lcmF0ZWQucHJvdG8a",
            "Nms4cy5pby9hcGltYWNoaW5lcnkvcGtnL3J1bnRpbWUvc2NoZW1hL2dlbmVy",
            "YXRlZC5wcm90byKlAQoJQWxnb3JpdGhtEkIKCG1ldGFkYXRhGAEgASgLMjAu",
            "azhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLk9iamVjdE1l",
            "dGESVAoEc3BlYxgCIAEoCzJGLmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxk",
            "YXBpLnBrZy5hcGlzLmNhdGFsb2cudjFhbHBoYTEuQWxnb3JpdGhtU3BlYyKk",
            "AQoNQWxnb3JpdGhtTGlzdBJACghtZXRhZGF0YRgBIAEoCzIuLms4cy5pby5h",
            "cGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5MaXN0TWV0YRJRCgVpdGVt",
            "cxgCIAMoCzJCLmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5h",
            "cGlzLmNhdGFsb2cudjFhbHBoYTEuQWxnb3JpdGhtIpgDCg1BbGdvcml0aG1T",
            "cGVjEhUKDWZyYW1ld29ya05hbWUYASABKAkSEwoLZGVzY3JpcHRpb24YAiAB",
            "KAkSCwoDdXJsGAMgASgJEgwKBHRhc2sYBCABKAkSDgoGc3BhcnNlGAUgASgI",
            "EmAKEWludGVnZXJQYXJhbWV0ZXJzGAYgAygLMkUuZ2l0aHViLmNvbS5tZXRh",
            "cHJvdi5tb2RlbGRhcGkucGtnLmFwaXMuY2F0YWxvZy52MWFscGhhMS5JbnRQ",
            "YXJhbWV0ZXISYAoPZmxvYXRQYXJhbWV0ZXJzGAcgAygLMkcuZ2l0aHViLmNv",
            "bS5tZXRhcHJvdi5tb2RlbGRhcGkucGtnLmFwaXMuY2F0YWxvZy52MWFscGhh",
            "MS5GbG9hdFBhcmFtZXRlchJsChVjYXRlZ29yaWNhbFBhcmFtZXRlcnMYCCAD",
            "KAsyTS5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5j",
            "YXRhbG9nLnYxYWxwaGExLkNhdGVnb3JpY2FsUGFyYW1ldGVyIkkKFENhdGVn",
            "b3JpY2FsUGFyYW1ldGVyEgwKBG5hbWUYASABKAkSFAoMZGVmYXVsdFZhbHVl",
            "GAIgASgJEg0KBWVudW1zGAMgAygJIvMBCgVDbG91ZBJCCghtZXRhZGF0YRgB",
            "IAEoCzIwLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5P",
            "YmplY3RNZXRhElAKBHNwZWMYAiABKAsyQi5naXRodWIuY29tLm1ldGFwcm92",
            "Lm1vZGVsZGFwaS5wa2cuYXBpcy5jYXRhbG9nLnYxYWxwaGExLkNsb3VkU3Bl",
            "YxJUCgZzdGF0dXMYAyABKAsyRC5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVs",
            "ZGFwaS5wa2cuYXBpcy5jYXRhbG9nLnYxYWxwaGExLkNsb3VkU3RhdHVzIpwB",
            "CglDbG91ZExpc3QSQAoIbWV0YWRhdGEYASABKAsyLi5rOHMuaW8uYXBpbWFj",
            "aGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuTGlzdE1ldGESTQoFaXRlbXMYAiAD",
            "KAsyPi5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5j",
            "YXRhbG9nLnYxYWxwaGExLkNsb3VkIuwCCglDbG91ZFNwZWMSGQoRZGVmYXVs",
            "dFJlZ2lvbk5hbWUYASABKAkSHwoXZGVmYXVsdE1hY2hpbmVDbGFzc05hbWUY",
            "AiABKAkSGwoTZGVmYXVsdEdwdUNsYXNzTmFtZRgDIAEoCRJdCg5tYWNoaW5l",
            "Q2xhc3NlcxgEIAMoCzJFLmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBp",
            "LnBrZy5hcGlzLmNhdGFsb2cudjFhbHBoYTEuTWFjaGluZUNsYXNzElUKCmdw",
            "dUNsYXNzZXMYBSADKAsyQS5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFw",
            "aS5wa2cuYXBpcy5jYXRhbG9nLnYxYWxwaGExLkdwdUNsYXNzElAKB3JlZ2lv",
            "bnMYBiADKAsyPy5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cu",
            "YXBpcy5jYXRhbG9nLnYxYWxwaGExLlJlZ2lvbiLHAQoLQ2xvdWRTdGF0dXMS",
            "XwoMbWFjaGluZUNvc3RzGAEgAygLMkkuZ2l0aHViLmNvbS5tZXRhcHJvdi5t",
            "b2RlbGRhcGkucGtnLmFwaXMuY2F0YWxvZy52MWFscGhhMS5NYWNoaW5lQ2xh",
            "c3NDb3N0ElcKCGdwdUNvc3RzGAIgAygLMkUuZ2l0aHViLmNvbS5tZXRhcHJv",
            "di5tb2RlbGRhcGkucGtnLmFwaXMuY2F0YWxvZy52MWFscGhhMS5HcHVDbGFz",
            "c0Nvc3QiKAoKRGF0YUNlbnRlchIMCgRuYW1lGAEgASgJEgwKBGNvZGUYAiAB",
            "KAkiWwoORmxvYXRQYXJhbWV0ZXISDAoEbmFtZRgBIAEoCRILCgNtaW4YAyAB",
            "KAESCwoDbWF4GAQgASgBEhQKDGRlZmF1bHRWYWx1ZRgFIAEoARILCgNsb2cY",
            "BiABKAgiegoIR3B1Q2xhc3MSDAoEY29kZRgBIAEoCRISCgpyZWdpb25OYW1l",
            "GAIgASgJEgwKBHZjcHUYAyABKAUSPgoGZ3B1bWVtGAQgASgLMi4uazhzLmlv",
            "LmFwaW1hY2hpbmVyeS5wa2cuYXBpLnJlc291cmNlLlF1YW50aXR5IrUBCgxH",
            "cHVDbGFzc0Nvc3QSDAoEY29kZRgBIAEoCRIOCgZyZWdpb24YAiABKAkSRQoN",
            "Y29zdFBlck1pbnV0ZRgDIAEoCzIuLms4cy5pby5hcGltYWNoaW5lcnkucGtn",
            "LmFwaS5yZXNvdXJjZS5RdWFudGl0eRJACghjb3N0U3BvdBgEIAEoCzIuLms4",
            "cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaS5yZXNvdXJjZS5RdWFudGl0eSJa",
            "CgxJbnRQYXJhbWV0ZXISDAoEbmFtZRgBIAEoCRIMCgR0eXBlGAIgASgJEgsK",
            "A21pbhgDIAEoBRILCgNtYXgYBCABKAUSFAoMZGVmYXVsdFZhbHVlGAYgASgF",
            "IqkBCgtNTEZyYW1ld29yaxJCCghtZXRhZGF0YRgBIAEoCzIwLms4cy5pby5h",
            "cGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5PYmplY3RNZXRhElYKBHNw",
            "ZWMYAiABKAsySC5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cu",
            "YXBpcy5jYXRhbG9nLnYxYWxwaGExLk1MRnJhbWV3b3JrU3BlYyKoAQoPTUxG",
            "cmFtZXdvcmtMaXN0EkAKCG1ldGFkYXRhGAEgASgLMi4uazhzLmlvLmFwaW1h",
            "Y2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLkxpc3RNZXRhElMKBWl0ZW1zGAIg",
            "AygLMkQuZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkucGtnLmFwaXMu",
            "Y2F0YWxvZy52MWFscGhhMS5NTEZyYW1ld29yayJSCg9NTEZyYW1ld29ya1Nw",
            "ZWMSCwoDdXJsGAEgASgJEhMKC2Rlc2NyaXB0aW9uGAIgASgJEg8KB3ZlcnNp",
            "b24YAyABKAkSDAoEbGFuZxgEIAEoCSKMAQoMTWFjaGluZUNsYXNzEgwKBGNv",
            "ZGUYASABKAkSEgoKcmVnaW9uTmFtZRgCIAEoCRI7CgNtZW0YAyABKAsyLi5r",
            "OHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGkucmVzb3VyY2UuUXVhbnRpdHkS",
            "DAoEdmNwdRgEIAEoBRIPCgdzdG9yYWdlGAUgASgJIrkBChBNYWNoaW5lQ2xh",
            "c3NDb3N0EgwKBGNvZGUYASABKAkSDgoGcmVnaW9uGAIgASgJEkUKDWNvc3RQ",
            "ZXJNaW51dGUYAyABKAsyLi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGku",
            "cmVzb3VyY2UuUXVhbnRpdHkSQAoIY29zdFNwb3QYBCABKAsyLi5rOHMuaW8u",
            "YXBpbWFjaGluZXJ5LnBrZy5hcGkucmVzb3VyY2UuUXVhbnRpdHkisQEKD1By",
            "ZXRyYWluZWRNb2RlbBJCCghtZXRhZGF0YRgBIAEoCzIwLms4cy5pby5hcGlt",
            "YWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5PYmplY3RNZXRhEloKBHNwZWMY",
            "AiABKAsyTC5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBp",
            "cy5jYXRhbG9nLnYxYWxwaGExLlByZXRyYWluZWRNb2RlbFNwZWMisAEKE1By",
            "ZXRyYWluZWRNb2RlbExpc3QSQAoIbWV0YWRhdGEYASABKAsyLi5rOHMuaW8u",
            "YXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuTGlzdE1ldGESVwoFaXRl",
            "bXMYAiADKAsySC5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cu",
            "YXBpcy5jYXRhbG9nLnYxYWxwaGExLlByZXRyYWluZWRNb2RlbCIkChNQcmV0",
            "cmFpbmVkTW9kZWxTcGVjEg0KBWltYWdlGAEgASgJIq0BCg1QdWJsaWNEYXRh",
            "c2V0EkIKCG1ldGFkYXRhGAEgASgLMjAuazhzLmlvLmFwaW1hY2hpbmVyeS5w",
            "a2cuYXBpcy5tZXRhLnYxLk9iamVjdE1ldGESWAoEc3BlYxgCIAEoCzJKLmdp",
            "dGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmNhdGFsb2cu",
            "djFhbHBoYTEuUHVibGljRGF0YXNldFNwZWMirAEKEVB1YmxpY0RhdGFzZXRM",
            "aXN0EkAKCG1ldGFkYXRhGAEgASgLMi4uazhzLmlvLmFwaW1hY2hpbmVyeS5w",
            "a2cuYXBpcy5tZXRhLnYxLkxpc3RNZXRhElUKBWl0ZW1zGAIgAygLMkYuZ2l0",
            "aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkucGtnLmFwaXMuY2F0YWxvZy52",
            "MWFscGhhMS5QdWJsaWNEYXRhc2V0ImMKEVB1YmxpY0RhdGFzZXRTcGVjEg0K",
            "BWltYWdlGAEgASgJEgwKBHRhc2sYAiABKAkSCgoCaWQYAyABKAkSFAoMZXh0",
            "ZXJuYWxOYW1lGAQgASgJEg8KB2RhdGFVcmwYBSABKAkitgEKBlJlZ2lvbhIM",
            "CgRjb2RlGAEgASgJEh0KFWRlZmF1bHREYXRhY2VudGVyTmFtZRgCIAEoCRIQ",
            "Cghsb2NhdGlvbhgDIAEoCRITCgtiaWxsaW5nQ29kZRgEIAEoCRJYCgtkYXRh",
            "Y2VudGVycxgFIAMoCzJDLmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBp",
            "LnBrZy5hcGlzLmNhdGFsb2cudjFhbHBoYTEuRGF0YUNlbnRlciKtAQoNVXNl",
            "clJvbGVDbGFzcxJCCghtZXRhZGF0YRgBIAEoCzIwLms4cy5pby5hcGltYWNo",
            "aW5lcnkucGtnLmFwaXMubWV0YS52MS5PYmplY3RNZXRhElgKBHNwZWMYAiAB",
            "KAsySi5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5j",
            "YXRhbG9nLnYxYWxwaGExLlVzZXJSb2xlQ2xhc3NTcGVjIqwBChFVc2VyUm9s",
            "ZUNsYXNzTGlzdBJACghtZXRhZGF0YRgBIAEoCzIuLms4cy5pby5hcGltYWNo",
            "aW5lcnkucGtnLmFwaXMubWV0YS52MS5MaXN0TWV0YRJVCgVpdGVtcxgCIAMo",
            "CzJGLmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmNh",
            "dGFsb2cudjFhbHBoYTEuVXNlclJvbGVDbGFzcyJCChFVc2VyUm9sZUNsYXNz",
            "U3BlYxItCgVydWxlcxgBIAMoCzIeLms4cy5pby5hcGkucmJhYy52MS5Qb2xp",
            "Y3lSdWxlIiMKBlZpelVyaRIMCgRuYW1lGAEgASgJEgsKA3VyaRgCIAEoCSKt",
            "AQoNV29ya2xvYWRDbGFzcxJCCghtZXRhZGF0YRgBIAEoCzIwLms4cy5pby5h",
            "cGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5PYmplY3RNZXRhElgKBHNw",
            "ZWMYAiABKAsySi5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cu",
            "YXBpcy5jYXRhbG9nLnYxYWxwaGExLldvcmtsb2FkQ2xhc3NTcGVjIqwBChFX",
            "b3JrbG9hZENsYXNzTGlzdBJACghtZXRhZGF0YRgBIAEoCzIuLms4cy5pby5h",
            "cGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5MaXN0TWV0YRJVCgVpdGVt",
            "cxgCIAMoCzJGLmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5h",
            "cGlzLmNhdGFsb2cudjFhbHBoYTEuV29ya2xvYWRDbGFzcyLJAQoRV29ya2xv",
            "YWRDbGFzc1NwZWMSDQoFaW1hZ2UYASABKAkSDQoFdGFza3MYAiADKAkSXAoK",
            "ZnJhbWV3b3JrcxgDIAEoCzJILmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxk",
            "YXBpLnBrZy5hcGlzLmNhdGFsb2cudjFhbHBoYTEuTUxGcmFtZXdvcmtMaXN0",
            "EjgKC3BvZFRlbXBsYXRlGAQgASgLMiMuazhzLmlvLmFwaS5jb3JlLnYxLlBv",
            "ZFRlbXBsYXRlU3BlY0IKWgh2MWFscGhhMQ=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::K8S.Io.Api.Core.V1.GeneratedReflection.Descriptor, global::K8S.Io.Api.Rbac.V1.GeneratedReflection.Descriptor, global::K8S.Io.Apimachinery.Pkg.Api.Resource.GeneratedReflection.Descriptor, global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.GeneratedReflection.Descriptor, global::K8S.Io.Apimachinery.Pkg.Runtime.GeneratedReflection.Descriptor, global::K8S.Io.Apimachinery.Pkg.Runtime.Schema.GeneratedReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.Algorithm), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.Algorithm.Parser, new[]{ "Metadata", "Spec" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.AlgorithmList), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.AlgorithmList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.AlgorithmSpec), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.AlgorithmSpec.Parser, new[]{ "FrameworkName", "Description", "Url", "Task", "Sparse", "IntegerParameters", "FloatParameters", "CategoricalParameters" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.CategoricalParameter), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.CategoricalParameter.Parser, new[]{ "Name", "DefaultValue", "Enums" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.Cloud), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.Cloud.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.CloudList), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.CloudList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.CloudSpec), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.CloudSpec.Parser, new[]{ "DefaultRegionName", "DefaultMachineClassName", "DefaultGpuClassName", "MachineClasses", "GpuClasses", "Regions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.CloudStatus), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.CloudStatus.Parser, new[]{ "MachineCosts", "GpuCosts" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.DataCenter), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.DataCenter.Parser, new[]{ "Name", "Code" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.FloatParameter), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.FloatParameter.Parser, new[]{ "Name", "Min", "Max", "DefaultValue", "Log" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GpuClass), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GpuClass.Parser, new[]{ "Code", "RegionName", "Vcpu", "Gpumem" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GpuClassCost), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GpuClassCost.Parser, new[]{ "Code", "Region", "CostPerMinute", "CostSpot" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.IntParameter), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.IntParameter.Parser, new[]{ "Name", "Type", "Min", "Max", "DefaultValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MLFramework), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MLFramework.Parser, new[]{ "Metadata", "Spec" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MLFrameworkList), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MLFrameworkList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MLFrameworkSpec), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MLFrameworkSpec.Parser, new[]{ "Url", "Description", "Version", "Lang" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MachineClass), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MachineClass.Parser, new[]{ "Code", "RegionName", "Mem", "Vcpu", "Storage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MachineClassCost), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MachineClassCost.Parser, new[]{ "Code", "Region", "CostPerMinute", "CostSpot" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PretrainedModel), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PretrainedModel.Parser, new[]{ "Metadata", "Spec" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PretrainedModelList), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PretrainedModelList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PretrainedModelSpec), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PretrainedModelSpec.Parser, new[]{ "Image" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PublicDataset), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PublicDataset.Parser, new[]{ "Metadata", "Spec" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PublicDatasetList), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PublicDatasetList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PublicDatasetSpec), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PublicDatasetSpec.Parser, new[]{ "Image", "Task", "Id", "ExternalName", "DataUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.Region), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.Region.Parser, new[]{ "Code", "DefaultDatacenterName", "Location", "BillingCode", "Datacenters" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.UserRoleClass), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.UserRoleClass.Parser, new[]{ "Metadata", "Spec" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.UserRoleClassList), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.UserRoleClassList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.UserRoleClassSpec), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.UserRoleClassSpec.Parser, new[]{ "Rules" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.VizUri), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.VizUri.Parser, new[]{ "Name", "Uri" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.WorkloadClass), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.WorkloadClass.Parser, new[]{ "Metadata", "Spec" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.WorkloadClassList), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.WorkloadClassList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.WorkloadClassSpec), global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.WorkloadClassSpec.Parser, new[]{ "Image", "Tasks", "Frameworks", "PodTemplate" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Algorithm define the metadata about a machine learning algorithm.
  /// +kubebuilder:object:root=true
  /// +kubebuilder:resource:scope=Namespaced
  /// +kubebuilder:resource:path=algorithms,singular=algorithm,categories={catalog,modeld,all}
  /// +kubebuilder:printcolumn:name="Framework",type="string",JSONPath=".spec.frameworkName",description="ML Framework name"
  /// +kubebuilder:printcolumn:name="Repository",type="string",JSONPath=".spec.url",description=""
  /// +kubebuilder:printcolumn:name="Task",type="string",JSONPath=".spec.task",description="ML task name"
  /// +kubebuilder:printcolumn:name="Age",type=date,JSONPath=`.metadata.creationTimestamp`
  /// </summary>
  public sealed partial class Algorithm : pb::IMessage<Algorithm>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Algorithm> _parser = new pb::MessageParser<Algorithm>(() => new Algorithm());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Algorithm> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Algorithm() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Algorithm(Algorithm other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Algorithm Clone() {
      return new Algorithm(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.AlgorithmSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.AlgorithmSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Algorithm);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Algorithm other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Algorithm other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.AlgorithmSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.AlgorithmSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.AlgorithmSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// AlgorithmList contains a list of Algorithm
  /// </summary>
  public sealed partial class AlgorithmList : pb::IMessage<AlgorithmList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AlgorithmList> _parser = new pb::MessageParser<AlgorithmList>(() => new AlgorithmList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AlgorithmList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlgorithmList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlgorithmList(AlgorithmList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlgorithmList Clone() {
      return new AlgorithmList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.Algorithm> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.Algorithm.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.Algorithm> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.Algorithm>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.Algorithm> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AlgorithmList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AlgorithmList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AlgorithmList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// AlgorithmSpec describes the attributes of an machine learning algorithm
  /// </summary>
  public sealed partial class AlgorithmSpec : pb::IMessage<AlgorithmSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AlgorithmSpec> _parser = new pb::MessageParser<AlgorithmSpec>(() => new AlgorithmSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AlgorithmSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlgorithmSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlgorithmSpec(AlgorithmSpec other) : this() {
      _hasBits0 = other._hasBits0;
      frameworkName_ = other.frameworkName_;
      description_ = other.description_;
      url_ = other.url_;
      task_ = other.task_;
      sparse_ = other.sparse_;
      integerParameters_ = other.integerParameters_.Clone();
      floatParameters_ = other.floatParameters_.Clone();
      categoricalParameters_ = other.categoricalParameters_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlgorithmSpec Clone() {
      return new AlgorithmSpec(this);
    }

    /// <summary>Field number for the "frameworkName" field.</summary>
    public const int FrameworkNameFieldNumber = 1;
    private readonly static string FrameworkNameDefaultValue = "";

    private string frameworkName_;
    /// <summary>
    /// FrameworkName is a reference to library
    /// +kubebuilder:validation:Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FrameworkName {
      get { return frameworkName_ ?? FrameworkNameDefaultValue; }
      set {
        frameworkName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "frameworkName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFrameworkName {
      get { return frameworkName_ != null; }
    }
    /// <summary>Clears the value of the "frameworkName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFrameworkName() {
      frameworkName_ = null;
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// Description is the description of the algorithm
    /// +kubebuilder:default:=""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 3;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    /// <summary>
    /// URL is a url to the html page describing the algorithm
    /// +kubebuilder:default:=""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "task" field.</summary>
    public const int TaskFieldNumber = 4;
    private readonly static string TaskDefaultValue = "";

    private string task_;
    /// <summary>
    /// Task is the machine learning task (binary classification / regression)
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Task {
      get { return task_ ?? TaskDefaultValue; }
      set {
        task_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "task" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTask {
      get { return task_ != null; }
    }
    /// <summary>Clears the value of the "task" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTask() {
      task_ = null;
    }

    /// <summary>Field number for the "sparse" field.</summary>
    public const int SparseFieldNumber = 5;
    private readonly static bool SparseDefaultValue = false;

    private bool sparse_;
    /// <summary>
    /// Sparse indicate if this algorithm can deal with sparse data
    /// +kubebuilder:default:=false
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Sparse {
      get { if ((_hasBits0 & 1) != 0) { return sparse_; } else { return SparseDefaultValue; } }
      set {
        _hasBits0 |= 1;
        sparse_ = value;
      }
    }
    /// <summary>Gets whether the "sparse" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSparse {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "sparse" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSparse() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "integerParameters" field.</summary>
    public const int IntegerParametersFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.IntParameter> _repeated_integerParameters_codec
        = pb::FieldCodec.ForMessage(50, global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.IntParameter.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.IntParameter> integerParameters_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.IntParameter>();
    /// <summary>
    /// IntegerParameters is the list of integer hyper parameter ranges.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.IntParameter> IntegerParameters {
      get { return integerParameters_; }
    }

    /// <summary>Field number for the "floatParameters" field.</summary>
    public const int FloatParametersFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.FloatParameter> _repeated_floatParameters_codec
        = pb::FieldCodec.ForMessage(58, global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.FloatParameter.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.FloatParameter> floatParameters_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.FloatParameter>();
    /// <summary>
    /// FloatParameters is the list of float hyper parameters ranges
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.FloatParameter> FloatParameters {
      get { return floatParameters_; }
    }

    /// <summary>Field number for the "categoricalParameters" field.</summary>
    public const int CategoricalParametersFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.CategoricalParameter> _repeated_categoricalParameters_codec
        = pb::FieldCodec.ForMessage(66, global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.CategoricalParameter.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.CategoricalParameter> categoricalParameters_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.CategoricalParameter>();
    /// <summary>
    /// CategoricalParameters is the list of categorical hyper parameters ranges
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.CategoricalParameter> CategoricalParameters {
      get { return categoricalParameters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AlgorithmSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AlgorithmSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FrameworkName != other.FrameworkName) return false;
      if (Description != other.Description) return false;
      if (Url != other.Url) return false;
      if (Task != other.Task) return false;
      if (Sparse != other.Sparse) return false;
      if(!integerParameters_.Equals(other.integerParameters_)) return false;
      if(!floatParameters_.Equals(other.floatParameters_)) return false;
      if(!categoricalParameters_.Equals(other.categoricalParameters_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFrameworkName) hash ^= FrameworkName.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasTask) hash ^= Task.GetHashCode();
      if (HasSparse) hash ^= Sparse.GetHashCode();
      hash ^= integerParameters_.GetHashCode();
      hash ^= floatParameters_.GetHashCode();
      hash ^= categoricalParameters_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFrameworkName) {
        output.WriteRawTag(10);
        output.WriteString(FrameworkName);
      }
      if (HasDescription) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (HasUrl) {
        output.WriteRawTag(26);
        output.WriteString(Url);
      }
      if (HasTask) {
        output.WriteRawTag(34);
        output.WriteString(Task);
      }
      if (HasSparse) {
        output.WriteRawTag(40);
        output.WriteBool(Sparse);
      }
      integerParameters_.WriteTo(output, _repeated_integerParameters_codec);
      floatParameters_.WriteTo(output, _repeated_floatParameters_codec);
      categoricalParameters_.WriteTo(output, _repeated_categoricalParameters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFrameworkName) {
        output.WriteRawTag(10);
        output.WriteString(FrameworkName);
      }
      if (HasDescription) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (HasUrl) {
        output.WriteRawTag(26);
        output.WriteString(Url);
      }
      if (HasTask) {
        output.WriteRawTag(34);
        output.WriteString(Task);
      }
      if (HasSparse) {
        output.WriteRawTag(40);
        output.WriteBool(Sparse);
      }
      integerParameters_.WriteTo(ref output, _repeated_integerParameters_codec);
      floatParameters_.WriteTo(ref output, _repeated_floatParameters_codec);
      categoricalParameters_.WriteTo(ref output, _repeated_categoricalParameters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasFrameworkName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FrameworkName);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasTask) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Task);
      }
      if (HasSparse) {
        size += 1 + 1;
      }
      size += integerParameters_.CalculateSize(_repeated_integerParameters_codec);
      size += floatParameters_.CalculateSize(_repeated_floatParameters_codec);
      size += categoricalParameters_.CalculateSize(_repeated_categoricalParameters_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AlgorithmSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasFrameworkName) {
        FrameworkName = other.FrameworkName;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasTask) {
        Task = other.Task;
      }
      if (other.HasSparse) {
        Sparse = other.Sparse;
      }
      integerParameters_.Add(other.integerParameters_);
      floatParameters_.Add(other.floatParameters_);
      categoricalParameters_.Add(other.categoricalParameters_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FrameworkName = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            Url = input.ReadString();
            break;
          }
          case 34: {
            Task = input.ReadString();
            break;
          }
          case 40: {
            Sparse = input.ReadBool();
            break;
          }
          case 50: {
            integerParameters_.AddEntriesFrom(input, _repeated_integerParameters_codec);
            break;
          }
          case 58: {
            floatParameters_.AddEntriesFrom(input, _repeated_floatParameters_codec);
            break;
          }
          case 66: {
            categoricalParameters_.AddEntriesFrom(input, _repeated_categoricalParameters_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            FrameworkName = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            Url = input.ReadString();
            break;
          }
          case 34: {
            Task = input.ReadString();
            break;
          }
          case 40: {
            Sparse = input.ReadBool();
            break;
          }
          case 50: {
            integerParameters_.AddEntriesFrom(ref input, _repeated_integerParameters_codec);
            break;
          }
          case 58: {
            floatParameters_.AddEntriesFrom(ref input, _repeated_floatParameters_codec);
            break;
          }
          case 66: {
            categoricalParameters_.AddEntriesFrom(ref input, _repeated_categoricalParameters_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CategoricalParameter contain the specification of an categorical hyper parameter
  /// </summary>
  public sealed partial class CategoricalParameter : pb::IMessage<CategoricalParameter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CategoricalParameter> _parser = new pb::MessageParser<CategoricalParameter>(() => new CategoricalParameter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CategoricalParameter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoricalParameter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoricalParameter(CategoricalParameter other) : this() {
      name_ = other.name_;
      defaultValue_ = other.defaultValue_;
      enums_ = other.enums_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoricalParameter Clone() {
      return new CategoricalParameter(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    /// Name is the name of the hyper parameter
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "defaultValue" field.</summary>
    public const int DefaultValueFieldNumber = 2;
    private readonly static string DefaultValueDefaultValue = "";

    private string defaultValue_;
    /// <summary>
    /// DefaultValue if the default categorical value
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefaultValue {
      get { return defaultValue_ ?? DefaultValueDefaultValue; }
      set {
        defaultValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "defaultValue" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDefaultValue {
      get { return defaultValue_ != null; }
    }
    /// <summary>Clears the value of the "defaultValue" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDefaultValue() {
      defaultValue_ = null;
    }

    /// <summary>Field number for the "enums" field.</summary>
    public const int EnumsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_enums_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> enums_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Enums defines the list of values
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Enums {
      get { return enums_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CategoricalParameter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CategoricalParameter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (DefaultValue != other.DefaultValue) return false;
      if(!enums_.Equals(other.enums_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasDefaultValue) hash ^= DefaultValue.GetHashCode();
      hash ^= enums_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasDefaultValue) {
        output.WriteRawTag(18);
        output.WriteString(DefaultValue);
      }
      enums_.WriteTo(output, _repeated_enums_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasDefaultValue) {
        output.WriteRawTag(18);
        output.WriteString(DefaultValue);
      }
      enums_.WriteTo(ref output, _repeated_enums_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasDefaultValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultValue);
      }
      size += enums_.CalculateSize(_repeated_enums_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CategoricalParameter other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasDefaultValue) {
        DefaultValue = other.DefaultValue;
      }
      enums_.Add(other.enums_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DefaultValue = input.ReadString();
            break;
          }
          case 26: {
            enums_.AddEntriesFrom(input, _repeated_enums_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DefaultValue = input.ReadString();
            break;
          }
          case 26: {
            enums_.AddEntriesFrom(ref input, _repeated_enums_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Cloud represent a cloud provider metadata. A cloud contains regions,datacenter,machine classes
  /// +kubebuilder:object:root=true
  /// +kubebuilder:resource:path=clouds,singular=cloud,categories={catalog,modeld,all}
  /// </summary>
  public sealed partial class Cloud : pb::IMessage<Cloud>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Cloud> _parser = new pb::MessageParser<Cloud>(() => new Cloud());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Cloud> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cloud() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cloud(Cloud other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cloud Clone() {
      return new Cloud(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.CloudSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.CloudSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.CloudStatus status_;
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.CloudStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Cloud);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Cloud other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Cloud other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.CloudSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.CloudStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.CloudSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.CloudStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.CloudSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.CloudStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// CloudList contains a list of Cloud
  /// </summary>
  public sealed partial class CloudList : pb::IMessage<CloudList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CloudList> _parser = new pb::MessageParser<CloudList>(() => new CloudList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CloudList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudList(CloudList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudList Clone() {
      return new CloudList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.Cloud> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.Cloud.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.Cloud> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.Cloud>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.Cloud> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CloudList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CloudList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CloudList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CloudSpec define the attribute of a single cloud provider (E.g. AWS)
  /// </summary>
  public sealed partial class CloudSpec : pb::IMessage<CloudSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CloudSpec> _parser = new pb::MessageParser<CloudSpec>(() => new CloudSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CloudSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudSpec(CloudSpec other) : this() {
      defaultRegionName_ = other.defaultRegionName_;
      defaultMachineClassName_ = other.defaultMachineClassName_;
      defaultGpuClassName_ = other.defaultGpuClassName_;
      machineClasses_ = other.machineClasses_.Clone();
      gpuClasses_ = other.gpuClasses_.Clone();
      regions_ = other.regions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudSpec Clone() {
      return new CloudSpec(this);
    }

    /// <summary>Field number for the "defaultRegionName" field.</summary>
    public const int DefaultRegionNameFieldNumber = 1;
    private readonly static string DefaultRegionNameDefaultValue = "";

    private string defaultRegionName_;
    /// <summary>
    /// DefaultRegionName is the default region.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefaultRegionName {
      get { return defaultRegionName_ ?? DefaultRegionNameDefaultValue; }
      set {
        defaultRegionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "defaultRegionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDefaultRegionName {
      get { return defaultRegionName_ != null; }
    }
    /// <summary>Clears the value of the "defaultRegionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDefaultRegionName() {
      defaultRegionName_ = null;
    }

    /// <summary>Field number for the "defaultMachineClassName" field.</summary>
    public const int DefaultMachineClassNameFieldNumber = 2;
    private readonly static string DefaultMachineClassNameDefaultValue = "";

    private string defaultMachineClassName_;
    /// <summary>
    /// DefaultMachineClassName is the default machine class. Used when allocating new machine on this provider
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefaultMachineClassName {
      get { return defaultMachineClassName_ ?? DefaultMachineClassNameDefaultValue; }
      set {
        defaultMachineClassName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "defaultMachineClassName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDefaultMachineClassName {
      get { return defaultMachineClassName_ != null; }
    }
    /// <summary>Clears the value of the "defaultMachineClassName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDefaultMachineClassName() {
      defaultMachineClassName_ = null;
    }

    /// <summary>Field number for the "defaultGpuClassName" field.</summary>
    public const int DefaultGpuClassNameFieldNumber = 3;
    private readonly static string DefaultGpuClassNameDefaultValue = "";

    private string defaultGpuClassName_;
    /// <summary>
    /// DefaultGpuClassName is the default gpu class. Used when allocating new gpu on this provider
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefaultGpuClassName {
      get { return defaultGpuClassName_ ?? DefaultGpuClassNameDefaultValue; }
      set {
        defaultGpuClassName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "defaultGpuClassName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDefaultGpuClassName {
      get { return defaultGpuClassName_ != null; }
    }
    /// <summary>Clears the value of the "defaultGpuClassName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDefaultGpuClassName() {
      defaultGpuClassName_ = null;
    }

    /// <summary>Field number for the "machineClasses" field.</summary>
    public const int MachineClassesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MachineClass> _repeated_machineClasses_codec
        = pb::FieldCodec.ForMessage(34, global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MachineClass.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MachineClass> machineClasses_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MachineClass>();
    /// <summary>
    /// MachineClasses defines the types of machines in this provider
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MachineClass> MachineClasses {
      get { return machineClasses_; }
    }

    /// <summary>Field number for the "gpuClasses" field.</summary>
    public const int GpuClassesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GpuClass> _repeated_gpuClasses_codec
        = pb::FieldCodec.ForMessage(42, global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GpuClass.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GpuClass> gpuClasses_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GpuClass>();
    /// <summary>
    /// GPUClasses define the type of GPUs offered by this provider
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GpuClass> GpuClasses {
      get { return gpuClasses_; }
    }

    /// <summary>Field number for the "regions" field.</summary>
    public const int RegionsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.Region> _repeated_regions_codec
        = pb::FieldCodec.ForMessage(50, global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.Region.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.Region> regions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.Region>();
    /// <summary>
    /// Regions define the type of regions offered by this provider
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.Region> Regions {
      get { return regions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CloudSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CloudSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DefaultRegionName != other.DefaultRegionName) return false;
      if (DefaultMachineClassName != other.DefaultMachineClassName) return false;
      if (DefaultGpuClassName != other.DefaultGpuClassName) return false;
      if(!machineClasses_.Equals(other.machineClasses_)) return false;
      if(!gpuClasses_.Equals(other.gpuClasses_)) return false;
      if(!regions_.Equals(other.regions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDefaultRegionName) hash ^= DefaultRegionName.GetHashCode();
      if (HasDefaultMachineClassName) hash ^= DefaultMachineClassName.GetHashCode();
      if (HasDefaultGpuClassName) hash ^= DefaultGpuClassName.GetHashCode();
      hash ^= machineClasses_.GetHashCode();
      hash ^= gpuClasses_.GetHashCode();
      hash ^= regions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDefaultRegionName) {
        output.WriteRawTag(10);
        output.WriteString(DefaultRegionName);
      }
      if (HasDefaultMachineClassName) {
        output.WriteRawTag(18);
        output.WriteString(DefaultMachineClassName);
      }
      if (HasDefaultGpuClassName) {
        output.WriteRawTag(26);
        output.WriteString(DefaultGpuClassName);
      }
      machineClasses_.WriteTo(output, _repeated_machineClasses_codec);
      gpuClasses_.WriteTo(output, _repeated_gpuClasses_codec);
      regions_.WriteTo(output, _repeated_regions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDefaultRegionName) {
        output.WriteRawTag(10);
        output.WriteString(DefaultRegionName);
      }
      if (HasDefaultMachineClassName) {
        output.WriteRawTag(18);
        output.WriteString(DefaultMachineClassName);
      }
      if (HasDefaultGpuClassName) {
        output.WriteRawTag(26);
        output.WriteString(DefaultGpuClassName);
      }
      machineClasses_.WriteTo(ref output, _repeated_machineClasses_codec);
      gpuClasses_.WriteTo(ref output, _repeated_gpuClasses_codec);
      regions_.WriteTo(ref output, _repeated_regions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDefaultRegionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultRegionName);
      }
      if (HasDefaultMachineClassName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultMachineClassName);
      }
      if (HasDefaultGpuClassName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultGpuClassName);
      }
      size += machineClasses_.CalculateSize(_repeated_machineClasses_codec);
      size += gpuClasses_.CalculateSize(_repeated_gpuClasses_codec);
      size += regions_.CalculateSize(_repeated_regions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CloudSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasDefaultRegionName) {
        DefaultRegionName = other.DefaultRegionName;
      }
      if (other.HasDefaultMachineClassName) {
        DefaultMachineClassName = other.DefaultMachineClassName;
      }
      if (other.HasDefaultGpuClassName) {
        DefaultGpuClassName = other.DefaultGpuClassName;
      }
      machineClasses_.Add(other.machineClasses_);
      gpuClasses_.Add(other.gpuClasses_);
      regions_.Add(other.regions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DefaultRegionName = input.ReadString();
            break;
          }
          case 18: {
            DefaultMachineClassName = input.ReadString();
            break;
          }
          case 26: {
            DefaultGpuClassName = input.ReadString();
            break;
          }
          case 34: {
            machineClasses_.AddEntriesFrom(input, _repeated_machineClasses_codec);
            break;
          }
          case 42: {
            gpuClasses_.AddEntriesFrom(input, _repeated_gpuClasses_codec);
            break;
          }
          case 50: {
            regions_.AddEntriesFrom(input, _repeated_regions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DefaultRegionName = input.ReadString();
            break;
          }
          case 18: {
            DefaultMachineClassName = input.ReadString();
            break;
          }
          case 26: {
            DefaultGpuClassName = input.ReadString();
            break;
          }
          case 34: {
            machineClasses_.AddEntriesFrom(ref input, _repeated_machineClasses_codec);
            break;
          }
          case 42: {
            gpuClasses_.AddEntriesFrom(ref input, _repeated_gpuClasses_codec);
            break;
          }
          case 50: {
            regions_.AddEntriesFrom(ref input, _repeated_regions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CloudStatus defines the observed state of Cloud.
  /// </summary>
  public sealed partial class CloudStatus : pb::IMessage<CloudStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CloudStatus> _parser = new pb::MessageParser<CloudStatus>(() => new CloudStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CloudStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudStatus(CloudStatus other) : this() {
      machineCosts_ = other.machineCosts_.Clone();
      gpuCosts_ = other.gpuCosts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudStatus Clone() {
      return new CloudStatus(this);
    }

    /// <summary>Field number for the "machineCosts" field.</summary>
    public const int MachineCostsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MachineClassCost> _repeated_machineCosts_codec
        = pb::FieldCodec.ForMessage(10, global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MachineClassCost.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MachineClassCost> machineCosts_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MachineClassCost>();
    /// <summary>
    /// Machine cost is the costs of
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MachineClassCost> MachineCosts {
      get { return machineCosts_; }
    }

    /// <summary>Field number for the "gpuCosts" field.</summary>
    public const int GpuCostsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GpuClassCost> _repeated_gpuCosts_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GpuClassCost.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GpuClassCost> gpuCosts_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GpuClassCost>();
    /// <summary>
    /// CostSpot is the spot cost of the machine class
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GpuClassCost> GpuCosts {
      get { return gpuCosts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CloudStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CloudStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!machineCosts_.Equals(other.machineCosts_)) return false;
      if(!gpuCosts_.Equals(other.gpuCosts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= machineCosts_.GetHashCode();
      hash ^= gpuCosts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      machineCosts_.WriteTo(output, _repeated_machineCosts_codec);
      gpuCosts_.WriteTo(output, _repeated_gpuCosts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      machineCosts_.WriteTo(ref output, _repeated_machineCosts_codec);
      gpuCosts_.WriteTo(ref output, _repeated_gpuCosts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += machineCosts_.CalculateSize(_repeated_machineCosts_codec);
      size += gpuCosts_.CalculateSize(_repeated_gpuCosts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CloudStatus other) {
      if (other == null) {
        return;
      }
      machineCosts_.Add(other.machineCosts_);
      gpuCosts_.Add(other.gpuCosts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            machineCosts_.AddEntriesFrom(input, _repeated_machineCosts_codec);
            break;
          }
          case 18: {
            gpuCosts_.AddEntriesFrom(input, _repeated_gpuCosts_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            machineCosts_.AddEntriesFrom(ref input, _repeated_machineCosts_codec);
            break;
          }
          case 18: {
            gpuCosts_.AddEntriesFrom(ref input, _repeated_gpuCosts_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Datacenter contains the attribute of a specific data center
  /// </summary>
  public sealed partial class DataCenter : pb::IMessage<DataCenter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataCenter> _parser = new pb::MessageParser<DataCenter>(() => new DataCenter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataCenter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataCenter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataCenter(DataCenter other) : this() {
      name_ = other.name_;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataCenter Clone() {
      return new DataCenter(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    /// Name is the name of the datacenter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private readonly static string CodeDefaultValue = "";

    private string code_;
    /// <summary>
    /// Code is the code of the datacenter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_ ?? CodeDefaultValue; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCode {
      get { return code_ != null; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCode() {
      code_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataCenter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataCenter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasCode) {
        output.WriteRawTag(18);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasCode) {
        output.WriteRawTag(18);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataCenter other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Code = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Code = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// FloatParameter contain the specification of an float hyper parameter
  /// </summary>
  public sealed partial class FloatParameter : pb::IMessage<FloatParameter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FloatParameter> _parser = new pb::MessageParser<FloatParameter>(() => new FloatParameter());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FloatParameter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FloatParameter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FloatParameter(FloatParameter other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      min_ = other.min_;
      max_ = other.max_;
      defaultValue_ = other.defaultValue_;
      log_ = other.log_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FloatParameter Clone() {
      return new FloatParameter(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    /// Name is the name of the hyper parameter
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "min" field.</summary>
    public const int MinFieldNumber = 3;
    private readonly static double MinDefaultValue = 0D;

    private double min_;
    /// <summary>
    /// Min is the minimum value
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Min {
      get { if ((_hasBits0 & 1) != 0) { return min_; } else { return MinDefaultValue; } }
      set {
        _hasBits0 |= 1;
        min_ = value;
      }
    }
    /// <summary>Gets whether the "min" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMin {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "min" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMin() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "max" field.</summary>
    public const int MaxFieldNumber = 4;
    private readonly static double MaxDefaultValue = 0D;

    private double max_;
    /// <summary>
    /// Max is the maximum value
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Max {
      get { if ((_hasBits0 & 2) != 0) { return max_; } else { return MaxDefaultValue; } }
      set {
        _hasBits0 |= 2;
        max_ = value;
      }
    }
    /// <summary>Gets whether the "max" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMax {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "max" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMax() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "defaultValue" field.</summary>
    public const int DefaultValueFieldNumber = 5;
    private readonly static double DefaultValueDefaultValue = 0D;

    private double defaultValue_;
    /// <summary>
    /// Default float value
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DefaultValue {
      get { if ((_hasBits0 & 4) != 0) { return defaultValue_; } else { return DefaultValueDefaultValue; } }
      set {
        _hasBits0 |= 4;
        defaultValue_ = value;
      }
    }
    /// <summary>Gets whether the "defaultValue" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDefaultValue {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "defaultValue" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDefaultValue() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "log" field.</summary>
    public const int LogFieldNumber = 6;
    private readonly static bool LogDefaultValue = false;

    private bool log_;
    /// <summary>
    /// Log specify if this hyper paramer is logartimic
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Log {
      get { if ((_hasBits0 & 8) != 0) { return log_; } else { return LogDefaultValue; } }
      set {
        _hasBits0 |= 8;
        log_ = value;
      }
    }
    /// <summary>Gets whether the "log" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLog {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "log" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLog() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FloatParameter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FloatParameter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Min, other.Min)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Max, other.Max)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DefaultValue, other.DefaultValue)) return false;
      if (Log != other.Log) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasMin) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Min);
      if (HasMax) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Max);
      if (HasDefaultValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DefaultValue);
      if (HasLog) hash ^= Log.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasMin) {
        output.WriteRawTag(25);
        output.WriteDouble(Min);
      }
      if (HasMax) {
        output.WriteRawTag(33);
        output.WriteDouble(Max);
      }
      if (HasDefaultValue) {
        output.WriteRawTag(41);
        output.WriteDouble(DefaultValue);
      }
      if (HasLog) {
        output.WriteRawTag(48);
        output.WriteBool(Log);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasMin) {
        output.WriteRawTag(25);
        output.WriteDouble(Min);
      }
      if (HasMax) {
        output.WriteRawTag(33);
        output.WriteDouble(Max);
      }
      if (HasDefaultValue) {
        output.WriteRawTag(41);
        output.WriteDouble(DefaultValue);
      }
      if (HasLog) {
        output.WriteRawTag(48);
        output.WriteBool(Log);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasMin) {
        size += 1 + 8;
      }
      if (HasMax) {
        size += 1 + 8;
      }
      if (HasDefaultValue) {
        size += 1 + 8;
      }
      if (HasLog) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FloatParameter other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasMin) {
        Min = other.Min;
      }
      if (other.HasMax) {
        Max = other.Max;
      }
      if (other.HasDefaultValue) {
        DefaultValue = other.DefaultValue;
      }
      if (other.HasLog) {
        Log = other.Log;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 25: {
            Min = input.ReadDouble();
            break;
          }
          case 33: {
            Max = input.ReadDouble();
            break;
          }
          case 41: {
            DefaultValue = input.ReadDouble();
            break;
          }
          case 48: {
            Log = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 25: {
            Min = input.ReadDouble();
            break;
          }
          case 33: {
            Max = input.ReadDouble();
            break;
          }
          case 41: {
            DefaultValue = input.ReadDouble();
            break;
          }
          case 48: {
            Log = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// GpuClass define the specific for a machine type of a cloud provider
  /// </summary>
  public sealed partial class GpuClass : pb::IMessage<GpuClass>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GpuClass> _parser = new pb::MessageParser<GpuClass>(() => new GpuClass());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GpuClass> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GpuClass() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GpuClass(GpuClass other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      regionName_ = other.regionName_;
      vcpu_ = other.vcpu_;
      gpumem_ = other.gpumem_ != null ? other.gpumem_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GpuClass Clone() {
      return new GpuClass(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static string CodeDefaultValue = "";

    private string code_;
    /// <summary>
    /// Code the the code of the gpu class within the data provider
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_ ?? CodeDefaultValue; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCode {
      get { return code_ != null; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCode() {
      code_ = null;
    }

    /// <summary>Field number for the "regionName" field.</summary>
    public const int RegionNameFieldNumber = 2;
    private readonly static string RegionNameDefaultValue = "";

    private string regionName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RegionName {
      get { return regionName_ ?? RegionNameDefaultValue; }
      set {
        regionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "regionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRegionName {
      get { return regionName_ != null; }
    }
    /// <summary>Clears the value of the "regionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRegionName() {
      regionName_ = null;
    }

    /// <summary>Field number for the "vcpu" field.</summary>
    public const int VcpuFieldNumber = 3;
    private readonly static int VcpuDefaultValue = 0;

    private int vcpu_;
    /// <summary>
    /// Vcpu is the number of cores
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vcpu {
      get { if ((_hasBits0 & 1) != 0) { return vcpu_; } else { return VcpuDefaultValue; } }
      set {
        _hasBits0 |= 1;
        vcpu_ = value;
      }
    }
    /// <summary>Gets whether the "vcpu" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVcpu {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "vcpu" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVcpu() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "gpumem" field.</summary>
    public const int GpumemFieldNumber = 4;
    private global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity gpumem_;
    /// <summary>
    /// Gpumem is the amount of memory on the gpu
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity Gpumem {
      get { return gpumem_; }
      set {
        gpumem_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GpuClass);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GpuClass other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (RegionName != other.RegionName) return false;
      if (Vcpu != other.Vcpu) return false;
      if (!object.Equals(Gpumem, other.Gpumem)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasRegionName) hash ^= RegionName.GetHashCode();
      if (HasVcpu) hash ^= Vcpu.GetHashCode();
      if (gpumem_ != null) hash ^= Gpumem.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (HasRegionName) {
        output.WriteRawTag(18);
        output.WriteString(RegionName);
      }
      if (HasVcpu) {
        output.WriteRawTag(24);
        output.WriteInt32(Vcpu);
      }
      if (gpumem_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Gpumem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (HasRegionName) {
        output.WriteRawTag(18);
        output.WriteString(RegionName);
      }
      if (HasVcpu) {
        output.WriteRawTag(24);
        output.WriteInt32(Vcpu);
      }
      if (gpumem_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Gpumem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (HasRegionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegionName);
      }
      if (HasVcpu) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vcpu);
      }
      if (gpumem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Gpumem);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GpuClass other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasRegionName) {
        RegionName = other.RegionName;
      }
      if (other.HasVcpu) {
        Vcpu = other.Vcpu;
      }
      if (other.gpumem_ != null) {
        if (gpumem_ == null) {
          Gpumem = new global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity();
        }
        Gpumem.MergeFrom(other.Gpumem);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
          case 18: {
            RegionName = input.ReadString();
            break;
          }
          case 24: {
            Vcpu = input.ReadInt32();
            break;
          }
          case 34: {
            if (gpumem_ == null) {
              Gpumem = new global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity();
            }
            input.ReadMessage(Gpumem);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
          case 18: {
            RegionName = input.ReadString();
            break;
          }
          case 24: {
            Vcpu = input.ReadInt32();
            break;
          }
          case 34: {
            if (gpumem_ == null) {
              Gpumem = new global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity();
            }
            input.ReadMessage(Gpumem);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// GpuClassCost contain the current cost of a gpu class in a region
  /// </summary>
  public sealed partial class GpuClassCost : pb::IMessage<GpuClassCost>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GpuClassCost> _parser = new pb::MessageParser<GpuClassCost>(() => new GpuClassCost());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GpuClassCost> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GpuClassCost() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GpuClassCost(GpuClassCost other) : this() {
      code_ = other.code_;
      region_ = other.region_;
      costPerMinute_ = other.costPerMinute_ != null ? other.costPerMinute_.Clone() : null;
      costSpot_ = other.costSpot_ != null ? other.costSpot_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GpuClassCost Clone() {
      return new GpuClassCost(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static string CodeDefaultValue = "";

    private string code_;
    /// <summary>
    /// Code is the machine class code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_ ?? CodeDefaultValue; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCode {
      get { return code_ != null; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCode() {
      code_ = null;
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 2;
    private readonly static string RegionDefaultValue = "";

    private string region_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Region {
      get { return region_ ?? RegionDefaultValue; }
      set {
        region_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "region" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRegion {
      get { return region_ != null; }
    }
    /// <summary>Clears the value of the "region" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRegion() {
      region_ = null;
    }

    /// <summary>Field number for the "costPerMinute" field.</summary>
    public const int CostPerMinuteFieldNumber = 3;
    private global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity costPerMinute_;
    /// <summary>
    /// CostPerMinute is the cost per minute in dollar of the machine class
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity CostPerMinute {
      get { return costPerMinute_; }
      set {
        costPerMinute_ = value;
      }
    }

    /// <summary>Field number for the "costSpot" field.</summary>
    public const int CostSpotFieldNumber = 4;
    private global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity costSpot_;
    /// <summary>
    /// CostSpot is the spot cost of the machine class
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity CostSpot {
      get { return costSpot_; }
      set {
        costSpot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GpuClassCost);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GpuClassCost other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Region != other.Region) return false;
      if (!object.Equals(CostPerMinute, other.CostPerMinute)) return false;
      if (!object.Equals(CostSpot, other.CostSpot)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasRegion) hash ^= Region.GetHashCode();
      if (costPerMinute_ != null) hash ^= CostPerMinute.GetHashCode();
      if (costSpot_ != null) hash ^= CostSpot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (HasRegion) {
        output.WriteRawTag(18);
        output.WriteString(Region);
      }
      if (costPerMinute_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CostPerMinute);
      }
      if (costSpot_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CostSpot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (HasRegion) {
        output.WriteRawTag(18);
        output.WriteString(Region);
      }
      if (costPerMinute_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CostPerMinute);
      }
      if (costSpot_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CostSpot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (HasRegion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Region);
      }
      if (costPerMinute_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CostPerMinute);
      }
      if (costSpot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CostSpot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GpuClassCost other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasRegion) {
        Region = other.Region;
      }
      if (other.costPerMinute_ != null) {
        if (costPerMinute_ == null) {
          CostPerMinute = new global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity();
        }
        CostPerMinute.MergeFrom(other.CostPerMinute);
      }
      if (other.costSpot_ != null) {
        if (costSpot_ == null) {
          CostSpot = new global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity();
        }
        CostSpot.MergeFrom(other.CostSpot);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
          case 18: {
            Region = input.ReadString();
            break;
          }
          case 26: {
            if (costPerMinute_ == null) {
              CostPerMinute = new global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity();
            }
            input.ReadMessage(CostPerMinute);
            break;
          }
          case 34: {
            if (costSpot_ == null) {
              CostSpot = new global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity();
            }
            input.ReadMessage(CostSpot);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
          case 18: {
            Region = input.ReadString();
            break;
          }
          case 26: {
            if (costPerMinute_ == null) {
              CostPerMinute = new global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity();
            }
            input.ReadMessage(CostPerMinute);
            break;
          }
          case 34: {
            if (costSpot_ == null) {
              CostSpot = new global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity();
            }
            input.ReadMessage(CostSpot);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// IntParameter contain the specification of an integer hyper parameter
  /// </summary>
  public sealed partial class IntParameter : pb::IMessage<IntParameter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IntParameter> _parser = new pb::MessageParser<IntParameter>(() => new IntParameter());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IntParameter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntParameter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntParameter(IntParameter other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      type_ = other.type_;
      min_ = other.min_;
      max_ = other.max_;
      defaultValue_ = other.defaultValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntParameter Clone() {
      return new IntParameter(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    /// Name is the name of the hyper parameter
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// Type is the datatype of the parameter
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "min" field.</summary>
    public const int MinFieldNumber = 3;
    private readonly static int MinDefaultValue = 0;

    private int min_;
    /// <summary>
    /// Min is the minimum value of the hyper parameter range
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Min {
      get { if ((_hasBits0 & 1) != 0) { return min_; } else { return MinDefaultValue; } }
      set {
        _hasBits0 |= 1;
        min_ = value;
      }
    }
    /// <summary>Gets whether the "min" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMin {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "min" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMin() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "max" field.</summary>
    public const int MaxFieldNumber = 4;
    private readonly static int MaxDefaultValue = 0;

    private int max_;
    /// <summary>
    /// Max is the maximum value of the hyper parameter range
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Max {
      get { if ((_hasBits0 & 2) != 0) { return max_; } else { return MaxDefaultValue; } }
      set {
        _hasBits0 |= 2;
        max_ = value;
      }
    }
    /// <summary>Gets whether the "max" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMax {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "max" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMax() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "defaultValue" field.</summary>
    public const int DefaultValueFieldNumber = 6;
    private readonly static int DefaultValueDefaultValue = 0;

    private int defaultValue_;
    /// <summary>
    /// DefaultValue is the default value of the parameter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DefaultValue {
      get { if ((_hasBits0 & 4) != 0) { return defaultValue_; } else { return DefaultValueDefaultValue; } }
      set {
        _hasBits0 |= 4;
        defaultValue_ = value;
      }
    }
    /// <summary>Gets whether the "defaultValue" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDefaultValue {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "defaultValue" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDefaultValue() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IntParameter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IntParameter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (Min != other.Min) return false;
      if (Max != other.Max) return false;
      if (DefaultValue != other.DefaultValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasMin) hash ^= Min.GetHashCode();
      if (HasMax) hash ^= Max.GetHashCode();
      if (HasDefaultValue) hash ^= DefaultValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasType) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      if (HasMin) {
        output.WriteRawTag(24);
        output.WriteInt32(Min);
      }
      if (HasMax) {
        output.WriteRawTag(32);
        output.WriteInt32(Max);
      }
      if (HasDefaultValue) {
        output.WriteRawTag(48);
        output.WriteInt32(DefaultValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasType) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      if (HasMin) {
        output.WriteRawTag(24);
        output.WriteInt32(Min);
      }
      if (HasMax) {
        output.WriteRawTag(32);
        output.WriteInt32(Max);
      }
      if (HasDefaultValue) {
        output.WriteRawTag(48);
        output.WriteInt32(DefaultValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasMin) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Min);
      }
      if (HasMax) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Max);
      }
      if (HasDefaultValue) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DefaultValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IntParameter other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasMin) {
        Min = other.Min;
      }
      if (other.HasMax) {
        Max = other.Max;
      }
      if (other.HasDefaultValue) {
        DefaultValue = other.DefaultValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 24: {
            Min = input.ReadInt32();
            break;
          }
          case 32: {
            Max = input.ReadInt32();
            break;
          }
          case 48: {
            DefaultValue = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 24: {
            Min = input.ReadInt32();
            break;
          }
          case 32: {
            Max = input.ReadInt32();
            break;
          }
          case 48: {
            DefaultValue = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// MLFramework define the metadata about a machine learning framework
  /// +kubebuilder:object:root=true
  /// +kubebuilder:printcolumn:name="Name",type="string",JSONPath=".spec.url"
  /// +kubebuilder:printcolumn:name="Version",type="string",JSONPath=".spec.version"
  /// +kubebuilder:resource:path=mlframeworks,singular=mlframework,categories={catalog,modeld,all}
  /// </summary>
  public sealed partial class MLFramework : pb::IMessage<MLFramework>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MLFramework> _parser = new pb::MessageParser<MLFramework>(() => new MLFramework());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MLFramework> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MLFramework() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MLFramework(MLFramework other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MLFramework Clone() {
      return new MLFramework(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MLFrameworkSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MLFrameworkSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MLFramework);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MLFramework other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MLFramework other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MLFrameworkSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MLFrameworkSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MLFrameworkSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// MLFrameworkList contains a list of MLFramework
  /// </summary>
  public sealed partial class MLFrameworkList : pb::IMessage<MLFrameworkList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MLFrameworkList> _parser = new pb::MessageParser<MLFrameworkList>(() => new MLFrameworkList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MLFrameworkList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MLFrameworkList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MLFrameworkList(MLFrameworkList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MLFrameworkList Clone() {
      return new MLFrameworkList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MLFramework> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MLFramework.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MLFramework> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MLFramework>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MLFramework> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MLFrameworkList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MLFrameworkList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MLFrameworkList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// MLFramework is the spec for a specific version of machine learning framework (e.g. tensorflow)
  /// </summary>
  public sealed partial class MLFrameworkSpec : pb::IMessage<MLFrameworkSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MLFrameworkSpec> _parser = new pb::MessageParser<MLFrameworkSpec>(() => new MLFrameworkSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MLFrameworkSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MLFrameworkSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MLFrameworkSpec(MLFrameworkSpec other) : this() {
      url_ = other.url_;
      description_ = other.description_;
      version_ = other.version_;
      lang_ = other.lang_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MLFrameworkSpec Clone() {
      return new MLFrameworkSpec(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    /// <summary>
    /// URL for the home page of the mlframework
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// Comments of the framework
    /// +kubebuilder:default =""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 3;
    private readonly static string VersionDefaultValue = "";

    private string version_;
    /// <summary>
    /// The current version of the mlframework
    /// +kubebuilder:default =""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_ ?? VersionDefaultValue; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersion {
      get { return version_ != null; }
    }
    /// <summary>Clears the value of the "version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersion() {
      version_ = null;
    }

    /// <summary>Field number for the "lang" field.</summary>
    public const int LangFieldNumber = 4;
    private readonly static string LangDefaultValue = "";

    private string lang_;
    /// <summary>
    /// Lang is the framework lang
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Lang {
      get { return lang_ ?? LangDefaultValue; }
      set {
        lang_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "lang" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLang {
      get { return lang_ != null; }
    }
    /// <summary>Clears the value of the "lang" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLang() {
      lang_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MLFrameworkSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MLFrameworkSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      if (Description != other.Description) return false;
      if (Version != other.Version) return false;
      if (Lang != other.Lang) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (HasVersion) hash ^= Version.GetHashCode();
      if (HasLang) hash ^= Lang.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (HasDescription) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (HasVersion) {
        output.WriteRawTag(26);
        output.WriteString(Version);
      }
      if (HasLang) {
        output.WriteRawTag(34);
        output.WriteString(Lang);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (HasDescription) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (HasVersion) {
        output.WriteRawTag(26);
        output.WriteString(Version);
      }
      if (HasLang) {
        output.WriteRawTag(34);
        output.WriteString(Lang);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (HasVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (HasLang) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Lang);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MLFrameworkSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      if (other.HasLang) {
        Lang = other.Lang;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            Version = input.ReadString();
            break;
          }
          case 34: {
            Lang = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            Version = input.ReadString();
            break;
          }
          case 34: {
            Lang = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// MachineClass define the specific for a machine type of a cloud provider
  /// </summary>
  public sealed partial class MachineClass : pb::IMessage<MachineClass>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MachineClass> _parser = new pb::MessageParser<MachineClass>(() => new MachineClass());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MachineClass> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MachineClass() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MachineClass(MachineClass other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      regionName_ = other.regionName_;
      mem_ = other.mem_ != null ? other.mem_.Clone() : null;
      vcpu_ = other.vcpu_;
      storage_ = other.storage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MachineClass Clone() {
      return new MachineClass(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static string CodeDefaultValue = "";

    private string code_;
    /// <summary>
    /// Code the the code of the machine class within the data provider
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_ ?? CodeDefaultValue; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCode {
      get { return code_ != null; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCode() {
      code_ = null;
    }

    /// <summary>Field number for the "regionName" field.</summary>
    public const int RegionNameFieldNumber = 2;
    private readonly static string RegionNameDefaultValue = "";

    private string regionName_;
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RegionName {
      get { return regionName_ ?? RegionNameDefaultValue; }
      set {
        regionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "regionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRegionName {
      get { return regionName_ != null; }
    }
    /// <summary>Clears the value of the "regionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRegionName() {
      regionName_ = null;
    }

    /// <summary>Field number for the "mem" field.</summary>
    public const int MemFieldNumber = 3;
    private global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity mem_;
    /// <summary>
    /// Mem is the amount of memory on this machine
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity Mem {
      get { return mem_; }
      set {
        mem_ = value;
      }
    }

    /// <summary>Field number for the "vcpu" field.</summary>
    public const int VcpuFieldNumber = 4;
    private readonly static int VcpuDefaultValue = 0;

    private int vcpu_;
    /// <summary>
    /// Vcpu is the number of virtual cpus on this machine
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vcpu {
      get { if ((_hasBits0 & 1) != 0) { return vcpu_; } else { return VcpuDefaultValue; } }
      set {
        _hasBits0 |= 1;
        vcpu_ = value;
      }
    }
    /// <summary>Gets whether the "vcpu" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVcpu {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "vcpu" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVcpu() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "storage" field.</summary>
    public const int StorageFieldNumber = 5;
    private readonly static string StorageDefaultValue = "";

    private string storage_;
    /// <summary>
    /// Storage is the amount of storage on this machine class
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Storage {
      get { return storage_ ?? StorageDefaultValue; }
      set {
        storage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "storage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStorage {
      get { return storage_ != null; }
    }
    /// <summary>Clears the value of the "storage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStorage() {
      storage_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MachineClass);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MachineClass other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (RegionName != other.RegionName) return false;
      if (!object.Equals(Mem, other.Mem)) return false;
      if (Vcpu != other.Vcpu) return false;
      if (Storage != other.Storage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasRegionName) hash ^= RegionName.GetHashCode();
      if (mem_ != null) hash ^= Mem.GetHashCode();
      if (HasVcpu) hash ^= Vcpu.GetHashCode();
      if (HasStorage) hash ^= Storage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (HasRegionName) {
        output.WriteRawTag(18);
        output.WriteString(RegionName);
      }
      if (mem_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Mem);
      }
      if (HasVcpu) {
        output.WriteRawTag(32);
        output.WriteInt32(Vcpu);
      }
      if (HasStorage) {
        output.WriteRawTag(42);
        output.WriteString(Storage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (HasRegionName) {
        output.WriteRawTag(18);
        output.WriteString(RegionName);
      }
      if (mem_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Mem);
      }
      if (HasVcpu) {
        output.WriteRawTag(32);
        output.WriteInt32(Vcpu);
      }
      if (HasStorage) {
        output.WriteRawTag(42);
        output.WriteString(Storage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (HasRegionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegionName);
      }
      if (mem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mem);
      }
      if (HasVcpu) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vcpu);
      }
      if (HasStorage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Storage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MachineClass other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasRegionName) {
        RegionName = other.RegionName;
      }
      if (other.mem_ != null) {
        if (mem_ == null) {
          Mem = new global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity();
        }
        Mem.MergeFrom(other.Mem);
      }
      if (other.HasVcpu) {
        Vcpu = other.Vcpu;
      }
      if (other.HasStorage) {
        Storage = other.Storage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
          case 18: {
            RegionName = input.ReadString();
            break;
          }
          case 26: {
            if (mem_ == null) {
              Mem = new global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity();
            }
            input.ReadMessage(Mem);
            break;
          }
          case 32: {
            Vcpu = input.ReadInt32();
            break;
          }
          case 42: {
            Storage = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
          case 18: {
            RegionName = input.ReadString();
            break;
          }
          case 26: {
            if (mem_ == null) {
              Mem = new global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity();
            }
            input.ReadMessage(Mem);
            break;
          }
          case 32: {
            Vcpu = input.ReadInt32();
            break;
          }
          case 42: {
            Storage = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// MachineClassCost contain the current cost of a machine class in a region
  /// </summary>
  public sealed partial class MachineClassCost : pb::IMessage<MachineClassCost>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MachineClassCost> _parser = new pb::MessageParser<MachineClassCost>(() => new MachineClassCost());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MachineClassCost> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MachineClassCost() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MachineClassCost(MachineClassCost other) : this() {
      code_ = other.code_;
      region_ = other.region_;
      costPerMinute_ = other.costPerMinute_ != null ? other.costPerMinute_.Clone() : null;
      costSpot_ = other.costSpot_ != null ? other.costSpot_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MachineClassCost Clone() {
      return new MachineClassCost(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static string CodeDefaultValue = "";

    private string code_;
    /// <summary>
    /// Code is the machine class code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_ ?? CodeDefaultValue; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCode {
      get { return code_ != null; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCode() {
      code_ = null;
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 2;
    private readonly static string RegionDefaultValue = "";

    private string region_;
    /// <summary>
    /// Region is the code of the region
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Region {
      get { return region_ ?? RegionDefaultValue; }
      set {
        region_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "region" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRegion {
      get { return region_ != null; }
    }
    /// <summary>Clears the value of the "region" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRegion() {
      region_ = null;
    }

    /// <summary>Field number for the "costPerMinute" field.</summary>
    public const int CostPerMinuteFieldNumber = 3;
    private global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity costPerMinute_;
    /// <summary>
    /// CostPerMinute is the cost per minute in dollar of the machine class
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity CostPerMinute {
      get { return costPerMinute_; }
      set {
        costPerMinute_ = value;
      }
    }

    /// <summary>Field number for the "costSpot" field.</summary>
    public const int CostSpotFieldNumber = 4;
    private global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity costSpot_;
    /// <summary>
    /// CostSpot is the spot cost of the machine class
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity CostSpot {
      get { return costSpot_; }
      set {
        costSpot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MachineClassCost);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MachineClassCost other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Region != other.Region) return false;
      if (!object.Equals(CostPerMinute, other.CostPerMinute)) return false;
      if (!object.Equals(CostSpot, other.CostSpot)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasRegion) hash ^= Region.GetHashCode();
      if (costPerMinute_ != null) hash ^= CostPerMinute.GetHashCode();
      if (costSpot_ != null) hash ^= CostSpot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (HasRegion) {
        output.WriteRawTag(18);
        output.WriteString(Region);
      }
      if (costPerMinute_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CostPerMinute);
      }
      if (costSpot_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CostSpot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (HasRegion) {
        output.WriteRawTag(18);
        output.WriteString(Region);
      }
      if (costPerMinute_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CostPerMinute);
      }
      if (costSpot_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CostSpot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (HasRegion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Region);
      }
      if (costPerMinute_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CostPerMinute);
      }
      if (costSpot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CostSpot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MachineClassCost other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasRegion) {
        Region = other.Region;
      }
      if (other.costPerMinute_ != null) {
        if (costPerMinute_ == null) {
          CostPerMinute = new global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity();
        }
        CostPerMinute.MergeFrom(other.CostPerMinute);
      }
      if (other.costSpot_ != null) {
        if (costSpot_ == null) {
          CostSpot = new global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity();
        }
        CostSpot.MergeFrom(other.CostSpot);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
          case 18: {
            Region = input.ReadString();
            break;
          }
          case 26: {
            if (costPerMinute_ == null) {
              CostPerMinute = new global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity();
            }
            input.ReadMessage(CostPerMinute);
            break;
          }
          case 34: {
            if (costSpot_ == null) {
              CostSpot = new global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity();
            }
            input.ReadMessage(CostSpot);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
          case 18: {
            Region = input.ReadString();
            break;
          }
          case 26: {
            if (costPerMinute_ == null) {
              CostPerMinute = new global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity();
            }
            input.ReadMessage(CostPerMinute);
            break;
          }
          case 34: {
            if (costSpot_ == null) {
              CostSpot = new global::K8S.Io.Apimachinery.Pkg.Api.Resource.Quantity();
            }
            input.ReadMessage(CostSpot);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Pretrained model contain the metadata about a pretrained model
  /// +kubebuilder:object:root=true
  /// </summary>
  public sealed partial class PretrainedModel : pb::IMessage<PretrainedModel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PretrainedModel> _parser = new pb::MessageParser<PretrainedModel>(() => new PretrainedModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PretrainedModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PretrainedModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PretrainedModel(PretrainedModel other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PretrainedModel Clone() {
      return new PretrainedModel(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PretrainedModelSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PretrainedModelSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PretrainedModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PretrainedModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PretrainedModel other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PretrainedModelSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PretrainedModelSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PretrainedModelSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// PretrainedModelList is a list of pretrained models
  /// </summary>
  public sealed partial class PretrainedModelList : pb::IMessage<PretrainedModelList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PretrainedModelList> _parser = new pb::MessageParser<PretrainedModelList>(() => new PretrainedModelList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PretrainedModelList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PretrainedModelList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PretrainedModelList(PretrainedModelList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PretrainedModelList Clone() {
      return new PretrainedModelList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PretrainedModel> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PretrainedModel.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PretrainedModel> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PretrainedModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PretrainedModel> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PretrainedModelList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PretrainedModelList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PretrainedModelList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// PretrainedModelSpec is the desired state of the pretrained model
  /// </summary>
  public sealed partial class PretrainedModelSpec : pb::IMessage<PretrainedModelSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PretrainedModelSpec> _parser = new pb::MessageParser<PretrainedModelSpec>(() => new PretrainedModelSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PretrainedModelSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PretrainedModelSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PretrainedModelSpec(PretrainedModelSpec other) : this() {
      image_ = other.image_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PretrainedModelSpec Clone() {
      return new PretrainedModelSpec(this);
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 1;
    private readonly static string ImageDefaultValue = "";

    private string image_;
    /// <summary>
    /// Image is the docker image of the pretrained model
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Image {
      get { return image_ ?? ImageDefaultValue; }
      set {
        image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "image" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasImage {
      get { return image_ != null; }
    }
    /// <summary>Clears the value of the "image" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearImage() {
      image_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PretrainedModelSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PretrainedModelSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Image != other.Image) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasImage) hash ^= Image.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasImage) {
        output.WriteRawTag(10);
        output.WriteString(Image);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasImage) {
        output.WriteRawTag(10);
        output.WriteString(Image);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasImage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Image);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PretrainedModelSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasImage) {
        Image = other.Image;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Image = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Image = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// PublicDataset represent the metadata about a public dataset
  /// +kubebuilder:object:root=true
  /// +kubebuilder:printcolumn:name="Image",type="string",JSONPath=".spec.image"
  /// +kubebuilder:resource:path=publicdatasets,singular=publicdataset,categories={catalog,modeld,all}
  /// </summary>
  public sealed partial class PublicDataset : pb::IMessage<PublicDataset>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PublicDataset> _parser = new pb::MessageParser<PublicDataset>(() => new PublicDataset());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PublicDataset> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublicDataset() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublicDataset(PublicDataset other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublicDataset Clone() {
      return new PublicDataset(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PublicDatasetSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PublicDatasetSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PublicDataset);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PublicDataset other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PublicDataset other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PublicDatasetSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PublicDatasetSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PublicDatasetSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// PublicDatasetList contains a list of PublicDataset
  /// </summary>
  public sealed partial class PublicDatasetList : pb::IMessage<PublicDatasetList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PublicDatasetList> _parser = new pb::MessageParser<PublicDatasetList>(() => new PublicDatasetList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PublicDatasetList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublicDatasetList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublicDatasetList(PublicDatasetList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublicDatasetList Clone() {
      return new PublicDatasetList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PublicDataset> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PublicDataset.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PublicDataset> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PublicDataset>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.PublicDataset> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PublicDatasetList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PublicDatasetList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PublicDatasetList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PublicDatasetSpec : pb::IMessage<PublicDatasetSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PublicDatasetSpec> _parser = new pb::MessageParser<PublicDatasetSpec>(() => new PublicDatasetSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PublicDatasetSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublicDatasetSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublicDatasetSpec(PublicDatasetSpec other) : this() {
      image_ = other.image_;
      task_ = other.task_;
      id_ = other.id_;
      externalName_ = other.externalName_;
      dataUrl_ = other.dataUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublicDatasetSpec Clone() {
      return new PublicDatasetSpec(this);
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 1;
    private readonly static string ImageDefaultValue = "";

    private string image_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Image {
      get { return image_ ?? ImageDefaultValue; }
      set {
        image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "image" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasImage {
      get { return image_ != null; }
    }
    /// <summary>Clears the value of the "image" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearImage() {
      image_ = null;
    }

    /// <summary>Field number for the "task" field.</summary>
    public const int TaskFieldNumber = 2;
    private readonly static string TaskDefaultValue = "";

    private string task_;
    /// <summary>
    /// Task is the machine learning task of the public dataset
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Task {
      get { return task_ ?? TaskDefaultValue; }
      set {
        task_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "task" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTask {
      get { return task_ != null; }
    }
    /// <summary>Clears the value of the "task" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTask() {
      task_ = null;
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private readonly static string IdDefaultValue = "";

    private string id_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "externalName" field.</summary>
    public const int ExternalNameFieldNumber = 4;
    private readonly static string ExternalNameDefaultValue = "";

    private string externalName_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternalName {
      get { return externalName_ ?? ExternalNameDefaultValue; }
      set {
        externalName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "externalName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExternalName {
      get { return externalName_ != null; }
    }
    /// <summary>Clears the value of the "externalName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExternalName() {
      externalName_ = null;
    }

    /// <summary>Field number for the "dataUrl" field.</summary>
    public const int DataUrlFieldNumber = 5;
    private readonly static string DataUrlDefaultValue = "";

    private string dataUrl_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DataUrl {
      get { return dataUrl_ ?? DataUrlDefaultValue; }
      set {
        dataUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "dataUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDataUrl {
      get { return dataUrl_ != null; }
    }
    /// <summary>Clears the value of the "dataUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDataUrl() {
      dataUrl_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PublicDatasetSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PublicDatasetSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Image != other.Image) return false;
      if (Task != other.Task) return false;
      if (Id != other.Id) return false;
      if (ExternalName != other.ExternalName) return false;
      if (DataUrl != other.DataUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasImage) hash ^= Image.GetHashCode();
      if (HasTask) hash ^= Task.GetHashCode();
      if (HasId) hash ^= Id.GetHashCode();
      if (HasExternalName) hash ^= ExternalName.GetHashCode();
      if (HasDataUrl) hash ^= DataUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasImage) {
        output.WriteRawTag(10);
        output.WriteString(Image);
      }
      if (HasTask) {
        output.WriteRawTag(18);
        output.WriteString(Task);
      }
      if (HasId) {
        output.WriteRawTag(26);
        output.WriteString(Id);
      }
      if (HasExternalName) {
        output.WriteRawTag(34);
        output.WriteString(ExternalName);
      }
      if (HasDataUrl) {
        output.WriteRawTag(42);
        output.WriteString(DataUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasImage) {
        output.WriteRawTag(10);
        output.WriteString(Image);
      }
      if (HasTask) {
        output.WriteRawTag(18);
        output.WriteString(Task);
      }
      if (HasId) {
        output.WriteRawTag(26);
        output.WriteString(Id);
      }
      if (HasExternalName) {
        output.WriteRawTag(34);
        output.WriteString(ExternalName);
      }
      if (HasDataUrl) {
        output.WriteRawTag(42);
        output.WriteString(DataUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasImage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Image);
      }
      if (HasTask) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Task);
      }
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (HasExternalName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalName);
      }
      if (HasDataUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DataUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PublicDatasetSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasImage) {
        Image = other.Image;
      }
      if (other.HasTask) {
        Task = other.Task;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasExternalName) {
        ExternalName = other.ExternalName;
      }
      if (other.HasDataUrl) {
        DataUrl = other.DataUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Image = input.ReadString();
            break;
          }
          case 18: {
            Task = input.ReadString();
            break;
          }
          case 26: {
            Id = input.ReadString();
            break;
          }
          case 34: {
            ExternalName = input.ReadString();
            break;
          }
          case 42: {
            DataUrl = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Image = input.ReadString();
            break;
          }
          case 18: {
            Task = input.ReadString();
            break;
          }
          case 26: {
            Id = input.ReadString();
            break;
          }
          case 34: {
            ExternalName = input.ReadString();
            break;
          }
          case 42: {
            DataUrl = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Region defines a region within the data provider
  /// </summary>
  public sealed partial class Region : pb::IMessage<Region>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Region> _parser = new pb::MessageParser<Region>(() => new Region());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Region> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Region() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Region(Region other) : this() {
      code_ = other.code_;
      defaultDatacenterName_ = other.defaultDatacenterName_;
      location_ = other.location_;
      billingCode_ = other.billingCode_;
      datacenters_ = other.datacenters_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Region Clone() {
      return new Region(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static string CodeDefaultValue = "";

    private string code_;
    /// <summary>
    /// Code is the code of the region
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_ ?? CodeDefaultValue; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCode {
      get { return code_ != null; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCode() {
      code_ = null;
    }

    /// <summary>Field number for the "defaultDatacenterName" field.</summary>
    public const int DefaultDatacenterNameFieldNumber = 2;
    private readonly static string DefaultDatacenterNameDefaultValue = "";

    private string defaultDatacenterName_;
    /// <summary>
    /// The default datacenter for a region
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefaultDatacenterName {
      get { return defaultDatacenterName_ ?? DefaultDatacenterNameDefaultValue; }
      set {
        defaultDatacenterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "defaultDatacenterName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDefaultDatacenterName {
      get { return defaultDatacenterName_ != null; }
    }
    /// <summary>Clears the value of the "defaultDatacenterName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDefaultDatacenterName() {
      defaultDatacenterName_ = null;
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 3;
    private readonly static string LocationDefaultValue = "";

    private string location_;
    /// <summary>
    /// Location is the location code The location of the region
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Location {
      get { return location_ ?? LocationDefaultValue; }
      set {
        location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "location" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLocation {
      get { return location_ != null; }
    }
    /// <summary>Clears the value of the "location" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLocation() {
      location_ = null;
    }

    /// <summary>Field number for the "billingCode" field.</summary>
    public const int BillingCodeFieldNumber = 4;
    private readonly static string BillingCodeDefaultValue = "";

    private string billingCode_;
    /// <summary>
    /// BillingCode is the billing code of the region
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BillingCode {
      get { return billingCode_ ?? BillingCodeDefaultValue; }
      set {
        billingCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "billingCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBillingCode {
      get { return billingCode_ != null; }
    }
    /// <summary>Clears the value of the "billingCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBillingCode() {
      billingCode_ = null;
    }

    /// <summary>Field number for the "datacenters" field.</summary>
    public const int DatacentersFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.DataCenter> _repeated_datacenters_codec
        = pb::FieldCodec.ForMessage(42, global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.DataCenter.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.DataCenter> datacenters_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.DataCenter>();
    /// <summary>
    /// Datacenters if the list of datacenters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.DataCenter> Datacenters {
      get { return datacenters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Region);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Region other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (DefaultDatacenterName != other.DefaultDatacenterName) return false;
      if (Location != other.Location) return false;
      if (BillingCode != other.BillingCode) return false;
      if(!datacenters_.Equals(other.datacenters_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasDefaultDatacenterName) hash ^= DefaultDatacenterName.GetHashCode();
      if (HasLocation) hash ^= Location.GetHashCode();
      if (HasBillingCode) hash ^= BillingCode.GetHashCode();
      hash ^= datacenters_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (HasDefaultDatacenterName) {
        output.WriteRawTag(18);
        output.WriteString(DefaultDatacenterName);
      }
      if (HasLocation) {
        output.WriteRawTag(26);
        output.WriteString(Location);
      }
      if (HasBillingCode) {
        output.WriteRawTag(34);
        output.WriteString(BillingCode);
      }
      datacenters_.WriteTo(output, _repeated_datacenters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (HasDefaultDatacenterName) {
        output.WriteRawTag(18);
        output.WriteString(DefaultDatacenterName);
      }
      if (HasLocation) {
        output.WriteRawTag(26);
        output.WriteString(Location);
      }
      if (HasBillingCode) {
        output.WriteRawTag(34);
        output.WriteString(BillingCode);
      }
      datacenters_.WriteTo(ref output, _repeated_datacenters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (HasDefaultDatacenterName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultDatacenterName);
      }
      if (HasLocation) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
      }
      if (HasBillingCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BillingCode);
      }
      size += datacenters_.CalculateSize(_repeated_datacenters_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Region other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasDefaultDatacenterName) {
        DefaultDatacenterName = other.DefaultDatacenterName;
      }
      if (other.HasLocation) {
        Location = other.Location;
      }
      if (other.HasBillingCode) {
        BillingCode = other.BillingCode;
      }
      datacenters_.Add(other.datacenters_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
          case 18: {
            DefaultDatacenterName = input.ReadString();
            break;
          }
          case 26: {
            Location = input.ReadString();
            break;
          }
          case 34: {
            BillingCode = input.ReadString();
            break;
          }
          case 42: {
            datacenters_.AddEntriesFrom(input, _repeated_datacenters_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
          case 18: {
            DefaultDatacenterName = input.ReadString();
            break;
          }
          case 26: {
            Location = input.ReadString();
            break;
          }
          case 34: {
            BillingCode = input.ReadString();
            break;
          }
          case 42: {
            datacenters_.AddEntriesFrom(ref input, _repeated_datacenters_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// UserRoleClass specify the RBAC premission for a specific user role.
  /// +kubebuilder:object:root=true
  /// +kubebuilder:printcolumn:priority=0,name="Cloud",type=string,JSONPath=".spec.cloud",description="Cloud provider",format=""
  /// +kubebuilder:printcolumn:priority=0,name="Task",type=string,JSONPath=".spc.task",description="machine learning task",format=""
  /// </summary>
  public sealed partial class UserRoleClass : pb::IMessage<UserRoleClass>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserRoleClass> _parser = new pb::MessageParser<UserRoleClass>(() => new UserRoleClass());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserRoleClass> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRoleClass() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRoleClass(UserRoleClass other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRoleClass Clone() {
      return new UserRoleClass(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.UserRoleClassSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.UserRoleClassSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserRoleClass);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserRoleClass other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserRoleClass other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.UserRoleClassSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.UserRoleClassSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.UserRoleClassSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// UserRoleClassList contains a list of UserRoleClass
  /// </summary>
  public sealed partial class UserRoleClassList : pb::IMessage<UserRoleClassList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserRoleClassList> _parser = new pb::MessageParser<UserRoleClassList>(() => new UserRoleClassList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserRoleClassList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRoleClassList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRoleClassList(UserRoleClassList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRoleClassList Clone() {
      return new UserRoleClassList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.UserRoleClass> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.UserRoleClass.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.UserRoleClass> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.UserRoleClass>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.UserRoleClass> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserRoleClassList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserRoleClassList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserRoleClassList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// UserRoleClassSpec is the spec for UserRoleClass
  /// </summary>
  public sealed partial class UserRoleClassSpec : pb::IMessage<UserRoleClassSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserRoleClassSpec> _parser = new pb::MessageParser<UserRoleClassSpec>(() => new UserRoleClassSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserRoleClassSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRoleClassSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRoleClassSpec(UserRoleClassSpec other) : this() {
      rules_ = other.rules_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRoleClassSpec Clone() {
      return new UserRoleClassSpec(this);
    }

    /// <summary>Field number for the "rules" field.</summary>
    public const int RulesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::K8S.Io.Api.Rbac.V1.PolicyRule> _repeated_rules_codec
        = pb::FieldCodec.ForMessage(10, global::K8S.Io.Api.Rbac.V1.PolicyRule.Parser);
    private readonly pbc::RepeatedField<global::K8S.Io.Api.Rbac.V1.PolicyRule> rules_ = new pbc::RepeatedField<global::K8S.Io.Api.Rbac.V1.PolicyRule>();
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::K8S.Io.Api.Rbac.V1.PolicyRule> Rules {
      get { return rules_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserRoleClassSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserRoleClassSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rules_.Equals(other.rules_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rules_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      rules_.WriteTo(output, _repeated_rules_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      rules_.WriteTo(ref output, _repeated_rules_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += rules_.CalculateSize(_repeated_rules_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserRoleClassSpec other) {
      if (other == null) {
        return;
      }
      rules_.Add(other.rules_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            rules_.AddEntriesFrom(input, _repeated_rules_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            rules_.AddEntriesFrom(ref input, _repeated_rules_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class VizUri : pb::IMessage<VizUri>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VizUri> _parser = new pb::MessageParser<VizUri>(() => new VizUri());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VizUri> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VizUri() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VizUri(VizUri other) : this() {
      name_ = other.name_;
      uri_ = other.uri_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VizUri Clone() {
      return new VizUri(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "uri" field.</summary>
    public const int UriFieldNumber = 2;
    private readonly static string UriDefaultValue = "";

    private string uri_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uri {
      get { return uri_ ?? UriDefaultValue; }
      set {
        uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uri" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUri {
      get { return uri_ != null; }
    }
    /// <summary>Clears the value of the "uri" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUri() {
      uri_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VizUri);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VizUri other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Uri != other.Uri) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasUri) hash ^= Uri.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasUri) {
        output.WriteRawTag(18);
        output.WriteString(Uri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasUri) {
        output.WriteRawTag(18);
        output.WriteString(Uri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasUri) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VizUri other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasUri) {
        Uri = other.Uri;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Uri = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Uri = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// WorkloadClass define a template for a job.
  /// +kubebuilder:object:root=true
  /// +kubebuilder:printcolumn:name="Image",type="string",JSONPath=".spec.image"
  /// +kubebuilder:resource:path=workloadclasses,singular=workloadclass,categories={catalog,modeld,all}
  /// </summary>
  public sealed partial class WorkloadClass : pb::IMessage<WorkloadClass>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WorkloadClass> _parser = new pb::MessageParser<WorkloadClass>(() => new WorkloadClass());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WorkloadClass> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorkloadClass() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorkloadClass(WorkloadClass other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorkloadClass Clone() {
      return new WorkloadClass(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.WorkloadClassSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.WorkloadClassSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WorkloadClass);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WorkloadClass other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WorkloadClass other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.WorkloadClassSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.WorkloadClassSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.WorkloadClassSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// TrainerList contains a list of Trainer
  /// </summary>
  public sealed partial class WorkloadClassList : pb::IMessage<WorkloadClassList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WorkloadClassList> _parser = new pb::MessageParser<WorkloadClassList>(() => new WorkloadClassList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WorkloadClassList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorkloadClassList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorkloadClassList(WorkloadClassList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorkloadClassList Clone() {
      return new WorkloadClassList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.WorkloadClass> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.WorkloadClass.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.WorkloadClass> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.WorkloadClass>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.WorkloadClass> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WorkloadClassList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WorkloadClassList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WorkloadClassList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// WorkloadClassSpec defines the specification of  a workload class.
  /// </summary>
  public sealed partial class WorkloadClassSpec : pb::IMessage<WorkloadClassSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WorkloadClassSpec> _parser = new pb::MessageParser<WorkloadClassSpec>(() => new WorkloadClassSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WorkloadClassSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorkloadClassSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorkloadClassSpec(WorkloadClassSpec other) : this() {
      image_ = other.image_;
      tasks_ = other.tasks_.Clone();
      frameworks_ = other.frameworks_ != null ? other.frameworks_.Clone() : null;
      podTemplate_ = other.podTemplate_ != null ? other.podTemplate_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorkloadClassSpec Clone() {
      return new WorkloadClassSpec(this);
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 1;
    private readonly static string ImageDefaultValue = "";

    private string image_;
    /// <summary>
    /// Image is the container image of the workload
    /// +kubebuilder:validation:Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Image {
      get { return image_ ?? ImageDefaultValue; }
      set {
        image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "image" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasImage {
      get { return image_ != null; }
    }
    /// <summary>Clears the value of the "image" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearImage() {
      image_ = null;
    }

    /// <summary>Field number for the "tasks" field.</summary>
    public const int TasksFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_tasks_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> tasks_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Tasks are the machine learning tasks supported by the image
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tasks {
      get { return tasks_; }
    }

    /// <summary>Field number for the "frameworks" field.</summary>
    public const int FrameworksFieldNumber = 3;
    private global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MLFrameworkList frameworks_;
    /// <summary>
    /// Frameworks are the machine learning framework supported by the workload
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MLFrameworkList Frameworks {
      get { return frameworks_; }
      set {
        frameworks_ = value;
      }
    }

    /// <summary>Field number for the "podTemplate" field.</summary>
    public const int PodTemplateFieldNumber = 4;
    private global::K8S.Io.Api.Core.V1.PodTemplateSpec podTemplate_;
    /// <summary>
    /// Template is the Pod specification for new trainers from this workload class.
    /// +kubebuilder:validation:Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Api.Core.V1.PodTemplateSpec PodTemplate {
      get { return podTemplate_; }
      set {
        podTemplate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WorkloadClassSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WorkloadClassSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Image != other.Image) return false;
      if(!tasks_.Equals(other.tasks_)) return false;
      if (!object.Equals(Frameworks, other.Frameworks)) return false;
      if (!object.Equals(PodTemplate, other.PodTemplate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasImage) hash ^= Image.GetHashCode();
      hash ^= tasks_.GetHashCode();
      if (frameworks_ != null) hash ^= Frameworks.GetHashCode();
      if (podTemplate_ != null) hash ^= PodTemplate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasImage) {
        output.WriteRawTag(10);
        output.WriteString(Image);
      }
      tasks_.WriteTo(output, _repeated_tasks_codec);
      if (frameworks_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Frameworks);
      }
      if (podTemplate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PodTemplate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasImage) {
        output.WriteRawTag(10);
        output.WriteString(Image);
      }
      tasks_.WriteTo(ref output, _repeated_tasks_codec);
      if (frameworks_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Frameworks);
      }
      if (podTemplate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PodTemplate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasImage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Image);
      }
      size += tasks_.CalculateSize(_repeated_tasks_codec);
      if (frameworks_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Frameworks);
      }
      if (podTemplate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PodTemplate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WorkloadClassSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasImage) {
        Image = other.Image;
      }
      tasks_.Add(other.tasks_);
      if (other.frameworks_ != null) {
        if (frameworks_ == null) {
          Frameworks = new global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MLFrameworkList();
        }
        Frameworks.MergeFrom(other.Frameworks);
      }
      if (other.podTemplate_ != null) {
        if (podTemplate_ == null) {
          PodTemplate = new global::K8S.Io.Api.Core.V1.PodTemplateSpec();
        }
        PodTemplate.MergeFrom(other.PodTemplate);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Image = input.ReadString();
            break;
          }
          case 18: {
            tasks_.AddEntriesFrom(input, _repeated_tasks_codec);
            break;
          }
          case 26: {
            if (frameworks_ == null) {
              Frameworks = new global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MLFrameworkList();
            }
            input.ReadMessage(Frameworks);
            break;
          }
          case 34: {
            if (podTemplate_ == null) {
              PodTemplate = new global::K8S.Io.Api.Core.V1.PodTemplateSpec();
            }
            input.ReadMessage(PodTemplate);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Image = input.ReadString();
            break;
          }
          case 18: {
            tasks_.AddEntriesFrom(ref input, _repeated_tasks_codec);
            break;
          }
          case 26: {
            if (frameworks_ == null) {
              Frameworks = new global::Github.Com.Metaprov.Modeldapi.Pkg.Apis.Catalog.V1Alpha1.MLFrameworkList();
            }
            input.ReadMessage(Frameworks);
            break;
          }
          case 34: {
            if (podTemplate_ == null) {
              PodTemplate = new global::K8S.Io.Api.Core.V1.PodTemplateSpec();
            }
            input.ReadMessage(PodTemplate);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
